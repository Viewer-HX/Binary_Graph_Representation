The analysis of 1 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/52dc3fc83d00907f1e8ac00459268eeb2609039d/patch_info.txt
{'1': {'before': 'a/libavcodec/ac3dec.c', 'after': 'b/libavcodec/ac3dec.c'}}
{'1': [{'before': '-1327,8', 'after': '+1327,8', 'function': 'static int ac3_decode_frame'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/52dc3fc83d00907f1e8ac00459268eeb2609039d---b/libavcodec/ac3dec.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/52dc3fc83d00907f1e8ac00459268eeb2609039d---a/libavcodec/ac3dec.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 2 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d352ca98a22537c3710ce3ee2f86562dfcf31db/patch_info.txt
{'1': {'before': 'a/libavformat/matroska.c', 'after': 'b/libavformat/matroska.c'}}
{'1': [{'before': '-2245,7', 'after': '+2245,7', 'function': 'matroska_read_header '}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d352ca98a22537c3710ce3ee2f86562dfcf31db---b/libavformat/matroska.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d352ca98a22537c3710ce3ee2f86562dfcf31db---a/libavformat/matroska.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 3 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/556aab8f11b045a21182eee32413aa78d5c8539b/patch_info.txt
{'1': {'before': 'a/libavfilter/avfilter.c', 'after': 'b/libavfilter/avfilter.c'}}
{'1': [{'before': '-320,10', 'after': '+320,9', 'function': 'static const char *filter_name'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/556aab8f11b045a21182eee32413aa78d5c8539b---b/libavfilter/avfilter.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/556aab8f11b045a21182eee32413aa78d5c8539b---a/libavfilter/avfilter.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 4 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/53f7c43fcc97f4e5178a707033cee8749eaf912e/patch_info.txt
{'1': {'before': 'a/libavformat/utils.c', 'after': 'b/libavformat/utils.c'}}
{'1': [{'before': '-1348,6', 'after': '+1348,12', 'function': 'int av_seek_frame_binary'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/53f7c43fcc97f4e5178a707033cee8749eaf912e---b/libavformat/utils.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/53f7c43fcc97f4e5178a707033cee8749eaf912e---a/libavformat/utils.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 5 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/559fd1e79524ca47efde195e28feb4499dd48761/patch_info.txt
{'1': {'before': 'a/libavformat/nutdec.c', 'after': 'b/libavformat/nutdec.c'}}
{'1': [{'before': '-737,13', 'after': '+737,12', 'function': 'static int nut_read_packet'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/559fd1e79524ca47efde195e28feb4499dd48761---b/libavformat/nutdec.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/559fd1e79524ca47efde195e28feb4499dd48761---a/libavformat/nutdec.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 6 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/593d2326ef985cdffe413df629419938f7b07c4c/patch_info.txt
{'1': {'before': 'a/libavcodec/dv.c', 'after': 'b/libavcodec/dv.c'}}
{'1': [{'before': '-307,7', 'after': '+307,7', 'function': 'av_cold int ff_dvvideo_init'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/593d2326ef985cdffe413df629419938f7b07c4c---b/libavcodec/dv.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/593d2326ef985cdffe413df629419938f7b07c4c---a/libavcodec/dv.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 7 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/patch_info.txt
{'1': {'before': 'a/libavcodec/flashsvenc.c', 'after': 'b/libavcodec/flashsvenc.c'}}
{'1': [{'before': '-230,10', 'after': '+230,9', 'function': 'static int flashsv_encode_frame'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b---b/libavcodec/flashsvenc.c
The case of compiler gcc with optimization no.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/gcc_after/no: directory not exists.
The case of compiler gcc with optimization O0.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/gcc_after/O0: directory not exists.
The case of compiler gcc with optimization O1.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/gcc_after/O1: directory not exists.
The case of compiler gcc with optimization O2.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/gcc_after/O2: directory not exists.
The case of compiler gcc with optimization O3.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/gcc_after/O3: directory not exists.
The case of compiler gcc with optimization Os.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/gcc_after/Os: directory not exists.
The case of compiler clang with optimization no.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/clang_after/no: directory not exists.
The case of compiler clang with optimization O0.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/clang_after/O0: directory not exists.
The case of compiler clang with optimization O1.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/clang_after/O1: directory not exists.
The case of compiler clang with optimization O2.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/clang_after/O2: directory not exists.
The case of compiler clang with optimization O3.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/clang_after/O3: directory not exists.
The case of compiler clang with optimization Os.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/clang_after/Os: directory not exists.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b---a/libavcodec/flashsvenc.c
The case of compiler gcc with optimization no.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/gcc_before/no: directory not exists.
The case of compiler gcc with optimization O0.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/gcc_before/O0: directory not exists.
The case of compiler gcc with optimization O1.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/gcc_before/O1: directory not exists.
The case of compiler gcc with optimization O2.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/gcc_before/O2: directory not exists.
The case of compiler gcc with optimization O3.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/gcc_before/O3: directory not exists.
The case of compiler gcc with optimization Os.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/gcc_before/Os: directory not exists.
The case of compiler clang with optimization no.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/clang_before/no: directory not exists.
The case of compiler clang with optimization O0.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/clang_before/O0: directory not exists.
The case of compiler clang with optimization O1.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/clang_before/O1: directory not exists.
The case of compiler clang with optimization O2.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/clang_before/O2: directory not exists.
The case of compiler clang with optimization O3.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/clang_before/O3: directory not exists.
The case of compiler clang with optimization Os.
Patched source code file: flashsvenc.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59ef6bded5d01e4debf08dc65cfd4a088652759b/clang_before/Os: directory not exists.
The analysis of 8 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/53a1e82bd25f926679a165a6c632ccc799fddb3c/patch_info.txt
{'1': {'before': 'a/libavformat/matroskadec.c', 'after': 'b/libavformat/matroskadec.c'}}
{'1': [{'before': '-1428,6', 'after': '+1433,147', 'function': 'matroska_add_stream '}, {'before': '-2551,14', 'after': '+2697,21', 'function': 'matroska_parse_block'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/53a1e82bd25f926679a165a6c632ccc799fddb3c---b/libavformat/matroskadec.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/53a1e82bd25f926679a165a6c632ccc799fddb3c---a/libavformat/matroskadec.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 9 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/56a1000917694b2277064c5573b0dd818ad7a379/patch_info.txt
{'1': {'before': 'a/libavformat/utils.c', 'after': 'b/libavformat/utils.c'}}
{'1': [{'before': '-371,7', 'after': '+371,7', 'function': 'AVInputFormat *av_probe_input_format2'}, {'before': '-379,6', 'after': '+379,7', 'function': 'AVInputFormat *av_probe_input_format2'}, {'before': '-399,6', 'after': '+400,16', 'function': 'AVInputFormat *av_probe_input_format2'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/56a1000917694b2277064c5573b0dd818ad7a379---b/libavformat/utils.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/56a1000917694b2277064c5573b0dd818ad7a379---a/libavformat/utils.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 10 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57848e9abd4e930ad5f8153f4d2623cc34977624/patch_info.txt
{'1': {'before': 'a/libavformat/matroskaenc.c', 'after': 'b/libavformat/matroskaenc.c'}}
{'1': [{'before': '-130,7', 'after': '+130,12', 'function': 'static void put_ebml_string'}, {'before': '-174,10', 'after': '+179,15', 'function': 'static void put_xiph_size'}, {'before': '-220,7', 'after': '+230,13', 'function': 'static int mkv_add_seekhead_entry'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57848e9abd4e930ad5f8153f4d2623cc34977624---b/libavformat/matroskaenc.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57848e9abd4e930ad5f8153f4d2623cc34977624---a/libavformat/matroskaenc.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 11 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59cca5040e8da935833fb78510cfb1db124a9528/patch_info.txt
{'1': {'before': 'a/libavcodec/iff.c', 'after': 'b/libavcodec/iff.c'}}
{'1': [{'before': '-115,6', 'after': '+115,8', 'function': 'static av_cold int decode_init'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59cca5040e8da935833fb78510cfb1db124a9528---b/libavcodec/iff.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/59cca5040e8da935833fb78510cfb1db124a9528---a/libavcodec/iff.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 12 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ddd075daf15f631ce6607701e6925bea907ca1e/patch_info.txt
{'1': {'before': 'a/libavcodec/h263.c', 'after': 'b/libavcodec/h263.c'}}
{'1': [{'before': '-73,14', 'after': '+64,24', 'function': 'static inline int mpeg4_decode_dc'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ddd075daf15f631ce6607701e6925bea907ca1e---b/libavcodec/h263.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ddd075daf15f631ce6607701e6925bea907ca1e---a/libavcodec/h263.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 13 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/50c93f74a6dd4f0dcca206ca783471bbca8850e2/patch_info.txt
{'1': {'before': 'a/libavcodec/mpeg12.c', 'after': 'b/libavcodec/mpeg12.c'}}
{'1': [{'before': '-2205,8', 'after': '+2205,8', 'function': 'static int mpeg_decode_slice'}, {'before': '-2221,8', 'after': '+2221,8', 'function': 'static int mpeg_decode_slice'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/50c93f74a6dd4f0dcca206ca783471bbca8850e2---b/libavcodec/mpeg12.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/50c93f74a6dd4f0dcca206ca783471bbca8850e2---a/libavcodec/mpeg12.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 14 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/52069c4d3c92f68605fadf012ab0da594ee9bae4/patch_info.txt
{'1': {'before': 'a/libavcodec/mpeg12.c', 'after': 'b/libavcodec/mpeg12.c'}}
{'1': [{'before': '-1673,10', 'after': '+1673,7', 'function': 'static int mpeg_decode_slice'}, {'before': '-2390,6', 'after': '+2387,11', 'function': 'static int decode_chunks'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/52069c4d3c92f68605fadf012ab0da594ee9bae4---b/libavcodec/mpeg12.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/52069c4d3c92f68605fadf012ab0da594ee9bae4---a/libavcodec/mpeg12.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 15 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5983d1c480b589e97770a11237a47d93b2a0e804/patch_info.txt
{'1': {'before': 'a/libavcodec/ra144.c', 'after': 'b/libavcodec/ra144.c'}}
{'1': [{'before': '-97,14', 'after': '+97,13', 'function': 'static void eval_coefs'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5983d1c480b589e97770a11237a47d93b2a0e804---b/libavcodec/ra144.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5983d1c480b589e97770a11237a47d93b2a0e804---a/libavcodec/ra144.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 16 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/patch_info.txt
{'1': {'before': 'a/ffserver.c', 'after': 'b/ffserver.c'}}
{'1': [{'before': '-3010,6', 'after': '+3010,7', 'function': 'static void rtsp_cmd_describe'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19---b/ffserver.c
The case of compiler gcc with optimization no.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/gcc_after/no: directory not exists.
The case of compiler gcc with optimization O0.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/gcc_after/O0: directory not exists.
The case of compiler gcc with optimization O1.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/gcc_after/O1: directory not exists.
The case of compiler gcc with optimization O2.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/gcc_after/O2: directory not exists.
The case of compiler gcc with optimization O3.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/gcc_after/O3: directory not exists.
The case of compiler gcc with optimization Os.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/gcc_after/Os: directory not exists.
The case of compiler clang with optimization no.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/clang_after/no: directory not exists.
The case of compiler clang with optimization O0.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/clang_after/O0: directory not exists.
The case of compiler clang with optimization O1.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/clang_after/O1: directory not exists.
The case of compiler clang with optimization O2.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/clang_after/O2: directory not exists.
The case of compiler clang with optimization O3.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/clang_after/O3: directory not exists.
The case of compiler clang with optimization Os.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/clang_after/Os: directory not exists.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19---a/ffserver.c
The case of compiler gcc with optimization no.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/gcc_before/no: directory not exists.
The case of compiler gcc with optimization O0.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/gcc_before/O0: directory not exists.
The case of compiler gcc with optimization O1.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/gcc_before/O1: directory not exists.
The case of compiler gcc with optimization O2.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/gcc_before/O2: directory not exists.
The case of compiler gcc with optimization O3.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/gcc_before/O3: directory not exists.
The case of compiler gcc with optimization Os.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/gcc_before/Os: directory not exists.
The case of compiler clang with optimization no.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/clang_before/no: directory not exists.
The case of compiler clang with optimization O0.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/clang_before/O0: directory not exists.
The case of compiler clang with optimization O1.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/clang_before/O1: directory not exists.
The case of compiler clang with optimization O2.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/clang_before/O2: directory not exists.
The case of compiler clang with optimization O3.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/clang_before/O3: directory not exists.
The case of compiler clang with optimization Os.
Patched source code file: ffserver.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/577ee94871b0062eeed34508ff2099704252fa19/clang_before/Os: directory not exists.
The analysis of 17 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5f1836a7de6e21381ad37533737d38c3fb62d3d1/patch_info.txt
{}
{}
The analysis of 18 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/patch_info.txt
{'1': {'before': 'a/ffmpeg.c', 'after': 'b/ffmpeg.c'}}
{'1': [{'before': '-699,7', 'after': '+699,7', 'function': 'void print_report'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda---b/ffmpeg.c
The case of compiler gcc with optimization no.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/gcc_after/no: directory not exists.
The case of compiler gcc with optimization O0.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/gcc_after/O0: directory not exists.
The case of compiler gcc with optimization O1.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/gcc_after/O1: directory not exists.
The case of compiler gcc with optimization O2.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/gcc_after/O2: directory not exists.
The case of compiler gcc with optimization O3.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/gcc_after/O3: directory not exists.
The case of compiler gcc with optimization Os.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/gcc_after/Os: directory not exists.
The case of compiler clang with optimization no.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/clang_after/no: directory not exists.
The case of compiler clang with optimization O0.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/clang_after/O0: directory not exists.
The case of compiler clang with optimization O1.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/clang_after/O1: directory not exists.
The case of compiler clang with optimization O2.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/clang_after/O2: directory not exists.
The case of compiler clang with optimization O3.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/clang_after/O3: directory not exists.
The case of compiler clang with optimization Os.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/clang_after/Os: directory not exists.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda---a/ffmpeg.c
The case of compiler gcc with optimization no.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/gcc_before/no: directory not exists.
The case of compiler gcc with optimization O0.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/gcc_before/O0: directory not exists.
The case of compiler gcc with optimization O1.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/gcc_before/O1: directory not exists.
The case of compiler gcc with optimization O2.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/gcc_before/O2: directory not exists.
The case of compiler gcc with optimization O3.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/gcc_before/O3: directory not exists.
The case of compiler gcc with optimization Os.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/gcc_before/Os: directory not exists.
The case of compiler clang with optimization no.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/clang_before/no: directory not exists.
The case of compiler clang with optimization O0.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/clang_before/O0: directory not exists.
The case of compiler clang with optimization O1.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/clang_before/O1: directory not exists.
The case of compiler clang with optimization O2.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/clang_before/O2: directory not exists.
The case of compiler clang with optimization O3.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/clang_before/O3: directory not exists.
The case of compiler clang with optimization Os.
Patched source code file: ffmpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d9827bcf62a543d95ea27469e3e06153f352cda/clang_before/Os: directory not exists.
The analysis of 19 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5f3eca121e8cb7896e04fbe0e489f886c6143778/patch_info.txt
{}
{}
The analysis of 20 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/patch_info.txt
{'1': {'before': 'a/libavcodec/ra144.c', 'after': 'b/libavcodec/ra144.c'}}
{'1': [{'before': '-214,16', 'after': '+214,14', 'function': 'static void do_output_subblock'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc---b/libavcodec/ra144.c
The case of compiler gcc with optimization no.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_after/no/ra144_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_after/no/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler gcc with optimization O0.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_after/O0/ra144_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_after/O0/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler gcc with optimization O1.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_after/O1/ra144_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_after/O1/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler gcc with optimization O2.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_after/O2/ra144_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_after/O2/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler gcc with optimization O3.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_after/O3/ra144_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_after/O3/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler gcc with optimization Os.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_after/Os/ra144_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_after/Os/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler clang with optimization no.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_after/no/ra144.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_after/no/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler clang with optimization O0.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_after/O0/ra144.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_after/O0/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler clang with optimization O1.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_after/O1/ra144.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_after/O1/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler clang with optimization O2.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_after/O2/ra144.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_after/O2/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler clang with optimization O3.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_after/O3/ra144.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_after/O3/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler clang with optimization Os.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_after/Os/ra144.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_after/Os/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc---a/libavcodec/ra144.c
The case of compiler gcc with optimization no.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_before/no/ra144_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_before/no/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler gcc with optimization O0.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_before/O0/ra144_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_before/O0/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler gcc with optimization O1.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_before/O1/ra144_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_before/O1/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler gcc with optimization O2.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_before/O2/ra144_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_before/O2/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler gcc with optimization O3.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_before/O3/ra144_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_before/O3/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler gcc with optimization Os.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_before/Os/ra144_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/gcc_before/Os/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler clang with optimization no.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_before/no/ra144.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_before/no/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler clang with optimization O0.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_before/O0/ra144.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_before/O0/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler clang with optimization O1.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_before/O1/ra144.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_before/O1/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler clang with optimization O2.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_before/O2/ra144.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_before/O2/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler clang with optimization O3.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_before/O3/ra144.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_before/O3/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The case of compiler clang with optimization Os.
Patched source code file: ra144.c
Patched function: 1---static void do_output_subblock 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_before/Os/ra144.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5012cf88a304a48629821cf29e3a795a647d17fc/clang_before/Os/ra144.o
Binary file does not exist.
{'do_output_subblock': []}
The analysis of 21 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/patch_info.txt
{'1': {'before': 'a/libavformat/avidec.c', 'after': 'b/libavformat/avidec.c'}}
{'1': [{'before': '-254,7', 'after': '+254,8', 'function': 'static int avi_read_packet'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c---b/libavformat/avidec.c
The case of compiler gcc with optimization no.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_after/no/avidec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_after/no/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler gcc with optimization O0.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_after/O0/avidec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_after/O0/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler gcc with optimization O1.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_after/O1/avidec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_after/O1/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler gcc with optimization O2.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_after/O2/avidec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_after/O2/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler gcc with optimization O3.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_after/O3/avidec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_after/O3/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler gcc with optimization Os.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_after/Os/avidec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_after/Os/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler clang with optimization no.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_after/no/avidec.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_after/no/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler clang with optimization O0.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_after/O0/avidec.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_after/O0/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler clang with optimization O1.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_after/O1/avidec.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_after/O1/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler clang with optimization O2.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_after/O2/avidec.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_after/O2/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler clang with optimization O3.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_after/O3/avidec.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_after/O3/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler clang with optimization Os.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_after/Os/avidec.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_after/Os/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c---a/libavformat/avidec.c
The case of compiler gcc with optimization no.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_before/no/avidec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_before/no/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler gcc with optimization O0.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_before/O0/avidec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_before/O0/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler gcc with optimization O1.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_before/O1/avidec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_before/O1/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler gcc with optimization O2.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_before/O2/avidec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_before/O2/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler gcc with optimization O3.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_before/O3/avidec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_before/O3/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler gcc with optimization Os.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_before/Os/avidec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/gcc_before/Os/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler clang with optimization no.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_before/no/avidec.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_before/no/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler clang with optimization O0.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_before/O0/avidec.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_before/O0/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler clang with optimization O1.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_before/O1/avidec.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_before/O1/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler clang with optimization O2.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_before/O2/avidec.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_before/O2/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler clang with optimization O3.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_before/O3/avidec.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_before/O3/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The case of compiler clang with optimization Os.
Patched source code file: avidec.c
Patched function: 1---static int avi_read_packet 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_before/Os/avidec.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/57d03758491d5bdd40a096e0930bf4d0c154485c/clang_before/Os/avidec.o
Binary file does not exist.
{'avi_read_packet': []}
The analysis of 22 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/50464a1e835cbc6a5a80099a8a01be11af72ca7b/patch_info.txt
{}
{}
The analysis of 23 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/patch_info.txt
{'1': {'before': 'a/libswscale/swscale-example.c', 'after': 'b/libswscale/swscale-example.c'}}
{'1': [{'before': '-66,11', 'after': '+66,15', 'function': 'static int doTest'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d---b/libswscale/swscale-example.c
The case of compiler gcc with optimization no.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/gcc_after/no: directory not exists.
The case of compiler gcc with optimization O0.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/gcc_after/O0: directory not exists.
The case of compiler gcc with optimization O1.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/gcc_after/O1: directory not exists.
The case of compiler gcc with optimization O2.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/gcc_after/O2: directory not exists.
The case of compiler gcc with optimization O3.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/gcc_after/O3: directory not exists.
The case of compiler gcc with optimization Os.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/gcc_after/Os: directory not exists.
The case of compiler clang with optimization no.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/clang_after/no: directory not exists.
The case of compiler clang with optimization O0.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/clang_after/O0: directory not exists.
The case of compiler clang with optimization O1.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/clang_after/O1: directory not exists.
The case of compiler clang with optimization O2.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/clang_after/O2: directory not exists.
The case of compiler clang with optimization O3.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/clang_after/O3: directory not exists.
The case of compiler clang with optimization Os.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/clang_after/Os: directory not exists.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d---a/libswscale/swscale-example.c
The case of compiler gcc with optimization no.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/gcc_before/no: directory not exists.
The case of compiler gcc with optimization O0.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/gcc_before/O0: directory not exists.
The case of compiler gcc with optimization O1.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/gcc_before/O1: directory not exists.
The case of compiler gcc with optimization O2.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/gcc_before/O2: directory not exists.
The case of compiler gcc with optimization O3.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/gcc_before/O3: directory not exists.
The case of compiler gcc with optimization Os.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/gcc_before/Os: directory not exists.
The case of compiler clang with optimization no.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/clang_before/no: directory not exists.
The case of compiler clang with optimization O0.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/clang_before/O0: directory not exists.
The case of compiler clang with optimization O1.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/clang_before/O1: directory not exists.
The case of compiler clang with optimization O2.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/clang_before/O2: directory not exists.
The case of compiler clang with optimization O3.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/clang_before/O3: directory not exists.
The case of compiler clang with optimization Os.
Patched source code file: swscale-example.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5d5a8813fc4e771850770ca85ec22ce1a785af5d/clang_before/Os: directory not exists.
The analysis of 24 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/patch_info.txt
{'1': {'before': 'a/libavcodec/mjpeg.c', 'after': 'b/libavcodec/mjpeg.c'}}
{'1': [{'before': '-1832,9', 'after': '+1832,9', 'function': 'static int mjpeg_decode_frame'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f---b/libavcodec/mjpeg.c
The case of compiler gcc with optimization no.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/gcc_after/no: directory not exists.
The case of compiler gcc with optimization O0.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/gcc_after/O0: directory not exists.
The case of compiler gcc with optimization O1.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/gcc_after/O1: directory not exists.
The case of compiler gcc with optimization O2.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/gcc_after/O2: directory not exists.
The case of compiler gcc with optimization O3.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/gcc_after/O3: directory not exists.
The case of compiler gcc with optimization Os.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/gcc_after/Os: directory not exists.
The case of compiler clang with optimization no.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/clang_after/no: directory not exists.
The case of compiler clang with optimization O0.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/clang_after/O0: directory not exists.
The case of compiler clang with optimization O1.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/clang_after/O1: directory not exists.
The case of compiler clang with optimization O2.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/clang_after/O2: directory not exists.
The case of compiler clang with optimization O3.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/clang_after/O3: directory not exists.
The case of compiler clang with optimization Os.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/clang_after/Os: directory not exists.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f---a/libavcodec/mjpeg.c
The case of compiler gcc with optimization no.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/gcc_before/no: directory not exists.
The case of compiler gcc with optimization O0.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/gcc_before/O0: directory not exists.
The case of compiler gcc with optimization O1.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/gcc_before/O1: directory not exists.
The case of compiler gcc with optimization O2.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/gcc_before/O2: directory not exists.
The case of compiler gcc with optimization O3.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/gcc_before/O3: directory not exists.
The case of compiler gcc with optimization Os.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/gcc_before/Os: directory not exists.
The case of compiler clang with optimization no.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/clang_before/no: directory not exists.
The case of compiler clang with optimization O0.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/clang_before/O0: directory not exists.
The case of compiler clang with optimization O1.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/clang_before/O1: directory not exists.
The case of compiler clang with optimization O2.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/clang_before/O2: directory not exists.
The case of compiler clang with optimization O3.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/clang_before/O3: directory not exists.
The case of compiler clang with optimization Os.
Patched source code file: mjpeg.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/55429b553429b9c2f3f16e1b5d5038c8b6f45d9f/clang_before/Os: directory not exists.
The analysis of 25 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/patch_info.txt
{'1': {'before': 'a/libavcodec/flacdec.c', 'after': 'b/libavcodec/flacdec.c'}}
{'1': [{'before': '-639,6', 'after': '+639,11', 'function': 'static int flac_decode_frame'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218---b/libavcodec/flacdec.c
The case of compiler gcc with optimization no.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_after/no/flacdec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_after/no/flacdec.o
Binary file does not exist.
{'flac_decode_frame': []}
The case of compiler gcc with optimization O0.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_after/O0/flacdec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_after/O0/flacdec.o
Binary file does not exist.
{'flac_decode_frame': []}
The case of compiler gcc with optimization O1.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_after/O1/flacdec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_after/O1/flacdec.o
Binary file does not exist.
{'flac_decode_frame': []}
The case of compiler gcc with optimization O2.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_after/O2/flacdec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_after/O2/flacdec.o
Binary file does not exist.
{'flac_decode_frame': []}
The case of compiler gcc with optimization O3.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_after/O3/flacdec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_after/O3/flacdec.o
Binary file does not exist.
{'flac_decode_frame': []}
The case of compiler gcc with optimization Os.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_after/Os/flacdec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_after/Os/flacdec.o
Binary file does not exist.
{'flac_decode_frame': []}
The case of compiler clang with optimization no.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/no/flacdec.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/no/flacdec.s---flac_decode_frame---after
function id: 10
function flag: True
There are 644 instructions for function: flac_decode_frame in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '639', 'end': 649}, 'before': {'start': '639', 'end': 644}}}]
[{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 193, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 194, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 195, 'instruction': 'movq\t0x80(%rsp), %rsi'}, {'instIndex': 196, 'instruction': 'movl\t0x7c(%rsp), %edx'}, {'instIndex': 197, 'instruction': 'shll\t$3, %edx'}, {'instIndex': 198, 'instruction': 'callq\tinit_get_bits'}, {'instIndex': 199, 'instruction': 'cmpl\t$0x18, 0x7c(%rsp)'}, {'instIndex': 200, 'instruction': 'jge\t.LBB10_31'}, {'instIndex': 201, 'instruction': 'jmp\t.LBB10_91'}, {'instIndex': 202, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 203, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 204, 'instruction': 'movl\t$0x20, %esi'}, {'instIndex': 205, 'instruction': 'callq\tshow_bits_long'}, {'instIndex': 206, 'instruction': 'cmpl\t$0x664c6143, %eax               # imm = 0x0x298C0x17ff'}, {'instIndex': 207, 'instruction': 'jne\t.LBB10_35'}, {'instIndex': 208, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 209, 'instruction': 'callq\tmetadata_parse'}, {'instIndex': 210, 'instruction': 'cmpl\t$0, %eax'}, {'instIndex': 211, 'instruction': 'je\t.LBB10_34'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/no/flacdec.o
Patched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/no/flacdec.o---after
The extraction of function: flac_decode_frame
Analyzing the binaries to generate subCFGs from patched function ...
It has 580 nodes and 1009 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 644 instructions in binary file.
[4197033, 4197062, 4197069, 4197074, 4197093, 4197100, 4197110]
The execution time of patched subCFG information extraction via angr: 0:00:00.987385
{'flac_decode_frame': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400ac6>, <DisassemblerInsn "jge" for 0x400acb>]'}, {'block_Idx': 26, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b29>, <DisassemblerInsn "add" for 0x400b2e>, <DisassemblerInsn "mov" for 0x400b32>, <DisassemblerInsn "call" for 0x400b37>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aa9>, <DisassemblerInsn "add" for 0x400aae>, <DisassemblerInsn "mov" for 0x400ab2>, <DisassemblerInsn "mov" for 0x400aba>, <DisassemblerInsn "shl" for 0x400abe>, <DisassemblerInsn "call" for 0x400ac1>]'}, {'block_Idx': 25, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aec>, <DisassemblerInsn "call" for 0x400af1>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007f0>, <DisassemblerInsn "mov" for 0x4007f3>, <DisassemblerInsn "mov" for 0x4007f8>, <DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400acd>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ad2>, <DisassemblerInsn "add" for 0x400ad7>, <DisassemblerInsn "mov" for 0x400adb>, <DisassemblerInsn "call" for 0x400ae0>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400ae5>, <DisassemblerInsn "jne" for 0x400aea>]'}, {'block_Idx': 42, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400b24>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40111a>, <DisassemblerInsn "add" for 0x40111f>, <DisassemblerInsn "call" for 0x401123>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400aa7>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400afb>, <DisassemblerInsn "mov" for 0x400b00>, <DisassemblerInsn "xor" for 0x400b04>, <DisassemblerInsn "lea" for 0x400b06>, <DisassemblerInsn "mov" for 0x400b0d>, <DisassemblerInsn "call" for 0x400b0f>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400af6>, <DisassemblerInsn "je" for 0x400af9>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}], 'cfg_block_detailed_info': [{'block_Idx': 9, 'blockInsts': ['<cmp~~dword ptr [rsp + 0x7c], 0x18>', '<jge~~0x400ad2>']}, {'block_Idx': 26, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x401570>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<mov~~edx, dword ptr [rsp + 0x7c]>', '<shl~~edx, 3>', '<call~~0x4002e0>']}, {'block_Idx': 25, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<call~~0x4013f0>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}, {'block_Idx': 12, 'blockInsts': ['<jmp~~0x40111a>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x20>', '<call~~0x401380>']}, {'block_Idx': 18, 'blockInsts': ['<cmp~~eax, 0x664c6143>', '<jne~~0x400b29>']}, {'block_Idx': 42, 'blockInsts': ['<jmp~~0x40111a>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<call~~0x4015f0>']}, {'block_Idx': 57, 'blockInsts': ['<jmp~~0x400aa9>']}, {'block_Idx': 43, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x23f2]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 33, 'blockInsts': ['<cmp~~eax, 0>', '<je~~0x400b24>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}], 'cfg_edge_info': [(12, 17), (9, 13), (33, 42), (18, 26), (9, 12), (33, 43), (18, 25), (13, 18), (25, 33), (5, 9), (7, 5), (2, 5), (57, 5)]}]}
{'flac_decode_frame': [4197033, 4197062, 4197069, 4197074, 4197093, 4197100, 4197110]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/no/flacdec.o---after
The extraction of function: flac_decode_frame
[4197033, 4197062, 4197069, 4197074, 4197093, 4197100, 4197110]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 832 nodes and 1246 edges in CFGEmulated.
It has 832 nodes and 1468 edges in CDG.
It has 11203 nodes and 25120 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4197033, 4197062, 4197069, 4197074, 4197093, 4197100, 4197110]
{4197378, 4196366, 4197906, 4197403, 4196380, 4198430, 4196404, 4196926, 4197449, 4197471, 4197986, 4196459, 4198002, 4197491, 4198518, 4198007, 4196474, 4197499, 4198018, 4198020, 4197517, 4197008, 4197525, 4197015, 4198051, 4197031, 4197543, 4197033, 4198059, 4197554, 4198077, 4197062, 4197069, 4197074, 4198610, 4196570, 4196578, 4198626, 4198628, 4197093, 4196586, 4197610, 4197100, 4198130, 4197110, 4197115, 4196096, 4196615, 4197140, 4198682, 4197156, 4197668, 4198696, 4197161, 4196654, 4197686, 4197180, 4196670, 4198206, 4198721, 4197702, 4197707, 4197204, 4197718, 4197720, 4196700, 4198754, 4197229, 4197751, 4197243, 4197759, 4196744, 4198797, 4198286, 4197777, 4197268, 4196759, 4198811, 4198302, 4196257, 4198307, 4197287, 4196268, 4198318, 4198320, 4196279, 4197304, 4196798, 4196287, 4197312, 4197314, 4197830, 4198351, 4198868, 4197335, 4198359, 4197340, 4198879, 4198377, 4197359, 4196336, 4196854, 4197373, 4196351}
[152, 83, 207, 197, 225, 153, 577, 6, 92, 37, 147, 216, 70, 222, 36, 201, 116, 175, 227, 34, 178, 128, 126, 198, 188, 150, 208, 219, 199, 163, 117, 195, 213, 176, 173, 158, 56, 17, 73, 94, 122, 190, 55, 43, 50, 211, 166, 21, 10, 1, 164, 531, 80, 4, 111, 205, 217, 209, 563, 47, 51, 28, 110, 210, 172, 187, 19, 16, 82, 8, 186, 79, 115, 212, 2, 545, 125, 26, 57, 157, 200, 66, 179, 529, 107, 527, 76, 162, 63, 30, 562, 202, 555, 64, 42, 206, 194, 23, 3, 174, 560, 27, 35, 25, 5, 33, 44, 177, 101, 22, 528, 32, 103, 165, 12, 221, 11, 31, 226, 0, 220, 184, 24, 100, 343, 95, 196, 18, 58, 218]
The execution time of patched slicing information extraction via angr: 0:06:03.896242
{'flac_decode_frame': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 152, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c02>, <DisassemblerInsn "mov" for 0x400c07>, <DisassemblerInsn "xor" for 0x400c0b>, <DisassemblerInsn "lea" for 0x400c0d>, <DisassemblerInsn "mov" for 0x400c14>, <DisassemblerInsn "call" for 0x400c16>]'}, {'block_Idx': 83, 'blockInsts': '[<DisassemblerInsn "sub" for 0x4013f0>, <DisassemblerInsn "mov" for 0x4013f4>, <DisassemblerInsn "mov" for 0x4013f9>, <DisassemblerInsn "add" for 0x4013fe>, <DisassemblerInsn "mov" for 0x401402>, <DisassemblerInsn "call" for 0x401407>]'}, {'block_Idx': 207, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d24>, <DisassemblerInsn "add" for 0x400d28>, <DisassemblerInsn "mov" for 0x400d2b>, <DisassemblerInsn "jmp" for 0x400d2f>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cb2>, <DisassemblerInsn "movsxd" for 0x400cb7>, <DisassemblerInsn "mov" for 0x400cbc>, <DisassemblerInsn "movsxd" for 0x400cc1>, <DisassemblerInsn "mov" for 0x400cc6>, <DisassemblerInsn "mov" for 0x400cc9>, <DisassemblerInsn "mov" for 0x400cce>, <DisassemblerInsn "shl" for 0x400cd1>, <DisassemblerInsn "mov" for 0x400cd3>, <DisassemblerInsn "mov" for 0x400cd5>, <DisassemblerInsn "mov" for 0x400cda>, <DisassemblerInsn "add" for 0x400cdd>, <DisassemblerInsn "mov" for 0x400ce1>, <DisassemblerInsn "mov" for 0x400ce6>, <DisassemblerInsn "jmp" for 0x400ce8>]'}, {'block_Idx': 225, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d7f>, <DisassemblerInsn "mov" for 0x400d83>, <DisassemblerInsn "cmp" for 0x400d88>, <DisassemblerInsn "jge" for 0x400d8b>]'}, {'block_Idx': 153, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c49>, <DisassemblerInsn "mov" for 0x400c4e>, <DisassemblerInsn "mov" for 0x400c51>, <DisassemblerInsn "sub" for 0x400c55>, <DisassemblerInsn "ja" for 0x400c59>]'}, {'block_Idx': 577, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400360>, <DisassemblerInsn "mov" for 0x400365>, <DisassemblerInsn "mov" for 0x400369>, <DisassemblerInsn "mov" for 0x40036e>, <DisassemblerInsn "mov" for 0x400371>, <DisassemblerInsn "mov" for 0x400375>, <DisassemblerInsn "mov" for 0x40037d>, <DisassemblerInsn "mov" for 0x400382>, <DisassemblerInsn "mov" for 0x400385>, <DisassemblerInsn "sar" for 0x400389>, <DisassemblerInsn "movsxd" for 0x40038c>, <DisassemblerInsn "mov" for 0x40038f>, <DisassemblerInsn "mov" for 0x400392>, <DisassemblerInsn "mov" for 0x400396>, <DisassemblerInsn "ror" for 0x40039a>, <DisassemblerInsn "ror" for 0x40039e>, <DisassemblerInsn "ror" for 0x4003a1>, <DisassemblerInsn "mov" for 0x4003a5>, <DisassemblerInsn "mov" for 0x4003a9>, <DisassemblerInsn "mov" for 0x4003ad>, <DisassemblerInsn "and" for 0x4003b1>, <DisassemblerInsn "shl" for 0x4003b4>, <DisassemblerInsn "mov" for 0x4003b6>, <DisassemblerInsn "mov" for 0x4003ba>, <DisassemblerInsn "add" for 0x4003be>, <DisassemblerInsn "mov" for 0x4003c2>, <DisassemblerInsn "mov" for 0x4003c6>, <DisassemblerInsn "mov" for 0x4003ca>, <DisassemblerInsn "mov" for 0x4003cf>, <DisassemblerInsn "ret" for 0x4003d2>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40080e>, <DisassemblerInsn "cmp" for 0x400813>, <DisassemblerInsn "jb" for 0x40081a>]'}, {'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b3c>, <DisassemblerInsn "mov" for 0x400b40>, <DisassemblerInsn "and" for 0x400b44>, <DisassemblerInsn "cmp" for 0x400b49>, <DisassemblerInsn "je" for 0x400b4e>]'}, {'block_Idx': 37, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "mov" for 0x4009a2>, <DisassemblerInsn "add" for 0x4009a7>, <DisassemblerInsn "add" for 0x4009ad>, <DisassemblerInsn "mov" for 0x4009b1>, <DisassemblerInsn "cmp" for 0x4009b6>, <DisassemblerInsn "jbe" for 0x4009bc>]'}, {'block_Idx': 147, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b3d>, <DisassemblerInsn "add" for 0x401b41>, <DisassemblerInsn "ret" for 0x401b45>]'}, {'block_Idx': 216, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e62>, <DisassemblerInsn "add" for 0x400e66>, <DisassemblerInsn "mov" for 0x400e69>, <DisassemblerInsn "jmp" for 0x400e6d>]'}, {'block_Idx': 70, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a97>, <DisassemblerInsn "mov" for 0x400a9b>, <DisassemblerInsn "jmp" for 0x400aa2>]'}, {'block_Idx': 222, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400f8c>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40095c>, <DisassemblerInsn "mov" for 0x400961>, <DisassemblerInsn "mov" for 0x400968>, <DisassemblerInsn "add" for 0x40096d>, <DisassemblerInsn "mov" for 0x400974>, <DisassemblerInsn "mov" for 0x400979>, <DisassemblerInsn "add" for 0x40097f>, <DisassemblerInsn "call" for 0x400983>]'}, {'block_Idx': 201, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ebd>, <DisassemblerInsn "mov" for 0x400ec2>, <DisassemblerInsn "movsxd" for 0x400ec6>, <DisassemblerInsn "mov" for 0x400ecb>, <DisassemblerInsn "mov" for 0x400ece>, <DisassemblerInsn "mov" for 0x400ed2>, <DisassemblerInsn "mov" for 0x400ed7>, <DisassemblerInsn "movsxd" for 0x400edb>, <DisassemblerInsn "mov" for 0x400ee0>, <DisassemblerInsn "mov" for 0x400ee3>, <DisassemblerInsn "mov" for 0x400ee7>, <DisassemblerInsn "cmp" for 0x400eec>, <DisassemblerInsn "je" for 0x400ef0>]'}, {'block_Idx': 116, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400bc0>]'}, {'block_Idx': 175, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d46>]'}, {'block_Idx': 227, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400eab>, <DisassemblerInsn "mov" for 0x400eaf>, <DisassemblerInsn "cmp" for 0x400eb4>, <DisassemblerInsn "jge" for 0x400eb7>]'}, {'block_Idx': 34, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008e2>, <DisassemblerInsn "mov" for 0x4008e6>, <DisassemblerInsn "mov" for 0x4008ea>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f2>, <DisassemblerInsn "mov" for 0x4008f7>, <DisassemblerInsn "add" for 0x4008fd>, <DisassemblerInsn "cmp" for 0x400901>, <DisassemblerInsn "jb" for 0x400905>]'}, {'block_Idx': 178, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e82>]'}, {'block_Idx': 128, 'blockInsts': '[<DisassemblerInsn "and" for 0x400ba7>, <DisassemblerInsn "cmp" for 0x400bac>, <DisassemblerInsn "setne" for 0x400bb1>, <DisassemblerInsn "mov" for 0x400bb4>, <DisassemblerInsn "mov" for 0x400bb8>, <DisassemblerInsn "test" for 0x400bbc>, <DisassemblerInsn "jne" for 0x400bbe>]'}, {'block_Idx': 126, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400bd5>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d36>, <DisassemblerInsn "add" for 0x400d3a>, <DisassemblerInsn "mov" for 0x400d3d>, <DisassemblerInsn "jmp" for 0x400d41>]'}, {'block_Idx': 188, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fcf>, <DisassemblerInsn "mov" for 0x400fd7>, <DisassemblerInsn "mov" for 0x400fdb>, <DisassemblerInsn "cmp" for 0x400fe0>, <DisassemblerInsn "jge" for 0x400fe3>]'}, {'block_Idx': 150, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400bfd>, <DisassemblerInsn "jge" for 0x400c00>]'}, {'block_Idx': 208, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d22>]'}, {'block_Idx': 219, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010d2>, <DisassemblerInsn "add" for 0x4010d6>, <DisassemblerInsn "mov" for 0x4010d9>, <DisassemblerInsn "jmp" for 0x4010dd>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fe9>, <DisassemblerInsn "mov" for 0x400fee>, <DisassemblerInsn "movsxd" for 0x400ff2>, <DisassemblerInsn "mov" for 0x400ff7>, <DisassemblerInsn "mov" for 0x400ffa>, <DisassemblerInsn "mov" for 0x400ffe>, <DisassemblerInsn "mov" for 0x401003>, <DisassemblerInsn "movsxd" for 0x401007>, <DisassemblerInsn "mov" for 0x40100c>, <DisassemblerInsn "mov" for 0x40100f>, <DisassemblerInsn "mov" for 0x401013>, <DisassemblerInsn "cmp" for 0x401018>, <DisassemblerInsn "je" for 0x40101c>]'}, {'block_Idx': 163, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d4b>, <DisassemblerInsn "cmp" for 0x400d50>, <DisassemblerInsn "jne" for 0x400d54>]'}, {'block_Idx': 117, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bc2>, <DisassemblerInsn "add" for 0x400bc7>, <DisassemblerInsn "mov" for 0x400bcb>, <DisassemblerInsn "call" for 0x400bd0>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e72>]'}, {'block_Idx': 213, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ef2>, <DisassemblerInsn "add" for 0x400ef6>, <DisassemblerInsn "mov" for 0x400efa>, <DisassemblerInsn "mov" for 0x400eff>, <DisassemblerInsn "shl" for 0x400f02>, <DisassemblerInsn "mov" for 0x400f04>, <DisassemblerInsn "mov" for 0x400f06>, <DisassemblerInsn "mov" for 0x400f0b>, <DisassemblerInsn "add" for 0x400f0e>, <DisassemblerInsn "mov" for 0x400f12>, <DisassemblerInsn "mov" for 0x400f17>, <DisassemblerInsn "mov" for 0x400f19>, <DisassemblerInsn "mov" for 0x400f1d>, <DisassemblerInsn "mov" for 0x400f22>, <DisassemblerInsn "shl" for 0x400f25>, <DisassemblerInsn "mov" for 0x400f27>, <DisassemblerInsn "mov" for 0x400f29>, <DisassemblerInsn "mov" for 0x400f2e>, <DisassemblerInsn "add" for 0x400f31>, <DisassemblerInsn "mov" for 0x400f35>, <DisassemblerInsn "mov" for 0x400f3a>, <DisassemblerInsn "jmp" for 0x400f3c>]'}, {'block_Idx': 176, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400fae>]'}, {'block_Idx': 173, 'blockInsts': '[<DisassemblerInsn "lea" for 0x400d58>, <DisassemblerInsn "lea" for 0x400d5f>, <DisassemblerInsn "mov" for 0x400d66>, <DisassemblerInsn "lea" for 0x400d6b>, <DisassemblerInsn "call" for 0x400d72>]'}, {'block_Idx': 158, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010e4>, <DisassemblerInsn "mov" for 0x4010e9>, <DisassemblerInsn "mov" for 0x4010ec>, <DisassemblerInsn "imul" for 0x4010f1>, <DisassemblerInsn "mov" for 0x4010f5>, <DisassemblerInsn "mov" for 0x4010fa>, <DisassemblerInsn "mov" for 0x4010fd>, <DisassemblerInsn "mov" for 0x401102>, <DisassemblerInsn "cmp" for 0x401107>, <DisassemblerInsn "cmovne" for 0x40110a>, <DisassemblerInsn "imul" for 0x40110d>, <DisassemblerInsn "mov" for 0x401110>, <DisassemblerInsn "mov" for 0x401118>, <DisassemblerInsn "mov" for 0x40111a>, <DisassemblerInsn "add" for 0x40111f>, <DisassemblerInsn "call" for 0x401123>]'}, {'block_Idx': 56, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009f6>, <DisassemblerInsn "mov" for 0x4009fb>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "mov" for 0x400a0a>, <DisassemblerInsn "mov" for 0x400a11>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "mov" for 0x400a1c>, <DisassemblerInsn "add" for 0x400a21>, <DisassemblerInsn "mov" for 0x400a27>, <DisassemblerInsn "add" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a2c>, <DisassemblerInsn "movsxd" for 0x400a34>, <DisassemblerInsn "call" for 0x400a39>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40085d>, <DisassemblerInsn "mov" for 0x400862>, <DisassemblerInsn "mov" for 0x400865>, <DisassemblerInsn "jmp" for 0x400869>]'}, {'block_Idx': 73, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013d9>, <DisassemblerInsn "add" for 0x4013dd>, <DisassemblerInsn "ret" for 0x4013e1>]'}, {'block_Idx': 94, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bdc>, <DisassemblerInsn "add" for 0x400be1>, <DisassemblerInsn "mov" for 0x400be5>, <DisassemblerInsn "call" for 0x400bea>]'}, {'block_Idx': 122, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400bd7>]'}, {'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ea3>, <DisassemblerInsn "mov" for 0x400eab>, <DisassemblerInsn "mov" for 0x400eaf>, <DisassemblerInsn "cmp" for 0x400eb4>, <DisassemblerInsn "jge" for 0x400eb7>]'}, {'block_Idx': 55, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a3e>, <DisassemblerInsn "mov" for 0x400a43>, <DisassemblerInsn "mov" for 0x400a4a>, <DisassemblerInsn "mov" for 0x400a4f>, <DisassemblerInsn "add" for 0x400a55>, <DisassemblerInsn "mov" for 0x400a58>, <DisassemblerInsn "mov" for 0x400a60>, <DisassemblerInsn "mov" for 0x400a65>, <DisassemblerInsn "add" for 0x400a6b>, <DisassemblerInsn "mov" for 0x400a6f>, <DisassemblerInsn "mov" for 0x400a73>, <DisassemblerInsn "mov" for 0x400a77>, <DisassemblerInsn "mov" for 0x400a7c>, <DisassemblerInsn "mov" for 0x400a82>, <DisassemblerInsn "mov" for 0x400a86>, <DisassemblerInsn "cmp" for 0x400a8b>, <DisassemblerInsn "jge" for 0x400a8e>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009be>, <DisassemblerInsn "mov" for 0x4009c3>, <DisassemblerInsn "mov" for 0x4009ca>, <DisassemblerInsn "mov" for 0x4009cf>, <DisassemblerInsn "mov" for 0x4009d6>, <DisassemblerInsn "mov" for 0x4009db>, <DisassemblerInsn "add" for 0x4009e1>, <DisassemblerInsn "mov" for 0x4009e4>, <DisassemblerInsn "mov" for 0x4009e9>, <DisassemblerInsn "mov" for 0x4009ef>, <DisassemblerInsn "call" for 0x4009f1>]'}, {'block_Idx': 50, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40118d>, <DisassemblerInsn "cmp" for 0x401192>, <DisassemblerInsn "je" for 0x401199>]'}, {'block_Idx': 211, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40101e>, <DisassemblerInsn "sar" for 0x401022>, <DisassemblerInsn "mov" for 0x401024>, <DisassemblerInsn "sub" for 0x401028>, <DisassemblerInsn "mov" for 0x40102a>, <DisassemblerInsn "add" for 0x40102e>, <DisassemblerInsn "mov" for 0x401032>, <DisassemblerInsn "mov" for 0x401037>, <DisassemblerInsn "shl" for 0x40103a>, <DisassemblerInsn "mov" for 0x40103c>, <DisassemblerInsn "mov" for 0x40103e>, <DisassemblerInsn "mov" for 0x401043>, <DisassemblerInsn "add" for 0x401046>, <DisassemblerInsn "mov" for 0x40104a>, <DisassemblerInsn "mov" for 0x40104f>, <DisassemblerInsn "mov" for 0x401051>, <DisassemblerInsn "mov" for 0x401055>, <DisassemblerInsn "mov" for 0x40105a>, <DisassemblerInsn "shl" for 0x40105d>, <DisassemblerInsn "mov" for 0x40105f>, <DisassemblerInsn "mov" for 0x401061>, <DisassemblerInsn "mov" for 0x401066>, <DisassemblerInsn "add" for 0x401069>, <DisassemblerInsn "mov" for 0x40106d>, <DisassemblerInsn "mov" for 0x401072>, <DisassemblerInsn "jmp" for 0x401074>]'}, {'block_Idx': 166, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e77>, <DisassemblerInsn "cmp" for 0x400e7c>, <DisassemblerInsn "jne" for 0x400e80>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008da>, <DisassemblerInsn "mov" for 0x4008de>, <DisassemblerInsn "mov" for 0x4008e2>, <DisassemblerInsn "mov" for 0x4008e6>, <DisassemblerInsn "mov" for 0x4008ea>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f2>, <DisassemblerInsn "mov" for 0x4008f7>, <DisassemblerInsn "add" for 0x4008fd>, <DisassemblerInsn "cmp" for 0x400901>, <DisassemblerInsn "jb" for 0x400905>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400834>, <DisassemblerInsn "mov" for 0x400838>, <DisassemblerInsn "mov" for 0x40083c>, <DisassemblerInsn "mov" for 0x400841>, <DisassemblerInsn "mov" for 0x400844>, <DisassemblerInsn "mov" for 0x400848>, <DisassemblerInsn "mov" for 0x40084d>, <DisassemblerInsn "mov" for 0x400853>, <DisassemblerInsn "cmp" for 0x400858>, <DisassemblerInsn "jbe" for 0x40085b>]'}, {'block_Idx': 1, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007a1>, <DisassemblerInsn "cmp" for 0x4007a6>, <DisassemblerInsn "jle" for 0x4007aa>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c73>, <DisassemblerInsn "mov" for 0x400c7b>, <DisassemblerInsn "mov" for 0x400c7f>, <DisassemblerInsn "cmp" for 0x400c84>, <DisassemblerInsn "jge" for 0x400c87>]'}, {'block_Idx': 531, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b14>, <DisassemblerInsn "jmp" for 0x400b1f>]'}, {'block_Idx': 80, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b29>, <DisassemblerInsn "add" for 0x400b2e>, <DisassemblerInsn "mov" for 0x400b32>, <DisassemblerInsn "call" for 0x400b37>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007ac>, <DisassemblerInsn "mov" for 0x4007b1>, <DisassemblerInsn "jmp" for 0x4007b5>]'}, {'block_Idx': 111, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bb8>, <DisassemblerInsn "test" for 0x400bbc>, <DisassemblerInsn "jne" for 0x400bbe>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e12>, <DisassemblerInsn "mov" for 0x400e16>, <DisassemblerInsn "mov" for 0x400e1b>, <DisassemblerInsn "shl" for 0x400e1e>, <DisassemblerInsn "mov" for 0x400e20>, <DisassemblerInsn "mov" for 0x400e23>, <DisassemblerInsn "mov" for 0x400e28>, <DisassemblerInsn "add" for 0x400e2b>, <DisassemblerInsn "mov" for 0x400e2f>, <DisassemblerInsn "mov" for 0x400e34>, <DisassemblerInsn "mov" for 0x400e37>, <DisassemblerInsn "sub" for 0x400e3b>, <DisassemblerInsn "mov" for 0x400e3f>, <DisassemblerInsn "mov" for 0x400e44>, <DisassemblerInsn "shl" for 0x400e47>, <DisassemblerInsn "mov" for 0x400e49>, <DisassemblerInsn "mov" for 0x400e4c>, <DisassemblerInsn "mov" for 0x400e51>, <DisassemblerInsn "add" for 0x400e54>, <DisassemblerInsn "mov" for 0x400e58>, <DisassemblerInsn "mov" for 0x400e5d>, <DisassemblerInsn "jmp" for 0x400e60>]'}, {'block_Idx': 217, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e60>]'}, {'block_Idx': 209, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c7b>, <DisassemblerInsn "mov" for 0x400c7f>, <DisassemblerInsn "cmp" for 0x400c84>, <DisassemblerInsn "jge" for 0x400c87>]'}, {'block_Idx': 563, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400323>, <DisassemblerInsn "mov" for 0x400328>, <DisassemblerInsn "mov" for 0x40032d>, <DisassemblerInsn "mov" for 0x400330>, <DisassemblerInsn "mov" for 0x400334>, <DisassemblerInsn "mov" for 0x400339>, <DisassemblerInsn "mov" for 0x40033c>, <DisassemblerInsn "movsxd" for 0x400341>, <DisassemblerInsn "add" for 0x400346>, <DisassemblerInsn "mov" for 0x400349>, <DisassemblerInsn "mov" for 0x40034e>, <DisassemblerInsn "mov" for 0x400352>, <DisassemblerInsn "mov" for 0x400357>, <DisassemblerInsn "ret" for 0x40035e>]'}, {'block_Idx': 47, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400988>, <DisassemblerInsn "mov" for 0x40098b>, <DisassemblerInsn "mov" for 0x400990>, <DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "mov" for 0x4009a2>, <DisassemblerInsn "add" for 0x4009a7>, <DisassemblerInsn "add" for 0x4009ad>, <DisassemblerInsn "mov" for 0x4009b1>, <DisassemblerInsn "cmp" for 0x4009b6>, <DisassemblerInsn "jbe" for 0x4009bc>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401141>, <DisassemblerInsn "mov" for 0x401146>, <DisassemblerInsn "mov" for 0x40114a>, <DisassemblerInsn "sub" for 0x40114e>, <DisassemblerInsn "xor" for 0x401152>, <DisassemblerInsn "lea" for 0x401154>, <DisassemblerInsn "mov" for 0x40115b>, <DisassemblerInsn "call" for 0x40115d>]'}, {'block_Idx': 28, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008bb>, <DisassemblerInsn "mov" for 0x4008c0>, <DisassemblerInsn "mov" for 0x4008c6>, <DisassemblerInsn "mov" for 0x4008ca>, <DisassemblerInsn "mov" for 0x4008ce>, <DisassemblerInsn "sub" for 0x4008d2>, <DisassemblerInsn "mov" for 0x4008d4>, <DisassemblerInsn "jmp" for 0x4008d8>]'}, {'block_Idx': 110, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b94>, <DisassemblerInsn "add" for 0x400b99>, <DisassemblerInsn "mov" for 0x400b9d>, <DisassemblerInsn "call" for 0x400ba2>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401076>, <DisassemblerInsn "sar" for 0x40107a>, <DisassemblerInsn "mov" for 0x40107c>, <DisassemblerInsn "sub" for 0x401080>, <DisassemblerInsn "mov" for 0x401082>, <DisassemblerInsn "add" for 0x401086>, <DisassemblerInsn "mov" for 0x40108a>, <DisassemblerInsn "mov" for 0x40108f>, <DisassemblerInsn "shl" for 0x401092>, <DisassemblerInsn "mov" for 0x401094>, <DisassemblerInsn "mov" for 0x401097>, <DisassemblerInsn "mov" for 0x40109c>, <DisassemblerInsn "add" for 0x40109f>, <DisassemblerInsn "mov" for 0x4010a3>, <DisassemblerInsn "mov" for 0x4010a8>, <DisassemblerInsn "mov" for 0x4010ab>, <DisassemblerInsn "mov" for 0x4010af>, <DisassemblerInsn "mov" for 0x4010b4>, <DisassemblerInsn "shl" for 0x4010b7>, <DisassemblerInsn "mov" for 0x4010b9>, <DisassemblerInsn "mov" for 0x4010bc>, <DisassemblerInsn "mov" for 0x4010c1>, <DisassemblerInsn "add" for 0x4010c4>, <DisassemblerInsn "mov" for 0x4010c8>, <DisassemblerInsn "mov" for 0x4010cd>, <DisassemblerInsn "jmp" for 0x4010d0>]'}, {'block_Idx': 172, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d56>]'}, {'block_Idx': 187, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d34>]'}, {'block_Idx': 19, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400ac6>, <DisassemblerInsn "jge" for 0x400acb>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40086b>, <DisassemblerInsn "mov" for 0x400870>, <DisassemblerInsn "mov" for 0x400876>, <DisassemblerInsn "mov" for 0x40087a>, <DisassemblerInsn "mov" for 0x40087e>, <DisassemblerInsn "mov" for 0x400882>, <DisassemblerInsn "sub" for 0x400886>, <DisassemblerInsn "cmp" for 0x400888>, <DisassemblerInsn "jbe" for 0x40088a>]'}, {'block_Idx': 82, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013d5>, <DisassemblerInsn "mov" for 0x4013d9>, <DisassemblerInsn "add" for 0x4013dd>, <DisassemblerInsn "ret" for 0x4013e1>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007bf>, <DisassemblerInsn "mov" for 0x4007c3>, <DisassemblerInsn "mov" for 0x4007c8>, <DisassemblerInsn "mov" for 0x4007cb>, <DisassemblerInsn "mov" for 0x4007d0>, <DisassemblerInsn "mov" for 0x4007d7>, <DisassemblerInsn "add" for 0x4007dc>, <DisassemblerInsn "mov" for 0x4007e3>, <DisassemblerInsn "mov" for 0x4007e8>, <DisassemblerInsn "call" for 0x4007eb>]'}, {'block_Idx': 186, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ca7>, <DisassemblerInsn "cmp" for 0x400cac>, <DisassemblerInsn "je" for 0x400cb0>]'}, {'block_Idx': 79, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aec>, <DisassemblerInsn "call" for 0x400af1>]'}, {'block_Idx': 115, 'blockInsts': '[<DisassemblerInsn "sub" for 0x401570>, <DisassemblerInsn "mov" for 0x401574>, <DisassemblerInsn "mov" for 0x401579>, <DisassemblerInsn "mov" for 0x40157d>, <DisassemblerInsn "mov" for 0x401582>, <DisassemblerInsn "mov" for 0x401585>, <DisassemblerInsn "mov" for 0x401589>, <DisassemblerInsn "mov" for 0x401591>, <DisassemblerInsn "mov" for 0x401596>, <DisassemblerInsn "mov" for 0x401599>, <DisassemblerInsn "sar" for 0x40159d>, <DisassemblerInsn "movsxd" for 0x4015a0>, <DisassemblerInsn "mov" for 0x4015a3>, <DisassemblerInsn "mov" for 0x4015a6>, <DisassemblerInsn "mov" for 0x4015aa>, <DisassemblerInsn "ror" for 0x4015ae>, <DisassemblerInsn "ror" for 0x4015b2>, <DisassemblerInsn "ror" for 0x4015b5>, <DisassemblerInsn "mov" for 0x4015b9>, <DisassemblerInsn "mov" for 0x4015bd>, <DisassemblerInsn "mov" for 0x4015c1>, <DisassemblerInsn "and" for 0x4015c5>, <DisassemblerInsn "shl" for 0x4015c8>, <DisassemblerInsn "mov" for 0x4015ca>, <DisassemblerInsn "mov" for 0x4015ce>, <DisassemblerInsn "mov" for 0x4015d2>, <DisassemblerInsn "movsx" for 0x4015d6>, <DisassemblerInsn "call" for 0x4015d9>]'}, {'block_Idx': 212, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f3e>, <DisassemblerInsn "add" for 0x400f42>, <DisassemblerInsn "mov" for 0x400f46>, <DisassemblerInsn "mov" for 0x400f4b>, <DisassemblerInsn "shl" for 0x400f4e>, <DisassemblerInsn "mov" for 0x400f50>, <DisassemblerInsn "mov" for 0x400f53>, <DisassemblerInsn "mov" for 0x400f58>, <DisassemblerInsn "add" for 0x400f5b>, <DisassemblerInsn "mov" for 0x400f5f>, <DisassemblerInsn "mov" for 0x400f64>, <DisassemblerInsn "mov" for 0x400f67>, <DisassemblerInsn "mov" for 0x400f6b>, <DisassemblerInsn "mov" for 0x400f70>, <DisassemblerInsn "shl" for 0x400f73>, <DisassemblerInsn "mov" for 0x400f75>, <DisassemblerInsn "mov" for 0x400f78>, <DisassemblerInsn "mov" for 0x400f7d>, <DisassemblerInsn "add" for 0x400f80>, <DisassemblerInsn "mov" for 0x400f84>, <DisassemblerInsn "mov" for 0x400f89>, <DisassemblerInsn "jmp" for 0x400f8c>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}, {'block_Idx': 545, 'blockInsts': '[<DisassemblerInsn "xor" for 0x401568>, <DisassemblerInsn "add" for 0x40156a>, <DisassemblerInsn "ret" for 0x40156e>]'}, {'block_Idx': 125, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015de>, <DisassemblerInsn "mov" for 0x4015e2>, <DisassemblerInsn "add" for 0x4015e6>, <DisassemblerInsn "ret" for 0x4015ea>]'}, {'block_Idx': 26, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400acd>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011d4>, <DisassemblerInsn "mov" for 0x4011d8>, <DisassemblerInsn "mov" for 0x4011df>, <DisassemblerInsn "add" for 0x4011e6>, <DisassemblerInsn "ret" for 0x4011ed>]'}, {'block_Idx': 157, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c5f>, <DisassemblerInsn "lea" for 0x400c63>, <DisassemblerInsn "movsxd" for 0x400c6a>, <DisassemblerInsn "add" for 0x400c6e>, <DisassemblerInsn "jmp" for 0x400c71>]'}, {'block_Idx': 200, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4010e2>]'}, {'block_Idx': 66, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401162>, <DisassemblerInsn "mov" for 0x401167>, <DisassemblerInsn "mov" for 0x401171>, <DisassemblerInsn "mov" for 0x401176>, <DisassemblerInsn "mov" for 0x401180>, <DisassemblerInsn "jmp" for 0x40118b>]'}, {'block_Idx': 179, 'blockInsts': '[<DisassemblerInsn "lea" for 0x400e84>, <DisassemblerInsn "lea" for 0x400e8b>, <DisassemblerInsn "mov" for 0x400e92>, <DisassemblerInsn "lea" for 0x400e97>, <DisassemblerInsn "call" for 0x400e9e>]'}, {'block_Idx': 529, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400afb>, <DisassemblerInsn "mov" for 0x400b00>, <DisassemblerInsn "xor" for 0x400b04>, <DisassemblerInsn "lea" for 0x400b06>, <DisassemblerInsn "mov" for 0x400b0d>, <DisassemblerInsn "call" for 0x400b0f>]'}, {'block_Idx': 107, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b7b>, <DisassemblerInsn "cdq" for 0x400b80>, <DisassemblerInsn "idiv" for 0x400b81>, <DisassemblerInsn "mov" for 0x400b83>, <DisassemblerInsn "add" for 0x400b85>, <DisassemblerInsn "xor" for 0x400b88>, <DisassemblerInsn "cmp" for 0x400b8a>, <DisassemblerInsn "mov" for 0x400b8e>, <DisassemblerInsn "jge" for 0x400b92>]'}, {'block_Idx': 527, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400af6>, <DisassemblerInsn "je" for 0x400af9>]'}, {'block_Idx': 76, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400ae5>, <DisassemblerInsn "jne" for 0x400aea>]'}, {'block_Idx': 162, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c1b>, <DisassemblerInsn "mov" for 0x400c20>, <DisassemblerInsn "mov" for 0x400c2a>, <DisassemblerInsn "mov" for 0x400c2f>, <DisassemblerInsn "mov" for 0x400c39>, <DisassemblerInsn "jmp" for 0x400c44>]'}, {'block_Idx': 63, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400a90>, <DisassemblerInsn "je" for 0x400a95>]'}, {'block_Idx': 30, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011df>, <DisassemblerInsn "add" for 0x4011e6>, <DisassemblerInsn "ret" for 0x4011ed>]'}, {'block_Idx': 562, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40030a>, <DisassemblerInsn "mov" for 0x400312>, <DisassemblerInsn "mov" for 0x40031a>, <DisassemblerInsn "mov" for 0x400323>, <DisassemblerInsn "mov" for 0x400328>, <DisassemblerInsn "mov" for 0x40032d>, <DisassemblerInsn "mov" for 0x400330>, <DisassemblerInsn "mov" for 0x400334>, <DisassemblerInsn "mov" for 0x400339>, <DisassemblerInsn "mov" for 0x40033c>, <DisassemblerInsn "movsxd" for 0x400341>, <DisassemblerInsn "add" for 0x400346>, <DisassemblerInsn "mov" for 0x400349>, <DisassemblerInsn "mov" for 0x40034e>, <DisassemblerInsn "mov" for 0x400352>, <DisassemblerInsn "mov" for 0x400357>, <DisassemblerInsn "ret" for 0x40035e>]'}, {'block_Idx': 202, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400f9e>]'}, {'block_Idx': 555, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015f0>, <DisassemblerInsn "mov" for 0x4015f5>, <DisassemblerInsn "mov" for 0x4015fa>, <DisassemblerInsn "ret" for 0x4015fd>]'}, {'block_Idx': 64, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400aa7>]'}, {'block_Idx': 42, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "mov" for 0x400a0a>, <DisassemblerInsn "mov" for 0x400a11>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "mov" for 0x400a1c>, <DisassemblerInsn "add" for 0x400a21>, <DisassemblerInsn "mov" for 0x400a27>, <DisassemblerInsn "add" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a2c>, <DisassemblerInsn "movsxd" for 0x400a34>, <DisassemblerInsn "call" for 0x400a39>]'}, {'block_Idx': 206, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400dc6>, <DisassemblerInsn "mov" for 0x400dca>, <DisassemblerInsn "mov" for 0x400dcf>, <DisassemblerInsn "shl" for 0x400dd2>, <DisassemblerInsn "mov" for 0x400dd4>, <DisassemblerInsn "mov" for 0x400dd6>, <DisassemblerInsn "mov" for 0x400ddb>, <DisassemblerInsn "add" for 0x400dde>, <DisassemblerInsn "mov" for 0x400de2>, <DisassemblerInsn "mov" for 0x400de7>, <DisassemblerInsn "mov" for 0x400de9>, <DisassemblerInsn "sub" for 0x400ded>, <DisassemblerInsn "mov" for 0x400df1>, <DisassemblerInsn "mov" for 0x400df6>, <DisassemblerInsn "shl" for 0x400df9>, <DisassemblerInsn "mov" for 0x400dfb>, <DisassemblerInsn "mov" for 0x400dfd>, <DisassemblerInsn "mov" for 0x400e02>, <DisassemblerInsn "add" for 0x400e05>, <DisassemblerInsn "mov" for 0x400e09>, <DisassemblerInsn "mov" for 0x400e0e>, <DisassemblerInsn "jmp" for 0x400e10>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d91>, <DisassemblerInsn "mov" for 0x400d96>, <DisassemblerInsn "movsxd" for 0x400d9a>, <DisassemblerInsn "mov" for 0x400d9f>, <DisassemblerInsn "mov" for 0x400da2>, <DisassemblerInsn "mov" for 0x400da6>, <DisassemblerInsn "mov" for 0x400dab>, <DisassemblerInsn "movsxd" for 0x400daf>, <DisassemblerInsn "mov" for 0x400db4>, <DisassemblerInsn "mov" for 0x400db7>, <DisassemblerInsn "mov" for 0x400dbb>, <DisassemblerInsn "cmp" for 0x400dc0>, <DisassemblerInsn "je" for 0x400dc4>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40087a>, <DisassemblerInsn "mov" for 0x40087e>, <DisassemblerInsn "mov" for 0x400882>, <DisassemblerInsn "sub" for 0x400886>, <DisassemblerInsn "cmp" for 0x400888>, <DisassemblerInsn "jbe" for 0x40088a>]'}, {'block_Idx': 3, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007b7>, <DisassemblerInsn "mov" for 0x4007bb>, <DisassemblerInsn "mov" for 0x4007bf>, <DisassemblerInsn "mov" for 0x4007c3>, <DisassemblerInsn "mov" for 0x4007c8>, <DisassemblerInsn "mov" for 0x4007cb>, <DisassemblerInsn "mov" for 0x4007d0>, <DisassemblerInsn "mov" for 0x4007d7>, <DisassemblerInsn "add" for 0x4007dc>, <DisassemblerInsn "mov" for 0x4007e3>, <DisassemblerInsn "mov" for 0x4007e8>, <DisassemblerInsn "call" for 0x4007eb>]'}, {'block_Idx': 174, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c8d>, <DisassemblerInsn "mov" for 0x400c95>, <DisassemblerInsn "mov" for 0x400c99>, <DisassemblerInsn "cmp" for 0x400c9e>, <DisassemblerInsn "jge" for 0x400ca1>]'}, {'block_Idx': 560, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4002e0>, <DisassemblerInsn "mov" for 0x4002e5>, <DisassemblerInsn "mov" for 0x4002ea>, <DisassemblerInsn "mov" for 0x4002ee>, <DisassemblerInsn "add" for 0x4002f2>, <DisassemblerInsn "sar" for 0x4002f5>, <DisassemblerInsn "mov" for 0x4002f8>, <DisassemblerInsn "cmp" for 0x4002fc>, <DisassemblerInsn "jl" for 0x400301>]'}, {'block_Idx': 27, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ad2>, <DisassemblerInsn "add" for 0x400ad7>, <DisassemblerInsn "mov" for 0x400adb>, <DisassemblerInsn "call" for 0x400ae0>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008ca>, <DisassemblerInsn "mov" for 0x4008ce>, <DisassemblerInsn "sub" for 0x4008d2>, <DisassemblerInsn "mov" for 0x4008d4>, <DisassemblerInsn "jmp" for 0x4008d8>]'}, {'block_Idx': 25, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400907>, <DisassemblerInsn "mov" for 0x40090c>, <DisassemblerInsn "mov" for 0x400912>, <DisassemblerInsn "add" for 0x400917>, <DisassemblerInsn "add" for 0x40091d>, <DisassemblerInsn "mov" for 0x400921>, <DisassemblerInsn "cmp" for 0x400926>, <DisassemblerInsn "jae" for 0x40092c>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aa9>, <DisassemblerInsn "add" for 0x400aae>, <DisassemblerInsn "mov" for 0x400ab2>, <DisassemblerInsn "mov" for 0x400aba>, <DisassemblerInsn "shl" for 0x400abe>, <DisassemblerInsn "call" for 0x400ac1>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "sub" for 0x401380>, <DisassemblerInsn "mov" for 0x401384>, <DisassemblerInsn "mov" for 0x401389>, <DisassemblerInsn "cmp" for 0x40138d>, <DisassemblerInsn "jg" for 0x401392>]'}, {'block_Idx': 44, 'blockInsts': '[<DisassemblerInsn "add" for 0x401128>, <DisassemblerInsn "mov" for 0x40112b>, <DisassemblerInsn "cdq" for 0x401130>, <DisassemblerInsn "idiv" for 0x401131>, <DisassemblerInsn "mov" for 0x401133>, <DisassemblerInsn "mov" for 0x401137>, <DisassemblerInsn "cmp" for 0x40113b>, <DisassemblerInsn "jle" for 0x40113f>]'}, {'block_Idx': 177, 'blockInsts': '[<DisassemblerInsn "lea" for 0x400fb0>, <DisassemblerInsn "lea" for 0x400fb7>, <DisassemblerInsn "mov" for 0x400fbe>, <DisassemblerInsn "lea" for 0x400fc3>, <DisassemblerInsn "call" for 0x400fca>]'}, {'block_Idx': 101, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b6d>, <DisassemblerInsn "add" for 0x400b72>, <DisassemblerInsn "call" for 0x400b76>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40088c>, <DisassemblerInsn "mov" for 0x400891>, <DisassemblerInsn "mov" for 0x400894>, <DisassemblerInsn "mov" for 0x400898>, <DisassemblerInsn "mov" for 0x40089d>, <DisassemblerInsn "mov" for 0x4008a3>, <DisassemblerInsn "cmp" for 0x4008a8>, <DisassemblerInsn "jbe" for 0x4008ab>]'}, {'block_Idx': 528, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400b24>]'}, {'block_Idx': 32, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40111a>, <DisassemblerInsn "add" for 0x40111f>, <DisassemblerInsn "call" for 0x401123>]'}, {'block_Idx': 103, 'blockInsts': '[<DisassemblerInsn "sub" for 0x401600>, <DisassemblerInsn "mov" for 0x401604>, <DisassemblerInsn "mov" for 0x401609>, <DisassemblerInsn "mov" for 0x40160d>, <DisassemblerInsn "add" for 0x401612>, <DisassemblerInsn "mov" for 0x401616>, <DisassemblerInsn "call" for 0x40161b>]'}, {'block_Idx': 165, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fa3>, <DisassemblerInsn "cmp" for 0x400fa8>, <DisassemblerInsn "jne" for 0x400fac>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007f0>, <DisassemblerInsn "mov" for 0x4007f3>, <DisassemblerInsn "mov" for 0x4007f8>, <DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}, {'block_Idx': 221, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f8e>, <DisassemblerInsn "add" for 0x400f92>, <DisassemblerInsn "mov" for 0x400f95>, <DisassemblerInsn "jmp" for 0x400f99>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40081c>, <DisassemblerInsn "mov" for 0x400821>, <DisassemblerInsn "cmp" for 0x400828>, <DisassemblerInsn "je" for 0x40082e>]'}, {'block_Idx': 31, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40093e>, <DisassemblerInsn "mov" for 0x400943>, <DisassemblerInsn "mov" for 0x400949>, <DisassemblerInsn "mov" for 0x40094e>, <DisassemblerInsn "add" for 0x400954>, <DisassemblerInsn "cmp" for 0x400958>, <DisassemblerInsn "jae" for 0x40095a>]'}, {'block_Idx': 226, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fd7>, <DisassemblerInsn "mov" for 0x400fdb>, <DisassemblerInsn "cmp" for 0x400fe0>, <DisassemblerInsn "jge" for 0x400fe3>]'}, {'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "sub" for 0x400700>, <DisassemblerInsn "mov" for 0x400707>, <DisassemblerInsn "mov" for 0x40070f>, <DisassemblerInsn "mov" for 0x400717>, <DisassemblerInsn "mov" for 0x40071f>, <DisassemblerInsn "mov" for 0x400727>, <DisassemblerInsn "mov" for 0x40072c>, <DisassemblerInsn "mov" for 0x400734>, <DisassemblerInsn "mov" for 0x40073b>, <DisassemblerInsn "mov" for 0x400740>, <DisassemblerInsn "mov" for 0x400748>, <DisassemblerInsn "mov" for 0x400750>, <DisassemblerInsn "mov" for 0x400758>, <DisassemblerInsn "mov" for 0x400760>, <DisassemblerInsn "mov" for 0x400768>, <DisassemblerInsn "mov" for 0x40076d>, <DisassemblerInsn "mov" for 0x400775>, <DisassemblerInsn "mov" for 0x40077a>, <DisassemblerInsn "mov" for 0x400782>, <DisassemblerInsn "mov" for 0x400784>, <DisassemblerInsn "mov" for 0x400788>, <DisassemblerInsn "mov" for 0x400790>, <DisassemblerInsn "mov" for 0x400796>, <DisassemblerInsn "cmp" for 0x40079b>, <DisassemblerInsn "jne" for 0x40079f>]'}, {'block_Idx': 220, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4010d0>]'}, {'block_Idx': 184, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d77>, <DisassemblerInsn "mov" for 0x400d7f>, <DisassemblerInsn "mov" for 0x400d83>, <DisassemblerInsn "cmp" for 0x400d88>, <DisassemblerInsn "jge" for 0x400d8b>]'}, {'block_Idx': 24, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40092e>, <DisassemblerInsn "jmp" for 0x400939>]'}, {'block_Idx': 100, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bef>, <DisassemblerInsn "mov" for 0x400bf4>, <DisassemblerInsn "call" for 0x400bf8>]'}, {'block_Idx': 343, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b35>, <DisassemblerInsn "mov" for 0x401b3d>, <DisassemblerInsn "add" for 0x401b41>, <DisassemblerInsn "ret" for 0x401b45>]'}, {'block_Idx': 95, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b54>, <DisassemblerInsn "mov" for 0x400b59>, <DisassemblerInsn "xor" for 0x400b5d>, <DisassemblerInsn "lea" for 0x400b5f>, <DisassemblerInsn "mov" for 0x400b66>, <DisassemblerInsn "call" for 0x400b68>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cea>, <DisassemblerInsn "movsxd" for 0x400cef>, <DisassemblerInsn "mov" for 0x400cf4>, <DisassemblerInsn "movsxd" for 0x400cf9>, <DisassemblerInsn "mov" for 0x400cfe>, <DisassemblerInsn "mov" for 0x400d01>, <DisassemblerInsn "mov" for 0x400d06>, <DisassemblerInsn "shl" for 0x400d09>, <DisassemblerInsn "mov" for 0x400d0b>, <DisassemblerInsn "mov" for 0x400d0e>, <DisassemblerInsn "mov" for 0x400d13>, <DisassemblerInsn "add" for 0x400d16>, <DisassemblerInsn "mov" for 0x400d1a>, <DisassemblerInsn "mov" for 0x400d1f>, <DisassemblerInsn "jmp" for 0x400d22>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008ea>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f2>, <DisassemblerInsn "mov" for 0x4008f7>, <DisassemblerInsn "add" for 0x4008fd>, <DisassemblerInsn "cmp" for 0x400901>, <DisassemblerInsn "jb" for 0x400905>]'}, {'block_Idx': 58, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40119b>, <DisassemblerInsn "mov" for 0x40119f>, <DisassemblerInsn "add" for 0x4011a4>, <DisassemblerInsn "mov" for 0x4011aa>, <DisassemblerInsn "mov" for 0x4011b0>, <DisassemblerInsn "mov" for 0x4011b4>, <DisassemblerInsn "mov" for 0x4011b9>, <DisassemblerInsn "sub" for 0x4011bf>, <DisassemblerInsn "mov" for 0x4011c1>, <DisassemblerInsn "mov" for 0x4011c7>, <DisassemblerInsn "mov" for 0x4011cb>, <DisassemblerInsn "jmp" for 0x4011d2>]'}, {'block_Idx': 218, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c95>, <DisassemblerInsn "mov" for 0x400c99>, <DisassemblerInsn "cmp" for 0x400c9e>, <DisassemblerInsn "jge" for 0x400ca1>]'}], 'cfg_block_detailed_info': [{'block_Idx': 152, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2312]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 83, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x30], rdi>', '<mov~~rdi, qword ptr [rsp + 0x30]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x20>', '<call~~0x400500>']}, {'block_Idx': 207, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400c95>']}, {'block_Idx': 197, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x64]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x400d22>']}, {'block_Idx': 225, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400e72>']}, {'block_Idx': 153, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0x50]>', '<mov~~qword ptr [rsp], rax>', '<sub~~rax, 3>', '<ja~~0x4010e4>']}, {'block_Idx': 577, 'blockInsts': ['<mov~~qword ptr [rsp - 0x10], rdi>', '<mov~~dword ptr [rsp - 0x14], esi>', '<mov~~rax, qword ptr [rsp - 0x10]>', '<mov~~eax, dword ptr [rax + 0x10]>', '<mov~~dword ptr [rsp - 0x18], eax>', '<mov~~dword ptr [rsp - 0x1c], 0>', '<mov~~rax, qword ptr [rsp - 0x10]>', '<mov~~rax, qword ptr [rax]>', '<mov~~ecx, dword ptr [rsp - 0x18]>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<mov~~dword ptr [rsp - 4], eax>', '<mov~~eax, dword ptr [rsp - 4]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp - 4], eax>', '<mov~~eax, dword ptr [rsp - 4]>', '<mov~~ecx, dword ptr [rsp - 0x18]>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~dword ptr [rsp - 0x1c], eax>', '<mov~~eax, dword ptr [rsp - 0x14]>', '<add~~eax, dword ptr [rsp - 0x18]>', '<mov~~dword ptr [rsp - 0x18], eax>', '<mov~~ecx, dword ptr [rsp - 0x18]>', '<mov~~rax, qword ptr [rsp - 0x10]>', '<mov~~dword ptr [rax + 0x10], ecx>', '<ret~~>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xa0], 4>', '<jb~~0x400834>']}, {'block_Idx': 92, 'blockInsts': ['<mov~~dword ptr [rsp + 0x6c], eax>', '<mov~~eax, dword ptr [rsp + 0x6c]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400bdc>']}, {'block_Idx': 37, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xa8]>', '<jbe~~0x400a05>']}, {'block_Idx': 147, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x54]>', '<add~~rsp, 0x58>', '<ret~~>']}, {'block_Idx': 216, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400d7f>']}, {'block_Idx': 70, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x60]>', '<mov~~dword ptr [rsp + 0xa4], eax>', '<jmp~~0x4011df>']}, {'block_Idx': 222, 'blockInsts': ['<jmp~~0x400f8e>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rsi, qword ptr [rsp + 0x70]>', '<add~~rsi, 0xa8>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~edx, dword ptr [rax + 0xa0]>', '<add~~edx, dword ptr [rsp + 0x7c]>', '<call~~0x500010>']}, {'block_Idx': 201, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x38], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x60]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x34], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x400f3e>']}, {'block_Idx': 116, 'blockInsts': ['<jmp~~0x400bd7>']}, {'block_Idx': 175, 'blockInsts': ['<jmp~~0x4010e4>']}, {'block_Idx': 227, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400f9e>']}, {'block_Idx': 34, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x10]>', '<mov~~dword ptr [rsp + 0x7c], eax>', '<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x60], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jb~~0x40092e>']}, {'block_Idx': 178, 'blockInsts': ['<jmp~~0x400ea3>']}, {'block_Idx': 128, 'blockInsts': ['<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<setne~~al>', '<mov~~byte ptr [rsp + 0xf], al>', '<mov~~al, byte ptr [rsp + 0xf]>', '<test~~al, 1>', '<jne~~0x400bc2>']}, {'block_Idx': 126, 'blockInsts': ['<jmp~~0x400b6d>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x64]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x64], eax>', '<jmp~~0x400c7b>']}, {'block_Idx': 188, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x4010e2>']}, {'block_Idx': 150, 'blockInsts': ['<cmp~~eax, 0>', '<jge~~0x400c49>']}, {'block_Idx': 208, 'blockInsts': ['<jmp~~0x400d24>']}, {'block_Idx': 219, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400fd7>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x30], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x60]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x2c], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x401076>']}, {'block_Idx': 163, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x400d58>']}, {'block_Idx': 117, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 8>', '<call~~0x400360>']}, {'block_Idx': 195, 'blockInsts': ['<jmp~~0x4010e4>']}, {'block_Idx': 213, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x38]>', '<add~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<mov~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x400f8c>']}, {'block_Idx': 176, 'blockInsts': ['<jmp~~0x400fcf>']}, {'block_Idx': 173, 'blockInsts': ['<lea~~rdi, [rip + 0x21de]>', '<lea~~rsi, [rip + 0x215f]>', '<mov~~edx, 0x2ba>', '<lea~~rcx, [rip + 0x21dc]>', '<call~~0x500028>']}, {'block_Idx': 158, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rax + 0x40]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<imul~~ecx, dword ptr [rax + 0xc]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~esi, dword ptr [rax + 0x4c]>', '<mov~~eax, 2>', '<mov~~edx, 4>', '<cmp~~esi, 0>', '<cmovne~~eax, edx>', '<imul~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x88]>', '<mov~~dword ptr [rax], ecx>', '<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<call~~0x4015f0>']}, {'block_Idx': 56, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<mov~~eax, eax>', '<add~~rdi, rax>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<movsxd~~rdx, dword ptr [rsp + 0x7c]>', '<call~~0x500020>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 4]>', '<mov~~dword ptr [rsp + 0x1c], eax>', '<jmp~~0x40087a>']}, {'block_Idx': 73, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x34]>', '<add~~rsp, 0x38>', '<ret~~>']}, {'block_Idx': 94, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x400360>']}, {'block_Idx': 122, 'blockInsts': ['<jmp~~0x40111a>']}, {'block_Idx': 190, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400f9e>']}, {'block_Idx': 55, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x98]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0xa4]>', '<add~~rax, rcx>', '<mov~~qword ptr [rsp + 0x80], rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x7c], eax>', '<mov~~ecx, dword ptr [rsp + 0x7c]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa0], ecx>', '<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 4]>', '<jge~~0x400aa7>']}, {'block_Idx': 43, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rsi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<add~~rsi, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~edx, eax>', '<call~~0x500018>']}, {'block_Idx': 50, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xa0], 0>', '<je~~0x4011d4>']}, {'block_Idx': 211, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x2c]>', '<sar~~ecx, 1>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x30], eax>', '<add~~eax, dword ptr [rsp + 0x2c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x4010d0>']}, {'block_Idx': 166, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x400e84>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x10], eax>', '<mov~~eax, dword ptr [rsp + 0x10]>', '<mov~~dword ptr [rsp + 0x7c], eax>', '<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x60], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jb~~0x40092e>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x20], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 4]>', '<mov~~dword ptr [rsp + 0x24], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 4]>', '<jbe~~0x40086b>']}, {'block_Idx': 1, 'blockInsts': ['<mov~~eax, 4>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jle~~0x4007b7>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~dword ptr [rsp + 0x64], 0>', '<mov~~eax, dword ptr [rsp + 0x64]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400d46>']}, {'block_Idx': 531, 'blockInsts': ['<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011df>']}, {'block_Idx': 80, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x401570>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~eax, 4>', '<mov~~dword ptr [rsp + 0x28], eax>', '<jmp~~0x4007bf>']}, {'block_Idx': 111, 'blockInsts': ['<mov~~al, byte ptr [rsp + 0xf]>', '<test~~al, 1>', '<jne~~0x400bc2>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x40]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<mov~~eax, dword ptr [rsp + 0x40]>', '<sub~~eax, dword ptr [rsp + 0x3c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x400e62>']}, {'block_Idx': 217, 'blockInsts': ['<jmp~~0x400e62>']}, {'block_Idx': 209, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x64]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400d46>']}, {'block_Idx': 563, 'blockInsts': ['<mov~~rcx, qword ptr [rsp - 0x10]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax], rcx>', '<mov~~ecx, dword ptr [rsp - 0x14]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x14], ecx>', '<mov~~rcx, qword ptr [rsp - 0x10]>', '<movsxd~~rax, dword ptr [rsp - 0x18]>', '<add~~rcx, rax>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax + 8], rcx>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x10], 0>', '<ret~~>']}, {'block_Idx': 47, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xa8]>', '<jbe~~0x400a05>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<mov~~ecx, dword ptr [rsp + 0x5c]>', '<sub~~ecx, dword ptr [rsp + 0x7c]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x1e40]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 28, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x14], eax>', '<mov~~eax, dword ptr [rsp + 0x18]>', '<mov~~ecx, dword ptr [rsp + 0x14]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x10], eax>', '<jmp~~0x4008e2>']}, {'block_Idx': 110, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x401570>']}, {'block_Idx': 210, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x2c]>', '<sar~~ecx, 1>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x30], eax>', '<add~~eax, dword ptr [rsp + 0x2c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x4010d2>']}, {'block_Idx': 172, 'blockInsts': ['<jmp~~0x400d77>']}, {'block_Idx': 187, 'blockInsts': ['<jmp~~0x400d36>']}, {'block_Idx': 19, 'blockInsts': ['<cmp~~dword ptr [rsp + 0x7c], 0x18>', '<jge~~0x400ad2>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x1c], eax>', '<mov~~eax, dword ptr [rsp + 0x20]>', '<mov~~ecx, dword ptr [rsp + 0x24]>', '<mov~~edx, dword ptr [rsp + 0x1c]>', '<sub~~ecx, edx>', '<cmp~~eax, ecx>', '<jbe~~0x4008da>']}, {'block_Idx': 82, 'blockInsts': ['<mov~~dword ptr [rsp + 0x34], eax>', '<mov~~eax, dword ptr [rsp + 0x34]>', '<add~~rsp, 0x38>', '<ret~~>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x28]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 4], ecx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rsi, qword ptr [rsp + 0x70]>', '<add~~rsi, 0xa8>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~edx, dword ptr [rax + 4]>', '<call~~0x500010>']}, {'block_Idx': 186, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x400cea>']}, {'block_Idx': 79, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<call~~0x4013f0>']}, {'block_Idx': 115, 'blockInsts': ['<sub~~rsp, 0x28>', '<mov~~qword ptr [rsp + 0x18], rdi>', '<mov~~dword ptr [rsp + 0x14], esi>', '<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~eax, dword ptr [rax + 0x10]>', '<mov~~dword ptr [rsp + 0xc], eax>', '<mov~~dword ptr [rsp + 8], 0>', '<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~rax, qword ptr [rax]>', '<mov~~ecx, dword ptr [rsp + 0xc]>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<mov~~dword ptr [rsp + 0x24], eax>', '<mov~~eax, dword ptr [rsp + 0x24]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x24], eax>', '<mov~~eax, dword ptr [rsp + 0x24]>', '<mov~~ecx, dword ptr [rsp + 0xc]>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~dword ptr [rsp + 8], eax>', '<mov~~edi, dword ptr [rsp + 8]>', '<mov~~eax, dword ptr [rsp + 0x14]>', '<movsx~~esi, al>', '<call~~0x401230>']}, {'block_Idx': 212, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x38]>', '<add~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<mov~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x400f8e>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}, {'block_Idx': 545, 'blockInsts': ['<xor~~eax, eax>', '<add~~rsp, 0x38>', '<ret~~>']}, {'block_Idx': 125, 'blockInsts': ['<mov~~dword ptr [rsp + 0x10], eax>', '<mov~~eax, dword ptr [rsp + 0x10]>', '<add~~rsp, 0x28>', '<ret~~>']}, {'block_Idx': 26, 'blockInsts': ['<jmp~~0x40111a>']}, {'block_Idx': 57, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5c]>', '<mov~~dword ptr [rsp + 0xa4], eax>', '<mov~~eax, dword ptr [rsp + 0xa4]>', '<add~~rsp, 0xa8>', '<ret~~>']}, {'block_Idx': 157, 'blockInsts': ['<mov~~rax, qword ptr [rsp]>', '<lea~~rcx, [rip + 0x2086]>', '<movsxd~~rax, dword ptr [rcx + rax*4]>', '<add~~rax, rcx>', '<jmp~~rax>']}, {'block_Idx': 200, 'blockInsts': ['<jmp~~0x4010e4>']}, {'block_Idx': 66, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011df>']}, {'block_Idx': 179, 'blockInsts': ['<lea~~rdi, [rip + 0x20b2]>', '<lea~~rsi, [rip + 0x2033]>', '<mov~~edx, 0x2bc>', '<lea~~rcx, [rip + 0x20b0]>', '<call~~0x500028>']}, {'block_Idx': 529, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x23f2]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 107, 'blockInsts': ['<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~ecx, eax>', '<add~~ecx, 2>', '<xor~~eax, eax>', '<cmp~~ecx, dword ptr [rsp + 0x7c]>', '<mov~~byte ptr [rsp + 0xf], al>', '<jge~~0x400bb8>']}, {'block_Idx': 527, 'blockInsts': ['<cmp~~eax, 0>', '<je~~0x400b24>']}, {'block_Idx': 76, 'blockInsts': ['<cmp~~eax, 0x664c6143>', '<jne~~0x400b29>']}, {'block_Idx': 162, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011df>']}, {'block_Idx': 63, 'blockInsts': ['<cmp~~dword ptr [rsp + 0x60], 0>', '<je~~0x400aa7>']}, {'block_Idx': 30, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0xa4]>', '<add~~rsp, 0xa8>', '<ret~~>']}, {'block_Idx': 562, 'blockInsts': ['<mov~~dword ptr [rsp - 0x14], 0>', '<mov~~dword ptr [rsp - 0x18], 0>', '<mov~~qword ptr [rsp - 0x10], 0>', '<mov~~rcx, qword ptr [rsp - 0x10]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax], rcx>', '<mov~~ecx, dword ptr [rsp - 0x14]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x14], ecx>', '<mov~~rcx, qword ptr [rsp - 0x10]>', '<movsxd~~rax, dword ptr [rsp - 0x18]>', '<add~~rcx, rax>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax + 8], rcx>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x10], 0>', '<ret~~>']}, {'block_Idx': 202, 'blockInsts': ['<jmp~~0x4010e4>']}, {'block_Idx': 555, 'blockInsts': ['<mov~~qword ptr [rsp - 8], rdi>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~eax, dword ptr [rax + 0x10]>', '<ret~~>']}, {'block_Idx': 64, 'blockInsts': ['<jmp~~0x400aa9>']}, {'block_Idx': 42, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<mov~~eax, eax>', '<add~~rdi, rax>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<movsxd~~rdx, dword ptr [rsp + 0x7c]>', '<call~~0x500020>']}, {'block_Idx': 206, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x40]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<mov~~eax, dword ptr [rsp + 0x40]>', '<sub~~eax, dword ptr [rsp + 0x3c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x400e60>']}, {'block_Idx': 194, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x40], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x60]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x3c], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x400e12>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x20]>', '<mov~~ecx, dword ptr [rsp + 0x24]>', '<mov~~edx, dword ptr [rsp + 0x1c]>', '<sub~~ecx, edx>', '<cmp~~eax, ecx>', '<jbe~~0x4008da>']}, {'block_Idx': 3, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x28], eax>', '<mov~~ecx, dword ptr [rsp + 0x28]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 4], ecx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rsi, qword ptr [rsp + 0x70]>', '<add~~rsi, 0xa8>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~edx, dword ptr [rax + 4]>', '<call~~0x500010>']}, {'block_Idx': 174, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xc]>', '<jge~~0x400d34>']}, {'block_Idx': 560, 'blockInsts': ['<mov~~qword ptr [rsp - 8], rdi>', '<mov~~qword ptr [rsp - 0x10], rsi>', '<mov~~dword ptr [rsp - 0x14], edx>', '<mov~~eax, dword ptr [rsp - 0x14]>', '<add~~eax, 7>', '<sar~~eax, 3>', '<mov~~dword ptr [rsp - 0x18], eax>', '<cmp~~dword ptr [rsp - 0x18], 0>', '<jl~~0x40030a>']}, {'block_Idx': 27, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x20>', '<call~~0x401380>']}, {'block_Idx': 35, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x18]>', '<mov~~ecx, dword ptr [rsp + 0x14]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x10], eax>', '<jmp~~0x4008e2>']}, {'block_Idx': 25, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xa4]>', '<jae~~0x40093e>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<mov~~edx, dword ptr [rsp + 0x7c]>', '<shl~~edx, 3>', '<call~~0x4002e0>']}, {'block_Idx': 33, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x28], rdi>', '<mov~~dword ptr [rsp + 0x24], esi>', '<cmp~~dword ptr [rsp + 0x24], 0x11>', '<jg~~0x4013a8>']}, {'block_Idx': 44, 'blockInsts': ['<add~~eax, 7>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~dword ptr [rsp + 0x5c], eax>', '<mov~~eax, dword ptr [rsp + 0x5c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jle~~0x40118d>']}, {'block_Idx': 177, 'blockInsts': ['<lea~~rdi, [rip + 0x1f86]>', '<lea~~rsi, [rip + 0x1f07]>', '<mov~~edx, 0x2be>', '<lea~~rcx, [rip + 0x1f84]>', '<call~~0x500028>']}, {'block_Idx': 101, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<call~~0x4015f0>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 4]>', '<mov~~dword ptr [rsp + 0x18], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 4]>', '<jbe~~0x4008bb>']}, {'block_Idx': 528, 'blockInsts': ['<jmp~~0x40111a>']}, {'block_Idx': 32, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<call~~0x4015f0>']}, {'block_Idx': 103, 'blockInsts': ['<sub~~rsp, 0x58>', '<mov~~qword ptr [rsp + 0x48], rdi>', '<mov~~dword ptr [rsp + 0x44], esi>', '<mov~~rdi, qword ptr [rsp + 0x48]>', '<add~~rdi, 0x28>', '<mov~~esi, 4>', '<call~~0x4003e0>']}, {'block_Idx': 165, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x400fb0>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}, {'block_Idx': 221, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400eab>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x98]>', '<cmp~~dword ptr [rax], 0x43614c66>', '<je~~0x4008ea>']}, {'block_Idx': 31, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa8]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0xa0]>', '<add~~ecx, dword ptr [rsp + 0x7c]>', '<cmp~~eax, ecx>', '<jae~~0x400997>']}, {'block_Idx': 226, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x4010e2>']}, {'block_Idx': 0, 'blockInsts': ['<sub~~rsp, 0xa8>', '<mov~~qword ptr [rsp + 0x98], rdi>', '<mov~~qword ptr [rsp + 0x90], rsi>', '<mov~~qword ptr [rsp + 0x88], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~dword ptr [rsp + 0x7c], r8d>', '<mov~~rax, qword ptr [rsp + 0x98]>', '<mov~~rax, qword ptr [rax + 0xa0]>', '<mov~~qword ptr [rsp + 0x70], rax>', '<mov~~dword ptr [rsp + 0x6c], 0>', '<mov~~dword ptr [rsp + 0x64], 0>', '<mov~~dword ptr [rsp + 0x60], 0>', '<mov~~dword ptr [rsp + 0x5c], 0>', '<mov~~rax, qword ptr [rsp + 0x90]>', '<mov~~qword ptr [rsp + 0x50], rax>', '<mov~~rax, qword ptr [rsp + 0x90]>', '<mov~~qword ptr [rsp + 0x48], rax>', '<mov~~rax, qword ptr [rsp + 0x88]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x44], eax>', '<mov~~rax, qword ptr [rsp + 0x88]>', '<mov~~dword ptr [rax], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<jne~~0x4007ff>']}, {'block_Idx': 220, 'blockInsts': ['<jmp~~0x4010d2>']}, {'block_Idx': 184, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400e72>']}, {'block_Idx': 24, 'blockInsts': ['<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011df>']}, {'block_Idx': 100, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<mov~~esi, dword ptr [rsp + 0x44]>', '<call~~0x401600>']}, {'block_Idx': 343, 'blockInsts': ['<mov~~dword ptr [rsp + 0x54], 0>', '<mov~~eax, dword ptr [rsp + 0x54]>', '<add~~rsp, 0x58>', '<ret~~>']}, {'block_Idx': 95, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x23a9]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x64]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x400d24>']}, {'block_Idx': 18, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x60], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jb~~0x40092e>']}, {'block_Idx': 58, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5c]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<add~~ecx, dword ptr [rax + 0xa4]>', '<mov~~dword ptr [rax + 0xa4], ecx>', '<mov~~edx, dword ptr [rsp + 0x5c]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rax + 0xa0]>', '<sub~~ecx, edx>', '<mov~~dword ptr [rax + 0xa0], ecx>', '<mov~~eax, dword ptr [rsp + 0x60]>', '<mov~~dword ptr [rsp + 0xa4], eax>', '<jmp~~0x4011df>']}, {'block_Idx': 218, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xc]>', '<jge~~0x400d34>']}], 'cfg_edge_info': [(64, 5), (206, 217), (201, 212), (194, 206), (125, 128), (164, 174), (562, 19), (202, 158), (190, 202), (207, 218), (5, 19), (555, 44), (76, 79), (128, 117), (37, 42), (6, 11), (126, 101), (174, 187), (16, 22), (26, 32), (209, 175), (17, 23), (226, 200), (100, 103), (157, 164), (158, 44), (79, 83), (80, 115), (218, 186), (73, 76), (150, 152), (188, 200), (165, 177), (153, 157), (51, 66), (216, 225), (157, 166), (212, 221), (166, 178), (24, 30), (55, 63), (107, 110), (44, 51), (116, 122), (219, 226), (200, 158), (163, 173), (34, 25), (21, 25), (23, 22), (0, 2), (199, 211), (80, 92), (92, 94), (1, 3), (19, 27), (47, 43), (162, 30), (213, 222), (172, 184), (56, 55), (117, 126), (184, 195), (63, 70), (25, 31), (528, 32), (12, 6), (227, 202), (3, 12), (208, 207), (190, 201), (31, 37), (555, 107), (175, 158), (58, 30), (186, 197), (10, 17), (27, 33), (25, 24), (16, 21), (82, 76), (122, 32), (147, 150), (164, 175), (563, 19), (209, 174), (527, 529), (577, 100), (226, 199), (5, 560), (2, 6), (101, 555), (187, 198), (11, 18), (28, 34), (197, 208), (36, 47), (110, 115), (50, 58), (188, 199), (158, 555), (165, 176), (100, 150), (32, 555), (198, 209), (529, 531), (94, 100), (218, 187), (111, 116), (163, 172), (194, 205), (18, 25), (21, 24), (23, 21), (222, 221), (217, 216), (4, 8), (95, 101), (27, 76), (152, 162), (178, 190), (19, 26), (47, 42), (128, 116), (111, 117), (225, 195), (6, 10), (174, 186), (12, 5), (227, 201), (35, 34), (201, 213), (43, 56), (101, 107), (1, 4), (10, 16), (125, 92), (221, 227), (76, 80), (196, 207), (37, 43), (94, 577), (157, 163), (220, 219), (79, 527), (527, 528), (8, 12), (70, 30), (176, 188), (2, 5), (63, 64), (157, 165), (195, 158), (545, 527), (50, 57), (44, 50), (150, 153), (117, 577), (34, 24), (0, 1), (153, 158), (199, 210), (11, 10), (210, 219), (166, 179), (184, 194), (55, 64), (32, 44), (211, 220), (18, 24), (531, 30), (107, 111), (42, 55), (110, 128), (31, 36), (343, 150), (92, 95), (205, 216), (186, 196), (225, 194), (66, 30)], 'cdg_edge_info': [(92, 122), (201, 212), (166, 190), (194, 206), (164, 174), (227, 221), (218, 218), (0, 5), (23, 34), (31, 47), (111, 101), (128, 117), (76, 79), (165, 200), (6, 11), (209, 209), (184, 216), (34, 30), (128, 101), (166, 158), (1, 8), (92, 44), (157, 164), (19, 32), (218, 186), (18, 30), (150, 152), (165, 177), (153, 157), (92, 101), (157, 166), (166, 178), (190, 227), (55, 63), (107, 110), (44, 51), (163, 173), (34, 25), (21, 25), (0, 2), (199, 211), (227, 227), (165, 188), (92, 94), (1, 3), (19, 27), (47, 43), (63, 70), (25, 31), (12, 6), (165, 44), (190, 201), (163, 184), (31, 37), (128, 107), (92, 32), (184, 225), (186, 197), (25, 24), (16, 21), (527, 44), (225, 216), (174, 207), (209, 174), (225, 225), (527, 529), (226, 199), (163, 195), (2, 6), (11, 18), (44, 30), (76, 92), (47, 56), (63, 19), (157, 175), (165, 158), (188, 199), (12, 19), (50, 58), (165, 176), (527, 531), (174, 218), (107, 128), (50, 30), (164, 198), (25, 19), (111, 107), (527, 30), (163, 44), (163, 172), (63, 30), (18, 25), (21, 24), (194, 205), (23, 21), (19, 26), (10, 23), (63, 5), (164, 209), (19, 44), (6, 10), (174, 186), (227, 201), (12, 5), (201, 213), (150, 30), (1, 4), (25, 5), (153, 44), (10, 16), (76, 80), (190, 221), (37, 43), (157, 44), (157, 163), (92, 107), (163, 158), (226, 226), (92, 116), (527, 528), (166, 202), (44, 66), (19, 76), (188, 226), (92, 100), (63, 64), (157, 165), (226, 219), (50, 57), (16, 34), (44, 50), (21, 30), (150, 153), (34, 24), (25, 55), (0, 1), (150, 162), (153, 158), (199, 210), (25, 64), (11, 10), (188, 219), (0, 19), (157, 158), (37, 56), (166, 179), (184, 194), (25, 30), (527, 32), (18, 24), (107, 111), (218, 207), (209, 198), (31, 36), (0, 12), (92, 150), (92, 95), (166, 44), (186, 196), (225, 194), (111, 117)], 'ddg_edge_info': [(0, 158), (79, 51), (0, 5), (207, 218), (0, 23), (80, 95), (12, 226), (25, 43), (153, 201), (79, 163), (184, 216), (153, 210), (153, 219), (95, 107), (92, 209), (12, 100), (92, 218), (80, 225), (92, 227), (153, 66), (6, 34), (128, 158), (6, 43), (12, 212), (80, 117), (196, 158), (190, 227), (205, 225), (19, 107), (153, 196), (79, 158), (44, 51), (25, 47), (153, 205), (34, 25), (66, 57), (12, 95), (80, 211), (92, 213), (47, 43), (36, 43), (206, 225), (162, 57), (6, 47), (27, 79), (6, 56), (80, 94), (12, 225), (153, 173), (79, 153), (79, 162), (153, 209), (92, 199), (80, 197), (80, 206), (27, 209), (164, 196), (55, 51), (36, 47), (27, 218), (27, 227), (0, 210), (47, 56), (36, 56), (50, 58), (188, 199), (210, 199), (12, 211), (213, 201), (205, 206), (27, 101), (153, 177), (94, 100), (153, 186), (27, 110), (12, 58), (194, 205), (92, 194), (55, 19), (95, 101), (80, 201), (12, 94), (95, 110), (80, 210), (92, 212), (210, 158), (153, 51), (27, 213), (0, 205), (164, 209), (6, 10), (58, 57), (201, 213), (80, 66), (12, 197), (12, 206), (153, 163), (0, 70), (221, 227), (190, 221), (94, 95), (153, 190), (55, 5), (12, 80), (80, 196), (80, 205), (27, 199), (198, 197), (27, 226), (0, 209), (94, 225), (12, 201), (80, 79), (12, 210), (11, 56), (0, 56), (153, 158), (92, 157), (92, 166), (12, 57), (12, 66), (94, 117), (27, 194), (27, 212), (94, 211), (197, 196), (27, 50), (201, 212), (12, 196), (8, 55), (0, 51), (12, 25), (12, 34), (31, 47), (95, 50), (92, 152), (12, 43), (34, 58), (196, 218), (79, 209), (80, 186), (107, 51), (79, 218), (79, 227), (94, 197), (94, 206), (55, 107), (80, 51), (197, 209), (197, 218), (79, 101), (79, 110), (11, 55), (0, 55), (153, 157), (94, 80), (12, 47), (92, 165), (80, 163), (12, 56), (27, 166), (79, 213), (94, 201), (197, 186), (94, 210), (213, 158), (19, 27), (8, 36), (27, 58), (12, 6), (0, 50), (94, 66), (190, 201), (12, 24), (184, 225), (95, 58), (80, 158), (27, 152), (79, 199), (56, 57), (79, 226), (174, 207), (94, 196), (94, 205), (12, 163), (152, 57), (8, 31), (205, 158), (0, 27), (0, 36), (11, 36), (211, 210), (12, 10), (94, 79), (25, 56), (80, 153), (80, 162), (79, 194), (27, 165), (79, 212), (56, 70), (34, 70), (197, 158), (79, 50), (12, 158), (0, 4), (0, 31), (19, 44), (12, 5), (12, 23), (153, 218), (153, 227), (34, 47), (34, 56), (92, 226), (12, 117), (216, 194), (174, 197), (94, 186), (8, 12), (0, 8), (8, 21), (210, 226), (188, 226), (94, 51), (79, 166), (212, 201), (25, 55), (153, 213), (94, 163), (79, 58), (0, 3), (531, 57), (8, 16), (0, 12), (6, 55), (219, 199), (0, 21), (92, 95), (79, 152), (153, 199), (128, 44), (196, 197), (153, 226), (94, 158), (92, 225), (55, 50), (47, 55), (70, 57), (8, 11), (0, 16), (211, 199), (27, 100), (213, 227), (56, 5), (153, 194), (3, 8), (79, 165), (51, 57), (153, 212), (51, 66), (153, 221), (92, 211), (80, 209), (94, 153), (80, 218), (206, 205), (153, 50), (94, 162), (80, 227), (207, 197), (211, 158), (6, 36), (199, 211), (12, 205), (21, 34), (210, 211), (92, 94), (80, 101), (27, 95), (80, 110), (153, 198), (153, 207), (12, 79), (153, 216), (92, 197), (92, 206), (80, 213), (198, 196), (55, 58), (27, 225), (6, 31), (12, 209), (12, 218), (153, 166), (12, 227), (153, 184), (27, 117), (0, 100), (80, 199), (92, 201), (24, 57), (92, 210), (12, 101), (95, 117), (55, 44), (27, 211), (164, 198), (80, 226), (153, 58), (198, 209), (0, 212), (12, 186), (12, 213), (213, 212), (27, 94), (10, 23), (153, 179), (12, 51), (153, 188), (153, 197), (43, 56), (80, 194), (92, 196), (92, 205), (27, 197), (80, 212), (27, 206), (0, 198), (80, 50), (79, 100), (12, 199), (205, 194), (0, 63), (27, 80), (153, 165), (153, 174), (12, 55), (206, 158), (206, 194), (27, 201), (27, 210), (164, 197), (94, 209), (94, 218), (94, 227), (529, 57), (6, 16), (6, 25), (79, 95), (12, 194), (27, 66), (0, 58), (12, 50), (94, 101), (95, 66), (80, 166), (94, 110), (92, 186), (194, 206), (79, 225), (27, 196), (27, 205), (12, 153), (128, 117), (0, 197), (12, 162), (94, 213), (80, 58), (0, 44), (8, 57), (221, 201), (79, 117), (12, 27), (153, 164), (12, 36), (80, 152), (92, 163), (107, 44), (79, 211), (216, 225), (94, 199), (12, 166), (8, 25), (94, 226), (8, 34), (8, 43), (79, 94), (219, 226), (0, 57), (0, 66), (12, 31), (92, 158), (80, 165), (79, 197), (34, 55), (56, 55), (79, 206), (174, 196), (27, 186), (94, 194), (128, 107), (12, 152), (0, 196), (94, 212), (79, 80), (0, 25), (27, 51), (0, 34), (8, 47), (94, 50), (0, 43), (11, 43), (8, 56), (211, 226), (44, 58), (95, 51), (92, 153), (212, 227), (79, 201), (27, 163), (16, 23), (79, 210), (174, 218), (8, 6), (107, 128), (79, 66), (0, 11), (12, 165), (8, 24), (529, 531), (19, 51), (0, 47), (4, 8), (12, 21), (25, 58), (152, 162), (212, 213), (34, 36), (153, 225), (79, 196), (27, 158), (79, 205), (56, 63), (34, 63), (94, 166), (95, 158), (8, 10), (0, 6), (0, 24), (94, 58), (12, 16), (44, 57), (153, 211), (34, 31), (27, 153), (196, 209), (94, 152), (27, 162), (12, 110), (19, 158), (56, 58), (207, 196), (8, 5), (0, 1), (199, 210), (0, 10), (8, 23), (188, 219), (0, 19), (80, 100), (212, 158), (184, 194), (12, 11), (153, 206), (196, 186), (79, 186), (94, 165)]}]}
{'flac_decode_frame': [{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 193, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 194, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 195, 'instruction': 'movq\t0x80(%rsp), %rsi'}, {'instIndex': 196, 'instruction': 'movl\t0x7c(%rsp), %edx'}, {'instIndex': 197, 'instruction': 'shll\t$3, %edx'}, {'instIndex': 198, 'instruction': 'callq\tinit_get_bits'}, {'instIndex': 199, 'instruction': 'cmpl\t$0x18, 0x7c(%rsp)'}, {'instIndex': 200, 'instruction': 'jge\t.LBB10_31'}, {'instIndex': 201, 'instruction': 'jmp\t.LBB10_91'}, {'instIndex': 202, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 203, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 204, 'instruction': 'movl\t$0x20, %esi'}, {'instIndex': 205, 'instruction': 'callq\tshow_bits_long'}, {'instIndex': 206, 'instruction': 'cmpl\t$0x664c6143, %eax               # imm = 0x0x298C0x17ff'}, {'instIndex': 207, 'instruction': 'jne\t.LBB10_35'}, {'instIndex': 208, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 209, 'instruction': 'callq\tmetadata_parse'}, {'instIndex': 210, 'instruction': 'cmpl\t$0, %eax'}, {'instIndex': 211, 'instruction': 'je\t.LBB10_34'}]}]}
The case of compiler clang with optimization O0.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O0/flacdec.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O0/flacdec.s---flac_decode_frame---after
function id: 10
function flag: True
There are 644 instructions for function: flac_decode_frame in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '639', 'end': 649}, 'before': {'start': '639', 'end': 644}}}]
[{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 193, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 194, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 195, 'instruction': 'movq\t0x80(%rsp), %rsi'}, {'instIndex': 196, 'instruction': 'movl\t0x7c(%rsp), %edx'}, {'instIndex': 197, 'instruction': 'shll\t$3, %edx'}, {'instIndex': 198, 'instruction': 'callq\tinit_get_bits'}, {'instIndex': 199, 'instruction': 'cmpl\t$0x18, 0x7c(%rsp)'}, {'instIndex': 200, 'instruction': 'jge\t.LBB10_31'}, {'instIndex': 201, 'instruction': 'jmp\t.LBB10_91'}, {'instIndex': 202, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 203, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 204, 'instruction': 'movl\t$0x20, %esi'}, {'instIndex': 205, 'instruction': 'callq\tshow_bits_long'}, {'instIndex': 206, 'instruction': 'cmpl\t$0x664c6143, %eax               # imm = 0x0x298C0x17ff'}, {'instIndex': 207, 'instruction': 'jne\t.LBB10_35'}, {'instIndex': 208, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 209, 'instruction': 'callq\tmetadata_parse'}, {'instIndex': 210, 'instruction': 'cmpl\t$0, %eax'}, {'instIndex': 211, 'instruction': 'je\t.LBB10_34'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O0/flacdec.o
Patched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O0/flacdec.o---after
The extraction of function: flac_decode_frame
Analyzing the binaries to generate subCFGs from patched function ...
It has 580 nodes and 1009 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 644 instructions in binary file.
[4197033, 4197062, 4197069, 4197074, 4197093, 4197100, 4197110]
The execution time of patched subCFG information extraction via angr: 0:00:03.311357
{'flac_decode_frame': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400ac6>, <DisassemblerInsn "jge" for 0x400acb>]'}, {'block_Idx': 26, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b29>, <DisassemblerInsn "add" for 0x400b2e>, <DisassemblerInsn "mov" for 0x400b32>, <DisassemblerInsn "call" for 0x400b37>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aa9>, <DisassemblerInsn "add" for 0x400aae>, <DisassemblerInsn "mov" for 0x400ab2>, <DisassemblerInsn "mov" for 0x400aba>, <DisassemblerInsn "shl" for 0x400abe>, <DisassemblerInsn "call" for 0x400ac1>]'}, {'block_Idx': 25, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aec>, <DisassemblerInsn "call" for 0x400af1>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007f0>, <DisassemblerInsn "mov" for 0x4007f3>, <DisassemblerInsn "mov" for 0x4007f8>, <DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400acd>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ad2>, <DisassemblerInsn "add" for 0x400ad7>, <DisassemblerInsn "mov" for 0x400adb>, <DisassemblerInsn "call" for 0x400ae0>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400ae5>, <DisassemblerInsn "jne" for 0x400aea>]'}, {'block_Idx': 42, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400b24>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40111a>, <DisassemblerInsn "add" for 0x40111f>, <DisassemblerInsn "call" for 0x401123>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400aa7>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400afb>, <DisassemblerInsn "mov" for 0x400b00>, <DisassemblerInsn "xor" for 0x400b04>, <DisassemblerInsn "lea" for 0x400b06>, <DisassemblerInsn "mov" for 0x400b0d>, <DisassemblerInsn "call" for 0x400b0f>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400af6>, <DisassemblerInsn "je" for 0x400af9>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}], 'cfg_block_detailed_info': [{'block_Idx': 9, 'blockInsts': ['<cmp~~dword ptr [rsp + 0x7c], 0x18>', '<jge~~0x400ad2>']}, {'block_Idx': 26, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x401570>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<mov~~edx, dword ptr [rsp + 0x7c]>', '<shl~~edx, 3>', '<call~~0x4002e0>']}, {'block_Idx': 25, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<call~~0x4013f0>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}, {'block_Idx': 12, 'blockInsts': ['<jmp~~0x40111a>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x20>', '<call~~0x401380>']}, {'block_Idx': 18, 'blockInsts': ['<cmp~~eax, 0x664c6143>', '<jne~~0x400b29>']}, {'block_Idx': 42, 'blockInsts': ['<jmp~~0x40111a>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<call~~0x4015f0>']}, {'block_Idx': 57, 'blockInsts': ['<jmp~~0x400aa9>']}, {'block_Idx': 43, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x23f2]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 33, 'blockInsts': ['<cmp~~eax, 0>', '<je~~0x400b24>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}], 'cfg_edge_info': [(12, 17), (9, 13), (33, 42), (18, 26), (9, 12), (33, 43), (18, 25), (13, 18), (25, 33), (5, 9), (7, 5), (2, 5), (57, 5)]}]}
{'flac_decode_frame': [4197033, 4197062, 4197069, 4197074, 4197093, 4197100, 4197110]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O0/flacdec.o---after
The extraction of function: flac_decode_frame
[4197033, 4197062, 4197069, 4197074, 4197093, 4197100, 4197110]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 832 nodes and 1246 edges in CFGEmulated.
It has 832 nodes and 1468 edges in CDG.
It has 11203 nodes and 25120 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4197033, 4197062, 4197069, 4197074, 4197093, 4197100, 4197110]
{4197378, 4196366, 4197906, 4197403, 4196380, 4198430, 4196404, 4196926, 4197449, 4197471, 4197986, 4196459, 4198002, 4197491, 4198518, 4198007, 4196474, 4197499, 4198018, 4198020, 4197517, 4197008, 4197525, 4197015, 4198051, 4197031, 4197543, 4197033, 4198059, 4197554, 4198077, 4197062, 4197069, 4197074, 4198610, 4196570, 4196578, 4198626, 4198628, 4197093, 4196586, 4197610, 4197100, 4198130, 4197110, 4197115, 4196096, 4196615, 4197140, 4198682, 4197156, 4197668, 4198696, 4197161, 4196654, 4197686, 4197180, 4196670, 4198206, 4198721, 4197702, 4197707, 4197204, 4197718, 4197720, 4196700, 4198754, 4197229, 4197751, 4197243, 4197759, 4196744, 4198797, 4198286, 4197777, 4197268, 4196759, 4198811, 4198302, 4196257, 4198307, 4197287, 4196268, 4198318, 4198320, 4196279, 4197304, 4196798, 4196287, 4197312, 4197314, 4197830, 4198351, 4198868, 4197335, 4198359, 4197340, 4198879, 4198377, 4197359, 4196336, 4196854, 4197373, 4196351}
[152, 83, 207, 197, 225, 153, 577, 6, 92, 37, 147, 216, 70, 222, 36, 201, 116, 175, 227, 34, 178, 128, 126, 198, 188, 150, 208, 219, 199, 163, 117, 195, 213, 176, 173, 158, 56, 17, 73, 94, 122, 190, 55, 43, 50, 211, 166, 21, 10, 1, 164, 531, 80, 4, 111, 205, 217, 209, 563, 47, 51, 28, 110, 210, 172, 187, 19, 16, 82, 8, 186, 79, 115, 212, 2, 545, 125, 26, 57, 157, 200, 66, 179, 529, 107, 527, 76, 162, 63, 30, 562, 202, 555, 64, 42, 206, 194, 23, 3, 174, 560, 27, 35, 25, 5, 33, 44, 177, 101, 22, 528, 32, 103, 165, 12, 221, 11, 31, 226, 0, 220, 184, 24, 100, 343, 95, 196, 18, 58, 218]
The execution time of patched slicing information extraction via angr: 0:06:05.234390
{'flac_decode_frame': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 152, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c02>, <DisassemblerInsn "mov" for 0x400c07>, <DisassemblerInsn "xor" for 0x400c0b>, <DisassemblerInsn "lea" for 0x400c0d>, <DisassemblerInsn "mov" for 0x400c14>, <DisassemblerInsn "call" for 0x400c16>]'}, {'block_Idx': 83, 'blockInsts': '[<DisassemblerInsn "sub" for 0x4013f0>, <DisassemblerInsn "mov" for 0x4013f4>, <DisassemblerInsn "mov" for 0x4013f9>, <DisassemblerInsn "add" for 0x4013fe>, <DisassemblerInsn "mov" for 0x401402>, <DisassemblerInsn "call" for 0x401407>]'}, {'block_Idx': 207, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d24>, <DisassemblerInsn "add" for 0x400d28>, <DisassemblerInsn "mov" for 0x400d2b>, <DisassemblerInsn "jmp" for 0x400d2f>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cb2>, <DisassemblerInsn "movsxd" for 0x400cb7>, <DisassemblerInsn "mov" for 0x400cbc>, <DisassemblerInsn "movsxd" for 0x400cc1>, <DisassemblerInsn "mov" for 0x400cc6>, <DisassemblerInsn "mov" for 0x400cc9>, <DisassemblerInsn "mov" for 0x400cce>, <DisassemblerInsn "shl" for 0x400cd1>, <DisassemblerInsn "mov" for 0x400cd3>, <DisassemblerInsn "mov" for 0x400cd5>, <DisassemblerInsn "mov" for 0x400cda>, <DisassemblerInsn "add" for 0x400cdd>, <DisassemblerInsn "mov" for 0x400ce1>, <DisassemblerInsn "mov" for 0x400ce6>, <DisassemblerInsn "jmp" for 0x400ce8>]'}, {'block_Idx': 225, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d7f>, <DisassemblerInsn "mov" for 0x400d83>, <DisassemblerInsn "cmp" for 0x400d88>, <DisassemblerInsn "jge" for 0x400d8b>]'}, {'block_Idx': 153, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c49>, <DisassemblerInsn "mov" for 0x400c4e>, <DisassemblerInsn "mov" for 0x400c51>, <DisassemblerInsn "sub" for 0x400c55>, <DisassemblerInsn "ja" for 0x400c59>]'}, {'block_Idx': 577, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400360>, <DisassemblerInsn "mov" for 0x400365>, <DisassemblerInsn "mov" for 0x400369>, <DisassemblerInsn "mov" for 0x40036e>, <DisassemblerInsn "mov" for 0x400371>, <DisassemblerInsn "mov" for 0x400375>, <DisassemblerInsn "mov" for 0x40037d>, <DisassemblerInsn "mov" for 0x400382>, <DisassemblerInsn "mov" for 0x400385>, <DisassemblerInsn "sar" for 0x400389>, <DisassemblerInsn "movsxd" for 0x40038c>, <DisassemblerInsn "mov" for 0x40038f>, <DisassemblerInsn "mov" for 0x400392>, <DisassemblerInsn "mov" for 0x400396>, <DisassemblerInsn "ror" for 0x40039a>, <DisassemblerInsn "ror" for 0x40039e>, <DisassemblerInsn "ror" for 0x4003a1>, <DisassemblerInsn "mov" for 0x4003a5>, <DisassemblerInsn "mov" for 0x4003a9>, <DisassemblerInsn "mov" for 0x4003ad>, <DisassemblerInsn "and" for 0x4003b1>, <DisassemblerInsn "shl" for 0x4003b4>, <DisassemblerInsn "mov" for 0x4003b6>, <DisassemblerInsn "mov" for 0x4003ba>, <DisassemblerInsn "add" for 0x4003be>, <DisassemblerInsn "mov" for 0x4003c2>, <DisassemblerInsn "mov" for 0x4003c6>, <DisassemblerInsn "mov" for 0x4003ca>, <DisassemblerInsn "mov" for 0x4003cf>, <DisassemblerInsn "ret" for 0x4003d2>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40080e>, <DisassemblerInsn "cmp" for 0x400813>, <DisassemblerInsn "jb" for 0x40081a>]'}, {'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b3c>, <DisassemblerInsn "mov" for 0x400b40>, <DisassemblerInsn "and" for 0x400b44>, <DisassemblerInsn "cmp" for 0x400b49>, <DisassemblerInsn "je" for 0x400b4e>]'}, {'block_Idx': 37, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "mov" for 0x4009a2>, <DisassemblerInsn "add" for 0x4009a7>, <DisassemblerInsn "add" for 0x4009ad>, <DisassemblerInsn "mov" for 0x4009b1>, <DisassemblerInsn "cmp" for 0x4009b6>, <DisassemblerInsn "jbe" for 0x4009bc>]'}, {'block_Idx': 147, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b3d>, <DisassemblerInsn "add" for 0x401b41>, <DisassemblerInsn "ret" for 0x401b45>]'}, {'block_Idx': 216, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e62>, <DisassemblerInsn "add" for 0x400e66>, <DisassemblerInsn "mov" for 0x400e69>, <DisassemblerInsn "jmp" for 0x400e6d>]'}, {'block_Idx': 70, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a97>, <DisassemblerInsn "mov" for 0x400a9b>, <DisassemblerInsn "jmp" for 0x400aa2>]'}, {'block_Idx': 222, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400f8c>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40095c>, <DisassemblerInsn "mov" for 0x400961>, <DisassemblerInsn "mov" for 0x400968>, <DisassemblerInsn "add" for 0x40096d>, <DisassemblerInsn "mov" for 0x400974>, <DisassemblerInsn "mov" for 0x400979>, <DisassemblerInsn "add" for 0x40097f>, <DisassemblerInsn "call" for 0x400983>]'}, {'block_Idx': 201, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ebd>, <DisassemblerInsn "mov" for 0x400ec2>, <DisassemblerInsn "movsxd" for 0x400ec6>, <DisassemblerInsn "mov" for 0x400ecb>, <DisassemblerInsn "mov" for 0x400ece>, <DisassemblerInsn "mov" for 0x400ed2>, <DisassemblerInsn "mov" for 0x400ed7>, <DisassemblerInsn "movsxd" for 0x400edb>, <DisassemblerInsn "mov" for 0x400ee0>, <DisassemblerInsn "mov" for 0x400ee3>, <DisassemblerInsn "mov" for 0x400ee7>, <DisassemblerInsn "cmp" for 0x400eec>, <DisassemblerInsn "je" for 0x400ef0>]'}, {'block_Idx': 116, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400bc0>]'}, {'block_Idx': 175, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d46>]'}, {'block_Idx': 227, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400eab>, <DisassemblerInsn "mov" for 0x400eaf>, <DisassemblerInsn "cmp" for 0x400eb4>, <DisassemblerInsn "jge" for 0x400eb7>]'}, {'block_Idx': 34, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008e2>, <DisassemblerInsn "mov" for 0x4008e6>, <DisassemblerInsn "mov" for 0x4008ea>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f2>, <DisassemblerInsn "mov" for 0x4008f7>, <DisassemblerInsn "add" for 0x4008fd>, <DisassemblerInsn "cmp" for 0x400901>, <DisassemblerInsn "jb" for 0x400905>]'}, {'block_Idx': 178, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e82>]'}, {'block_Idx': 128, 'blockInsts': '[<DisassemblerInsn "and" for 0x400ba7>, <DisassemblerInsn "cmp" for 0x400bac>, <DisassemblerInsn "setne" for 0x400bb1>, <DisassemblerInsn "mov" for 0x400bb4>, <DisassemblerInsn "mov" for 0x400bb8>, <DisassemblerInsn "test" for 0x400bbc>, <DisassemblerInsn "jne" for 0x400bbe>]'}, {'block_Idx': 126, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400bd5>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d36>, <DisassemblerInsn "add" for 0x400d3a>, <DisassemblerInsn "mov" for 0x400d3d>, <DisassemblerInsn "jmp" for 0x400d41>]'}, {'block_Idx': 188, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fcf>, <DisassemblerInsn "mov" for 0x400fd7>, <DisassemblerInsn "mov" for 0x400fdb>, <DisassemblerInsn "cmp" for 0x400fe0>, <DisassemblerInsn "jge" for 0x400fe3>]'}, {'block_Idx': 150, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400bfd>, <DisassemblerInsn "jge" for 0x400c00>]'}, {'block_Idx': 208, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d22>]'}, {'block_Idx': 219, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010d2>, <DisassemblerInsn "add" for 0x4010d6>, <DisassemblerInsn "mov" for 0x4010d9>, <DisassemblerInsn "jmp" for 0x4010dd>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fe9>, <DisassemblerInsn "mov" for 0x400fee>, <DisassemblerInsn "movsxd" for 0x400ff2>, <DisassemblerInsn "mov" for 0x400ff7>, <DisassemblerInsn "mov" for 0x400ffa>, <DisassemblerInsn "mov" for 0x400ffe>, <DisassemblerInsn "mov" for 0x401003>, <DisassemblerInsn "movsxd" for 0x401007>, <DisassemblerInsn "mov" for 0x40100c>, <DisassemblerInsn "mov" for 0x40100f>, <DisassemblerInsn "mov" for 0x401013>, <DisassemblerInsn "cmp" for 0x401018>, <DisassemblerInsn "je" for 0x40101c>]'}, {'block_Idx': 163, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d4b>, <DisassemblerInsn "cmp" for 0x400d50>, <DisassemblerInsn "jne" for 0x400d54>]'}, {'block_Idx': 117, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bc2>, <DisassemblerInsn "add" for 0x400bc7>, <DisassemblerInsn "mov" for 0x400bcb>, <DisassemblerInsn "call" for 0x400bd0>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e72>]'}, {'block_Idx': 213, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ef2>, <DisassemblerInsn "add" for 0x400ef6>, <DisassemblerInsn "mov" for 0x400efa>, <DisassemblerInsn "mov" for 0x400eff>, <DisassemblerInsn "shl" for 0x400f02>, <DisassemblerInsn "mov" for 0x400f04>, <DisassemblerInsn "mov" for 0x400f06>, <DisassemblerInsn "mov" for 0x400f0b>, <DisassemblerInsn "add" for 0x400f0e>, <DisassemblerInsn "mov" for 0x400f12>, <DisassemblerInsn "mov" for 0x400f17>, <DisassemblerInsn "mov" for 0x400f19>, <DisassemblerInsn "mov" for 0x400f1d>, <DisassemblerInsn "mov" for 0x400f22>, <DisassemblerInsn "shl" for 0x400f25>, <DisassemblerInsn "mov" for 0x400f27>, <DisassemblerInsn "mov" for 0x400f29>, <DisassemblerInsn "mov" for 0x400f2e>, <DisassemblerInsn "add" for 0x400f31>, <DisassemblerInsn "mov" for 0x400f35>, <DisassemblerInsn "mov" for 0x400f3a>, <DisassemblerInsn "jmp" for 0x400f3c>]'}, {'block_Idx': 176, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400fae>]'}, {'block_Idx': 173, 'blockInsts': '[<DisassemblerInsn "lea" for 0x400d58>, <DisassemblerInsn "lea" for 0x400d5f>, <DisassemblerInsn "mov" for 0x400d66>, <DisassemblerInsn "lea" for 0x400d6b>, <DisassemblerInsn "call" for 0x400d72>]'}, {'block_Idx': 158, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010e4>, <DisassemblerInsn "mov" for 0x4010e9>, <DisassemblerInsn "mov" for 0x4010ec>, <DisassemblerInsn "imul" for 0x4010f1>, <DisassemblerInsn "mov" for 0x4010f5>, <DisassemblerInsn "mov" for 0x4010fa>, <DisassemblerInsn "mov" for 0x4010fd>, <DisassemblerInsn "mov" for 0x401102>, <DisassemblerInsn "cmp" for 0x401107>, <DisassemblerInsn "cmovne" for 0x40110a>, <DisassemblerInsn "imul" for 0x40110d>, <DisassemblerInsn "mov" for 0x401110>, <DisassemblerInsn "mov" for 0x401118>, <DisassemblerInsn "mov" for 0x40111a>, <DisassemblerInsn "add" for 0x40111f>, <DisassemblerInsn "call" for 0x401123>]'}, {'block_Idx': 56, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009f6>, <DisassemblerInsn "mov" for 0x4009fb>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "mov" for 0x400a0a>, <DisassemblerInsn "mov" for 0x400a11>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "mov" for 0x400a1c>, <DisassemblerInsn "add" for 0x400a21>, <DisassemblerInsn "mov" for 0x400a27>, <DisassemblerInsn "add" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a2c>, <DisassemblerInsn "movsxd" for 0x400a34>, <DisassemblerInsn "call" for 0x400a39>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40085d>, <DisassemblerInsn "mov" for 0x400862>, <DisassemblerInsn "mov" for 0x400865>, <DisassemblerInsn "jmp" for 0x400869>]'}, {'block_Idx': 73, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013d9>, <DisassemblerInsn "add" for 0x4013dd>, <DisassemblerInsn "ret" for 0x4013e1>]'}, {'block_Idx': 94, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bdc>, <DisassemblerInsn "add" for 0x400be1>, <DisassemblerInsn "mov" for 0x400be5>, <DisassemblerInsn "call" for 0x400bea>]'}, {'block_Idx': 122, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400bd7>]'}, {'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ea3>, <DisassemblerInsn "mov" for 0x400eab>, <DisassemblerInsn "mov" for 0x400eaf>, <DisassemblerInsn "cmp" for 0x400eb4>, <DisassemblerInsn "jge" for 0x400eb7>]'}, {'block_Idx': 55, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a3e>, <DisassemblerInsn "mov" for 0x400a43>, <DisassemblerInsn "mov" for 0x400a4a>, <DisassemblerInsn "mov" for 0x400a4f>, <DisassemblerInsn "add" for 0x400a55>, <DisassemblerInsn "mov" for 0x400a58>, <DisassemblerInsn "mov" for 0x400a60>, <DisassemblerInsn "mov" for 0x400a65>, <DisassemblerInsn "add" for 0x400a6b>, <DisassemblerInsn "mov" for 0x400a6f>, <DisassemblerInsn "mov" for 0x400a73>, <DisassemblerInsn "mov" for 0x400a77>, <DisassemblerInsn "mov" for 0x400a7c>, <DisassemblerInsn "mov" for 0x400a82>, <DisassemblerInsn "mov" for 0x400a86>, <DisassemblerInsn "cmp" for 0x400a8b>, <DisassemblerInsn "jge" for 0x400a8e>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009be>, <DisassemblerInsn "mov" for 0x4009c3>, <DisassemblerInsn "mov" for 0x4009ca>, <DisassemblerInsn "mov" for 0x4009cf>, <DisassemblerInsn "mov" for 0x4009d6>, <DisassemblerInsn "mov" for 0x4009db>, <DisassemblerInsn "add" for 0x4009e1>, <DisassemblerInsn "mov" for 0x4009e4>, <DisassemblerInsn "mov" for 0x4009e9>, <DisassemblerInsn "mov" for 0x4009ef>, <DisassemblerInsn "call" for 0x4009f1>]'}, {'block_Idx': 50, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40118d>, <DisassemblerInsn "cmp" for 0x401192>, <DisassemblerInsn "je" for 0x401199>]'}, {'block_Idx': 211, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40101e>, <DisassemblerInsn "sar" for 0x401022>, <DisassemblerInsn "mov" for 0x401024>, <DisassemblerInsn "sub" for 0x401028>, <DisassemblerInsn "mov" for 0x40102a>, <DisassemblerInsn "add" for 0x40102e>, <DisassemblerInsn "mov" for 0x401032>, <DisassemblerInsn "mov" for 0x401037>, <DisassemblerInsn "shl" for 0x40103a>, <DisassemblerInsn "mov" for 0x40103c>, <DisassemblerInsn "mov" for 0x40103e>, <DisassemblerInsn "mov" for 0x401043>, <DisassemblerInsn "add" for 0x401046>, <DisassemblerInsn "mov" for 0x40104a>, <DisassemblerInsn "mov" for 0x40104f>, <DisassemblerInsn "mov" for 0x401051>, <DisassemblerInsn "mov" for 0x401055>, <DisassemblerInsn "mov" for 0x40105a>, <DisassemblerInsn "shl" for 0x40105d>, <DisassemblerInsn "mov" for 0x40105f>, <DisassemblerInsn "mov" for 0x401061>, <DisassemblerInsn "mov" for 0x401066>, <DisassemblerInsn "add" for 0x401069>, <DisassemblerInsn "mov" for 0x40106d>, <DisassemblerInsn "mov" for 0x401072>, <DisassemblerInsn "jmp" for 0x401074>]'}, {'block_Idx': 166, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e77>, <DisassemblerInsn "cmp" for 0x400e7c>, <DisassemblerInsn "jne" for 0x400e80>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008da>, <DisassemblerInsn "mov" for 0x4008de>, <DisassemblerInsn "mov" for 0x4008e2>, <DisassemblerInsn "mov" for 0x4008e6>, <DisassemblerInsn "mov" for 0x4008ea>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f2>, <DisassemblerInsn "mov" for 0x4008f7>, <DisassemblerInsn "add" for 0x4008fd>, <DisassemblerInsn "cmp" for 0x400901>, <DisassemblerInsn "jb" for 0x400905>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400834>, <DisassemblerInsn "mov" for 0x400838>, <DisassemblerInsn "mov" for 0x40083c>, <DisassemblerInsn "mov" for 0x400841>, <DisassemblerInsn "mov" for 0x400844>, <DisassemblerInsn "mov" for 0x400848>, <DisassemblerInsn "mov" for 0x40084d>, <DisassemblerInsn "mov" for 0x400853>, <DisassemblerInsn "cmp" for 0x400858>, <DisassemblerInsn "jbe" for 0x40085b>]'}, {'block_Idx': 1, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007a1>, <DisassemblerInsn "cmp" for 0x4007a6>, <DisassemblerInsn "jle" for 0x4007aa>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c73>, <DisassemblerInsn "mov" for 0x400c7b>, <DisassemblerInsn "mov" for 0x400c7f>, <DisassemblerInsn "cmp" for 0x400c84>, <DisassemblerInsn "jge" for 0x400c87>]'}, {'block_Idx': 531, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b14>, <DisassemblerInsn "jmp" for 0x400b1f>]'}, {'block_Idx': 80, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b29>, <DisassemblerInsn "add" for 0x400b2e>, <DisassemblerInsn "mov" for 0x400b32>, <DisassemblerInsn "call" for 0x400b37>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007ac>, <DisassemblerInsn "mov" for 0x4007b1>, <DisassemblerInsn "jmp" for 0x4007b5>]'}, {'block_Idx': 111, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bb8>, <DisassemblerInsn "test" for 0x400bbc>, <DisassemblerInsn "jne" for 0x400bbe>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e12>, <DisassemblerInsn "mov" for 0x400e16>, <DisassemblerInsn "mov" for 0x400e1b>, <DisassemblerInsn "shl" for 0x400e1e>, <DisassemblerInsn "mov" for 0x400e20>, <DisassemblerInsn "mov" for 0x400e23>, <DisassemblerInsn "mov" for 0x400e28>, <DisassemblerInsn "add" for 0x400e2b>, <DisassemblerInsn "mov" for 0x400e2f>, <DisassemblerInsn "mov" for 0x400e34>, <DisassemblerInsn "mov" for 0x400e37>, <DisassemblerInsn "sub" for 0x400e3b>, <DisassemblerInsn "mov" for 0x400e3f>, <DisassemblerInsn "mov" for 0x400e44>, <DisassemblerInsn "shl" for 0x400e47>, <DisassemblerInsn "mov" for 0x400e49>, <DisassemblerInsn "mov" for 0x400e4c>, <DisassemblerInsn "mov" for 0x400e51>, <DisassemblerInsn "add" for 0x400e54>, <DisassemblerInsn "mov" for 0x400e58>, <DisassemblerInsn "mov" for 0x400e5d>, <DisassemblerInsn "jmp" for 0x400e60>]'}, {'block_Idx': 217, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e60>]'}, {'block_Idx': 209, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c7b>, <DisassemblerInsn "mov" for 0x400c7f>, <DisassemblerInsn "cmp" for 0x400c84>, <DisassemblerInsn "jge" for 0x400c87>]'}, {'block_Idx': 563, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400323>, <DisassemblerInsn "mov" for 0x400328>, <DisassemblerInsn "mov" for 0x40032d>, <DisassemblerInsn "mov" for 0x400330>, <DisassemblerInsn "mov" for 0x400334>, <DisassemblerInsn "mov" for 0x400339>, <DisassemblerInsn "mov" for 0x40033c>, <DisassemblerInsn "movsxd" for 0x400341>, <DisassemblerInsn "add" for 0x400346>, <DisassemblerInsn "mov" for 0x400349>, <DisassemblerInsn "mov" for 0x40034e>, <DisassemblerInsn "mov" for 0x400352>, <DisassemblerInsn "mov" for 0x400357>, <DisassemblerInsn "ret" for 0x40035e>]'}, {'block_Idx': 47, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400988>, <DisassemblerInsn "mov" for 0x40098b>, <DisassemblerInsn "mov" for 0x400990>, <DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "mov" for 0x4009a2>, <DisassemblerInsn "add" for 0x4009a7>, <DisassemblerInsn "add" for 0x4009ad>, <DisassemblerInsn "mov" for 0x4009b1>, <DisassemblerInsn "cmp" for 0x4009b6>, <DisassemblerInsn "jbe" for 0x4009bc>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401141>, <DisassemblerInsn "mov" for 0x401146>, <DisassemblerInsn "mov" for 0x40114a>, <DisassemblerInsn "sub" for 0x40114e>, <DisassemblerInsn "xor" for 0x401152>, <DisassemblerInsn "lea" for 0x401154>, <DisassemblerInsn "mov" for 0x40115b>, <DisassemblerInsn "call" for 0x40115d>]'}, {'block_Idx': 28, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008bb>, <DisassemblerInsn "mov" for 0x4008c0>, <DisassemblerInsn "mov" for 0x4008c6>, <DisassemblerInsn "mov" for 0x4008ca>, <DisassemblerInsn "mov" for 0x4008ce>, <DisassemblerInsn "sub" for 0x4008d2>, <DisassemblerInsn "mov" for 0x4008d4>, <DisassemblerInsn "jmp" for 0x4008d8>]'}, {'block_Idx': 110, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b94>, <DisassemblerInsn "add" for 0x400b99>, <DisassemblerInsn "mov" for 0x400b9d>, <DisassemblerInsn "call" for 0x400ba2>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401076>, <DisassemblerInsn "sar" for 0x40107a>, <DisassemblerInsn "mov" for 0x40107c>, <DisassemblerInsn "sub" for 0x401080>, <DisassemblerInsn "mov" for 0x401082>, <DisassemblerInsn "add" for 0x401086>, <DisassemblerInsn "mov" for 0x40108a>, <DisassemblerInsn "mov" for 0x40108f>, <DisassemblerInsn "shl" for 0x401092>, <DisassemblerInsn "mov" for 0x401094>, <DisassemblerInsn "mov" for 0x401097>, <DisassemblerInsn "mov" for 0x40109c>, <DisassemblerInsn "add" for 0x40109f>, <DisassemblerInsn "mov" for 0x4010a3>, <DisassemblerInsn "mov" for 0x4010a8>, <DisassemblerInsn "mov" for 0x4010ab>, <DisassemblerInsn "mov" for 0x4010af>, <DisassemblerInsn "mov" for 0x4010b4>, <DisassemblerInsn "shl" for 0x4010b7>, <DisassemblerInsn "mov" for 0x4010b9>, <DisassemblerInsn "mov" for 0x4010bc>, <DisassemblerInsn "mov" for 0x4010c1>, <DisassemblerInsn "add" for 0x4010c4>, <DisassemblerInsn "mov" for 0x4010c8>, <DisassemblerInsn "mov" for 0x4010cd>, <DisassemblerInsn "jmp" for 0x4010d0>]'}, {'block_Idx': 172, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d56>]'}, {'block_Idx': 187, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d34>]'}, {'block_Idx': 19, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400ac6>, <DisassemblerInsn "jge" for 0x400acb>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40086b>, <DisassemblerInsn "mov" for 0x400870>, <DisassemblerInsn "mov" for 0x400876>, <DisassemblerInsn "mov" for 0x40087a>, <DisassemblerInsn "mov" for 0x40087e>, <DisassemblerInsn "mov" for 0x400882>, <DisassemblerInsn "sub" for 0x400886>, <DisassemblerInsn "cmp" for 0x400888>, <DisassemblerInsn "jbe" for 0x40088a>]'}, {'block_Idx': 82, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013d5>, <DisassemblerInsn "mov" for 0x4013d9>, <DisassemblerInsn "add" for 0x4013dd>, <DisassemblerInsn "ret" for 0x4013e1>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007bf>, <DisassemblerInsn "mov" for 0x4007c3>, <DisassemblerInsn "mov" for 0x4007c8>, <DisassemblerInsn "mov" for 0x4007cb>, <DisassemblerInsn "mov" for 0x4007d0>, <DisassemblerInsn "mov" for 0x4007d7>, <DisassemblerInsn "add" for 0x4007dc>, <DisassemblerInsn "mov" for 0x4007e3>, <DisassemblerInsn "mov" for 0x4007e8>, <DisassemblerInsn "call" for 0x4007eb>]'}, {'block_Idx': 186, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ca7>, <DisassemblerInsn "cmp" for 0x400cac>, <DisassemblerInsn "je" for 0x400cb0>]'}, {'block_Idx': 79, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aec>, <DisassemblerInsn "call" for 0x400af1>]'}, {'block_Idx': 115, 'blockInsts': '[<DisassemblerInsn "sub" for 0x401570>, <DisassemblerInsn "mov" for 0x401574>, <DisassemblerInsn "mov" for 0x401579>, <DisassemblerInsn "mov" for 0x40157d>, <DisassemblerInsn "mov" for 0x401582>, <DisassemblerInsn "mov" for 0x401585>, <DisassemblerInsn "mov" for 0x401589>, <DisassemblerInsn "mov" for 0x401591>, <DisassemblerInsn "mov" for 0x401596>, <DisassemblerInsn "mov" for 0x401599>, <DisassemblerInsn "sar" for 0x40159d>, <DisassemblerInsn "movsxd" for 0x4015a0>, <DisassemblerInsn "mov" for 0x4015a3>, <DisassemblerInsn "mov" for 0x4015a6>, <DisassemblerInsn "mov" for 0x4015aa>, <DisassemblerInsn "ror" for 0x4015ae>, <DisassemblerInsn "ror" for 0x4015b2>, <DisassemblerInsn "ror" for 0x4015b5>, <DisassemblerInsn "mov" for 0x4015b9>, <DisassemblerInsn "mov" for 0x4015bd>, <DisassemblerInsn "mov" for 0x4015c1>, <DisassemblerInsn "and" for 0x4015c5>, <DisassemblerInsn "shl" for 0x4015c8>, <DisassemblerInsn "mov" for 0x4015ca>, <DisassemblerInsn "mov" for 0x4015ce>, <DisassemblerInsn "mov" for 0x4015d2>, <DisassemblerInsn "movsx" for 0x4015d6>, <DisassemblerInsn "call" for 0x4015d9>]'}, {'block_Idx': 212, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f3e>, <DisassemblerInsn "add" for 0x400f42>, <DisassemblerInsn "mov" for 0x400f46>, <DisassemblerInsn "mov" for 0x400f4b>, <DisassemblerInsn "shl" for 0x400f4e>, <DisassemblerInsn "mov" for 0x400f50>, <DisassemblerInsn "mov" for 0x400f53>, <DisassemblerInsn "mov" for 0x400f58>, <DisassemblerInsn "add" for 0x400f5b>, <DisassemblerInsn "mov" for 0x400f5f>, <DisassemblerInsn "mov" for 0x400f64>, <DisassemblerInsn "mov" for 0x400f67>, <DisassemblerInsn "mov" for 0x400f6b>, <DisassemblerInsn "mov" for 0x400f70>, <DisassemblerInsn "shl" for 0x400f73>, <DisassemblerInsn "mov" for 0x400f75>, <DisassemblerInsn "mov" for 0x400f78>, <DisassemblerInsn "mov" for 0x400f7d>, <DisassemblerInsn "add" for 0x400f80>, <DisassemblerInsn "mov" for 0x400f84>, <DisassemblerInsn "mov" for 0x400f89>, <DisassemblerInsn "jmp" for 0x400f8c>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}, {'block_Idx': 545, 'blockInsts': '[<DisassemblerInsn "xor" for 0x401568>, <DisassemblerInsn "add" for 0x40156a>, <DisassemblerInsn "ret" for 0x40156e>]'}, {'block_Idx': 125, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015de>, <DisassemblerInsn "mov" for 0x4015e2>, <DisassemblerInsn "add" for 0x4015e6>, <DisassemblerInsn "ret" for 0x4015ea>]'}, {'block_Idx': 26, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400acd>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011d4>, <DisassemblerInsn "mov" for 0x4011d8>, <DisassemblerInsn "mov" for 0x4011df>, <DisassemblerInsn "add" for 0x4011e6>, <DisassemblerInsn "ret" for 0x4011ed>]'}, {'block_Idx': 157, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c5f>, <DisassemblerInsn "lea" for 0x400c63>, <DisassemblerInsn "movsxd" for 0x400c6a>, <DisassemblerInsn "add" for 0x400c6e>, <DisassemblerInsn "jmp" for 0x400c71>]'}, {'block_Idx': 200, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4010e2>]'}, {'block_Idx': 66, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401162>, <DisassemblerInsn "mov" for 0x401167>, <DisassemblerInsn "mov" for 0x401171>, <DisassemblerInsn "mov" for 0x401176>, <DisassemblerInsn "mov" for 0x401180>, <DisassemblerInsn "jmp" for 0x40118b>]'}, {'block_Idx': 179, 'blockInsts': '[<DisassemblerInsn "lea" for 0x400e84>, <DisassemblerInsn "lea" for 0x400e8b>, <DisassemblerInsn "mov" for 0x400e92>, <DisassemblerInsn "lea" for 0x400e97>, <DisassemblerInsn "call" for 0x400e9e>]'}, {'block_Idx': 529, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400afb>, <DisassemblerInsn "mov" for 0x400b00>, <DisassemblerInsn "xor" for 0x400b04>, <DisassemblerInsn "lea" for 0x400b06>, <DisassemblerInsn "mov" for 0x400b0d>, <DisassemblerInsn "call" for 0x400b0f>]'}, {'block_Idx': 107, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b7b>, <DisassemblerInsn "cdq" for 0x400b80>, <DisassemblerInsn "idiv" for 0x400b81>, <DisassemblerInsn "mov" for 0x400b83>, <DisassemblerInsn "add" for 0x400b85>, <DisassemblerInsn "xor" for 0x400b88>, <DisassemblerInsn "cmp" for 0x400b8a>, <DisassemblerInsn "mov" for 0x400b8e>, <DisassemblerInsn "jge" for 0x400b92>]'}, {'block_Idx': 527, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400af6>, <DisassemblerInsn "je" for 0x400af9>]'}, {'block_Idx': 76, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400ae5>, <DisassemblerInsn "jne" for 0x400aea>]'}, {'block_Idx': 162, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c1b>, <DisassemblerInsn "mov" for 0x400c20>, <DisassemblerInsn "mov" for 0x400c2a>, <DisassemblerInsn "mov" for 0x400c2f>, <DisassemblerInsn "mov" for 0x400c39>, <DisassemblerInsn "jmp" for 0x400c44>]'}, {'block_Idx': 63, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400a90>, <DisassemblerInsn "je" for 0x400a95>]'}, {'block_Idx': 30, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011df>, <DisassemblerInsn "add" for 0x4011e6>, <DisassemblerInsn "ret" for 0x4011ed>]'}, {'block_Idx': 562, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40030a>, <DisassemblerInsn "mov" for 0x400312>, <DisassemblerInsn "mov" for 0x40031a>, <DisassemblerInsn "mov" for 0x400323>, <DisassemblerInsn "mov" for 0x400328>, <DisassemblerInsn "mov" for 0x40032d>, <DisassemblerInsn "mov" for 0x400330>, <DisassemblerInsn "mov" for 0x400334>, <DisassemblerInsn "mov" for 0x400339>, <DisassemblerInsn "mov" for 0x40033c>, <DisassemblerInsn "movsxd" for 0x400341>, <DisassemblerInsn "add" for 0x400346>, <DisassemblerInsn "mov" for 0x400349>, <DisassemblerInsn "mov" for 0x40034e>, <DisassemblerInsn "mov" for 0x400352>, <DisassemblerInsn "mov" for 0x400357>, <DisassemblerInsn "ret" for 0x40035e>]'}, {'block_Idx': 202, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400f9e>]'}, {'block_Idx': 555, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015f0>, <DisassemblerInsn "mov" for 0x4015f5>, <DisassemblerInsn "mov" for 0x4015fa>, <DisassemblerInsn "ret" for 0x4015fd>]'}, {'block_Idx': 64, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400aa7>]'}, {'block_Idx': 42, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "mov" for 0x400a0a>, <DisassemblerInsn "mov" for 0x400a11>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "mov" for 0x400a1c>, <DisassemblerInsn "add" for 0x400a21>, <DisassemblerInsn "mov" for 0x400a27>, <DisassemblerInsn "add" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a2c>, <DisassemblerInsn "movsxd" for 0x400a34>, <DisassemblerInsn "call" for 0x400a39>]'}, {'block_Idx': 206, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400dc6>, <DisassemblerInsn "mov" for 0x400dca>, <DisassemblerInsn "mov" for 0x400dcf>, <DisassemblerInsn "shl" for 0x400dd2>, <DisassemblerInsn "mov" for 0x400dd4>, <DisassemblerInsn "mov" for 0x400dd6>, <DisassemblerInsn "mov" for 0x400ddb>, <DisassemblerInsn "add" for 0x400dde>, <DisassemblerInsn "mov" for 0x400de2>, <DisassemblerInsn "mov" for 0x400de7>, <DisassemblerInsn "mov" for 0x400de9>, <DisassemblerInsn "sub" for 0x400ded>, <DisassemblerInsn "mov" for 0x400df1>, <DisassemblerInsn "mov" for 0x400df6>, <DisassemblerInsn "shl" for 0x400df9>, <DisassemblerInsn "mov" for 0x400dfb>, <DisassemblerInsn "mov" for 0x400dfd>, <DisassemblerInsn "mov" for 0x400e02>, <DisassemblerInsn "add" for 0x400e05>, <DisassemblerInsn "mov" for 0x400e09>, <DisassemblerInsn "mov" for 0x400e0e>, <DisassemblerInsn "jmp" for 0x400e10>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d91>, <DisassemblerInsn "mov" for 0x400d96>, <DisassemblerInsn "movsxd" for 0x400d9a>, <DisassemblerInsn "mov" for 0x400d9f>, <DisassemblerInsn "mov" for 0x400da2>, <DisassemblerInsn "mov" for 0x400da6>, <DisassemblerInsn "mov" for 0x400dab>, <DisassemblerInsn "movsxd" for 0x400daf>, <DisassemblerInsn "mov" for 0x400db4>, <DisassemblerInsn "mov" for 0x400db7>, <DisassemblerInsn "mov" for 0x400dbb>, <DisassemblerInsn "cmp" for 0x400dc0>, <DisassemblerInsn "je" for 0x400dc4>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40087a>, <DisassemblerInsn "mov" for 0x40087e>, <DisassemblerInsn "mov" for 0x400882>, <DisassemblerInsn "sub" for 0x400886>, <DisassemblerInsn "cmp" for 0x400888>, <DisassemblerInsn "jbe" for 0x40088a>]'}, {'block_Idx': 3, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007b7>, <DisassemblerInsn "mov" for 0x4007bb>, <DisassemblerInsn "mov" for 0x4007bf>, <DisassemblerInsn "mov" for 0x4007c3>, <DisassemblerInsn "mov" for 0x4007c8>, <DisassemblerInsn "mov" for 0x4007cb>, <DisassemblerInsn "mov" for 0x4007d0>, <DisassemblerInsn "mov" for 0x4007d7>, <DisassemblerInsn "add" for 0x4007dc>, <DisassemblerInsn "mov" for 0x4007e3>, <DisassemblerInsn "mov" for 0x4007e8>, <DisassemblerInsn "call" for 0x4007eb>]'}, {'block_Idx': 174, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c8d>, <DisassemblerInsn "mov" for 0x400c95>, <DisassemblerInsn "mov" for 0x400c99>, <DisassemblerInsn "cmp" for 0x400c9e>, <DisassemblerInsn "jge" for 0x400ca1>]'}, {'block_Idx': 560, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4002e0>, <DisassemblerInsn "mov" for 0x4002e5>, <DisassemblerInsn "mov" for 0x4002ea>, <DisassemblerInsn "mov" for 0x4002ee>, <DisassemblerInsn "add" for 0x4002f2>, <DisassemblerInsn "sar" for 0x4002f5>, <DisassemblerInsn "mov" for 0x4002f8>, <DisassemblerInsn "cmp" for 0x4002fc>, <DisassemblerInsn "jl" for 0x400301>]'}, {'block_Idx': 27, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ad2>, <DisassemblerInsn "add" for 0x400ad7>, <DisassemblerInsn "mov" for 0x400adb>, <DisassemblerInsn "call" for 0x400ae0>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008ca>, <DisassemblerInsn "mov" for 0x4008ce>, <DisassemblerInsn "sub" for 0x4008d2>, <DisassemblerInsn "mov" for 0x4008d4>, <DisassemblerInsn "jmp" for 0x4008d8>]'}, {'block_Idx': 25, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400907>, <DisassemblerInsn "mov" for 0x40090c>, <DisassemblerInsn "mov" for 0x400912>, <DisassemblerInsn "add" for 0x400917>, <DisassemblerInsn "add" for 0x40091d>, <DisassemblerInsn "mov" for 0x400921>, <DisassemblerInsn "cmp" for 0x400926>, <DisassemblerInsn "jae" for 0x40092c>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aa9>, <DisassemblerInsn "add" for 0x400aae>, <DisassemblerInsn "mov" for 0x400ab2>, <DisassemblerInsn "mov" for 0x400aba>, <DisassemblerInsn "shl" for 0x400abe>, <DisassemblerInsn "call" for 0x400ac1>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "sub" for 0x401380>, <DisassemblerInsn "mov" for 0x401384>, <DisassemblerInsn "mov" for 0x401389>, <DisassemblerInsn "cmp" for 0x40138d>, <DisassemblerInsn "jg" for 0x401392>]'}, {'block_Idx': 44, 'blockInsts': '[<DisassemblerInsn "add" for 0x401128>, <DisassemblerInsn "mov" for 0x40112b>, <DisassemblerInsn "cdq" for 0x401130>, <DisassemblerInsn "idiv" for 0x401131>, <DisassemblerInsn "mov" for 0x401133>, <DisassemblerInsn "mov" for 0x401137>, <DisassemblerInsn "cmp" for 0x40113b>, <DisassemblerInsn "jle" for 0x40113f>]'}, {'block_Idx': 177, 'blockInsts': '[<DisassemblerInsn "lea" for 0x400fb0>, <DisassemblerInsn "lea" for 0x400fb7>, <DisassemblerInsn "mov" for 0x400fbe>, <DisassemblerInsn "lea" for 0x400fc3>, <DisassemblerInsn "call" for 0x400fca>]'}, {'block_Idx': 101, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b6d>, <DisassemblerInsn "add" for 0x400b72>, <DisassemblerInsn "call" for 0x400b76>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40088c>, <DisassemblerInsn "mov" for 0x400891>, <DisassemblerInsn "mov" for 0x400894>, <DisassemblerInsn "mov" for 0x400898>, <DisassemblerInsn "mov" for 0x40089d>, <DisassemblerInsn "mov" for 0x4008a3>, <DisassemblerInsn "cmp" for 0x4008a8>, <DisassemblerInsn "jbe" for 0x4008ab>]'}, {'block_Idx': 528, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400b24>]'}, {'block_Idx': 32, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40111a>, <DisassemblerInsn "add" for 0x40111f>, <DisassemblerInsn "call" for 0x401123>]'}, {'block_Idx': 103, 'blockInsts': '[<DisassemblerInsn "sub" for 0x401600>, <DisassemblerInsn "mov" for 0x401604>, <DisassemblerInsn "mov" for 0x401609>, <DisassemblerInsn "mov" for 0x40160d>, <DisassemblerInsn "add" for 0x401612>, <DisassemblerInsn "mov" for 0x401616>, <DisassemblerInsn "call" for 0x40161b>]'}, {'block_Idx': 165, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fa3>, <DisassemblerInsn "cmp" for 0x400fa8>, <DisassemblerInsn "jne" for 0x400fac>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007f0>, <DisassemblerInsn "mov" for 0x4007f3>, <DisassemblerInsn "mov" for 0x4007f8>, <DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}, {'block_Idx': 221, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f8e>, <DisassemblerInsn "add" for 0x400f92>, <DisassemblerInsn "mov" for 0x400f95>, <DisassemblerInsn "jmp" for 0x400f99>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40081c>, <DisassemblerInsn "mov" for 0x400821>, <DisassemblerInsn "cmp" for 0x400828>, <DisassemblerInsn "je" for 0x40082e>]'}, {'block_Idx': 31, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40093e>, <DisassemblerInsn "mov" for 0x400943>, <DisassemblerInsn "mov" for 0x400949>, <DisassemblerInsn "mov" for 0x40094e>, <DisassemblerInsn "add" for 0x400954>, <DisassemblerInsn "cmp" for 0x400958>, <DisassemblerInsn "jae" for 0x40095a>]'}, {'block_Idx': 226, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fd7>, <DisassemblerInsn "mov" for 0x400fdb>, <DisassemblerInsn "cmp" for 0x400fe0>, <DisassemblerInsn "jge" for 0x400fe3>]'}, {'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "sub" for 0x400700>, <DisassemblerInsn "mov" for 0x400707>, <DisassemblerInsn "mov" for 0x40070f>, <DisassemblerInsn "mov" for 0x400717>, <DisassemblerInsn "mov" for 0x40071f>, <DisassemblerInsn "mov" for 0x400727>, <DisassemblerInsn "mov" for 0x40072c>, <DisassemblerInsn "mov" for 0x400734>, <DisassemblerInsn "mov" for 0x40073b>, <DisassemblerInsn "mov" for 0x400740>, <DisassemblerInsn "mov" for 0x400748>, <DisassemblerInsn "mov" for 0x400750>, <DisassemblerInsn "mov" for 0x400758>, <DisassemblerInsn "mov" for 0x400760>, <DisassemblerInsn "mov" for 0x400768>, <DisassemblerInsn "mov" for 0x40076d>, <DisassemblerInsn "mov" for 0x400775>, <DisassemblerInsn "mov" for 0x40077a>, <DisassemblerInsn "mov" for 0x400782>, <DisassemblerInsn "mov" for 0x400784>, <DisassemblerInsn "mov" for 0x400788>, <DisassemblerInsn "mov" for 0x400790>, <DisassemblerInsn "mov" for 0x400796>, <DisassemblerInsn "cmp" for 0x40079b>, <DisassemblerInsn "jne" for 0x40079f>]'}, {'block_Idx': 220, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4010d0>]'}, {'block_Idx': 184, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d77>, <DisassemblerInsn "mov" for 0x400d7f>, <DisassemblerInsn "mov" for 0x400d83>, <DisassemblerInsn "cmp" for 0x400d88>, <DisassemblerInsn "jge" for 0x400d8b>]'}, {'block_Idx': 24, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40092e>, <DisassemblerInsn "jmp" for 0x400939>]'}, {'block_Idx': 100, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bef>, <DisassemblerInsn "mov" for 0x400bf4>, <DisassemblerInsn "call" for 0x400bf8>]'}, {'block_Idx': 343, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b35>, <DisassemblerInsn "mov" for 0x401b3d>, <DisassemblerInsn "add" for 0x401b41>, <DisassemblerInsn "ret" for 0x401b45>]'}, {'block_Idx': 95, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b54>, <DisassemblerInsn "mov" for 0x400b59>, <DisassemblerInsn "xor" for 0x400b5d>, <DisassemblerInsn "lea" for 0x400b5f>, <DisassemblerInsn "mov" for 0x400b66>, <DisassemblerInsn "call" for 0x400b68>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cea>, <DisassemblerInsn "movsxd" for 0x400cef>, <DisassemblerInsn "mov" for 0x400cf4>, <DisassemblerInsn "movsxd" for 0x400cf9>, <DisassemblerInsn "mov" for 0x400cfe>, <DisassemblerInsn "mov" for 0x400d01>, <DisassemblerInsn "mov" for 0x400d06>, <DisassemblerInsn "shl" for 0x400d09>, <DisassemblerInsn "mov" for 0x400d0b>, <DisassemblerInsn "mov" for 0x400d0e>, <DisassemblerInsn "mov" for 0x400d13>, <DisassemblerInsn "add" for 0x400d16>, <DisassemblerInsn "mov" for 0x400d1a>, <DisassemblerInsn "mov" for 0x400d1f>, <DisassemblerInsn "jmp" for 0x400d22>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008ea>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f2>, <DisassemblerInsn "mov" for 0x4008f7>, <DisassemblerInsn "add" for 0x4008fd>, <DisassemblerInsn "cmp" for 0x400901>, <DisassemblerInsn "jb" for 0x400905>]'}, {'block_Idx': 58, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40119b>, <DisassemblerInsn "mov" for 0x40119f>, <DisassemblerInsn "add" for 0x4011a4>, <DisassemblerInsn "mov" for 0x4011aa>, <DisassemblerInsn "mov" for 0x4011b0>, <DisassemblerInsn "mov" for 0x4011b4>, <DisassemblerInsn "mov" for 0x4011b9>, <DisassemblerInsn "sub" for 0x4011bf>, <DisassemblerInsn "mov" for 0x4011c1>, <DisassemblerInsn "mov" for 0x4011c7>, <DisassemblerInsn "mov" for 0x4011cb>, <DisassemblerInsn "jmp" for 0x4011d2>]'}, {'block_Idx': 218, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c95>, <DisassemblerInsn "mov" for 0x400c99>, <DisassemblerInsn "cmp" for 0x400c9e>, <DisassemblerInsn "jge" for 0x400ca1>]'}], 'cfg_block_detailed_info': [{'block_Idx': 152, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2312]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 83, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x30], rdi>', '<mov~~rdi, qword ptr [rsp + 0x30]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x20>', '<call~~0x400500>']}, {'block_Idx': 207, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400c95>']}, {'block_Idx': 197, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x64]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x400d22>']}, {'block_Idx': 225, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400e72>']}, {'block_Idx': 153, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0x50]>', '<mov~~qword ptr [rsp], rax>', '<sub~~rax, 3>', '<ja~~0x4010e4>']}, {'block_Idx': 577, 'blockInsts': ['<mov~~qword ptr [rsp - 0x10], rdi>', '<mov~~dword ptr [rsp - 0x14], esi>', '<mov~~rax, qword ptr [rsp - 0x10]>', '<mov~~eax, dword ptr [rax + 0x10]>', '<mov~~dword ptr [rsp - 0x18], eax>', '<mov~~dword ptr [rsp - 0x1c], 0>', '<mov~~rax, qword ptr [rsp - 0x10]>', '<mov~~rax, qword ptr [rax]>', '<mov~~ecx, dword ptr [rsp - 0x18]>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<mov~~dword ptr [rsp - 4], eax>', '<mov~~eax, dword ptr [rsp - 4]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp - 4], eax>', '<mov~~eax, dword ptr [rsp - 4]>', '<mov~~ecx, dword ptr [rsp - 0x18]>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~dword ptr [rsp - 0x1c], eax>', '<mov~~eax, dword ptr [rsp - 0x14]>', '<add~~eax, dword ptr [rsp - 0x18]>', '<mov~~dword ptr [rsp - 0x18], eax>', '<mov~~ecx, dword ptr [rsp - 0x18]>', '<mov~~rax, qword ptr [rsp - 0x10]>', '<mov~~dword ptr [rax + 0x10], ecx>', '<ret~~>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xa0], 4>', '<jb~~0x400834>']}, {'block_Idx': 92, 'blockInsts': ['<mov~~dword ptr [rsp + 0x6c], eax>', '<mov~~eax, dword ptr [rsp + 0x6c]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400bdc>']}, {'block_Idx': 37, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xa8]>', '<jbe~~0x400a05>']}, {'block_Idx': 147, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x54]>', '<add~~rsp, 0x58>', '<ret~~>']}, {'block_Idx': 216, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400d7f>']}, {'block_Idx': 70, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x60]>', '<mov~~dword ptr [rsp + 0xa4], eax>', '<jmp~~0x4011df>']}, {'block_Idx': 222, 'blockInsts': ['<jmp~~0x400f8e>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rsi, qword ptr [rsp + 0x70]>', '<add~~rsi, 0xa8>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~edx, dword ptr [rax + 0xa0]>', '<add~~edx, dword ptr [rsp + 0x7c]>', '<call~~0x500010>']}, {'block_Idx': 201, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x38], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x60]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x34], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x400f3e>']}, {'block_Idx': 116, 'blockInsts': ['<jmp~~0x400bd7>']}, {'block_Idx': 175, 'blockInsts': ['<jmp~~0x4010e4>']}, {'block_Idx': 227, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400f9e>']}, {'block_Idx': 34, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x10]>', '<mov~~dword ptr [rsp + 0x7c], eax>', '<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x60], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jb~~0x40092e>']}, {'block_Idx': 178, 'blockInsts': ['<jmp~~0x400ea3>']}, {'block_Idx': 128, 'blockInsts': ['<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<setne~~al>', '<mov~~byte ptr [rsp + 0xf], al>', '<mov~~al, byte ptr [rsp + 0xf]>', '<test~~al, 1>', '<jne~~0x400bc2>']}, {'block_Idx': 126, 'blockInsts': ['<jmp~~0x400b6d>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x64]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x64], eax>', '<jmp~~0x400c7b>']}, {'block_Idx': 188, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x4010e2>']}, {'block_Idx': 150, 'blockInsts': ['<cmp~~eax, 0>', '<jge~~0x400c49>']}, {'block_Idx': 208, 'blockInsts': ['<jmp~~0x400d24>']}, {'block_Idx': 219, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400fd7>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x30], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x60]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x2c], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x401076>']}, {'block_Idx': 163, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x400d58>']}, {'block_Idx': 117, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 8>', '<call~~0x400360>']}, {'block_Idx': 195, 'blockInsts': ['<jmp~~0x4010e4>']}, {'block_Idx': 213, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x38]>', '<add~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<mov~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x400f8c>']}, {'block_Idx': 176, 'blockInsts': ['<jmp~~0x400fcf>']}, {'block_Idx': 173, 'blockInsts': ['<lea~~rdi, [rip + 0x21de]>', '<lea~~rsi, [rip + 0x215f]>', '<mov~~edx, 0x2ba>', '<lea~~rcx, [rip + 0x21dc]>', '<call~~0x500028>']}, {'block_Idx': 158, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rax + 0x40]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<imul~~ecx, dword ptr [rax + 0xc]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~esi, dword ptr [rax + 0x4c]>', '<mov~~eax, 2>', '<mov~~edx, 4>', '<cmp~~esi, 0>', '<cmovne~~eax, edx>', '<imul~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x88]>', '<mov~~dword ptr [rax], ecx>', '<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<call~~0x4015f0>']}, {'block_Idx': 56, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<mov~~eax, eax>', '<add~~rdi, rax>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<movsxd~~rdx, dword ptr [rsp + 0x7c]>', '<call~~0x500020>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 4]>', '<mov~~dword ptr [rsp + 0x1c], eax>', '<jmp~~0x40087a>']}, {'block_Idx': 73, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x34]>', '<add~~rsp, 0x38>', '<ret~~>']}, {'block_Idx': 94, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x400360>']}, {'block_Idx': 122, 'blockInsts': ['<jmp~~0x40111a>']}, {'block_Idx': 190, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400f9e>']}, {'block_Idx': 55, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x98]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0xa4]>', '<add~~rax, rcx>', '<mov~~qword ptr [rsp + 0x80], rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x7c], eax>', '<mov~~ecx, dword ptr [rsp + 0x7c]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa0], ecx>', '<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 4]>', '<jge~~0x400aa7>']}, {'block_Idx': 43, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rsi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<add~~rsi, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~edx, eax>', '<call~~0x500018>']}, {'block_Idx': 50, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xa0], 0>', '<je~~0x4011d4>']}, {'block_Idx': 211, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x2c]>', '<sar~~ecx, 1>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x30], eax>', '<add~~eax, dword ptr [rsp + 0x2c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x4010d0>']}, {'block_Idx': 166, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x400e84>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x10], eax>', '<mov~~eax, dword ptr [rsp + 0x10]>', '<mov~~dword ptr [rsp + 0x7c], eax>', '<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x60], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jb~~0x40092e>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x20], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 4]>', '<mov~~dword ptr [rsp + 0x24], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 4]>', '<jbe~~0x40086b>']}, {'block_Idx': 1, 'blockInsts': ['<mov~~eax, 4>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jle~~0x4007b7>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~dword ptr [rsp + 0x64], 0>', '<mov~~eax, dword ptr [rsp + 0x64]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400d46>']}, {'block_Idx': 531, 'blockInsts': ['<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011df>']}, {'block_Idx': 80, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x401570>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~eax, 4>', '<mov~~dword ptr [rsp + 0x28], eax>', '<jmp~~0x4007bf>']}, {'block_Idx': 111, 'blockInsts': ['<mov~~al, byte ptr [rsp + 0xf]>', '<test~~al, 1>', '<jne~~0x400bc2>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x40]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<mov~~eax, dword ptr [rsp + 0x40]>', '<sub~~eax, dword ptr [rsp + 0x3c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x400e62>']}, {'block_Idx': 217, 'blockInsts': ['<jmp~~0x400e62>']}, {'block_Idx': 209, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x64]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400d46>']}, {'block_Idx': 563, 'blockInsts': ['<mov~~rcx, qword ptr [rsp - 0x10]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax], rcx>', '<mov~~ecx, dword ptr [rsp - 0x14]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x14], ecx>', '<mov~~rcx, qword ptr [rsp - 0x10]>', '<movsxd~~rax, dword ptr [rsp - 0x18]>', '<add~~rcx, rax>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax + 8], rcx>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x10], 0>', '<ret~~>']}, {'block_Idx': 47, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xa8]>', '<jbe~~0x400a05>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<mov~~ecx, dword ptr [rsp + 0x5c]>', '<sub~~ecx, dword ptr [rsp + 0x7c]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x1e40]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 28, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x14], eax>', '<mov~~eax, dword ptr [rsp + 0x18]>', '<mov~~ecx, dword ptr [rsp + 0x14]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x10], eax>', '<jmp~~0x4008e2>']}, {'block_Idx': 110, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x401570>']}, {'block_Idx': 210, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x2c]>', '<sar~~ecx, 1>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x30], eax>', '<add~~eax, dword ptr [rsp + 0x2c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x4010d2>']}, {'block_Idx': 172, 'blockInsts': ['<jmp~~0x400d77>']}, {'block_Idx': 187, 'blockInsts': ['<jmp~~0x400d36>']}, {'block_Idx': 19, 'blockInsts': ['<cmp~~dword ptr [rsp + 0x7c], 0x18>', '<jge~~0x400ad2>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x1c], eax>', '<mov~~eax, dword ptr [rsp + 0x20]>', '<mov~~ecx, dword ptr [rsp + 0x24]>', '<mov~~edx, dword ptr [rsp + 0x1c]>', '<sub~~ecx, edx>', '<cmp~~eax, ecx>', '<jbe~~0x4008da>']}, {'block_Idx': 82, 'blockInsts': ['<mov~~dword ptr [rsp + 0x34], eax>', '<mov~~eax, dword ptr [rsp + 0x34]>', '<add~~rsp, 0x38>', '<ret~~>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x28]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 4], ecx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rsi, qword ptr [rsp + 0x70]>', '<add~~rsi, 0xa8>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~edx, dword ptr [rax + 4]>', '<call~~0x500010>']}, {'block_Idx': 186, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x400cea>']}, {'block_Idx': 79, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<call~~0x4013f0>']}, {'block_Idx': 115, 'blockInsts': ['<sub~~rsp, 0x28>', '<mov~~qword ptr [rsp + 0x18], rdi>', '<mov~~dword ptr [rsp + 0x14], esi>', '<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~eax, dword ptr [rax + 0x10]>', '<mov~~dword ptr [rsp + 0xc], eax>', '<mov~~dword ptr [rsp + 8], 0>', '<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~rax, qword ptr [rax]>', '<mov~~ecx, dword ptr [rsp + 0xc]>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<mov~~dword ptr [rsp + 0x24], eax>', '<mov~~eax, dword ptr [rsp + 0x24]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x24], eax>', '<mov~~eax, dword ptr [rsp + 0x24]>', '<mov~~ecx, dword ptr [rsp + 0xc]>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~dword ptr [rsp + 8], eax>', '<mov~~edi, dword ptr [rsp + 8]>', '<mov~~eax, dword ptr [rsp + 0x14]>', '<movsx~~esi, al>', '<call~~0x401230>']}, {'block_Idx': 212, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x38]>', '<add~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<mov~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x400f8e>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}, {'block_Idx': 545, 'blockInsts': ['<xor~~eax, eax>', '<add~~rsp, 0x38>', '<ret~~>']}, {'block_Idx': 125, 'blockInsts': ['<mov~~dword ptr [rsp + 0x10], eax>', '<mov~~eax, dword ptr [rsp + 0x10]>', '<add~~rsp, 0x28>', '<ret~~>']}, {'block_Idx': 26, 'blockInsts': ['<jmp~~0x40111a>']}, {'block_Idx': 57, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5c]>', '<mov~~dword ptr [rsp + 0xa4], eax>', '<mov~~eax, dword ptr [rsp + 0xa4]>', '<add~~rsp, 0xa8>', '<ret~~>']}, {'block_Idx': 157, 'blockInsts': ['<mov~~rax, qword ptr [rsp]>', '<lea~~rcx, [rip + 0x2086]>', '<movsxd~~rax, dword ptr [rcx + rax*4]>', '<add~~rax, rcx>', '<jmp~~rax>']}, {'block_Idx': 200, 'blockInsts': ['<jmp~~0x4010e4>']}, {'block_Idx': 66, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011df>']}, {'block_Idx': 179, 'blockInsts': ['<lea~~rdi, [rip + 0x20b2]>', '<lea~~rsi, [rip + 0x2033]>', '<mov~~edx, 0x2bc>', '<lea~~rcx, [rip + 0x20b0]>', '<call~~0x500028>']}, {'block_Idx': 529, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x23f2]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 107, 'blockInsts': ['<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~ecx, eax>', '<add~~ecx, 2>', '<xor~~eax, eax>', '<cmp~~ecx, dword ptr [rsp + 0x7c]>', '<mov~~byte ptr [rsp + 0xf], al>', '<jge~~0x400bb8>']}, {'block_Idx': 527, 'blockInsts': ['<cmp~~eax, 0>', '<je~~0x400b24>']}, {'block_Idx': 76, 'blockInsts': ['<cmp~~eax, 0x664c6143>', '<jne~~0x400b29>']}, {'block_Idx': 162, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011df>']}, {'block_Idx': 63, 'blockInsts': ['<cmp~~dword ptr [rsp + 0x60], 0>', '<je~~0x400aa7>']}, {'block_Idx': 30, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0xa4]>', '<add~~rsp, 0xa8>', '<ret~~>']}, {'block_Idx': 562, 'blockInsts': ['<mov~~dword ptr [rsp - 0x14], 0>', '<mov~~dword ptr [rsp - 0x18], 0>', '<mov~~qword ptr [rsp - 0x10], 0>', '<mov~~rcx, qword ptr [rsp - 0x10]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax], rcx>', '<mov~~ecx, dword ptr [rsp - 0x14]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x14], ecx>', '<mov~~rcx, qword ptr [rsp - 0x10]>', '<movsxd~~rax, dword ptr [rsp - 0x18]>', '<add~~rcx, rax>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax + 8], rcx>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x10], 0>', '<ret~~>']}, {'block_Idx': 202, 'blockInsts': ['<jmp~~0x4010e4>']}, {'block_Idx': 555, 'blockInsts': ['<mov~~qword ptr [rsp - 8], rdi>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~eax, dword ptr [rax + 0x10]>', '<ret~~>']}, {'block_Idx': 64, 'blockInsts': ['<jmp~~0x400aa9>']}, {'block_Idx': 42, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<mov~~eax, eax>', '<add~~rdi, rax>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<movsxd~~rdx, dword ptr [rsp + 0x7c]>', '<call~~0x500020>']}, {'block_Idx': 206, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x40]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<mov~~eax, dword ptr [rsp + 0x40]>', '<sub~~eax, dword ptr [rsp + 0x3c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x400e60>']}, {'block_Idx': 194, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x40], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x60]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x3c], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x400e12>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x20]>', '<mov~~ecx, dword ptr [rsp + 0x24]>', '<mov~~edx, dword ptr [rsp + 0x1c]>', '<sub~~ecx, edx>', '<cmp~~eax, ecx>', '<jbe~~0x4008da>']}, {'block_Idx': 3, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x28], eax>', '<mov~~ecx, dword ptr [rsp + 0x28]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 4], ecx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rsi, qword ptr [rsp + 0x70]>', '<add~~rsi, 0xa8>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~edx, dword ptr [rax + 4]>', '<call~~0x500010>']}, {'block_Idx': 174, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xc]>', '<jge~~0x400d34>']}, {'block_Idx': 560, 'blockInsts': ['<mov~~qword ptr [rsp - 8], rdi>', '<mov~~qword ptr [rsp - 0x10], rsi>', '<mov~~dword ptr [rsp - 0x14], edx>', '<mov~~eax, dword ptr [rsp - 0x14]>', '<add~~eax, 7>', '<sar~~eax, 3>', '<mov~~dword ptr [rsp - 0x18], eax>', '<cmp~~dword ptr [rsp - 0x18], 0>', '<jl~~0x40030a>']}, {'block_Idx': 27, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x20>', '<call~~0x401380>']}, {'block_Idx': 35, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x18]>', '<mov~~ecx, dword ptr [rsp + 0x14]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x10], eax>', '<jmp~~0x4008e2>']}, {'block_Idx': 25, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xa4]>', '<jae~~0x40093e>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<mov~~edx, dword ptr [rsp + 0x7c]>', '<shl~~edx, 3>', '<call~~0x4002e0>']}, {'block_Idx': 33, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x28], rdi>', '<mov~~dword ptr [rsp + 0x24], esi>', '<cmp~~dword ptr [rsp + 0x24], 0x11>', '<jg~~0x4013a8>']}, {'block_Idx': 44, 'blockInsts': ['<add~~eax, 7>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~dword ptr [rsp + 0x5c], eax>', '<mov~~eax, dword ptr [rsp + 0x5c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jle~~0x40118d>']}, {'block_Idx': 177, 'blockInsts': ['<lea~~rdi, [rip + 0x1f86]>', '<lea~~rsi, [rip + 0x1f07]>', '<mov~~edx, 0x2be>', '<lea~~rcx, [rip + 0x1f84]>', '<call~~0x500028>']}, {'block_Idx': 101, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<call~~0x4015f0>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 4]>', '<mov~~dword ptr [rsp + 0x18], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 4]>', '<jbe~~0x4008bb>']}, {'block_Idx': 528, 'blockInsts': ['<jmp~~0x40111a>']}, {'block_Idx': 32, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<call~~0x4015f0>']}, {'block_Idx': 103, 'blockInsts': ['<sub~~rsp, 0x58>', '<mov~~qword ptr [rsp + 0x48], rdi>', '<mov~~dword ptr [rsp + 0x44], esi>', '<mov~~rdi, qword ptr [rsp + 0x48]>', '<add~~rdi, 0x28>', '<mov~~esi, 4>', '<call~~0x4003e0>']}, {'block_Idx': 165, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x400fb0>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}, {'block_Idx': 221, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400eab>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x98]>', '<cmp~~dword ptr [rax], 0x43614c66>', '<je~~0x4008ea>']}, {'block_Idx': 31, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa8]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0xa0]>', '<add~~ecx, dword ptr [rsp + 0x7c]>', '<cmp~~eax, ecx>', '<jae~~0x400997>']}, {'block_Idx': 226, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x4010e2>']}, {'block_Idx': 0, 'blockInsts': ['<sub~~rsp, 0xa8>', '<mov~~qword ptr [rsp + 0x98], rdi>', '<mov~~qword ptr [rsp + 0x90], rsi>', '<mov~~qword ptr [rsp + 0x88], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~dword ptr [rsp + 0x7c], r8d>', '<mov~~rax, qword ptr [rsp + 0x98]>', '<mov~~rax, qword ptr [rax + 0xa0]>', '<mov~~qword ptr [rsp + 0x70], rax>', '<mov~~dword ptr [rsp + 0x6c], 0>', '<mov~~dword ptr [rsp + 0x64], 0>', '<mov~~dword ptr [rsp + 0x60], 0>', '<mov~~dword ptr [rsp + 0x5c], 0>', '<mov~~rax, qword ptr [rsp + 0x90]>', '<mov~~qword ptr [rsp + 0x50], rax>', '<mov~~rax, qword ptr [rsp + 0x90]>', '<mov~~qword ptr [rsp + 0x48], rax>', '<mov~~rax, qword ptr [rsp + 0x88]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x44], eax>', '<mov~~rax, qword ptr [rsp + 0x88]>', '<mov~~dword ptr [rax], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<jne~~0x4007ff>']}, {'block_Idx': 220, 'blockInsts': ['<jmp~~0x4010d2>']}, {'block_Idx': 184, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400e72>']}, {'block_Idx': 24, 'blockInsts': ['<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011df>']}, {'block_Idx': 100, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<mov~~esi, dword ptr [rsp + 0x44]>', '<call~~0x401600>']}, {'block_Idx': 343, 'blockInsts': ['<mov~~dword ptr [rsp + 0x54], 0>', '<mov~~eax, dword ptr [rsp + 0x54]>', '<add~~rsp, 0x58>', '<ret~~>']}, {'block_Idx': 95, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x23a9]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x64]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x400d24>']}, {'block_Idx': 18, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x60], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jb~~0x40092e>']}, {'block_Idx': 58, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5c]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<add~~ecx, dword ptr [rax + 0xa4]>', '<mov~~dword ptr [rax + 0xa4], ecx>', '<mov~~edx, dword ptr [rsp + 0x5c]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rax + 0xa0]>', '<sub~~ecx, edx>', '<mov~~dword ptr [rax + 0xa0], ecx>', '<mov~~eax, dword ptr [rsp + 0x60]>', '<mov~~dword ptr [rsp + 0xa4], eax>', '<jmp~~0x4011df>']}, {'block_Idx': 218, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xc]>', '<jge~~0x400d34>']}], 'cfg_edge_info': [(64, 5), (206, 217), (201, 212), (194, 206), (125, 128), (164, 174), (562, 19), (202, 158), (190, 202), (207, 218), (5, 19), (555, 44), (76, 79), (128, 117), (37, 42), (6, 11), (126, 101), (174, 187), (16, 22), (26, 32), (209, 175), (17, 23), (226, 200), (100, 103), (157, 164), (158, 44), (79, 83), (80, 115), (218, 186), (73, 76), (150, 152), (188, 200), (165, 177), (153, 157), (51, 66), (216, 225), (157, 166), (212, 221), (166, 178), (24, 30), (55, 63), (107, 110), (44, 51), (116, 122), (219, 226), (200, 158), (163, 173), (34, 25), (21, 25), (23, 22), (0, 2), (199, 211), (80, 92), (92, 94), (1, 3), (19, 27), (47, 43), (162, 30), (213, 222), (172, 184), (56, 55), (117, 126), (184, 195), (63, 70), (25, 31), (528, 32), (12, 6), (227, 202), (3, 12), (208, 207), (190, 201), (31, 37), (555, 107), (175, 158), (58, 30), (186, 197), (10, 17), (27, 33), (25, 24), (16, 21), (82, 76), (122, 32), (147, 150), (164, 175), (563, 19), (209, 174), (527, 529), (577, 100), (226, 199), (5, 560), (2, 6), (101, 555), (187, 198), (11, 18), (28, 34), (197, 208), (36, 47), (110, 115), (50, 58), (188, 199), (158, 555), (165, 176), (100, 150), (32, 555), (198, 209), (529, 531), (94, 100), (218, 187), (111, 116), (163, 172), (194, 205), (18, 25), (21, 24), (23, 21), (222, 221), (217, 216), (4, 8), (95, 101), (27, 76), (152, 162), (178, 190), (19, 26), (47, 42), (128, 116), (111, 117), (225, 195), (6, 10), (174, 186), (12, 5), (227, 201), (35, 34), (201, 213), (43, 56), (101, 107), (1, 4), (10, 16), (125, 92), (221, 227), (76, 80), (196, 207), (37, 43), (94, 577), (157, 163), (220, 219), (79, 527), (527, 528), (8, 12), (70, 30), (176, 188), (2, 5), (63, 64), (157, 165), (195, 158), (545, 527), (50, 57), (44, 50), (150, 153), (117, 577), (34, 24), (0, 1), (153, 158), (199, 210), (11, 10), (210, 219), (166, 179), (184, 194), (55, 64), (32, 44), (211, 220), (18, 24), (531, 30), (107, 111), (42, 55), (110, 128), (31, 36), (343, 150), (92, 95), (205, 216), (186, 196), (225, 194), (66, 30)], 'cdg_edge_info': [(92, 122), (201, 212), (166, 190), (194, 206), (164, 174), (227, 221), (218, 218), (0, 5), (23, 34), (31, 47), (111, 101), (128, 117), (76, 79), (165, 200), (6, 11), (209, 209), (184, 216), (34, 30), (128, 101), (166, 158), (1, 8), (92, 44), (157, 164), (19, 32), (218, 186), (18, 30), (150, 152), (165, 177), (153, 157), (92, 101), (157, 166), (166, 178), (190, 227), (55, 63), (107, 110), (44, 51), (163, 173), (34, 25), (21, 25), (0, 2), (199, 211), (227, 227), (165, 188), (92, 94), (1, 3), (19, 27), (47, 43), (63, 70), (25, 31), (12, 6), (165, 44), (190, 201), (163, 184), (31, 37), (128, 107), (92, 32), (184, 225), (186, 197), (25, 24), (16, 21), (527, 44), (225, 216), (174, 207), (209, 174), (225, 225), (527, 529), (226, 199), (163, 195), (2, 6), (11, 18), (44, 30), (76, 92), (47, 56), (63, 19), (157, 175), (165, 158), (188, 199), (12, 19), (50, 58), (165, 176), (527, 531), (174, 218), (107, 128), (50, 30), (164, 198), (25, 19), (111, 107), (527, 30), (163, 44), (163, 172), (63, 30), (18, 25), (21, 24), (194, 205), (23, 21), (19, 26), (10, 23), (63, 5), (164, 209), (19, 44), (6, 10), (174, 186), (227, 201), (12, 5), (201, 213), (150, 30), (1, 4), (25, 5), (153, 44), (10, 16), (76, 80), (190, 221), (37, 43), (157, 44), (157, 163), (92, 107), (163, 158), (226, 226), (92, 116), (527, 528), (166, 202), (44, 66), (19, 76), (188, 226), (92, 100), (63, 64), (157, 165), (226, 219), (50, 57), (16, 34), (44, 50), (21, 30), (150, 153), (34, 24), (25, 55), (0, 1), (150, 162), (153, 158), (199, 210), (25, 64), (11, 10), (188, 219), (0, 19), (157, 158), (37, 56), (166, 179), (184, 194), (25, 30), (527, 32), (18, 24), (107, 111), (218, 207), (209, 198), (31, 36), (0, 12), (92, 150), (92, 95), (166, 44), (186, 196), (225, 194), (111, 117)], 'ddg_edge_info': [(0, 158), (79, 51), (0, 5), (207, 218), (0, 23), (80, 95), (12, 226), (25, 43), (153, 201), (79, 163), (184, 216), (153, 210), (153, 219), (95, 107), (92, 209), (12, 100), (92, 218), (80, 225), (92, 227), (153, 66), (6, 34), (128, 158), (6, 43), (12, 212), (80, 117), (196, 158), (190, 227), (205, 225), (19, 107), (153, 196), (79, 158), (44, 51), (25, 47), (153, 205), (34, 25), (66, 57), (12, 95), (80, 211), (92, 213), (47, 43), (36, 43), (206, 225), (162, 57), (6, 47), (27, 79), (6, 56), (80, 94), (12, 225), (153, 173), (79, 153), (79, 162), (153, 209), (92, 199), (80, 197), (80, 206), (27, 209), (164, 196), (55, 51), (36, 47), (27, 218), (27, 227), (0, 210), (47, 56), (36, 56), (50, 58), (188, 199), (210, 199), (12, 211), (213, 201), (205, 206), (27, 101), (153, 177), (94, 100), (153, 186), (27, 110), (12, 58), (194, 205), (92, 194), (55, 19), (95, 101), (80, 201), (12, 94), (95, 110), (80, 210), (92, 212), (210, 158), (153, 51), (27, 213), (0, 205), (164, 209), (6, 10), (58, 57), (201, 213), (80, 66), (12, 197), (12, 206), (153, 163), (0, 70), (221, 227), (190, 221), (94, 95), (153, 190), (55, 5), (12, 80), (80, 196), (80, 205), (27, 199), (198, 197), (27, 226), (0, 209), (94, 225), (12, 201), (80, 79), (12, 210), (11, 56), (0, 56), (153, 158), (92, 157), (92, 166), (12, 57), (12, 66), (94, 117), (27, 194), (27, 212), (94, 211), (197, 196), (27, 50), (201, 212), (12, 196), (8, 55), (0, 51), (12, 25), (12, 34), (31, 47), (95, 50), (92, 152), (12, 43), (34, 58), (196, 218), (79, 209), (80, 186), (107, 51), (79, 218), (79, 227), (94, 197), (94, 206), (55, 107), (80, 51), (197, 209), (197, 218), (79, 101), (79, 110), (11, 55), (0, 55), (153, 157), (94, 80), (12, 47), (92, 165), (80, 163), (12, 56), (27, 166), (79, 213), (94, 201), (197, 186), (94, 210), (213, 158), (19, 27), (8, 36), (27, 58), (12, 6), (0, 50), (94, 66), (190, 201), (12, 24), (184, 225), (95, 58), (80, 158), (27, 152), (79, 199), (56, 57), (79, 226), (174, 207), (94, 196), (94, 205), (12, 163), (152, 57), (8, 31), (205, 158), (0, 27), (0, 36), (11, 36), (211, 210), (12, 10), (94, 79), (25, 56), (80, 153), (80, 162), (79, 194), (27, 165), (79, 212), (56, 70), (34, 70), (197, 158), (79, 50), (12, 158), (0, 4), (0, 31), (19, 44), (12, 5), (12, 23), (153, 218), (153, 227), (34, 47), (34, 56), (92, 226), (12, 117), (216, 194), (174, 197), (94, 186), (8, 12), (0, 8), (8, 21), (210, 226), (188, 226), (94, 51), (79, 166), (212, 201), (25, 55), (153, 213), (94, 163), (79, 58), (0, 3), (531, 57), (8, 16), (0, 12), (6, 55), (219, 199), (0, 21), (92, 95), (79, 152), (153, 199), (128, 44), (196, 197), (153, 226), (94, 158), (92, 225), (55, 50), (47, 55), (70, 57), (8, 11), (0, 16), (211, 199), (27, 100), (213, 227), (56, 5), (153, 194), (3, 8), (79, 165), (51, 57), (153, 212), (51, 66), (153, 221), (92, 211), (80, 209), (94, 153), (80, 218), (206, 205), (153, 50), (94, 162), (80, 227), (207, 197), (211, 158), (6, 36), (199, 211), (12, 205), (21, 34), (210, 211), (92, 94), (80, 101), (27, 95), (80, 110), (153, 198), (153, 207), (12, 79), (153, 216), (92, 197), (92, 206), (80, 213), (198, 196), (55, 58), (27, 225), (6, 31), (12, 209), (12, 218), (153, 166), (12, 227), (153, 184), (27, 117), (0, 100), (80, 199), (92, 201), (24, 57), (92, 210), (12, 101), (95, 117), (55, 44), (27, 211), (164, 198), (80, 226), (153, 58), (198, 209), (0, 212), (12, 186), (12, 213), (213, 212), (27, 94), (10, 23), (153, 179), (12, 51), (153, 188), (153, 197), (43, 56), (80, 194), (92, 196), (92, 205), (27, 197), (80, 212), (27, 206), (0, 198), (80, 50), (79, 100), (12, 199), (205, 194), (0, 63), (27, 80), (153, 165), (153, 174), (12, 55), (206, 158), (206, 194), (27, 201), (27, 210), (164, 197), (94, 209), (94, 218), (94, 227), (529, 57), (6, 16), (6, 25), (79, 95), (12, 194), (27, 66), (0, 58), (12, 50), (94, 101), (95, 66), (80, 166), (94, 110), (92, 186), (194, 206), (79, 225), (27, 196), (27, 205), (12, 153), (128, 117), (0, 197), (12, 162), (94, 213), (80, 58), (0, 44), (8, 57), (221, 201), (79, 117), (12, 27), (153, 164), (12, 36), (80, 152), (92, 163), (107, 44), (79, 211), (216, 225), (94, 199), (12, 166), (8, 25), (94, 226), (8, 34), (8, 43), (79, 94), (219, 226), (0, 57), (0, 66), (12, 31), (92, 158), (80, 165), (79, 197), (34, 55), (56, 55), (79, 206), (174, 196), (27, 186), (94, 194), (128, 107), (12, 152), (0, 196), (94, 212), (79, 80), (0, 25), (27, 51), (0, 34), (8, 47), (94, 50), (0, 43), (11, 43), (8, 56), (211, 226), (44, 58), (95, 51), (92, 153), (212, 227), (79, 201), (27, 163), (16, 23), (79, 210), (174, 218), (8, 6), (107, 128), (79, 66), (0, 11), (12, 165), (8, 24), (529, 531), (19, 51), (0, 47), (4, 8), (12, 21), (25, 58), (152, 162), (212, 213), (34, 36), (153, 225), (79, 196), (27, 158), (79, 205), (56, 63), (34, 63), (94, 166), (95, 158), (8, 10), (0, 6), (0, 24), (94, 58), (12, 16), (44, 57), (153, 211), (34, 31), (27, 153), (196, 209), (94, 152), (27, 162), (12, 110), (19, 158), (56, 58), (207, 196), (8, 5), (0, 1), (199, 210), (0, 10), (8, 23), (188, 219), (0, 19), (80, 100), (212, 158), (184, 194), (12, 11), (153, 206), (196, 186), (79, 186), (94, 165)]}]}
{'flac_decode_frame': [{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 193, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 194, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 195, 'instruction': 'movq\t0x80(%rsp), %rsi'}, {'instIndex': 196, 'instruction': 'movl\t0x7c(%rsp), %edx'}, {'instIndex': 197, 'instruction': 'shll\t$3, %edx'}, {'instIndex': 198, 'instruction': 'callq\tinit_get_bits'}, {'instIndex': 199, 'instruction': 'cmpl\t$0x18, 0x7c(%rsp)'}, {'instIndex': 200, 'instruction': 'jge\t.LBB10_31'}, {'instIndex': 201, 'instruction': 'jmp\t.LBB10_91'}, {'instIndex': 202, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 203, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 204, 'instruction': 'movl\t$0x20, %esi'}, {'instIndex': 205, 'instruction': 'callq\tshow_bits_long'}, {'instIndex': 206, 'instruction': 'cmpl\t$0x664c6143, %eax               # imm = 0x0x298C0x17ff'}, {'instIndex': 207, 'instruction': 'jne\t.LBB10_35'}, {'instIndex': 208, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 209, 'instruction': 'callq\tmetadata_parse'}, {'instIndex': 210, 'instruction': 'cmpl\t$0, %eax'}, {'instIndex': 211, 'instruction': 'je\t.LBB10_34'}]}]}
The case of compiler clang with optimization O1.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O1/flacdec.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O1/flacdec.s---flac_decode_frame---after
function id: 4
function flag: True
There are 2167 instructions for function: flac_decode_frame in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '639', 'end': 649}, 'before': {'start': '639', 'end': 644}}}]
[{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 167, 'instruction': 'movl\t%eax, %edi'}, {'instIndex': 168, 'instruction': 'shll\t$3, %edi'}, {'instIndex': 192, 'instruction': 'cmpl\t$0x18, %eax'}, {'instIndex': 193, 'instruction': 'jl\t.LBB4_169'}, {'instIndex': 208, 'instruction': ''}, {'instIndex': 209, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 259, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 260, 'instruction': ''}, {'instIndex': 261, 'instruction': 'movl\t%esi, 0x560(%rsp)                # 4-byte Spill'}, {'instIndex': 271, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 272, 'instruction': 'movl\t0x564(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 273, 'instruction': 'shrl\t$0xf0, %esi'}, {'instIndex': 284, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 285, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 286, 'instruction': 'movq\t0x588(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 445, 'instruction': 'movl\t%esi, 0x524(%rsp)                # 4-byte Spill'}, {'instIndex': 452, 'instruction': 'movl\t%edx, 0x528(%rsp)                # 4-byte Spill'}, {'instIndex': 494, 'instruction': 'movl\t0x504(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 572, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 640, 'instruction': 'sarl\t$3, %edi'}, {'instIndex': 641, 'instruction': 'movslq\t%edi, %rdi'}, {'instIndex': 701, 'instruction': 'movl\t%edx, %ecx'}, {'instIndex': 702, 'instruction': 'sarl\t$3, %ecx'}, {'instIndex': 721, 'instruction': 'movl\t(%rcx), %edx'}, {'instIndex': 722, 'instruction': 'movl\t%edx, %ecx'}, {'instIndex': 804, 'instruction': 'movq\t0x518(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 805, 'instruction': 'movl\t(%rcx), %edx'}, {'instIndex': 824, 'instruction': 'movq\t0x508(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 825, 'instruction': 'movq\t0x518(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 843, 'instruction': 'jmp\t.LBB4_66'}, {'instIndex': 844, 'instruction': 'movq\t0x508(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 983, 'instruction': 'jmp\t.LBB4_137'}, {'instIndex': 984, 'instruction': 'movq\t0x508(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 985, 'instruction': 'movl\t0x434(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1091, 'instruction': 'movl\t(%rcx), %ecx'}, {'instIndex': 1096, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1097, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1098, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1106, 'instruction': 'movl\t0x408(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1107, 'instruction': 'movl\t0x3e4(%rsp), %edx                 # 4-byte Reload'}, {'instIndex': 1108, 'instruction': 'movl\t0x3ec(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1123, 'instruction': 'movl\t0x3ec(%rsp), %r9d                # 4-byte Reload'}, {'instIndex': 1128, 'instruction': 'movl\t%r8d, (%rdx)'}, {'instIndex': 1129, 'instruction': 'movl\t%edi, %ecx'}, {'instIndex': 1187, 'instruction': 'movq\t%rsi, 0x3a0(%rsp)                 # 8-byte Spill'}, {'instIndex': 1192, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1193, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1194, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1202, 'instruction': 'movl\t%edx, 0x3b4(%rsp)                 # 4-byte Spill'}, {'instIndex': 1203, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1204, 'instruction': 'jge\t.LBB4_92'}, {'instIndex': 1219, 'instruction': 'movl\t0x3a8(%rsp), %edi                 # 4-byte Reload'}, {'instIndex': 1224, 'instruction': ''}, {'instIndex': 1225, 'instruction': 'movl\t%esi, %r8d'}, {'instIndex': 1297, 'instruction': 'movq\t0x508(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 1302, 'instruction': 'movl\t%eax, 0x358(%rsp)                 # 4-byte Spill'}, {'instIndex': 1303, 'instruction': 'movl\t(%rcx), %ecx'}, {'instIndex': 1304, 'instruction': 'movl\t%ecx, 0x35c(%rsp)                 # 4-byte Spill'}, {'instIndex': 1312, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1313, 'instruction': 'movl\t%ecx, 0x360(%rsp)                 # 4-byte Spill'}, {'instIndex': 1314, 'instruction': 'shll\t%cl, %edx'}, {'instIndex': 1329, 'instruction': 'movl\t%eax, 0x34c(%rsp)                 # 4-byte Spill'}, {'instIndex': 1334, 'instruction': 'movq\t0x438(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1335, 'instruction': 'movl\t0x364(%rsp), %r9d                 # 4-byte Reload'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O1/flacdec.o
Patched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O1/flacdec.o---after
The extraction of function: flac_decode_frame
Analyzing the binaries to generate subCFGs from patched function ...
It has 381 nodes and 664 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 2140 instructions in binary file.
[4196439, 4196587, 4196651, 4196751, 4197590, 4197873, 4198254, 4198512, 4198791, 4198866, 4199247, 4199328, 4199400, 4200041, 4200572, 4200627, 4201043, 4201098, 4201574, 4201629]
The execution time of patched subCFG information extraction via angr: 0:00:04.297733
{'flac_decode_frame': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 63, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40110d>, <DisassemblerInsn "cmp" for 0x401115>, <DisassemblerInsn "jge" for 0x401119>]'}, {'block_Idx': 68, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401070>, <DisassemblerInsn "mov" for 0x401078>, <DisassemblerInsn "mov" for 0x401080>, <DisassemblerInsn "mov" for 0x401088>, <DisassemblerInsn "add" for 0x40108f>, <DisassemblerInsn "mov" for 0x401092>, <DisassemblerInsn "mov" for 0x401099>, <DisassemblerInsn "mov" for 0x40109b>, <DisassemblerInsn "sar" for 0x40109d>, <DisassemblerInsn "movsxd" for 0x4010a0>, <DisassemblerInsn "mov" for 0x4010a3>, <DisassemblerInsn "ror" for 0x4010a6>, <DisassemblerInsn "ror" for 0x4010aa>, <DisassemblerInsn "ror" for 0x4010ad>, <DisassemblerInsn "mov" for 0x4010b1>, <DisassemblerInsn "and" for 0x4010b3>, <DisassemblerInsn "shl" for 0x4010b6>, <DisassemblerInsn "mov" for 0x4010b8>, <DisassemblerInsn "shr" for 0x4010bf>, <DisassemblerInsn "add" for 0x4010c2>, <DisassemblerInsn "mov" for 0x4010c5>, <DisassemblerInsn "add" for 0x4010c7>, <DisassemblerInsn "cmp" for 0x4010ca>, <DisassemblerInsn "setb" for 0x4010cd>, <DisassemblerInsn "mov" for 0x4010d1>, <DisassemblerInsn "shl" for 0x4010d4>, <DisassemblerInsn "movsxd" for 0x4010d8>, <DisassemblerInsn "add" for 0x4010db>, <DisassemblerInsn "cmp" for 0x4010de>, <DisassemblerInsn "cmovb" for 0x4010e1>, <DisassemblerInsn "mov" for 0x4010e5>, <DisassemblerInsn "test" for 0x4010ec>, <DisassemblerInsn "mov" for 0x4010f0>, <DisassemblerInsn "mov" for 0x4010f8>, <DisassemblerInsn "mov" for 0x4010ff>, <DisassemblerInsn "jne" for 0x401107>]'}, {'block_Idx': 188, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d83>, <DisassemblerInsn "mov" for 0x401d8a>, <DisassemblerInsn "mov" for 0x401d92>, <DisassemblerInsn "mov" for 0x401d9a>, <DisassemblerInsn "call" for 0x401d9c>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a8a>, <DisassemblerInsn "mov" for 0x401a92>, <DisassemblerInsn "mov" for 0x401a99>, <DisassemblerInsn "mov" for 0x401aa0>, <DisassemblerInsn "mov" for 0x401aa8>, <DisassemblerInsn "shr" for 0x401ab0>, <DisassemblerInsn "mov" for 0x401ab4>, <DisassemblerInsn "add" for 0x401ab7>, <DisassemblerInsn "mov" for 0x401abb>, <DisassemblerInsn "mov" for 0x401abe>, <DisassemblerInsn "add" for 0x401ac0>, <DisassemblerInsn "mov" for 0x401ac3>, <DisassemblerInsn "shl" for 0x401aca>, <DisassemblerInsn "mov" for 0x401acd>, <DisassemblerInsn "mov" for 0x401ad4>, <DisassemblerInsn "sar" for 0x401adc>, <DisassemblerInsn "movsxd" for 0x401ae0>, <DisassemblerInsn "mov" for 0x401ae3>, <DisassemblerInsn "ror" for 0x401ae7>, <DisassemblerInsn "ror" for 0x401aeb>, <DisassemblerInsn "ror" for 0x401aee>, <DisassemblerInsn "shl" for 0x401af2>, <DisassemblerInsn "mov" for 0x401af4>, <DisassemblerInsn "mov" for 0x401afb>, <DisassemblerInsn "xor" for 0x401afe>, <DisassemblerInsn "sub" for 0x401b00>, <DisassemblerInsn "shr" for 0x401b03>, <DisassemblerInsn "mov" for 0x401b05>, <DisassemblerInsn "add" for 0x401b0c>, <DisassemblerInsn "mov" for 0x401b0e>, <DisassemblerInsn "or" for 0x401b10>, <DisassemblerInsn "mov" for 0x401b12>, <DisassemblerInsn "mov" for 0x401b19>, <DisassemblerInsn "mov" for 0x401b21>, <DisassemblerInsn "mov" for 0x401b29>, <DisassemblerInsn "mov" for 0x401b30>, <DisassemblerInsn "mov" for 0x401b37>, <DisassemblerInsn "sub" for 0x401b3c>, <DisassemblerInsn "mov" for 0x401b3e>, <DisassemblerInsn "shl" for 0x401b45>, <DisassemblerInsn "mov" for 0x401b47>, <DisassemblerInsn "sar" for 0x401b4e>, <DisassemblerInsn "mov" for 0x401b50>, <DisassemblerInsn "mov" for 0x401b58>, <DisassemblerInsn "mov" for 0x401b5b>, <DisassemblerInsn "add" for 0x401b5e>, <DisassemblerInsn "movsxd" for 0x401b62>, <DisassemblerInsn "cmp" for 0x401b65>, <DisassemblerInsn "mov" for 0x401b68>, <DisassemblerInsn "jl" for 0x401b70>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cd6>, <DisassemblerInsn "mov" for 0x400cde>, <DisassemblerInsn "mov" for 0x400ce6>, <DisassemblerInsn "mov" for 0x400cec>, <DisassemblerInsn "add" for 0x400cef>, <DisassemblerInsn "mov" for 0x400cf3>, <DisassemblerInsn "mov" for 0x400cfb>, <DisassemblerInsn "add" for 0x400cfe>, <DisassemblerInsn "mov" for 0x400d02>, <DisassemblerInsn "mov" for 0x400d0a>, <DisassemblerInsn "mov" for 0x400d0e>, <DisassemblerInsn "mov" for 0x400d16>, <DisassemblerInsn "mov" for 0x400d19>, <DisassemblerInsn "ror" for 0x400d1b>, <DisassemblerInsn "ror" for 0x400d1f>, <DisassemblerInsn "ror" for 0x400d22>, <DisassemblerInsn "shr" for 0x400d26>, <DisassemblerInsn "mov" for 0x400d29>, <DisassemblerInsn "ror" for 0x400d30>, <DisassemblerInsn "ror" for 0x400d34>, <DisassemblerInsn "ror" for 0x400d37>, <DisassemblerInsn "shl" for 0x400d3b>, <DisassemblerInsn "shr" for 0x400d3e>, <DisassemblerInsn "mov" for 0x400d41>, <DisassemblerInsn "mov" for 0x400d48>, <DisassemblerInsn "mov" for 0x400d4f>, <DisassemblerInsn "ror" for 0x400d52>, <DisassemblerInsn "ror" for 0x400d56>, <DisassemblerInsn "ror" for 0x400d59>, <DisassemblerInsn "shr" for 0x400d5d>, <DisassemblerInsn "mov" for 0x400d60>, <DisassemblerInsn "mov" for 0x400d67>, <DisassemblerInsn "cmp" for 0x400d6e>, <DisassemblerInsn "jge" for 0x400d71>]'}, {'block_Idx': 46, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400db2>, <DisassemblerInsn "add" for 0x400db9>, <DisassemblerInsn "mov" for 0x400dbc>, <DisassemblerInsn "jmp" for 0x400dc3>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d2c>, <DisassemblerInsn "mov" for 0x401d34>, <DisassemblerInsn "mov" for 0x401d3c>, <DisassemblerInsn "mov" for 0x401d43>, <DisassemblerInsn "mov" for 0x401d4a>, <DisassemblerInsn "sub" for 0x401d4f>, <DisassemblerInsn "mov" for 0x401d51>, <DisassemblerInsn "shl" for 0x401d58>, <DisassemblerInsn "mov" for 0x401d5a>, <DisassemblerInsn "sar" for 0x401d61>, <DisassemblerInsn "mov" for 0x401d63>, <DisassemblerInsn "mov" for 0x401d6b>, <DisassemblerInsn "add" for 0x401d6e>, <DisassemblerInsn "cmp" for 0x401d72>, <DisassemblerInsn "mov" for 0x401d75>, <DisassemblerInsn "jne" for 0x401d7d>]'}, {'block_Idx': 167, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401942>, <DisassemblerInsn "mov" for 0x40194a>, <DisassemblerInsn "mov" for 0x401951>, <DisassemblerInsn "mov" for 0x401958>, <DisassemblerInsn "sub" for 0x40195d>, <DisassemblerInsn "mov" for 0x40195f>, <DisassemblerInsn "shl" for 0x401966>, <DisassemblerInsn "mov" for 0x401968>, <DisassemblerInsn "sar" for 0x40196f>, <DisassemblerInsn "mov" for 0x401971>, <DisassemblerInsn "cmp" for 0x401978>, <DisassemblerInsn "jle" for 0x40197b>]'}, {'block_Idx': 88, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40145a>, <DisassemblerInsn "mov" for 0x401462>, <DisassemblerInsn "mov" for 0x401469>, <DisassemblerInsn "mov" for 0x401470>, <DisassemblerInsn "add" for 0x401472>, <DisassemblerInsn "mov" for 0x401475>, <DisassemblerInsn "xor" for 0x401477>, <DisassemblerInsn "call" for 0x401479>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40092b>, <DisassemblerInsn "mov" for 0x400933>, <DisassemblerInsn "add" for 0x400936>, <DisassemblerInsn "mov" for 0x40093a>, <DisassemblerInsn "mov" for 0x400942>, <DisassemblerInsn "add" for 0x400945>, <DisassemblerInsn "mov" for 0x400948>, <DisassemblerInsn "mov" for 0x40094b>, <DisassemblerInsn "add" for 0x40094e>, <DisassemblerInsn "mov" for 0x400952>, <DisassemblerInsn "mov" for 0x40095a>, <DisassemblerInsn "add" for 0x40095d>, <DisassemblerInsn "mov" for 0x400961>, <DisassemblerInsn "mov" for 0x400969>, <DisassemblerInsn "add" for 0x40096c>, <DisassemblerInsn "mov" for 0x400970>, <DisassemblerInsn "mov" for 0x400978>, <DisassemblerInsn "add" for 0x40097b>, <DisassemblerInsn "mov" for 0x40097f>, <DisassemblerInsn "mov" for 0x400987>, <DisassemblerInsn "mov" for 0x40098f>, <DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "mov" for 0x40099f>, <DisassemblerInsn "mov" for 0x4009a1>, <DisassemblerInsn "mov" for 0x4009a4>, <DisassemblerInsn "mov" for 0x4009ac>, <DisassemblerInsn "sar" for 0x4009ae>, <DisassemblerInsn "movsxd" for 0x4009b1>, <DisassemblerInsn "mov" for 0x4009b4>, <DisassemblerInsn "mov" for 0x4009b7>, <DisassemblerInsn "and" for 0x4009b9>, <DisassemblerInsn "mov" for 0x4009bc>, <DisassemblerInsn "movzx" for 0x4009c3>, <DisassemblerInsn "mov" for 0x4009c6>, <DisassemblerInsn "mov" for 0x4009cd>, <DisassemblerInsn "add" for 0x4009cf>, <DisassemblerInsn "mov" for 0x4009d2>, <DisassemblerInsn "mov" for 0x4009d4>, <DisassemblerInsn "sar" for 0x4009d6>, <DisassemblerInsn "movsxd" for 0x4009d9>, <DisassemblerInsn "mov" for 0x4009dc>, <DisassemblerInsn "ror" for 0x4009df>, <DisassemblerInsn "ror" for 0x4009e3>, <DisassemblerInsn "ror" for 0x4009e6>, <DisassemblerInsn "and" for 0x4009ea>, <DisassemblerInsn "shl" for 0x4009ed>, <DisassemblerInsn "mov" for 0x4009ef>, <DisassemblerInsn "shr" for 0x4009f6>, <DisassemblerInsn "mov" for 0x4009f9>, <DisassemblerInsn "mov" for 0x400a00>, <DisassemblerInsn "add" for 0x400a02>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "sar" for 0x400a07>, <DisassemblerInsn "movsxd" for 0x400a0a>, <DisassemblerInsn "mov" for 0x400a0d>, <DisassemblerInsn "ror" for 0x400a10>, <DisassemblerInsn "ror" for 0x400a14>, <DisassemblerInsn "ror" for 0x400a17>, <DisassemblerInsn "shl" for 0x400a1b>, <DisassemblerInsn "mov" for 0x400a1d>, <DisassemblerInsn "shr" for 0x400a24>, <DisassemblerInsn "mov" for 0x400a27>, <DisassemblerInsn "add" for 0x400a2a>, <DisassemblerInsn "mov" for 0x400a2e>, <DisassemblerInsn "shl" for 0x400a31>, <DisassemblerInsn "sar" for 0x400a34>, <DisassemblerInsn "movsxd" for 0x400a38>, <DisassemblerInsn "mov" for 0x400a3b>, <DisassemblerInsn "ror" for 0x400a3f>, <DisassemblerInsn "ror" for 0x400a43>, <DisassemblerInsn "ror" for 0x400a46>, <DisassemblerInsn "shl" for 0x400a4a>, <DisassemblerInsn "mov" for 0x400a4c>, <DisassemblerInsn "shr" for 0x400a54>, <DisassemblerInsn "add" for 0x400a57>, <DisassemblerInsn "mov" for 0x400a5a>, <DisassemblerInsn "mov" for 0x400a61>, <DisassemblerInsn "or" for 0x400a63>, <DisassemblerInsn "mov" for 0x400a65>, <DisassemblerInsn "shl" for 0x400a6c>, <DisassemblerInsn "mov" for 0x400a6f>, <DisassemblerInsn "add" for 0x400a76>, <DisassemblerInsn "mov" for 0x400a78>, <DisassemblerInsn "mov" for 0x400a7a>, <DisassemblerInsn "cmp" for 0x400a81>, <DisassemblerInsn "jle" for 0x400a83>]'}, {'block_Idx': 90, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40131e>, <DisassemblerInsn "sub" for 0x401325>, <DisassemblerInsn "je" for 0x401328>]'}, {'block_Idx': 72, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401041>, <DisassemblerInsn "mov" for 0x401049>, <DisassemblerInsn "mov" for 0x401050>, <DisassemblerInsn "mov" for 0x401057>, <DisassemblerInsn "cmp" for 0x40105f>, <DisassemblerInsn "mov" for 0x401062>, <DisassemblerInsn "jle" for 0x40106a>]'}, {'block_Idx': 95, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40132c>, <DisassemblerInsn "sub" for 0x401333>, <DisassemblerInsn "je" for 0x401336>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b81>, <DisassemblerInsn "mov" for 0x400b89>, <DisassemblerInsn "mov" for 0x400b90>, <DisassemblerInsn "add" for 0x400b92>, <DisassemblerInsn "mov" for 0x400b94>, <DisassemblerInsn "mov" for 0x400b96>, <DisassemblerInsn "mov" for 0x400b9d>, <DisassemblerInsn "shr" for 0x400ba2>, <DisassemblerInsn "mov" for 0x400ba4>, <DisassemblerInsn "and" for 0x400bab>, <DisassemblerInsn "cmp" for 0x400bad>, <DisassemblerInsn "je" for 0x400bb0>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400857>, <DisassemblerInsn "mov" for 0x40085f>, <DisassemblerInsn "mov" for 0x400866>, <DisassemblerInsn "mov" for 0x40086d>, <DisassemblerInsn "mov" for 0x400875>, <DisassemblerInsn "mov" for 0x40087c>, <DisassemblerInsn "mov" for 0x400883>, <DisassemblerInsn "shl" for 0x400885>, <DisassemblerInsn "xor" for 0x400888>, <DisassemblerInsn "cmp" for 0x40088a>, <DisassemblerInsn "cmovl" for 0x40088d>, <DisassemblerInsn "mov" for 0x400891>, <DisassemblerInsn "xor" for 0x400899>, <DisassemblerInsn "cmp" for 0x40089b>, <DisassemblerInsn "cmovl" for 0x40089e>, <DisassemblerInsn "xor" for 0x4008a1>, <DisassemblerInsn "cmp" for 0x4008a4>, <DisassemblerInsn "mov" for 0x4008a7>, <DisassemblerInsn "cmovl" for 0x4008a9>, <DisassemblerInsn "mov" for 0x4008ad>, <DisassemblerInsn "add" for 0x4008b0>, <DisassemblerInsn "mov" for 0x4008b4>, <DisassemblerInsn "mov" for 0x4008bc>, <DisassemblerInsn "mov" for 0x4008c0>, <DisassemblerInsn "mov" for 0x4008c3>, <DisassemblerInsn "add" for 0x4008c5>, <DisassemblerInsn "mov" for 0x4008c8>, <DisassemblerInsn "mov" for 0x4008cc>, <DisassemblerInsn "add" for 0x4008cf>, <DisassemblerInsn "mov" for 0x4008d3>, <DisassemblerInsn "mov" for 0x4008db>, <DisassemblerInsn "cmp" for 0x4008e2>, <DisassemblerInsn "jl" for 0x4008e5>]'}, {'block_Idx': 131, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40178a>, <DisassemblerInsn "mov" for 0x401792>, <DisassemblerInsn "mov" for 0x401799>, <DisassemblerInsn "mov" for 0x4017a0>, <DisassemblerInsn "mov" for 0x4017a2>, <DisassemblerInsn "cmp" for 0x4017a9>, <DisassemblerInsn "jle" for 0x4017ac>]'}, {'block_Idx': 159, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018b3>, <DisassemblerInsn "mov" for 0x4018bb>, <DisassemblerInsn "mov" for 0x4018c2>, <DisassemblerInsn "mov" for 0x4018c9>, <DisassemblerInsn "mov" for 0x4018d1>, <DisassemblerInsn "shr" for 0x4018d9>, <DisassemblerInsn "mov" for 0x4018dd>, <DisassemblerInsn "add" for 0x4018e0>, <DisassemblerInsn "mov" for 0x4018e4>, <DisassemblerInsn "mov" for 0x4018e7>, <DisassemblerInsn "add" for 0x4018e9>, <DisassemblerInsn "mov" for 0x4018ec>, <DisassemblerInsn "shl" for 0x4018f3>, <DisassemblerInsn "mov" for 0x4018f6>, <DisassemblerInsn "mov" for 0x4018fd>, <DisassemblerInsn "sar" for 0x401905>, <DisassemblerInsn "movsxd" for 0x401909>, <DisassemblerInsn "mov" for 0x40190c>, <DisassemblerInsn "ror" for 0x401910>, <DisassemblerInsn "ror" for 0x401914>, <DisassemblerInsn "ror" for 0x401917>, <DisassemblerInsn "shl" for 0x40191b>, <DisassemblerInsn "mov" for 0x40191d>, <DisassemblerInsn "mov" for 0x401924>, <DisassemblerInsn "xor" for 0x401927>, <DisassemblerInsn "sub" for 0x401929>, <DisassemblerInsn "shr" for 0x40192c>, <DisassemblerInsn "mov" for 0x40192e>, <DisassemblerInsn "add" for 0x401935>, <DisassemblerInsn "mov" for 0x401937>, <DisassemblerInsn "or" for 0x401939>, <DisassemblerInsn "mov" for 0x40193b>, <DisassemblerInsn "mov" for 0x401942>, <DisassemblerInsn "mov" for 0x40194a>, <DisassemblerInsn "mov" for 0x401951>, <DisassemblerInsn "mov" for 0x401958>, <DisassemblerInsn "sub" for 0x40195d>, <DisassemblerInsn "mov" for 0x40195f>, <DisassemblerInsn "shl" for 0x401966>, <DisassemblerInsn "mov" for 0x401968>, <DisassemblerInsn "sar" for 0x40196f>, <DisassemblerInsn "mov" for 0x401971>, <DisassemblerInsn "cmp" for 0x401978>, <DisassemblerInsn "jle" for 0x40197b>]'}, {'block_Idx': 81, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011d2>, <DisassemblerInsn "mov" for 0x4011da>, <DisassemblerInsn "mov" for 0x4011e2>, <DisassemblerInsn "mov" for 0x4011e4>, <DisassemblerInsn "sar" for 0x4011e6>, <DisassemblerInsn "movsxd" for 0x4011e9>, <DisassemblerInsn "mov" for 0x4011ec>, <DisassemblerInsn "ror" for 0x4011ef>, <DisassemblerInsn "ror" for 0x4011f3>, <DisassemblerInsn "ror" for 0x4011f6>, <DisassemblerInsn "mov" for 0x4011fa>, <DisassemblerInsn "and" for 0x4011fc>, <DisassemblerInsn "shl" for 0x4011ff>, <DisassemblerInsn "mov" for 0x401201>, <DisassemblerInsn "shr" for 0x401209>, <DisassemblerInsn "add" for 0x40120c>, <DisassemblerInsn "mov" for 0x40120f>, <DisassemblerInsn "add" for 0x401211>, <DisassemblerInsn "mov" for 0x401214>, <DisassemblerInsn "jmp" for 0x40121b>]'}, {'block_Idx': 132, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016f2>, <DisassemblerInsn "mov" for 0x4016f9>, <DisassemblerInsn "mov" for 0x401701>, <DisassemblerInsn "mov" for 0x401709>, <DisassemblerInsn "mov" for 0x401710>, <DisassemblerInsn "mov" for 0x401712>, <DisassemblerInsn "sar" for 0x401714>, <DisassemblerInsn "mov" for 0x401717>, <DisassemblerInsn "movsxd" for 0x40171e>, <DisassemblerInsn "mov" for 0x401721>, <DisassemblerInsn "mov" for 0x401724>, <DisassemblerInsn "and" for 0x401726>, <DisassemblerInsn "mov" for 0x401729>, <DisassemblerInsn "movzx" for 0x401730>, <DisassemblerInsn "add" for 0x401733>, <DisassemblerInsn "mov" for 0x401736>, <DisassemblerInsn "mov" for 0x40173d>, <DisassemblerInsn "mov" for 0x40173f>, <DisassemblerInsn "shr" for 0x401744>, <DisassemblerInsn "mov" for 0x401746>, <DisassemblerInsn "mov" for 0x40174d>, <DisassemblerInsn "and" for 0x40174f>, <DisassemblerInsn "mov" for 0x401751>, <DisassemblerInsn "add" for 0x401758>, <DisassemblerInsn "mov" for 0x40175b>, <DisassemblerInsn "cmp" for 0x401762>, <DisassemblerInsn "mov" for 0x401765>, <DisassemblerInsn "je" for 0x40176c>]'}, {'block_Idx': 24, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b96>, <DisassemblerInsn "mov" for 0x400b9d>, <DisassemblerInsn "shr" for 0x400ba2>, <DisassemblerInsn "mov" for 0x400ba4>, <DisassemblerInsn "and" for 0x400bab>, <DisassemblerInsn "cmp" for 0x400bad>, <DisassemblerInsn "je" for 0x400bb0>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40059e>, <DisassemblerInsn "mov" for 0x4005a6>, <DisassemblerInsn "mov" for 0x4005ad>, <DisassemblerInsn "mov" for 0x4005b5>, <DisassemblerInsn "mov" for 0x4005b7>, <DisassemblerInsn "xor" for 0x4005be>, <DisassemblerInsn "cmp" for 0x4005c0>, <DisassemblerInsn "mov" for 0x4005c3>, <DisassemblerInsn "mov" for 0x4005ca>, <DisassemblerInsn "mov" for 0x4005d1>, <DisassemblerInsn "je" for 0x4005d9>]'}, {'block_Idx': 103, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40133a>, <DisassemblerInsn "sub" for 0x401341>, <DisassemblerInsn "je" for 0x401344>]'}, {'block_Idx': 169, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401981>, <DisassemblerInsn "mov" for 0x401989>, <DisassemblerInsn "mov" for 0x401991>, <DisassemblerInsn "mov" for 0x401996>, <DisassemblerInsn "xor" for 0x40199e>, <DisassemblerInsn "mov" for 0x4019a0>, <DisassemblerInsn "mov" for 0x4019a8>, <DisassemblerInsn "mov" for 0x4019b0>, <DisassemblerInsn "mov" for 0x4019b8>, <DisassemblerInsn "mov" for 0x4019c0>, <DisassemblerInsn "mov" for 0x4019c7>, <DisassemblerInsn "add" for 0x4019ca>, <DisassemblerInsn "mov" for 0x4019ce>, <DisassemblerInsn "movsxd" for 0x4019d6>, <DisassemblerInsn "cmp" for 0x4019d9>, <DisassemblerInsn "mov" for 0x4019dc>, <DisassemblerInsn "jl" for 0x4019e4>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008eb>, <DisassemblerInsn "mov" for 0x4008f3>, <DisassemblerInsn "ror" for 0x4008f5>, <DisassemblerInsn "ror" for 0x4008f9>, <DisassemblerInsn "ror" for 0x4008fc>, <DisassemblerInsn "shr" for 0x400900>, <DisassemblerInsn "mov" for 0x400903>, <DisassemblerInsn "shl" for 0x40090a>, <DisassemblerInsn "mov" for 0x40090d>, <DisassemblerInsn "ror" for 0x400910>, <DisassemblerInsn "ror" for 0x400914>, <DisassemblerInsn "ror" for 0x400917>, <DisassemblerInsn "shr" for 0x40091b>, <DisassemblerInsn "or" for 0x40091e>, <DisassemblerInsn "cmp" for 0x400920>, <DisassemblerInsn "jne" for 0x400925>]'}, {'block_Idx': 26, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d73>, <DisassemblerInsn "mov" for 0x400d7a>, <DisassemblerInsn "mov" for 0x400d82>, <DisassemblerInsn "add" for 0x400d85>, <DisassemblerInsn "xor" for 0x400d88>, <DisassemblerInsn "cmp" for 0x400d8a>, <DisassemblerInsn "mov" for 0x400d8c>, <DisassemblerInsn "je" for 0x400d93>]'}, {'block_Idx': 193, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a53>, <DisassemblerInsn "mov" for 0x401a5a>, <DisassemblerInsn "mov" for 0x401a61>, <DisassemblerInsn "mov" for 0x401a68>, <DisassemblerInsn "xor" for 0x401a6b>, <DisassemblerInsn "sub" for 0x401a6d>, <DisassemblerInsn "shr" for 0x401a70>, <DisassemblerInsn "mov" for 0x401a72>, <DisassemblerInsn "add" for 0x401a7a>, <DisassemblerInsn "mov" for 0x401a7c>, <DisassemblerInsn "mov" for 0x401a7e>, <DisassemblerInsn "jmp" for 0x401a85>]'}, {'block_Idx': 122, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015e8>, <DisassemblerInsn "mov" for 0x4015f0>, <DisassemblerInsn "mov" for 0x4015f8>, <DisassemblerInsn "mov" for 0x4015fa>, <DisassemblerInsn "mov" for 0x401601>, <DisassemblerInsn "mov" for 0x401604>, <DisassemblerInsn "mov" for 0x40160c>, <DisassemblerInsn "sar" for 0x40160e>, <DisassemblerInsn "movsxd" for 0x401611>, <DisassemblerInsn "mov" for 0x401614>, <DisassemblerInsn "mov" for 0x401618>, <DisassemblerInsn "and" for 0x40161a>, <DisassemblerInsn "movzx" for 0x40161d>, <DisassemblerInsn "mov" for 0x401621>, <DisassemblerInsn "add" for 0x401628>, <DisassemblerInsn "mov" for 0x40162b>, <DisassemblerInsn "mov" for 0x401632>, <DisassemblerInsn "mov" for 0x401634>, <DisassemblerInsn "shr" for 0x401639>, <DisassemblerInsn "mov" for 0x40163b>, <DisassemblerInsn "and" for 0x401642>, <DisassemblerInsn "cmp" for 0x401644>, <DisassemblerInsn "je" for 0x401647>]'}, {'block_Idx': 74, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401148>, <DisassemblerInsn "sub" for 0x40114f>, <DisassemblerInsn "je" for 0x401152>]'}, {'block_Idx': 98, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013a0>, <DisassemblerInsn "mov" for 0x4013a8>, <DisassemblerInsn "mov" for 0x4013b0>, <DisassemblerInsn "mov" for 0x4013b2>, <DisassemblerInsn "sar" for 0x4013b4>, <DisassemblerInsn "movsxd" for 0x4013b7>, <DisassemblerInsn "mov" for 0x4013ba>, <DisassemblerInsn "ror" for 0x4013bd>, <DisassemblerInsn "ror" for 0x4013c1>, <DisassemblerInsn "ror" for 0x4013c4>, <DisassemblerInsn "mov" for 0x4013c8>, <DisassemblerInsn "and" for 0x4013ca>, <DisassemblerInsn "shl" for 0x4013cd>, <DisassemblerInsn "mov" for 0x4013cf>, <DisassemblerInsn "shr" for 0x4013d7>, <DisassemblerInsn "add" for 0x4013da>, <DisassemblerInsn "mov" for 0x4013dd>, <DisassemblerInsn "mov" for 0x4013df>, <DisassemblerInsn "jmp" for 0x4013e6>]'}, {'block_Idx': 183, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401be3>, <DisassemblerInsn "mov" for 0x401bea>, <DisassemblerInsn "mov" for 0x401bec>, <DisassemblerInsn "xor" for 0x401bf4>, <DisassemblerInsn "mov" for 0x401bf6>, <DisassemblerInsn "mov" for 0x401bfe>, <DisassemblerInsn "mov" for 0x401c06>, <DisassemblerInsn "mov" for 0x401c0e>, <DisassemblerInsn "mov" for 0x401c16>, <DisassemblerInsn "mov" for 0x401c1e>, <DisassemblerInsn "mov" for 0x401c26>, <DisassemblerInsn "mov" for 0x401c28>, <DisassemblerInsn "mov" for 0x401c2f>, <DisassemblerInsn "mov" for 0x401c31>, <DisassemblerInsn "mov" for 0x401c38>, <DisassemblerInsn "sar" for 0x401c3a>, <DisassemblerInsn "movsxd" for 0x401c3d>, <DisassemblerInsn "mov" for 0x401c40>, <DisassemblerInsn "ror" for 0x401c43>, <DisassemblerInsn "ror" for 0x401c47>, <DisassemblerInsn "ror" for 0x401c4a>, <DisassemblerInsn "and" for 0x401c4e>, <DisassemblerInsn "mov" for 0x401c51>, <DisassemblerInsn "shl" for 0x401c58>, <DisassemblerInsn "mov" for 0x401c5a>, <DisassemblerInsn "cmp" for 0x401c61>, <DisassemblerInsn "jge" for 0x401c64>]'}, {'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c9d>, <DisassemblerInsn "mov" for 0x401ca5>, <DisassemblerInsn "mov" for 0x401cac>, <DisassemblerInsn "mov" for 0x401cb3>, <DisassemblerInsn "mov" for 0x401cbb>, <DisassemblerInsn "shr" for 0x401cc3>, <DisassemblerInsn "mov" for 0x401cc7>, <DisassemblerInsn "add" for 0x401cca>, <DisassemblerInsn "mov" for 0x401cce>, <DisassemblerInsn "mov" for 0x401cd1>, <DisassemblerInsn "add" for 0x401cd3>, <DisassemblerInsn "mov" for 0x401cd6>, <DisassemblerInsn "shl" for 0x401cdd>, <DisassemblerInsn "mov" for 0x401ce0>, <DisassemblerInsn "mov" for 0x401ce7>, <DisassemblerInsn "sar" for 0x401cef>, <DisassemblerInsn "movsxd" for 0x401cf3>, <DisassemblerInsn "mov" for 0x401cf6>, <DisassemblerInsn "ror" for 0x401cfa>, <DisassemblerInsn "ror" for 0x401cfe>, <DisassemblerInsn "ror" for 0x401d01>, <DisassemblerInsn "shl" for 0x401d05>, <DisassemblerInsn "mov" for 0x401d07>, <DisassemblerInsn "mov" for 0x401d0e>, <DisassemblerInsn "xor" for 0x401d11>, <DisassemblerInsn "sub" for 0x401d13>, <DisassemblerInsn "shr" for 0x401d16>, <DisassemblerInsn "mov" for 0x401d18>, <DisassemblerInsn "add" for 0x401d1f>, <DisassemblerInsn "mov" for 0x401d21>, <DisassemblerInsn "or" for 0x401d23>, <DisassemblerInsn "mov" for 0x401d25>, <DisassemblerInsn "mov" for 0x401d2c>, <DisassemblerInsn "mov" for 0x401d34>, <DisassemblerInsn "mov" for 0x401d3c>, <DisassemblerInsn "mov" for 0x401d43>, <DisassemblerInsn "mov" for 0x401d4a>, <DisassemblerInsn "sub" for 0x401d4f>, <DisassemblerInsn "mov" for 0x401d51>, <DisassemblerInsn "shl" for 0x401d58>, <DisassemblerInsn "mov" for 0x401d5a>, <DisassemblerInsn "sar" for 0x401d61>, <DisassemblerInsn "mov" for 0x401d63>, <DisassemblerInsn "mov" for 0x401d6b>, <DisassemblerInsn "add" for 0x401d6e>, <DisassemblerInsn "cmp" for 0x401d72>, <DisassemblerInsn "mov" for 0x401d75>, <DisassemblerInsn "jne" for 0x401d7d>]'}, {'block_Idx': 31, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40098f>, <DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "mov" for 0x40099f>, <DisassemblerInsn "mov" for 0x4009a1>, <DisassemblerInsn "mov" for 0x4009a4>, <DisassemblerInsn "mov" for 0x4009ac>, <DisassemblerInsn "sar" for 0x4009ae>, <DisassemblerInsn "movsxd" for 0x4009b1>, <DisassemblerInsn "mov" for 0x4009b4>, <DisassemblerInsn "mov" for 0x4009b7>, <DisassemblerInsn "and" for 0x4009b9>, <DisassemblerInsn "mov" for 0x4009bc>, <DisassemblerInsn "movzx" for 0x4009c3>, <DisassemblerInsn "mov" for 0x4009c6>, <DisassemblerInsn "mov" for 0x4009cd>, <DisassemblerInsn "add" for 0x4009cf>, <DisassemblerInsn "mov" for 0x4009d2>, <DisassemblerInsn "mov" for 0x4009d4>, <DisassemblerInsn "sar" for 0x4009d6>, <DisassemblerInsn "movsxd" for 0x4009d9>, <DisassemblerInsn "mov" for 0x4009dc>, <DisassemblerInsn "ror" for 0x4009df>, <DisassemblerInsn "ror" for 0x4009e3>, <DisassemblerInsn "ror" for 0x4009e6>, <DisassemblerInsn "and" for 0x4009ea>, <DisassemblerInsn "shl" for 0x4009ed>, <DisassemblerInsn "mov" for 0x4009ef>, <DisassemblerInsn "shr" for 0x4009f6>, <DisassemblerInsn "mov" for 0x4009f9>, <DisassemblerInsn "mov" for 0x400a00>, <DisassemblerInsn "add" for 0x400a02>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "sar" for 0x400a07>, <DisassemblerInsn "movsxd" for 0x400a0a>, <DisassemblerInsn "mov" for 0x400a0d>, <DisassemblerInsn "ror" for 0x400a10>, <DisassemblerInsn "ror" for 0x400a14>, <DisassemblerInsn "ror" for 0x400a17>, <DisassemblerInsn "shl" for 0x400a1b>, <DisassemblerInsn "mov" for 0x400a1d>, <DisassemblerInsn "shr" for 0x400a24>, <DisassemblerInsn "mov" for 0x400a27>, <DisassemblerInsn "add" for 0x400a2a>, <DisassemblerInsn "mov" for 0x400a2e>, <DisassemblerInsn "shl" for 0x400a31>, <DisassemblerInsn "sar" for 0x400a34>, <DisassemblerInsn "movsxd" for 0x400a38>, <DisassemblerInsn "mov" for 0x400a3b>, <DisassemblerInsn "ror" for 0x400a3f>, <DisassemblerInsn "ror" for 0x400a43>, <DisassemblerInsn "ror" for 0x400a46>, <DisassemblerInsn "shl" for 0x400a4a>, <DisassemblerInsn "mov" for 0x400a4c>, <DisassemblerInsn "shr" for 0x400a54>, <DisassemblerInsn "add" for 0x400a57>, <DisassemblerInsn "mov" for 0x400a5a>, <DisassemblerInsn "mov" for 0x400a61>, <DisassemblerInsn "or" for 0x400a63>, <DisassemblerInsn "mov" for 0x400a65>, <DisassemblerInsn "shl" for 0x400a6c>, <DisassemblerInsn "mov" for 0x400a6f>, <DisassemblerInsn "add" for 0x400a76>, <DisassemblerInsn "mov" for 0x400a78>, <DisassemblerInsn "mov" for 0x400a7a>, <DisassemblerInsn "cmp" for 0x400a81>, <DisassemblerInsn "jle" for 0x400a83>]'}, {'block_Idx': 168, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022ec>, <DisassemblerInsn "cmp" for 0x4022f3>, <DisassemblerInsn "je" for 0x4022f6>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401bfe>, <DisassemblerInsn "mov" for 0x401c06>, <DisassemblerInsn "mov" for 0x401c0e>, <DisassemblerInsn "mov" for 0x401c16>, <DisassemblerInsn "mov" for 0x401c1e>, <DisassemblerInsn "mov" for 0x401c26>, <DisassemblerInsn "mov" for 0x401c28>, <DisassemblerInsn "mov" for 0x401c2f>, <DisassemblerInsn "mov" for 0x401c31>, <DisassemblerInsn "mov" for 0x401c38>, <DisassemblerInsn "sar" for 0x401c3a>, <DisassemblerInsn "movsxd" for 0x401c3d>, <DisassemblerInsn "mov" for 0x401c40>, <DisassemblerInsn "ror" for 0x401c43>, <DisassemblerInsn "ror" for 0x401c47>, <DisassemblerInsn "ror" for 0x401c4a>, <DisassemblerInsn "and" for 0x401c4e>, <DisassemblerInsn "mov" for 0x401c51>, <DisassemblerInsn "shl" for 0x401c58>, <DisassemblerInsn "mov" for 0x401c5a>, <DisassemblerInsn "cmp" for 0x401c61>, <DisassemblerInsn "jge" for 0x401c64>]'}, {'block_Idx': 64, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401015>, <DisassemblerInsn "mov" for 0x40101c>, <DisassemblerInsn "mov" for 0x401023>, <DisassemblerInsn "mov" for 0x401028>, <DisassemblerInsn "shr" for 0x40102a>, <DisassemblerInsn "mov" for 0x40102c>, <DisassemblerInsn "and" for 0x40102e>, <DisassemblerInsn "mov" for 0x401030>, <DisassemblerInsn "mov" for 0x401032>, <DisassemblerInsn "mov" for 0x40103a>, <DisassemblerInsn "mov" for 0x401041>, <DisassemblerInsn "mov" for 0x401049>, <DisassemblerInsn "mov" for 0x401050>, <DisassemblerInsn "mov" for 0x401057>, <DisassemblerInsn "cmp" for 0x40105f>, <DisassemblerInsn "mov" for 0x401062>, <DisassemblerInsn "jle" for 0x40106a>]'}, {'block_Idx': 27, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d95>, <DisassemblerInsn "add" for 0x400d9c>, <DisassemblerInsn "cmp" for 0x400d9f>, <DisassemblerInsn "jae" for 0x400da2>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bbb>, <DisassemblerInsn "and" for 0x400bc2>, <DisassemblerInsn "cmp" for 0x400bc7>, <DisassemblerInsn "je" for 0x400bcc>]'}, {'block_Idx': 77, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401238>, <DisassemblerInsn "mov" for 0x401240>, <DisassemblerInsn "mov" for 0x401247>, <DisassemblerInsn "mov" for 0x40124e>, <DisassemblerInsn "mov" for 0x401250>, <DisassemblerInsn "cmp" for 0x401257>, <DisassemblerInsn "jle" for 0x401259>]'}, {'block_Idx': 158, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40187c>, <DisassemblerInsn "mov" for 0x401883>, <DisassemblerInsn "mov" for 0x40188a>, <DisassemblerInsn "mov" for 0x401891>, <DisassemblerInsn "xor" for 0x401894>, <DisassemblerInsn "sub" for 0x401896>, <DisassemblerInsn "shr" for 0x401899>, <DisassemblerInsn "mov" for 0x40189b>, <DisassemblerInsn "add" for 0x4018a3>, <DisassemblerInsn "mov" for 0x4018a5>, <DisassemblerInsn "mov" for 0x4018a7>, <DisassemblerInsn "jmp" for 0x4018ae>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ce5>, <DisassemblerInsn "mov" for 0x402cec>, <DisassemblerInsn "mov" for 0x402cf4>, <DisassemblerInsn "add" for 0x402cf6>, <DisassemblerInsn "mov" for 0x402cf9>, <DisassemblerInsn "cdq" for 0x402cfe>, <DisassemblerInsn "idiv" for 0x402cff>, <DisassemblerInsn "mov" for 0x402d01>, <DisassemblerInsn "cmp" for 0x402d05>, <DisassemblerInsn "jle" for 0x402d07>]'}, {'block_Idx': 49, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007e5>, <DisassemblerInsn "mov" for 0x4007ed>, <DisassemblerInsn "mov" for 0x4007f5>, <DisassemblerInsn "mov" for 0x4007fd>, <DisassemblerInsn "mov" for 0x400805>, <DisassemblerInsn "mov" for 0x40080c>, <DisassemblerInsn "mov" for 0x400813>, <DisassemblerInsn "add" for 0x400815>, <DisassemblerInsn "mov" for 0x400818>, <DisassemblerInsn "add" for 0x40081a>, <DisassemblerInsn "mov" for 0x40081c>, <DisassemblerInsn "cmp" for 0x40081e>, <DisassemblerInsn "setl" for 0x400820>, <DisassemblerInsn "cmp" for 0x400824>, <DisassemblerInsn "setne" for 0x400827>, <DisassemblerInsn "and" for 0x40082b>, <DisassemblerInsn "test" for 0x40082e>, <DisassemblerInsn "mov" for 0x400832>, <DisassemblerInsn "mov" for 0x400834>, <DisassemblerInsn "mov" for 0x40083b>, <DisassemblerInsn "mov" for 0x400842>, <DisassemblerInsn "mov" for 0x40084a>, <DisassemblerInsn "jne" for 0x400851>]'}, {'block_Idx': 59, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f6e>, <DisassemblerInsn "mov" for 0x400f76>, <DisassemblerInsn "mov" for 0x400f7e>, <DisassemblerInsn "ror" for 0x400f81>, <DisassemblerInsn "ror" for 0x400f85>, <DisassemblerInsn "ror" for 0x400f88>, <DisassemblerInsn "shr" for 0x400f8c>, <DisassemblerInsn "mov" for 0x400f8f>, <DisassemblerInsn "mov" for 0x400f96>, <DisassemblerInsn "mov" for 0x400f9c>, <DisassemblerInsn "xor" for 0x400f9e>, <DisassemblerInsn "shr" for 0x400fa4>, <DisassemblerInsn "cmp" for 0x400fa7>, <DisassemblerInsn "cmovb" for 0x400fad>, <DisassemblerInsn "mov" for 0x400fb0>, <DisassemblerInsn "xor" for 0x400fb5>, <DisassemblerInsn "cmp" for 0x400fb7>, <DisassemblerInsn "cmovb" for 0x400fbd>, <DisassemblerInsn "mov" for 0x400fc0>, <DisassemblerInsn "and" for 0x400fc2>, <DisassemblerInsn "mov" for 0x400fc8>, <DisassemblerInsn "shr" for 0x400fca>, <DisassemblerInsn "mov" for 0x400fcd>, <DisassemblerInsn "or" for 0x400fcf>, <DisassemblerInsn "cmp" for 0x400fd2>, <DisassemblerInsn "cmove" for 0x400fd5>, <DisassemblerInsn "cmp" for 0x400fd8>, <DisassemblerInsn "cmove" for 0x400fdb>, <DisassemblerInsn "mov" for 0x400fde>, <DisassemblerInsn "mov" for 0x400fe0>, <DisassemblerInsn "mov" for 0x400fe2>, <DisassemblerInsn "movzx" for 0x400fe9>, <DisassemblerInsn "add" for 0x400fed>, <DisassemblerInsn "mov" for 0x400fef>, <DisassemblerInsn "sub" for 0x400ff4>, <DisassemblerInsn "mov" for 0x400ff6>, <DisassemblerInsn "mov" for 0x400ffd>, <DisassemblerInsn "cmp" for 0x401004>, <DisassemblerInsn "mov" for 0x401007>, <DisassemblerInsn "je" for 0x40100f>]'}, {'block_Idx': 52, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ea4>, <DisassemblerInsn "mov" for 0x400eac>, <DisassemblerInsn "mov" for 0x400eb4>, <DisassemblerInsn "mov" for 0x400ebc>, <DisassemblerInsn "mov" for 0x400ec4>, <DisassemblerInsn "mov" for 0x400ec6>, <DisassemblerInsn "cmp" for 0x400ecd>, <DisassemblerInsn "setg" for 0x400ed0>, <DisassemblerInsn "mov" for 0x400ed4>, <DisassemblerInsn "mov" for 0x400ed8>, <DisassemblerInsn "mov" for 0x400ede>, <DisassemblerInsn "cmp" for 0x400ee4>, <DisassemblerInsn "cmovg" for 0x400ee7>, <DisassemblerInsn "mov" for 0x400eeb>, <DisassemblerInsn "mov" for 0x400ef1>, <DisassemblerInsn "cmp" for 0x400ef7>, <DisassemblerInsn "cmovg" for 0x400efa>, <DisassemblerInsn "and" for 0x400efe>, <DisassemblerInsn "movzx" for 0x400f02>, <DisassemblerInsn "mov" for 0x400f06>, <DisassemblerInsn "sub" for 0x400f0a>, <DisassemblerInsn "mov" for 0x400f0d>, <DisassemblerInsn "mov" for 0x400f11>, <DisassemblerInsn "mov" for 0x400f14>, <DisassemblerInsn "add" for 0x400f17>, <DisassemblerInsn "mov" for 0x400f1b>, <DisassemblerInsn "mov" for 0x400f23>, <DisassemblerInsn "mov" for 0x400f27>, <DisassemblerInsn "mov" for 0x400f2d>, <DisassemblerInsn "add" for 0x400f30>, <DisassemblerInsn "mov" for 0x400f34>, <DisassemblerInsn "mov" for 0x400f3c>, <DisassemblerInsn "mov" for 0x400f3f>, <DisassemblerInsn "mov" for 0x400f42>, <DisassemblerInsn "and" for 0x400f48>, <DisassemblerInsn "cmp" for 0x400f4a>, <DisassemblerInsn "je" for 0x400f4c>]'}, {'block_Idx': 112, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015d4>, <DisassemblerInsn "mov" for 0x4015dc>, <DisassemblerInsn "add" for 0x4015e3>, <DisassemblerInsn "mov" for 0x4015e6>, <DisassemblerInsn "mov" for 0x4015e8>, <DisassemblerInsn "mov" for 0x4015f0>, <DisassemblerInsn "mov" for 0x4015f8>, <DisassemblerInsn "mov" for 0x4015fa>, <DisassemblerInsn "mov" for 0x401601>, <DisassemblerInsn "mov" for 0x401604>, <DisassemblerInsn "mov" for 0x40160c>, <DisassemblerInsn "sar" for 0x40160e>, <DisassemblerInsn "movsxd" for 0x401611>, <DisassemblerInsn "mov" for 0x401614>, <DisassemblerInsn "mov" for 0x401618>, <DisassemblerInsn "and" for 0x40161a>, <DisassemblerInsn "movzx" for 0x40161d>, <DisassemblerInsn "mov" for 0x401621>, <DisassemblerInsn "add" for 0x401628>, <DisassemblerInsn "mov" for 0x40162b>, <DisassemblerInsn "mov" for 0x401632>, <DisassemblerInsn "mov" for 0x401634>, <DisassemblerInsn "shr" for 0x401639>, <DisassemblerInsn "mov" for 0x40163b>, <DisassemblerInsn "and" for 0x401642>, <DisassemblerInsn "cmp" for 0x401644>, <DisassemblerInsn "je" for 0x401647>]'}, {'block_Idx': 187, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019eb>, <DisassemblerInsn "mov" for 0x4019f3>, <DisassemblerInsn "mov" for 0x4019fb>, <DisassemblerInsn "mov" for 0x401a03>, <DisassemblerInsn "mov" for 0x401a0b>, <DisassemblerInsn "mov" for 0x401a13>, <DisassemblerInsn "mov" for 0x401a15>, <DisassemblerInsn "mov" for 0x401a1c>, <DisassemblerInsn "mov" for 0x401a1e>, <DisassemblerInsn "mov" for 0x401a25>, <DisassemblerInsn "sar" for 0x401a27>, <DisassemblerInsn "movsxd" for 0x401a2a>, <DisassemblerInsn "mov" for 0x401a2d>, <DisassemblerInsn "ror" for 0x401a30>, <DisassemblerInsn "ror" for 0x401a34>, <DisassemblerInsn "ror" for 0x401a37>, <DisassemblerInsn "and" for 0x401a3b>, <DisassemblerInsn "mov" for 0x401a3e>, <DisassemblerInsn "shl" for 0x401a45>, <DisassemblerInsn "mov" for 0x401a47>, <DisassemblerInsn "cmp" for 0x401a4e>, <DisassemblerInsn "jge" for 0x401a51>]'}, {'block_Idx': 44, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e35>, <DisassemblerInsn "add" for 0x400e3d>, <DisassemblerInsn "mov" for 0x400e41>, <DisassemblerInsn "jmp" for 0x400e49>]'}, {'block_Idx': 120, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401669>, <DisassemblerInsn "mov" for 0x401671>, <DisassemblerInsn "mov" for 0x401678>, <DisassemblerInsn "mov" for 0x401680>, <DisassemblerInsn "mov" for 0x401687>, <DisassemblerInsn "sar" for 0x401689>, <DisassemblerInsn "movsxd" for 0x40168c>, <DisassemblerInsn "mov" for 0x40168f>, <DisassemblerInsn "ror" for 0x401692>, <DisassemblerInsn "ror" for 0x401696>, <DisassemblerInsn "ror" for 0x401699>, <DisassemblerInsn "and" for 0x40169d>, <DisassemblerInsn "shl" for 0x4016a0>, <DisassemblerInsn "mov" for 0x4016a2>, <DisassemblerInsn "shr" for 0x4016a4>, <DisassemblerInsn "mov" for 0x4016a7>, <DisassemblerInsn "mov" for 0x4016ae>, <DisassemblerInsn "add" for 0x4016b0>, <DisassemblerInsn "mov" for 0x4016b3>, <DisassemblerInsn "mov" for 0x4016b5>, <DisassemblerInsn "sar" for 0x4016b7>, <DisassemblerInsn "movsxd" for 0x4016ba>, <DisassemblerInsn "mov" for 0x4016bd>, <DisassemblerInsn "and" for 0x4016c0>, <DisassemblerInsn "movzx" for 0x4016c3>, <DisassemblerInsn "add" for 0x4016c6>, <DisassemblerInsn "mov" for 0x4016c9>, <DisassemblerInsn "mov" for 0x4016cb>, <DisassemblerInsn "shr" for 0x4016d0>, <DisassemblerInsn "and" for 0x4016d2>, <DisassemblerInsn "xor" for 0x4016d4>, <DisassemblerInsn "mov" for 0x4016d6>, <DisassemblerInsn "cmp" for 0x4016db>, <DisassemblerInsn "mov" for 0x4016de>, <DisassemblerInsn "mov" for 0x4016e5>, <DisassemblerInsn "je" for 0x4016ec>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b19>, <DisassemblerInsn "mov" for 0x401b21>, <DisassemblerInsn "mov" for 0x401b29>, <DisassemblerInsn "mov" for 0x401b30>, <DisassemblerInsn "mov" for 0x401b37>, <DisassemblerInsn "sub" for 0x401b3c>, <DisassemblerInsn "mov" for 0x401b3e>, <DisassemblerInsn "shl" for 0x401b45>, <DisassemblerInsn "mov" for 0x401b47>, <DisassemblerInsn "sar" for 0x401b4e>, <DisassemblerInsn "mov" for 0x401b50>, <DisassemblerInsn "mov" for 0x401b58>, <DisassemblerInsn "mov" for 0x401b5b>, <DisassemblerInsn "add" for 0x401b5e>, <DisassemblerInsn "movsxd" for 0x401b62>, <DisassemblerInsn "cmp" for 0x401b65>, <DisassemblerInsn "mov" for 0x401b68>, <DisassemblerInsn "jl" for 0x401b70>]'}, {'block_Idx': 78, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401156>, <DisassemblerInsn "sub" for 0x40115d>, <DisassemblerInsn "je" for 0x401160>]'}, {'block_Idx': 20, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a85>, <DisassemblerInsn "mov" for 0x400a8d>, <DisassemblerInsn "mov" for 0x400a95>, <DisassemblerInsn "mov" for 0x400a9d>, <DisassemblerInsn "mov" for 0x400aa5>, <DisassemblerInsn "mov" for 0x400aad>, <DisassemblerInsn "mov" for 0x400ab5>, <DisassemblerInsn "add" for 0x400ab8>, <DisassemblerInsn "sar" for 0x400abb>, <DisassemblerInsn "xor" for 0x400abe>, <DisassemblerInsn "cmp" for 0x400ac1>, <DisassemblerInsn "cmovl" for 0x400ac5>, <DisassemblerInsn "xor" for 0x400ac9>, <DisassemblerInsn "cmp" for 0x400acc>, <DisassemblerInsn "mov" for 0x400ad0>, <DisassemblerInsn "cmovl" for 0x400ad3>, <DisassemblerInsn "xor" for 0x400ad7>, <DisassemblerInsn "cmp" for 0x400ada>, <DisassemblerInsn "cmovl" for 0x400ade>, <DisassemblerInsn "mov" for 0x400ae2>, <DisassemblerInsn "mov" for 0x400ae5>, <DisassemblerInsn "movsxd" for 0x400ae8>, <DisassemblerInsn "add" for 0x400aeb>, <DisassemblerInsn "mov" for 0x400aee>, <DisassemblerInsn "mov" for 0x400af2>, <DisassemblerInsn "jmp" for 0x400af8>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e4b>, <DisassemblerInsn "and" for 0x400e52>, <DisassemblerInsn "cmp" for 0x400e55>, <DisassemblerInsn "je" for 0x400e58>]'}, {'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40134f>, <DisassemblerInsn "mov" for 0x401357>, <DisassemblerInsn "mov" for 0x40135f>, <DisassemblerInsn "mov" for 0x401361>, <DisassemblerInsn "sar" for 0x401363>, <DisassemblerInsn "movsxd" for 0x401366>, <DisassemblerInsn "mov" for 0x401369>, <DisassemblerInsn "ror" for 0x40136c>, <DisassemblerInsn "ror" for 0x401370>, <DisassemblerInsn "ror" for 0x401373>, <DisassemblerInsn "mov" for 0x401377>, <DisassemblerInsn "and" for 0x401379>, <DisassemblerInsn "shl" for 0x40137c>, <DisassemblerInsn "mov" for 0x40137e>, <DisassemblerInsn "shr" for 0x401386>, <DisassemblerInsn "add" for 0x401389>, <DisassemblerInsn "mov" for 0x40138c>, <DisassemblerInsn "imul" for 0x40138e>, <DisassemblerInsn "mov" for 0x401394>, <DisassemblerInsn "jmp" for 0x40139b>]'}, {'block_Idx': 200, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401b76>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400df1>, <DisassemblerInsn "mov" for 0x400df9>, <DisassemblerInsn "mov" for 0x400e01>, <DisassemblerInsn "mov" for 0x400e08>, <DisassemblerInsn "mov" for 0x400e0f>, <DisassemblerInsn "ror" for 0x400e12>, <DisassemblerInsn "ror" for 0x400e16>, <DisassemblerInsn "ror" for 0x400e19>, <DisassemblerInsn "shl" for 0x400e1d>, <DisassemblerInsn "shr" for 0x400e20>, <DisassemblerInsn "mov" for 0x400e23>, <DisassemblerInsn "mov" for 0x400e2a>, <DisassemblerInsn "cmp" for 0x400e30>, <DisassemblerInsn "jne" for 0x400e33>]'}, {'block_Idx': 19, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400afd>, <DisassemblerInsn "cmp" for 0x400b04>, <DisassemblerInsn "je" for 0x400b07>]'}, {'block_Idx': 108, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013e8>, <DisassemblerInsn "mov" for 0x4013f0>, <DisassemblerInsn "mov" for 0x4013f8>, <DisassemblerInsn "mov" for 0x4013fa>, <DisassemblerInsn "sar" for 0x4013fc>, <DisassemblerInsn "movsxd" for 0x4013ff>, <DisassemblerInsn "mov" for 0x401402>, <DisassemblerInsn "ror" for 0x401405>, <DisassemblerInsn "ror" for 0x401409>, <DisassemblerInsn "ror" for 0x40140c>, <DisassemblerInsn "mov" for 0x401410>, <DisassemblerInsn "and" for 0x401412>, <DisassemblerInsn "shl" for 0x401415>, <DisassemblerInsn "mov" for 0x401417>, <DisassemblerInsn "shr" for 0x40141f>, <DisassemblerInsn "add" for 0x401422>, <DisassemblerInsn "mov" for 0x401425>, <DisassemblerInsn "imul" for 0x401427>, <DisassemblerInsn "mov" for 0x40142a>, <DisassemblerInsn "jmp" for 0x401431>]'}, {'block_Idx': 189, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c66>, <DisassemblerInsn "mov" for 0x401c6d>, <DisassemblerInsn "mov" for 0x401c74>, <DisassemblerInsn "mov" for 0x401c7b>, <DisassemblerInsn "xor" for 0x401c7e>, <DisassemblerInsn "sub" for 0x401c80>, <DisassemblerInsn "shr" for 0x401c83>, <DisassemblerInsn "mov" for 0x401c85>, <DisassemblerInsn "add" for 0x401c8d>, <DisassemblerInsn "mov" for 0x401c8f>, <DisassemblerInsn "mov" for 0x401c91>, <DisassemblerInsn "jmp" for 0x401c98>]'}, {'block_Idx': 146, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40182e>, <DisassemblerInsn "mov" for 0x401835>, <DisassemblerInsn "mov" for 0x40183d>, <DisassemblerInsn "mov" for 0x401845>, <DisassemblerInsn "mov" for 0x401847>, <DisassemblerInsn "mov" for 0x40184e>, <DisassemblerInsn "sar" for 0x401850>, <DisassemblerInsn "movsxd" for 0x401853>, <DisassemblerInsn "mov" for 0x401856>, <DisassemblerInsn "ror" for 0x401859>, <DisassemblerInsn "ror" for 0x40185d>, <DisassemblerInsn "ror" for 0x401860>, <DisassemblerInsn "and" for 0x401864>, <DisassemblerInsn "mov" for 0x401867>, <DisassemblerInsn "shl" for 0x40186e>, <DisassemblerInsn "mov" for 0x401870>, <DisassemblerInsn "cmp" for 0x401877>, <DisassemblerInsn "jge" for 0x40187a>]'}, {'block_Idx': 75, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401187>, <DisassemblerInsn "mov" for 0x40118f>, <DisassemblerInsn "mov" for 0x401197>, <DisassemblerInsn "mov" for 0x401199>, <DisassemblerInsn "sar" for 0x40119b>, <DisassemblerInsn "movsxd" for 0x40119e>, <DisassemblerInsn "mov" for 0x4011a1>, <DisassemblerInsn "ror" for 0x4011a4>, <DisassemblerInsn "ror" for 0x4011a8>, <DisassemblerInsn "ror" for 0x4011ab>, <DisassemblerInsn "mov" for 0x4011af>, <DisassemblerInsn "and" for 0x4011b1>, <DisassemblerInsn "shl" for 0x4011b4>, <DisassemblerInsn "mov" for 0x4011b6>, <DisassemblerInsn "shr" for 0x4011be>, <DisassemblerInsn "add" for 0x4011c1>, <DisassemblerInsn "mov" for 0x4011c4>, <DisassemblerInsn "add" for 0x4011c6>, <DisassemblerInsn "mov" for 0x4011c9>, <DisassemblerInsn "jmp" for 0x4011d0>]'}, {'block_Idx': 3, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40058c>, <DisassemblerInsn "mov" for 0x40058f>, <DisassemblerInsn "mov" for 0x400597>, <DisassemblerInsn "mov" for 0x40059e>, <DisassemblerInsn "mov" for 0x4005a6>, <DisassemblerInsn "mov" for 0x4005ad>, <DisassemblerInsn "mov" for 0x4005b5>, <DisassemblerInsn "mov" for 0x4005b7>, <DisassemblerInsn "xor" for 0x4005be>, <DisassemblerInsn "cmp" for 0x4005c0>, <DisassemblerInsn "mov" for 0x4005c3>, <DisassemblerInsn "mov" for 0x4005ca>, <DisassemblerInsn "mov" for 0x4005d1>, <DisassemblerInsn "je" for 0x4005d9>]'}], 'cfg_block_detailed_info': [{'block_Idx': 63, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4d0]>', '<cmp~~rax, 0>', '<jge~~0x40113b>']}, {'block_Idx': 68, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x4b0]>', '<mov~~rax, qword ptr [rsp + 0x508]>', '<mov~~rcx, qword ptr [rsp + 0x518]>', '<mov~~esi, dword ptr [rsp + 0x4ac]>', '<add~~esi, -1>', '<mov~~dword ptr [rsp + 0x4a8], esi>', '<mov~~esi, dword ptr [rax]>', '<mov~~edi, esi>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rcx + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<mov~~ecx, esi>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x4a8]>', '<shr~~edi, 0xf8>', '<add~~esi, 8>', '<mov~~dword ptr [rax], esi>', '<add~~edi, -0x80>', '<cmp~~edi, 0x40>', '<setb~~sil>', '<mov~~rax, rdx>', '<shl~~rax, 6>', '<movsxd~~r8, edi>', '<add~~rax, r8>', '<cmp~~edi, 0x40>', '<cmovb~~rdx, rax>', '<mov~~rax, -1>', '<test~~sil, 1>', '<mov~~qword ptr [rsp + 0x4b8], rdx>', '<mov~~dword ptr [rsp + 0x4c4], ecx>', '<mov~~qword ptr [rsp + 0x4d0], rax>', '<jne~~0x401041>']}, {'block_Idx': 188, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x378]>', '<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x448]>', '<mov~~esi, eax>', '<call~~0x403730>']}, {'block_Idx': 194, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x508]>', '<mov~~edi, dword ptr [rsp + 0x3a8]>', '<mov~~esi, dword ptr [rsp + 0x3ac]>', '<mov~~rax, qword ptr [rsp + 0x438]>', '<mov~~r9d, dword ptr [rsp + 0x3b4]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, esi>', '<add~~r8d, 0x10>', '<mov~~dword ptr [rdx], r8d>', '<mov~~ecx, edi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x394], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x3b0]>', '<mov~~dword ptr [rsp + 0x398], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x394]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x398]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x39c], eax>', '<mov~~rax, qword ptr [rsp + 0x3a0]>', '<mov~~rdx, qword ptr [rsp + 0x3f0]>', '<mov~~edi, dword ptr [rsp + 0x3a8]>', '<mov~~esi, dword ptr [rsp + 0x39c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x390], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x390]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x468]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3f8], rax>', '<jl~~0x4019eb>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x5c8]>', '<mov~~dword ptr [rax], 0x10>', '<mov~~rax, rcx>', '<add~~rax, 0x38>', '<mov~~qword ptr [rsp + 0x508], rax>', '<mov~~rax, rcx>', '<add~~rax, 0x28>', '<mov~~qword ptr [rsp + 0x510], rax>', '<mov~~rax, qword ptr [rcx + 0x28]>', '<mov~~qword ptr [rsp + 0x518], rax>', '<mov~~edx, dword ptr [rax + 2]>', '<mov~~esi, edx>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x524], esi>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x528], edx>', '<mov~~dword ptr [rcx + 0x38], 0x18>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x52c], eax>', '<mov~~dword ptr [rcx + 0x38], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x400d95>']}, {'block_Idx': 46, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x52c]>', '<add~~eax, -7>', '<mov~~dword ptr [rsp + 0x504], eax>', '<jmp~~0x400df1>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x350]>', '<mov~~rdx, qword ptr [rsp + 0x380]>', '<mov~~edi, dword ptr [rsp + 0x358]>', '<mov~~esi, dword ptr [rsp + 0x34c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x340], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x340]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x368]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x370], rax>', '<jne~~0x401bfe>']}, {'block_Idx': 167, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x468]>', '<mov~~esi, dword ptr [rsp + 0x408]>', '<mov~~edx, dword ptr [rsp + 0x3e0]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3d0], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3d0]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3d4], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x4022ec>']}, {'block_Idx': 88, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x508]>', '<mov~~ecx, dword ptr [rsp + 0x48c]>', '<mov~~dword ptr [rsp + 0x47c], ecx>', '<mov~~ecx, dword ptr [rax]>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500038>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, rax>', '<add~~rcx, 0x38>', '<mov~~qword ptr [rsp + 0x578], rcx>', '<mov~~ecx, dword ptr [rax + 0x38]>', '<add~~ecx, 0x20>', '<mov~~dword ptr [rax + 0x38], ecx>', '<mov~~rcx, rax>', '<add~~rcx, 0x28>', '<mov~~qword ptr [rsp + 0x580], rcx>', '<mov~~rcx, rax>', '<add~~rcx, 0x3c>', '<mov~~qword ptr [rsp + 0x588], rcx>', '<mov~~rcx, rax>', '<add~~rcx, 0x54>', '<mov~~qword ptr [rsp + 0x590], rcx>', '<mov~~rcx, rax>', '<add~~rcx, 0x20>', '<mov~~qword ptr [rsp + 0x598], rcx>', '<mov~~qword ptr [rsp + 0x5a0], rax>', '<mov~~rdi, qword ptr [rsp + 0x578]>', '<mov~~rax, qword ptr [rsp + 0x580]>', '<mov~~edx, dword ptr [rdi]>', '<mov~~rax, qword ptr [rax]>', '<mov~~qword ptr [rsp + 0x550], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x564], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x55c], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~dword ptr [rdi], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x560], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<mov~~dword ptr [rdi], esi>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<mov~~dword ptr [rdi], r8d>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x588]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x568], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x56c], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x570], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x574], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400afd>']}, {'block_Idx': 90, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x528]>', '<sub~~eax, 0xc>', '<je~~0x40134f>']}, {'block_Idx': 72, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b8]>', '<mov~~ecx, dword ptr [rsp + 0x4c4]>', '<mov~~dword ptr [rsp + 0x4ac], ecx>', '<mov~~qword ptr [rsp + 0x4b0], rax>', '<cmp~~ecx, 1>', '<mov~~qword ptr [rsp + 0x4d0], rax>', '<jle~~0x40110d>']}, {'block_Idx': 95, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x528]>', '<sub~~eax, 0xd>', '<je~~0x4013a0>']}, {'block_Idx': 43, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x578]>', '<mov~~edx, dword ptr [rsp + 0x570]>', '<mov~~ecx, dword ptr [rax]>', '<add~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x55c]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x40098f>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~esi, dword ptr [rsp + 0x608]>', '<mov~~eax, dword ptr [rsp + 0x60c]>', '<mov~~rdx, qword ptr [rsp + 0x610]>', '<mov~~dword ptr [rsp + 0x5b0], eax>', '<mov~~dword ptr [rsp + 0x5b4], esi>', '<mov~~edi, eax>', '<shl~~edi, 3>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x5b8], rdx>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~edi, esi>', '<xor~~r8d, r8d>', '<cmp~~eax, 0>', '<mov~~esi, eax>', '<cmovl~~esi, r8d>', '<mov~~r8, rcx>', '<add~~r8, 0x28>', '<mov~~qword ptr [rsp + 0x5c0], r8>', '<mov~~qword ptr [rcx + 0x28], rdx>', '<mov~~dword ptr [rcx + 0x3c], edi>', '<mov~~esi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x5c8], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<cmp~~eax, 0x18>', '<jl~~0x402ce5>']}, {'block_Idx': 131, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x458]>', '<mov~~ecx, dword ptr [rsp + 0x430]>', '<mov~~dword ptr [rsp + 0x404], ecx>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x408], eax>', '<cmp~~eax, 0x20>', '<jle~~0x4017cc>']}, {'block_Idx': 159, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x508]>', '<mov~~edi, dword ptr [rsp + 0x408]>', '<mov~~esi, dword ptr [rsp + 0x3e4]>', '<mov~~rax, qword ptr [rsp + 0x438]>', '<mov~~r9d, dword ptr [rsp + 0x3ec]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, esi>', '<add~~r8d, 0x10>', '<mov~~dword ptr [rdx], r8d>', '<mov~~ecx, edi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x3d8], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x3e8]>', '<mov~~dword ptr [rsp + 0x3dc], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3d8]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3dc]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x3e0], eax>', '<mov~~rax, qword ptr [rsp + 0x468]>', '<mov~~esi, dword ptr [rsp + 0x408]>', '<mov~~edx, dword ptr [rsp + 0x3e0]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3d0], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3d0]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3d4], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x4022ec>']}, {'block_Idx': 81, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<shr~~eax, 0xf0>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x4a4], eax>', '<jmp~~0x401238>']}, {'block_Idx': 132, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x42c]>', '<mov~~rsi, qword ptr [rsp + 0x508]>', '<mov~~rcx, qword ptr [rsp + 0x438]>', '<mov~~dword ptr [rsp + 0x40c], eax>', '<mov~~edi, dword ptr [rsi]>', '<mov~~edx, edi>', '<sar~~edx, 3>', '<mov~~dword ptr [rsp + 0x410], edx>', '<movsxd~~rdx, edx>', '<mov~~dl, byte ptr [rcx + rdx]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x414], ecx>', '<movzx~~edx, dl>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x418], edi>', '<mov~~dword ptr [rsi], edi>', '<mov~~esi, 0x80>', '<shr~~esi, cl>', '<mov~~dword ptr [rsp + 0x41c], esi>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~dword ptr [rsp + 0x420], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x424], eax>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x42c], eax>', '<je~~0x4016f2>']}, {'block_Idx': 24, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x564]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x55c]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x40098f>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~ecx, dword ptr [rsp + 0x62c]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~esi, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x604], esi>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x608], edx>', '<mov~~dword ptr [rsp + 0x60c], ecx>', '<mov~~qword ptr [rsp + 0x610], rax>', '<je~~0x400857>']}, {'block_Idx': 103, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x528]>', '<sub~~eax, 0xe>', '<je~~0x4013e8>']}, {'block_Idx': 169, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, qword ptr [rsp + 0x448]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x3c0], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x3c8], rax>', '<mov~~rax, qword ptr [rsp + 0x3c8]>', '<mov~~rcx, qword ptr [rsp + 0x468]>', '<mov~~rdx, qword ptr [rsp + 0x3c0]>', '<mov~~esi, dword ptr [rsp + 0x3d4]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3b8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3c8], rax>', '<jl~~0x4019a8>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x5b8]>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x5ac], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x400bbb>']}, {'block_Idx': 26, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x52c]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x504], eax>', '<je~~0x400df1>']}, {'block_Idx': 193, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x3a8]>', '<mov~~edx, dword ptr [rsp + 0x3ac]>', '<mov~~eax, dword ptr [rsp + 0x3b4]>', '<mov~~dil, sil>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x39c], eax>', '<jmp~~0x401b19>']}, {'block_Idx': 122, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x508]>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x434], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x438], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x444], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x440], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x444]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401669>']}, {'block_Idx': 74, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x524]>', '<sub~~eax, 6>', '<je~~0x401187>']}, {'block_Idx': 98, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<shr~~eax, 0xf0>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x48c], eax>', '<jmp~~0x40145a>']}, {'block_Idx': 183, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x378]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x368], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x370], rax>', '<mov~~rdx, qword ptr [rsp + 0x438]>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x458]>', '<mov~~rsi, qword ptr [rsp + 0x370]>', '<mov~~qword ptr [rsp + 0x350], rsi>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x358], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x35c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x360], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x364], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401c9d>']}, {'block_Idx': 190, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x508]>', '<mov~~edi, dword ptr [rsp + 0x358]>', '<mov~~esi, dword ptr [rsp + 0x35c]>', '<mov~~rax, qword ptr [rsp + 0x438]>', '<mov~~r9d, dword ptr [rsp + 0x364]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, esi>', '<add~~r8d, 0x10>', '<mov~~dword ptr [rdx], r8d>', '<mov~~ecx, edi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x344], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x360]>', '<mov~~dword ptr [rsp + 0x348], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x344]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x348]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x34c], eax>', '<mov~~rax, qword ptr [rsp + 0x350]>', '<mov~~rdx, qword ptr [rsp + 0x380]>', '<mov~~edi, dword ptr [rsp + 0x358]>', '<mov~~esi, dword ptr [rsp + 0x34c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x340], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x340]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x368]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x370], rax>', '<jne~~0x401bfe>']}, {'block_Idx': 31, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x578]>', '<mov~~rax, qword ptr [rsp + 0x580]>', '<mov~~edx, dword ptr [rdi]>', '<mov~~rax, qword ptr [rax]>', '<mov~~qword ptr [rsp + 0x550], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x564], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x55c], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~dword ptr [rdi], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x560], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<mov~~dword ptr [rdi], esi>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<mov~~dword ptr [rdi], r8d>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x588]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x568], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x56c], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x570], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x574], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400afd>']}, {'block_Idx': 168, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x404]>', '<cmp~~eax, 0>', '<je~~0x402376>']}, {'block_Idx': 197, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x438]>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x458]>', '<mov~~rsi, qword ptr [rsp + 0x370]>', '<mov~~qword ptr [rsp + 0x350], rsi>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x358], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x35c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x360], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x364], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401c9d>']}, {'block_Idx': 64, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x4cc]>', '<mov~~edx, dword ptr [rsp + 0x4c8]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~qword ptr [rsp + 0x4b8], rcx>', '<mov~~dword ptr [rsp + 0x4c4], eax>', '<mov~~rax, qword ptr [rsp + 0x4b8]>', '<mov~~ecx, dword ptr [rsp + 0x4c4]>', '<mov~~dword ptr [rsp + 0x4ac], ecx>', '<mov~~qword ptr [rsp + 0x4b0], rax>', '<cmp~~ecx, 1>', '<mov~~qword ptr [rsp + 0x4d0], rax>', '<jle~~0x40110d>']}, {'block_Idx': 27, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x52c]>', '<add~~eax, -8>', '<cmp~~eax, 3>', '<jae~~0x400dc5>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5ac]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400cd6>']}, {'block_Idx': 77, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~eax, dword ptr [rsp + 0x4a4]>', '<mov~~dword ptr [rsp + 0x49c], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x4a0], ecx>', '<cmp~~eax, ecx>', '<jle~~0x40128a>']}, {'block_Idx': 158, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x408]>', '<mov~~edx, dword ptr [rsp + 0x3e4]>', '<mov~~eax, dword ptr [rsp + 0x3ec]>', '<mov~~dil, sil>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x3e0], eax>', '<jmp~~0x401942>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5b0]>', '<mov~~rax, qword ptr [rsp + 0x5c8]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x10], eax>', '<cmp~~eax, ecx>', '<jle~~0x402d5c>']}, {'block_Idx': 49, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rdx, qword ptr [rsp + 0x5e0]>', '<mov~~rdi, qword ptr [rsp + 0x5f8]>', '<mov~~rsi, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rsp + 0x5e8]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x608], esi>', '<mov~~dword ptr [rsp + 0x60c], edx>', '<mov~~qword ptr [rsp + 0x610], rcx>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<jne~~0x402dc3>']}, {'block_Idx': 59, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x508]>', '<mov~~rcx, qword ptr [rsp + 0x518]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x4c8], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~eax, edi>', '<shr~~eax, 8>', '<mov~~ecx, edx>', '<or~~ecx, 8>', '<cmp~~esi, 0>', '<cmove~~eax, edi>', '<cmp~~esi, 0>', '<cmove~~ecx, edx>', '<mov~~eax, eax>', '<mov~~edx, eax>', '<mov~~rax, qword ptr [rip + 0xff047]>', '<movzx~~eax, byte ptr [rax + rdx]>', '<add~~ecx, eax>', '<mov~~eax, 7>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x4cc], eax>', '<mov~~rax, -1>', '<cmp~~ecx, 6>', '<mov~~qword ptr [rsp + 0x4d0], rax>', '<je~~0x40110d>']}, {'block_Idx': 52, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rsp + 0x4f0]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x4dc], esi>', '<cmp~~esi, 0x10>', '<setg~~dil>', '<mov~~r9, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r8d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r8d>', '<mov~~r8d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r8d, r11d>', '<and~~dil, 1>', '<movzx~~edi, dil>', '<mov~~dword ptr [r9 + 0x58], r10d>', '<sub~~r8d, esi>', '<mov~~dword ptr [rdx + 0x48], r8d>', '<mov~~dword ptr [rdx + 0x4c], edi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x4e0], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x4e8], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax + 3]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x400f6e>']}, {'block_Idx': 112, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x458]>', '<mov~~ecx, dword ptr [rsp + 0x450]>', '<add~~ecx, 1>', '<mov~~dword ptr [rax], ecx>', '<mov~~rax, qword ptr [rsp + 0x508]>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x434], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x438], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x444], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x440], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x444]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401669>']}, {'block_Idx': 187, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x438]>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x458]>', '<mov~~rsi, qword ptr [rsp + 0x3f8]>', '<mov~~qword ptr [rsp + 0x3a0], rsi>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x3a8], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x3ac], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x3b0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x3b4], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401a8a>']}, {'block_Idx': 44, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x4f0], rax>', '<jmp~~0x400ea4>']}, {'block_Idx': 120, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x508]>', '<mov~~esi, dword ptr [rsp + 0x434]>', '<mov~~rax, qword ptr [rsp + 0x438]>', '<mov~~ecx, dword ptr [rsp + 0x440]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x428], ecx>', '<mov~~ecx, esi>', '<add~~ecx, 7>', '<mov~~dword ptr [rdx], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~esi, 8>', '<mov~~dword ptr [rdx], esi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<and~~edx, eax>', '<xor~~eax, eax>', '<mov~~ecx, 1>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x42c], ecx>', '<mov~~dword ptr [rsp + 0x430], eax>', '<je~~0x40178a>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3a0]>', '<mov~~rdx, qword ptr [rsp + 0x3f0]>', '<mov~~edi, dword ptr [rsp + 0x3a8]>', '<mov~~esi, dword ptr [rsp + 0x39c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x390], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x390]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x468]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3f8], rax>', '<jl~~0x4019eb>']}, {'block_Idx': 78, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x524]>', '<sub~~eax, 7>', '<je~~0x4011d2>']}, {'block_Idx': 20, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x578]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rdi, qword ptr [rsp + 0x588]>', '<mov~~r9, qword ptr [rsp + 0x580]>', '<mov~~r11d, dword ptr [rsp + 0x574]>', '<mov~~rdx, qword ptr [rsp + 0x550]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x402ce5>']}, {'block_Idx': 45, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x500]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x400e7c>']}, {'block_Idx': 92, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<shr~~eax, 0xf8>', '<add~~edx, 8>', '<mov~~dword ptr [rcx], edx>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x48c], eax>', '<jmp~~0x40145a>']}, {'block_Idx': 200, 'blockInsts': ['<jmp~~0x4022ec>']}, {'block_Idx': 35, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rsp + 0x504]>', '<mov~~dword ptr [rsp + 0x4fc], edx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x500], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x400e4b>']}, {'block_Idx': 19, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x56c]>', '<cmp~~eax, 0>', '<je~~0x400b96>']}, {'block_Idx': 108, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<shr~~eax, 0xf0>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x48c], eax>', '<jmp~~0x40145a>']}, {'block_Idx': 189, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x358]>', '<mov~~edx, dword ptr [rsp + 0x35c]>', '<mov~~eax, dword ptr [rsp + 0x364]>', '<mov~~dil, sil>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x34c], eax>', '<jmp~~0x401d2c>']}, {'block_Idx': 146, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x408]>', '<mov~~rdx, qword ptr [rsp + 0x438]>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x3e4], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x3e8], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x3ec], edx>', '<cmp~~eax, 0x12>', '<jge~~0x4018b3>']}, {'block_Idx': 75, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<shr~~eax, 0xf8>', '<add~~edx, 8>', '<mov~~dword ptr [rcx], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x4a4], eax>', '<jmp~~0x401238>']}, {'block_Idx': 3, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~ecx, dword ptr [rsp + 0x62c]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~esi, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x604], esi>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x608], edx>', '<mov~~dword ptr [rsp + 0x60c], ecx>', '<mov~~qword ptr [rsp + 0x610], rax>', '<je~~0x400857>']}], 'cfg_edge_info': [(43, 31), (120, 132), (3, 4), (31, 20), (194, 200), (59, 64), (4, 6), (12, 19), (35, 45), (159, 169), (197, 189), (68, 63), (92, 88), (49, 4), (68, 72), (187, 194), (98, 88), (194, 187), (158, 167), (183, 190), (64, 68), (120, 131), (7, 13), (59, 63), (46, 35), (31, 19), (35, 44), (26, 35), (146, 159), (95, 98), (21, 27), (103, 108), (2, 4), (74, 75), (75, 77), (112, 120), (159, 168), (187, 193), (189, 196), (72, 68), (81, 77), (7, 12), (183, 189), (24, 31), (90, 92), (193, 199), (4, 7), (146, 158), (190, 188), (21, 26), (52, 59), (12, 20), (78, 81), (190, 197), (122, 120), (197, 190), (108, 88), (13, 21)]}]}
{'flac_decode_frame': [4196439, 4196587, 4196651, 4196751, 4197590, 4197873, 4198254, 4198512, 4198791, 4198866, 4199247, 4199328, 4199400, 4200041, 4200572, 4200627, 4201043, 4201098, 4201574, 4201629]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O1/flacdec.o---after
The extraction of function: flac_decode_frame
[4196439, 4196587, 4196651, 4196751, 4197590, 4197873, 4198254, 4198512, 4198791, 4198866, 4199247, 4199328, 4199400, 4200041, 4200572, 4200627, 4201043, 4201098, 4201574, 4201629]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 407 nodes and 656 edges in CFGEmulated.
It has 407 nodes and 677 edges in CDG.
It has 17233 nodes and 42866 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4196439, 4196587, 4196651, 4196751, 4197590, 4197873, 4198254, 4198512, 4198791, 4198866, 4199247, 4199328, 4199400, 4200041, 4200572, 4200627, 4201043, 4201098, 4201574, 4201629]
{4205572, 4203528, 4195851, 4205068, 4198421, 4197401, 4198941, 4203552, 4204064, 4200494, 4204590, 4195888, 4202030, 4199475, 4202548, 4197941, 4198968, 4205629, 4198465, 4203585, 4197446, 4200009, 4202570, 4197963, 4201043, 4199509, 4196439, 4195928, 4197978, 4199514, 4199003, 4205146, 4200036, 4201574, 4204136, 4200041, 4203114, 4198512, 4202103, 4198012, 4200572, 4199550, 4202620, 4205695, 4196997, 4199045, 4201098, 4199050, 4195980, 4197516, 4203153, 4204690, 4201629, 4203165, 4198047, 4198052, 4203694, 4200627, 4204213, 4205239, 4199608, 4205752, 4202168, 4203201, 4199620, 4204231, 4203722, 4203212, 4202702, 4199119, 4196051, 4197590, 4199131, 4204767, 4202208, 4205797, 4199654, 4204264, 4196587, 4199659, 4203244, 4195568, 4204785, 4200178, 4199154, 4203767, 4203256, 4202232, 4196092, 4197117, 4199166, 4205316, 4203269, 4205833, 4197133, 4198669, 4202254, 4204818, 4205334, 4201241, 4197145, 4198683, 4199198, 4196127, 4197158, 4199210, 4196651, 4199212, 4201772, 4203308, 4205874, 4198710, 4205367, 4199224, 4199226, 4198715, 4202811, 4200770, 4203842, 4198726, 4198728, 4199242, 4198222, 4199247, 4198740, 4195669, 4198742, 4199765, 4205916, 4204382, 4198754, 4197223, 4198759, 4198249, 4196202, 4198254, 4200302, 4202352, 4197747, 4199795, 4197237, 4203382, 4201334, 4201339, 4204413, 4197249, 4200833, 4198786, 4201859, 4202374, 4198791, 4204936, 4200330, 4195724, 4205964, 4201358, 4196751, 4197781, 4197270, 4196248, 4205464, 4195742, 4203422, 4199328, 4201889, 4203936, 4197796, 4204967, 4200872, 4201898, 4200366, 4197810, 4199861, 4197302, 4205495, 4201911, 4197307, 4199873, 4203458, 4206019, 4199875, 4197829, 4202950, 4200391, 4200396, 4198866, 4197330, 4199892, 4199890, 4201941, 4200407, 4200409, 4202457, 4201438, 4195807, 4204510, 4203998, 4201443, 4196325, 4200934, 4199400, 4199912, 4200939, 4197868, 4200427, 4197358, 4201967, 4202479, 4197873, 4200444, 4201470}
[220, 204, 42, 31, 47, 29, 103, 178, 155, 154, 98, 210, 152, 105, 229, 21, 28, 226, 48, 223, 214, 34, 348, 317, 211, 199, 58, 1, 218, 172, 190, 230, 139, 350, 224, 5, 359, 212, 168, 304, 231, 180, 101, 65, 227, 117, 206, 179, 14, 177, 235, 37, 8, 140, 39, 121, 146, 338, 68, 169, 59, 92, 173, 228, 287, 0, 189, 83, 185, 24, 36, 114, 113, 201, 341, 236, 38, 69, 288, 43, 328, 295, 67, 44, 255, 9, 124, 240, 134, 329, 138, 54, 20, 164, 56, 283, 153, 64, 143, 12, 100, 145, 35, 310, 245, 278, 187, 158, 361, 360, 32, 88, 148, 165, 61, 243, 251, 116, 26, 166, 10, 57, 4, 84, 156, 51, 80, 205, 318, 130, 193, 194, 219, 349, 301, 167, 213, 242, 94, 76, 379, 129, 135, 104, 221, 207, 311, 2, 15, 74, 60, 202, 238, 326, 18, 23, 122, 239, 342, 90, 395, 382, 96, 55, 6, 233, 234, 22, 340, 203, 112, 160, 196, 208, 11, 380, 46, 198, 246, 296, 141, 175, 25, 339, 118, 170, 216, 17, 97, 45, 217, 89, 150, 40, 250, 176, 159, 163, 108, 174, 237, 225, 16, 303, 247, 7, 82, 215, 241, 254, 192, 197, 33, 73, 281, 327, 27, 209, 110, 171, 362, 119, 125, 161, 222, 232, 13, 50, 162, 106, 351, 195, 183, 182, 249, 81, 294, 191]
The execution time of patched slicing information extraction via angr: 0:02:35.316265
{'flac_decode_frame': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 220, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401942>, <DisassemblerInsn "mov" for 0x40194a>, <DisassemblerInsn "mov" for 0x401951>, <DisassemblerInsn "mov" for 0x401958>, <DisassemblerInsn "sub" for 0x40195d>, <DisassemblerInsn "mov" for 0x40195f>, <DisassemblerInsn "shl" for 0x401966>, <DisassemblerInsn "mov" for 0x401968>, <DisassemblerInsn "sar" for 0x40196f>, <DisassemblerInsn "mov" for 0x401971>, <DisassemblerInsn "cmp" for 0x401978>, <DisassemblerInsn "jle" for 0x40197b>]'}, {'block_Idx': 204, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c3d>, <DisassemblerInsn "mov" for 0x402c42>, <DisassemblerInsn "mov" for 0x402c47>, <DisassemblerInsn "mov" for 0x402c4b>, <DisassemblerInsn "mov" for 0x402c4f>, <DisassemblerInsn "mov" for 0x402c54>, <DisassemblerInsn "mov" for 0x402c56>, <DisassemblerInsn "shl" for 0x402c5a>, <DisassemblerInsn "mov" for 0x402c5c>, <DisassemblerInsn "mov" for 0x402c60>, <DisassemblerInsn "shl" for 0x402c63>, <DisassemblerInsn "mov" for 0x402c65>, <DisassemblerInsn "mov" for 0x402c67>, <DisassemblerInsn "mov" for 0x402c6a>, <DisassemblerInsn "add" for 0x402c6d>, <DisassemblerInsn "mov" for 0x402c71>, <DisassemblerInsn "mov" for 0x402c75>, <DisassemblerInsn "mov" for 0x402c7a>, <DisassemblerInsn "mov" for 0x402c7f>, <DisassemblerInsn "mov" for 0x402c87>, <DisassemblerInsn "mov" for 0x402c8c>, <DisassemblerInsn "mov" for 0x402c91>, <DisassemblerInsn "add" for 0x402c96>, <DisassemblerInsn "movsxd" for 0x402c9a>, <DisassemblerInsn "cmp" for 0x402c9d>, <DisassemblerInsn "mov" for 0x402ca0>, <DisassemblerInsn "mov" for 0x402ca5>, <DisassemblerInsn "mov" for 0x402caa>, <DisassemblerInsn "jl" for 0x402cb2>]'}, {'block_Idx': 42, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007a6>, <DisassemblerInsn "mov" for 0x4007ad>, <DisassemblerInsn "mov" for 0x4007b5>, <DisassemblerInsn "mov" for 0x4007bd>, <DisassemblerInsn "mov" for 0x4007c5>, <DisassemblerInsn "mov" for 0x4007cd>, <DisassemblerInsn "mov" for 0x4007d4>, <DisassemblerInsn "add" for 0x4007d6>, <DisassemblerInsn "mov" for 0x4007d8>, <DisassemblerInsn "add" for 0x4007da>, <DisassemblerInsn "movsxd" for 0x4007dd>, <DisassemblerInsn "call" for 0x4007e0>]'}, {'block_Idx': 31, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4006fc>, <DisassemblerInsn "mov" for 0x400704>, <DisassemblerInsn "mov" for 0x40070b>, <DisassemblerInsn "mov" for 0x400713>, <DisassemblerInsn "call" for 0x40071a>]'}, {'block_Idx': 47, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e4b>, <DisassemblerInsn "and" for 0x400e52>, <DisassemblerInsn "cmp" for 0x400e55>, <DisassemblerInsn "je" for 0x400e58>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d95>, <DisassemblerInsn "add" for 0x400d9c>, <DisassemblerInsn "cmp" for 0x400d9f>, <DisassemblerInsn "jae" for 0x400da2>]'}, {'block_Idx': 103, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40128a>, <DisassemblerInsn "mov" for 0x401291>, <DisassemblerInsn "mov" for 0x401299>, <DisassemblerInsn "mov" for 0x4012a0>, <DisassemblerInsn "add" for 0x4012a3>, <DisassemblerInsn "mov" for 0x4012a7>, <DisassemblerInsn "imul" for 0x4012af>, <DisassemblerInsn "mov" for 0x4012b3>, <DisassemblerInsn "mov" for 0x4012b8>, <DisassemblerInsn "cmp" for 0x4012bd>, <DisassemblerInsn "cmove" for 0x4012c1>, <DisassemblerInsn "imul" for 0x4012c4>, <DisassemblerInsn "cmp" for 0x4012c7>, <DisassemblerInsn "jg" for 0x4012c9>]'}, {'block_Idx': 178, 'blockInsts': '[<DisassemblerInsn "lea" for 0x402988>, <DisassemblerInsn "lea" for 0x40298f>, <DisassemblerInsn "mov" for 0x402996>, <DisassemblerInsn "lea" for 0x40299b>, <DisassemblerInsn "call" for 0x4029a2>]'}, {'block_Idx': 155, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015c3>, <DisassemblerInsn "or" for 0x4015ca>, <DisassemblerInsn "sub" for 0x4015cd>, <DisassemblerInsn "je" for 0x4015d0>]'}, {'block_Idx': 154, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015b5>, <DisassemblerInsn "cmp" for 0x4015bc>, <DisassemblerInsn "je" for 0x4015bf>]'}, {'block_Idx': 98, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401154>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40187c>, <DisassemblerInsn "mov" for 0x401883>, <DisassemblerInsn "mov" for 0x40188a>, <DisassemblerInsn "mov" for 0x401891>, <DisassemblerInsn "xor" for 0x401894>, <DisassemblerInsn "sub" for 0x401896>, <DisassemblerInsn "shr" for 0x401899>, <DisassemblerInsn "mov" for 0x40189b>, <DisassemblerInsn "add" for 0x4018a3>, <DisassemblerInsn "mov" for 0x4018a5>, <DisassemblerInsn "mov" for 0x4018a7>, <DisassemblerInsn "jmp" for 0x4018ae>]'}, {'block_Idx': 152, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023dc>, <DisassemblerInsn "mov" for 0x4023e4>, <DisassemblerInsn "mov" for 0x4023ec>, <DisassemblerInsn "add" for 0x4023ee>, <DisassemblerInsn "mov" for 0x4023f1>, <DisassemblerInsn "mov" for 0x4023f3>, <DisassemblerInsn "mov" for 0x4023f6>, <DisassemblerInsn "sub" for 0x4023fe>, <DisassemblerInsn "ja" for 0x402402>]'}, {'block_Idx': 105, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011d2>, <DisassemblerInsn "mov" for 0x4011da>, <DisassemblerInsn "mov" for 0x4011e2>, <DisassemblerInsn "mov" for 0x4011e4>, <DisassemblerInsn "sar" for 0x4011e6>, <DisassemblerInsn "movsxd" for 0x4011e9>, <DisassemblerInsn "mov" for 0x4011ec>, <DisassemblerInsn "ror" for 0x4011ef>, <DisassemblerInsn "ror" for 0x4011f3>, <DisassemblerInsn "ror" for 0x4011f6>, <DisassemblerInsn "mov" for 0x4011fa>, <DisassemblerInsn "and" for 0x4011fc>, <DisassemblerInsn "shl" for 0x4011ff>, <DisassemblerInsn "mov" for 0x401201>, <DisassemblerInsn "shr" for 0x401209>, <DisassemblerInsn "add" for 0x40120c>, <DisassemblerInsn "mov" for 0x40120f>, <DisassemblerInsn "add" for 0x401211>, <DisassemblerInsn "mov" for 0x401214>, <DisassemblerInsn "jmp" for 0x40121b>]'}, {'block_Idx': 229, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017eb>, <DisassemblerInsn "cmp" for 0x4017f3>, <DisassemblerInsn "jle" for 0x4017f6>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a85>, <DisassemblerInsn "mov" for 0x400a8d>, <DisassemblerInsn "mov" for 0x400a95>, <DisassemblerInsn "mov" for 0x400a9d>, <DisassemblerInsn "mov" for 0x400aa5>, <DisassemblerInsn "mov" for 0x400aad>, <DisassemblerInsn "mov" for 0x400ab5>, <DisassemblerInsn "add" for 0x400ab8>, <DisassemblerInsn "sar" for 0x400abb>, <DisassemblerInsn "xor" for 0x400abe>, <DisassemblerInsn "cmp" for 0x400ac1>, <DisassemblerInsn "cmovl" for 0x400ac5>, <DisassemblerInsn "xor" for 0x400ac9>, <DisassemblerInsn "cmp" for 0x400acc>, <DisassemblerInsn "mov" for 0x400ad0>, <DisassemblerInsn "cmovl" for 0x400ad3>, <DisassemblerInsn "xor" for 0x400ad7>, <DisassemblerInsn "cmp" for 0x400ada>, <DisassemblerInsn "cmovl" for 0x400ade>, <DisassemblerInsn "mov" for 0x400ae2>, <DisassemblerInsn "mov" for 0x400ae5>, <DisassemblerInsn "movsxd" for 0x400ae8>, <DisassemblerInsn "add" for 0x400aeb>, <DisassemblerInsn "mov" for 0x400aee>, <DisassemblerInsn "mov" for 0x400af2>, <DisassemblerInsn "jmp" for 0x400af8>]'}, {'block_Idx': 28, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d73>, <DisassemblerInsn "mov" for 0x400d7a>, <DisassemblerInsn "mov" for 0x400d82>, <DisassemblerInsn "add" for 0x400d85>, <DisassemblerInsn "xor" for 0x400d88>, <DisassemblerInsn "cmp" for 0x400d8a>, <DisassemblerInsn "mov" for 0x400d8c>, <DisassemblerInsn "je" for 0x400d93>]'}, {'block_Idx': 226, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022f8>, <DisassemblerInsn "cmp" for 0x402300>, <DisassemblerInsn "jle" for 0x402303>]'}, {'block_Idx': 48, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400db2>, <DisassemblerInsn "add" for 0x400db9>, <DisassemblerInsn "mov" for 0x400dbc>, <DisassemblerInsn "jmp" for 0x400dc3>]'}, {'block_Idx': 223, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4017e9>]'}, {'block_Idx': 214, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402620>, <DisassemblerInsn "mov" for 0x402628>, <DisassemblerInsn "mov" for 0x402630>, <DisassemblerInsn "mov" for 0x402638>, <DisassemblerInsn "add" for 0x402640>, <DisassemblerInsn "movsxd" for 0x402644>, <DisassemblerInsn "cmp" for 0x402647>, <DisassemblerInsn "mov" for 0x40264a>, <DisassemblerInsn "mov" for 0x402652>, <DisassemblerInsn "mov" for 0x40265a>, <DisassemblerInsn "jl" for 0x402662>]'}, {'block_Idx': 34, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400bb6>]'}, {'block_Idx': 348, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40213b>, <DisassemblerInsn "mov" for 0x402143>, <DisassemblerInsn "mov" for 0x40214a>, <DisassemblerInsn "mov" for 0x402151>, <DisassemblerInsn "mov" for 0x402159>, <DisassemblerInsn "mov" for 0x402161>, <DisassemblerInsn "add" for 0x402169>, <DisassemblerInsn "mov" for 0x40216d>, <DisassemblerInsn "mov" for 0x402174>, <DisassemblerInsn "add" for 0x402176>, <DisassemblerInsn "mov" for 0x402178>, <DisassemblerInsn "mov" for 0x40217f>, <DisassemblerInsn "add" for 0x402181>, <DisassemblerInsn "mov" for 0x402184>, <DisassemblerInsn "mov" for 0x40218b>, <DisassemblerInsn "add" for 0x40218f>, <DisassemblerInsn "mov" for 0x402193>, <DisassemblerInsn "cmp" for 0x40219b>, <DisassemblerInsn "mov" for 0x40219e>, <DisassemblerInsn "mov" for 0x4021a6>, <DisassemblerInsn "mov" for 0x4021ad>, <DisassemblerInsn "mov" for 0x4021b4>, <DisassemblerInsn "je" for 0x4021bb>]'}, {'block_Idx': 317, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ee0>, <DisassemblerInsn "lea" for 0x401ee8>, <DisassemblerInsn "movsxd" for 0x401eef>, <DisassemblerInsn "add" for 0x401ef3>, <DisassemblerInsn "jmp" for 0x401ef6>]'}, {'block_Idx': 211, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018b3>, <DisassemblerInsn "mov" for 0x4018bb>, <DisassemblerInsn "mov" for 0x4018c2>, <DisassemblerInsn "mov" for 0x4018c9>, <DisassemblerInsn "mov" for 0x4018d1>, <DisassemblerInsn "shr" for 0x4018d9>, <DisassemblerInsn "mov" for 0x4018dd>, <DisassemblerInsn "add" for 0x4018e0>, <DisassemblerInsn "mov" for 0x4018e4>, <DisassemblerInsn "mov" for 0x4018e7>, <DisassemblerInsn "add" for 0x4018e9>, <DisassemblerInsn "mov" for 0x4018ec>, <DisassemblerInsn "shl" for 0x4018f3>, <DisassemblerInsn "mov" for 0x4018f6>, <DisassemblerInsn "mov" for 0x4018fd>, <DisassemblerInsn "sar" for 0x401905>, <DisassemblerInsn "movsxd" for 0x401909>, <DisassemblerInsn "mov" for 0x40190c>, <DisassemblerInsn "ror" for 0x401910>, <DisassemblerInsn "ror" for 0x401914>, <DisassemblerInsn "ror" for 0x401917>, <DisassemblerInsn "shl" for 0x40191b>, <DisassemblerInsn "mov" for 0x40191d>, <DisassemblerInsn "mov" for 0x401924>, <DisassemblerInsn "xor" for 0x401927>, <DisassemblerInsn "sub" for 0x401929>, <DisassemblerInsn "shr" for 0x40192c>, <DisassemblerInsn "mov" for 0x40192e>, <DisassemblerInsn "add" for 0x401935>, <DisassemblerInsn "mov" for 0x401937>, <DisassemblerInsn "or" for 0x401939>, <DisassemblerInsn "mov" for 0x40193b>, <DisassemblerInsn "mov" for 0x401942>, <DisassemblerInsn "mov" for 0x40194a>, <DisassemblerInsn "mov" for 0x401951>, <DisassemblerInsn "mov" for 0x401958>, <DisassemblerInsn "sub" for 0x40195d>, <DisassemblerInsn "mov" for 0x40195f>, <DisassemblerInsn "shl" for 0x401966>, <DisassemblerInsn "mov" for 0x401968>, <DisassemblerInsn "sar" for 0x40196f>, <DisassemblerInsn "mov" for 0x401971>, <DisassemblerInsn "cmp" for 0x401978>, <DisassemblerInsn "jle" for 0x40197b>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4017d7>]'}, {'block_Idx': 58, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400dec>]'}, {'block_Idx': 1, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400555>, <DisassemblerInsn "mov" for 0x40055d>, <DisassemblerInsn "mov" for 0x400565>, <DisassemblerInsn "mov" for 0x40056c>, <DisassemblerInsn "cmp" for 0x400571>, <DisassemblerInsn "cmovg" for 0x400574>, <DisassemblerInsn "mov" for 0x400577>, <DisassemblerInsn "mov" for 0x400579>, <DisassemblerInsn "add" for 0x400580>, <DisassemblerInsn "call" for 0x400587>]'}, {'block_Idx': 218, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402aff>]'}, {'block_Idx': 172, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402441>, <DisassemblerInsn "mov" for 0x402449>, <DisassemblerInsn "mov" for 0x402451>, <DisassemblerInsn "mov" for 0x402459>, <DisassemblerInsn "add" for 0x40245c>, <DisassemblerInsn "mov" for 0x402460>, <DisassemblerInsn "mov" for 0x402468>, <DisassemblerInsn "add" for 0x40246b>, <DisassemblerInsn "mov" for 0x40246f>, <DisassemblerInsn "mov" for 0x402477>, <DisassemblerInsn "add" for 0x40247a>, <DisassemblerInsn "mov" for 0x40247e>, <DisassemblerInsn "add" for 0x402486>, <DisassemblerInsn "mov" for 0x40248a>, <DisassemblerInsn "xor" for 0x402492>, <DisassemblerInsn "mov" for 0x402494>, <DisassemblerInsn "mov" for 0x40249c>, <DisassemblerInsn "mov" for 0x4024a4>, <DisassemblerInsn "jmp" for 0x4024ac>]'}, {'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017ae>, <DisassemblerInsn "mov" for 0x4017b6>, <DisassemblerInsn "lea" for 0x4017b9>, <DisassemblerInsn "xor" for 0x4017c0>, <DisassemblerInsn "call" for 0x4017c2>]'}, {'block_Idx': 230, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b8e>, <DisassemblerInsn "mov" for 0x401b96>, <DisassemblerInsn "mov" for 0x401b9e>, <DisassemblerInsn "mov" for 0x401ba6>, <DisassemblerInsn "and" for 0x401bad>, <DisassemblerInsn "mov" for 0x401bb0>, <DisassemblerInsn "mov" for 0x401bb7>, <DisassemblerInsn "mov" for 0x401bb9>, <DisassemblerInsn "mov" for 0x401bc0>, <DisassemblerInsn "mov" for 0x401bc5>, <DisassemblerInsn "cmp" for 0x401bcd>, <DisassemblerInsn "setg" for 0x401bd0>, <DisassemblerInsn "mov" for 0x401bd3>, <DisassemblerInsn "test" for 0x401bda>, <DisassemblerInsn "jne" for 0x401bdc>]'}, {'block_Idx': 139, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014c4>, <DisassemblerInsn "mov" for 0x4014cb>, <DisassemblerInsn "mov" for 0x4014d3>, <DisassemblerInsn "xor" for 0x4014d6>, <DisassemblerInsn "lea" for 0x4014d8>, <DisassemblerInsn "mov" for 0x4014df>, <DisassemblerInsn "call" for 0x4014e1>]'}, {'block_Idx': 350, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4021c6>, <DisassemblerInsn "mov" for 0x4021ce>, <DisassemblerInsn "mov" for 0x4021d5>, <DisassemblerInsn "mov" for 0x4021dc>, <DisassemblerInsn "mov" for 0x4021e3>, <DisassemblerInsn "mov" for 0x4021eb>, <DisassemblerInsn "mov" for 0x4021f3>, <DisassemblerInsn "add" for 0x4021fb>, <DisassemblerInsn "mov" for 0x4021ff>, <DisassemblerInsn "mov" for 0x402206>, <DisassemblerInsn "add" for 0x402208>, <DisassemblerInsn "mov" for 0x40220a>, <DisassemblerInsn "mov" for 0x402211>, <DisassemblerInsn "add" for 0x402213>, <DisassemblerInsn "mov" for 0x402215>, <DisassemblerInsn "mov" for 0x40221c>, <DisassemblerInsn "add" for 0x40221e>, <DisassemblerInsn "mov" for 0x402221>, <DisassemblerInsn "mov" for 0x402228>, <DisassemblerInsn "add" for 0x40222c>, <DisassemblerInsn "mov" for 0x402230>, <DisassemblerInsn "cmp" for 0x402238>, <DisassemblerInsn "mov" for 0x40223b>, <DisassemblerInsn "mov" for 0x402243>, <DisassemblerInsn "mov" for 0x40224a>, <DisassemblerInsn "mov" for 0x402251>, <DisassemblerInsn "mov" for 0x402258>, <DisassemblerInsn "je" for 0x40225f>]'}, {'block_Idx': 224, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b7b>, <DisassemblerInsn "add" for 0x401b82>, <DisassemblerInsn "cmp" for 0x401b85>, <DisassemblerInsn "jae" for 0x401b88>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4005df>, <DisassemblerInsn "mov" for 0x4005e7>, <DisassemblerInsn "add" for 0x4005ea>, <DisassemblerInsn "mov" for 0x4005f1>, <DisassemblerInsn "mov" for 0x4005f9>, <DisassemblerInsn "mov" for 0x4005ff>, <DisassemblerInsn "cmp" for 0x400606>, <DisassemblerInsn "jb" for 0x400609>]'}, {'block_Idx': 359, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4021c1>]'}, {'block_Idx': 212, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017d9>, <DisassemblerInsn "sub" for 0x4017e0>, <DisassemblerInsn "jne" for 0x4017e3>]'}, {'block_Idx': 168, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4028df>, <DisassemblerInsn "cmp" for 0x4028e7>, <DisassemblerInsn "jne" for 0x4028eb>]'}, {'block_Idx': 304, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e2e>, <DisassemblerInsn "mov" for 0x401e36>, <DisassemblerInsn "mov" for 0x401e3d>, <DisassemblerInsn "mov" for 0x401e44>, <DisassemblerInsn "add" for 0x401e46>, <DisassemblerInsn "mov" for 0x401e49>, <DisassemblerInsn "sub" for 0x401e4b>, <DisassemblerInsn "add" for 0x401e4e>, <DisassemblerInsn "mov" for 0x401e51>, <DisassemblerInsn "add" for 0x401e53>, <DisassemblerInsn "mov" for 0x401e56>, <DisassemblerInsn "mov" for 0x401e5d>, <DisassemblerInsn "mov" for 0x401e64>, <DisassemblerInsn "mov" for 0x401e6b>, <DisassemblerInsn "cmp" for 0x401e72>, <DisassemblerInsn "jle" for 0x401e75>]'}, {'block_Idx': 231, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402291>, <DisassemblerInsn "cmp" for 0x402298>, <DisassemblerInsn "jle" for 0x40229b>]'}, {'block_Idx': 180, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016f2>, <DisassemblerInsn "mov" for 0x4016f9>, <DisassemblerInsn "mov" for 0x401701>, <DisassemblerInsn "mov" for 0x401709>, <DisassemblerInsn "mov" for 0x401710>, <DisassemblerInsn "mov" for 0x401712>, <DisassemblerInsn "sar" for 0x401714>, <DisassemblerInsn "mov" for 0x401717>, <DisassemblerInsn "movsxd" for 0x40171e>, <DisassemblerInsn "mov" for 0x401721>, <DisassemblerInsn "mov" for 0x401724>, <DisassemblerInsn "and" for 0x401726>, <DisassemblerInsn "mov" for 0x401729>, <DisassemblerInsn "movzx" for 0x401730>, <DisassemblerInsn "add" for 0x401733>, <DisassemblerInsn "mov" for 0x401736>, <DisassemblerInsn "mov" for 0x40173d>, <DisassemblerInsn "mov" for 0x40173f>, <DisassemblerInsn "shr" for 0x401744>, <DisassemblerInsn "mov" for 0x401746>, <DisassemblerInsn "mov" for 0x40174d>, <DisassemblerInsn "and" for 0x40174f>, <DisassemblerInsn "mov" for 0x401751>, <DisassemblerInsn "add" for 0x401758>, <DisassemblerInsn "mov" for 0x40175b>, <DisassemblerInsn "cmp" for 0x401762>, <DisassemblerInsn "mov" for 0x401765>, <DisassemblerInsn "je" for 0x40176c>]'}, {'block_Idx': 101, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401156>, <DisassemblerInsn "sub" for 0x40115d>, <DisassemblerInsn "je" for 0x401160>]'}, {'block_Idx': 65, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f4e>, <DisassemblerInsn "mov" for 0x400f56>, <DisassemblerInsn "xor" for 0x400f59>, <DisassemblerInsn "lea" for 0x400f5b>, <DisassemblerInsn "mov" for 0x400f62>, <DisassemblerInsn "call" for 0x400f64>]'}, {'block_Idx': 227, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019a8>, <DisassemblerInsn "mov" for 0x4019b0>, <DisassemblerInsn "mov" for 0x4019b8>, <DisassemblerInsn "mov" for 0x4019c0>, <DisassemblerInsn "mov" for 0x4019c7>, <DisassemblerInsn "add" for 0x4019ca>, <DisassemblerInsn "mov" for 0x4019ce>, <DisassemblerInsn "movsxd" for 0x4019d6>, <DisassemblerInsn "cmp" for 0x4019d9>, <DisassemblerInsn "mov" for 0x4019dc>, <DisassemblerInsn "jl" for 0x4019e4>]'}, {'block_Idx': 117, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012fe>, <DisassemblerInsn "movsxd" for 0x401305>, <DisassemblerInsn "lea" for 0x401308>, <DisassemblerInsn "mov" for 0x40130f>, <DisassemblerInsn "mov" for 0x401312>, <DisassemblerInsn "jmp" for 0x401319>]'}, {'block_Idx': 206, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40282e>, <DisassemblerInsn "mov" for 0x402836>, <DisassemblerInsn "mov" for 0x40283e>, <DisassemblerInsn "mov" for 0x402845>, <DisassemblerInsn "mov" for 0x40284c>, <DisassemblerInsn "mov" for 0x402854>, <DisassemblerInsn "mov" for 0x402856>, <DisassemblerInsn "mov" for 0x40285d>, <DisassemblerInsn "shl" for 0x402860>, <DisassemblerInsn "mov" for 0x402863>, <DisassemblerInsn "mov" for 0x40286a>, <DisassemblerInsn "sub" for 0x40286e>, <DisassemblerInsn "shl" for 0x402870>, <DisassemblerInsn "mov" for 0x402872>, <DisassemblerInsn "mov" for 0x402874>, <DisassemblerInsn "mov" for 0x402877>, <DisassemblerInsn "add" for 0x40287a>, <DisassemblerInsn "mov" for 0x40287e>, <DisassemblerInsn "mov" for 0x402882>, <DisassemblerInsn "mov" for 0x40288a>, <DisassemblerInsn "mov" for 0x402892>, <DisassemblerInsn "mov" for 0x40289a>, <DisassemblerInsn "mov" for 0x4028a2>, <DisassemblerInsn "mov" for 0x4028aa>, <DisassemblerInsn "add" for 0x4028b2>, <DisassemblerInsn "movsxd" for 0x4028b6>, <DisassemblerInsn "cmp" for 0x4028b9>, <DisassemblerInsn "mov" for 0x4028bc>, <DisassemblerInsn "mov" for 0x4028c4>, <DisassemblerInsn "mov" for 0x4028cc>, <DisassemblerInsn "jl" for 0x4028d4>]'}, {'block_Idx': 179, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40178a>, <DisassemblerInsn "mov" for 0x401792>, <DisassemblerInsn "mov" for 0x401799>, <DisassemblerInsn "mov" for 0x4017a0>, <DisassemblerInsn "mov" for 0x4017a2>, <DisassemblerInsn "cmp" for 0x4017a9>, <DisassemblerInsn "jle" for 0x4017ac>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bbb>, <DisassemblerInsn "and" for 0x400bc2>, <DisassemblerInsn "cmp" for 0x400bc7>, <DisassemblerInsn "je" for 0x400bcc>]'}, {'block_Idx': 177, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4028f1>, <DisassemblerInsn "mov" for 0x4028f9>, <DisassemblerInsn "add" for 0x4028fc>, <DisassemblerInsn "mov" for 0x402900>, <DisassemblerInsn "cmp" for 0x402908>, <DisassemblerInsn "jle" for 0x40290c>]'}, {'block_Idx': 235, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401bde>]'}, {'block_Idx': 37, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400df1>, <DisassemblerInsn "mov" for 0x400df9>, <DisassemblerInsn "mov" for 0x400e01>, <DisassemblerInsn "mov" for 0x400e08>, <DisassemblerInsn "mov" for 0x400e0f>, <DisassemblerInsn "ror" for 0x400e12>, <DisassemblerInsn "ror" for 0x400e16>, <DisassemblerInsn "ror" for 0x400e19>, <DisassemblerInsn "shl" for 0x400e1d>, <DisassemblerInsn "shr" for 0x400e20>, <DisassemblerInsn "mov" for 0x400e23>, <DisassemblerInsn "mov" for 0x400e2a>, <DisassemblerInsn "cmp" for 0x400e30>, <DisassemblerInsn "jne" for 0x400e33>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008eb>, <DisassemblerInsn "mov" for 0x4008f3>, <DisassemblerInsn "ror" for 0x4008f5>, <DisassemblerInsn "ror" for 0x4008f9>, <DisassemblerInsn "ror" for 0x4008fc>, <DisassemblerInsn "shr" for 0x400900>, <DisassemblerInsn "mov" for 0x400903>, <DisassemblerInsn "shl" for 0x40090a>, <DisassemblerInsn "mov" for 0x40090d>, <DisassemblerInsn "ror" for 0x400910>, <DisassemblerInsn "ror" for 0x400914>, <DisassemblerInsn "ror" for 0x400917>, <DisassemblerInsn "shr" for 0x40091b>, <DisassemblerInsn "or" for 0x40091e>, <DisassemblerInsn "cmp" for 0x400920>, <DisassemblerInsn "jne" for 0x400925>]'}, {'block_Idx': 140, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013e8>, <DisassemblerInsn "mov" for 0x4013f0>, <DisassemblerInsn "mov" for 0x4013f8>, <DisassemblerInsn "mov" for 0x4013fa>, <DisassemblerInsn "sar" for 0x4013fc>, <DisassemblerInsn "movsxd" for 0x4013ff>, <DisassemblerInsn "mov" for 0x401402>, <DisassemblerInsn "ror" for 0x401405>, <DisassemblerInsn "ror" for 0x401409>, <DisassemblerInsn "ror" for 0x40140c>, <DisassemblerInsn "mov" for 0x401410>, <DisassemblerInsn "and" for 0x401412>, <DisassemblerInsn "shl" for 0x401415>, <DisassemblerInsn "mov" for 0x401417>, <DisassemblerInsn "shr" for 0x40141f>, <DisassemblerInsn "add" for 0x401422>, <DisassemblerInsn "mov" for 0x401425>, <DisassemblerInsn "imul" for 0x401427>, <DisassemblerInsn "mov" for 0x40142a>, <DisassemblerInsn "jmp" for 0x401431>]'}, {'block_Idx': 39, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400dc5>, <DisassemblerInsn "mov" for 0x400dcc>, <DisassemblerInsn "mov" for 0x400dd4>, <DisassemblerInsn "mov" for 0x400dd8>, <DisassemblerInsn "xor" for 0x400ddc>, <DisassemblerInsn "lea" for 0x400dde>, <DisassemblerInsn "mov" for 0x400de5>, <DisassemblerInsn "call" for 0x400de7>]'}, {'block_Idx': 121, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40134f>, <DisassemblerInsn "mov" for 0x401357>, <DisassemblerInsn "mov" for 0x40135f>, <DisassemblerInsn "mov" for 0x401361>, <DisassemblerInsn "sar" for 0x401363>, <DisassemblerInsn "movsxd" for 0x401366>, <DisassemblerInsn "mov" for 0x401369>, <DisassemblerInsn "ror" for 0x40136c>, <DisassemblerInsn "ror" for 0x401370>, <DisassemblerInsn "ror" for 0x401373>, <DisassemblerInsn "mov" for 0x401377>, <DisassemblerInsn "and" for 0x401379>, <DisassemblerInsn "shl" for 0x40137c>, <DisassemblerInsn "mov" for 0x40137e>, <DisassemblerInsn "shr" for 0x401386>, <DisassemblerInsn "add" for 0x401389>, <DisassemblerInsn "mov" for 0x40138c>, <DisassemblerInsn "imul" for 0x40138e>, <DisassemblerInsn "mov" for 0x401394>, <DisassemblerInsn "jmp" for 0x40139b>]'}, {'block_Idx': 146, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401555>, <DisassemblerInsn "add" for 0x40155d>, <DisassemblerInsn "mov" for 0x401561>, <DisassemblerInsn "xor" for 0x401569>, <DisassemblerInsn "mov" for 0x40156b>, <DisassemblerInsn "mov" for 0x401573>, <DisassemblerInsn "mov" for 0x40157b>, <DisassemblerInsn "mov" for 0x401583>, <DisassemblerInsn "mov" for 0x40158b>, <DisassemblerInsn "mov" for 0x401593>, <DisassemblerInsn "mov" for 0x40159b>, <DisassemblerInsn "mov" for 0x40159d>, <DisassemblerInsn "mov" for 0x4015a4>, <DisassemblerInsn "mov" for 0x4015a6>, <DisassemblerInsn "mov" for 0x4015a8>, <DisassemblerInsn "cmp" for 0x4015af>, <DisassemblerInsn "jne" for 0x4015b3>]'}, {'block_Idx': 338, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f86>, <DisassemblerInsn "mov" for 0x401f8d>, <DisassemblerInsn "mov" for 0x401f94>, <DisassemblerInsn "mov" for 0x401f9b>, <DisassemblerInsn "mov" for 0x401fa2>, <DisassemblerInsn "movsxd" for 0x401fa9>, <DisassemblerInsn "movsxd" for 0x401fac>, <DisassemblerInsn "mov" for 0x401faf>, <DisassemblerInsn "mov" for 0x401fb7>, <DisassemblerInsn "mov" for 0x401fbf>, <DisassemblerInsn "mov" for 0x401fc6>, <DisassemblerInsn "mov" for 0x401fcd>, <DisassemblerInsn "jmp" for 0x401fd4>]'}, {'block_Idx': 68, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c46>, <DisassemblerInsn "mov" for 0x400c4d>, <DisassemblerInsn "mov" for 0x400c55>, <DisassemblerInsn "mov" for 0x400c5c>, <DisassemblerInsn "sar" for 0x400c63>, <DisassemblerInsn "movsxd" for 0x400c66>, <DisassemblerInsn "mov" for 0x400c69>, <DisassemblerInsn "ror" for 0x400c6c>, <DisassemblerInsn "ror" for 0x400c70>, <DisassemblerInsn "ror" for 0x400c73>, <DisassemblerInsn "shl" for 0x400c77>, <DisassemblerInsn "shr" for 0x400c79>, <DisassemblerInsn "and" for 0x400c7c>, <DisassemblerInsn "cmp" for 0x400c81>, <DisassemblerInsn "je" for 0x400c86>]'}, {'block_Idx': 169, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401669>, <DisassemblerInsn "mov" for 0x401671>, <DisassemblerInsn "mov" for 0x401678>, <DisassemblerInsn "mov" for 0x401680>, <DisassemblerInsn "mov" for 0x401687>, <DisassemblerInsn "sar" for 0x401689>, <DisassemblerInsn "movsxd" for 0x40168c>, <DisassemblerInsn "mov" for 0x40168f>, <DisassemblerInsn "ror" for 0x401692>, <DisassemblerInsn "ror" for 0x401696>, <DisassemblerInsn "ror" for 0x401699>, <DisassemblerInsn "and" for 0x40169d>, <DisassemblerInsn "shl" for 0x4016a0>, <DisassemblerInsn "mov" for 0x4016a2>, <DisassemblerInsn "shr" for 0x4016a4>, <DisassemblerInsn "mov" for 0x4016a7>, <DisassemblerInsn "mov" for 0x4016ae>, <DisassemblerInsn "add" for 0x4016b0>, <DisassemblerInsn "mov" for 0x4016b3>, <DisassemblerInsn "mov" for 0x4016b5>, <DisassemblerInsn "sar" for 0x4016b7>, <DisassemblerInsn "movsxd" for 0x4016ba>, <DisassemblerInsn "mov" for 0x4016bd>, <DisassemblerInsn "and" for 0x4016c0>, <DisassemblerInsn "movzx" for 0x4016c3>, <DisassemblerInsn "add" for 0x4016c6>, <DisassemblerInsn "mov" for 0x4016c9>, <DisassemblerInsn "mov" for 0x4016cb>, <DisassemblerInsn "shr" for 0x4016d0>, <DisassemblerInsn "and" for 0x4016d2>, <DisassemblerInsn "xor" for 0x4016d4>, <DisassemblerInsn "mov" for 0x4016d6>, <DisassemblerInsn "cmp" for 0x4016db>, <DisassemblerInsn "mov" for 0x4016de>, <DisassemblerInsn "mov" for 0x4016e5>, <DisassemblerInsn "je" for 0x4016ec>]'}, {'block_Idx': 59, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c8c>, <DisassemblerInsn "mov" for 0x400c94>, <DisassemblerInsn "add" for 0x400c9b>, <DisassemblerInsn "mov" for 0x400c9e>, <DisassemblerInsn "mov" for 0x400ca5>, <DisassemblerInsn "mov" for 0x400ca7>, <DisassemblerInsn "cdq" for 0x400cac>, <DisassemblerInsn "idiv" for 0x400cad>, <DisassemblerInsn "mov" for 0x400caf>, <DisassemblerInsn "mov" for 0x400cb6>, <DisassemblerInsn "mov" for 0x400cb8>, <DisassemblerInsn "add" for 0x400cbf>, <DisassemblerInsn "cmp" for 0x400cc2>, <DisassemblerInsn "mov" for 0x400cc4>, <DisassemblerInsn "jl" for 0x400ccb>]'}, {'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401136>]'}, {'block_Idx': 173, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b16>, <DisassemblerInsn "mov" for 0x402b1e>, <DisassemblerInsn "add" for 0x402b21>, <DisassemblerInsn "mov" for 0x402b25>, <DisassemblerInsn "cmp" for 0x402b2d>, <DisassemblerInsn "jle" for 0x402b31>]'}, {'block_Idx': 228, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4019e6>]'}, {'block_Idx': 287, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401db5>]'}, {'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "sub" for 0x4004f0>, <DisassemblerInsn "mov" for 0x4004f7>, <DisassemblerInsn "mov" for 0x4004ff>, <DisassemblerInsn "mov" for 0x400507>, <DisassemblerInsn "mov" for 0x40050f>, <DisassemblerInsn "mov" for 0x400516>, <DisassemblerInsn "mov" for 0x40051e>, <DisassemblerInsn "mov" for 0x400521>, <DisassemblerInsn "mov" for 0x400529>, <DisassemblerInsn "mov" for 0x400531>, <DisassemblerInsn "mov" for 0x400533>, <DisassemblerInsn "mov" for 0x40053a>, <DisassemblerInsn "mov" for 0x400540>, <DisassemblerInsn "add" for 0x400543>, <DisassemblerInsn "mov" for 0x400547>, <DisassemblerInsn "cmp" for 0x40054f>, <DisassemblerInsn "jne" for 0x400553>]'}, {'block_Idx': 189, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017cc>, <DisassemblerInsn "test" for 0x4017d3>, <DisassemblerInsn "je" for 0x4017d5>]'}, {'block_Idx': 83, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400f69>]'}, {'block_Idx': 185, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4026e8>, <DisassemblerInsn "mov" for 0x4026f0>, <DisassemblerInsn "mov" for 0x4026f8>, <DisassemblerInsn "mov" for 0x402700>, <DisassemblerInsn "mov" for 0x402704>, <DisassemblerInsn "mov" for 0x40270c>, <DisassemblerInsn "mov" for 0x402710>, <DisassemblerInsn "mov" for 0x402718>, <DisassemblerInsn "add" for 0x40271b>, <DisassemblerInsn "mov" for 0x40271f>, <DisassemblerInsn "mov" for 0x402727>, <DisassemblerInsn "add" for 0x40272a>, <DisassemblerInsn "mov" for 0x40272e>, <DisassemblerInsn "add" for 0x402736>, <DisassemblerInsn "mov" for 0x40273a>, <DisassemblerInsn "xor" for 0x402742>, <DisassemblerInsn "mov" for 0x402744>, <DisassemblerInsn "mov" for 0x40274c>, <DisassemblerInsn "mov" for 0x402754>, <DisassemblerInsn "jmp" for 0x40275c>]'}, {'block_Idx': 24, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4006d3>, <DisassemblerInsn "mov" for 0x4006db>, <DisassemblerInsn "mov" for 0x4006e2>, <DisassemblerInsn "add" for 0x4006e5>, <DisassemblerInsn "mov" for 0x4006ec>, <DisassemblerInsn "cmp" for 0x4006f4>, <DisassemblerInsn "jae" for 0x4006fa>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b75>, <DisassemblerInsn "cmp" for 0x400b7c>, <DisassemblerInsn "jle" for 0x400b7f>]'}, {'block_Idx': 114, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401285>]'}, {'block_Idx': 113, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012f2>, <DisassemblerInsn "cmp" for 0x4012f9>, <DisassemblerInsn "jge" for 0x4012fc>]'}, {'block_Idx': 201, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4026b0>]'}, {'block_Idx': 341, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fef>, <DisassemblerInsn "mov" for 0x401ff6>, <DisassemblerInsn "mov" for 0x401ffd>, <DisassemblerInsn "mov" for 0x402004>, <DisassemblerInsn "movsxd" for 0x40200b>, <DisassemblerInsn "movsxd" for 0x40200e>, <DisassemblerInsn "mov" for 0x402011>, <DisassemblerInsn "mov" for 0x402019>, <DisassemblerInsn "mov" for 0x402021>, <DisassemblerInsn "mov" for 0x402028>, <DisassemblerInsn "jmp" for 0x40202f>]'}, {'block_Idx': 236, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401be3>, <DisassemblerInsn "mov" for 0x401bea>, <DisassemblerInsn "mov" for 0x401bec>, <DisassemblerInsn "xor" for 0x401bf4>, <DisassemblerInsn "mov" for 0x401bf6>, <DisassemblerInsn "mov" for 0x401bfe>, <DisassemblerInsn "mov" for 0x401c06>, <DisassemblerInsn "mov" for 0x401c0e>, <DisassemblerInsn "mov" for 0x401c16>, <DisassemblerInsn "mov" for 0x401c1e>, <DisassemblerInsn "mov" for 0x401c26>, <DisassemblerInsn "mov" for 0x401c28>, <DisassemblerInsn "mov" for 0x401c2f>, <DisassemblerInsn "mov" for 0x401c31>, <DisassemblerInsn "mov" for 0x401c38>, <DisassemblerInsn "sar" for 0x401c3a>, <DisassemblerInsn "movsxd" for 0x401c3d>, <DisassemblerInsn "mov" for 0x401c40>, <DisassemblerInsn "ror" for 0x401c43>, <DisassemblerInsn "ror" for 0x401c47>, <DisassemblerInsn "ror" for 0x401c4a>, <DisassemblerInsn "and" for 0x401c4e>, <DisassemblerInsn "mov" for 0x401c51>, <DisassemblerInsn "shl" for 0x401c58>, <DisassemblerInsn "mov" for 0x401c5a>, <DisassemblerInsn "cmp" for 0x401c61>, <DisassemblerInsn "jge" for 0x401c64>]'}, {'block_Idx': 38, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400da4>, <DisassemblerInsn "cmp" for 0x400dac>, <DisassemblerInsn "jne" for 0x400db0>]'}, {'block_Idx': 69, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400cd1>]'}, {'block_Idx': 288, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401db7>, <DisassemblerInsn "mov" for 0x401dbf>, <DisassemblerInsn "add" for 0x401dc6>, <DisassemblerInsn "mov" for 0x401dc9>, <DisassemblerInsn "mov" for 0x401dcb>, <DisassemblerInsn "mov" for 0x401dce>, <DisassemblerInsn "mov" for 0x401dd5>, <DisassemblerInsn "mov" for 0x401ddc>, <DisassemblerInsn "mov" for 0x401de3>, <DisassemblerInsn "cmp" for 0x401dea>, <DisassemblerInsn "jle" for 0x401ded>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40076a>, <DisassemblerInsn "mov" for 0x400771>, <DisassemblerInsn "mov" for 0x400778>, <DisassemblerInsn "mov" for 0x400780>, <DisassemblerInsn "mov" for 0x400787>, <DisassemblerInsn "mov" for 0x400789>, <DisassemblerInsn "add" for 0x40078c>, <DisassemblerInsn "mov" for 0x40078f>, <DisassemblerInsn "mov" for 0x400791>, <DisassemblerInsn "call" for 0x400793>]'}, {'block_Idx': 328, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ef8>, <DisassemblerInsn "mov" for 0x401eff>, <DisassemblerInsn "cmp" for 0x401f06>, <DisassemblerInsn "jle" for 0x401f08>]'}, {'block_Idx': 295, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e14>, <DisassemblerInsn "mov" for 0x401e1b>, <DisassemblerInsn "mov" for 0x401e22>, <DisassemblerInsn "cmp" for 0x401e29>, <DisassemblerInsn "jle" for 0x401e2c>]'}, {'block_Idx': 67, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024ae>, <DisassemblerInsn "mov" for 0x4024b6>, <DisassemblerInsn "xor" for 0x4024ba>, <DisassemblerInsn "lea" for 0x4024bc>, <DisassemblerInsn "mov" for 0x4024c3>, <DisassemblerInsn "call" for 0x4024c5>]'}, {'block_Idx': 44, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b26>, <DisassemblerInsn "mov" for 0x400b2e>, <DisassemblerInsn "mov" for 0x400b35>, <DisassemblerInsn "mov" for 0x400b3d>, <DisassemblerInsn "mov" for 0x400b40>, <DisassemblerInsn "cdq" for 0x400b45>, <DisassemblerInsn "idiv" for 0x400b46>, <DisassemblerInsn "mov" for 0x400b48>, <DisassemblerInsn "cdqe" for 0x400b50>, <DisassemblerInsn "add" for 0x400b52>, <DisassemblerInsn "call" for 0x400b55>]'}, {'block_Idx': 255, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401b76>]'}, {'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400630>, <DisassemblerInsn "mov" for 0x400637>, <DisassemblerInsn "mov" for 0x40063e>, <DisassemblerInsn "xor" for 0x400645>, <DisassemblerInsn "sub" for 0x400647>, <DisassemblerInsn "cmovb" for 0x400649>, <DisassemblerInsn "cmp" for 0x40064c>, <DisassemblerInsn "cmovb" for 0x40064e>, <DisassemblerInsn "mov" for 0x400651>, <DisassemblerInsn "mov" for 0x400658>, <DisassemblerInsn "mov" for 0x40065f>, <DisassemblerInsn "mov" for 0x400666>, <DisassemblerInsn "mov" for 0x40066d>, <DisassemblerInsn "add" for 0x40066f>, <DisassemblerInsn "mov" for 0x400671>, <DisassemblerInsn "mov" for 0x400678>, <DisassemblerInsn "cmp" for 0x40067d>, <DisassemblerInsn "mov" for 0x40067f>, <DisassemblerInsn "jb" for 0x400686>]'}, {'block_Idx': 124, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40147e>, <DisassemblerInsn "mov" for 0x401486>, <DisassemblerInsn "mov" for 0x401489>, <DisassemblerInsn "mov" for 0x401491>, <DisassemblerInsn "mov" for 0x401494>, <DisassemblerInsn "mov" for 0x40149c>, <DisassemblerInsn "mov" for 0x40149e>, <DisassemblerInsn "cdq" for 0x4014a3>, <DisassemblerInsn "idiv" for 0x4014a4>, <DisassemblerInsn "mov" for 0x4014a6>, <DisassemblerInsn "movsxd" for 0x4014ae>, <DisassemblerInsn "xor" for 0x4014b1>, <DisassemblerInsn "call" for 0x4014b3>]'}, {'block_Idx': 240, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019eb>, <DisassemblerInsn "mov" for 0x4019f3>, <DisassemblerInsn "mov" for 0x4019fb>, <DisassemblerInsn "mov" for 0x401a03>, <DisassemblerInsn "mov" for 0x401a0b>, <DisassemblerInsn "mov" for 0x401a13>, <DisassemblerInsn "mov" for 0x401a15>, <DisassemblerInsn "mov" for 0x401a1c>, <DisassemblerInsn "mov" for 0x401a1e>, <DisassemblerInsn "mov" for 0x401a25>, <DisassemblerInsn "sar" for 0x401a27>, <DisassemblerInsn "movsxd" for 0x401a2a>, <DisassemblerInsn "mov" for 0x401a2d>, <DisassemblerInsn "ror" for 0x401a30>, <DisassemblerInsn "ror" for 0x401a34>, <DisassemblerInsn "ror" for 0x401a37>, <DisassemblerInsn "and" for 0x401a3b>, <DisassemblerInsn "mov" for 0x401a3e>, <DisassemblerInsn "shl" for 0x401a45>, <DisassemblerInsn "mov" for 0x401a47>, <DisassemblerInsn "cmp" for 0x401a4e>, <DisassemblerInsn "jge" for 0x401a51>]'}, {'block_Idx': 134, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014b8>, <DisassemblerInsn "cmp" for 0x4014bf>, <DisassemblerInsn "je" for 0x4014c2>]'}, {'block_Idx': 329, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fd9>, <DisassemblerInsn "mov" for 0x401fe0>, <DisassemblerInsn "cmp" for 0x401fe7>, <DisassemblerInsn "jle" for 0x401fe9>]'}, {'block_Idx': 138, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014eb>, <DisassemblerInsn "mov" for 0x4014f3>, <DisassemblerInsn "mov" for 0x4014fb>, <DisassemblerInsn "mov" for 0x401502>, <DisassemblerInsn "mov" for 0x40150a>, <DisassemblerInsn "mov" for 0x401511>, <DisassemblerInsn "mov" for 0x401519>, <DisassemblerInsn "mov" for 0x401521>, <DisassemblerInsn "add" for 0x401524>, <DisassemblerInsn "mov" for 0x401528>, <DisassemblerInsn "mov" for 0x401530>, <DisassemblerInsn "mov" for 0x401534>, <DisassemblerInsn "mov" for 0x401538>, <DisassemblerInsn "mov" for 0x40153a>, <DisassemblerInsn "add" for 0x40153d>, <DisassemblerInsn "mov" for 0x401541>, <DisassemblerInsn "mov" for 0x401549>, <DisassemblerInsn "cmp" for 0x40154c>, <DisassemblerInsn "jle" for 0x40154f>]'}, {'block_Idx': 54, 'blockInsts': '[<DisassemblerInsn "sub" for 0x400110>, <DisassemblerInsn "mov" for 0x400114>, <DisassemblerInsn "mov" for 0x400119>, <DisassemblerInsn "mov" for 0x40011e>, <DisassemblerInsn "mov" for 0x400123>, <DisassemblerInsn "ror" for 0x400126>, <DisassemblerInsn "ror" for 0x40012a>, <DisassemblerInsn "ror" for 0x40012d>, <DisassemblerInsn "shr" for 0x400131>, <DisassemblerInsn "mov" for 0x400134>, <DisassemblerInsn "mov" for 0x400138>, <DisassemblerInsn "cmp" for 0x40013a>, <DisassemblerInsn "jge" for 0x40013d>]'}, {'block_Idx': 20, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400afd>, <DisassemblerInsn "cmp" for 0x400b04>, <DisassemblerInsn "je" for 0x400b07>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401455>]'}, {'block_Idx': 56, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e7c>, <DisassemblerInsn "mov" for 0x400e83>, <DisassemblerInsn "mov" for 0x400e8b>, <DisassemblerInsn "xor" for 0x400e8f>, <DisassemblerInsn "lea" for 0x400e91>, <DisassemblerInsn "mov" for 0x400e98>, <DisassemblerInsn "call" for 0x400e9a>]'}, {'block_Idx': 283, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401daa>, <DisassemblerInsn "test" for 0x401db1>, <DisassemblerInsn "jne" for 0x401db3>]'}, {'block_Idx': 153, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023c2>, <DisassemblerInsn "mov" for 0x4023ca>, <DisassemblerInsn "mov" for 0x4023d1>, <DisassemblerInsn "add" for 0x4023d8>, <DisassemblerInsn "mov" for 0x4023da>, <DisassemblerInsn "mov" for 0x4023dc>, <DisassemblerInsn "mov" for 0x4023e4>, <DisassemblerInsn "mov" for 0x4023ec>, <DisassemblerInsn "add" for 0x4023ee>, <DisassemblerInsn "mov" for 0x4023f1>, <DisassemblerInsn "mov" for 0x4023f3>, <DisassemblerInsn "mov" for 0x4023f6>, <DisassemblerInsn "sub" for 0x4023fe>, <DisassemblerInsn "ja" for 0x402402>]'}, {'block_Idx': 64, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f6e>, <DisassemblerInsn "mov" for 0x400f76>, <DisassemblerInsn "mov" for 0x400f7e>, <DisassemblerInsn "ror" for 0x400f81>, <DisassemblerInsn "ror" for 0x400f85>, <DisassemblerInsn "ror" for 0x400f88>, <DisassemblerInsn "shr" for 0x400f8c>, <DisassemblerInsn "mov" for 0x400f8f>, <DisassemblerInsn "mov" for 0x400f96>, <DisassemblerInsn "mov" for 0x400f9c>, <DisassemblerInsn "xor" for 0x400f9e>, <DisassemblerInsn "shr" for 0x400fa4>, <DisassemblerInsn "cmp" for 0x400fa7>, <DisassemblerInsn "cmovb" for 0x400fad>, <DisassemblerInsn "mov" for 0x400fb0>, <DisassemblerInsn "xor" for 0x400fb5>, <DisassemblerInsn "cmp" for 0x400fb7>, <DisassemblerInsn "cmovb" for 0x400fbd>, <DisassemblerInsn "mov" for 0x400fc0>, <DisassemblerInsn "and" for 0x400fc2>, <DisassemblerInsn "mov" for 0x400fc8>, <DisassemblerInsn "shr" for 0x400fca>, <DisassemblerInsn "mov" for 0x400fcd>, <DisassemblerInsn "or" for 0x400fcf>, <DisassemblerInsn "cmp" for 0x400fd2>, <DisassemblerInsn "cmove" for 0x400fd5>, <DisassemblerInsn "cmp" for 0x400fd8>, <DisassemblerInsn "cmove" for 0x400fdb>, <DisassemblerInsn "mov" for 0x400fde>, <DisassemblerInsn "mov" for 0x400fe0>, <DisassemblerInsn "mov" for 0x400fe2>, <DisassemblerInsn "movzx" for 0x400fe9>, <DisassemblerInsn "add" for 0x400fed>, <DisassemblerInsn "mov" for 0x400fef>, <DisassemblerInsn "sub" for 0x400ff4>, <DisassemblerInsn "mov" for 0x400ff6>, <DisassemblerInsn "mov" for 0x400ffd>, <DisassemblerInsn "cmp" for 0x401004>, <DisassemblerInsn "mov" for 0x401007>, <DisassemblerInsn "je" for 0x40100f>]'}, {'block_Idx': 143, 'blockInsts': '[<DisassemblerInsn "add" for 0x402f30>, <DisassemblerInsn "ret" for 0x402f34>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d09>, <DisassemblerInsn "mov" for 0x402d11>, <DisassemblerInsn "mov" for 0x402d18>, <DisassemblerInsn "mov" for 0x402d1c>, <DisassemblerInsn "sub" for 0x402d20>, <DisassemblerInsn "xor" for 0x402d22>, <DisassemblerInsn "lea" for 0x402d24>, <DisassemblerInsn "mov" for 0x402d2b>, <DisassemblerInsn "call" for 0x402d2d>]'}, {'block_Idx': 100, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401238>, <DisassemblerInsn "mov" for 0x401240>, <DisassemblerInsn "mov" for 0x401247>, <DisassemblerInsn "mov" for 0x40124e>, <DisassemblerInsn "mov" for 0x401250>, <DisassemblerInsn "cmp" for 0x401257>, <DisassemblerInsn "jle" for 0x401259>]'}, {'block_Idx': 145, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40239e>, <DisassemblerInsn "mov" for 0x4023a6>, <DisassemblerInsn "mov" for 0x4023a8>, <DisassemblerInsn "xor" for 0x4023af>, <DisassemblerInsn "sub" for 0x4023b1>, <DisassemblerInsn "and" for 0x4023b3>, <DisassemblerInsn "mov" for 0x4023b6>, <DisassemblerInsn "cmp" for 0x4023bd>, <DisassemblerInsn "je" for 0x4023c0>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b19>, <DisassemblerInsn "cmp" for 0x400b21>, <DisassemblerInsn "jne" for 0x400b24>]'}, {'block_Idx': 310, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401eb8>, <DisassemblerInsn "mov" for 0x401ebf>, <DisassemblerInsn "mov" for 0x401ec6>, <DisassemblerInsn "mov" for 0x401ecd>, <DisassemblerInsn "mov" for 0x401ecf>, <DisassemblerInsn "sub" for 0x401ed7>, <DisassemblerInsn "ja" for 0x401eda>]'}, {'block_Idx': 245, 'blockInsts': '[<DisassemblerInsn "push" for 0x402f40>, <DisassemblerInsn "mov" for 0x402f41>, <DisassemblerInsn "sub" for 0x402f44>, <DisassemblerInsn "mov" for 0x402f4b>, <DisassemblerInsn "mov" for 0x402f4e>, <DisassemblerInsn "mov" for 0x402f51>, <DisassemblerInsn "mov" for 0x402f55>, <DisassemblerInsn "lea" for 0x402f57>, <DisassemblerInsn "and" for 0x402f5f>, <DisassemblerInsn "mov" for 0x402f63>, <DisassemblerInsn "sub" for 0x402f66>, <DisassemblerInsn "mov" for 0x402f69>, <DisassemblerInsn "mov" for 0x402f6d>, <DisassemblerInsn "movsxd" for 0x402f70>, <DisassemblerInsn "mov" for 0x402f73>, <DisassemblerInsn "mov" for 0x402f78>, <DisassemblerInsn "cmp" for 0x402f7c>, <DisassemblerInsn "jle" for 0x402f7f>]'}, {'block_Idx': 278, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x401da1>, <DisassemblerInsn "jl" for 0x401da4>]'}, {'block_Idx': 187, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402912>, <DisassemblerInsn "mov" for 0x40291a>, <DisassemblerInsn "mov" for 0x402922>, <DisassemblerInsn "mov" for 0x40292a>, <DisassemblerInsn "mov" for 0x40292e>, <DisassemblerInsn "mov" for 0x402936>, <DisassemblerInsn "mov" for 0x40293a>, <DisassemblerInsn "mov" for 0x402942>, <DisassemblerInsn "add" for 0x402945>, <DisassemblerInsn "mov" for 0x402949>, <DisassemblerInsn "mov" for 0x402951>, <DisassemblerInsn "add" for 0x402954>, <DisassemblerInsn "mov" for 0x402958>, <DisassemblerInsn "add" for 0x402960>, <DisassemblerInsn "mov" for 0x402964>, <DisassemblerInsn "xor" for 0x40296c>, <DisassemblerInsn "mov" for 0x40296e>, <DisassemblerInsn "mov" for 0x402976>, <DisassemblerInsn "mov" for 0x40297e>, <DisassemblerInsn "jmp" for 0x402986>]'}, {'block_Idx': 158, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f21>, <DisassemblerInsn "mov" for 0x402f24>, <DisassemblerInsn "mov" for 0x402f29>, <DisassemblerInsn "add" for 0x402f30>, <DisassemblerInsn "ret" for 0x402f34>]'}, {'block_Idx': 361, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402265>]'}, {'block_Idx': 360, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40207c>, <DisassemblerInsn "mov" for 0x402083>, <DisassemblerInsn "mov" for 0x40208b>, <DisassemblerInsn "mov" for 0x402093>, <DisassemblerInsn "add" for 0x40209b>, <DisassemblerInsn "mov" for 0x40209e>, <DisassemblerInsn "mov" for 0x4020a5>, <DisassemblerInsn "add" for 0x4020a8>, <DisassemblerInsn "mov" for 0x4020ac>, <DisassemblerInsn "cmp" for 0x4020b4>, <DisassemblerInsn "mov" for 0x4020b7>, <DisassemblerInsn "mov" for 0x4020bf>, <DisassemblerInsn "je" for 0x4020c6>]'}, {'block_Idx': 32, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400731>, <DisassemblerInsn "mov" for 0x400739>, <DisassemblerInsn "mov" for 0x400740>, <DisassemblerInsn "mov" for 0x400748>, <DisassemblerInsn "mov" for 0x400750>, <DisassemblerInsn "mov" for 0x400752>, <DisassemblerInsn "mov" for 0x400759>, <DisassemblerInsn "mov" for 0x40075b>, <DisassemblerInsn "add" for 0x400762>, <DisassemblerInsn "add" for 0x400764>, <DisassemblerInsn "cmp" for 0x400766>, <DisassemblerInsn "jbe" for 0x400768>]'}, {'block_Idx': 88, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401167>, <DisassemblerInsn "mov" for 0x40116f>, <DisassemblerInsn "xor" for 0x401172>, <DisassemblerInsn "lea" for 0x401174>, <DisassemblerInsn "mov" for 0x40117b>, <DisassemblerInsn "call" for 0x40117d>]'}, {'block_Idx': 148, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401433>, <DisassemblerInsn "mov" for 0x40143a>, <DisassemblerInsn "mov" for 0x401442>, <DisassemblerInsn "xor" for 0x401445>, <DisassemblerInsn "lea" for 0x401447>, <DisassemblerInsn "mov" for 0x40144e>, <DisassemblerInsn "call" for 0x401450>]'}, {'block_Idx': 165, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402420>, <DisassemblerInsn "mov" for 0x402428>, <DisassemblerInsn "add" for 0x40242b>, <DisassemblerInsn "mov" for 0x40242f>, <DisassemblerInsn "cmp" for 0x402437>, <DisassemblerInsn "jle" for 0x40243b>]'}, {'block_Idx': 61, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400798>, <DisassemblerInsn "mov" for 0x4007a0>, <DisassemblerInsn "mov" for 0x4007a6>, <DisassemblerInsn "mov" for 0x4007ad>, <DisassemblerInsn "mov" for 0x4007b5>, <DisassemblerInsn "mov" for 0x4007bd>, <DisassemblerInsn "mov" for 0x4007c5>, <DisassemblerInsn "mov" for 0x4007cd>, <DisassemblerInsn "mov" for 0x4007d4>, <DisassemblerInsn "add" for 0x4007d6>, <DisassemblerInsn "mov" for 0x4007d8>, <DisassemblerInsn "add" for 0x4007da>, <DisassemblerInsn "movsxd" for 0x4007dd>, <DisassemblerInsn "call" for 0x4007e0>]'}, {'block_Idx': 243, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c9d>, <DisassemblerInsn "mov" for 0x401ca5>, <DisassemblerInsn "mov" for 0x401cac>, <DisassemblerInsn "mov" for 0x401cb3>, <DisassemblerInsn "mov" for 0x401cbb>, <DisassemblerInsn "shr" for 0x401cc3>, <DisassemblerInsn "mov" for 0x401cc7>, <DisassemblerInsn "add" for 0x401cca>, <DisassemblerInsn "mov" for 0x401cce>, <DisassemblerInsn "mov" for 0x401cd1>, <DisassemblerInsn "add" for 0x401cd3>, <DisassemblerInsn "mov" for 0x401cd6>, <DisassemblerInsn "shl" for 0x401cdd>, <DisassemblerInsn "mov" for 0x401ce0>, <DisassemblerInsn "mov" for 0x401ce7>, <DisassemblerInsn "sar" for 0x401cef>, <DisassemblerInsn "movsxd" for 0x401cf3>, <DisassemblerInsn "mov" for 0x401cf6>, <DisassemblerInsn "ror" for 0x401cfa>, <DisassemblerInsn "ror" for 0x401cfe>, <DisassemblerInsn "ror" for 0x401d01>, <DisassemblerInsn "shl" for 0x401d05>, <DisassemblerInsn "mov" for 0x401d07>, <DisassemblerInsn "mov" for 0x401d0e>, <DisassemblerInsn "xor" for 0x401d11>, <DisassemblerInsn "sub" for 0x401d13>, <DisassemblerInsn "shr" for 0x401d16>, <DisassemblerInsn "mov" for 0x401d18>, <DisassemblerInsn "add" for 0x401d1f>, <DisassemblerInsn "mov" for 0x401d21>, <DisassemblerInsn "or" for 0x401d23>, <DisassemblerInsn "mov" for 0x401d25>, <DisassemblerInsn "mov" for 0x401d2c>, <DisassemblerInsn "mov" for 0x401d34>, <DisassemblerInsn "mov" for 0x401d3c>, <DisassemblerInsn "mov" for 0x401d43>, <DisassemblerInsn "mov" for 0x401d4a>, <DisassemblerInsn "sub" for 0x401d4f>, <DisassemblerInsn "mov" for 0x401d51>, <DisassemblerInsn "shl" for 0x401d58>, <DisassemblerInsn "mov" for 0x401d5a>, <DisassemblerInsn "sar" for 0x401d61>, <DisassemblerInsn "mov" for 0x401d63>, <DisassemblerInsn "mov" for 0x401d6b>, <DisassemblerInsn "add" for 0x401d6e>, <DisassemblerInsn "cmp" for 0x401d72>, <DisassemblerInsn "mov" for 0x401d75>, <DisassemblerInsn "jne" for 0x401d7d>]'}, {'block_Idx': 251, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4022e7>]'}, {'block_Idx': 116, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40145a>, <DisassemblerInsn "mov" for 0x401462>, <DisassemblerInsn "mov" for 0x401469>, <DisassemblerInsn "mov" for 0x401470>, <DisassemblerInsn "add" for 0x401472>, <DisassemblerInsn "mov" for 0x401475>, <DisassemblerInsn "xor" for 0x401477>, <DisassemblerInsn "call" for 0x401479>]'}, {'block_Idx': 26, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b96>, <DisassemblerInsn "mov" for 0x400b9d>, <DisassemblerInsn "shr" for 0x400ba2>, <DisassemblerInsn "mov" for 0x400ba4>, <DisassemblerInsn "and" for 0x400bab>, <DisassemblerInsn "cmp" for 0x400bad>, <DisassemblerInsn "je" for 0x400bb0>]'}, {'block_Idx': 166, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b04>, <DisassemblerInsn "cmp" for 0x402b0c>, <DisassemblerInsn "jne" for 0x402b10>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40060b>, <DisassemblerInsn "mov" for 0x400612>, <DisassemblerInsn "mov" for 0x40061a>, <DisassemblerInsn "cmp" for 0x400621>, <DisassemblerInsn "mov" for 0x400627>, <DisassemblerInsn "je" for 0x40062e>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e5a>, <DisassemblerInsn "movsxd" for 0x400e61>, <DisassemblerInsn "lea" for 0x400e64>, <DisassemblerInsn "shl" for 0x400e6b>, <DisassemblerInsn "add" for 0x400e6f>, <DisassemblerInsn "mov" for 0x400e72>, <DisassemblerInsn "jmp" for 0x400e7a>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400857>, <DisassemblerInsn "mov" for 0x40085f>, <DisassemblerInsn "mov" for 0x400866>, <DisassemblerInsn "mov" for 0x40086d>, <DisassemblerInsn "mov" for 0x400875>, <DisassemblerInsn "mov" for 0x40087c>, <DisassemblerInsn "mov" for 0x400883>, <DisassemblerInsn "shl" for 0x400885>, <DisassemblerInsn "xor" for 0x400888>, <DisassemblerInsn "cmp" for 0x40088a>, <DisassemblerInsn "cmovl" for 0x40088d>, <DisassemblerInsn "mov" for 0x400891>, <DisassemblerInsn "xor" for 0x400899>, <DisassemblerInsn "cmp" for 0x40089b>, <DisassemblerInsn "cmovl" for 0x40089e>, <DisassemblerInsn "xor" for 0x4008a1>, <DisassemblerInsn "cmp" for 0x4008a4>, <DisassemblerInsn "mov" for 0x4008a7>, <DisassemblerInsn "cmovl" for 0x4008a9>, <DisassemblerInsn "mov" for 0x4008ad>, <DisassemblerInsn "add" for 0x4008b0>, <DisassemblerInsn "mov" for 0x4008b4>, <DisassemblerInsn "mov" for 0x4008bc>, <DisassemblerInsn "mov" for 0x4008c0>, <DisassemblerInsn "mov" for 0x4008c3>, <DisassemblerInsn "add" for 0x4008c5>, <DisassemblerInsn "mov" for 0x4008c8>, <DisassemblerInsn "mov" for 0x4008cc>, <DisassemblerInsn "add" for 0x4008cf>, <DisassemblerInsn "mov" for 0x4008d3>, <DisassemblerInsn "mov" for 0x4008db>, <DisassemblerInsn "cmp" for 0x4008e2>, <DisassemblerInsn "jl" for 0x4008e5>]'}, {'block_Idx': 84, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024ca>, <DisassemblerInsn "mov" for 0x4024d2>, <DisassemblerInsn "mov" for 0x4024dc>, <DisassemblerInsn "mov" for 0x4024e6>, <DisassemblerInsn "mov" for 0x4024eb>, <DisassemblerInsn "jmp" for 0x4024f2>]'}, {'block_Idx': 156, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4014e6>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40071f>, <DisassemblerInsn "mov" for 0x400722>, <DisassemblerInsn "mov" for 0x40072a>, <DisassemblerInsn "mov" for 0x400731>, <DisassemblerInsn "mov" for 0x400739>, <DisassemblerInsn "mov" for 0x400740>, <DisassemblerInsn "mov" for 0x400748>, <DisassemblerInsn "mov" for 0x400750>, <DisassemblerInsn "mov" for 0x400752>, <DisassemblerInsn "mov" for 0x400759>, <DisassemblerInsn "mov" for 0x40075b>, <DisassemblerInsn "add" for 0x400762>, <DisassemblerInsn "add" for 0x400764>, <DisassemblerInsn "cmp" for 0x400766>, <DisassemblerInsn "jbe" for 0x400768>]'}, {'block_Idx': 80, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40111b>, <DisassemblerInsn "mov" for 0x401123>, <DisassemblerInsn "xor" for 0x401126>, <DisassemblerInsn "lea" for 0x401128>, <DisassemblerInsn "mov" for 0x40112f>, <DisassemblerInsn "call" for 0x401131>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c04>, <DisassemblerInsn "mov" for 0x402c09>, <DisassemblerInsn "mov" for 0x402c0d>, <DisassemblerInsn "mov" for 0x402c12>, <DisassemblerInsn "mov" for 0x402c16>, <DisassemblerInsn "shl" for 0x402c18>, <DisassemblerInsn "mov" for 0x402c1a>, <DisassemblerInsn "mov" for 0x402c1c>, <DisassemblerInsn "mov" for 0x402c1e>, <DisassemblerInsn "shl" for 0x402c20>, <DisassemblerInsn "mov" for 0x402c22>, <DisassemblerInsn "mov" for 0x402c27>, <DisassemblerInsn "add" for 0x402c2a>, <DisassemblerInsn "mov" for 0x402c2e>, <DisassemblerInsn "mov" for 0x402c31>, <DisassemblerInsn "mov" for 0x402c36>, <DisassemblerInsn "jmp" for 0x402c3b>]'}, {'block_Idx': 318, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40226a>, <DisassemblerInsn "mov" for 0x402271>, <DisassemblerInsn "mov" for 0x402279>, <DisassemblerInsn "xor" for 0x40227c>, <DisassemblerInsn "lea" for 0x40227e>, <DisassemblerInsn "mov" for 0x402285>, <DisassemblerInsn "call" for 0x402287>]'}, {'block_Idx': 130, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401338>]'}, {'block_Idx': 193, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402668>, <DisassemblerInsn "mov" for 0x402670>, <DisassemblerInsn "mov" for 0x402678>, <DisassemblerInsn "mov" for 0x402680>, <DisassemblerInsn "add" for 0x402688>, <DisassemblerInsn "movsxd" for 0x40268c>, <DisassemblerInsn "cmp" for 0x40268f>, <DisassemblerInsn "mov" for 0x402692>, <DisassemblerInsn "mov" for 0x40269a>, <DisassemblerInsn "mov" for 0x4026a2>, <DisassemblerInsn "jl" for 0x4026aa>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402542>, <DisassemblerInsn "mov" for 0x40254a>, <DisassemblerInsn "mov" for 0x402552>, <DisassemblerInsn "mov" for 0x40255a>, <DisassemblerInsn "mov" for 0x402562>, <DisassemblerInsn "mov" for 0x40256a>, <DisassemblerInsn "mov" for 0x402572>, <DisassemblerInsn "mov" for 0x40257a>, <DisassemblerInsn "mov" for 0x402582>, <DisassemblerInsn "mov" for 0x40258a>, <DisassemblerInsn "mov" for 0x40258c>, <DisassemblerInsn "mov" for 0x402591>, <DisassemblerInsn "mov" for 0x402594>, <DisassemblerInsn "cmp" for 0x40259b>, <DisassemblerInsn "je" for 0x40259e>]'}, {'block_Idx': 219, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ab7>, <DisassemblerInsn "mov" for 0x402abf>, <DisassemblerInsn "mov" for 0x402ac7>, <DisassemblerInsn "mov" for 0x402acf>, <DisassemblerInsn "add" for 0x402ad7>, <DisassemblerInsn "movsxd" for 0x402adb>, <DisassemblerInsn "cmp" for 0x402ade>, <DisassemblerInsn "mov" for 0x402ae1>, <DisassemblerInsn "mov" for 0x402ae9>, <DisassemblerInsn "mov" for 0x402af1>, <DisassemblerInsn "jl" for 0x402af9>]'}, {'block_Idx': 349, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4020cc>]'}, {'block_Idx': 301, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403ff5>, <DisassemblerInsn "add" for 0x403ffc>, <DisassemblerInsn "ret" for 0x404003>]'}, {'block_Idx': 167, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4026b5>, <DisassemblerInsn "cmp" for 0x4026bd>, <DisassemblerInsn "jne" for 0x4026c1>]'}, {'block_Idx': 213, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4017c7>]'}, {'block_Idx': 242, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c66>, <DisassemblerInsn "mov" for 0x401c6d>, <DisassemblerInsn "mov" for 0x401c74>, <DisassemblerInsn "mov" for 0x401c7b>, <DisassemblerInsn "xor" for 0x401c7e>, <DisassemblerInsn "sub" for 0x401c80>, <DisassemblerInsn "shr" for 0x401c83>, <DisassemblerInsn "mov" for 0x401c85>, <DisassemblerInsn "add" for 0x401c8d>, <DisassemblerInsn "mov" for 0x401c8f>, <DisassemblerInsn "mov" for 0x401c91>, <DisassemblerInsn "jmp" for 0x401c98>]'}, {'block_Idx': 94, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401148>, <DisassemblerInsn "sub" for 0x40114f>, <DisassemblerInsn "je" for 0x401152>]'}, {'block_Idx': 76, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e9f>]'}, {'block_Idx': 379, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x4022c1>, <DisassemblerInsn "jl" for 0x4022c4>]'}, {'block_Idx': 129, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013a0>, <DisassemblerInsn "mov" for 0x4013a8>, <DisassemblerInsn "mov" for 0x4013b0>, <DisassemblerInsn "mov" for 0x4013b2>, <DisassemblerInsn "sar" for 0x4013b4>, <DisassemblerInsn "movsxd" for 0x4013b7>, <DisassemblerInsn "mov" for 0x4013ba>, <DisassemblerInsn "ror" for 0x4013bd>, <DisassemblerInsn "ror" for 0x4013c1>, <DisassemblerInsn "ror" for 0x4013c4>, <DisassemblerInsn "mov" for 0x4013c8>, <DisassemblerInsn "and" for 0x4013ca>, <DisassemblerInsn "shl" for 0x4013cd>, <DisassemblerInsn "mov" for 0x4013cf>, <DisassemblerInsn "shr" for 0x4013d7>, <DisassemblerInsn "add" for 0x4013da>, <DisassemblerInsn "mov" for 0x4013dd>, <DisassemblerInsn "mov" for 0x4013df>, <DisassemblerInsn "jmp" for 0x4013e6>]'}, {'block_Idx': 135, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40133a>, <DisassemblerInsn "sub" for 0x401341>, <DisassemblerInsn "je" for 0x401344>]'}, {'block_Idx': 104, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40125b>, <DisassemblerInsn "mov" for 0x401263>, <DisassemblerInsn "mov" for 0x40126a>, <DisassemblerInsn "mov" for 0x401272>, <DisassemblerInsn "xor" for 0x401275>, <DisassemblerInsn "lea" for 0x401277>, <DisassemblerInsn "mov" for 0x40127e>, <DisassemblerInsn "call" for 0x401280>]'}, {'block_Idx': 221, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022ec>, <DisassemblerInsn "cmp" for 0x4022f3>, <DisassemblerInsn "je" for 0x4022f6>]'}, {'block_Idx': 207, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4027de>, <DisassemblerInsn "mov" for 0x4027e6>, <DisassemblerInsn "mov" for 0x4027ee>, <DisassemblerInsn "mov" for 0x4027f5>, <DisassemblerInsn "mov" for 0x4027f7>, <DisassemblerInsn "shl" for 0x4027f9>, <DisassemblerInsn "mov" for 0x4027fb>, <DisassemblerInsn "mov" for 0x402802>, <DisassemblerInsn "sub" for 0x402804>, <DisassemblerInsn "mov" for 0x402806>, <DisassemblerInsn "shl" for 0x402808>, <DisassemblerInsn "mov" for 0x40280a>, <DisassemblerInsn "mov" for 0x402812>, <DisassemblerInsn "add" for 0x402815>, <DisassemblerInsn "mov" for 0x402819>, <DisassemblerInsn "mov" for 0x40281c>, <DisassemblerInsn "mov" for 0x402824>, <DisassemblerInsn "jmp" for 0x40282c>]'}, {'block_Idx': 311, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e77>, <DisassemblerInsn "mov" for 0x401e7e>, <DisassemblerInsn "mov" for 0x401e86>, <DisassemblerInsn "mov" for 0x401e8d>, <DisassemblerInsn "add" for 0x401e8f>, <DisassemblerInsn "mov" for 0x401e92>, <DisassemblerInsn "mov" for 0x401e94>, <DisassemblerInsn "mov" for 0x401e97>, <DisassemblerInsn "add" for 0x401e99>, <DisassemblerInsn "mov" for 0x401e9c>, <DisassemblerInsn "mov" for 0x401e9e>, <DisassemblerInsn "shl" for 0x401ea1>, <DisassemblerInsn "add" for 0x401ea3>, <DisassemblerInsn "mov" for 0x401ea6>, <DisassemblerInsn "mov" for 0x401ea8>, <DisassemblerInsn "add" for 0x401eab>, <DisassemblerInsn "add" for 0x401ead>, <DisassemblerInsn "sub" for 0x401eaf>, <DisassemblerInsn "mov" for 0x401eb1>, <DisassemblerInsn "mov" for 0x401eb8>, <DisassemblerInsn "mov" for 0x401ebf>, <DisassemblerInsn "mov" for 0x401ec6>, <DisassemblerInsn "mov" for 0x401ecd>, <DisassemblerInsn "mov" for 0x401ecf>, <DisassemblerInsn "sub" for 0x401ed7>, <DisassemblerInsn "ja" for 0x401eda>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40059e>, <DisassemblerInsn "mov" for 0x4005a6>, <DisassemblerInsn "mov" for 0x4005ad>, <DisassemblerInsn "mov" for 0x4005b5>, <DisassemblerInsn "mov" for 0x4005b7>, <DisassemblerInsn "xor" for 0x4005be>, <DisassemblerInsn "cmp" for 0x4005c0>, <DisassemblerInsn "mov" for 0x4005c3>, <DisassemblerInsn "mov" for 0x4005ca>, <DisassemblerInsn "mov" for 0x4005d1>, <DisassemblerInsn "je" for 0x4005d9>]'}, {'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402dc3>, <DisassemblerInsn "add" for 0x402dca>, <DisassemblerInsn "ret" for 0x402dd1>]'}, {'block_Idx': 74, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401015>, <DisassemblerInsn "mov" for 0x40101c>, <DisassemblerInsn "mov" for 0x401023>, <DisassemblerInsn "mov" for 0x401028>, <DisassemblerInsn "shr" for 0x40102a>, <DisassemblerInsn "mov" for 0x40102c>, <DisassemblerInsn "and" for 0x40102e>, <DisassemblerInsn "mov" for 0x401030>, <DisassemblerInsn "mov" for 0x401032>, <DisassemblerInsn "mov" for 0x40103a>, <DisassemblerInsn "mov" for 0x401041>, <DisassemblerInsn "mov" for 0x401049>, <DisassemblerInsn "mov" for 0x401050>, <DisassemblerInsn "mov" for 0x401057>, <DisassemblerInsn "cmp" for 0x40105f>, <DisassemblerInsn "mov" for 0x401062>, <DisassemblerInsn "jle" for 0x40106a>]'}, {'block_Idx': 60, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007e5>, <DisassemblerInsn "mov" for 0x4007ed>, <DisassemblerInsn "mov" for 0x4007f5>, <DisassemblerInsn "mov" for 0x4007fd>, <DisassemblerInsn "mov" for 0x400805>, <DisassemblerInsn "mov" for 0x40080c>, <DisassemblerInsn "mov" for 0x400813>, <DisassemblerInsn "add" for 0x400815>, <DisassemblerInsn "mov" for 0x400818>, <DisassemblerInsn "add" for 0x40081a>, <DisassemblerInsn "mov" for 0x40081c>, <DisassemblerInsn "cmp" for 0x40081e>, <DisassemblerInsn "setl" for 0x400820>, <DisassemblerInsn "cmp" for 0x400824>, <DisassemblerInsn "setne" for 0x400827>, <DisassemblerInsn "and" for 0x40082b>, <DisassemblerInsn "test" for 0x40082e>, <DisassemblerInsn "mov" for 0x400832>, <DisassemblerInsn "mov" for 0x400834>, <DisassemblerInsn "mov" for 0x40083b>, <DisassemblerInsn "mov" for 0x400842>, <DisassemblerInsn "mov" for 0x40084a>, <DisassemblerInsn "jne" for 0x400851>]'}, {'block_Idx': 202, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4025de>, <DisassemblerInsn "mov" for 0x4025e6>, <DisassemblerInsn "mov" for 0x4025ee>, <DisassemblerInsn "mov" for 0x4025f5>, <DisassemblerInsn "mov" for 0x4025fd>, <DisassemblerInsn "shl" for 0x4025ff>, <DisassemblerInsn "mov" for 0x402601>, <DisassemblerInsn "mov" for 0x402603>, <DisassemblerInsn "mov" for 0x402606>, <DisassemblerInsn "add" for 0x402609>, <DisassemblerInsn "mov" for 0x40260d>, <DisassemblerInsn "mov" for 0x402610>, <DisassemblerInsn "mov" for 0x402618>, <DisassemblerInsn "mov" for 0x402620>, <DisassemblerInsn "mov" for 0x402628>, <DisassemblerInsn "mov" for 0x402630>, <DisassemblerInsn "mov" for 0x402638>, <DisassemblerInsn "add" for 0x402640>, <DisassemblerInsn "movsxd" for 0x402644>, <DisassemblerInsn "cmp" for 0x402647>, <DisassemblerInsn "mov" for 0x40264a>, <DisassemblerInsn "mov" for 0x402652>, <DisassemblerInsn "mov" for 0x40265a>, <DisassemblerInsn "jl" for 0x402662>]'}, {'block_Idx': 238, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40229d>, <DisassemblerInsn "mov" for 0x4022a5>, <DisassemblerInsn "mov" for 0x4022ad>, <DisassemblerInsn "and" for 0x4022b4>, <DisassemblerInsn "add" for 0x4022b7>, <DisassemblerInsn "mov" for 0x4022ba>, <DisassemblerInsn "call" for 0x4022bc>]'}, {'block_Idx': 326, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f70>, <DisassemblerInsn "mov" for 0x401f77>, <DisassemblerInsn "cmp" for 0x401f7e>, <DisassemblerInsn "jle" for 0x401f80>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d8c>, <DisassemblerInsn "mov" for 0x402d93>, <DisassemblerInsn "mov" for 0x402d97>, <DisassemblerInsn "mov" for 0x402d9b>, <DisassemblerInsn "mov" for 0x402d9f>, <DisassemblerInsn "mov" for 0x402da7>, <DisassemblerInsn "add" for 0x402daa>, <DisassemblerInsn "mov" for 0x402db1>, <DisassemblerInsn "sub" for 0x402db8>, <DisassemblerInsn "mov" for 0x402dba>, <DisassemblerInsn "mov" for 0x402dbc>, <DisassemblerInsn "mov" for 0x402dc3>, <DisassemblerInsn "add" for 0x402dca>, <DisassemblerInsn "ret" for 0x402dd1>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bd2>, <DisassemblerInsn "mov" for 0x400bda>, <DisassemblerInsn "xor" for 0x400bde>, <DisassemblerInsn "lea" for 0x400be0>, <DisassemblerInsn "mov" for 0x400be7>, <DisassemblerInsn "call" for 0x400be9>]'}, {'block_Idx': 122, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40132a>]'}, {'block_Idx': 239, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40232c>, <DisassemblerInsn "mov" for 0x402334>, <DisassemblerInsn "mov" for 0x40233c>, <DisassemblerInsn "mov" for 0x402343>, <DisassemblerInsn "shl" for 0x402346>, <DisassemblerInsn "mov" for 0x402348>, <DisassemblerInsn "mov" for 0x402350>, <DisassemblerInsn "mov" for 0x402357>, <DisassemblerInsn "add" for 0x40235a>, <DisassemblerInsn "mov" for 0x40235e>, <DisassemblerInsn "movsxd" for 0x402366>, <DisassemblerInsn "cmp" for 0x402369>, <DisassemblerInsn "mov" for 0x40236c>, <DisassemblerInsn "jl" for 0x402374>]'}, {'block_Idx': 342, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40228c>]'}, {'block_Idx': 90, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401041>, <DisassemblerInsn "mov" for 0x401049>, <DisassemblerInsn "mov" for 0x401050>, <DisassemblerInsn "mov" for 0x401057>, <DisassemblerInsn "cmp" for 0x40105f>, <DisassemblerInsn "mov" for 0x401062>, <DisassemblerInsn "jle" for 0x40106a>]'}, {'block_Idx': 395, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4036f6>, <DisassemblerInsn "mov" for 0x4036fa>, <DisassemblerInsn "mov" for 0x403700>, <DisassemblerInsn "sar" for 0x403706>, <DisassemblerInsn "mov" for 0x403708>, <DisassemblerInsn "movsxd" for 0x40370e>, <DisassemblerInsn "add" for 0x403711>, <DisassemblerInsn "mov" for 0x403714>, <DisassemblerInsn "xor" for 0x403717>, <DisassemblerInsn "mov" for 0x403719>, <DisassemblerInsn "mov" for 0x40371f>, <DisassemblerInsn "mov" for 0x403725>, <DisassemblerInsn "pop" for 0x403728>, <DisassemblerInsn "ret" for 0x403729>]'}, {'block_Idx': 382, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40371f>, <DisassemblerInsn "mov" for 0x403725>, <DisassemblerInsn "pop" for 0x403728>, <DisassemblerInsn "ret" for 0x403729>]'}, {'block_Idx': 96, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401182>]'}, {'block_Idx': 55, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ea4>, <DisassemblerInsn "mov" for 0x400eac>, <DisassemblerInsn "mov" for 0x400eb4>, <DisassemblerInsn "mov" for 0x400ebc>, <DisassemblerInsn "mov" for 0x400ec4>, <DisassemblerInsn "mov" for 0x400ec6>, <DisassemblerInsn "cmp" for 0x400ecd>, <DisassemblerInsn "setg" for 0x400ed0>, <DisassemblerInsn "mov" for 0x400ed4>, <DisassemblerInsn "mov" for 0x400ed8>, <DisassemblerInsn "mov" for 0x400ede>, <DisassemblerInsn "cmp" for 0x400ee4>, <DisassemblerInsn "cmovg" for 0x400ee7>, <DisassemblerInsn "mov" for 0x400eeb>, <DisassemblerInsn "mov" for 0x400ef1>, <DisassemblerInsn "cmp" for 0x400ef7>, <DisassemblerInsn "cmovg" for 0x400efa>, <DisassemblerInsn "and" for 0x400efe>, <DisassemblerInsn "movzx" for 0x400f02>, <DisassemblerInsn "mov" for 0x400f06>, <DisassemblerInsn "sub" for 0x400f0a>, <DisassemblerInsn "mov" for 0x400f0d>, <DisassemblerInsn "mov" for 0x400f11>, <DisassemblerInsn "mov" for 0x400f14>, <DisassemblerInsn "add" for 0x400f17>, <DisassemblerInsn "mov" for 0x400f1b>, <DisassemblerInsn "mov" for 0x400f23>, <DisassemblerInsn "mov" for 0x400f27>, <DisassemblerInsn "mov" for 0x400f2d>, <DisassemblerInsn "add" for 0x400f30>, <DisassemblerInsn "mov" for 0x400f34>, <DisassemblerInsn "mov" for 0x400f3c>, <DisassemblerInsn "mov" for 0x400f3f>, <DisassemblerInsn "mov" for 0x400f42>, <DisassemblerInsn "and" for 0x400f48>, <DisassemblerInsn "cmp" for 0x400f4a>, <DisassemblerInsn "je" for 0x400f4c>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40058c>, <DisassemblerInsn "mov" for 0x40058f>, <DisassemblerInsn "mov" for 0x400597>, <DisassemblerInsn "mov" for 0x40059e>, <DisassemblerInsn "mov" for 0x4005a6>, <DisassemblerInsn "mov" for 0x4005ad>, <DisassemblerInsn "mov" for 0x4005b5>, <DisassemblerInsn "mov" for 0x4005b7>, <DisassemblerInsn "xor" for 0x4005be>, <DisassemblerInsn "cmp" for 0x4005c0>, <DisassemblerInsn "mov" for 0x4005c3>, <DisassemblerInsn "mov" for 0x4005ca>, <DisassemblerInsn "mov" for 0x4005d1>, <DisassemblerInsn "je" for 0x4005d9>]'}, {'block_Idx': 233, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402305>, <DisassemblerInsn "mov" for 0x40230d>, <DisassemblerInsn "mov" for 0x402315>, <DisassemblerInsn "mov" for 0x40231a>, <DisassemblerInsn "xor" for 0x402322>, <DisassemblerInsn "mov" for 0x402324>, <DisassemblerInsn "mov" for 0x40232c>, <DisassemblerInsn "mov" for 0x402334>, <DisassemblerInsn "mov" for 0x40233c>, <DisassemblerInsn "mov" for 0x402343>, <DisassemblerInsn "shl" for 0x402346>, <DisassemblerInsn "mov" for 0x402348>, <DisassemblerInsn "mov" for 0x402350>, <DisassemblerInsn "mov" for 0x402357>, <DisassemblerInsn "add" for 0x40235a>, <DisassemblerInsn "mov" for 0x40235e>, <DisassemblerInsn "movsxd" for 0x402366>, <DisassemblerInsn "cmp" for 0x402369>, <DisassemblerInsn "mov" for 0x40236c>, <DisassemblerInsn "jl" for 0x402374>]'}, {'block_Idx': 234, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017fc>, <DisassemblerInsn "mov" for 0x401804>, <DisassemblerInsn "add" for 0x40180c>, <DisassemblerInsn "shl" for 0x401810>, <DisassemblerInsn "add" for 0x401814>, <DisassemblerInsn "mov" for 0x401817>, <DisassemblerInsn "xor" for 0x40181f>, <DisassemblerInsn "mov" for 0x401821>, <DisassemblerInsn "jmp" for 0x401829>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cd6>, <DisassemblerInsn "mov" for 0x400cde>, <DisassemblerInsn "mov" for 0x400ce6>, <DisassemblerInsn "mov" for 0x400cec>, <DisassemblerInsn "add" for 0x400cef>, <DisassemblerInsn "mov" for 0x400cf3>, <DisassemblerInsn "mov" for 0x400cfb>, <DisassemblerInsn "add" for 0x400cfe>, <DisassemblerInsn "mov" for 0x400d02>, <DisassemblerInsn "mov" for 0x400d0a>, <DisassemblerInsn "mov" for 0x400d0e>, <DisassemblerInsn "mov" for 0x400d16>, <DisassemblerInsn "mov" for 0x400d19>, <DisassemblerInsn "ror" for 0x400d1b>, <DisassemblerInsn "ror" for 0x400d1f>, <DisassemblerInsn "ror" for 0x400d22>, <DisassemblerInsn "shr" for 0x400d26>, <DisassemblerInsn "mov" for 0x400d29>, <DisassemblerInsn "ror" for 0x400d30>, <DisassemblerInsn "ror" for 0x400d34>, <DisassemblerInsn "ror" for 0x400d37>, <DisassemblerInsn "shl" for 0x400d3b>, <DisassemblerInsn "shr" for 0x400d3e>, <DisassemblerInsn "mov" for 0x400d41>, <DisassemblerInsn "mov" for 0x400d48>, <DisassemblerInsn "mov" for 0x400d4f>, <DisassemblerInsn "ror" for 0x400d52>, <DisassemblerInsn "ror" for 0x400d56>, <DisassemblerInsn "ror" for 0x400d59>, <DisassemblerInsn "shr" for 0x400d5d>, <DisassemblerInsn "mov" for 0x400d60>, <DisassemblerInsn "mov" for 0x400d67>, <DisassemblerInsn "cmp" for 0x400d6e>, <DisassemblerInsn "jge" for 0x400d71>]'}, {'block_Idx': 340, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f0e>, <DisassemblerInsn "mov" for 0x401f15>, <DisassemblerInsn "mov" for 0x401f1c>, <DisassemblerInsn "mov" for 0x401f23>, <DisassemblerInsn "mov" for 0x401f2a>, <DisassemblerInsn "mov" for 0x401f32>, <DisassemblerInsn "movsxd" for 0x401f39>, <DisassemblerInsn "movsxd" for 0x401f3c>, <DisassemblerInsn "mov" for 0x401f3f>, <DisassemblerInsn "mov" for 0x401f47>, <DisassemblerInsn "mov" for 0x401f4f>, <DisassemblerInsn "mov" for 0x401f56>, <DisassemblerInsn "mov" for 0x401f5d>, <DisassemblerInsn "mov" for 0x401f64>, <DisassemblerInsn "jmp" for 0x401f6b>]'}, {'block_Idx': 203, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4025a0>, <DisassemblerInsn "mov" for 0x4025a8>, <DisassemblerInsn "mov" for 0x4025af>, <DisassemblerInsn "mov" for 0x4025b7>, <DisassemblerInsn "shl" for 0x4025b9>, <DisassemblerInsn "mov" for 0x4025bb>, <DisassemblerInsn "mov" for 0x4025c3>, <DisassemblerInsn "add" for 0x4025c6>, <DisassemblerInsn "mov" for 0x4025ca>, <DisassemblerInsn "mov" for 0x4025cc>, <DisassemblerInsn "mov" for 0x4025d4>, <DisassemblerInsn "jmp" for 0x4025dc>]'}, {'block_Idx': 112, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012db>, <DisassemblerInsn "mov" for 0x4012e3>, <DisassemblerInsn "mov" for 0x4012e6>, <DisassemblerInsn "jmp" for 0x4012ed>]'}, {'block_Idx': 160, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402cb8>, <DisassemblerInsn "mov" for 0x402cc0>, <DisassemblerInsn "mov" for 0x402cc8>, <DisassemblerInsn "imul" for 0x402ccb>, <DisassemblerInsn "mov" for 0x402ccf>, <DisassemblerInsn "mov" for 0x402cd4>, <DisassemblerInsn "cmp" for 0x402cd9>, <DisassemblerInsn "cmove" for 0x402cdd>, <DisassemblerInsn "imul" for 0x402ce0>, <DisassemblerInsn "mov" for 0x402ce3>, <DisassemblerInsn "mov" for 0x402ce5>, <DisassemblerInsn "mov" for 0x402cec>, <DisassemblerInsn "mov" for 0x402cf4>, <DisassemblerInsn "add" for 0x402cf6>, <DisassemblerInsn "mov" for 0x402cf9>, <DisassemblerInsn "cdq" for 0x402cfe>, <DisassemblerInsn "idiv" for 0x402cff>, <DisassemblerInsn "mov" for 0x402d01>, <DisassemblerInsn "cmp" for 0x402d05>, <DisassemblerInsn "jle" for 0x402d07>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40277d>, <DisassemblerInsn "mov" for 0x402785>, <DisassemblerInsn "mov" for 0x40278d>, <DisassemblerInsn "mov" for 0x402795>, <DisassemblerInsn "mov" for 0x40279d>, <DisassemblerInsn "mov" for 0x4027a5>, <DisassemblerInsn "mov" for 0x4027ad>, <DisassemblerInsn "mov" for 0x4027b5>, <DisassemblerInsn "mov" for 0x4027bd>, <DisassemblerInsn "mov" for 0x4027c5>, <DisassemblerInsn "mov" for 0x4027c8>, <DisassemblerInsn "mov" for 0x4027cf>, <DisassemblerInsn "mov" for 0x4027d2>, <DisassemblerInsn "cmp" for 0x4027d9>, <DisassemblerInsn "je" for 0x4027dc>]'}, {'block_Idx': 208, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402a5a>, <DisassemblerInsn "mov" for 0x402a62>, <DisassemblerInsn "mov" for 0x402a6a>, <DisassemblerInsn "mov" for 0x402a71>, <DisassemblerInsn "mov" for 0x402a78>, <DisassemblerInsn "mov" for 0x402a80>, <DisassemblerInsn "mov" for 0x402a82>, <DisassemblerInsn "shl" for 0x402a89>, <DisassemblerInsn "mov" for 0x402a8b>, <DisassemblerInsn "mov" for 0x402a92>, <DisassemblerInsn "shl" for 0x402a95>, <DisassemblerInsn "mov" for 0x402a97>, <DisassemblerInsn "mov" for 0x402a99>, <DisassemblerInsn "mov" for 0x402a9c>, <DisassemblerInsn "add" for 0x402a9f>, <DisassemblerInsn "mov" for 0x402aa3>, <DisassemblerInsn "mov" for 0x402aa7>, <DisassemblerInsn "mov" for 0x402aaf>, <DisassemblerInsn "mov" for 0x402ab7>, <DisassemblerInsn "mov" for 0x402abf>, <DisassemblerInsn "mov" for 0x402ac7>, <DisassemblerInsn "mov" for 0x402acf>, <DisassemblerInsn "add" for 0x402ad7>, <DisassemblerInsn "movsxd" for 0x402adb>, <DisassemblerInsn "cmp" for 0x402ade>, <DisassemblerInsn "mov" for 0x402ae1>, <DisassemblerInsn "mov" for 0x402ae9>, <DisassemblerInsn "mov" for 0x402af1>, <DisassemblerInsn "jl" for 0x402af9>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d5c>, <DisassemblerInsn "mov" for 0x402d60>, <DisassemblerInsn "mov" for 0x402d68>, <DisassemblerInsn "add" for 0x402d6b>, <DisassemblerInsn "mov" for 0x402d72>, <DisassemblerInsn "mov" for 0x402d76>, <DisassemblerInsn "mov" for 0x402d7c>, <DisassemblerInsn "cmp" for 0x402d80>, <DisassemblerInsn "mov" for 0x402d83>, <DisassemblerInsn "je" for 0x402d8a>]'}, {'block_Idx': 380, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4022ca>]'}, {'block_Idx': 46, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e35>, <DisassemblerInsn "add" for 0x400e3d>, <DisassemblerInsn "mov" for 0x400e41>, <DisassemblerInsn "jmp" for 0x400e49>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40182e>, <DisassemblerInsn "mov" for 0x401835>, <DisassemblerInsn "mov" for 0x40183d>, <DisassemblerInsn "mov" for 0x401845>, <DisassemblerInsn "mov" for 0x401847>, <DisassemblerInsn "mov" for 0x40184e>, <DisassemblerInsn "sar" for 0x401850>, <DisassemblerInsn "movsxd" for 0x401853>, <DisassemblerInsn "mov" for 0x401856>, <DisassemblerInsn "ror" for 0x401859>, <DisassemblerInsn "ror" for 0x40185d>, <DisassemblerInsn "ror" for 0x401860>, <DisassemblerInsn "and" for 0x401864>, <DisassemblerInsn "mov" for 0x401867>, <DisassemblerInsn "shl" for 0x40186e>, <DisassemblerInsn "mov" for 0x401870>, <DisassemblerInsn "cmp" for 0x401877>, <DisassemblerInsn "jge" for 0x40187a>]'}, {'block_Idx': 246, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a53>, <DisassemblerInsn "mov" for 0x401a5a>, <DisassemblerInsn "mov" for 0x401a61>, <DisassemblerInsn "mov" for 0x401a68>, <DisassemblerInsn "xor" for 0x401a6b>, <DisassemblerInsn "sub" for 0x401a6d>, <DisassemblerInsn "shr" for 0x401a70>, <DisassemblerInsn "mov" for 0x401a72>, <DisassemblerInsn "add" for 0x401a7a>, <DisassemblerInsn "mov" for 0x401a7c>, <DisassemblerInsn "mov" for 0x401a7e>, <DisassemblerInsn "jmp" for 0x401a85>]'}, {'block_Idx': 296, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401def>, <DisassemblerInsn "mov" for 0x401df7>, <DisassemblerInsn "mov" for 0x401dfe>, <DisassemblerInsn "add" for 0x401e05>, <DisassemblerInsn "mov" for 0x401e08>, <DisassemblerInsn "sub" for 0x401e0a>, <DisassemblerInsn "mov" for 0x401e0d>, <DisassemblerInsn "mov" for 0x401e14>, <DisassemblerInsn "mov" for 0x401e1b>, <DisassemblerInsn "mov" for 0x401e22>, <DisassemblerInsn "cmp" for 0x401e29>, <DisassemblerInsn "jle" for 0x401e2c>]'}, {'block_Idx': 141, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40134a>]'}, {'block_Idx': 175, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4026c7>, <DisassemblerInsn "mov" for 0x4026cf>, <DisassemblerInsn "add" for 0x4026d2>, <DisassemblerInsn "mov" for 0x4026d6>, <DisassemblerInsn "cmp" for 0x4026de>, <DisassemblerInsn "jle" for 0x4026e2>]'}, {'block_Idx': 25, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d32>, <DisassemblerInsn "mov" for 0x402d3a>, <DisassemblerInsn "mov" for 0x402d44>, <DisassemblerInsn "mov" for 0x402d4e>, <DisassemblerInsn "mov" for 0x402d53>, <DisassemblerInsn "jmp" for 0x402d5a>]'}, {'block_Idx': 339, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40204a>, <DisassemblerInsn "mov" for 0x402051>, <DisassemblerInsn "mov" for 0x402058>, <DisassemblerInsn "movsxd" for 0x40205f>, <DisassemblerInsn "movsxd" for 0x402062>, <DisassemblerInsn "mov" for 0x402065>, <DisassemblerInsn "mov" for 0x40206d>, <DisassemblerInsn "mov" for 0x402075>, <DisassemblerInsn "mov" for 0x40207c>, <DisassemblerInsn "mov" for 0x402083>, <DisassemblerInsn "mov" for 0x40208b>, <DisassemblerInsn "mov" for 0x402093>, <DisassemblerInsn "add" for 0x40209b>, <DisassemblerInsn "mov" for 0x40209e>, <DisassemblerInsn "mov" for 0x4020a5>, <DisassemblerInsn "add" for 0x4020a8>, <DisassemblerInsn "mov" for 0x4020ac>, <DisassemblerInsn "cmp" for 0x4020b4>, <DisassemblerInsn "mov" for 0x4020b7>, <DisassemblerInsn "mov" for 0x4020bf>, <DisassemblerInsn "je" for 0x4020c6>]'}, {'block_Idx': 118, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40131e>, <DisassemblerInsn "sub" for 0x401325>, <DisassemblerInsn "je" for 0x401328>]'}, {'block_Idx': 170, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401649>, <DisassemblerInsn "mov" for 0x401651>, <DisassemblerInsn "xor" for 0x401654>, <DisassemblerInsn "lea" for 0x401656>, <DisassemblerInsn "mov" for 0x40165d>, <DisassemblerInsn "call" for 0x40165f>]'}, {'block_Idx': 216, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4028da>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400658>, <DisassemblerInsn "mov" for 0x40065f>, <DisassemblerInsn "mov" for 0x400666>, <DisassemblerInsn "mov" for 0x40066d>, <DisassemblerInsn "add" for 0x40066f>, <DisassemblerInsn "mov" for 0x400671>, <DisassemblerInsn "mov" for 0x400678>, <DisassemblerInsn "cmp" for 0x40067d>, <DisassemblerInsn "mov" for 0x40067f>, <DisassemblerInsn "jb" for 0x400686>]'}, {'block_Idx': 97, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401187>, <DisassemblerInsn "mov" for 0x40118f>, <DisassemblerInsn "mov" for 0x401197>, <DisassemblerInsn "mov" for 0x401199>, <DisassemblerInsn "sar" for 0x40119b>, <DisassemblerInsn "movsxd" for 0x40119e>, <DisassemblerInsn "mov" for 0x4011a1>, <DisassemblerInsn "ror" for 0x4011a4>, <DisassemblerInsn "ror" for 0x4011a8>, <DisassemblerInsn "ror" for 0x4011ab>, <DisassemblerInsn "mov" for 0x4011af>, <DisassemblerInsn "and" for 0x4011b1>, <DisassemblerInsn "shl" for 0x4011b4>, <DisassemblerInsn "mov" for 0x4011b6>, <DisassemblerInsn "shr" for 0x4011be>, <DisassemblerInsn "add" for 0x4011c1>, <DisassemblerInsn "mov" for 0x4011c4>, <DisassemblerInsn "add" for 0x4011c6>, <DisassemblerInsn "mov" for 0x4011c9>, <DisassemblerInsn "jmp" for 0x4011d0>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b81>, <DisassemblerInsn "mov" for 0x400b89>, <DisassemblerInsn "mov" for 0x400b90>, <DisassemblerInsn "add" for 0x400b92>, <DisassemblerInsn "mov" for 0x400b94>, <DisassemblerInsn "mov" for 0x400b96>, <DisassemblerInsn "mov" for 0x400b9d>, <DisassemblerInsn "shr" for 0x400ba2>, <DisassemblerInsn "mov" for 0x400ba4>, <DisassemblerInsn "and" for 0x400bab>, <DisassemblerInsn "cmp" for 0x400bad>, <DisassemblerInsn "je" for 0x400bb0>]'}, {'block_Idx': 217, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402892>, <DisassemblerInsn "mov" for 0x40289a>, <DisassemblerInsn "mov" for 0x4028a2>, <DisassemblerInsn "mov" for 0x4028aa>, <DisassemblerInsn "add" for 0x4028b2>, <DisassemblerInsn "movsxd" for 0x4028b6>, <DisassemblerInsn "cmp" for 0x4028b9>, <DisassemblerInsn "mov" for 0x4028bc>, <DisassemblerInsn "mov" for 0x4028c4>, <DisassemblerInsn "mov" for 0x4028cc>, <DisassemblerInsn "jl" for 0x4028d4>]'}, {'block_Idx': 89, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401146>]'}, {'block_Idx': 150, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b67>, <DisassemblerInsn "mov" for 0x400b6f>, <DisassemblerInsn "mov" for 0x400b75>, <DisassemblerInsn "cmp" for 0x400b7c>, <DisassemblerInsn "jle" for 0x400b7f>]'}, {'block_Idx': 40, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bee>, <DisassemblerInsn "mov" for 0x400bf6>, <DisassemblerInsn "mov" for 0x400bfd>, <DisassemblerInsn "mov" for 0x400bff>, <DisassemblerInsn "mov" for 0x400c06>, <DisassemblerInsn "cdq" for 0x400c0b>, <DisassemblerInsn "idiv" for 0x400c0c>, <DisassemblerInsn "add" for 0x400c0e>, <DisassemblerInsn "cmp" for 0x400c11>, <DisassemblerInsn "jge" for 0x400c13>]'}, {'block_Idx': 250, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401bfe>, <DisassemblerInsn "mov" for 0x401c06>, <DisassemblerInsn "mov" for 0x401c0e>, <DisassemblerInsn "mov" for 0x401c16>, <DisassemblerInsn "mov" for 0x401c1e>, <DisassemblerInsn "mov" for 0x401c26>, <DisassemblerInsn "mov" for 0x401c28>, <DisassemblerInsn "mov" for 0x401c2f>, <DisassemblerInsn "mov" for 0x401c31>, <DisassemblerInsn "mov" for 0x401c38>, <DisassemblerInsn "sar" for 0x401c3a>, <DisassemblerInsn "movsxd" for 0x401c3d>, <DisassemblerInsn "mov" for 0x401c40>, <DisassemblerInsn "ror" for 0x401c43>, <DisassemblerInsn "ror" for 0x401c47>, <DisassemblerInsn "ror" for 0x401c4a>, <DisassemblerInsn "and" for 0x401c4e>, <DisassemblerInsn "mov" for 0x401c51>, <DisassemblerInsn "shl" for 0x401c58>, <DisassemblerInsn "mov" for 0x401c5a>, <DisassemblerInsn "cmp" for 0x401c61>, <DisassemblerInsn "jge" for 0x401c64>]'}, {'block_Idx': 176, 'blockInsts': '[<DisassemblerInsn "lea" for 0x40275e>, <DisassemblerInsn "lea" for 0x402765>, <DisassemblerInsn "mov" for 0x40276c>, <DisassemblerInsn "lea" for 0x402771>, <DisassemblerInsn "call" for 0x402778>]'}, {'block_Idx': 159, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402408>, <DisassemblerInsn "lea" for 0x402410>, <DisassemblerInsn "movsxd" for 0x402417>, <DisassemblerInsn "add" for 0x40241b>, <DisassemblerInsn "jmp" for 0x40241e>]'}, {'block_Idx': 163, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4015d2>]'}, {'block_Idx': 108, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012cf>, <DisassemblerInsn "cmp" for 0x4012d6>, <DisassemblerInsn "jne" for 0x4012d9>]'}, {'block_Idx': 174, 'blockInsts': '[<DisassemblerInsn "lea" for 0x402b98>, <DisassemblerInsn "lea" for 0x402b9f>, <DisassemblerInsn "mov" for 0x402ba6>, <DisassemblerInsn "lea" for 0x402bab>, <DisassemblerInsn "call" for 0x402bb2>]'}, {'block_Idx': 237, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022cc>, <DisassemblerInsn "mov" for 0x4022d4>, <DisassemblerInsn "xor" for 0x4022d7>, <DisassemblerInsn "lea" for 0x4022d9>, <DisassemblerInsn "mov" for 0x4022e0>, <DisassemblerInsn "call" for 0x4022e2>]'}, {'block_Idx': 225, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402376>, <DisassemblerInsn "mov" for 0x40237e>, <DisassemblerInsn "add" for 0x402386>, <DisassemblerInsn "movsxd" for 0x40238a>, <DisassemblerInsn "cmp" for 0x40238d>, <DisassemblerInsn "mov" for 0x402390>, <DisassemblerInsn "jl" for 0x402398>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40068c>, <DisassemblerInsn "mov" for 0x400693>, <DisassemblerInsn "mov" for 0x40069a>, <DisassemblerInsn "mov" for 0x4006a2>, <DisassemblerInsn "add" for 0x4006a5>, <DisassemblerInsn "mov" for 0x4006ac>, <DisassemblerInsn "mov" for 0x4006b4>, <DisassemblerInsn "add" for 0x4006ba>, <DisassemblerInsn "xor" for 0x4006bc>, <DisassemblerInsn "mov" for 0x4006bf>, <DisassemblerInsn "cmp" for 0x4006c4>, <DisassemblerInsn "mov" for 0x4006c6>, <DisassemblerInsn "ja" for 0x4006cd>]'}, {'block_Idx': 303, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e5d>, <DisassemblerInsn "mov" for 0x401e64>, <DisassemblerInsn "mov" for 0x401e6b>, <DisassemblerInsn "cmp" for 0x401e72>, <DisassemblerInsn "jle" for 0x401e75>]'}, {'block_Idx': 247, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a8a>, <DisassemblerInsn "mov" for 0x401a92>, <DisassemblerInsn "mov" for 0x401a99>, <DisassemblerInsn "mov" for 0x401aa0>, <DisassemblerInsn "mov" for 0x401aa8>, <DisassemblerInsn "shr" for 0x401ab0>, <DisassemblerInsn "mov" for 0x401ab4>, <DisassemblerInsn "add" for 0x401ab7>, <DisassemblerInsn "mov" for 0x401abb>, <DisassemblerInsn "mov" for 0x401abe>, <DisassemblerInsn "add" for 0x401ac0>, <DisassemblerInsn "mov" for 0x401ac3>, <DisassemblerInsn "shl" for 0x401aca>, <DisassemblerInsn "mov" for 0x401acd>, <DisassemblerInsn "mov" for 0x401ad4>, <DisassemblerInsn "sar" for 0x401adc>, <DisassemblerInsn "movsxd" for 0x401ae0>, <DisassemblerInsn "mov" for 0x401ae3>, <DisassemblerInsn "ror" for 0x401ae7>, <DisassemblerInsn "ror" for 0x401aeb>, <DisassemblerInsn "ror" for 0x401aee>, <DisassemblerInsn "shl" for 0x401af2>, <DisassemblerInsn "mov" for 0x401af4>, <DisassemblerInsn "mov" for 0x401afb>, <DisassemblerInsn "xor" for 0x401afe>, <DisassemblerInsn "sub" for 0x401b00>, <DisassemblerInsn "shr" for 0x401b03>, <DisassemblerInsn "mov" for 0x401b05>, <DisassemblerInsn "add" for 0x401b0c>, <DisassemblerInsn "mov" for 0x401b0e>, <DisassemblerInsn "or" for 0x401b10>, <DisassemblerInsn "mov" for 0x401b12>, <DisassemblerInsn "mov" for 0x401b19>, <DisassemblerInsn "mov" for 0x401b21>, <DisassemblerInsn "mov" for 0x401b29>, <DisassemblerInsn "mov" for 0x401b30>, <DisassemblerInsn "mov" for 0x401b37>, <DisassemblerInsn "sub" for 0x401b3c>, <DisassemblerInsn "mov" for 0x401b3e>, <DisassemblerInsn "shl" for 0x401b45>, <DisassemblerInsn "mov" for 0x401b47>, <DisassemblerInsn "sar" for 0x401b4e>, <DisassemblerInsn "mov" for 0x401b50>, <DisassemblerInsn "mov" for 0x401b58>, <DisassemblerInsn "mov" for 0x401b5b>, <DisassemblerInsn "add" for 0x401b5e>, <DisassemblerInsn "movsxd" for 0x401b62>, <DisassemblerInsn "cmp" for 0x401b65>, <DisassemblerInsn "mov" for 0x401b68>, <DisassemblerInsn "jl" for 0x401b70>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ce5>, <DisassemblerInsn "mov" for 0x402cec>, <DisassemblerInsn "mov" for 0x402cf4>, <DisassemblerInsn "add" for 0x402cf6>, <DisassemblerInsn "mov" for 0x402cf9>, <DisassemblerInsn "cdq" for 0x402cfe>, <DisassemblerInsn "idiv" for 0x402cff>, <DisassemblerInsn "mov" for 0x402d01>, <DisassemblerInsn "cmp" for 0x402d05>, <DisassemblerInsn "jle" for 0x402d07>]'}, {'block_Idx': 82, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401070>, <DisassemblerInsn "mov" for 0x401078>, <DisassemblerInsn "mov" for 0x401080>, <DisassemblerInsn "mov" for 0x401088>, <DisassemblerInsn "add" for 0x40108f>, <DisassemblerInsn "mov" for 0x401092>, <DisassemblerInsn "mov" for 0x401099>, <DisassemblerInsn "mov" for 0x40109b>, <DisassemblerInsn "sar" for 0x40109d>, <DisassemblerInsn "movsxd" for 0x4010a0>, <DisassemblerInsn "mov" for 0x4010a3>, <DisassemblerInsn "ror" for 0x4010a6>, <DisassemblerInsn "ror" for 0x4010aa>, <DisassemblerInsn "ror" for 0x4010ad>, <DisassemblerInsn "mov" for 0x4010b1>, <DisassemblerInsn "and" for 0x4010b3>, <DisassemblerInsn "shl" for 0x4010b6>, <DisassemblerInsn "mov" for 0x4010b8>, <DisassemblerInsn "shr" for 0x4010bf>, <DisassemblerInsn "add" for 0x4010c2>, <DisassemblerInsn "mov" for 0x4010c5>, <DisassemblerInsn "add" for 0x4010c7>, <DisassemblerInsn "cmp" for 0x4010ca>, <DisassemblerInsn "setb" for 0x4010cd>, <DisassemblerInsn "mov" for 0x4010d1>, <DisassemblerInsn "shl" for 0x4010d4>, <DisassemblerInsn "movsxd" for 0x4010d8>, <DisassemblerInsn "add" for 0x4010db>, <DisassemblerInsn "cmp" for 0x4010de>, <DisassemblerInsn "cmovb" for 0x4010e1>, <DisassemblerInsn "mov" for 0x4010e5>, <DisassemblerInsn "test" for 0x4010ec>, <DisassemblerInsn "mov" for 0x4010f0>, <DisassemblerInsn "mov" for 0x4010f8>, <DisassemblerInsn "mov" for 0x4010ff>, <DisassemblerInsn "jne" for 0x401107>]'}, {'block_Idx': 215, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c7f>, <DisassemblerInsn "mov" for 0x402c87>, <DisassemblerInsn "mov" for 0x402c8c>, <DisassemblerInsn "mov" for 0x402c91>, <DisassemblerInsn "add" for 0x402c96>, <DisassemblerInsn "movsxd" for 0x402c9a>, <DisassemblerInsn "cmp" for 0x402c9d>, <DisassemblerInsn "mov" for 0x402ca0>, <DisassemblerInsn "mov" for 0x402ca5>, <DisassemblerInsn "mov" for 0x402caa>, <DisassemblerInsn "jl" for 0x402cb2>]'}, {'block_Idx': 241, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d83>, <DisassemblerInsn "mov" for 0x401d8a>, <DisassemblerInsn "mov" for 0x401d92>, <DisassemblerInsn "mov" for 0x401d9a>, <DisassemblerInsn "call" for 0x401d9c>]'}, {'block_Idx': 254, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b19>, <DisassemblerInsn "mov" for 0x401b21>, <DisassemblerInsn "mov" for 0x401b29>, <DisassemblerInsn "mov" for 0x401b30>, <DisassemblerInsn "mov" for 0x401b37>, <DisassemblerInsn "sub" for 0x401b3c>, <DisassemblerInsn "mov" for 0x401b3e>, <DisassemblerInsn "shl" for 0x401b45>, <DisassemblerInsn "mov" for 0x401b47>, <DisassemblerInsn "sar" for 0x401b4e>, <DisassemblerInsn "mov" for 0x401b50>, <DisassemblerInsn "mov" for 0x401b58>, <DisassemblerInsn "mov" for 0x401b5b>, <DisassemblerInsn "add" for 0x401b5e>, <DisassemblerInsn "movsxd" for 0x401b62>, <DisassemblerInsn "cmp" for 0x401b65>, <DisassemblerInsn "mov" for 0x401b68>, <DisassemblerInsn "jl" for 0x401b70>]'}, {'block_Idx': 192, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401664>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4029a7>, <DisassemblerInsn "mov" for 0x4029af>, <DisassemblerInsn "mov" for 0x4029b7>, <DisassemblerInsn "mov" for 0x4029bf>, <DisassemblerInsn "mov" for 0x4029c7>, <DisassemblerInsn "mov" for 0x4029cf>, <DisassemblerInsn "mov" for 0x4029d7>, <DisassemblerInsn "mov" for 0x4029df>, <DisassemblerInsn "mov" for 0x4029e7>, <DisassemblerInsn "mov" for 0x4029ef>, <DisassemblerInsn "mov" for 0x4029f2>, <DisassemblerInsn "mov" for 0x4029f5>, <DisassemblerInsn "mov" for 0x4029fc>, <DisassemblerInsn "add" for 0x4029fe>, <DisassemblerInsn "mov" for 0x402a00>, <DisassemblerInsn "cmp" for 0x402a07>, <DisassemblerInsn "je" for 0x402a0a>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40098f>, <DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "mov" for 0x40099f>, <DisassemblerInsn "mov" for 0x4009a1>, <DisassemblerInsn "mov" for 0x4009a4>, <DisassemblerInsn "mov" for 0x4009ac>, <DisassemblerInsn "sar" for 0x4009ae>, <DisassemblerInsn "movsxd" for 0x4009b1>, <DisassemblerInsn "mov" for 0x4009b4>, <DisassemblerInsn "mov" for 0x4009b7>, <DisassemblerInsn "and" for 0x4009b9>, <DisassemblerInsn "mov" for 0x4009bc>, <DisassemblerInsn "movzx" for 0x4009c3>, <DisassemblerInsn "mov" for 0x4009c6>, <DisassemblerInsn "mov" for 0x4009cd>, <DisassemblerInsn "add" for 0x4009cf>, <DisassemblerInsn "mov" for 0x4009d2>, <DisassemblerInsn "mov" for 0x4009d4>, <DisassemblerInsn "sar" for 0x4009d6>, <DisassemblerInsn "movsxd" for 0x4009d9>, <DisassemblerInsn "mov" for 0x4009dc>, <DisassemblerInsn "ror" for 0x4009df>, <DisassemblerInsn "ror" for 0x4009e3>, <DisassemblerInsn "ror" for 0x4009e6>, <DisassemblerInsn "and" for 0x4009ea>, <DisassemblerInsn "shl" for 0x4009ed>, <DisassemblerInsn "mov" for 0x4009ef>, <DisassemblerInsn "shr" for 0x4009f6>, <DisassemblerInsn "mov" for 0x4009f9>, <DisassemblerInsn "mov" for 0x400a00>, <DisassemblerInsn "add" for 0x400a02>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "sar" for 0x400a07>, <DisassemblerInsn "movsxd" for 0x400a0a>, <DisassemblerInsn "mov" for 0x400a0d>, <DisassemblerInsn "ror" for 0x400a10>, <DisassemblerInsn "ror" for 0x400a14>, <DisassemblerInsn "ror" for 0x400a17>, <DisassemblerInsn "shl" for 0x400a1b>, <DisassemblerInsn "mov" for 0x400a1d>, <DisassemblerInsn "shr" for 0x400a24>, <DisassemblerInsn "mov" for 0x400a27>, <DisassemblerInsn "add" for 0x400a2a>, <DisassemblerInsn "mov" for 0x400a2e>, <DisassemblerInsn "shl" for 0x400a31>, <DisassemblerInsn "sar" for 0x400a34>, <DisassemblerInsn "movsxd" for 0x400a38>, <DisassemblerInsn "mov" for 0x400a3b>, <DisassemblerInsn "ror" for 0x400a3f>, <DisassemblerInsn "ror" for 0x400a43>, <DisassemblerInsn "ror" for 0x400a46>, <DisassemblerInsn "shl" for 0x400a4a>, <DisassemblerInsn "mov" for 0x400a4c>, <DisassemblerInsn "shr" for 0x400a54>, <DisassemblerInsn "add" for 0x400a57>, <DisassemblerInsn "mov" for 0x400a5a>, <DisassemblerInsn "mov" for 0x400a61>, <DisassemblerInsn "or" for 0x400a63>, <DisassemblerInsn "mov" for 0x400a65>, <DisassemblerInsn "shl" for 0x400a6c>, <DisassemblerInsn "mov" for 0x400a6f>, <DisassemblerInsn "add" for 0x400a76>, <DisassemblerInsn "mov" for 0x400a78>, <DisassemblerInsn "mov" for 0x400a7a>, <DisassemblerInsn "cmp" for 0x400a81>, <DisassemblerInsn "jle" for 0x400a83>]'}, {'block_Idx': 73, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40110d>, <DisassemblerInsn "cmp" for 0x401115>, <DisassemblerInsn "jge" for 0x401119>]'}, {'block_Idx': 281, 'blockInsts': '[<DisassemblerInsn "sub" for 0x403730>, <DisassemblerInsn "mov" for 0x403737>, <DisassemblerInsn "mov" for 0x40373e>, <DisassemblerInsn "mov" for 0x403745>, <DisassemblerInsn "mov" for 0x40374d>, <DisassemblerInsn "add" for 0x403750>, <DisassemblerInsn "mov" for 0x403754>, <DisassemblerInsn "mov" for 0x40375c>, <DisassemblerInsn "mov" for 0x40375f>, <DisassemblerInsn "mov" for 0x403766>, <DisassemblerInsn "mov" for 0x40376a>, <DisassemblerInsn "mov" for 0x403772>, <DisassemblerInsn "sar" for 0x403774>, <DisassemblerInsn "movsxd" for 0x403777>, <DisassemblerInsn "mov" for 0x40377a>, <DisassemblerInsn "ror" for 0x40377d>, <DisassemblerInsn "ror" for 0x403781>, <DisassemblerInsn "ror" for 0x403784>, <DisassemblerInsn "and" for 0x403788>, <DisassemblerInsn "shl" for 0x40378b>, <DisassemblerInsn "mov" for 0x40378d>, <DisassemblerInsn "shr" for 0x403794>, <DisassemblerInsn "mov" for 0x403797>, <DisassemblerInsn "add" for 0x40379e>, <DisassemblerInsn "mov" for 0x4037a1>, <DisassemblerInsn "mov" for 0x4037a8>, <DisassemblerInsn "cmp" for 0x4037ab>, <DisassemblerInsn "jle" for 0x4037ae>]'}, {'block_Idx': 327, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402034>, <DisassemblerInsn "mov" for 0x40203b>, <DisassemblerInsn "cmp" for 0x402042>, <DisassemblerInsn "jle" for 0x402044>]'}, {'block_Idx': 27, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b0d>, <DisassemblerInsn "cmp" for 0x400b14>, <DisassemblerInsn "jne" for 0x400b17>]'}, {'block_Idx': 209, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402a0c>, <DisassemblerInsn "mov" for 0x402a14>, <DisassemblerInsn "mov" for 0x402a1b>, <DisassemblerInsn "mov" for 0x402a23>, <DisassemblerInsn "mov" for 0x402a2a>, <DisassemblerInsn "shl" for 0x402a2c>, <DisassemblerInsn "mov" for 0x402a2e>, <DisassemblerInsn "mov" for 0x402a30>, <DisassemblerInsn "mov" for 0x402a32>, <DisassemblerInsn "shl" for 0x402a34>, <DisassemblerInsn "mov" for 0x402a36>, <DisassemblerInsn "mov" for 0x402a3e>, <DisassemblerInsn "add" for 0x402a41>, <DisassemblerInsn "mov" for 0x402a45>, <DisassemblerInsn "mov" for 0x402a48>, <DisassemblerInsn "mov" for 0x402a50>, <DisassemblerInsn "jmp" for 0x402a58>]'}, {'block_Idx': 110, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40121d>, <DisassemblerInsn "movsxd" for 0x401224>, <DisassemblerInsn "lea" for 0x401227>, <DisassemblerInsn "mov" for 0x40122e>, <DisassemblerInsn "mov" for 0x401231>, <DisassemblerInsn "mov" for 0x401238>, <DisassemblerInsn "mov" for 0x401240>, <DisassemblerInsn "mov" for 0x401247>, <DisassemblerInsn "mov" for 0x40124e>, <DisassemblerInsn "mov" for 0x401250>, <DisassemblerInsn "cmp" for 0x401257>, <DisassemblerInsn "jle" for 0x401259>]'}, {'block_Idx': 171, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015e8>, <DisassemblerInsn "mov" for 0x4015f0>, <DisassemblerInsn "mov" for 0x4015f8>, <DisassemblerInsn "mov" for 0x4015fa>, <DisassemblerInsn "mov" for 0x401601>, <DisassemblerInsn "mov" for 0x401604>, <DisassemblerInsn "mov" for 0x40160c>, <DisassemblerInsn "sar" for 0x40160e>, <DisassemblerInsn "movsxd" for 0x401611>, <DisassemblerInsn "mov" for 0x401614>, <DisassemblerInsn "mov" for 0x401618>, <DisassemblerInsn "and" for 0x40161a>, <DisassemblerInsn "movzx" for 0x40161d>, <DisassemblerInsn "mov" for 0x401621>, <DisassemblerInsn "add" for 0x401628>, <DisassemblerInsn "mov" for 0x40162b>, <DisassemblerInsn "mov" for 0x401632>, <DisassemblerInsn "mov" for 0x401634>, <DisassemblerInsn "shr" for 0x401639>, <DisassemblerInsn "mov" for 0x40163b>, <DisassemblerInsn "and" for 0x401642>, <DisassemblerInsn "cmp" for 0x401644>, <DisassemblerInsn "je" for 0x401647>]'}, {'block_Idx': 362, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402139>]'}, {'block_Idx': 119, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b5a>, <DisassemblerInsn "call" for 0x400b62>]'}, {'block_Idx': 125, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40132c>, <DisassemblerInsn "sub" for 0x401333>, <DisassemblerInsn "je" for 0x401336>]'}, {'block_Idx': 161, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015d4>, <DisassemblerInsn "mov" for 0x4015dc>, <DisassemblerInsn "add" for 0x4015e3>, <DisassemblerInsn "mov" for 0x4015e6>, <DisassemblerInsn "mov" for 0x4015e8>, <DisassemblerInsn "mov" for 0x4015f0>, <DisassemblerInsn "mov" for 0x4015f8>, <DisassemblerInsn "mov" for 0x4015fa>, <DisassemblerInsn "mov" for 0x401601>, <DisassemblerInsn "mov" for 0x401604>, <DisassemblerInsn "mov" for 0x40160c>, <DisassemblerInsn "sar" for 0x40160e>, <DisassemblerInsn "movsxd" for 0x401611>, <DisassemblerInsn "mov" for 0x401614>, <DisassemblerInsn "mov" for 0x401618>, <DisassemblerInsn "and" for 0x40161a>, <DisassemblerInsn "movzx" for 0x40161d>, <DisassemblerInsn "mov" for 0x401621>, <DisassemblerInsn "add" for 0x401628>, <DisassemblerInsn "mov" for 0x40162b>, <DisassemblerInsn "mov" for 0x401632>, <DisassemblerInsn "mov" for 0x401634>, <DisassemblerInsn "shr" for 0x401639>, <DisassemblerInsn "mov" for 0x40163b>, <DisassemblerInsn "and" for 0x401642>, <DisassemblerInsn "cmp" for 0x401644>, <DisassemblerInsn "je" for 0x401647>]'}, {'block_Idx': 222, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401981>, <DisassemblerInsn "mov" for 0x401989>, <DisassemblerInsn "mov" for 0x401991>, <DisassemblerInsn "mov" for 0x401996>, <DisassemblerInsn "xor" for 0x40199e>, <DisassemblerInsn "mov" for 0x4019a0>, <DisassemblerInsn "mov" for 0x4019a8>, <DisassemblerInsn "mov" for 0x4019b0>, <DisassemblerInsn "mov" for 0x4019b8>, <DisassemblerInsn "mov" for 0x4019c0>, <DisassemblerInsn "mov" for 0x4019c7>, <DisassemblerInsn "add" for 0x4019ca>, <DisassemblerInsn "mov" for 0x4019ce>, <DisassemblerInsn "movsxd" for 0x4019d6>, <DisassemblerInsn "cmp" for 0x4019d9>, <DisassemblerInsn "mov" for 0x4019dc>, <DisassemblerInsn "jl" for 0x4019e4>]'}, {'block_Idx': 232, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401573>, <DisassemblerInsn "mov" for 0x40157b>, <DisassemblerInsn "mov" for 0x401583>, <DisassemblerInsn "mov" for 0x40158b>, <DisassemblerInsn "mov" for 0x401593>, <DisassemblerInsn "mov" for 0x40159b>, <DisassemblerInsn "mov" for 0x40159d>, <DisassemblerInsn "mov" for 0x4015a4>, <DisassemblerInsn "mov" for 0x4015a6>, <DisassemblerInsn "mov" for 0x4015a8>, <DisassemblerInsn "cmp" for 0x4015af>, <DisassemblerInsn "jne" for 0x4015b3>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40092b>, <DisassemblerInsn "mov" for 0x400933>, <DisassemblerInsn "add" for 0x400936>, <DisassemblerInsn "mov" for 0x40093a>, <DisassemblerInsn "mov" for 0x400942>, <DisassemblerInsn "add" for 0x400945>, <DisassemblerInsn "mov" for 0x400948>, <DisassemblerInsn "mov" for 0x40094b>, <DisassemblerInsn "add" for 0x40094e>, <DisassemblerInsn "mov" for 0x400952>, <DisassemblerInsn "mov" for 0x40095a>, <DisassemblerInsn "add" for 0x40095d>, <DisassemblerInsn "mov" for 0x400961>, <DisassemblerInsn "mov" for 0x400969>, <DisassemblerInsn "add" for 0x40096c>, <DisassemblerInsn "mov" for 0x400970>, <DisassemblerInsn "mov" for 0x400978>, <DisassemblerInsn "add" for 0x40097b>, <DisassemblerInsn "mov" for 0x40097f>, <DisassemblerInsn "mov" for 0x400987>, <DisassemblerInsn "mov" for 0x40098f>, <DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "mov" for 0x40099f>, <DisassemblerInsn "mov" for 0x4009a1>, <DisassemblerInsn "mov" for 0x4009a4>, <DisassemblerInsn "mov" for 0x4009ac>, <DisassemblerInsn "sar" for 0x4009ae>, <DisassemblerInsn "movsxd" for 0x4009b1>, <DisassemblerInsn "mov" for 0x4009b4>, <DisassemblerInsn "mov" for 0x4009b7>, <DisassemblerInsn "and" for 0x4009b9>, <DisassemblerInsn "mov" for 0x4009bc>, <DisassemblerInsn "movzx" for 0x4009c3>, <DisassemblerInsn "mov" for 0x4009c6>, <DisassemblerInsn "mov" for 0x4009cd>, <DisassemblerInsn "add" for 0x4009cf>, <DisassemblerInsn "mov" for 0x4009d2>, <DisassemblerInsn "mov" for 0x4009d4>, <DisassemblerInsn "sar" for 0x4009d6>, <DisassemblerInsn "movsxd" for 0x4009d9>, <DisassemblerInsn "mov" for 0x4009dc>, <DisassemblerInsn "ror" for 0x4009df>, <DisassemblerInsn "ror" for 0x4009e3>, <DisassemblerInsn "ror" for 0x4009e6>, <DisassemblerInsn "and" for 0x4009ea>, <DisassemblerInsn "shl" for 0x4009ed>, <DisassemblerInsn "mov" for 0x4009ef>, <DisassemblerInsn "shr" for 0x4009f6>, <DisassemblerInsn "mov" for 0x4009f9>, <DisassemblerInsn "mov" for 0x400a00>, <DisassemblerInsn "add" for 0x400a02>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "sar" for 0x400a07>, <DisassemblerInsn "movsxd" for 0x400a0a>, <DisassemblerInsn "mov" for 0x400a0d>, <DisassemblerInsn "ror" for 0x400a10>, <DisassemblerInsn "ror" for 0x400a14>, <DisassemblerInsn "ror" for 0x400a17>, <DisassemblerInsn "shl" for 0x400a1b>, <DisassemblerInsn "mov" for 0x400a1d>, <DisassemblerInsn "shr" for 0x400a24>, <DisassemblerInsn "mov" for 0x400a27>, <DisassemblerInsn "add" for 0x400a2a>, <DisassemblerInsn "mov" for 0x400a2e>, <DisassemblerInsn "shl" for 0x400a31>, <DisassemblerInsn "sar" for 0x400a34>, <DisassemblerInsn "movsxd" for 0x400a38>, <DisassemblerInsn "mov" for 0x400a3b>, <DisassemblerInsn "ror" for 0x400a3f>, <DisassemblerInsn "ror" for 0x400a43>, <DisassemblerInsn "ror" for 0x400a46>, <DisassemblerInsn "shl" for 0x400a4a>, <DisassemblerInsn "mov" for 0x400a4c>, <DisassemblerInsn "shr" for 0x400a54>, <DisassemblerInsn "add" for 0x400a57>, <DisassemblerInsn "mov" for 0x400a5a>, <DisassemblerInsn "mov" for 0x400a61>, <DisassemblerInsn "or" for 0x400a63>, <DisassemblerInsn "mov" for 0x400a65>, <DisassemblerInsn "shl" for 0x400a6c>, <DisassemblerInsn "mov" for 0x400a6f>, <DisassemblerInsn "add" for 0x400a76>, <DisassemblerInsn "mov" for 0x400a78>, <DisassemblerInsn "mov" for 0x400a7a>, <DisassemblerInsn "cmp" for 0x400a81>, <DisassemblerInsn "jle" for 0x400a83>]'}, {'block_Idx': 50, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c19>, <DisassemblerInsn "mov" for 0x400c20>, <DisassemblerInsn "mov" for 0x400c28>, <DisassemblerInsn "mov" for 0x400c2b>, <DisassemblerInsn "mov" for 0x400c33>, <DisassemblerInsn "and" for 0x400c35>, <DisassemblerInsn "mov" for 0x400c38>, <DisassemblerInsn "mov" for 0x400c3f>, <DisassemblerInsn "mov" for 0x400c46>, <DisassemblerInsn "mov" for 0x400c4d>, <DisassemblerInsn "mov" for 0x400c55>, <DisassemblerInsn "mov" for 0x400c5c>, <DisassemblerInsn "sar" for 0x400c63>, <DisassemblerInsn "movsxd" for 0x400c66>, <DisassemblerInsn "mov" for 0x400c69>, <DisassemblerInsn "ror" for 0x400c6c>, <DisassemblerInsn "ror" for 0x400c70>, <DisassemblerInsn "ror" for 0x400c73>, <DisassemblerInsn "shl" for 0x400c77>, <DisassemblerInsn "shr" for 0x400c79>, <DisassemblerInsn "and" for 0x400c7c>, <DisassemblerInsn "cmp" for 0x400c81>, <DisassemblerInsn "je" for 0x400c86>]'}, {'block_Idx': 162, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4015c1>]'}, {'block_Idx': 106, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401162>]'}, {'block_Idx': 351, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4020ce>, <DisassemblerInsn "mov" for 0x4020d6>, <DisassemblerInsn "mov" for 0x4020dd>, <DisassemblerInsn "mov" for 0x4020e5>, <DisassemblerInsn "mov" for 0x4020ed>, <DisassemblerInsn "add" for 0x4020f5>, <DisassemblerInsn "mov" for 0x4020f8>, <DisassemblerInsn "mov" for 0x4020ff>, <DisassemblerInsn "add" for 0x402101>, <DisassemblerInsn "mov" for 0x402104>, <DisassemblerInsn "mov" for 0x40210b>, <DisassemblerInsn "add" for 0x40210e>, <DisassemblerInsn "mov" for 0x402112>, <DisassemblerInsn "cmp" for 0x40211a>, <DisassemblerInsn "mov" for 0x40211d>, <DisassemblerInsn "mov" for 0x402125>, <DisassemblerInsn "mov" for 0x40212c>, <DisassemblerInsn "je" for 0x402133>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402bb7>, <DisassemblerInsn "mov" for 0x402bbc>, <DisassemblerInsn "mov" for 0x402bc1>, <DisassemblerInsn "mov" for 0x402bc6>, <DisassemblerInsn "mov" for 0x402bcb>, <DisassemblerInsn "mov" for 0x402bd0>, <DisassemblerInsn "mov" for 0x402bd8>, <DisassemblerInsn "mov" for 0x402bdd>, <DisassemblerInsn "mov" for 0x402be2>, <DisassemblerInsn "mov" for 0x402be7>, <DisassemblerInsn "mov" for 0x402bea>, <DisassemblerInsn "mov" for 0x402bed>, <DisassemblerInsn "mov" for 0x402bef>, <DisassemblerInsn "sar" for 0x402bf1>, <DisassemblerInsn "sub" for 0x402bf3>, <DisassemblerInsn "mov" for 0x402bf5>, <DisassemblerInsn "add" for 0x402bf9>, <DisassemblerInsn "mov" for 0x402bfb>, <DisassemblerInsn "cmp" for 0x402bff>, <DisassemblerInsn "je" for 0x402c02>]'}, {'block_Idx': 183, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b37>, <DisassemblerInsn "mov" for 0x402b3f>, <DisassemblerInsn "mov" for 0x402b47>, <DisassemblerInsn "mov" for 0x402b4f>, <DisassemblerInsn "mov" for 0x402b53>, <DisassemblerInsn "mov" for 0x402b58>, <DisassemblerInsn "mov" for 0x402b5c>, <DisassemblerInsn "mov" for 0x402b61>, <DisassemblerInsn "add" for 0x402b64>, <DisassemblerInsn "mov" for 0x402b68>, <DisassemblerInsn "mov" for 0x402b6d>, <DisassemblerInsn "add" for 0x402b70>, <DisassemblerInsn "mov" for 0x402b74>, <DisassemblerInsn "add" for 0x402b79>, <DisassemblerInsn "mov" for 0x402b7d>, <DisassemblerInsn "xor" for 0x402b82>, <DisassemblerInsn "mov" for 0x402b84>, <DisassemblerInsn "mov" for 0x402b89>, <DisassemblerInsn "mov" for 0x402b8e>, <DisassemblerInsn "jmp" for 0x402b96>]'}, {'block_Idx': 182, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024f7>, <DisassemblerInsn "mov" for 0x4024ff>, <DisassemblerInsn "mov" for 0x402507>, <DisassemblerInsn "mov" for 0x40250f>, <DisassemblerInsn "mov" for 0x402517>, <DisassemblerInsn "xor" for 0x40251f>, <DisassemblerInsn "cmp" for 0x402521>, <DisassemblerInsn "mov" for 0x402524>, <DisassemblerInsn "mov" for 0x40252c>, <DisassemblerInsn "mov" for 0x402534>, <DisassemblerInsn "jle" for 0x40253c>]'}, {'block_Idx': 249, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d2c>, <DisassemblerInsn "mov" for 0x401d34>, <DisassemblerInsn "mov" for 0x401d3c>, <DisassemblerInsn "mov" for 0x401d43>, <DisassemblerInsn "mov" for 0x401d4a>, <DisassemblerInsn "sub" for 0x401d4f>, <DisassemblerInsn "mov" for 0x401d51>, <DisassemblerInsn "shl" for 0x401d58>, <DisassemblerInsn "mov" for 0x401d5a>, <DisassemblerInsn "sar" for 0x401d61>, <DisassemblerInsn "mov" for 0x401d63>, <DisassemblerInsn "mov" for 0x401d6b>, <DisassemblerInsn "add" for 0x401d6e>, <DisassemblerInsn "cmp" for 0x401d72>, <DisassemblerInsn "mov" for 0x401d75>, <DisassemblerInsn "jne" for 0x401d7d>]'}, {'block_Idx': 81, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40113b>, <DisassemblerInsn "test" for 0x401142>, <DisassemblerInsn "je" for 0x401144>]'}, {'block_Idx': 294, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401dd5>, <DisassemblerInsn "mov" for 0x401ddc>, <DisassemblerInsn "mov" for 0x401de3>, <DisassemblerInsn "cmp" for 0x401dea>, <DisassemblerInsn "jle" for 0x401ded>]'}, {'block_Idx': 191, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40176e>, <DisassemblerInsn "mov" for 0x401775>, <DisassemblerInsn "mov" for 0x40177d>, <DisassemblerInsn "sub" for 0x40177f>, <DisassemblerInsn "mov" for 0x401781>, <DisassemblerInsn "mov" for 0x401783>, <DisassemblerInsn "mov" for 0x40178a>, <DisassemblerInsn "mov" for 0x401792>, <DisassemblerInsn "mov" for 0x401799>, <DisassemblerInsn "mov" for 0x4017a0>, <DisassemblerInsn "mov" for 0x4017a2>, <DisassemblerInsn "cmp" for 0x4017a9>, <DisassemblerInsn "jle" for 0x4017ac>]'}], 'cfg_block_detailed_info': [{'block_Idx': 220, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x468]>', '<mov~~esi, dword ptr [rsp + 0x408]>', '<mov~~edx, dword ptr [rsp + 0x3e0]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3d0], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3d0]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3d4], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x4022ec>']}, {'block_Idx': 204, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x30]>', '<mov~~rdx, qword ptr [rsp + 0x28]>', '<mov~~esi, dword ptr [rsp + 0x40]>', '<mov~~edi, dword ptr [rsp + 0x44]>', '<mov~~rcx, qword ptr [rsp + 0x68]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x14], ecx>', '<shl~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x14]>', '<mov~~word ptr [rdx], di>', '<shl~~esi, cl>', '<mov~~ecx, esi>', '<mov~~si, cx>', '<mov~~rcx, rdx>', '<add~~rcx, 4>', '<mov~~word ptr [rdx + 2], si>', '<mov~~qword ptr [rsp + 0x18], rcx>', '<mov~~qword ptr [rsp + 0x20], rax>', '<mov~~rsi, qword ptr [rsp + 0x88]>', '<mov~~rdx, qword ptr [rsp + 0x38]>', '<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~rcx, qword ptr [rsp + 0x20]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x70], rdx>', '<mov~~qword ptr [rsp + 0x78], rcx>', '<mov~~qword ptr [rsp + 0x80], rax>', '<jl~~0x402bb7>']}, {'block_Idx': 42, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5e8]>', '<mov~~rdx, qword ptr [rsp + 0x5f8]>', '<mov~~rcx, qword ptr [rsp + 0x5e0]>', '<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rsp + 0x620]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<mov~~ecx, dword ptr [rcx]>', '<add~~ecx, dword ptr [rdx]>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500020>']}, {'block_Idx': 31, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~edx, dword ptr [rsp + 0x5ec]>', '<mov~~rsi, qword ptr [rsp + 0x5d8]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<call~~0x500010>']}, {'block_Idx': 47, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x500]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x400e7c>']}, {'block_Idx': 29, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x52c]>', '<add~~eax, -8>', '<cmp~~eax, 3>', '<jae~~0x400dc5>']}, {'block_Idx': 103, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x64c]>', '<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~eax, dword ptr [rsp + 0x49c]>', '<mov~~rdx, rdi>', '<add~~rdx, 0xc>', '<mov~~qword ptr [rsp + 0x490], rdx>', '<imul~~eax, dword ptr [rdi + 0xc]>', '<mov~~edx, 4>', '<mov~~esi, 2>', '<cmp~~dword ptr [rdi + 0x4c], 0>', '<cmove~~edx, esi>', '<imul~~eax, edx>', '<cmp~~eax, ecx>', '<jg~~0x4024ae>']}, {'block_Idx': 178, 'blockInsts': ['<lea~~rdi, [rip + 0x189e]>', '<lea~~rsi, [rip + 0x182f]>', '<mov~~edx, 0x2bc>', '<lea~~rcx, [rip + 0x189c]>', '<call~~0x500050>']}, {'block_Idx': 155, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x454]>', '<or~~eax, 2>', '<sub~~eax, 3>', '<je~~0x4015d4>']}, {'block_Idx': 154, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x454]>', '<cmp~~eax, 2>', '<je~~0x4015d4>']}, {'block_Idx': 98, 'blockInsts': ['<jmp~~0x401156>']}, {'block_Idx': 210, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x408]>', '<mov~~edx, dword ptr [rsp + 0x3e4]>', '<mov~~eax, dword ptr [rsp + 0x3ec]>', '<mov~~dil, sil>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x3e0], eax>', '<jmp~~0x401942>']}, {'block_Idx': 152, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~edx, dword ptr [rcx]>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<mov~~eax, dword ptr [rax + 0x50]>', '<mov~~qword ptr [rsp + 0x220], rax>', '<sub~~rax, 3>', '<ja~~0x402cb8>']}, {'block_Idx': 105, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<shr~~eax, 0xf0>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x4a4], eax>', '<jmp~~0x401238>']}, {'block_Idx': 229, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x468]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x4022ec>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x578]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rdi, qword ptr [rsp + 0x588]>', '<mov~~r9, qword ptr [rsp + 0x580]>', '<mov~~r11d, dword ptr [rsp + 0x574]>', '<mov~~rdx, qword ptr [rsp + 0x550]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x402ce5>']}, {'block_Idx': 28, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x52c]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x504], eax>', '<je~~0x400df1>']}, {'block_Idx': 226, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x468]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402376>']}, {'block_Idx': 48, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x52c]>', '<add~~eax, -7>', '<mov~~dword ptr [rsp + 0x504], eax>', '<jmp~~0x400df1>']}, {'block_Idx': 223, 'blockInsts': ['<jmp~~0x4017eb>']}, {'block_Idx': 214, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x1e0]>', '<mov~~rdx, qword ptr [rsp + 0x1b0]>', '<mov~~rax, qword ptr [rsp + 0x190]>', '<mov~~rcx, qword ptr [rsp + 0x198]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x1c8], rdx>', '<mov~~qword ptr [rsp + 0x1d0], rcx>', '<mov~~qword ptr [rsp + 0x1d8], rax>', '<jl~~0x402542>']}, {'block_Idx': 34, 'blockInsts': ['<jmp~~0x402ce5>']}, {'block_Idx': 348, 'blockInsts': ['<mov~~r9d, dword ptr [rsp + 0x2ec]>', '<mov~~eax, dword ptr [rsp + 0x2e8]>', '<mov~~edx, dword ptr [rsp + 0x2e4]>', '<mov~~rsi, qword ptr [rsp + 0x2d8]>', '<mov~~rdi, qword ptr [rsp + 0x2d0]>', '<mov~~r8, qword ptr [rsp + 0x380]>', '<add~~edx, dword ptr [r8 + rsi*4]>', '<mov~~dword ptr [rsp + 0x26c], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x270], ecx>', '<mov~~eax, ecx>', '<add~~eax, r9d>', '<mov~~dword ptr [rsp + 0x274], eax>', '<mov~~dword ptr [r8 + rsi*4], eax>', '<add~~rsi, 1>', '<mov~~qword ptr [rsp + 0x278], rsi>', '<cmp~~rsi, rdi>', '<mov~~qword ptr [rsp + 0x2d8], rsi>', '<mov~~dword ptr [rsp + 0x2e4], edx>', '<mov~~dword ptr [rsp + 0x2e8], ecx>', '<mov~~dword ptr [rsp + 0x2ec], eax>', '<je~~0x4022ec>']}, {'block_Idx': 317, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x318]>', '<lea~~rcx, [rip + 0x2121]>', '<movsxd~~rax, dword ptr [rcx + rax*4]>', '<add~~rax, rcx>', '<jmp~~rax>']}, {'block_Idx': 211, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x508]>', '<mov~~edi, dword ptr [rsp + 0x408]>', '<mov~~esi, dword ptr [rsp + 0x3e4]>', '<mov~~rax, qword ptr [rsp + 0x438]>', '<mov~~r9d, dword ptr [rsp + 0x3ec]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, esi>', '<add~~r8d, 0x10>', '<mov~~dword ptr [rdx], r8d>', '<mov~~ecx, edi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x3d8], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x3e8]>', '<mov~~dword ptr [rsp + 0x3dc], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3d8]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3dc]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x3e0], eax>', '<mov~~rax, qword ptr [rsp + 0x468]>', '<mov~~esi, dword ptr [rsp + 0x408]>', '<mov~~edx, dword ptr [rsp + 0x3e0]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3d0], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3d0]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3d4], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x4022ec>']}, {'block_Idx': 199, 'blockInsts': ['<jmp~~0x4017d9>']}, {'block_Idx': 58, 'blockInsts': ['<jmp~~0x4024ae>']}, {'block_Idx': 1, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rsp + 0x62c]>', '<mov~~edx, 4>', '<cmp~~ecx, 4>', '<cmovg~~edx, ecx>', '<mov~~dword ptr [rax], edx>', '<mov~~rdi, qword ptr [rsi + 0x98]>', '<add~~rsi, 0xa8>', '<call~~0x500010>']}, {'block_Idx': 218, 'blockInsts': ['<jmp~~0x402cb8>']}, {'block_Idx': 172, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x638]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rsi, rdx>', '<add~~rsi, 0xc>', '<mov~~qword ptr [rsp + 0x1e0], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x4c>', '<mov~~qword ptr [rsp + 0x1e8], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x48>', '<mov~~qword ptr [rsp + 0x1f0], rsi>', '<add~~rdx, 0x48>', '<mov~~qword ptr [rsp + 0x1f8], rdx>', '<xor~~edx, edx>', '<mov~~qword ptr [rsp + 0x200], rdx>', '<mov~~qword ptr [rsp + 0x208], rcx>', '<mov~~qword ptr [rsp + 0x210], rax>', '<jmp~~0x4024f7>']}, {'block_Idx': 190, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4e0]>', '<mov~~rdi, qword ptr [rax]>', '<lea~~rsi, [rip + 0x2bd9]>', '<xor~~edx, edx>', '<call~~0x500048>']}, {'block_Idx': 230, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rdx, qword ptr [rsp + 0x448]>', '<mov~~rsi, qword ptr [rsp + 0x468]>', '<mov~~eax, dword ptr [rsp + 0x428]>', '<and~~eax, 0xfffffff7>', '<mov~~dword ptr [rsp + 0x378], eax>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x37c], esi>', '<mov~~rcx, qword ptr [rcx + rdx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x380], rcx>', '<cmp~~eax, 0>', '<setg~~al>', '<mov~~byte ptr [rsp + 0x38f], al>', '<test~~al, 1>', '<jne~~0x401be3>']}, {'block_Idx': 139, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x488]>', '<mov~~rax, qword ptr [rsp + 0x4e0]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2e83]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 350, 'blockInsts': ['<mov~~r10d, dword ptr [rsp + 0x310]>', '<mov~~eax, dword ptr [rsp + 0x30c]>', '<mov~~ecx, dword ptr [rsp + 0x308]>', '<mov~~esi, dword ptr [rsp + 0x304]>', '<mov~~rdi, qword ptr [rsp + 0x2f8]>', '<mov~~r8, qword ptr [rsp + 0x2f0]>', '<mov~~r9, qword ptr [rsp + 0x380]>', '<add~~esi, dword ptr [r9 + rdi*4]>', '<mov~~dword ptr [rsp + 0x250], esi>', '<mov~~edx, esi>', '<add~~edx, ecx>', '<mov~~dword ptr [rsp + 0x254], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x258], ecx>', '<mov~~eax, ecx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x25c], eax>', '<mov~~dword ptr [r9 + rdi*4], eax>', '<add~~rdi, 1>', '<mov~~qword ptr [rsp + 0x260], rdi>', '<cmp~~rdi, r8>', '<mov~~qword ptr [rsp + 0x2f8], rdi>', '<mov~~dword ptr [rsp + 0x304], esi>', '<mov~~dword ptr [rsp + 0x308], edx>', '<mov~~dword ptr [rsp + 0x30c], ecx>', '<mov~~dword ptr [rsp + 0x310], eax>', '<je~~0x4022ec>']}, {'block_Idx': 224, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x428]>', '<add~~eax, -8>', '<cmp~~eax, 5>', '<jae~~0x402291>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, rax>', '<add~~rcx, 0xa0>', '<mov~~qword ptr [rsp + 0x5f8], rcx>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x600], eax>', '<cmp~~eax, 4>', '<jb~~0x400630>']}, {'block_Idx': 359, 'blockInsts': ['<jmp~~0x40213b>']}, {'block_Idx': 212, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x428]>', '<sub~~eax, 1>', '<jne~~0x401b7b>']}, {'block_Idx': 168, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x402988>']}, {'block_Idx': 304, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x380]>', '<mov~~edx, dword ptr [rsp + 0x378]>', '<mov~~eax, dword ptr [rsp + 0x330]>', '<mov~~esi, edx>', '<add~~esi, -2>', '<mov~~esi, esi>', '<sub~~eax, dword ptr [rcx + rsi*4]>', '<add~~edx, -3>', '<mov~~edx, edx>', '<add~~eax, dword ptr [rcx + rdx*4]>', '<mov~~dword ptr [rsp + 0x32c], eax>', '<mov~~eax, dword ptr [rsp + 0x378]>', '<mov~~ecx, dword ptr [rsp + 0x32c]>', '<mov~~dword ptr [rsp + 0x328], ecx>', '<cmp~~eax, 3>', '<jle~~0x401eb8>']}, {'block_Idx': 231, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x428]>', '<cmp~~eax, 0x1f>', '<jle~~0x4022cc>']}, {'block_Idx': 180, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x42c]>', '<mov~~rsi, qword ptr [rsp + 0x508]>', '<mov~~rcx, qword ptr [rsp + 0x438]>', '<mov~~dword ptr [rsp + 0x40c], eax>', '<mov~~edi, dword ptr [rsi]>', '<mov~~edx, edi>', '<sar~~edx, 3>', '<mov~~dword ptr [rsp + 0x410], edx>', '<movsxd~~rdx, edx>', '<mov~~dl, byte ptr [rcx + rdx]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x414], ecx>', '<movzx~~edx, dl>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x418], edi>', '<mov~~dword ptr [rsi], edi>', '<mov~~esi, 0x80>', '<shr~~esi, cl>', '<mov~~dword ptr [rsp + 0x41c], esi>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~dword ptr [rsp + 0x420], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x424], eax>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x42c], eax>', '<je~~0x4016f2>']}, {'block_Idx': 101, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x524]>', '<sub~~eax, 7>', '<je~~0x4011d2>']}, {'block_Idx': 65, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4e0]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3387]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 227, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3c8]>', '<mov~~rcx, qword ptr [rsp + 0x468]>', '<mov~~rdx, qword ptr [rsp + 0x3c0]>', '<mov~~esi, dword ptr [rsp + 0x3d4]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3b8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3c8], rax>', '<jl~~0x4019a8>']}, {'block_Idx': 117, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x528]>', '<movsxd~~rcx, eax>', '<lea~~rax, [rip + 0x2d71]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x48c], eax>', '<jmp~~0x40145a>']}, {'block_Idx': 206, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x130]>', '<mov~~rdx, qword ptr [rsp + 0x128]>', '<mov~~edi, dword ptr [rsp + 0x144]>', '<mov~~esi, dword ptr [rsp + 0x140]>', '<mov~~rcx, qword ptr [rsp + 0x168]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x114], ecx>', '<mov~~r8d, esi>', '<shl~~r8d, cl>', '<mov~~ecx, dword ptr [rsp + 0x114]>', '<mov~~word ptr [rdx], r8w>', '<sub~~esi, edi>', '<shl~~esi, cl>', '<mov~~ecx, esi>', '<mov~~si, cx>', '<mov~~rcx, rdx>', '<add~~rcx, 4>', '<mov~~word ptr [rdx + 2], si>', '<mov~~qword ptr [rsp + 0x118], rcx>', '<mov~~qword ptr [rsp + 0x120], rax>', '<mov~~rsi, qword ptr [rsp + 0x188]>', '<mov~~rdx, qword ptr [rsp + 0x138]>', '<mov~~rax, qword ptr [rsp + 0x118]>', '<mov~~rcx, qword ptr [rsp + 0x120]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x170], rdx>', '<mov~~qword ptr [rsp + 0x178], rcx>', '<mov~~qword ptr [rsp + 0x180], rax>', '<jl~~0x40277d>']}, {'block_Idx': 179, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x458]>', '<mov~~ecx, dword ptr [rsp + 0x430]>', '<mov~~dword ptr [rsp + 0x404], ecx>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x408], eax>', '<cmp~~eax, 0x20>', '<jle~~0x4017cc>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5ac]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400cd6>']}, {'block_Idx': 177, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, rax>', '<add~~rcx, 0x40>', '<mov~~qword ptr [rsp + 0x108], rcx>', '<cmp~~dword ptr [rax + 0x40], 0>', '<jle~~0x402cb8>']}, {'block_Idx': 235, 'blockInsts': ['<jmp~~0x401d83>']}, {'block_Idx': 37, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rsp + 0x504]>', '<mov~~dword ptr [rsp + 0x4fc], edx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x500], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x400e4b>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x5b8]>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x5ac], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x400bbb>']}, {'block_Idx': 140, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<shr~~eax, 0xf0>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x48c], eax>', '<jmp~~0x40145a>']}, {'block_Idx': 39, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x52c]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<mov~~r8d, dword ptr [rax + 0xc]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x34b4]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 121, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<shr~~eax, 0xf8>', '<add~~edx, 8>', '<mov~~dword ptr [rcx], edx>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x48c], eax>', '<jmp~~0x40145a>']}, {'block_Idx': 146, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<add~~rax, 0x44>', '<mov~~qword ptr [rsp + 0x458], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x460], rax>', '<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~rdx, qword ptr [rsp + 0x458]>', '<mov~~rsi, qword ptr [rsp + 0x4e8]>', '<mov~~rax, qword ptr [rsp + 0x460]>', '<mov~~qword ptr [rsp + 0x448], rax>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x450], esi>', '<mov~~dword ptr [rdx], esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x454], ecx>', '<cmp~~rax, 0>', '<jne~~0x4015c3>']}, {'block_Idx': 338, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x338]>', '<mov~~ecx, dword ptr [rsp + 0x330]>', '<mov~~edx, dword ptr [rsp + 0x328]>', '<mov~~edi, dword ptr [rsp + 0x37c]>', '<mov~~esi, dword ptr [rsp + 0x378]>', '<movsxd~~rsi, esi>', '<movsxd~~rdi, edi>', '<mov~~qword ptr [rsp + 0x2d0], rdi>', '<mov~~qword ptr [rsp + 0x2d8], rsi>', '<mov~~dword ptr [rsp + 0x2e4], edx>', '<mov~~dword ptr [rsp + 0x2e8], ecx>', '<mov~~dword ptr [rsp + 0x2ec], eax>', '<jmp~~0x40213b>']}, {'block_Idx': 68, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x544]>', '<mov~~rax, qword ptr [rsp + 0x538]>', '<mov~~edx, dword ptr [rsp + 0x548]>', '<mov~~dword ptr [rsp + 0x534], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x402ce5>']}, {'block_Idx': 169, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x508]>', '<mov~~esi, dword ptr [rsp + 0x434]>', '<mov~~rax, qword ptr [rsp + 0x438]>', '<mov~~ecx, dword ptr [rsp + 0x440]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x428], ecx>', '<mov~~ecx, esi>', '<add~~ecx, 7>', '<mov~~dword ptr [rdx], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~esi, 8>', '<mov~~dword ptr [rdx], esi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<and~~edx, eax>', '<xor~~eax, eax>', '<mov~~ecx, 1>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x42c], ecx>', '<mov~~dword ptr [rsp + 0x430], eax>', '<je~~0x40178a>']}, {'block_Idx': 59, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x5c8]>', '<mov~~eax, dword ptr [rsp + 0x534]>', '<add~~eax, 8>', '<mov~~dword ptr [rsp + 0x530], eax>', '<mov~~dword ptr [rcx], eax>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~edx, dword ptr [rsp + 0x5b0]>', '<mov~~ecx, eax>', '<mov~~eax, dword ptr [rsp + 0x530]>', '<add~~ecx, 2>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x548], eax>', '<jl~~0x400c46>']}, {'block_Idx': 92, 'blockInsts': ['<jmp~~0x4024ae>']}, {'block_Idx': 173, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, rax>', '<add~~rcx, 0x40>', '<mov~~qword ptr [rsp + 0x88], rcx>', '<cmp~~dword ptr [rax + 0x40], 0>', '<jle~~0x402cb8>']}, {'block_Idx': 228, 'blockInsts': ['<jmp~~0x4022ec>']}, {'block_Idx': 287, 'blockInsts': ['<jmp~~0x401dd5>']}, {'block_Idx': 0, 'blockInsts': ['<sub~~rsp, 0x658>', '<mov~~qword ptr [rsp + 0x618], rdx>', '<mov~~qword ptr [rsp + 0x620], rcx>', '<mov~~dword ptr [rsp + 0x62c], r8d>', '<mov~~rax, qword ptr [rdi + 0xa0]>', '<mov~~qword ptr [rsp + 0x630], rax>', '<mov~~rcx, rsi>', '<mov~~qword ptr [rsp + 0x638], rcx>', '<mov~~qword ptr [rsp + 0x640], rsi>', '<mov~~ecx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x64c], ecx>', '<mov~~dword ptr [rdx], 0>', '<mov~~rcx, rax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x650], rcx>', '<cmp~~dword ptr [rax + 4], 0>', '<jne~~0x40059e>']}, {'block_Idx': 189, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x428]>', '<test~~eax, eax>', '<je~~0x40182e>']}, {'block_Idx': 83, 'blockInsts': ['<jmp~~0x4024ae>']}, {'block_Idx': 185, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x638]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x148], rsi>', '<mov~~rsi, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x150], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x4c>', '<mov~~qword ptr [rsp + 0x158], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x48>', '<mov~~qword ptr [rsp + 0x160], rsi>', '<add~~rdx, 0x48>', '<mov~~qword ptr [rsp + 0x168], rdx>', '<xor~~edx, edx>', '<mov~~qword ptr [rsp + 0x170], rdx>', '<mov~~qword ptr [rsp + 0x178], rcx>', '<mov~~qword ptr [rsp + 0x180], rax>', '<jmp~~0x40277d>']}, {'block_Idx': 24, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~ecx, dword ptr [rsp + 0x5ec]>', '<mov~~rdx, rax>', '<add~~rdx, 0xa8>', '<mov~~qword ptr [rsp + 0x5d8], rdx>', '<cmp~~dword ptr [rax + 0xa8], ecx>', '<jae~~0x400731>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x56c]>', '<cmp~~eax, 0>', '<jle~~0x400b96>']}, {'block_Idx': 114, 'blockInsts': ['<jmp~~0x4024ae>']}, {'block_Idx': 113, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x528]>', '<cmp~~eax, 0xc>', '<jge~~0x40131e>']}, {'block_Idx': 201, 'blockInsts': ['<jmp~~0x402cb8>']}, {'block_Idx': 341, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x338]>', '<mov~~ecx, dword ptr [rsp + 0x330]>', '<mov~~esi, dword ptr [rsp + 0x37c]>', '<mov~~edx, dword ptr [rsp + 0x378]>', '<movsxd~~rdx, edx>', '<movsxd~~rsi, esi>', '<mov~~qword ptr [rsp + 0x2b8], rsi>', '<mov~~qword ptr [rsp + 0x2c0], rdx>', '<mov~~dword ptr [rsp + 0x2c8], ecx>', '<mov~~dword ptr [rsp + 0x2cc], eax>', '<jmp~~0x4020ce>']}, {'block_Idx': 236, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x378]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x368], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x370], rax>', '<mov~~rdx, qword ptr [rsp + 0x438]>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x458]>', '<mov~~rsi, qword ptr [rsp + 0x370]>', '<mov~~qword ptr [rsp + 0x350], rsi>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x358], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x35c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x360], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x364], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401c9d>']}, {'block_Idx': 38, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x400dc5>']}, {'block_Idx': 69, 'blockInsts': ['<jmp~~0x402ce5>']}, {'block_Idx': 288, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x380]>', '<mov~~ecx, dword ptr [rsp + 0x378]>', '<add~~ecx, -1>', '<mov~~ecx, ecx>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x33c], eax>', '<mov~~eax, dword ptr [rsp + 0x378]>', '<mov~~ecx, dword ptr [rsp + 0x33c]>', '<mov~~dword ptr [rsp + 0x338], ecx>', '<cmp~~eax, 1>', '<jle~~0x401e14>']}, {'block_Idx': 43, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5d4]>', '<mov~~ecx, dword ptr [rsp + 0x5d0]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rdi, qword ptr [rdx + 0x98]>', '<mov~~ecx, ecx>', '<mov~~rsi, rdi>', '<add~~rsi, rcx>', '<mov~~eax, eax>', '<mov~~edx, eax>', '<call~~0x500018>']}, {'block_Idx': 328, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x37c]>', '<mov~~ecx, dword ptr [rsp + 0x378]>', '<cmp~~eax, ecx>', '<jle~~0x4022ec>']}, {'block_Idx': 295, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x378]>', '<mov~~ecx, dword ptr [rsp + 0x334]>', '<mov~~dword ptr [rsp + 0x330], ecx>', '<cmp~~eax, 2>', '<jle~~0x401e5d>']}, {'block_Idx': 67, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x1d53]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 44, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x5a0]>', '<mov~~eax, dword ptr [rsp + 0x568]>', '<mov~~rcx, qword ptr [rsp + 0x598]>', '<mov~~rdi, qword ptr [rcx]>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x550]>', '<cdqe~~>', '<add~~rdx, rax>', '<call~~0x400110>']}, {'block_Idx': 255, 'blockInsts': ['<jmp~~0x4022ec>']}, {'block_Idx': 9, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x62c]>', '<mov~~esi, dword ptr [rsp + 0x600]>', '<mov~~ecx, dword ptr [rsp + 0x604]>', '<xor~~edx, edx>', '<sub~~ecx, esi>', '<cmovb~~ecx, edx>', '<cmp~~ecx, eax>', '<cmovb~~eax, ecx>', '<mov~~dword ptr [rsp + 0x5f4], eax>', '<mov~~eax, dword ptr [rsp + 0x600]>', '<mov~~edx, dword ptr [rsp + 0x5f4]>', '<mov~~dword ptr [rsp + 0x5e8], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x5ec], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<jb~~0x402dc3>']}, {'block_Idx': 124, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x508]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x480], rcx>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x480]>', '<movsxd~~rcx, eax>', '<xor~~esi, esi>', '<call~~0x500040>']}, {'block_Idx': 240, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x438]>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x458]>', '<mov~~rsi, qword ptr [rsp + 0x3f8]>', '<mov~~qword ptr [rsp + 0x3a0], rsi>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x3a8], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x3ac], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x3b0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x3b4], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401a8a>']}, {'block_Idx': 134, 'blockInsts': ['<mov~~dword ptr [rsp + 0x488], eax>', '<cmp~~eax, 0>', '<je~~0x4014eb>']}, {'block_Idx': 329, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x37c]>', '<mov~~ecx, dword ptr [rsp + 0x378]>', '<cmp~~eax, ecx>', '<jle~~0x4022ec>']}, {'block_Idx': 138, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x490]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~edx, dword ptr [rsp + 0x4fc]>', '<mov~~rsi, qword ptr [rsp + 0x4e8]>', '<mov~~edi, dword ptr [rsp + 0x4dc]>', '<mov~~r8d, dword ptr [rsp + 0x47c]>', '<mov~~r9d, dword ptr [rsp + 0x49c]>', '<mov~~r10, rcx>', '<add~~r10, 0x40>', '<mov~~qword ptr [rsp + 0x468], r10>', '<mov~~dword ptr [rcx + 0x40], r9d>', '<mov~~dword ptr [rcx + 8], r8d>', '<mov~~dword ptr [rsi], edi>', '<mov~~rsi, rcx>', '<add~~rsi, 0x50>', '<mov~~qword ptr [rsp + 0x470], rsi>', '<mov~~dword ptr [rcx + 0x50], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x40239e>']}, {'block_Idx': 54, 'blockInsts': ['<sub~~rsp, 0x28>', '<mov~~qword ptr [rsp + 8], rdi>', '<mov~~qword ptr [rsp + 0x10], rsi>', '<mov~~qword ptr [rsp + 0x18], rdx>', '<mov~~eax, dword ptr [rdx + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<mov~~dword ptr [rsp + 0x24], eax>', '<mov~~dword ptr [rsi], eax>', '<cmp~~eax, 0x10>', '<jge~~0x400166>']}, {'block_Idx': 20, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x56c]>', '<cmp~~eax, 0>', '<je~~0x400b96>']}, {'block_Idx': 164, 'blockInsts': ['<jmp~~0x4024ae>']}, {'block_Idx': 56, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3432]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 283, 'blockInsts': ['<mov~~al, byte ptr [rsp + 0x38f]>', '<test~~al, 1>', '<jne~~0x401db7>']}, {'block_Idx': 153, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x508]>', '<mov~~edx, dword ptr [rsp + 0x22c]>', '<mov~~ecx, dword ptr [rsp + 0x230]>', '<add~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~edx, dword ptr [rcx]>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<mov~~eax, dword ptr [rax + 0x50]>', '<mov~~qword ptr [rsp + 0x220], rax>', '<sub~~rax, 3>', '<ja~~0x402cb8>']}, {'block_Idx': 64, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x508]>', '<mov~~rcx, qword ptr [rsp + 0x518]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x4c8], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~eax, edi>', '<shr~~eax, 8>', '<mov~~ecx, edx>', '<or~~ecx, 8>', '<cmp~~esi, 0>', '<cmove~~eax, edi>', '<cmp~~esi, 0>', '<cmove~~ecx, edx>', '<mov~~eax, eax>', '<mov~~edx, eax>', '<mov~~rax, qword ptr [rip + 0xff047]>', '<movzx~~eax, byte ptr [rax + rdx]>', '<add~~ecx, eax>', '<mov~~eax, 7>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x4cc], eax>', '<mov~~rax, -1>', '<cmp~~ecx, 6>', '<mov~~qword ptr [rsp + 0x4d0], rax>', '<je~~0x40110d>']}, {'block_Idx': 143, 'blockInsts': ['<add~~rsp, 0x48>', '<ret~~>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~eax, dword ptr [rsp + 0x5b0]>', '<mov~~ecx, dword ptr [rsp + 0x10]>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<sub~~ecx, eax>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x1560]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 100, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~eax, dword ptr [rsp + 0x4a4]>', '<mov~~dword ptr [rsp + 0x49c], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x4a0], ecx>', '<cmp~~eax, ecx>', '<jle~~0x40128a>']}, {'block_Idx': 145, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x508]>', '<mov~~ecx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x22c], ecx>', '<xor~~eax, eax>', '<sub~~eax, ecx>', '<and~~eax, 7>', '<mov~~dword ptr [rsp + 0x230], eax>', '<cmp~~eax, 0>', '<je~~0x4023dc>']}, {'block_Idx': 35, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x590]>', '<cmp~~dword ptr [rax], 0>', '<jne~~0x400b75>']}, {'block_Idx': 310, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x378]>', '<mov~~ecx, dword ptr [rsp + 0x324]>', '<mov~~dword ptr [rsp + 0x314], ecx>', '<mov~~ecx, eax>', '<mov~~qword ptr [rsp + 0x318], rcx>', '<sub~~eax, 4>', '<ja~~0x40226a>']}, {'block_Idx': 245, 'blockInsts': ['<push~~rbp>', '<mov~~rbp, rsp>', '<sub~~rsp, 0x210>', '<mov~~dword ptr [rbp - 0x20], edx>', '<mov~~dword ptr [rbp - 0x1c], esi>', '<mov~~qword ptr [rbp - 0x18], rdi>', '<mov~~eax, edx>', '<lea~~rcx, [rax*4 + 0xf]>', '<and~~rcx, 0xfffffffffffffff0>', '<mov~~rax, rsp>', '<sub~~rax, rcx>', '<mov~~qword ptr [rbp - 0x10], rax>', '<mov~~rsp, rax>', '<movsxd~~rax, esi>', '<mov~~rax, qword ptr [rdi + rax*8 + 0x58]>', '<mov~~qword ptr [rbp - 8], rax>', '<cmp~~edx, 0>', '<jle~~0x4030db>']}, {'block_Idx': 278, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x4024ae>']}, {'block_Idx': 187, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x638]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0xc8], rsi>', '<mov~~rsi, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0xd0], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x4c>', '<mov~~qword ptr [rsp + 0xd8], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x48>', '<mov~~qword ptr [rsp + 0xe0], rsi>', '<add~~rdx, 0x48>', '<mov~~qword ptr [rsp + 0xe8], rdx>', '<xor~~edx, edx>', '<mov~~qword ptr [rsp + 0xf0], rdx>', '<mov~~qword ptr [rsp + 0xf8], rcx>', '<mov~~qword ptr [rsp + 0x100], rax>', '<jmp~~0x4029a7>']}, {'block_Idx': 158, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x38]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<add~~rsp, 0x48>', '<ret~~>']}, {'block_Idx': 361, 'blockInsts': ['<jmp~~0x4021c6>']}, {'block_Idx': 360, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x2b4]>', '<mov~~rcx, qword ptr [rsp + 0x2a8]>', '<mov~~rdx, qword ptr [rsp + 0x2a0]>', '<mov~~rsi, qword ptr [rsp + 0x380]>', '<add~~eax, dword ptr [rsi + rcx*4]>', '<mov~~dword ptr [rsp + 0x294], eax>', '<mov~~dword ptr [rsi + rcx*4], eax>', '<add~~rcx, 1>', '<mov~~qword ptr [rsp + 0x298], rcx>', '<cmp~~rcx, rdx>', '<mov~~qword ptr [rsp + 0x2a8], rcx>', '<mov~~dword ptr [rsp + 0x2b4], eax>', '<je~~0x4022ec>']}, {'block_Idx': 32, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x5d8]>', '<mov~~esi, dword ptr [rsp + 0x5e8]>', '<mov~~rdx, qword ptr [rsp + 0x5f8]>', '<mov~~rax, qword ptr [rsp + 0x5e0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x5d0], eax>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x5d4], edx>', '<add~~eax, esi>', '<add~~eax, edx>', '<cmp~~eax, dword ptr [rcx]>', '<jbe~~0x4007a6>']}, {'block_Idx': 88, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4e0]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x319b]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 148, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x528]>', '<mov~~rax, qword ptr [rsp + 0x4e0]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2ef7]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 165, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, rax>', '<add~~rcx, 0x40>', '<mov~~qword ptr [rsp + 0x218], rcx>', '<cmp~~dword ptr [rax + 0x40], 0>', '<jle~~0x402cb8>']}, {'block_Idx': 61, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x5e0]>', '<mov~~dword ptr [rax], 0>', '<mov~~eax, dword ptr [rsp + 0x5e8]>', '<mov~~rdx, qword ptr [rsp + 0x5f8]>', '<mov~~rcx, qword ptr [rsp + 0x5e0]>', '<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rsp + 0x620]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<mov~~ecx, dword ptr [rcx]>', '<add~~ecx, dword ptr [rdx]>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500020>']}, {'block_Idx': 243, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x508]>', '<mov~~edi, dword ptr [rsp + 0x358]>', '<mov~~esi, dword ptr [rsp + 0x35c]>', '<mov~~rax, qword ptr [rsp + 0x438]>', '<mov~~r9d, dword ptr [rsp + 0x364]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, esi>', '<add~~r8d, 0x10>', '<mov~~dword ptr [rdx], r8d>', '<mov~~ecx, edi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x344], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x360]>', '<mov~~dword ptr [rsp + 0x348], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x344]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x348]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x34c], eax>', '<mov~~rax, qword ptr [rsp + 0x350]>', '<mov~~rdx, qword ptr [rsp + 0x380]>', '<mov~~edi, dword ptr [rsp + 0x358]>', '<mov~~esi, dword ptr [rsp + 0x34c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x340], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x340]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x368]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x370], rax>', '<jne~~0x401bfe>']}, {'block_Idx': 251, 'blockInsts': ['<jmp~~0x4024ae>']}, {'block_Idx': 116, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x508]>', '<mov~~ecx, dword ptr [rsp + 0x48c]>', '<mov~~dword ptr [rsp + 0x47c], ecx>', '<mov~~ecx, dword ptr [rax]>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500038>']}, {'block_Idx': 26, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x564]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x55c]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x40098f>']}, {'block_Idx': 166, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x402b98>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x62c]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<cmp~~dword ptr [rcx], 0x43614c66>', '<mov~~dword ptr [rsp + 0x5f4], eax>', '<je~~0x400658>']}, {'block_Idx': 57, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x500]>', '<movsxd~~rcx, eax>', '<lea~~rax, [rip + 0x3685]>', '<shl~~rcx, 2>', '<add~~rax, rcx>', '<mov~~qword ptr [rsp + 0x4f0], rax>', '<jmp~~0x400ea4>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~esi, dword ptr [rsp + 0x608]>', '<mov~~eax, dword ptr [rsp + 0x60c]>', '<mov~~rdx, qword ptr [rsp + 0x610]>', '<mov~~dword ptr [rsp + 0x5b0], eax>', '<mov~~dword ptr [rsp + 0x5b4], esi>', '<mov~~edi, eax>', '<shl~~edi, 3>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x5b8], rdx>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~edi, esi>', '<xor~~r8d, r8d>', '<cmp~~eax, 0>', '<mov~~esi, eax>', '<cmovl~~esi, r8d>', '<mov~~r8, rcx>', '<add~~r8, 0x28>', '<mov~~qword ptr [rsp + 0x5c0], r8>', '<mov~~qword ptr [rcx + 0x28], rdx>', '<mov~~dword ptr [rcx + 0x3c], edi>', '<mov~~esi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x5c8], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<cmp~~eax, 0x18>', '<jl~~0x402ce5>']}, {'block_Idx': 84, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<jmp~~0x402dc3>']}, {'block_Idx': 156, 'blockInsts': ['<jmp~~0x4024ae>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rcx, qword ptr [rsp + 0x5d8]>', '<mov~~esi, dword ptr [rsp + 0x5e8]>', '<mov~~rdx, qword ptr [rsp + 0x5f8]>', '<mov~~rax, qword ptr [rsp + 0x5e0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x5d0], eax>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x5d4], edx>', '<add~~eax, esi>', '<add~~eax, edx>', '<cmp~~eax, dword ptr [rcx]>', '<jbe~~0x4007a6>']}, {'block_Idx': 80, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4e0]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x31da]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x30]>', '<mov~~esi, dword ptr [rsp + 0x40]>', '<mov~~rax, qword ptr [rsp + 0x60]>', '<mov~~edi, dword ptr [rsp + 0x44]>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~dword ptr [rdx], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x28]>', '<mov~~rax, rdx>', '<add~~rax, 8>', '<mov~~dword ptr [rdx + 4], esi>', '<mov~~qword ptr [rsp + 0x18], rcx>', '<mov~~qword ptr [rsp + 0x20], rax>', '<jmp~~0x402c7f>']}, {'block_Idx': 318, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x378]>', '<mov~~rax, qword ptr [rsp + 0x4e0]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2145]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 130, 'blockInsts': ['<jmp~~0x40133a>']}, {'block_Idx': 193, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x218]>', '<mov~~rdx, qword ptr [rsp + 0x1c0]>', '<mov~~rax, qword ptr [rsp + 0x1d8]>', '<mov~~rcx, qword ptr [rsp + 0x1d0]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x200], rdx>', '<mov~~qword ptr [rsp + 0x208], rcx>', '<mov~~qword ptr [rsp + 0x210], rax>', '<jl~~0x4024f7>']}, {'block_Idx': 194, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x1c0]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x1e8]>', '<mov~~rsi, qword ptr [rsp + 0x1c8]>', '<mov~~rdi, qword ptr [rsp + 0x1d0]>', '<mov~~r8, qword ptr [rsp + 0x1d8]>', '<mov~~qword ptr [rsp + 0x1a0], r8>', '<mov~~qword ptr [rsp + 0x1a8], rdi>', '<mov~~qword ptr [rsp + 0x1b0], rsi>', '<mov~~eax, dword ptr [rax]>', '<mov~~rcx, qword ptr [rcx + rsi*8 + 0x58]>', '<mov~~ecx, dword ptr [rcx + rdx*4]>', '<mov~~dword ptr [rsp + 0x1bc], ecx>', '<cmp~~eax, 0>', '<je~~0x4025de>']}, {'block_Idx': 219, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x108]>', '<mov~~rdx, qword ptr [rsp + 0xb8]>', '<mov~~rax, qword ptr [rsp + 0x98]>', '<mov~~rcx, qword ptr [rsp + 0xa0]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0xf0], rdx>', '<mov~~qword ptr [rsp + 0xf8], rcx>', '<mov~~qword ptr [rsp + 0x100], rax>', '<jl~~0x4029a7>']}, {'block_Idx': 349, 'blockInsts': ['<jmp~~0x40207c>']}, {'block_Idx': 301, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x124]>', '<add~~rsp, 0x158>', '<ret~~>']}, {'block_Idx': 167, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x40275e>']}, {'block_Idx': 213, 'blockInsts': ['<jmp~~0x4024ae>']}, {'block_Idx': 242, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x358]>', '<mov~~edx, dword ptr [rsp + 0x35c]>', '<mov~~eax, dword ptr [rsp + 0x364]>', '<mov~~dil, sil>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x34c], eax>', '<jmp~~0x401d2c>']}, {'block_Idx': 94, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x524]>', '<sub~~eax, 6>', '<je~~0x401187>']}, {'block_Idx': 76, 'blockInsts': ['<jmp~~0x4024ae>']}, {'block_Idx': 379, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x4024ae>']}, {'block_Idx': 129, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<shr~~eax, 0xf0>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x48c], eax>', '<jmp~~0x40145a>']}, {'block_Idx': 135, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x528]>', '<sub~~eax, 0xe>', '<je~~0x4013e8>']}, {'block_Idx': 104, 'blockInsts': ['<mov~~r8d, dword ptr [rsp + 0x4a0]>', '<mov~~ecx, dword ptr [rsp + 0x49c]>', '<mov~~rax, qword ptr [rsp + 0x4e0]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x30b4]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 221, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x404]>', '<cmp~~eax, 0>', '<je~~0x402376>']}, {'block_Idx': 207, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x130]>', '<mov~~rax, qword ptr [rsp + 0x160]>', '<mov~~esi, dword ptr [rsp + 0x140]>', '<mov~~ecx, dword ptr [rax]>', '<mov~~edi, esi>', '<shl~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x144]>', '<mov~~dword ptr [rdx], edi>', '<sub~~esi, ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x128]>', '<mov~~rax, rdx>', '<add~~rax, 8>', '<mov~~dword ptr [rdx + 4], esi>', '<mov~~qword ptr [rsp + 0x118], rcx>', '<mov~~qword ptr [rsp + 0x120], rax>', '<jmp~~0x402892>']}, {'block_Idx': 311, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x328]>', '<mov~~rdx, qword ptr [rsp + 0x380]>', '<mov~~edi, dword ptr [rsp + 0x378]>', '<mov~~ecx, edi>', '<add~~ecx, -2>', '<mov~~ecx, ecx>', '<mov~~ecx, dword ptr [rdx + rcx*4]>', '<mov~~esi, edi>', '<add~~esi, -3>', '<mov~~esi, esi>', '<mov~~esi, dword ptr [rdx + rsi*4]>', '<shl~~esi, 1>', '<add~~edi, -4>', '<mov~~edi, edi>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<add~~eax, esi>', '<add~~ecx, edx>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x324], eax>', '<mov~~eax, dword ptr [rsp + 0x378]>', '<mov~~ecx, dword ptr [rsp + 0x324]>', '<mov~~dword ptr [rsp + 0x314], ecx>', '<mov~~ecx, eax>', '<mov~~qword ptr [rsp + 0x318], rcx>', '<sub~~eax, 4>', '<ja~~0x40226a>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~ecx, dword ptr [rsp + 0x62c]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~esi, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x604], esi>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x608], edx>', '<mov~~dword ptr [rsp + 0x60c], ecx>', '<mov~~qword ptr [rsp + 0x610], rax>', '<je~~0x400857>']}, {'block_Idx': 15, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5f0]>', '<add~~rsp, 0x658>', '<ret~~>']}, {'block_Idx': 74, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x4cc]>', '<mov~~edx, dword ptr [rsp + 0x4c8]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~qword ptr [rsp + 0x4b8], rcx>', '<mov~~dword ptr [rsp + 0x4c4], eax>', '<mov~~rax, qword ptr [rsp + 0x4b8]>', '<mov~~ecx, dword ptr [rsp + 0x4c4]>', '<mov~~dword ptr [rsp + 0x4ac], ecx>', '<mov~~qword ptr [rsp + 0x4b0], rax>', '<cmp~~ecx, 1>', '<mov~~qword ptr [rsp + 0x4d0], rax>', '<jle~~0x40110d>']}, {'block_Idx': 60, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rdx, qword ptr [rsp + 0x5e0]>', '<mov~~rdi, qword ptr [rsp + 0x5f8]>', '<mov~~rsi, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rsp + 0x5e8]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x608], esi>', '<mov~~dword ptr [rsp + 0x60c], edx>', '<mov~~qword ptr [rsp + 0x610], rcx>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<jne~~0x402dc3>']}, {'block_Idx': 202, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x1a8]>', '<mov~~rdx, qword ptr [rsp + 0x1a0]>', '<mov~~esi, dword ptr [rsp + 0x1bc]>', '<mov~~rcx, qword ptr [rsp + 0x1f8]>', '<mov~~ecx, dword ptr [rcx]>', '<shl~~esi, cl>', '<mov~~ecx, esi>', '<mov~~si, cx>', '<mov~~rcx, rdx>', '<add~~rcx, 2>', '<mov~~word ptr [rdx], si>', '<mov~~qword ptr [rsp + 0x190], rcx>', '<mov~~qword ptr [rsp + 0x198], rax>', '<mov~~rsi, qword ptr [rsp + 0x1e0]>', '<mov~~rdx, qword ptr [rsp + 0x1b0]>', '<mov~~rax, qword ptr [rsp + 0x190]>', '<mov~~rcx, qword ptr [rsp + 0x198]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x1c8], rdx>', '<mov~~qword ptr [rsp + 0x1d0], rcx>', '<mov~~qword ptr [rsp + 0x1d8], rax>', '<jl~~0x402542>']}, {'block_Idx': 238, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x448]>', '<mov~~edx, dword ptr [rsp + 0x428]>', '<and~~edx, 0xffffffdf>', '<add~~edx, 1>', '<mov~~esi, eax>', '<call~~0x402f40>']}, {'block_Idx': 326, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x37c]>', '<mov~~ecx, dword ptr [rsp + 0x378]>', '<cmp~~eax, ecx>', '<jle~~0x4022ec>']}, {'block_Idx': 18, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5b4]>', '<mov~~rcx, qword ptr [rsp]>', '<mov~~esi, dword ptr [rsp + 0x10]>', '<mov~~edx, dword ptr [rsp + 0xc]>', '<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~r8d, esi>', '<add~~r8d, dword ptr [rdi + 0xa4]>', '<mov~~dword ptr [rdi + 0xa4], r8d>', '<sub~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<mov~~eax, dword ptr [rsp + 0x5f0]>', '<add~~rsp, 0x658>', '<ret~~>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3618]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 122, 'blockInsts': ['<jmp~~0x40132c>']}, {'block_Idx': 239, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x248]>', '<mov~~rdx, qword ptr [rsp + 0x240]>', '<mov~~ecx, dword ptr [rsp + 0x404]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x468]>', '<mov~~dword ptr [rsp + 0x234], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x238], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x248], rax>', '<jl~~0x40232c>']}, {'block_Idx': 342, 'blockInsts': ['<jmp~~0x4024ae>']}, {'block_Idx': 90, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b8]>', '<mov~~ecx, dword ptr [rsp + 0x4c4]>', '<mov~~dword ptr [rsp + 0x4ac], ecx>', '<mov~~qword ptr [rsp + 0x4b0], rax>', '<cmp~~ecx, 1>', '<mov~~qword ptr [rsp + 0x4d0], rax>', '<jle~~0x40110d>']}, {'block_Idx': 395, 'blockInsts': ['<mov~~rax, qword ptr [rbp - 8]>', '<mov~~ecx, dword ptr [rbp - 0xa0]>', '<mov~~edx, dword ptr [rbp - 0x1d8]>', '<sar~~edx, cl>', '<mov~~ecx, dword ptr [rbp - 0x1d4]>', '<movsxd~~rcx, ecx>', '<add~~edx, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rax + rcx*4], edx>', '<xor~~eax, eax>', '<mov~~dword ptr [rbp - 0x9c], eax>', '<mov~~eax, dword ptr [rbp - 0x9c]>', '<mov~~rsp, rbp>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 382, 'blockInsts': ['<mov~~eax, dword ptr [rbp - 0x9c]>', '<mov~~rsp, rbp>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 96, 'blockInsts': ['<jmp~~0x4024ae>']}, {'block_Idx': 55, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rsp + 0x4f0]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x4dc], esi>', '<cmp~~esi, 0x10>', '<setg~~dil>', '<mov~~r9, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r8d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r8d>', '<mov~~r8d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r8d, r11d>', '<and~~dil, 1>', '<movzx~~edi, dil>', '<mov~~dword ptr [r9 + 0x58], r10d>', '<sub~~r8d, esi>', '<mov~~dword ptr [rdx + 0x48], r8d>', '<mov~~dword ptr [rdx + 0x4c], edi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x4e0], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x4e8], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax + 3]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x400f6e>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~ecx, dword ptr [rsp + 0x62c]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~esi, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x604], esi>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x608], edx>', '<mov~~dword ptr [rsp + 0x60c], ecx>', '<mov~~qword ptr [rsp + 0x610], rax>', '<je~~0x400857>']}, {'block_Idx': 233, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, qword ptr [rsp + 0x448]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x240], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x248], rax>', '<mov~~rax, qword ptr [rsp + 0x248]>', '<mov~~rdx, qword ptr [rsp + 0x240]>', '<mov~~ecx, dword ptr [rsp + 0x404]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x468]>', '<mov~~dword ptr [rsp + 0x234], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x238], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x248], rax>', '<jl~~0x40232c>']}, {'block_Idx': 234, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x448]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<add~~rax, 0x58>', '<shl~~rcx, 3>', '<add~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3f0], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x3f8], rax>', '<jmp~~0x4019eb>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x5c8]>', '<mov~~dword ptr [rax], 0x10>', '<mov~~rax, rcx>', '<add~~rax, 0x38>', '<mov~~qword ptr [rsp + 0x508], rax>', '<mov~~rax, rcx>', '<add~~rax, 0x28>', '<mov~~qword ptr [rsp + 0x510], rax>', '<mov~~rax, qword ptr [rcx + 0x28]>', '<mov~~qword ptr [rsp + 0x518], rax>', '<mov~~edx, dword ptr [rax + 2]>', '<mov~~esi, edx>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x524], esi>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x528], edx>', '<mov~~dword ptr [rcx + 0x38], 0x18>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x52c], eax>', '<mov~~dword ptr [rcx + 0x38], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x400d95>']}, {'block_Idx': 340, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x338]>', '<mov~~ecx, dword ptr [rsp + 0x330]>', '<mov~~edx, dword ptr [rsp + 0x328]>', '<mov~~esi, dword ptr [rsp + 0x314]>', '<mov~~r8d, dword ptr [rsp + 0x37c]>', '<mov~~edi, dword ptr [rsp + 0x378]>', '<movsxd~~rdi, edi>', '<movsxd~~r8, r8d>', '<mov~~qword ptr [rsp + 0x2f0], r8>', '<mov~~qword ptr [rsp + 0x2f8], rdi>', '<mov~~dword ptr [rsp + 0x304], esi>', '<mov~~dword ptr [rsp + 0x308], edx>', '<mov~~dword ptr [rsp + 0x30c], ecx>', '<mov~~dword ptr [rsp + 0x310], eax>', '<jmp~~0x4021c6>']}, {'block_Idx': 203, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x1a8]>', '<mov~~esi, dword ptr [rsp + 0x1bc]>', '<mov~~rax, qword ptr [rsp + 0x1f0]>', '<mov~~ecx, dword ptr [rax]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x1a0]>', '<mov~~rax, rdx>', '<add~~rax, 4>', '<mov~~dword ptr [rdx], esi>', '<mov~~qword ptr [rsp + 0x190], rcx>', '<mov~~qword ptr [rsp + 0x198], rax>', '<jmp~~0x402620>']}, {'block_Idx': 112, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~eax, dword ptr [rax + 8]>', '<mov~~dword ptr [rsp + 0x48c], eax>', '<jmp~~0x40145a>']}, {'block_Idx': 160, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x618]>', '<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~ecx, dword ptr [rdi + 0x40]>', '<imul~~ecx, dword ptr [rdi + 0xc]>', '<mov~~edx, 4>', '<mov~~esi, 2>', '<cmp~~dword ptr [rdi + 0x4c], 0>', '<cmove~~edx, esi>', '<imul~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x5b0]>', '<mov~~rax, qword ptr [rsp + 0x5c8]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x10], eax>', '<cmp~~eax, ecx>', '<jle~~0x402d5c>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x158]>', '<mov~~rcx, qword ptr [rsp + 0x150]>', '<mov~~rsi, qword ptr [rsp + 0x148]>', '<mov~~rdx, qword ptr [rsp + 0x170]>', '<mov~~rdi, qword ptr [rsp + 0x178]>', '<mov~~r8, qword ptr [rsp + 0x180]>', '<mov~~qword ptr [rsp + 0x128], r8>', '<mov~~qword ptr [rsp + 0x130], rdi>', '<mov~~qword ptr [rsp + 0x138], rdx>', '<mov~~esi, dword ptr [rsi + rdx*4]>', '<mov~~dword ptr [rsp + 0x140], esi>', '<mov~~ecx, dword ptr [rcx + rdx*4]>', '<mov~~dword ptr [rsp + 0x144], ecx>', '<cmp~~dword ptr [rax], 0>', '<je~~0x40282e>']}, {'block_Idx': 208, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0xb0]>', '<mov~~rdx, qword ptr [rsp + 0xa8]>', '<mov~~esi, dword ptr [rsp + 0xc0]>', '<mov~~edi, dword ptr [rsp + 0xc4]>', '<mov~~rcx, qword ptr [rsp + 0xe8]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x94], ecx>', '<shl~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x94]>', '<mov~~word ptr [rdx], di>', '<shl~~esi, cl>', '<mov~~ecx, esi>', '<mov~~si, cx>', '<mov~~rcx, rdx>', '<add~~rcx, 4>', '<mov~~word ptr [rdx + 2], si>', '<mov~~qword ptr [rsp + 0x98], rcx>', '<mov~~qword ptr [rsp + 0xa0], rax>', '<mov~~rsi, qword ptr [rsp + 0x108]>', '<mov~~rdx, qword ptr [rsp + 0xb8]>', '<mov~~rax, qword ptr [rsp + 0x98]>', '<mov~~rcx, qword ptr [rsp + 0xa0]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0xf0], rdx>', '<mov~~qword ptr [rsp + 0xf8], rcx>', '<mov~~qword ptr [rsp + 0x100], rax>', '<jl~~0x4029a7>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x10]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rdx, rcx>', '<add~~rdx, 0xa0>', '<mov~~qword ptr [rsp], rdx>', '<mov~~ecx, dword ptr [rcx + 0xa0]>', '<mov~~dword ptr [rsp + 0xc], ecx>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<je~~0x402dc3>']}, {'block_Idx': 380, 'blockInsts': ['<jmp~~0x4022ec>']}, {'block_Idx': 46, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x4f0], rax>', '<jmp~~0x400ea4>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x408]>', '<mov~~rdx, qword ptr [rsp + 0x438]>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x3e4], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x3e8], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x3ec], edx>', '<cmp~~eax, 0x12>', '<jge~~0x4018b3>']}, {'block_Idx': 246, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x3a8]>', '<mov~~edx, dword ptr [rsp + 0x3ac]>', '<mov~~eax, dword ptr [rsp + 0x3b4]>', '<mov~~dil, sil>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x39c], eax>', '<jmp~~0x401b19>']}, {'block_Idx': 296, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x380]>', '<mov~~eax, dword ptr [rsp + 0x338]>', '<mov~~edx, dword ptr [rsp + 0x378]>', '<add~~edx, -2>', '<mov~~edx, edx>', '<sub~~eax, dword ptr [rcx + rdx*4]>', '<mov~~dword ptr [rsp + 0x334], eax>', '<mov~~eax, dword ptr [rsp + 0x378]>', '<mov~~ecx, dword ptr [rsp + 0x334]>', '<mov~~dword ptr [rsp + 0x330], ecx>', '<cmp~~eax, 2>', '<jle~~0x401e5d>']}, {'block_Idx': 141, 'blockInsts': ['<jmp~~0x401433>']}, {'block_Idx': 175, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, rax>', '<add~~rcx, 0x40>', '<mov~~qword ptr [rsp + 0x188], rcx>', '<cmp~~dword ptr [rax + 0x40], 0>', '<jle~~0x402cb8>']}, {'block_Idx': 25, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<jmp~~0x402dc3>']}, {'block_Idx': 339, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x338]>', '<mov~~edx, dword ptr [rsp + 0x37c]>', '<mov~~ecx, dword ptr [rsp + 0x378]>', '<movsxd~~rcx, ecx>', '<movsxd~~rdx, edx>', '<mov~~qword ptr [rsp + 0x2a0], rdx>', '<mov~~qword ptr [rsp + 0x2a8], rcx>', '<mov~~dword ptr [rsp + 0x2b4], eax>', '<mov~~eax, dword ptr [rsp + 0x2b4]>', '<mov~~rcx, qword ptr [rsp + 0x2a8]>', '<mov~~rdx, qword ptr [rsp + 0x2a0]>', '<mov~~rsi, qword ptr [rsp + 0x380]>', '<add~~eax, dword ptr [rsi + rcx*4]>', '<mov~~dword ptr [rsp + 0x294], eax>', '<mov~~dword ptr [rsi + rcx*4], eax>', '<add~~rcx, 1>', '<mov~~qword ptr [rsp + 0x298], rcx>', '<cmp~~rcx, rdx>', '<mov~~qword ptr [rsp + 0x2a8], rcx>', '<mov~~dword ptr [rsp + 0x2b4], eax>', '<je~~0x4022ec>']}, {'block_Idx': 118, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x528]>', '<sub~~eax, 0xc>', '<je~~0x40134f>']}, {'block_Idx': 170, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4e0]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2d22]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 216, 'blockInsts': ['<jmp~~0x402cb8>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x600]>', '<mov~~edx, dword ptr [rsp + 0x5f4]>', '<mov~~dword ptr [rsp + 0x5e8], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x5ec], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<jb~~0x402dc3>']}, {'block_Idx': 97, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<shr~~eax, 0xf8>', '<add~~edx, 8>', '<mov~~dword ptr [rcx], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x4a4], eax>', '<jmp~~0x401238>']}, {'block_Idx': 45, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x578]>', '<mov~~edx, dword ptr [rsp + 0x570]>', '<mov~~ecx, dword ptr [rax]>', '<add~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x55c]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x40098f>']}, {'block_Idx': 217, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x188]>', '<mov~~rdx, qword ptr [rsp + 0x138]>', '<mov~~rax, qword ptr [rsp + 0x118]>', '<mov~~rcx, qword ptr [rsp + 0x120]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x170], rdx>', '<mov~~qword ptr [rsp + 0x178], rcx>', '<mov~~qword ptr [rsp + 0x180], rax>', '<jl~~0x40277d>']}, {'block_Idx': 89, 'blockInsts': ['<jmp~~0x401148>']}, {'block_Idx': 150, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x590]>', '<mov~~dword ptr [rax], 1>', '<mov~~eax, dword ptr [rsp + 0x56c]>', '<cmp~~eax, 0>', '<jle~~0x400b96>']}, {'block_Idx': 40, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x5c8]>', '<mov~~ecx, dword ptr [rsp + 0x5b0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x54c], eax>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<add~~eax, 2>', '<cmp~~eax, ecx>', '<jge~~0x402ce5>']}, {'block_Idx': 250, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x438]>', '<mov~~rcx, qword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x458]>', '<mov~~rsi, qword ptr [rsp + 0x370]>', '<mov~~qword ptr [rsp + 0x350], rsi>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x358], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x35c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x360], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x364], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401c9d>']}, {'block_Idx': 176, 'blockInsts': ['<lea~~rdi, [rip + 0x1ac8]>', '<lea~~rsi, [rip + 0x1a59]>', '<mov~~edx, 0x2ba>', '<lea~~rcx, [rip + 0x1ac6]>', '<call~~0x500050>']}, {'block_Idx': 159, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x220]>', '<lea~~rcx, [rip + 0x1c0d]>', '<movsxd~~rax, dword ptr [rcx + rax*4]>', '<add~~rax, rcx>', '<jmp~~rax>']}, {'block_Idx': 163, 'blockInsts': ['<jmp~~0x4015e8>']}, {'block_Idx': 108, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x528]>', '<cmp~~eax, 0>', '<jne~~0x4012f2>']}, {'block_Idx': 174, 'blockInsts': ['<lea~~rdi, [rip + 0x168e]>', '<lea~~rsi, [rip + 0x161f]>', '<mov~~edx, 0x2be>', '<lea~~rcx, [rip + 0x168c]>', '<call~~0x500050>']}, {'block_Idx': 237, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4e0]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x20d5]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 225, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x490]>', '<mov~~rax, qword ptr [rsp + 0x448]>', '<add~~rax, 1>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x460], rax>', '<jl~~0x401573>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x600]>', '<mov~~ecx, dword ptr [rsp + 0x5e8]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rsi, rdx>', '<add~~rsi, 0xa4>', '<mov~~qword ptr [rsp + 0x5e0], rsi>', '<mov~~edx, dword ptr [rdx + 0xa4]>', '<add~~ecx, eax>', '<xor~~edx, 0xffffffff>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<ja~~0x402dc3>']}, {'block_Idx': 303, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x378]>', '<mov~~ecx, dword ptr [rsp + 0x32c]>', '<mov~~dword ptr [rsp + 0x328], ecx>', '<cmp~~eax, 3>', '<jle~~0x401eb8>']}, {'block_Idx': 247, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x508]>', '<mov~~edi, dword ptr [rsp + 0x3a8]>', '<mov~~esi, dword ptr [rsp + 0x3ac]>', '<mov~~rax, qword ptr [rsp + 0x438]>', '<mov~~r9d, dword ptr [rsp + 0x3b4]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, esi>', '<add~~r8d, 0x10>', '<mov~~dword ptr [rdx], r8d>', '<mov~~ecx, edi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x394], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x3b0]>', '<mov~~dword ptr [rsp + 0x398], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x394]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x398]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x39c], eax>', '<mov~~rax, qword ptr [rsp + 0x3a0]>', '<mov~~rdx, qword ptr [rsp + 0x3f0]>', '<mov~~edi, dword ptr [rsp + 0x3a8]>', '<mov~~esi, dword ptr [rsp + 0x39c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x390], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x390]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x468]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3f8], rax>', '<jl~~0x4019eb>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5b0]>', '<mov~~rax, qword ptr [rsp + 0x5c8]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x10], eax>', '<cmp~~eax, ecx>', '<jle~~0x402d5c>']}, {'block_Idx': 82, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x4b0]>', '<mov~~rax, qword ptr [rsp + 0x508]>', '<mov~~rcx, qword ptr [rsp + 0x518]>', '<mov~~esi, dword ptr [rsp + 0x4ac]>', '<add~~esi, -1>', '<mov~~dword ptr [rsp + 0x4a8], esi>', '<mov~~esi, dword ptr [rax]>', '<mov~~edi, esi>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rcx + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<mov~~ecx, esi>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x4a8]>', '<shr~~edi, 0xf8>', '<add~~esi, 8>', '<mov~~dword ptr [rax], esi>', '<add~~edi, -0x80>', '<cmp~~edi, 0x40>', '<setb~~sil>', '<mov~~rax, rdx>', '<shl~~rax, 6>', '<movsxd~~r8, edi>', '<add~~rax, r8>', '<cmp~~edi, 0x40>', '<cmovb~~rdx, rax>', '<mov~~rax, -1>', '<test~~sil, 1>', '<mov~~qword ptr [rsp + 0x4b8], rdx>', '<mov~~dword ptr [rsp + 0x4c4], ecx>', '<mov~~qword ptr [rsp + 0x4d0], rax>', '<jne~~0x401041>']}, {'block_Idx': 215, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x88]>', '<mov~~rdx, qword ptr [rsp + 0x38]>', '<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~rcx, qword ptr [rsp + 0x20]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x70], rdx>', '<mov~~qword ptr [rsp + 0x78], rcx>', '<mov~~qword ptr [rsp + 0x80], rax>', '<jl~~0x402bb7>']}, {'block_Idx': 241, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x378]>', '<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x448]>', '<mov~~esi, eax>', '<call~~0x403730>']}, {'block_Idx': 254, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3a0]>', '<mov~~rdx, qword ptr [rsp + 0x3f0]>', '<mov~~edi, dword ptr [rsp + 0x3a8]>', '<mov~~esi, dword ptr [rsp + 0x39c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x390], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x390]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x468]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3f8], rax>', '<jl~~0x4019eb>']}, {'block_Idx': 192, 'blockInsts': ['<jmp~~0x4024ae>']}, {'block_Idx': 197, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0xd8]>', '<mov~~rcx, qword ptr [rsp + 0xd0]>', '<mov~~rdx, qword ptr [rsp + 0xc8]>', '<mov~~rsi, qword ptr [rsp + 0xf0]>', '<mov~~rdi, qword ptr [rsp + 0xf8]>', '<mov~~r8, qword ptr [rsp + 0x100]>', '<mov~~qword ptr [rsp + 0xa8], r8>', '<mov~~qword ptr [rsp + 0xb0], rdi>', '<mov~~qword ptr [rsp + 0xb8], rsi>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~ecx, dword ptr [rcx + rsi*4]>', '<mov~~dword ptr [rsp + 0xc0], ecx>', '<mov~~eax, dword ptr [rax]>', '<add~~ecx, edx>', '<mov~~dword ptr [rsp + 0xc4], ecx>', '<cmp~~eax, 0>', '<je~~0x402a5a>']}, {'block_Idx': 33, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x578]>', '<mov~~rax, qword ptr [rsp + 0x580]>', '<mov~~edx, dword ptr [rdi]>', '<mov~~rax, qword ptr [rax]>', '<mov~~qword ptr [rsp + 0x550], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x564], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x55c], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~dword ptr [rdi], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x560], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<mov~~dword ptr [rdi], esi>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<mov~~dword ptr [rdi], r8d>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x588]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x568], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x56c], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x570], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x574], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400afd>']}, {'block_Idx': 73, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4d0]>', '<cmp~~rax, 0>', '<jge~~0x40113b>']}, {'block_Idx': 281, 'blockInsts': ['<sub~~rsp, 0x158>', '<mov~~dword ptr [rsp + 0x128], edx>', '<mov~~dword ptr [rsp + 0x12c], esi>', '<mov~~qword ptr [rsp + 0x130], rdi>', '<mov~~rax, rdi>', '<add~~rax, 0x38>', '<mov~~qword ptr [rsp + 0x138], rax>', '<mov~~ecx, dword ptr [rdi + 0x38]>', '<mov~~dword ptr [rsp + 0x14c], ecx>', '<mov~~rax, qword ptr [rdi + 0x28]>', '<mov~~qword ptr [rsp + 0x140], rax>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x14c]>', '<shr~~eax, 0xfe>', '<mov~~dword ptr [rsp + 0x150], eax>', '<add~~ecx, 2>', '<mov~~dword ptr [rsp + 0x154], ecx>', '<mov~~dword ptr [rdi + 0x38], ecx>', '<cmp~~eax, 1>', '<jle~~0x4037e4>']}, {'block_Idx': 327, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x37c]>', '<mov~~ecx, dword ptr [rsp + 0x378]>', '<cmp~~eax, ecx>', '<jle~~0x4022ec>']}, {'block_Idx': 27, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x560]>', '<cmp~~eax, 0>', '<jne~~0x400b75>']}, {'block_Idx': 209, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0xb0]>', '<mov~~esi, dword ptr [rsp + 0xc0]>', '<mov~~rax, qword ptr [rsp + 0xe0]>', '<mov~~edi, dword ptr [rsp + 0xc4]>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~dword ptr [rdx], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0xa8]>', '<mov~~rax, rdx>', '<add~~rax, 8>', '<mov~~dword ptr [rdx + 4], esi>', '<mov~~qword ptr [rsp + 0x98], rcx>', '<mov~~qword ptr [rsp + 0xa0], rax>', '<jmp~~0x402ab7>']}, {'block_Idx': 110, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x524]>', '<movsxd~~rcx, eax>', '<lea~~rax, [rip + 0x2e12]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x4a4], eax>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~eax, dword ptr [rsp + 0x4a4]>', '<mov~~dword ptr [rsp + 0x49c], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x4a0], ecx>', '<cmp~~eax, ecx>', '<jle~~0x40128a>']}, {'block_Idx': 171, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x508]>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x434], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x438], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x444], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x440], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x444]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401669>']}, {'block_Idx': 362, 'blockInsts': ['<jmp~~0x4020ce>']}, {'block_Idx': 119, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x630]>', '<call~~0x402e00>']}, {'block_Idx': 125, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x528]>', '<sub~~eax, 0xd>', '<je~~0x4013a0>']}, {'block_Idx': 161, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x458]>', '<mov~~ecx, dword ptr [rsp + 0x450]>', '<add~~ecx, 1>', '<mov~~dword ptr [rax], ecx>', '<mov~~rax, qword ptr [rsp + 0x508]>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x434], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x438], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x444], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x440], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x444]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401669>']}, {'block_Idx': 222, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, qword ptr [rsp + 0x448]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x3c0], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x3c8], rax>', '<mov~~rax, qword ptr [rsp + 0x3c8]>', '<mov~~rcx, qword ptr [rsp + 0x468]>', '<mov~~rdx, qword ptr [rsp + 0x3c0]>', '<mov~~esi, dword ptr [rsp + 0x3d4]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3b8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3c8], rax>', '<jl~~0x4019a8>']}, {'block_Idx': 232, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~rdx, qword ptr [rsp + 0x458]>', '<mov~~rsi, qword ptr [rsp + 0x4e8]>', '<mov~~rax, qword ptr [rsp + 0x460]>', '<mov~~qword ptr [rsp + 0x448], rax>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x450], esi>', '<mov~~dword ptr [rdx], esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x454], ecx>', '<cmp~~rax, 0>', '<jne~~0x4015c3>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, rax>', '<add~~rcx, 0x38>', '<mov~~qword ptr [rsp + 0x578], rcx>', '<mov~~ecx, dword ptr [rax + 0x38]>', '<add~~ecx, 0x20>', '<mov~~dword ptr [rax + 0x38], ecx>', '<mov~~rcx, rax>', '<add~~rcx, 0x28>', '<mov~~qword ptr [rsp + 0x580], rcx>', '<mov~~rcx, rax>', '<add~~rcx, 0x3c>', '<mov~~qword ptr [rsp + 0x588], rcx>', '<mov~~rcx, rax>', '<add~~rcx, 0x54>', '<mov~~qword ptr [rsp + 0x590], rcx>', '<mov~~rcx, rax>', '<add~~rcx, 0x20>', '<mov~~qword ptr [rsp + 0x598], rcx>', '<mov~~qword ptr [rsp + 0x5a0], rax>', '<mov~~rdi, qword ptr [rsp + 0x578]>', '<mov~~rax, qword ptr [rsp + 0x580]>', '<mov~~edx, dword ptr [rdi]>', '<mov~~rax, qword ptr [rax]>', '<mov~~qword ptr [rsp + 0x550], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x564], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x55c], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~dword ptr [rdi], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x560], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<mov~~dword ptr [rdi], esi>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<mov~~dword ptr [rdi], r8d>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x588]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x568], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x56c], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x570], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x574], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400afd>']}, {'block_Idx': 50, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x54c]>', '<mov~~rcx, qword ptr [rsp + 0x5c0]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x538], rcx>', '<mov~~ecx, eax>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x544], ecx>', '<mov~~dword ptr [rsp + 0x548], eax>', '<mov~~ecx, dword ptr [rsp + 0x544]>', '<mov~~rax, qword ptr [rsp + 0x538]>', '<mov~~edx, dword ptr [rsp + 0x548]>', '<mov~~dword ptr [rsp + 0x534], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x402ce5>']}, {'block_Idx': 162, 'blockInsts': ['<jmp~~0x4015e8>']}, {'block_Idx': 106, 'blockInsts': ['<jmp~~0x40121d>']}, {'block_Idx': 351, 'blockInsts': ['<mov~~r8d, dword ptr [rsp + 0x2cc]>', '<mov~~ecx, dword ptr [rsp + 0x2c8]>', '<mov~~rdx, qword ptr [rsp + 0x2c0]>', '<mov~~rsi, qword ptr [rsp + 0x2b8]>', '<mov~~rdi, qword ptr [rsp + 0x380]>', '<add~~ecx, dword ptr [rdi + rdx*4]>', '<mov~~dword ptr [rsp + 0x280], ecx>', '<mov~~eax, ecx>', '<add~~eax, r8d>', '<mov~~dword ptr [rsp + 0x284], eax>', '<mov~~dword ptr [rdi + rdx*4], eax>', '<add~~rdx, 1>', '<mov~~qword ptr [rsp + 0x288], rdx>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x2c0], rdx>', '<mov~~dword ptr [rsp + 0x2c8], ecx>', '<mov~~dword ptr [rsp + 0x2cc], eax>', '<je~~0x4022ec>']}, {'block_Idx': 195, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x58]>', '<mov~~rdx, qword ptr [rsp + 0x50]>', '<mov~~rcx, qword ptr [rsp + 0x48]>', '<mov~~rsi, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rsp + 0x78]>', '<mov~~r8, qword ptr [rsp + 0x80]>', '<mov~~qword ptr [rsp + 0x28], r8>', '<mov~~qword ptr [rsp + 0x30], rdi>', '<mov~~qword ptr [rsp + 0x38], rsi>', '<mov~~ecx, dword ptr [rcx + rsi*4]>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~eax, dword ptr [rax]>', '<mov~~esi, edx>', '<sar~~esi, 1>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x40], ecx>', '<add~~ecx, edx>', '<mov~~dword ptr [rsp + 0x44], ecx>', '<cmp~~eax, 0>', '<je~~0x402c3d>']}, {'block_Idx': 183, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x638]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x48], rsi>', '<mov~~rsi, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x50], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x4c>', '<mov~~qword ptr [rsp + 0x58], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x48>', '<mov~~qword ptr [rsp + 0x60], rsi>', '<add~~rdx, 0x48>', '<mov~~qword ptr [rsp + 0x68], rdx>', '<xor~~edx, edx>', '<mov~~qword ptr [rsp + 0x70], rdx>', '<mov~~qword ptr [rsp + 0x78], rcx>', '<mov~~qword ptr [rsp + 0x80], rax>', '<jmp~~0x402bb7>']}, {'block_Idx': 182, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x1e0]>', '<mov~~rdx, qword ptr [rsp + 0x200]>', '<mov~~rcx, qword ptr [rsp + 0x208]>', '<mov~~rax, qword ptr [rsp + 0x210]>', '<mov~~qword ptr [rsp + 0x1c0], rdx>', '<xor~~edx, edx>', '<cmp~~dword ptr [rsi], 0>', '<mov~~qword ptr [rsp + 0x1c8], rdx>', '<mov~~qword ptr [rsp + 0x1d0], rcx>', '<mov~~qword ptr [rsp + 0x1d8], rax>', '<jle~~0x402668>']}, {'block_Idx': 249, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x350]>', '<mov~~rdx, qword ptr [rsp + 0x380]>', '<mov~~edi, dword ptr [rsp + 0x358]>', '<mov~~esi, dword ptr [rsp + 0x34c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x340], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x340]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x368]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x370], rax>', '<jne~~0x401bfe>']}, {'block_Idx': 81, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x524]>', '<test~~eax, eax>', '<je~~0x401167>']}, {'block_Idx': 294, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x378]>', '<mov~~ecx, dword ptr [rsp + 0x33c]>', '<mov~~dword ptr [rsp + 0x338], ecx>', '<cmp~~eax, 1>', '<jle~~0x401e14>']}, {'block_Idx': 191, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x40c]>', '<mov~~rcx, qword ptr [rsp + 0x458]>', '<mov~~edx, dword ptr [rcx]>', '<sub~~edx, eax>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x430], eax>', '<mov~~rax, qword ptr [rsp + 0x458]>', '<mov~~ecx, dword ptr [rsp + 0x430]>', '<mov~~dword ptr [rsp + 0x404], ecx>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x408], eax>', '<cmp~~eax, 0x20>', '<jle~~0x4017cc>']}], 'cfg_edge_info': [(247, 255), (118, 122), (40, 50), (33, 20), (350, 221), (125, 130), (22, 28), (233, 239), (192, 67), (317, 327), (7, 12), (47, 57), (59, 68), (172, 182), (240, 246), (34, 7), (154, 161), (233, 225), (173, 183), (214, 193), (206, 216), (55, 65), (58, 67), (180, 191), (255, 221), (10, 17), (110, 104), (25, 15), (173, 160), (125, 129), (14, 23), (247, 240), (317, 326), (7, 11), (65, 83), (287, 294), (47, 56), (327, 339), (220, 222), (60, 4), (328, 340), (153, 159), (241, 281), (339, 349), (205, 215), (243, 241), (165, 160), (24, 32), (217, 216), (143, 150), (106, 110), (28, 29), (179, 189), (117, 116), (198, 211), (228, 221), (191, 190), (239, 239), (113, 118), (169, 180), (110, 103), (361, 350), (35, 36), (283, 287), (294, 296), (135, 141), (17, 15), (338, 348), (187, 197), (40, 7), (6, 5), (326, 221), (239, 225), (220, 221), (342, 67), (182, 194), (183, 195), (24, 31), (146, 155), (46, 55), (57, 55), (9, 15), (227, 228), (235, 241), (28, 37), (21, 7), (379, 380), (168, 178), (98, 101), (101, 106), (83, 67), (113, 117), (12, 25), (160, 12), (348, 221), (242, 249), (202, 194), (105, 100), (35, 44), (294, 295), (56, 76), (135, 140), (68, 59), (6, 4), (27, 36), (197, 209), (170, 192), (278, 283), (182, 193), (112, 116), (234, 240), (329, 221), (31, 51), (114, 67), (103, 67), (94, 98), (13, 21), (76, 67), (227, 227), (138, 146), (318, 342), (171, 170), (101, 105), (134, 139), (119, 150), (160, 11), (175, 185), (360, 221), (296, 304), (145, 153), (108, 113), (26, 34), (208, 218), (8, 13), (348, 359), (90, 73), (27, 35), (11, 18), (197, 208), (90, 82), (225, 145), (222, 228), (303, 311), (152, 160), (45, 34), (288, 295), (118, 121), (159, 168), (89, 94), (207, 217), (138, 145), (329, 341), (340, 350), (249, 241), (189, 199), (82, 73), (310, 318), (171, 169), (219, 218), (351, 221), (236, 243), (196, 207), (296, 303), (145, 152), (193, 201), (26, 33), (201, 160), (167, 176), (100, 104), (362, 351), (203, 214), (243, 250), (222, 227), (303, 310), (152, 159), (45, 33), (68, 7), (155, 161), (37, 47), (55, 64), (67, 84), (159, 167), (29, 39), (199, 212), (310, 317), (73, 81), (395, 379), (44, 54), (14, 22), (74, 73), (74, 82), (236, 242), (193, 182), (166, 174), (226, 225), (229, 221), (139, 156), (100, 103), (204, 160), (215, 160), (84, 15), (327, 221), (81, 89), (254, 255), (150, 45), (206, 196), (177, 160), (195, 205), (317, 329), (198, 210), (180, 180), (92, 67), (191, 189), (129, 116), (140, 116), (0, 2), (29, 38), (210, 220), (80, 92), (169, 179), (221, 226), (224, 231), (73, 80), (51, 43), (165, 172), (103, 108), (225, 232), (166, 173), (36, 45), (250, 243), (48, 37), (121, 116), (161, 170), (33, 21), (217, 196), (162, 171), (146, 154), (32, 43), (194, 203), (150, 26), (43, 61), (339, 221), (218, 160), (195, 204), (88, 96), (168, 177), (61, 60), (278, 67), (60, 15), (221, 225), (224, 230), (202, 193), (51, 42), (231, 238), (254, 240), (154, 162), (246, 254), (214, 194), (44, 119), (36, 26), (158, 150), (250, 242), (209, 219), (42, 60), (349, 360), (10, 9), (164, 67), (161, 169), (241, 278), (2, 5), (94, 97), (13, 20), (223, 229), (194, 202), (64, 74), (124, 134), (249, 250), (50, 59), (134, 138), (341, 351), (20, 27), (251, 67), (153, 160), (156, 67), (39, 58), (382, 379), (212, 224), (231, 237), (213, 67), (108, 112), (96, 67), (5, 10), (179, 190), (238, 245), (2, 4), (190, 213), (380, 221), (379, 67), (16, 15), (304, 311), (16, 24), (64, 73), (283, 288), (38, 39), (17, 16), (38, 48), (301, 278), (189, 198), (230, 236), (82, 90), (20, 26), (211, 222), (311, 318), (104, 114), (23, 40), (212, 223), (196, 206), (238, 379), (116, 124), (185, 196), (5, 9), (9, 16), (167, 175), (130, 135), (232, 155), (360, 349), (175, 160), (326, 338), (37, 46), (304, 310), (177, 187), (69, 7), (229, 234), (159, 166), (230, 235), (317, 221), (4, 8), (211, 221), (311, 317), (359, 348), (208, 197), (226, 233), (50, 7), (237, 251), (97, 100), (232, 154), (11, 15), (81, 88), (141, 148), (295, 304), (204, 195), (215, 195), (216, 160), (22, 29), (1, 6), (328, 221), (122, 125), (317, 328), (59, 69), (159, 165), (350, 361), (0, 1), (8, 14), (219, 197), (148, 164), (351, 362), (240, 247), (163, 171), (4, 7), (155, 163), (288, 296)], 'cdg_edge_info': [(161, 84), (134, 67), (118, 122), (55, 84), (159, 160), (40, 50), (33, 20), (169, 191), (135, 67), (81, 96), (125, 130), (73, 92), (22, 28), (233, 239), (191, 84), (165, 193), (26, 7), (317, 327), (7, 12), (47, 57), (179, 213), (59, 68), (110, 15), (47, 84), (278, 84), (113, 124), (328, 350), (240, 246), (125, 116), (45, 7), (154, 161), (125, 134), (173, 183), (155, 171), (55, 65), (134, 84), (10, 17), (110, 104), (125, 129), (14, 23), (16, 60), (247, 240), (317, 326), (7, 11), (47, 56), (327, 339), (38, 84), (350, 350), (220, 222), (60, 4), (328, 340), (153, 159), (94, 100), (125, 124), (194, 214), (47, 15), (28, 29), (179, 189), (135, 164), (250, 249), (198, 211), (191, 190), (239, 239), (113, 118), (169, 180), (81, 67), (110, 103), (35, 36), (175, 196), (294, 296), (134, 15), (135, 141), (108, 124), (17, 15), (6, 5), (100, 67), (197, 219), (135, 15), (134, 145), (182, 194), (179, 67), (24, 31), (146, 155), (9, 15), (28, 37), (168, 160), (168, 178), (101, 106), (110, 84), (113, 117), (160, 12), (202, 194), (35, 44), (310, 221), (135, 140), (68, 59), (6, 4), (27, 36), (278, 283), (197, 209), (101, 110), (160, 25), (103, 67), (94, 98), (212, 221), (13, 21), (171, 67), (310, 225), (227, 227), (229, 255), (138, 146), (329, 351), (171, 170), (101, 105), (134, 139), (160, 11), (13, 7), (212, 225), (175, 185), (196, 217), (296, 304), (193, 193), (145, 153), (231, 67), (108, 113), (26, 34), (8, 13), (310, 67), (27, 35), (11, 18), (81, 15), (197, 208), (90, 82), (100, 114), (225, 145), (379, 221), (171, 192), (211, 228), (160, 15), (45, 34), (100, 15), (7, 25), (118, 121), (55, 83), (159, 168), (0, 4), (329, 341), (179, 15), (29, 58), (189, 199), (310, 318), (29, 67), (171, 169), (135, 84), (224, 278), (236, 243), (196, 207), (26, 33), (118, 116), (229, 240), (118, 125), (167, 176), (118, 134), (191, 213), (100, 104), (351, 351), (310, 84), (240, 254), (243, 250), (222, 227), (45, 33), (155, 161), (37, 47), (195, 215), (7, 15), (55, 64), (198, 220), (55, 73), (177, 197), (159, 167), (29, 39), (310, 317), (103, 15), (73, 81), (224, 241), (81, 94), (171, 15), (14, 22), (165, 182), (173, 195), (74, 82), (236, 242), (14, 40), (193, 182), (166, 174), (47, 55), (118, 124), (100, 103), (73, 67), (81, 89), (231, 15), (150, 45), (206, 196), (166, 160), (195, 205), (317, 329), (310, 15), (198, 210), (180, 180), (191, 189), (0, 2), (29, 38), (169, 179), (221, 226), (224, 231), (81, 84), (73, 80), (51, 43), (165, 172), (51, 61), (103, 108), (225, 232), (166, 173), (36, 45), (250, 243), (161, 67), (55, 67), (29, 15), (100, 84), (161, 170), (33, 21), (179, 84), (217, 196), (73, 84), (146, 154), (191, 67), (14, 7), (194, 203), (150, 26), (195, 204), (168, 177), (278, 67), (60, 15), (113, 116), (33, 7), (113, 134), (379, 15), (161, 192), (224, 230), (231, 238), (254, 240), (154, 162), (154, 171), (283, 294), (214, 194), (36, 26), (135, 148), (250, 242), (311, 221), (220, 228), (101, 100), (360, 360), (10, 9), (161, 169), (2, 5), (110, 114), (94, 97), (13, 20), (212, 229), (103, 84), (135, 116), (194, 202), (64, 74), (135, 134), (171, 84), (38, 58), (38, 67), (311, 225), (249, 250), (73, 15), (50, 59), (134, 138), (20, 27), (379, 225), (153, 160), (134, 156), (94, 101), (212, 224), (231, 237), (108, 112), (24, 51), (5, 10), (231, 84), (179, 190), (189, 212), (189, 221), (311, 67), (379, 67), (16, 15), (161, 15), (326, 348), (16, 24), (304, 311), (283, 288), (135, 124), (55, 15), (108, 116), (38, 39), (17, 16), (38, 48), (108, 134), (230, 236), (189, 198), (82, 90), (29, 84), (189, 225), (20, 26), (211, 222), (191, 15), (311, 318), (196, 206), (5, 9), (278, 15), (9, 16), (167, 175), (348, 348), (232, 155), (110, 67), (311, 84), (326, 338), (37, 46), (304, 310), (37, 55), (379, 84), (177, 187), (229, 234), (159, 166), (230, 235), (4, 8), (311, 317), (38, 15), (226, 233), (208, 197), (232, 154), (0, 6), (11, 15), (81, 88), (204, 195), (215, 195), (22, 29), (317, 328), (38, 37), (167, 160), (47, 67), (47, 76), (159, 165), (311, 15), (0, 1), (8, 14), (219, 197), (339, 360), (240, 247), (4, 7), (125, 135), (155, 163), (236, 249), (288, 296)], 'ddg_edge_info': [(206, 217), (226, 232), (138, 348), (317, 350), (249, 215), (1, 113), (0, 5), (239, 250), (64, 169), (191, 210), (138, 204), (351, 348), (317, 206), (169, 191), (161, 187), (348, 193), (221, 238), (360, 167), (138, 240), (225, 208), (350, 239), (351, 204), (22, 28), (227, 168), (165, 193), (226, 209), (124, 161), (103, 138), (1, 90), (59, 68), (5, 60), (191, 187), (124, 197), (350, 360), (317, 183), (283, 190), (348, 170), (221, 215), (6, 61), (138, 217), (10, 31), (61, 113), (227, 145), (0, 103), (233, 225), (171, 250), (351, 217), (283, 311), (249, 169), (1, 67), (206, 207), (124, 174), (110, 239), (317, 160), (1, 103), (283, 167), (220, 227), (180, 191), (239, 240), (138, 194), (317, 196), (10, 8), (283, 203), (61, 90), (161, 177), (232, 237), (225, 198), (110, 360), (350, 229), (351, 194), (22, 247), (202, 214), (0, 116), (16, 60), (249, 182), (1, 80), (138, 351), (239, 217), (191, 177), (17, 61), (317, 173), (283, 180), (61, 67), (348, 160), (221, 205), (232, 214), (97, 169), (138, 207), (350, 206), (351, 171), (61, 103), (161, 190), (171, 240), (249, 159), (1, 57), (110, 229), (22, 116), (209, 208), (239, 230), (191, 190), (232, 191), (350, 183), (61, 80), (161, 167), (226, 153), (110, 350), (110, 121), (239, 351), (360, 232), (13, 45), (110, 206), (227, 233), (187, 197), (232, 348), (239, 207), (191, 167), (22, 129), (283, 170), (61, 57), (221, 195), (232, 204), (138, 197), (225, 165), (350, 196), (226, 166), (233, 25), (24, 31), (22, 250), (183, 204), (150, 27), (1, 47), (138, 318), (46, 55), (5, 17), (110, 219), (350, 317), (28, 37), (221, 172), (239, 220), (124, 239), (350, 173), (55, 139), (0, 60), (254, 205), (160, 12), (82, 129), (202, 194), (1, 24), (360, 222), (13, 35), (110, 196), (239, 197), (283, 160), (61, 47), (221, 185), (0, 37), (232, 194), (110, 317), (182, 193), (234, 240), (0, 73), (348, 225), (239, 318), (110, 173), (55, 237), (1, 37), (304, 340), (110, 209), (0, 194), (232, 171), (124, 229), (348, 202), (254, 195), (221, 18), (225, 168), (161, 232), (1, 14), (227, 177), (239, 187), (226, 254), (124, 206), (249, 237), (61, 37), (1, 135), (221, 175), (0, 27), (191, 232), (225, 145), (124, 242), (348, 215), (254, 208), (247, 169), (112, 124), (4, 33), (351, 226), (0, 148), (227, 190), (249, 214), (61, 14), (1, 112), (0, 4), (207, 217), (232, 161), (124, 219), (82, 73), (22, 171), (317, 205), (1, 148), (350, 153), (283, 212), (254, 185), (360, 166), (138, 239), (61, 135), (161, 222), (1, 4), (227, 167), (360, 202), (226, 208), (351, 239), (249, 191), (239, 177), (185, 206), (138, 360), (124, 196), (1, 125), (0, 17), (6, 60), (191, 222), (351, 360), (283, 225), (61, 112), (348, 205), (221, 250), (249, 348), (110, 153), (61, 148), (0, 138), (227, 180), (139, 67), (37, 56), (124, 173), (249, 204), (61, 4), (67, 84), (124, 209), (317, 195), (283, 202), (348, 182), (254, 175), (33, 27), (138, 229), (10, 43), (61, 125), (225, 233), (226, 198), (230, 348), (110, 166), (351, 229), (138, 350), (17, 60), (348, 159), (138, 206), (351, 350), (317, 208), (283, 215), (221, 240), (360, 169), (351, 206), (206, 196), (360, 254), (249, 194), (239, 229), (317, 185), (103, 225), (129, 134), (221, 217), (232, 226), (138, 219), (351, 183), (161, 202), (202, 203), (0, 105), (254, 250), (351, 219), (249, 171), (124, 176), (283, 169), (48, 37), (60, 11), (191, 202), (232, 203), (138, 196), (350, 195), (283, 205), (221, 230), (0, 82), (232, 239), (226, 165), (217, 196), (351, 196), (0, 118), (138, 317), (105, 140), (124, 153), (283, 326), (22, 105), (1, 82), (187, 209), (232, 360), (239, 219), (138, 173), (55, 318), (110, 254), (317, 175), (351, 317), (129, 124), (283, 182), (221, 207), (138, 209), (225, 177), (350, 208), (351, 173), (202, 193), (254, 240), (51, 60), (227, 222), (250, 242), (22, 118), (283, 159), (61, 46), (239, 232), (232, 193), (150, 160), (350, 185), (82, 105), (61, 82), (161, 169), (221, 220), (254, 217), (233, 194), (225, 190), (194, 202), (67, 18), (110, 208), (239, 209), (232, 170), (317, 165), (283, 172), (221, 197), (232, 206), (225, 167), (317, 250), (350, 198), (348, 237), (254, 230), (226, 168), (23, 68), (64, 105), (22, 108), (254, 351), (221, 174), (239, 222), (232, 183), (124, 241), (350, 175), (161, 159), (202, 160), (254, 207), (225, 180), (226, 145), (348, 250), (64, 82), (110, 198), (0, 183), (227, 225), (191, 159), (232, 160), (138, 153), (230, 236), (221, 187), (0, 39), (124, 254), (317, 240), (351, 153), (283, 247), (283, 18), (254, 220), (110, 175), (1, 39), (0, 160), (227, 202), (232, 317), (5, 9), (296, 338), (249, 226), (146, 250), (232, 173), (124, 231), (230, 249), (350, 165), (1, 160), (348, 204), (254, 197), (4, 22), (169, 238), (1, 16), (326, 338), (360, 214), (239, 153), (105, 110), (288, 311), (0, 173), (254, 318), (124, 208), (249, 239), (61, 39), (8, 33), (0, 29), (23, 12), (317, 230), (283, 237), (348, 217), (360, 191), (170, 67), (249, 360), (110, 165), (61, 160), (0, 150), (239, 166), (226, 233), (317, 351), (146, 240), (221, 154), (0, 6), (124, 221), (317, 207), (283, 214), (348, 194), (254, 187), (360, 168), (4, 12), (10, 55), (350, 240), (283, 250), (215, 195), (22, 29), (1, 6), (227, 169), (230, 360), (249, 193), (33, 160), (207, 196), (124, 198), (348, 171), (360, 145), (317, 220), (84, 18), (283, 227), (129, 169), (348, 207), (138, 254), (225, 222), (10, 68), (249, 350), (161, 237), (227, 182), (0, 140), (124, 175), (283, 348), (249, 206), (1, 104), (317, 197), (283, 204), (221, 229), (254, 177), (191, 237), (232, 238), (350, 230), (351, 195), (161, 214), (0, 117), (227, 159), (233, 239), (317, 318), (249, 183), (1, 81), (187, 208), (33, 150), (350, 351), (22, 140), (0, 238), (0, 9), (239, 254), (45, 160), (191, 214), (232, 215), (138, 208), (10, 22), (350, 207), (283, 217), (61, 104), (161, 191), (221, 242), (0, 94), (226, 177), (230, 327), (110, 145), (351, 208), (249, 160), (294, 311), (124, 165), (283, 338), (249, 196), (55, 65), (1, 94), (138, 185), (211, 169), (317, 187), (22, 153), (283, 194), (61, 81), (161, 168), (221, 219), (230, 304), (82, 140), (351, 185), (350, 220), (249, 317), (161, 204), (146, 161), (226, 190), (16, 51), (249, 173), (191, 168), (124, 178), (283, 171), (221, 196), (191, 204), (232, 205), (138, 198), (350, 197), (61, 94), (221, 232), (0, 84), (254, 229), (225, 202), (226, 167), (351, 198), (183, 205), (194, 214), (1, 48), (124, 155), (110, 220), (350, 318), (117, 116), (28, 38), (138, 175), (317, 177), (124, 11), (0, 241), (221, 209), (233, 183), (230, 294), (110, 112), (351, 175), (0, 97), (226, 180), (1, 61), (239, 198), (110, 233), (283, 161), (61, 48), (232, 195), (233, 160), (350, 187), (182, 194), (161, 171), (0, 74), (59, 160), (254, 219), (31, 61), (16, 18), (183, 195), (150, 18), (1, 38), (124, 145), (57, 55), (22, 97), (227, 237), (6, 9), (138, 165), (8, 55), (0, 51), (232, 208), (233, 173), (12, 25), (225, 169), (171, 198), (351, 165), (234, 254), (348, 239), (254, 232), (56, 67), (110, 187), (190, 67), (1, 51), (227, 214), (0, 172), (22, 110), (348, 360), (61, 38), (221, 176), (232, 185), (124, 243), (350, 177), (82, 97), (8, 68), (0, 64), (254, 209), (205, 204), (360, 190), (31, 51), (171, 211), (169, 250), (1, 28), (227, 191), (360, 226), (239, 165), (0, 185), (221, 153), (124, 220), (225, 159), (283, 249), (227, 348), (348, 229), (254, 222), (1, 5), (360, 203), (196, 217), (351, 240), (110, 177), (296, 304), (22, 64), (227, 204), (5, 11), (185, 207), (348, 350), (61, 28), (8, 22), (221, 166), (0, 18), (232, 175), (124, 233), (317, 219), (350, 167), (283, 226), (348, 206), (360, 180), (169, 240), (1, 18), (226, 222), (37, 57), (110, 190), (249, 205), (0, 175), (138, 145), (124, 210), (0, 31), (348, 183), (138, 230), (317, 232), (22, 198), (283, 239), (348, 219), (360, 193), (233, 238), (110, 167), (351, 230), (196, 207), (227, 194), (239, 168), (124, 187), (283, 360), (61, 18), (1, 116), (0, 8), (254, 153), (317, 209), (348, 196), (221, 241), (240, 254), (221, 12), (360, 170), (232, 250), (230, 326), (169, 230), (351, 207), (161, 226), (0, 129), (227, 171), (239, 145), (37, 47), (249, 195), (348, 317), (55, 64), (1, 129), (283, 193), (0, 21), (348, 173), (254, 166), (6, 64), (191, 226), (138, 220), (317, 222), (350, 219), (283, 229), (61, 116), (161, 203), (221, 254), (360, 183), (230, 339), (351, 220), (226, 225), (233, 84), (124, 177), (17, 51), (283, 350), (249, 208), (191, 203), (283, 206), (161, 180), (221, 231), (360, 160), (232, 240), (138, 233), (243, 249), (350, 232), (351, 197), (61, 129), (233, 241), (225, 237), (226, 202), (124, 154), (283, 327), (249, 185), (124, 190), (351, 318), (237, 67), (283, 183), (140, 134), (221, 208), (232, 217), (350, 209), (161, 193), (33, 44), (172, 202), (225, 214), (171, 243), (230, 329), (51, 61), (283, 304), (1, 60), (250, 243), (124, 167), (110, 232), (283, 340), (317, 153), (55, 67), (239, 233), (6, 31), (191, 193), (138, 187), (283, 196), (161, 170), (121, 134), (33, 21), (232, 230), (225, 191), (10, 37), (110, 124), (351, 187), (22, 240), (350, 222), (194, 203), (17, 18), (283, 317), (249, 175), (195, 204), (1, 73), (294, 326), (232, 351), (6, 8), (64, 129), (317, 166), (283, 173), (61, 60), (0, 230), (348, 153), (140, 124), (221, 198), (225, 348), (232, 207), (233, 172), (230, 283), (161, 183), (225, 204), (226, 169), (283, 294), (214, 194), (17, 31), (110, 222), (191, 183), (138, 177), (61, 73), (121, 124), (161, 160), (221, 211), (232, 220), (233, 185), (230, 296), (351, 177), (1, 27), (360, 225), (226, 182), (105, 121), (124, 134), (227, 226), (191, 160), (249, 250), (232, 197), (138, 190), (161, 173), (39, 67), (225, 194), (226, 159), (23, 59), (233, 18), (22, 243), (150, 20), (227, 203), (232, 318), (105, 134), (9, 17), (227, 239), (61, 27), (221, 165), (138, 167), (97, 129), (124, 232), (350, 166), (254, 198), (233, 175), (225, 171), (317, 254), (351, 167), (227, 360), (1, 17), (360, 215), (4, 59), (64, 73), (239, 190), (288, 348), (249, 240), (283, 153), (221, 178), (232, 187), (283, 238), (160, 18), (196, 206), (227, 193), (239, 167), (105, 124), (185, 196), (110, 202), (249, 217), (0, 187), (221, 155), (239, 203), (124, 222), (348, 195), (0, 43), (221, 11), (4, 13), (22, 210), (161, 225), (227, 170), (360, 205), (227, 206), (239, 180), (249, 230), (221, 168), (0, 20), (254, 165), (205, 160), (191, 225), (348, 208), (360, 182), (230, 338), (249, 351), (350, 254), (1, 20), (227, 183), (74, 90), (249, 207), (0, 177), (1, 105), (221, 145), (232, 154), (124, 212), (317, 198), (8, 37), (348, 185), (0, 33), (360, 159), (138, 232), (283, 241), (161, 215), (227, 160), (360, 195), (230, 351), (10, 82), (110, 169), (351, 232), (239, 170), (226, 237), (124, 189), (249, 220), (1, 118), (8, 14), (0, 10), (191, 215), (219, 197), (104, 67), (227, 317), (61, 105), (348, 198), (221, 243), (140, 169), (230, 328), (351, 209), (208, 160), (227, 173), (226, 214), (124, 166), (283, 339), (249, 197), (37, 134), (124, 202), (283, 195), (0, 23), (348, 175), (254, 168), (33, 20), (232, 229), (138, 222), (203, 202), (249, 318), (61, 118), (161, 205), (121, 169), (0, 108), (172, 214), (233, 230), (225, 226), (226, 191), (230, 341), (110, 159), (351, 222), (232, 350), (226, 227), (1, 108), (254, 145), (6, 43), (191, 205), (283, 208), (161, 182), (221, 233), (240, 246), (226, 348), (225, 203), (230, 318), (0, 121), (214, 193), (225, 239), (226, 204), (283, 329), (249, 187), (28, 39), (294, 338), (191, 182), (37, 124), (124, 12), (283, 185), (348, 165), (221, 210), (225, 360), (232, 219), (61, 108), (161, 195), (221, 246), (88, 67), (247, 240), (124, 169), (22, 121), (60, 4), (191, 195), (232, 196), (317, 191), (283, 198), (205, 215), (225, 193), (22, 242), (360, 237), (226, 194), (124, 146), (249, 177), (198, 211), (105, 169), (6, 10), (138, 166), (317, 168), (283, 175), (232, 209), (138, 202), (225, 170), (110, 103), (351, 166), (82, 121), (161, 185), (348, 240), (0, 88), (254, 233), (225, 206), (226, 171), (283, 296), (227, 215), (360, 250), (338, 348), (124, 159), (317, 145), (221, 177), (239, 225), (191, 185), (0, 65), (233, 187), (225, 183), (1, 29), (1, 65), (239, 202), (110, 237), (288, 360), (0, 222), (283, 165), (1, 150), (221, 190), (360, 348), (225, 160), (350, 191), (242, 249), (8, 82), (348, 230), (360, 204), (112, 139), (227, 205), (360, 240), (110, 214), (296, 341), (22, 101), (249, 229), (348, 351), (61, 29), (221, 167), (239, 215), (138, 169), (124, 234), (350, 168), (55, 134), (0, 55), (205, 195), (225, 173), (112, 116), (61, 150), (360, 217), (110, 191), (351, 254), (232, 153), (124, 211), (350, 145), (1, 140), (221, 180), (124, 247), (317, 233), (283, 240), (283, 11), (348, 220), (360, 194), (230, 350), (110, 168), (55, 232), (161, 250), (22, 55), (227, 195), (0, 153), (239, 169), (110, 204), (288, 327), (249, 219), (55, 88), (1, 117), (232, 166), (11, 18), (124, 224), (197, 208), (90, 82), (55, 124), (0, 45), (348, 197), (254, 190), (360, 171), (191, 250), (169, 231), (61, 140), (348, 233), (1, 9), (360, 207), (318, 67), (288, 304), (209, 160), (348, 318), (227, 208), (0, 166), (239, 182), (329, 341), (249, 232), (161, 348), (340, 350), (0, 22), (254, 167), (171, 169), (283, 230), (61, 117), (230, 340), (161, 240), (227, 185), (191, 348), (239, 159), (283, 351), (249, 209), (124, 214), (283, 207), (0, 35), (348, 187), (254, 180), (191, 240), (232, 241), (23, 18), (243, 250), (203, 214), (222, 227), (350, 233), (283, 243), (161, 217), (226, 203), (110, 171), (283, 328), (288, 294), (195, 215), (226, 239), (64, 140), (124, 191), (249, 222), (360, 318), (0, 12), (191, 217), (283, 220), (169, 198), (161, 194), (33, 45), (172, 203), (226, 360), (232, 254), (225, 215), (10, 61), (110, 148), (161, 230), (227, 175), (193, 182), (124, 168), (283, 341), (1, 97), (191, 194), (124, 204), (317, 190), (161, 351), (283, 197), (348, 177), (254, 170), (221, 222), (6, 68), (191, 230), (25, 18), (161, 207), (0, 110), (226, 193), (283, 318), (195, 205), (1, 74), (294, 327), (191, 351), (198, 210), (317, 167), (1, 110), (283, 174), (129, 116), (191, 207), (210, 220), (317, 203), (283, 210), (61, 97), (225, 205), (226, 170), (110, 138), (249, 153), (294, 304), (226, 206), (294, 340), (227, 250), (6, 22), (97, 140), (317, 180), (283, 187), (61, 74), (348, 167), (221, 212), (138, 214), (225, 182), (161, 197), (226, 183), (171, 247), (43, 61), (175, 217), (150, 44), (249, 166), (1, 64), (124, 171), (161, 318), (221, 189), (239, 237), (13, 160), (191, 197), (232, 198), (138, 191), (350, 190), (221, 225), (232, 234), (225, 195), (226, 160), (351, 191), (150, 21), (55, 12), (0, 113), (246, 254), (191, 318), (360, 239), (64, 97), (296, 340), (227, 240), (239, 214), (138, 168), (317, 170), (283, 177), (61, 64), (0, 234), (221, 202), (226, 317), (350, 203), (351, 168), (0, 90), (226, 173), (64, 74), (227, 217), (239, 191), (110, 226), (22, 113), (283, 154), (13, 150), (233, 153), (124, 246), (50, 68), (350, 180), (351, 145), (0, 67), (225, 185), (23, 50), (150, 11), (1, 31), (239, 348), (360, 229), (24, 51), (124, 138), (110, 203), (288, 326), (227, 230), (239, 204), (240, 169), (232, 165), (230, 241), (249, 254), (80, 67), (360, 350), (0, 44), (233, 166), (12, 18), (350, 193), (22, 211), (227, 351), (0, 80), (348, 232), (1, 8), (254, 225), (360, 206), (4, 50), (304, 311), (110, 180), (283, 288), (1, 44), (0, 165), (227, 207), (288, 339), (221, 169), (138, 171), (124, 236), (350, 170), (82, 90), (348, 209), (0, 57), (254, 202), (225, 175), (23, 40), (161, 239), (1, 21), (360, 219), (110, 193), (116, 124), (227, 220), (61, 8), (146, 232), (239, 194), (232, 155), (177, 219), (97, 110), (161, 360), (61, 44), (221, 182), (191, 239), (124, 249), (283, 242), (348, 222), (254, 215), (360, 196), (4, 40), (233, 12), (311, 340), (110, 170), (351, 233), (227, 197), (191, 360), (239, 171), (288, 329), (61, 21), (221, 159), (360, 317), (0, 11), (232, 168), (124, 226), (350, 160), (283, 219), (227, 318), (0, 47), (360, 173), (311, 317), (10, 60), (161, 229), (1, 11), (360, 209), (225, 250), (226, 215), (110, 183), (208, 197), (249, 198), (0, 168), (232, 145), (124, 203), (161, 350), (0, 24), (254, 169), (191, 229), (317, 225), (283, 232), (161, 206), (110, 160), (227, 187), (191, 350), (124, 180), (55, 80), (61, 11), (0, 1), (191, 206), (317, 202), (283, 209), (221, 234), (254, 182), (240, 247), (211, 220), (161, 219), (225, 240), (226, 205), (236, 249), (288, 296), (294, 339), (124, 193), (22, 145), (348, 166), (0, 14), (254, 159), (40, 50), (191, 219), (203, 193), (317, 215), (283, 222), (161, 196), (221, 247), (225, 217), (22, 37), (249, 165), (0, 135), (124, 170), (161, 317), (37, 138), (191, 196), (221, 224), (172, 182), (360, 153), (232, 233), (138, 226), (350, 225), (351, 190), (161, 209), (0, 112), (233, 234), (191, 317), (225, 230), (226, 195), (294, 329), (247, 254), (191, 173), (124, 183), (317, 169), (22, 135), (283, 176), (0, 233), (60, 18), (225, 351), (191, 209), (138, 203), (10, 17), (110, 104), (350, 202), (221, 237), (225, 207), (110, 140), (351, 203), (150, 33), (0, 125), (233, 67), (124, 160), (110, 225), (327, 339), (239, 226), (138, 180), (203, 160), (22, 148), (317, 182), (283, 189), (328, 340), (348, 169), (221, 214), (153, 159), (110, 117), (351, 180), (350, 215), (348, 254), (225, 220), (226, 185), (249, 168), (227, 229), (250, 249), (317, 159), (22, 125), (283, 166), (221, 191), (6, 37), (233, 165), (138, 193), (169, 180), (227, 350), (221, 227), (225, 197), (351, 193), (22, 246), (249, 145), (1, 43), (239, 360), (294, 296), (110, 215), (17, 24), (288, 338), (225, 318), (232, 177), (138, 170), (197, 219), (350, 169), (161, 153), (221, 204), (0, 56), (31, 43), (350, 205), (351, 170), (254, 237), (206, 160), (226, 175), (1, 56), (227, 219), (239, 193), (191, 153), (23, 160), (288, 351), (232, 190), (138, 183), (171, 180), (350, 182), (55, 148), (161, 166), (283, 12), (254, 214), (225, 187), (233, 11), (1, 33), (239, 350), (227, 196), (13, 44), (198, 169), (110, 205), (288, 328), (208, 219), (68, 59), (227, 232), (61, 20), (239, 206), (6, 4), (4, 160), (191, 166), (232, 167), (138, 160), (197, 209), (124, 225), (350, 159), (61, 56), (221, 194), (0, 46), (254, 191), (233, 168), (351, 160), (283, 254), (1, 10), (360, 208), (13, 21), (110, 182), (1, 46), (227, 209), (0, 167), (239, 183), (5, 16), (226, 250), (65, 67), (288, 341), (209, 197), (249, 233), (61, 33), (254, 348), (221, 171), (232, 180), (124, 238), (55, 138), (283, 231), (134, 139), (254, 204), (160, 11), (360, 185), (1, 23), (173, 215), (239, 160), (145, 153), (110, 195), (22, 82), (288, 318), (208, 209), (239, 196), (124, 215), (90, 73), (317, 237), (239, 317), (360, 198), (161, 254), (239, 173), (226, 240), (61, 23), (1, 121), (221, 161), (0, 13), (317, 214), (22, 180), (283, 221), (254, 194), (360, 175), (191, 254), (1, 13), (226, 217), (110, 185), (124, 205), (254, 171), (138, 225), (169, 212), (61, 121), (55, 190), (161, 208), (348, 214), (283, 234), (227, 153), (45, 33), (225, 229), (351, 225), (294, 328), (226, 230), (317, 348), (124, 182), (61, 13), (225, 350), (191, 208), (203, 182), (317, 204), (169, 189), (283, 211), (348, 191), (221, 236), (172, 194), (360, 165), (226, 351), (110, 139), (350, 237), (351, 202), (227, 166), (226, 207), (249, 190), (294, 341), (1, 88), (124, 195), (348, 168), (0, 16), (191, 221), (232, 222), (138, 215), (317, 217), (204, 160), (350, 214), (283, 224), (110, 116), (161, 198), (221, 249), (0, 101), (225, 219), (350, 250), (351, 215), (22, 39), (21, 160), (150, 45), (249, 167), (294, 318), (146, 191), (226, 220), (64, 121), (124, 172), (249, 203), (22, 124), (1, 101), (348, 145), (207, 206), (140, 116), (191, 198), (317, 194), (61, 88), (161, 175), (221, 226), (225, 196), (230, 311), (51, 43), (110, 129), (225, 232), (226, 197), (249, 180), (225, 317), (191, 175), (124, 185), (110, 250), (350, 348), (317, 171), (283, 178), (61, 65), (121, 116), (221, 203), (226, 318), (191, 211), (233, 177), (138, 205), (230, 288), (350, 204), (351, 169), (61, 101), (55, 170), (221, 239), (225, 209), (351, 205), (150, 35), (1, 55), (207, 160), (288, 350), (283, 155), (227, 254), (5, 61), (138, 182), (124, 18), (283, 191), (161, 165), (232, 225), (110, 348), (350, 217), (351, 182), (150, 12), (0, 104), (360, 230), (226, 187), (124, 139), (249, 170), (1, 68), (239, 205), (191, 165), (138, 159), (97, 121), (110, 240), (209, 219), (283, 168), (61, 55), (221, 193), (360, 351), (232, 202), (233, 167), (138, 195), (230, 278), (350, 194), (351, 159), (0, 81), (254, 226), (1, 45), (16, 61), (110, 217), (288, 340), (283, 145), (221, 170), (5, 51), (97, 134), (124, 237), (350, 171), (341, 351), (221, 206), (254, 203), (1, 22), (254, 239), (360, 220), (13, 33), (110, 194), (22, 81), (239, 195), (110, 230), (22, 117), (61, 45), (254, 360), (221, 183), (225, 153), (124, 250), (360, 197), (110, 351), (204, 215), (1, 35), (227, 198), (360, 233), (105, 129), (304, 338), (17, 16), (116, 138), (110, 207), (22, 94), (61, 22), (221, 160), (239, 208), (232, 169), (97, 124), (124, 227), (161, 145), (0, 48), (254, 193), (225, 166), (4, 18), (202, 182), (1, 12), (148, 67), (239, 185), (191, 145), (55, 104), (61, 35), (254, 350), (221, 173), (0, 25), (232, 182), (124, 240), (317, 226), (283, 233), (0, 61), (254, 206), (360, 187), (204, 205), (22, 48), (0, 146), (226, 229), (37, 64), (110, 197), (61, 12), (232, 159), (124, 217), (22, 169), (348, 190), (0, 38), (254, 183), (226, 350), (4, 8), (138, 237), (110, 318), (317, 239), (283, 246), (169, 224), (161, 220), (348, 226), (227, 165), (236, 250), (351, 237), (239, 175), (317, 360), (124, 194), (249, 225), (254, 160), (191, 220), (124, 230), (203, 194), (61, 110), (348, 203), (254, 196), (360, 177), (233, 222), (138, 250), (204, 195), (82, 169), (351, 214), (161, 233), (225, 254), (226, 219), (351, 250), (249, 202), (254, 317), (124, 207), (317, 193), (0, 28), (348, 180), (254, 173), (339, 360), (191, 233), (138, 227), (23, 11), (317, 229), (350, 226), (283, 236), (226, 196)]}]}
{'flac_decode_frame': [{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 167, 'instruction': 'movl\t%eax, %edi'}, {'instIndex': 168, 'instruction': 'shll\t$3, %edi'}, {'instIndex': 192, 'instruction': 'cmpl\t$0x18, %eax'}, {'instIndex': 193, 'instruction': 'jl\t.LBB4_169'}, {'instIndex': 208, 'instruction': ''}, {'instIndex': 209, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 259, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 260, 'instruction': ''}, {'instIndex': 261, 'instruction': 'movl\t%esi, 0x560(%rsp)                # 4-byte Spill'}, {'instIndex': 271, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 272, 'instruction': 'movl\t0x564(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 273, 'instruction': 'shrl\t$0xf0, %esi'}, {'instIndex': 284, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 285, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 286, 'instruction': 'movq\t0x588(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 445, 'instruction': 'movl\t%esi, 0x524(%rsp)                # 4-byte Spill'}, {'instIndex': 452, 'instruction': 'movl\t%edx, 0x528(%rsp)                # 4-byte Spill'}, {'instIndex': 494, 'instruction': 'movl\t0x504(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 572, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 640, 'instruction': 'sarl\t$3, %edi'}, {'instIndex': 641, 'instruction': 'movslq\t%edi, %rdi'}, {'instIndex': 701, 'instruction': 'movl\t%edx, %ecx'}, {'instIndex': 702, 'instruction': 'sarl\t$3, %ecx'}, {'instIndex': 721, 'instruction': 'movl\t(%rcx), %edx'}, {'instIndex': 722, 'instruction': 'movl\t%edx, %ecx'}, {'instIndex': 804, 'instruction': 'movq\t0x518(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 805, 'instruction': 'movl\t(%rcx), %edx'}, {'instIndex': 824, 'instruction': 'movq\t0x508(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 825, 'instruction': 'movq\t0x518(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 843, 'instruction': 'jmp\t.LBB4_66'}, {'instIndex': 844, 'instruction': 'movq\t0x508(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 983, 'instruction': 'jmp\t.LBB4_137'}, {'instIndex': 984, 'instruction': 'movq\t0x508(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 985, 'instruction': 'movl\t0x434(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1091, 'instruction': 'movl\t(%rcx), %ecx'}, {'instIndex': 1096, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1097, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1098, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1106, 'instruction': 'movl\t0x408(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1107, 'instruction': 'movl\t0x3e4(%rsp), %edx                 # 4-byte Reload'}, {'instIndex': 1108, 'instruction': 'movl\t0x3ec(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1123, 'instruction': 'movl\t0x3ec(%rsp), %r9d                # 4-byte Reload'}, {'instIndex': 1128, 'instruction': 'movl\t%r8d, (%rdx)'}, {'instIndex': 1129, 'instruction': 'movl\t%edi, %ecx'}, {'instIndex': 1187, 'instruction': 'movq\t%rsi, 0x3a0(%rsp)                 # 8-byte Spill'}, {'instIndex': 1192, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1193, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1194, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1202, 'instruction': 'movl\t%edx, 0x3b4(%rsp)                 # 4-byte Spill'}, {'instIndex': 1203, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1204, 'instruction': 'jge\t.LBB4_92'}, {'instIndex': 1219, 'instruction': 'movl\t0x3a8(%rsp), %edi                 # 4-byte Reload'}, {'instIndex': 1224, 'instruction': ''}, {'instIndex': 1225, 'instruction': 'movl\t%esi, %r8d'}, {'instIndex': 1297, 'instruction': 'movq\t0x508(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 1302, 'instruction': 'movl\t%eax, 0x358(%rsp)                 # 4-byte Spill'}, {'instIndex': 1303, 'instruction': 'movl\t(%rcx), %ecx'}, {'instIndex': 1304, 'instruction': 'movl\t%ecx, 0x35c(%rsp)                 # 4-byte Spill'}, {'instIndex': 1312, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1313, 'instruction': 'movl\t%ecx, 0x360(%rsp)                 # 4-byte Spill'}, {'instIndex': 1314, 'instruction': 'shll\t%cl, %edx'}, {'instIndex': 1329, 'instruction': 'movl\t%eax, 0x34c(%rsp)                 # 4-byte Spill'}, {'instIndex': 1334, 'instruction': 'movq\t0x438(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1335, 'instruction': 'movl\t0x364(%rsp), %r9d                 # 4-byte Reload'}]}]}
The case of compiler clang with optimization O2.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O2/flacdec.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O2/flacdec.s---flac_decode_frame---after
function id: 4
function flag: True
There are 2534 instructions for function: flac_decode_frame in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '639', 'end': 649}, 'before': {'start': '639', 'end': 644}}}]
[{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 191, 'instruction': 'movl\t%eax, %edi'}, {'instIndex': 192, 'instruction': 'shll\t$3, %edi'}, {'instIndex': 222, 'instruction': 'cmpl\t$0x18, %eax'}, {'instIndex': 223, 'instruction': 'jl\t.LBB4_179'}, {'instIndex': 239, 'instruction': ''}, {'instIndex': 240, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 282, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 283, 'instruction': ''}, {'instIndex': 293, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 294, 'instruction': 'movl\t0x79c(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 305, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 306, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 307, 'instruction': 'movq\t0x7f8(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 467, 'instruction': 'movq\t%rdx, 0x758(%rsp)                # 8-byte Spill'}, {'instIndex': 520, 'instruction': 'movq\t0x808(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 605, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 668, 'instruction': 'movq\t0x6d8(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 669, 'instruction': 'movq\t0x7e8(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 670, 'instruction': 'movl\t0x6cc(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 721, 'instruction': 'jmp\t.LBB4_143'}, {'instIndex': 722, 'instruction': 'movq\t0x808(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 738, 'instruction': 'movl\t%eax, 0x6c4(%rsp)                # 4-byte Spill'}, {'instIndex': 739, 'instruction': 'jmp\t.LBB4_53'}, {'instIndex': 828, 'instruction': 'jmp\t.LBB4_64'}, {'instIndex': 846, 'instruction': 'movl\t%eax, 0x6a4(%rsp)                # 4-byte Spill'}, {'instIndex': 863, 'instruction': 'movl\t%ecx, 0x6a0(%rsp)                # 4-byte Spill'}, {'instIndex': 1017, 'instruction': 'jmp\t.LBB4_143'}, {'instIndex': 1018, 'instruction': 'movq\t0x808(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 1019, 'instruction': 'movl\t0x624(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1137, 'instruction': 'movl\t0x5e8(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 1142, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1143, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1144, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1152, 'instruction': 'movl\t0x5e8(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1153, 'instruction': 'movl\t0x5e4(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1168, 'instruction': 'movq\t0x628(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1173, 'instruction': 'addl\t$0x10, %r8d'}, {'instIndex': 1174, 'instruction': 'movl\t%esi, %ecx'}, {'instIndex': 1230, 'instruction': 'movl\t0x5d4(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1235, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1236, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1237, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1245, 'instruction': 'movl\t%edx, 0x58c(%rsp)                # 4-byte Spill'}, {'instIndex': 1246, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1261, 'instruction': 'movq\t0x808(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 1266, 'instruction': 'shrl\t$0xf0, %r9d'}, {'instIndex': 1267, 'instruction': ''}, {'instIndex': 1345, 'instruction': 'movq\t%rax, 0x540(%rsp)                # 8-byte Spill'}, {'instIndex': 1350, 'instruction': 'movq\t%rsi, 0x518(%rsp)                # 8-byte Spill'}, {'instIndex': 1351, 'instruction': 'movl\t%eax, 0x520(%rsp)                # 4-byte Spill'}, {'instIndex': 1352, 'instruction': 'movl\t%ecx, 0x524(%rsp)                # 4-byte Spill'}, {'instIndex': 1360, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1361, 'instruction': 'movl\t%ecx, 0x528(%rsp)                # 4-byte Spill'}, {'instIndex': 1376, 'instruction': 'movl\t%edx, (%rcx)'}, {'instIndex': 1381, 'instruction': 'movl\t0x520(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1382, 'instruction': 'movq\t0x628(%rsp), %rax                # 8-byte Reload'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O2/flacdec.o
Patched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O2/flacdec.o---after
The extraction of function: flac_decode_frame
Analyzing the binaries to generate subCFGs from patched function ...
It has 414 nodes and 713 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 2507 instructions in binary file.
[4196568, 4196746, 4196817, 4196905, 4197774, 4198065, 4198487, 4198747, 4199002, 4199085, 4199538, 4199618, 4199689, 4200441, 4201080, 4201135, 4201542, 4201597, 4202129, 4202184]
The execution time of patched subCFG information extraction via angr: 0:00:04.076068
{'flac_decode_frame': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 68, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40115b>, <DisassemblerInsn "mov" for 0x401163>, <DisassemblerInsn "mov" for 0x40116b>, <DisassemblerInsn "mov" for 0x401173>, <DisassemblerInsn "mov" for 0x40117b>, <DisassemblerInsn "add" for 0x401182>, <DisassemblerInsn "mov" for 0x401185>, <DisassemblerInsn "shr" for 0x401188>, <DisassemblerInsn "mov" for 0x40118c>, <DisassemblerInsn "ror" for 0x401190>, <DisassemblerInsn "ror" for 0x401194>, <DisassemblerInsn "ror" for 0x401197>, <DisassemblerInsn "shr" for 0x40119b>, <DisassemblerInsn "add" for 0x40119e>, <DisassemblerInsn "mov" for 0x4011a2>, <DisassemblerInsn "mov" for 0x4011a5>, <DisassemblerInsn "add" for 0x4011a8>, <DisassemblerInsn "shl" for 0x4011ab>, <DisassemblerInsn "movsxd" for 0x4011af>, <DisassemblerInsn "add" for 0x4011b2>, <DisassemblerInsn "cmp" for 0x4011b5>, <DisassemblerInsn "mov" for 0x4011b8>, <DisassemblerInsn "mov" for 0x4011c0>, <DisassemblerInsn "mov" for 0x4011c8>, <DisassemblerInsn "jb" for 0x4011cf>]'}, {'block_Idx': 75, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40121e>, <DisassemblerInsn "sub" for 0x401225>, <DisassemblerInsn "je" for 0x401228>]'}, {'block_Idx': 46, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ef4>, <DisassemblerInsn "add" for 0x400efc>, <DisassemblerInsn "mov" for 0x400f00>, <DisassemblerInsn "jmp" for 0x400f08>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40098a>, <DisassemblerInsn "mov" for 0x400992>, <DisassemblerInsn "ror" for 0x400994>, <DisassemblerInsn "ror" for 0x400998>, <DisassemblerInsn "ror" for 0x40099b>, <DisassemblerInsn "shr" for 0x40099f>, <DisassemblerInsn "mov" for 0x4009a2>, <DisassemblerInsn "shl" for 0x4009a9>, <DisassemblerInsn "mov" for 0x4009ac>, <DisassemblerInsn "ror" for 0x4009af>, <DisassemblerInsn "ror" for 0x4009b3>, <DisassemblerInsn "ror" for 0x4009b6>, <DisassemblerInsn "mov" for 0x4009ba>, <DisassemblerInsn "shr" for 0x4009c1>, <DisassemblerInsn "or" for 0x4009c4>, <DisassemblerInsn "cmp" for 0x4009c6>, <DisassemblerInsn "jne" for 0x4009cb>]'}, {'block_Idx': 169, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b7a>, <DisassemblerInsn "mov" for 0x401b82>, <DisassemblerInsn "mov" for 0x401b8a>, <DisassemblerInsn "mov" for 0x401b8f>, <DisassemblerInsn "xor" for 0x401b97>, <DisassemblerInsn "mov" for 0x401b99>, <DisassemblerInsn "mov" for 0x401ba1>, <DisassemblerInsn "mov" for 0x401ba9>, <DisassemblerInsn "mov" for 0x401bb1>, <DisassemblerInsn "mov" for 0x401bb9>, <DisassemblerInsn "mov" for 0x401bc0>, <DisassemblerInsn "add" for 0x401bc3>, <DisassemblerInsn "mov" for 0x401bc7>, <DisassemblerInsn "movsxd" for 0x401bcf>, <DisassemblerInsn "cmp" for 0x401bd2>, <DisassemblerInsn "mov" for 0x401bd5>, <DisassemblerInsn "jl" for 0x401bdd>]'}, {'block_Idx': 47, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f0a>, <DisassemblerInsn "and" for 0x400f11>, <DisassemblerInsn "cmp" for 0x400f14>, <DisassemblerInsn "je" for 0x400f17>]'}, {'block_Idx': 104, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40145d>, <DisassemblerInsn "sub" for 0x401464>, <DisassemblerInsn "je" for 0x401467>]'}, {'block_Idx': 93, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401472>, <DisassemblerInsn "mov" for 0x401479>, <DisassemblerInsn "mov" for 0x401481>, <DisassemblerInsn "sar" for 0x401483>, <DisassemblerInsn "movsxd" for 0x401486>, <DisassemblerInsn "mov" for 0x401489>, <DisassemblerInsn "ror" for 0x40148c>, <DisassemblerInsn "ror" for 0x401490>, <DisassemblerInsn "ror" for 0x401493>, <DisassemblerInsn "and" for 0x401497>, <DisassemblerInsn "shl" for 0x40149a>, <DisassemblerInsn "mov" for 0x40149c>, <DisassemblerInsn "shr" for 0x4014a3>, <DisassemblerInsn "add" for 0x4014a6>, <DisassemblerInsn "imul" for 0x4014a9>, <DisassemblerInsn "mov" for 0x4014af>, <DisassemblerInsn "mov" for 0x4014b6>, <DisassemblerInsn "jmp" for 0x4014bd>]'}, {'block_Idx': 127, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017f9>, <DisassemblerInsn "mov" for 0x401801>, <DisassemblerInsn "mov" for 0x401808>, <DisassemblerInsn "mov" for 0x401810>, <DisassemblerInsn "mov" for 0x401817>, <DisassemblerInsn "sar" for 0x401819>, <DisassemblerInsn "movsxd" for 0x40181c>, <DisassemblerInsn "mov" for 0x40181f>, <DisassemblerInsn "ror" for 0x401822>, <DisassemblerInsn "ror" for 0x401826>, <DisassemblerInsn "ror" for 0x401829>, <DisassemblerInsn "and" for 0x40182d>, <DisassemblerInsn "shl" for 0x401830>, <DisassemblerInsn "mov" for 0x401832>, <DisassemblerInsn "shr" for 0x401834>, <DisassemblerInsn "mov" for 0x401837>, <DisassemblerInsn "mov" for 0x40183e>, <DisassemblerInsn "add" for 0x401840>, <DisassemblerInsn "mov" for 0x401843>, <DisassemblerInsn "mov" for 0x401845>, <DisassemblerInsn "sar" for 0x401847>, <DisassemblerInsn "movsxd" for 0x40184a>, <DisassemblerInsn "mov" for 0x40184d>, <DisassemblerInsn "and" for 0x401850>, <DisassemblerInsn "movzx" for 0x401853>, <DisassemblerInsn "add" for 0x401856>, <DisassemblerInsn "mov" for 0x401859>, <DisassemblerInsn "mov" for 0x40185b>, <DisassemblerInsn "shr" for 0x401860>, <DisassemblerInsn "mov" for 0x401862>, <DisassemblerInsn "and" for 0x401869>, <DisassemblerInsn "xor" for 0x40186b>, <DisassemblerInsn "mov" for 0x40186d>, <DisassemblerInsn "cmp" for 0x401872>, <DisassemblerInsn "mov" for 0x401875>, <DisassemblerInsn "mov" for 0x401877>, <DisassemblerInsn "mov" for 0x40187e>, <DisassemblerInsn "mov" for 0x401885>, <DisassemblerInsn "mov" for 0x40188c>, <DisassemblerInsn "mov" for 0x401893>, <DisassemblerInsn "je" for 0x40189a>]'}, {'block_Idx': 70, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401128>, <DisassemblerInsn "mov" for 0x401130>, <DisassemblerInsn "mov" for 0x401138>, <DisassemblerInsn "mov" for 0x40113f>, <DisassemblerInsn "mov" for 0x401146>, <DisassemblerInsn "mov" for 0x40114e>, <DisassemblerInsn "cmp" for 0x401156>, <DisassemblerInsn "jle" for 0x401159>]'}, {'block_Idx': 89, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401577>, <DisassemblerInsn "mov" for 0x40157f>, <DisassemblerInsn "mov" for 0x401586>, <DisassemblerInsn "mov" for 0x40158d>, <DisassemblerInsn "add" for 0x401594>, <DisassemblerInsn "mov" for 0x401597>, <DisassemblerInsn "xor" for 0x401599>, <DisassemblerInsn "call" for 0x40159b>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c46>, <DisassemblerInsn "mov" for 0x401c4d>, <DisassemblerInsn "mov" for 0x401c54>, <DisassemblerInsn "mov" for 0x401c5b>, <DisassemblerInsn "xor" for 0x401c5e>, <DisassemblerInsn "sub" for 0x401c60>, <DisassemblerInsn "shr" for 0x401c63>, <DisassemblerInsn "mov" for 0x401c65>, <DisassemblerInsn "add" for 0x401c6d>, <DisassemblerInsn "mov" for 0x401c6f>, <DisassemblerInsn "mov" for 0x401c71>, <DisassemblerInsn "jmp" for 0x401c78>]'}, {'block_Idx': 137, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018a0>, <DisassemblerInsn "mov" for 0x4018a7>, <DisassemblerInsn "mov" for 0x4018ae>, <DisassemblerInsn "mov" for 0x4018b6>, <DisassemblerInsn "mov" for 0x4018be>, <DisassemblerInsn "mov" for 0x4018c5>, <DisassemblerInsn "sar" for 0x4018c7>, <DisassemblerInsn "mov" for 0x4018ca>, <DisassemblerInsn "movsxd" for 0x4018d1>, <DisassemblerInsn "mov" for 0x4018d4>, <DisassemblerInsn "mov" for 0x4018d8>, <DisassemblerInsn "and" for 0x4018da>, <DisassemblerInsn "mov" for 0x4018dd>, <DisassemblerInsn "movzx" for 0x4018e4>, <DisassemblerInsn "add" for 0x4018e8>, <DisassemblerInsn "mov" for 0x4018eb>, <DisassemblerInsn "mov" for 0x4018f2>, <DisassemblerInsn "mov" for 0x4018f4>, <DisassemblerInsn "shr" for 0x4018f9>, <DisassemblerInsn "mov" for 0x4018fb>, <DisassemblerInsn "mov" for 0x401902>, <DisassemblerInsn "and" for 0x401909>, <DisassemblerInsn "mov" for 0x40190b>, <DisassemblerInsn "add" for 0x401912>, <DisassemblerInsn "mov" for 0x401915>, <DisassemblerInsn "cmp" for 0x40191c>, <DisassemblerInsn "mov" for 0x40191f>, <DisassemblerInsn "mov" for 0x401926>, <DisassemblerInsn "je" for 0x40192d>]'}, {'block_Idx': 168, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b44>, <DisassemblerInsn "cmp" for 0x402b4b>, <DisassemblerInsn "je" for 0x402b4e>]'}, {'block_Idx': 184, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401df8>, <DisassemblerInsn "mov" for 0x401dff>, <DisassemblerInsn "mov" for 0x401e06>, <DisassemblerInsn "mov" for 0x401e0d>, <DisassemblerInsn "mov" for 0x401e0f>, <DisassemblerInsn "xor" for 0x401e17>, <DisassemblerInsn "mov" for 0x401e19>, <DisassemblerInsn "mov" for 0x401e20>, <DisassemblerInsn "mov" for 0x401e27>, <DisassemblerInsn "mov" for 0x401e2f>, <DisassemblerInsn "mov" for 0x401e37>, <DisassemblerInsn "mov" for 0x401e3e>, <DisassemblerInsn "mov" for 0x401e45>, <DisassemblerInsn "mov" for 0x401e4d>, <DisassemblerInsn "mov" for 0x401e55>, <DisassemblerInsn "mov" for 0x401e5c>, <DisassemblerInsn "mov" for 0x401e63>, <DisassemblerInsn "sar" for 0x401e65>, <DisassemblerInsn "movsxd" for 0x401e68>, <DisassemblerInsn "mov" for 0x401e6b>, <DisassemblerInsn "ror" for 0x401e6e>, <DisassemblerInsn "ror" for 0x401e72>, <DisassemblerInsn "ror" for 0x401e75>, <DisassemblerInsn "and" for 0x401e79>, <DisassemblerInsn "mov" for 0x401e7c>, <DisassemblerInsn "shl" for 0x401e83>, <DisassemblerInsn "mov" for 0x401e85>, <DisassemblerInsn "cmp" for 0x401e8c>, <DisassemblerInsn "jge" for 0x401e8f>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400866>, <DisassemblerInsn "mov" for 0x40086e>, <DisassemblerInsn "mov" for 0x400876>, <DisassemblerInsn "mov" for 0x40087e>, <DisassemblerInsn "mov" for 0x400886>, <DisassemblerInsn "mov" for 0x40088d>, <DisassemblerInsn "mov" for 0x400894>, <DisassemblerInsn "add" for 0x400896>, <DisassemblerInsn "mov" for 0x400899>, <DisassemblerInsn "add" for 0x40089b>, <DisassemblerInsn "mov" for 0x40089d>, <DisassemblerInsn "cmp" for 0x40089f>, <DisassemblerInsn "setl" for 0x4008a1>, <DisassemblerInsn "cmp" for 0x4008a5>, <DisassemblerInsn "setne" for 0x4008a8>, <DisassemblerInsn "and" for 0x4008ac>, <DisassemblerInsn "test" for 0x4008af>, <DisassemblerInsn "mov" for 0x4008b3>, <DisassemblerInsn "mov" for 0x4008b5>, <DisassemblerInsn "mov" for 0x4008bc>, <DisassemblerInsn "mov" for 0x4008c3>, <DisassemblerInsn "mov" for 0x4008cb>, <DisassemblerInsn "jne" for 0x4008d2>]'}, {'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009d1>, <DisassemblerInsn "mov" for 0x4009d9>, <DisassemblerInsn "mov" for 0x4009e1>, <DisassemblerInsn "mov" for 0x4009e9>, <DisassemblerInsn "mov" for 0x4009ef>, <DisassemblerInsn "add" for 0x4009f2>, <DisassemblerInsn "mov" for 0x4009f6>, <DisassemblerInsn "mov" for 0x4009fe>, <DisassemblerInsn "add" for 0x400a01>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "mov" for 0x400a0d>, <DisassemblerInsn "mov" for 0x400a15>, <DisassemblerInsn "mov" for 0x400a1a>, <DisassemblerInsn "mov" for 0x400a22>, <DisassemblerInsn "mov" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a31>, <DisassemblerInsn "mov" for 0x400a39>, <DisassemblerInsn "mov" for 0x400a40>, <DisassemblerInsn "mov" for 0x400a48>, <DisassemblerInsn "sar" for 0x400a4a>, <DisassemblerInsn "movsxd" for 0x400a4d>, <DisassemblerInsn "mov" for 0x400a50>, <DisassemblerInsn "mov" for 0x400a53>, <DisassemblerInsn "and" for 0x400a55>, <DisassemblerInsn "mov" for 0x400a58>, <DisassemblerInsn "movzx" for 0x400a5f>, <DisassemblerInsn "mov" for 0x400a62>, <DisassemblerInsn "mov" for 0x400a69>, <DisassemblerInsn "add" for 0x400a6b>, <DisassemblerInsn "mov" for 0x400a6e>, <DisassemblerInsn "sar" for 0x400a70>, <DisassemblerInsn "movsxd" for 0x400a73>, <DisassemblerInsn "mov" for 0x400a76>, <DisassemblerInsn "ror" for 0x400a79>, <DisassemblerInsn "ror" for 0x400a7d>, <DisassemblerInsn "ror" for 0x400a80>, <DisassemblerInsn "and" for 0x400a84>, <DisassemblerInsn "shl" for 0x400a87>, <DisassemblerInsn "mov" for 0x400a89>, <DisassemblerInsn "shr" for 0x400a90>, <DisassemblerInsn "mov" for 0x400a93>, <DisassemblerInsn "mov" for 0x400a9a>, <DisassemblerInsn "add" for 0x400a9c>, <DisassemblerInsn "sar" for 0x400a9f>, <DisassemblerInsn "movsxd" for 0x400aa2>, <DisassemblerInsn "mov" for 0x400aa5>, <DisassemblerInsn "ror" for 0x400aa8>, <DisassemblerInsn "ror" for 0x400aac>, <DisassemblerInsn "ror" for 0x400aaf>, <DisassemblerInsn "shl" for 0x400ab3>, <DisassemblerInsn "mov" for 0x400ab5>, <DisassemblerInsn "shr" for 0x400abc>, <DisassemblerInsn "mov" for 0x400abf>, <DisassemblerInsn "add" for 0x400ac2>, <DisassemblerInsn "shl" for 0x400ac6>, <DisassemblerInsn "sar" for 0x400ac9>, <DisassemblerInsn "movsxd" for 0x400acd>, <DisassemblerInsn "mov" for 0x400ad0>, <DisassemblerInsn "ror" for 0x400ad4>, <DisassemblerInsn "ror" for 0x400ad8>, <DisassemblerInsn "ror" for 0x400adb>, <DisassemblerInsn "shl" for 0x400adf>, <DisassemblerInsn "mov" for 0x400ae1>, <DisassemblerInsn "shr" for 0x400ae9>, <DisassemblerInsn "add" for 0x400aec>, <DisassemblerInsn "mov" for 0x400aef>, <DisassemblerInsn "mov" for 0x400af6>, <DisassemblerInsn "or" for 0x400af8>, <DisassemblerInsn "mov" for 0x400afa>, <DisassemblerInsn "shl" for 0x400b01>, <DisassemblerInsn "mov" for 0x400b04>, <DisassemblerInsn "add" for 0x400b0b>, <DisassemblerInsn "mov" for 0x400b0d>, <DisassemblerInsn "mov" for 0x400b0f>, <DisassemblerInsn "cmp" for 0x400b16>, <DisassemblerInsn "jle" for 0x400b18>]'}, {'block_Idx': 41, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e62>, <DisassemblerInsn "add" for 0x400e69>, <DisassemblerInsn "mov" for 0x400e6c>, <DisassemblerInsn "mov" for 0x400e71>, <DisassemblerInsn "mov" for 0x400e78>, <DisassemblerInsn "jmp" for 0x400e7f>]'}, {'block_Idx': 79, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40122c>, <DisassemblerInsn "sub" for 0x401233>, <DisassemblerInsn "je" for 0x401236>]'}, {'block_Idx': 156, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a34>, <DisassemblerInsn "mov" for 0x401a3b>, <DisassemblerInsn "mov" for 0x401a42>, <DisassemblerInsn "mov" for 0x401a4a>, <DisassemblerInsn "sar" for 0x401a4c>, <DisassemblerInsn "movsxd" for 0x401a4f>, <DisassemblerInsn "mov" for 0x401a52>, <DisassemblerInsn "ror" for 0x401a55>, <DisassemblerInsn "ror" for 0x401a59>, <DisassemblerInsn "ror" for 0x401a5c>, <DisassemblerInsn "and" for 0x401a60>, <DisassemblerInsn "mov" for 0x401a63>, <DisassemblerInsn "shl" for 0x401a6a>, <DisassemblerInsn "mov" for 0x401a6c>, <DisassemblerInsn "cmp" for 0x401a73>, <DisassemblerInsn "jge" for 0x401a76>]'}, {'block_Idx': 165, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401aaf>, <DisassemblerInsn "mov" for 0x401ab7>, <DisassemblerInsn "mov" for 0x401abe>, <DisassemblerInsn "mov" for 0x401ac5>, <DisassemblerInsn "mov" for 0x401acd>, <DisassemblerInsn "shr" for 0x401ad5>, <DisassemblerInsn "mov" for 0x401ad9>, <DisassemblerInsn "add" for 0x401adc>, <DisassemblerInsn "mov" for 0x401ae0>, <DisassemblerInsn "add" for 0x401ae2>, <DisassemblerInsn "mov" for 0x401ae5>, <DisassemblerInsn "shl" for 0x401aec>, <DisassemblerInsn "mov" for 0x401aef>, <DisassemblerInsn "mov" for 0x401af6>, <DisassemblerInsn "sar" for 0x401afe>, <DisassemblerInsn "movsxd" for 0x401b02>, <DisassemblerInsn "mov" for 0x401b05>, <DisassemblerInsn "ror" for 0x401b09>, <DisassemblerInsn "ror" for 0x401b0d>, <DisassemblerInsn "ror" for 0x401b10>, <DisassemblerInsn "shl" for 0x401b14>, <DisassemblerInsn "mov" for 0x401b16>, <DisassemblerInsn "mov" for 0x401b1d>, <DisassemblerInsn "xor" for 0x401b20>, <DisassemblerInsn "sub" for 0x401b22>, <DisassemblerInsn "shr" for 0x401b25>, <DisassemblerInsn "mov" for 0x401b27>, <DisassemblerInsn "add" for 0x401b2e>, <DisassemblerInsn "mov" for 0x401b30>, <DisassemblerInsn "or" for 0x401b32>, <DisassemblerInsn "mov" for 0x401b34>, <DisassemblerInsn "mov" for 0x401b3b>, <DisassemblerInsn "mov" for 0x401b43>, <DisassemblerInsn "mov" for 0x401b4a>, <DisassemblerInsn "mov" for 0x401b51>, <DisassemblerInsn "sub" for 0x401b56>, <DisassemblerInsn "mov" for 0x401b58>, <DisassemblerInsn "shl" for 0x401b5f>, <DisassemblerInsn "mov" for 0x401b61>, <DisassemblerInsn "sar" for 0x401b68>, <DisassemblerInsn "mov" for 0x401b6a>, <DisassemblerInsn "cmp" for 0x401b71>, <DisassemblerInsn "jle" for 0x401b74>]'}, {'block_Idx': 136, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401969>, <DisassemblerInsn "mov" for 0x401970>, <DisassemblerInsn "mov" for 0x401977>, <DisassemblerInsn "mov" for 0x40197e>, <DisassemblerInsn "mov" for 0x401985>, <DisassemblerInsn "mov" for 0x40198c>, <DisassemblerInsn "cmp" for 0x401993>, <DisassemblerInsn "jle" for 0x401996>]'}, {'block_Idx': 200, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fa7>, <DisassemblerInsn "mov" for 0x401faf>, <DisassemblerInsn "mov" for 0x401fb7>, <DisassemblerInsn "mov" for 0x401fbf>, <DisassemblerInsn "mov" for 0x401fc1>, <DisassemblerInsn "mov" for 0x401fc3>, <DisassemblerInsn "mov" for 0x401fca>, <DisassemblerInsn "mov" for 0x401fd1>, <DisassemblerInsn "jmp" for 0x401fd9>]'}, {'block_Idx': 129, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40176a>, <DisassemblerInsn "mov" for 0x401772>, <DisassemblerInsn "mov" for 0x40177a>, <DisassemblerInsn "mov" for 0x401781>, <DisassemblerInsn "mov" for 0x401788>, <DisassemblerInsn "mov" for 0x40178a>, <DisassemblerInsn "mov" for 0x401791>, <DisassemblerInsn "mov" for 0x401794>, <DisassemblerInsn "mov" for 0x40179c>, <DisassemblerInsn "sar" for 0x40179e>, <DisassemblerInsn "movsxd" for 0x4017a1>, <DisassemblerInsn "mov" for 0x4017a4>, <DisassemblerInsn "mov" for 0x4017a8>, <DisassemblerInsn "and" for 0x4017aa>, <DisassemblerInsn "movzx" for 0x4017ad>, <DisassemblerInsn "mov" for 0x4017b1>, <DisassemblerInsn "add" for 0x4017b8>, <DisassemblerInsn "mov" for 0x4017bb>, <DisassemblerInsn "mov" for 0x4017c2>, <DisassemblerInsn "mov" for 0x4017c4>, <DisassemblerInsn "shr" for 0x4017c9>, <DisassemblerInsn "mov" for 0x4017cb>, <DisassemblerInsn "and" for 0x4017d2>, <DisassemblerInsn "cmp" for 0x4017d4>, <DisassemblerInsn "je" for 0x4017d7>]'}, {'block_Idx': 203, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d66>, <DisassemblerInsn "mov" for 0x401d6e>, <DisassemblerInsn "mov" for 0x401d76>, <DisassemblerInsn "mov" for 0x401d7e>, <DisassemblerInsn "mov" for 0x401d80>, <DisassemblerInsn "mov" for 0x401d82>, <DisassemblerInsn "mov" for 0x401d89>, <DisassemblerInsn "mov" for 0x401d90>, <DisassemblerInsn "jmp" for 0x401d98>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4036d0>, <DisassemblerInsn "mov" for 0x4036d7>, <DisassemblerInsn "mov" for 0x4036df>, <DisassemblerInsn "add" for 0x4036e1>, <DisassemblerInsn "mov" for 0x4036e4>, <DisassemblerInsn "cdq" for 0x4036e9>, <DisassemblerInsn "idiv" for 0x4036ea>, <DisassemblerInsn "mov" for 0x4036ec>, <DisassemblerInsn "cmp" for 0x4036f0>, <DisassemblerInsn "jle" for 0x4036f2>]'}, {'block_Idx': 38, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400eb1>, <DisassemblerInsn "mov" for 0x400eb9>, <DisassemblerInsn "mov" for 0x400ec0>, <DisassemblerInsn "mov" for 0x400ec7>, <DisassemblerInsn "mov" for 0x400ece>, <DisassemblerInsn "mov" for 0x400ed5>, <DisassemblerInsn "shl" for 0x400edc>, <DisassemblerInsn "shr" for 0x400edf>, <DisassemblerInsn "mov" for 0x400ee2>, <DisassemblerInsn "mov" for 0x400ee9>, <DisassemblerInsn "cmp" for 0x400eef>, <DisassemblerInsn "jne" for 0x400ef2>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a78>, <DisassemblerInsn "mov" for 0x401a7f>, <DisassemblerInsn "mov" for 0x401a86>, <DisassemblerInsn "mov" for 0x401a8d>, <DisassemblerInsn "xor" for 0x401a90>, <DisassemblerInsn "sub" for 0x401a92>, <DisassemblerInsn "shr" for 0x401a95>, <DisassemblerInsn "mov" for 0x401a97>, <DisassemblerInsn "add" for 0x401a9f>, <DisassemblerInsn "mov" for 0x401aa1>, <DisassemblerInsn "mov" for 0x401aa3>, <DisassemblerInsn "jmp" for 0x401aaa>]'}, {'block_Idx': 58, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401057>, <DisassemblerInsn "mov" for 0x40105f>, <DisassemblerInsn "mov" for 0x401067>, <DisassemblerInsn "ror" for 0x40106a>, <DisassemblerInsn "ror" for 0x40106e>, <DisassemblerInsn "ror" for 0x401071>, <DisassemblerInsn "shr" for 0x401075>, <DisassemblerInsn "mov" for 0x401078>, <DisassemblerInsn "mov" for 0x40107f>, <DisassemblerInsn "mov" for 0x401085>, <DisassemblerInsn "xor" for 0x401087>, <DisassemblerInsn "shr" for 0x40108d>, <DisassemblerInsn "cmp" for 0x401090>, <DisassemblerInsn "cmovb" for 0x401096>, <DisassemblerInsn "mov" for 0x401099>, <DisassemblerInsn "xor" for 0x40109e>, <DisassemblerInsn "cmp" for 0x4010a0>, <DisassemblerInsn "cmovb" for 0x4010a6>, <DisassemblerInsn "mov" for 0x4010a9>, <DisassemblerInsn "and" for 0x4010ab>, <DisassemblerInsn "mov" for 0x4010b1>, <DisassemblerInsn "shr" for 0x4010b3>, <DisassemblerInsn "mov" for 0x4010b6>, <DisassemblerInsn "or" for 0x4010b8>, <DisassemblerInsn "cmp" for 0x4010bb>, <DisassemblerInsn "cmove" for 0x4010be>, <DisassemblerInsn "cmp" for 0x4010c1>, <DisassemblerInsn "cmove" for 0x4010c4>, <DisassemblerInsn "mov" for 0x4010c7>, <DisassemblerInsn "mov" for 0x4010c9>, <DisassemblerInsn "mov" for 0x4010cb>, <DisassemblerInsn "movzx" for 0x4010d2>, <DisassemblerInsn "add" for 0x4010d6>, <DisassemblerInsn "mov" for 0x4010d8>, <DisassemblerInsn "sub" for 0x4010dd>, <DisassemblerInsn "mov" for 0x4010df>, <DisassemblerInsn "cmp" for 0x4010e6>, <DisassemblerInsn "je" for 0x4010e9>]'}, {'block_Idx': 202, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d09>, <DisassemblerInsn "mov" for 0x401d11>, <DisassemblerInsn "mov" for 0x401d19>, <DisassemblerInsn "mov" for 0x401d20>, <DisassemblerInsn "mov" for 0x401d27>, <DisassemblerInsn "sub" for 0x401d2c>, <DisassemblerInsn "mov" for 0x401d2e>, <DisassemblerInsn "shl" for 0x401d35>, <DisassemblerInsn "mov" for 0x401d37>, <DisassemblerInsn "sar" for 0x401d3e>, <DisassemblerInsn "mov" for 0x401d40>, <DisassemblerInsn "mov" for 0x401d48>, <DisassemblerInsn "mov" for 0x401d4b>, <DisassemblerInsn "add" for 0x401d4e>, <DisassemblerInsn "mov" for 0x401d52>, <DisassemblerInsn "movsxd" for 0x401d5a>, <DisassemblerInsn "cmp" for 0x401d5d>, <DisassemblerInsn "jge" for 0x401d60>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c7d>, <DisassemblerInsn "mov" for 0x401c85>, <DisassemblerInsn "mov" for 0x401c8c>, <DisassemblerInsn "mov" for 0x401c93>, <DisassemblerInsn "mov" for 0x401c9b>, <DisassemblerInsn "shr" for 0x401ca3>, <DisassemblerInsn "mov" for 0x401ca7>, <DisassemblerInsn "add" for 0x401caa>, <DisassemblerInsn "mov" for 0x401cae>, <DisassemblerInsn "add" for 0x401cb0>, <DisassemblerInsn "mov" for 0x401cb3>, <DisassemblerInsn "shl" for 0x401cba>, <DisassemblerInsn "mov" for 0x401cbd>, <DisassemblerInsn "mov" for 0x401cc4>, <DisassemblerInsn "sar" for 0x401ccc>, <DisassemblerInsn "movsxd" for 0x401cd0>, <DisassemblerInsn "mov" for 0x401cd3>, <DisassemblerInsn "ror" for 0x401cd7>, <DisassemblerInsn "ror" for 0x401cdb>, <DisassemblerInsn "ror" for 0x401cde>, <DisassemblerInsn "shl" for 0x401ce2>, <DisassemblerInsn "mov" for 0x401ce4>, <DisassemblerInsn "mov" for 0x401ceb>, <DisassemblerInsn "xor" for 0x401cee>, <DisassemblerInsn "sub" for 0x401cf0>, <DisassemblerInsn "shr" for 0x401cf3>, <DisassemblerInsn "mov" for 0x401cf5>, <DisassemblerInsn "add" for 0x401cfc>, <DisassemblerInsn "mov" for 0x401cfe>, <DisassemblerInsn "or" for 0x401d00>, <DisassemblerInsn "mov" for 0x401d02>, <DisassemblerInsn "mov" for 0x401d09>, <DisassemblerInsn "mov" for 0x401d11>, <DisassemblerInsn "mov" for 0x401d19>, <DisassemblerInsn "mov" for 0x401d20>, <DisassemblerInsn "mov" for 0x401d27>, <DisassemblerInsn "sub" for 0x401d2c>, <DisassemblerInsn "mov" for 0x401d2e>, <DisassemblerInsn "shl" for 0x401d35>, <DisassemblerInsn "mov" for 0x401d37>, <DisassemblerInsn "sar" for 0x401d3e>, <DisassemblerInsn "mov" for 0x401d40>, <DisassemblerInsn "mov" for 0x401d48>, <DisassemblerInsn "mov" for 0x401d4b>, <DisassemblerInsn "add" for 0x401d4e>, <DisassemblerInsn "mov" for 0x401d52>, <DisassemblerInsn "movsxd" for 0x401d5a>, <DisassemblerInsn "cmp" for 0x401d5d>, <DisassemblerInsn "jge" for 0x401d60>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f54>, <DisassemblerInsn "mov" for 0x401f5c>, <DisassemblerInsn "mov" for 0x401f64>, <DisassemblerInsn "mov" for 0x401f6b>, <DisassemblerInsn "mov" for 0x401f72>, <DisassemblerInsn "sub" for 0x401f77>, <DisassemblerInsn "mov" for 0x401f79>, <DisassemblerInsn "shl" for 0x401f80>, <DisassemblerInsn "mov" for 0x401f82>, <DisassemblerInsn "sar" for 0x401f89>, <DisassemblerInsn "mov" for 0x401f8b>, <DisassemblerInsn "mov" for 0x401f93>, <DisassemblerInsn "add" for 0x401f96>, <DisassemblerInsn "mov" for 0x401f9a>, <DisassemblerInsn "cmp" for 0x401fa2>, <DisassemblerInsn "je" for 0x401fa5>]'}, {'block_Idx': 91, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401441>, <DisassemblerInsn "sub" for 0x401448>, <DisassemblerInsn "je" for 0x40144b>]'}, {'block_Idx': 62, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011f4>, <DisassemblerInsn "xor" for 0x4011fc>, <DisassemblerInsn "lea" for 0x4011fe>, <DisassemblerInsn "mov" for 0x401205>, <DisassemblerInsn "call" for 0x401207>]'}, {'block_Idx': 82, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012ad>, <DisassemblerInsn "mov" for 0x4012b5>, <DisassemblerInsn "mov" for 0x4012bc>, <DisassemblerInsn "mov" for 0x4012c4>, <DisassemblerInsn "shr" for 0x4012cc>, <DisassemblerInsn "and" for 0x4012d0>, <DisassemblerInsn "mov" for 0x4012d7>, <DisassemblerInsn "ror" for 0x4012da>, <DisassemblerInsn "ror" for 0x4012de>, <DisassemblerInsn "ror" for 0x4012e1>, <DisassemblerInsn "shr" for 0x4012e5>, <DisassemblerInsn "add" for 0x4012e8>, <DisassemblerInsn "mov" for 0x4012eb>, <DisassemblerInsn "add" for 0x4012ed>, <DisassemblerInsn "mov" for 0x4012f0>, <DisassemblerInsn "mov" for 0x4012f7>, <DisassemblerInsn "jmp" for 0x4012fe>]'}, {'block_Idx': 31, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e2f>, <DisassemblerInsn "mov" for 0x400e37>, <DisassemblerInsn "add" for 0x400e3e>, <DisassemblerInsn "sub" for 0x400e41>, <DisassemblerInsn "setb" for 0x400e44>, <DisassemblerInsn "mov" for 0x400e47>, <DisassemblerInsn "mov" for 0x400e4a>, <DisassemblerInsn "sub" for 0x400e4c>, <DisassemblerInsn "sete" for 0x400e4f>, <DisassemblerInsn "and" for 0x400e52>, <DisassemblerInsn "test" for 0x400e54>, <DisassemblerInsn "mov" for 0x400e57>, <DisassemblerInsn "jne" for 0x400e5e>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d8e>, <DisassemblerInsn "mov" for 0x400d96>, <DisassemblerInsn "mov" for 0x400d9e>, <DisassemblerInsn "mov" for 0x400da5>, <DisassemblerInsn "shr" for 0x400da7>, <DisassemblerInsn "mov" for 0x400daa>, <DisassemblerInsn "shl" for 0x400db1>, <DisassemblerInsn "shr" for 0x400db4>, <DisassemblerInsn "mov" for 0x400db7>, <DisassemblerInsn "mov" for 0x400dbe>, <DisassemblerInsn "add" for 0x400dc1>, <DisassemblerInsn "mov" for 0x400dc5>, <DisassemblerInsn "mov" for 0x400dcd>, <DisassemblerInsn "ror" for 0x400dd0>, <DisassemblerInsn "ror" for 0x400dd4>, <DisassemblerInsn "ror" for 0x400dd7>, <DisassemblerInsn "mov" for 0x400ddb>, <DisassemblerInsn "shr" for 0x400de2>, <DisassemblerInsn "mov" for 0x400de5>, <DisassemblerInsn "mov" for 0x400dec>, <DisassemblerInsn "cmp" for 0x400df2>, <DisassemblerInsn "jge" for 0x400df5>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f63>, <DisassemblerInsn "mov" for 0x400f6b>, <DisassemblerInsn "mov" for 0x400f73>, <DisassemblerInsn "mov" for 0x400f7b>, <DisassemblerInsn "mov" for 0x400f83>, <DisassemblerInsn "mov" for 0x400f85>, <DisassemblerInsn "cmp" for 0x400f8c>, <DisassemblerInsn "setg" for 0x400f8f>, <DisassemblerInsn "mov" for 0x400f93>, <DisassemblerInsn "mov" for 0x400f9b>, <DisassemblerInsn "add" for 0x400f9e>, <DisassemblerInsn "mov" for 0x400fa2>, <DisassemblerInsn "mov" for 0x400faa>, <DisassemblerInsn "mov" for 0x400fae>, <DisassemblerInsn "mov" for 0x400fb4>, <DisassemblerInsn "cmp" for 0x400fba>, <DisassemblerInsn "cmovg" for 0x400fbd>, <DisassemblerInsn "mov" for 0x400fc1>, <DisassemblerInsn "mov" for 0x400fc7>, <DisassemblerInsn "cmp" for 0x400fcd>, <DisassemblerInsn "cmovg" for 0x400fd0>, <DisassemblerInsn "and" for 0x400fd4>, <DisassemblerInsn "movzx" for 0x400fd8>, <DisassemblerInsn "mov" for 0x400fdc>, <DisassemblerInsn "sub" for 0x400fe0>, <DisassemblerInsn "mov" for 0x400fe3>, <DisassemblerInsn "mov" for 0x400fe6>, <DisassemblerInsn "mov" for 0x400fee>, <DisassemblerInsn "add" for 0x400ff1>, <DisassemblerInsn "mov" for 0x400ff5>, <DisassemblerInsn "mov" for 0x400ffd>, <DisassemblerInsn "mov" for 0x401001>, <DisassemblerInsn "add" for 0x401004>, <DisassemblerInsn "mov" for 0x401008>, <DisassemblerInsn "mov" for 0x401010>, <DisassemblerInsn "mov" for 0x401014>, <DisassemblerInsn "mov" for 0x40101a>, <DisassemblerInsn "add" for 0x40101d>, <DisassemblerInsn "mov" for 0x401021>, <DisassemblerInsn "mov" for 0x401029>, <DisassemblerInsn "mov" for 0x40102c>, <DisassemblerInsn "mov" for 0x40102e>, <DisassemblerInsn "and" for 0x401034>, <DisassemblerInsn "cmp" for 0x401036>, <DisassemblerInsn "je" for 0x401038>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b91>, <DisassemblerInsn "cmp" for 0x400b98>, <DisassemblerInsn "je" for 0x400b9b>]'}, {'block_Idx': 71, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4011d5>]'}, {'block_Idx': 96, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40144f>, <DisassemblerInsn "sub" for 0x401456>, <DisassemblerInsn "je" for 0x401459>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c73>, <DisassemblerInsn "and" for 0x400c7a>, <DisassemblerInsn "cmp" for 0x400c7f>, <DisassemblerInsn "je" for 0x400c84>]'}, {'block_Idx': 192, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ec8>, <DisassemblerInsn "mov" for 0x401ed0>, <DisassemblerInsn "mov" for 0x401ed7>, <DisassemblerInsn "mov" for 0x401ede>, <DisassemblerInsn "mov" for 0x401ee6>, <DisassemblerInsn "shr" for 0x401eee>, <DisassemblerInsn "mov" for 0x401ef2>, <DisassemblerInsn "add" for 0x401ef5>, <DisassemblerInsn "mov" for 0x401ef9>, <DisassemblerInsn "add" for 0x401efb>, <DisassemblerInsn "mov" for 0x401efe>, <DisassemblerInsn "shl" for 0x401f05>, <DisassemblerInsn "mov" for 0x401f08>, <DisassemblerInsn "mov" for 0x401f0f>, <DisassemblerInsn "sar" for 0x401f17>, <DisassemblerInsn "movsxd" for 0x401f1b>, <DisassemblerInsn "mov" for 0x401f1e>, <DisassemblerInsn "ror" for 0x401f22>, <DisassemblerInsn "ror" for 0x401f26>, <DisassemblerInsn "ror" for 0x401f29>, <DisassemblerInsn "shl" for 0x401f2d>, <DisassemblerInsn "mov" for 0x401f2f>, <DisassemblerInsn "mov" for 0x401f36>, <DisassemblerInsn "xor" for 0x401f39>, <DisassemblerInsn "sub" for 0x401f3b>, <DisassemblerInsn "shr" for 0x401f3e>, <DisassemblerInsn "mov" for 0x401f40>, <DisassemblerInsn "add" for 0x401f47>, <DisassemblerInsn "mov" for 0x401f49>, <DisassemblerInsn "or" for 0x401f4b>, <DisassemblerInsn "mov" for 0x401f4d>, <DisassemblerInsn "mov" for 0x401f54>, <DisassemblerInsn "mov" for 0x401f5c>, <DisassemblerInsn "mov" for 0x401f64>, <DisassemblerInsn "mov" for 0x401f6b>, <DisassemblerInsn "mov" for 0x401f72>, <DisassemblerInsn "sub" for 0x401f77>, <DisassemblerInsn "mov" for 0x401f79>, <DisassemblerInsn "shl" for 0x401f80>, <DisassemblerInsn "mov" for 0x401f82>, <DisassemblerInsn "sar" for 0x401f89>, <DisassemblerInsn "mov" for 0x401f8b>, <DisassemblerInsn "mov" for 0x401f93>, <DisassemblerInsn "add" for 0x401f96>, <DisassemblerInsn "mov" for 0x401f9a>, <DisassemblerInsn "cmp" for 0x401fa2>, <DisassemblerInsn "je" for 0x401fa5>]'}, {'block_Idx': 76, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40125a>, <DisassemblerInsn "mov" for 0x401262>, <DisassemblerInsn "mov" for 0x401269>, <DisassemblerInsn "mov" for 0x401271>, <DisassemblerInsn "shr" for 0x401279>, <DisassemblerInsn "and" for 0x40127d>, <DisassemblerInsn "mov" for 0x401284>, <DisassemblerInsn "ror" for 0x401287>, <DisassemblerInsn "ror" for 0x40128b>, <DisassemblerInsn "ror" for 0x40128e>, <DisassemblerInsn "shr" for 0x401292>, <DisassemblerInsn "add" for 0x401295>, <DisassemblerInsn "mov" for 0x401298>, <DisassemblerInsn "add" for 0x40129a>, <DisassemblerInsn "mov" for 0x40129d>, <DisassemblerInsn "mov" for 0x4012a4>, <DisassemblerInsn "jmp" for 0x4012ab>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008d8>, <DisassemblerInsn "mov" for 0x4008e0>, <DisassemblerInsn "mov" for 0x4008e7>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f6>, <DisassemblerInsn "mov" for 0x4008fd>, <DisassemblerInsn "mov" for 0x400904>, <DisassemblerInsn "shl" for 0x400906>, <DisassemblerInsn "xor" for 0x400909>, <DisassemblerInsn "cmp" for 0x40090b>, <DisassemblerInsn "cmovl" for 0x40090e>, <DisassemblerInsn "mov" for 0x400912>, <DisassemblerInsn "xor" for 0x40091a>, <DisassemblerInsn "cmp" for 0x40091c>, <DisassemblerInsn "cmovl" for 0x40091f>, <DisassemblerInsn "xor" for 0x400922>, <DisassemblerInsn "cmp" for 0x400925>, <DisassemblerInsn "mov" for 0x400928>, <DisassemblerInsn "cmovl" for 0x40092a>, <DisassemblerInsn "mov" for 0x40092e>, <DisassemblerInsn "add" for 0x400931>, <DisassemblerInsn "mov" for 0x400935>, <DisassemblerInsn "mov" for 0x40093d>, <DisassemblerInsn "mov" for 0x400941>, <DisassemblerInsn "add" for 0x400944>, <DisassemblerInsn "mov" for 0x400948>, <DisassemblerInsn "mov" for 0x400950>, <DisassemblerInsn "mov" for 0x400953>, <DisassemblerInsn "add" for 0x400955>, <DisassemblerInsn "mov" for 0x400958>, <DisassemblerInsn "add" for 0x40095b>, <DisassemblerInsn "mov" for 0x40095f>, <DisassemblerInsn "mov" for 0x400967>, <DisassemblerInsn "mov" for 0x40096b>, <DisassemblerInsn "add" for 0x40096e>, <DisassemblerInsn "mov" for 0x400972>, <DisassemblerInsn "mov" for 0x40097a>, <DisassemblerInsn "cmp" for 0x400981>, <DisassemblerInsn "jl" for 0x400984>]'}, {'block_Idx': 30, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400df7>, <DisassemblerInsn "mov" for 0x400dfe>, <DisassemblerInsn "mov" for 0x400e06>, <DisassemblerInsn "add" for 0x400e09>, <DisassemblerInsn "xor" for 0x400e0c>, <DisassemblerInsn "cmp" for 0x400e0e>, <DisassemblerInsn "mov" for 0x400e10>, <DisassemblerInsn "mov" for 0x400e12>, <DisassemblerInsn "mov" for 0x400e19>, <DisassemblerInsn "mov" for 0x400e20>, <DisassemblerInsn "je" for 0x400e27>]'}, {'block_Idx': 63, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010ef>, <DisassemblerInsn "mov" for 0x4010f6>, <DisassemblerInsn "mov" for 0x4010fd>, <DisassemblerInsn "mov" for 0x401102>, <DisassemblerInsn "shr" for 0x401104>, <DisassemblerInsn "mov" for 0x401106>, <DisassemblerInsn "and" for 0x401108>, <DisassemblerInsn "mov" for 0x40110a>, <DisassemblerInsn "mov" for 0x40110c>, <DisassemblerInsn "mov" for 0x401111>, <DisassemblerInsn "mov" for 0x401119>, <DisassemblerInsn "mov" for 0x401121>, <DisassemblerInsn "mov" for 0x401128>, <DisassemblerInsn "mov" for 0x401130>, <DisassemblerInsn "mov" for 0x401138>, <DisassemblerInsn "mov" for 0x40113f>, <DisassemblerInsn "mov" for 0x401146>, <DisassemblerInsn "mov" for 0x40114e>, <DisassemblerInsn "cmp" for 0x401156>, <DisassemblerInsn "jle" for 0x401159>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e2f>, <DisassemblerInsn "mov" for 0x401e37>, <DisassemblerInsn "mov" for 0x401e3e>, <DisassemblerInsn "mov" for 0x401e45>, <DisassemblerInsn "mov" for 0x401e4d>, <DisassemblerInsn "mov" for 0x401e55>, <DisassemblerInsn "mov" for 0x401e5c>, <DisassemblerInsn "mov" for 0x401e63>, <DisassemblerInsn "sar" for 0x401e65>, <DisassemblerInsn "movsxd" for 0x401e68>, <DisassemblerInsn "mov" for 0x401e6b>, <DisassemblerInsn "ror" for 0x401e6e>, <DisassemblerInsn "ror" for 0x401e72>, <DisassemblerInsn "ror" for 0x401e75>, <DisassemblerInsn "and" for 0x401e79>, <DisassemblerInsn "mov" for 0x401e7c>, <DisassemblerInsn "shl" for 0x401e83>, <DisassemblerInsn "mov" for 0x401e85>, <DisassemblerInsn "cmp" for 0x401e8c>, <DisassemblerInsn "jge" for 0x401e8f>]'}, {'block_Idx': 3, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40058a>, <DisassemblerInsn "mov" for 0x400592>, <DisassemblerInsn "mov" for 0x40059a>, <DisassemblerInsn "mov" for 0x4005a1>, <DisassemblerInsn "mov" for 0x4005a4>, <DisassemblerInsn "mov" for 0x4005ac>, <DisassemblerInsn "mov" for 0x4005b3>, <DisassemblerInsn "xor" for 0x4005b5>, <DisassemblerInsn "cmp" for 0x4005b7>, <DisassemblerInsn "mov" for 0x4005ba>, <DisassemblerInsn "mov" for 0x4005c1>, <DisassemblerInsn "mov" for 0x4005c8>, <DisassemblerInsn "mov" for 0x4005cf>, <DisassemblerInsn "je" for 0x4005d7>]'}, {'block_Idx': 167, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b3b>, <DisassemblerInsn "mov" for 0x401b43>, <DisassemblerInsn "mov" for 0x401b4a>, <DisassemblerInsn "mov" for 0x401b51>, <DisassemblerInsn "sub" for 0x401b56>, <DisassemblerInsn "mov" for 0x401b58>, <DisassemblerInsn "shl" for 0x401b5f>, <DisassemblerInsn "mov" for 0x401b61>, <DisassemblerInsn "sar" for 0x401b68>, <DisassemblerInsn "mov" for 0x401b6a>, <DisassemblerInsn "cmp" for 0x401b71>, <DisassemblerInsn "jle" for 0x401b74>]'}, {'block_Idx': 99, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014c2>, <DisassemblerInsn "mov" for 0x4014c9>, <DisassemblerInsn "mov" for 0x4014d1>, <DisassemblerInsn "sar" for 0x4014d3>, <DisassemblerInsn "movsxd" for 0x4014d6>, <DisassemblerInsn "mov" for 0x4014d9>, <DisassemblerInsn "ror" for 0x4014dc>, <DisassemblerInsn "ror" for 0x4014e0>, <DisassemblerInsn "ror" for 0x4014e3>, <DisassemblerInsn "and" for 0x4014e7>, <DisassemblerInsn "shl" for 0x4014ea>, <DisassemblerInsn "mov" for 0x4014ec>, <DisassemblerInsn "shr" for 0x4014f3>, <DisassemblerInsn "add" for 0x4014f6>, <DisassemblerInsn "mov" for 0x4014f9>, <DisassemblerInsn "mov" for 0x401500>, <DisassemblerInsn "jmp" for 0x401507>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b1a>, <DisassemblerInsn "mov" for 0x400b22>, <DisassemblerInsn "mov" for 0x400b2a>, <DisassemblerInsn "mov" for 0x400b32>, <DisassemblerInsn "mov" for 0x400b3a>, <DisassemblerInsn "mov" for 0x400b42>, <DisassemblerInsn "mov" for 0x400b4a>, <DisassemblerInsn "add" for 0x400b4d>, <DisassemblerInsn "sar" for 0x400b50>, <DisassemblerInsn "xor" for 0x400b53>, <DisassemblerInsn "cmp" for 0x400b56>, <DisassemblerInsn "cmovl" for 0x400b5a>, <DisassemblerInsn "xor" for 0x400b5e>, <DisassemblerInsn "cmp" for 0x400b61>, <DisassemblerInsn "mov" for 0x400b65>, <DisassemblerInsn "cmovl" for 0x400b68>, <DisassemblerInsn "xor" for 0x400b6c>, <DisassemblerInsn "cmp" for 0x400b6f>, <DisassemblerInsn "cmovl" for 0x400b73>, <DisassemblerInsn "mov" for 0x400b77>, <DisassemblerInsn "mov" for 0x400b7a>, <DisassemblerInsn "movsxd" for 0x400b7d>, <DisassemblerInsn "add" for 0x400b80>, <DisassemblerInsn "mov" for 0x400b83>, <DisassemblerInsn "mov" for 0x400b86>, <DisassemblerInsn "jmp" for 0x400b8c>]'}, {'block_Idx': 116, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40174f>, <DisassemblerInsn "mov" for 0x401757>, <DisassemblerInsn "add" for 0x40175e>, <DisassemblerInsn "mov" for 0x401761>, <DisassemblerInsn "mov" for 0x401763>, <DisassemblerInsn "mov" for 0x40176a>, <DisassemblerInsn "mov" for 0x401772>, <DisassemblerInsn "mov" for 0x40177a>, <DisassemblerInsn "mov" for 0x401781>, <DisassemblerInsn "mov" for 0x401788>, <DisassemblerInsn "mov" for 0x40178a>, <DisassemblerInsn "mov" for 0x401791>, <DisassemblerInsn "mov" for 0x401794>, <DisassemblerInsn "mov" for 0x40179c>, <DisassemblerInsn "sar" for 0x40179e>, <DisassemblerInsn "movsxd" for 0x4017a1>, <DisassemblerInsn "mov" for 0x4017a4>, <DisassemblerInsn "mov" for 0x4017a8>, <DisassemblerInsn "and" for 0x4017aa>, <DisassemblerInsn "movzx" for 0x4017ad>, <DisassemblerInsn "mov" for 0x4017b1>, <DisassemblerInsn "add" for 0x4017b8>, <DisassemblerInsn "mov" for 0x4017bb>, <DisassemblerInsn "mov" for 0x4017c2>, <DisassemblerInsn "mov" for 0x4017c4>, <DisassemblerInsn "shr" for 0x4017c9>, <DisassemblerInsn "mov" for 0x4017cb>, <DisassemblerInsn "and" for 0x4017d2>, <DisassemblerInsn "cmp" for 0x4017d4>, <DisassemblerInsn "je" for 0x4017d7>]'}, {'block_Idx': 189, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401be4>, <DisassemblerInsn "mov" for 0x401bec>, <DisassemblerInsn "mov" for 0x401bf3>, <DisassemblerInsn "mov" for 0x401bfa>, <DisassemblerInsn "mov" for 0x401c02>, <DisassemblerInsn "mov" for 0x401c0a>, <DisassemblerInsn "mov" for 0x401c11>, <DisassemblerInsn "mov" for 0x401c18>, <DisassemblerInsn "sar" for 0x401c1a>, <DisassemblerInsn "movsxd" for 0x401c1d>, <DisassemblerInsn "mov" for 0x401c20>, <DisassemblerInsn "ror" for 0x401c23>, <DisassemblerInsn "ror" for 0x401c27>, <DisassemblerInsn "ror" for 0x401c2a>, <DisassemblerInsn "and" for 0x401c2e>, <DisassemblerInsn "mov" for 0x401c31>, <DisassemblerInsn "shl" for 0x401c38>, <DisassemblerInsn "mov" for 0x401c3a>, <DisassemblerInsn "cmp" for 0x401c41>, <DisassemblerInsn "jge" for 0x401c44>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c4a>, <DisassemblerInsn "mov" for 0x400c52>, <DisassemblerInsn "mov" for 0x400c5a>, <DisassemblerInsn "mov" for 0x400c5c>, <DisassemblerInsn "mov" for 0x400c5f>, <DisassemblerInsn "mov" for 0x400c67>, <DisassemblerInsn "jmp" for 0x400c6e>]'}, {'block_Idx': 109, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401509>, <DisassemblerInsn "mov" for 0x401510>, <DisassemblerInsn "mov" for 0x401518>, <DisassemblerInsn "sar" for 0x40151a>, <DisassemblerInsn "movsxd" for 0x40151d>, <DisassemblerInsn "mov" for 0x401520>, <DisassemblerInsn "ror" for 0x401523>, <DisassemblerInsn "ror" for 0x401527>, <DisassemblerInsn "ror" for 0x40152a>, <DisassemblerInsn "and" for 0x40152e>, <DisassemblerInsn "shl" for 0x401531>, <DisassemblerInsn "mov" for 0x401533>, <DisassemblerInsn "shr" for 0x40153a>, <DisassemblerInsn "add" for 0x40153d>, <DisassemblerInsn "imul" for 0x401540>, <DisassemblerInsn "mov" for 0x401543>, <DisassemblerInsn "mov" for 0x40154a>, <DisassemblerInsn "jmp" for 0x401551>]'}, {'block_Idx': 191, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e91>, <DisassemblerInsn "mov" for 0x401e98>, <DisassemblerInsn "mov" for 0x401e9f>, <DisassemblerInsn "mov" for 0x401ea6>, <DisassemblerInsn "xor" for 0x401ea9>, <DisassemblerInsn "sub" for 0x401eab>, <DisassemblerInsn "shr" for 0x401eae>, <DisassemblerInsn "mov" for 0x401eb0>, <DisassemblerInsn "add" for 0x401eb8>, <DisassemblerInsn "mov" for 0x401eba>, <DisassemblerInsn "mov" for 0x401ebc>, <DisassemblerInsn "jmp" for 0x401ec3>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a31>, <DisassemblerInsn "mov" for 0x400a39>, <DisassemblerInsn "mov" for 0x400a40>, <DisassemblerInsn "mov" for 0x400a48>, <DisassemblerInsn "sar" for 0x400a4a>, <DisassemblerInsn "movsxd" for 0x400a4d>, <DisassemblerInsn "mov" for 0x400a50>, <DisassemblerInsn "mov" for 0x400a53>, <DisassemblerInsn "and" for 0x400a55>, <DisassemblerInsn "mov" for 0x400a58>, <DisassemblerInsn "movzx" for 0x400a5f>, <DisassemblerInsn "mov" for 0x400a62>, <DisassemblerInsn "mov" for 0x400a69>, <DisassemblerInsn "add" for 0x400a6b>, <DisassemblerInsn "mov" for 0x400a6e>, <DisassemblerInsn "sar" for 0x400a70>, <DisassemblerInsn "movsxd" for 0x400a73>, <DisassemblerInsn "mov" for 0x400a76>, <DisassemblerInsn "ror" for 0x400a79>, <DisassemblerInsn "ror" for 0x400a7d>, <DisassemblerInsn "ror" for 0x400a80>, <DisassemblerInsn "and" for 0x400a84>, <DisassemblerInsn "shl" for 0x400a87>, <DisassemblerInsn "mov" for 0x400a89>, <DisassemblerInsn "shr" for 0x400a90>, <DisassemblerInsn "mov" for 0x400a93>, <DisassemblerInsn "mov" for 0x400a9a>, <DisassemblerInsn "add" for 0x400a9c>, <DisassemblerInsn "sar" for 0x400a9f>, <DisassemblerInsn "movsxd" for 0x400aa2>, <DisassemblerInsn "mov" for 0x400aa5>, <DisassemblerInsn "ror" for 0x400aa8>, <DisassemblerInsn "ror" for 0x400aac>, <DisassemblerInsn "ror" for 0x400aaf>, <DisassemblerInsn "shl" for 0x400ab3>, <DisassemblerInsn "mov" for 0x400ab5>, <DisassemblerInsn "shr" for 0x400abc>, <DisassemblerInsn "mov" for 0x400abf>, <DisassemblerInsn "add" for 0x400ac2>, <DisassemblerInsn "shl" for 0x400ac6>, <DisassemblerInsn "sar" for 0x400ac9>, <DisassemblerInsn "movsxd" for 0x400acd>, <DisassemblerInsn "mov" for 0x400ad0>, <DisassemblerInsn "ror" for 0x400ad4>, <DisassemblerInsn "ror" for 0x400ad8>, <DisassemblerInsn "ror" for 0x400adb>, <DisassemblerInsn "shl" for 0x400adf>, <DisassemblerInsn "mov" for 0x400ae1>, <DisassemblerInsn "shr" for 0x400ae9>, <DisassemblerInsn "add" for 0x400aec>, <DisassemblerInsn "mov" for 0x400aef>, <DisassemblerInsn "mov" for 0x400af6>, <DisassemblerInsn "or" for 0x400af8>, <DisassemblerInsn "mov" for 0x400afa>, <DisassemblerInsn "shl" for 0x400b01>, <DisassemblerInsn "mov" for 0x400b04>, <DisassemblerInsn "add" for 0x400b0b>, <DisassemblerInsn "mov" for 0x400b0d>, <DisassemblerInsn "mov" for 0x400b0f>, <DisassemblerInsn "cmp" for 0x400b16>, <DisassemblerInsn "jle" for 0x400b18>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fde>, <DisassemblerInsn "mov" for 0x401fe5>, <DisassemblerInsn "mov" for 0x401fed>, <DisassemblerInsn "mov" for 0x401ff5>, <DisassemblerInsn "call" for 0x401ff7>]'}, {'block_Idx': 78, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401329>, <DisassemblerInsn "mov" for 0x401331>, <DisassemblerInsn "mov" for 0x401338>, <DisassemblerInsn "mov" for 0x40133f>, <DisassemblerInsn "mov" for 0x401346>, <DisassemblerInsn "mov" for 0x40134d>, <DisassemblerInsn "mov" for 0x40134f>, <DisassemblerInsn "cmp" for 0x401356>, <DisassemblerInsn "jle" for 0x401358>]'}], 'cfg_block_detailed_info': [{'block_Idx': 68, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d0]>', '<mov~~rdi, qword ptr [rsp + 0x808]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rsi, qword ptr [rsp + 0x7e8]>', '<mov~~eax, dword ptr [rsp + 0x6cc]>', '<add~~eax, -1>', '<mov~~r8, rdx>', '<shr~~r8, 3>', '<mov~~esi, dword ptr [rsi + r8]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xf8>', '<add~~rdx, 8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rdi], r8d>', '<add~~esi, -0x80>', '<shl~~rcx, 6>', '<movsxd~~rdi, esi>', '<add~~rcx, rdi>', '<cmp~~esi, 0x40>', '<mov~~qword ptr [rsp + 0x6e0], rdx>', '<mov~~qword ptr [rsp + 0x6e8], rcx>', '<mov~~dword ptr [rsp + 0x6f4], eax>', '<jb~~0x401128>']}, {'block_Idx': 75, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x750]>', '<sub~~eax, 6>', '<je~~0x40125a>']}, {'block_Idx': 46, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x730], rax>', '<jmp~~0x400f63>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x7e8]>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x7d8], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x7dc], eax>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x400c73>']}, {'block_Idx': 169, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x598], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x5a0], rax>', '<mov~~rax, qword ptr [rsp + 0x5a0]>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rsp + 0x598]>', '<mov~~esi, dword ptr [rsp + 0x5b0]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x590], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x5a0], rax>', '<jl~~0x401ba1>']}, {'block_Idx': 47, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x740]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x400f3b>']}, {'block_Idx': 104, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<sub~~eax, 0xe>', '<je~~0x401509>']}, {'block_Idx': 93, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~rax, qword ptr [rsp + 0x7e8]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401577>']}, {'block_Idx': 127, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x808]>', '<mov~~edx, dword ptr [rsp + 0x624]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x634]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x608], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 7>', '<mov~~dword ptr [rsi], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~edx, 8>', '<mov~~dword ptr [rsi], edx>', '<mov~~edi, 0x80>', '<shr~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x620]>', '<and~~edi, eax>', '<xor~~eax, eax>', '<mov~~esi, 1>', '<cmp~~edi, 0>', '<mov~~edi, edx>', '<mov~~dword ptr [rsp + 0x60c], edi>', '<mov~~dword ptr [rsp + 0x610], esi>', '<mov~~dword ptr [rsp + 0x614], edx>', '<mov~~dword ptr [rsp + 0x618], ecx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<je~~0x401969>']}, {'block_Idx': 70, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6e0]>', '<mov~~rdx, qword ptr [rsp + 0x6e8]>', '<mov~~eax, dword ptr [rsp + 0x6f4]>', '<mov~~dword ptr [rsp + 0x6cc], eax>', '<mov~~qword ptr [rsp + 0x6d0], rdx>', '<mov~~qword ptr [rsp + 0x6d8], rcx>', '<cmp~~eax, 1>', '<jle~~0x4011d7>']}, {'block_Idx': 89, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~ecx, dword ptr [rsp + 0x6a0]>', '<mov~~edx, dword ptr [rsp + 0x6a4]>', '<mov~~dword ptr [rsp + 0x688], edx>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500038>']}, {'block_Idx': 195, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x584]>', '<mov~~edx, dword ptr [rsp + 0x580]>', '<mov~~eax, dword ptr [rsp + 0x58c]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x808]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x574], eax>', '<jmp~~0x401d09>']}, {'block_Idx': 137, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x610]>', '<mov~~edi, dword ptr [rsp + 0x60c]>', '<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rsp + 0x628]>', '<mov~~dword ptr [rsp + 0x5ec], eax>', '<mov~~esi, edi>', '<sar~~esi, 3>', '<mov~~dword ptr [rsp + 0x5f0], esi>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x5f4], ecx>', '<movzx~~esi, sil>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x5f8], edi>', '<mov~~dword ptr [rdx], edi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x5f8]>', '<mov~~dword ptr [rsp + 0x5fc], edx>', '<and~~edx, esi>', '<mov~~dword ptr [rsp + 0x600], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x604], eax>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x60c], ecx>', '<mov~~dword ptr [rsp + 0x610], eax>', '<je~~0x4018a0>']}, {'block_Idx': 168, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5e0]>', '<cmp~~eax, 0>', '<je~~0x402bce>']}, {'block_Idx': 184, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<mov~~edx, dword ptr [rsp + 0x5e8]>', '<mov~~eax, dword ptr [rsp + 0x548]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x530], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x538], edx>', '<mov~~dword ptr [rsp + 0x53c], ecx>', '<mov~~qword ptr [rsp + 0x540], rax>', '<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x538]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~rsi, qword ptr [rsp + 0x540]>', '<mov~~qword ptr [rsp + 0x518], rsi>', '<mov~~dword ptr [rsp + 0x520], eax>', '<mov~~dword ptr [rsp + 0x524], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x528], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x52c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401ec8>']}, {'block_Idx': 33, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~rdx, qword ptr [rsp + 0x838]>', '<mov~~rdi, qword ptr [rsp + 0x858]>', '<mov~~rsi, qword ptr [rsp + 0x8b0]>', '<mov~~eax, dword ptr [rsp + 0x844]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x868], esi>', '<mov~~dword ptr [rsp + 0x86c], edx>', '<mov~~qword ptr [rsp + 0x870], rcx>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jne~~0x4037b0>']}, {'block_Idx': 15, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~dword ptr [rdx], 0x20>', '<mov~~rdx, rax>', '<add~~rdx, 0x54>', '<mov~~qword ptr [rsp + 0x7b0], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x20>', '<mov~~qword ptr [rsp + 0x7b8], rdx>', '<mov~~qword ptr [rsp + 0x7c0], rax>', '<mov~~eax, 0x20>', '<mov~~qword ptr [rsp + 0x7c8], rcx>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<mov~~rdi, qword ptr [rsp + 0x808]>', '<mov~~rax, qword ptr [rsp + 0x7c8]>', '<mov~~edx, dword ptr [rsp + 0x7d4]>', '<mov~~qword ptr [rsp + 0x788], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x79c], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x794], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x798], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x7f8]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x7a0], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x7a4], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x7a8], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x7ac], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400b91>']}, {'block_Idx': 41, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x764]>', '<add~~eax, -7>', '<mov~~ecx, 2>', '<mov~~dword ptr [rsp + 0x748], ecx>', '<mov~~dword ptr [rsp + 0x74c], eax>', '<jmp~~0x400eb1>']}, {'block_Idx': 79, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x750]>', '<sub~~eax, 7>', '<je~~0x4012ad>']}, {'block_Idx': 156, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5e4]>', '<mov~~ecx, dword ptr [rsp + 0x5e8]>', '<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x5c0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x5c4], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401aaf>']}, {'block_Idx': 165, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~edi, dword ptr [rsp + 0x5e8]>', '<mov~~esi, dword ptr [rsp + 0x5e4]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~r9d, dword ptr [rsp + 0x5c4]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x5b4], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x5c0]>', '<mov~~dword ptr [rsp + 0x5b8], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x5b4]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x5b8]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x5bc], eax>', '<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~esi, dword ptr [rsp + 0x5e4]>', '<mov~~edx, dword ptr [rsp + 0x5bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x5ac], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x5ac]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x5b0], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402b44>']}, {'block_Idx': 136, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x614]>', '<mov~~eax, dword ptr [rsp + 0x618]>', '<mov~~edx, dword ptr [rsp + 0x61c]>', '<mov~~dword ptr [rsp + 0x5e0], edx>', '<mov~~dword ptr [rsp + 0x5e4], eax>', '<mov~~dword ptr [rsp + 0x5e8], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x4019b6>']}, {'block_Idx': 200, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x500]>', '<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x538], edx>', '<mov~~dword ptr [rsp + 0x53c], ecx>', '<mov~~qword ptr [rsp + 0x540], rax>', '<jmp~~0x401e2f>']}, {'block_Idx': 129, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rsp + 0x7f0]>', '<mov~~edx, dword ptr [rsp + 0x63c]>', '<mov~~dword ptr [rsp + 0x620], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x624], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x628], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x638], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x634], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x638]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x4017f9>']}, {'block_Idx': 203, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x560]>', '<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x5d0], edx>', '<mov~~dword ptr [rsp + 0x5d4], ecx>', '<mov~~qword ptr [rsp + 0x5d8], rax>', '<jmp~~0x401be4>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7e0]>', '<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x18], eax>', '<cmp~~eax, ecx>', '<jle~~0x403747>']}, {'block_Idx': 38, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x808]>', '<mov~~eax, dword ptr [rsp + 0x760]>', '<mov~~edx, dword ptr [rsp + 0x748]>', '<mov~~esi, dword ptr [rsp + 0x74c]>', '<mov~~dword ptr [rsp + 0x738], esi>', '<mov~~dword ptr [rsp + 0x73c], edx>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x740], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x400f0a>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x5e8]>', '<mov~~edx, dword ptr [rsp + 0x5e4]>', '<mov~~eax, dword ptr [rsp + 0x5c4]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x808]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x5bc], eax>', '<jmp~~0x401b3b>']}, {'block_Idx': 58, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x6f8], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~ecx, edi>', '<shr~~ecx, 8>', '<mov~~eax, edx>', '<or~~eax, 8>', '<cmp~~esi, 0>', '<cmove~~ecx, edi>', '<cmp~~esi, 0>', '<cmove~~eax, edx>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, qword ptr [rip + 0xfef5e]>', '<movzx~~ecx, byte ptr [rcx + rdx]>', '<add~~eax, ecx>', '<mov~~ecx, 7>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsp + 0x6fc], ecx>', '<cmp~~eax, 6>', '<je~~0x4011f4>']}, {'block_Idx': 202, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x578]>', '<mov~~rdx, qword ptr [rsp + 0x5c8]>', '<mov~~edi, dword ptr [rsp + 0x580]>', '<mov~~esi, dword ptr [rsp + 0x574]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x55c], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x55c]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x560], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402b44>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~edi, dword ptr [rsp + 0x584]>', '<mov~~esi, dword ptr [rsp + 0x580]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~r9d, dword ptr [rsp + 0x58c]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x56c], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x588]>', '<mov~~dword ptr [rsp + 0x570], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x56c]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x570]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x574], eax>', '<mov~~rax, qword ptr [rsp + 0x578]>', '<mov~~rdx, qword ptr [rsp + 0x5c8]>', '<mov~~edi, dword ptr [rsp + 0x580]>', '<mov~~esi, dword ptr [rsp + 0x574]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x55c], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x55c]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x560], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402b44>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~rdx, qword ptr [rsp + 0x550]>', '<mov~~edi, dword ptr [rsp + 0x520]>', '<mov~~esi, dword ptr [rsp + 0x514]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x4fc], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x4fc]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x530]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x500], rax>', '<cmp~~rax, rcx>', '<je~~0x401fde>']}, {'block_Idx': 91, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<sub~~eax, 0xc>', '<je~~0x401472>']}, {'block_Idx': 62, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x710]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4394]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 82, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~ecx, dword ptr [rsp + 0x6c8]>', '<mov~~rax, qword ptr [rsp + 0x7e8]>', '<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x6c0], ecx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<jmp~~0x401329>']}, {'block_Idx': 31, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~ecx, dword ptr [rsp + 0x764]>', '<add~~ecx, -8>', '<sub~~ecx, 3>', '<setb~~cl>', '<mov~~eax, dword ptr [rax + 0xc]>', '<mov~~edx, eax>', '<sub~~edx, 2>', '<sete~~dl>', '<and~~cl, dl>', '<test~~cl, 1>', '<mov~~dword ptr [rsp + 0x744], eax>', '<jne~~0x400e62>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x808]>', '<mov~~rax, qword ptr [rsp + 0x7e8]>', '<mov~~edx, dword ptr [rsp + 0x7dc]>', '<mov~~esi, edx>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x750], esi>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x754], edx>', '<mov~~rdx, rax>', '<add~~rdx, 3>', '<mov~~qword ptr [rsp + 0x758], rdx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x760], eax>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x764], eax>', '<mov~~dword ptr [rcx], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x400e2f>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x808]>', '<mov~~rax, qword ptr [rsp + 0x758]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rsi, qword ptr [rsp + 0x730]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x700], esi>', '<cmp~~esi, 0x10>', '<setg~~r8b>', '<mov~~byte ptr [rsp + 0x707], r8b>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x708], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r9d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r9d>', '<mov~~r9d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r9d, r11d>', '<and~~r8b, 1>', '<movzx~~r8d, r8b>', '<mov~~dword ptr [rdi + 0x58], r10d>', '<sub~~r9d, esi>', '<mov~~r10, rdi>', '<mov~~qword ptr [rsp + 0x710], r10>', '<mov~~r10, rdx>', '<add~~r10, 0x48>', '<mov~~qword ptr [rsp + 0x718], r10>', '<mov~~dword ptr [rdx + 0x48], r9d>', '<mov~~r9, rdx>', '<add~~r9, 0x4c>', '<mov~~qword ptr [rsp + 0x720], r9>', '<mov~~dword ptr [rdx + 0x4c], r8d>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x728], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x401057>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7a4]>', '<cmp~~eax, 0>', '<je~~0x400c2a>']}, {'block_Idx': 71, 'blockInsts': ['<jmp~~0x4011f4>']}, {'block_Idx': 96, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<sub~~eax, 0xd>', '<je~~0x4014c2>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7d8]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400d8e>']}, {'block_Idx': 192, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~edi, dword ptr [rsp + 0x524]>', '<mov~~esi, dword ptr [rsp + 0x520]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~r9d, dword ptr [rsp + 0x52c]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x50c], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x528]>', '<mov~~dword ptr [rsp + 0x510], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x50c]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x510]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x514], eax>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~rdx, qword ptr [rsp + 0x550]>', '<mov~~edi, dword ptr [rsp + 0x520]>', '<mov~~esi, dword ptr [rsp + 0x514]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x4fc], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x4fc]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x530]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x500], rax>', '<cmp~~rax, rcx>', '<je~~0x401fde>']}, {'block_Idx': 76, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~ecx, dword ptr [rsp + 0x6c8]>', '<mov~~rax, qword ptr [rsp + 0x7e8]>', '<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x6c0], ecx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<jmp~~0x401329>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~esi, dword ptr [rsp + 0x868]>', '<mov~~eax, dword ptr [rsp + 0x86c]>', '<mov~~rdx, qword ptr [rsp + 0x870]>', '<mov~~dword ptr [rsp + 0x7e0], eax>', '<mov~~dword ptr [rsp + 0x7e4], esi>', '<mov~~edi, eax>', '<shl~~edi, 3>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x7e8], rdx>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~edi, esi>', '<xor~~r8d, r8d>', '<cmp~~eax, 0>', '<mov~~esi, eax>', '<cmovl~~esi, r8d>', '<mov~~r8, rcx>', '<add~~r8, 0x28>', '<mov~~qword ptr [rsp + 0x7f0], r8>', '<mov~~qword ptr [rcx + 0x28], rdx>', '<mov~~r8, rcx>', '<add~~r8, 0x3c>', '<mov~~qword ptr [rsp + 0x7f8], r8>', '<mov~~dword ptr [rcx + 0x3c], edi>', '<mov~~esi, esi>', '<add~~rdx, rsi>', '<mov~~rsi, rcx>', '<add~~rsi, 0x30>', '<mov~~qword ptr [rsp + 0x800], rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x808], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<cmp~~eax, 0x18>', '<jl~~0x4036d0>']}, {'block_Idx': 30, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x764]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~edx, ecx>', '<mov~~dword ptr [rsp + 0x744], edx>', '<mov~~dword ptr [rsp + 0x748], ecx>', '<mov~~dword ptr [rsp + 0x74c], eax>', '<je~~0x400eb1>']}, {'block_Idx': 63, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6fc]>', '<mov~~edx, dword ptr [rsp + 0x6f8]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~edx, 0x28>', '<mov~~qword ptr [rsp + 0x6e0], rdx>', '<mov~~qword ptr [rsp + 0x6e8], rcx>', '<mov~~dword ptr [rsp + 0x6f4], eax>', '<mov~~rcx, qword ptr [rsp + 0x6e0]>', '<mov~~rdx, qword ptr [rsp + 0x6e8]>', '<mov~~eax, dword ptr [rsp + 0x6f4]>', '<mov~~dword ptr [rsp + 0x6cc], eax>', '<mov~~qword ptr [rsp + 0x6d0], rdx>', '<mov~~qword ptr [rsp + 0x6d8], rcx>', '<cmp~~eax, 1>', '<jle~~0x4011d7>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x538]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~rsi, qword ptr [rsp + 0x540]>', '<mov~~qword ptr [rsp + 0x518], rsi>', '<mov~~dword ptr [rsp + 0x520], eax>', '<mov~~dword ptr [rsp + 0x524], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x528], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x52c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401ec8>']}, {'block_Idx': 3, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x890]>', '<mov~~rdx, qword ptr [rsp + 0x8b0]>', '<mov~~ecx, dword ptr [rsp + 0x88c]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x880]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~esi, dword ptr [rdx]>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x8bc], esi>', '<mov~~dword ptr [rsp + 0x868], edx>', '<mov~~dword ptr [rsp + 0x86c], ecx>', '<mov~~qword ptr [rsp + 0x870], rax>', '<je~~0x4008d8>']}, {'block_Idx': 167, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~esi, dword ptr [rsp + 0x5e4]>', '<mov~~edx, dword ptr [rsp + 0x5bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x5ac], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x5ac]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x5b0], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402b44>']}, {'block_Idx': 99, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~rax, qword ptr [rsp + 0x7e8]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401577>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rsp + 0x800]>', '<mov~~rdi, qword ptr [rsp + 0x7f8]>', '<mov~~r9, qword ptr [rsp + 0x7f0]>', '<mov~~r11d, dword ptr [rsp + 0x7ac]>', '<mov~~rdx, qword ptr [rsp + 0x788]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x4036d0>']}, {'block_Idx': 116, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rsp + 0x648]>', '<add~~eax, 1>', '<mov~~dword ptr [rcx], eax>', '<mov~~dword ptr [rsp + 0x63c], eax>', '<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rsp + 0x7f0]>', '<mov~~edx, dword ptr [rsp + 0x63c]>', '<mov~~dword ptr [rsp + 0x620], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x624], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x628], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x638], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x634], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x638]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x4017f9>']}, {'block_Idx': 189, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x5d0]>', '<mov~~eax, dword ptr [rsp + 0x5d4]>', '<mov~~rsi, qword ptr [rsp + 0x5d8]>', '<mov~~qword ptr [rsp + 0x578], rsi>', '<mov~~dword ptr [rsp + 0x580], eax>', '<mov~~dword ptr [rsp + 0x584], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x588], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x58c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401c7d>']}, {'block_Idx': 35, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7f0]>', '<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~eax, dword ptr [rax]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x7c8], rcx>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<jmp~~0x400a29>']}, {'block_Idx': 109, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~rax, qword ptr [rsp + 0x7e8]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401577>']}, {'block_Idx': 191, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x524]>', '<mov~~edx, dword ptr [rsp + 0x520]>', '<mov~~eax, dword ptr [rsp + 0x52c]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x808]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x514], eax>', '<jmp~~0x401f54>']}, {'block_Idx': 43, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x808]>', '<mov~~rax, qword ptr [rsp + 0x7c8]>', '<mov~~edx, dword ptr [rsp + 0x7d4]>', '<mov~~qword ptr [rsp + 0x788], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x79c], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x794], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x798], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x7f8]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x7a0], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x7a4], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x7a8], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x7ac], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400b91>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x548]>', '<mov~~rdi, qword ptr [rsp + 0x890]>', '<mov~~rax, qword ptr [rsp + 0x640]>', '<mov~~esi, eax>', '<call~~0x4048d0>']}, {'block_Idx': 78, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~edx, dword ptr [rsp + 0x6c0]>', '<mov~~eax, dword ptr [rsp + 0x6c4]>', '<mov~~dword ptr [rsp + 0x6b4], eax>', '<mov~~dword ptr [rsp + 0x6b8], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x6bc], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401386>']}], 'cfg_edge_info': [(15, 21), (192, 200), (58, 62), (156, 164), (109, 89), (38, 47), (82, 78), (205, 191), (191, 198), (23, 31), (127, 137), (93, 89), (196, 203), (43, 21), (6, 11), (192, 199), (184, 192), (165, 169), (51, 58), (3, 6), (164, 167), (116, 127), (23, 30), (127, 136), (129, 127), (38, 46), (11, 16), (68, 71), (76, 78), (99, 89), (189, 196), (30, 38), (6, 10), (41, 38), (96, 99), (184, 191), (15, 22), (58, 63), (70, 68), (196, 168), (35, 43), (165, 168), (156, 165), (104, 109), (205, 192), (91, 93), (33, 6), (75, 76), (68, 70), (11, 15), (195, 202), (189, 195), (63, 68), (43, 22), (79, 82), (16, 23)]}]}
{'flac_decode_frame': [4196568, 4196746, 4196817, 4196905, 4197774, 4198065, 4198487, 4198747, 4199002, 4199085, 4199538, 4199618, 4199689, 4200441, 4201080, 4201135, 4201542, 4201597, 4202129, 4202184]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O2/flacdec.o---after
The extraction of function: flac_decode_frame
[4196568, 4196746, 4196817, 4196905, 4197774, 4198065, 4198487, 4198747, 4199002, 4199085, 4199538, 4199618, 4199689, 4200441, 4201080, 4201135, 4201542, 4201597, 4202129, 4202184]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 524 nodes and 811 edges in CFGEmulated.
It has 524 nodes and 871 edges in CDG.
It has 20893 nodes and 52304 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4196568, 4196746, 4196817, 4196905, 4197774, 4198065, 4198487, 4198747, 4199002, 4199085, 4199538, 4199618, 4199689, 4200441, 4201080, 4201135, 4201542, 4201597, 4202129, 4202184]
{4196355, 4202501, 4199431, 4202503, 4197385, 4198924, 4199951, 4198929, 4199443, 4199956, 4197397, 4206102, 4195863, 4208152, 4203031, 4198940, 4207645, 4198942, 4202528, 4203555, 4196905, 4197418, 4198954, 4198956, 4197933, 4204587, 4197935, 4202031, 4202537, 4202542, 4205618, 4201012, 4205108, 4198968, 4198458, 4207162, 4195900, 4198973, 4206654, 4199489, 4201542, 4197450, 4206666, 4199501, 4204621, 4199503, 4198482, 4204626, 4198997, 4198487, 4208215, 4202583, 4199002, 4199515, 4199517, 4204638, 4197984, 4197986, 4205668, 4195940, 4196454, 4206699, 4199533, 4199538, 4197491, 4205171, 4207735, 4201080, 4203128, 4201597, 4205696, 4198017, 4204674, 4197514, 4204683, 4202640, 4202129, 4204688, 4206224, 4207254, 4195992, 4208281, 4200094, 4200608, 4207266, 4197542, 4204715, 4198060, 4199085, 4205741, 4201135, 4204720, 4198065, 4205243, 4199618, 4207299, 4202184, 4208336, 4197585, 4202706, 4207827, 4206291, 4203218, 4196568, 4200152, 4196061, 4203741, 4207839, 4195552, 4203234, 4206820, 4204778, 4198639, 4205809, 4198132, 4208372, 4204277, 4197630, 4199168, 4207872, 4204023, 4199689, 4198154, 4201737, 4205833, 4200212, 4206357, 4198169, 4197146, 4202780, 4208413, 4205855, 4198696, 4199209, 4196139, 4202796, 4200238, 4200240, 4200755, 4198203, 4201275, 4207420, 4203327, 4205380, 4197700, 4208455, 4205563, 4200269, 4196174, 4200271, 4205392, 4199763, 4202324, 4195667, 4204888, 4199258, 4198747, 4205405, 4198238, 4198243, 4201830, 4200809, 4200298, 4207978, 4206961, 4199794, 4199799, 4208504, 4201338, 4206458, 4199297, 4205444, 4199302, 4205959, 4196746, 4195722, 4203403, 4197774, 4197265, 4200856, 4202906, 4203419, 4201885, 4199840, 4197281, 4201377, 4204964, 4202407, 4197293, 4208560, 4200881, 4201904, 4200886, 4197306, 4200897, 4200899, 4207556, 4205518, 4196817, 4208084, 4198869, 4200917, 4198871, 4199382, 4200409, 4196309, 4205016, 4207061, 4195805, 4202462, 4201439, 4199905, 4199394, 4201444, 4200934, 4203498, 4199917, 4198900, 4200436, 4197879, 4201976, 4200441, 4197371, 4202492}
[267, 120, 159, 156, 147, 189, 206, 399, 166, 16, 105, 11, 389, 36, 152, 164, 218, 76, 110, 140, 59, 80, 25, 39, 245, 81, 261, 244, 388, 181, 171, 242, 65, 92, 212, 412, 369, 224, 196, 103, 26, 372, 89, 5, 193, 73, 356, 106, 400, 386, 51, 251, 52, 93, 56, 239, 107, 311, 237, 198, 175, 118, 170, 359, 228, 223, 226, 201, 318, 87, 129, 247, 172, 200, 230, 119, 67, 173, 108, 130, 42, 28, 235, 176, 38, 357, 49, 410, 8, 134, 255, 139, 21, 50, 398, 327, 348, 115, 341, 402, 43, 61, 47, 58, 41, 387, 373, 250, 282, 55, 411, 203, 0, 403, 303, 165, 57, 4, 202, 220, 197, 96, 154, 205, 440, 238, 14, 232, 160, 174, 54, 243, 182, 438, 114, 146, 86, 215, 88, 234, 401, 195, 90, 179, 53, 45, 256, 460, 10, 180, 27, 64, 328, 236, 217, 17, 227, 75, 157, 418, 148, 178, 214, 177, 46, 222, 1, 142, 32, 158, 40, 13, 210, 6, 374, 240, 168, 229, 231, 19, 7, 370, 124, 221, 340, 167, 207, 208, 184, 209, 211, 22, 163, 258, 33, 125, 44, 252, 100, 313, 199, 194, 188, 82, 98, 233, 9, 358, 72, 135, 18, 144, 257, 371, 23, 262, 190, 437, 29, 102, 219, 113, 383, 385, 355, 248, 191, 137, 151, 216, 68, 241, 291, 384, 145, 2, 112, 12, 35, 99, 342, 116, 15, 169, 204, 186, 225, 34, 375, 69]
The execution time of patched slicing information extraction via angr: 0:03:49.618865
{'flac_decode_frame': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 267, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e2f>, <DisassemblerInsn "mov" for 0x401e37>, <DisassemblerInsn "mov" for 0x401e3e>, <DisassemblerInsn "mov" for 0x401e45>, <DisassemblerInsn "mov" for 0x401e4d>, <DisassemblerInsn "mov" for 0x401e55>, <DisassemblerInsn "mov" for 0x401e5c>, <DisassemblerInsn "mov" for 0x401e63>, <DisassemblerInsn "sar" for 0x401e65>, <DisassemblerInsn "movsxd" for 0x401e68>, <DisassemblerInsn "mov" for 0x401e6b>, <DisassemblerInsn "ror" for 0x401e6e>, <DisassemblerInsn "ror" for 0x401e72>, <DisassemblerInsn "ror" for 0x401e75>, <DisassemblerInsn "and" for 0x401e79>, <DisassemblerInsn "mov" for 0x401e7c>, <DisassemblerInsn "shl" for 0x401e83>, <DisassemblerInsn "mov" for 0x401e85>, <DisassemblerInsn "cmp" for 0x401e8c>, <DisassemblerInsn "jge" for 0x401e8f>]'}, {'block_Idx': 120, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401441>, <DisassemblerInsn "sub" for 0x401448>, <DisassemblerInsn "je" for 0x40144b>]'}, {'block_Idx': 159, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401730>, <DisassemblerInsn "mov" for 0x401737>, <DisassemblerInsn "or" for 0x40173e>, <DisassemblerInsn "sub" for 0x401741>, <DisassemblerInsn "mov" for 0x401744>, <DisassemblerInsn "je" for 0x40174b>]'}, {'block_Idx': 156, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402cf1>, <DisassemblerInsn "lea" for 0x402cf9>, <DisassemblerInsn "movsxd" for 0x402d00>, <DisassemblerInsn "add" for 0x402d04>, <DisassemblerInsn "jmp" for 0x402d07>]'}, {'block_Idx': 147, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40146d>]'}, {'block_Idx': 189, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402e16>, <DisassemblerInsn "mov" for 0x402e1e>, <DisassemblerInsn "mov" for 0x402e26>, <DisassemblerInsn "mov" for 0x402e2e>, <DisassemblerInsn "mov" for 0x402e36>, <DisassemblerInsn "mov" for 0x402e3e>, <DisassemblerInsn "mov" for 0x402e46>, <DisassemblerInsn "mov" for 0x402e4e>, <DisassemblerInsn "mov" for 0x402e56>, <DisassemblerInsn "mov" for 0x402e5e>, <DisassemblerInsn "mov" for 0x402e66>, <DisassemblerInsn "mov" for 0x402e6e>, <DisassemblerInsn "mov" for 0x402e76>, <DisassemblerInsn "mov" for 0x402e78>, <DisassemblerInsn "mov" for 0x402e7d>, <DisassemblerInsn "mov" for 0x402e80>, <DisassemblerInsn "shl" for 0x402e82>, <DisassemblerInsn "mov" for 0x402e84>, <DisassemblerInsn "cmp" for 0x402e8b>, <DisassemblerInsn "je" for 0x402e8e>]'}, {'block_Idx': 206, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4035d4>, <DisassemblerInsn "mov" for 0x4035dc>, <DisassemblerInsn "mov" for 0x4035e1>, <DisassemblerInsn "mov" for 0x4035e5>, <DisassemblerInsn "mov" for 0x4035ed>, <DisassemblerInsn "mov" for 0x4035f1>, <DisassemblerInsn "mov" for 0x4035f3>, <DisassemblerInsn "shl" for 0x4035f5>, <DisassemblerInsn "mov" for 0x4035f7>, <DisassemblerInsn "mov" for 0x4035fc>, <DisassemblerInsn "add" for 0x4035ff>, <DisassemblerInsn "mov" for 0x403603>, <DisassemblerInsn "mov" for 0x403606>, <DisassemblerInsn "mov" for 0x403608>, <DisassemblerInsn "mov" for 0x40360c>, <DisassemblerInsn "mov" for 0x403611>, <DisassemblerInsn "jmp" for 0x403616>]'}, {'block_Idx': 399, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4029a4>, <DisassemblerInsn "mov" for 0x4029ac>, <DisassemblerInsn "mov" for 0x4029b4>, <DisassemblerInsn "mov" for 0x4029bb>, <DisassemblerInsn "mov" for 0x4029c2>, <DisassemblerInsn "add" for 0x4029c9>, <DisassemblerInsn "add" for 0x4029cc>, <DisassemblerInsn "add" for 0x4029ce>, <DisassemblerInsn "mov" for 0x4029d0>, <DisassemblerInsn "jmp" for 0x4029d3>]'}, {'block_Idx': 166, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d1f>, <DisassemblerInsn "mov" for 0x402d27>, <DisassemblerInsn "mov" for 0x402d2f>, <DisassemblerInsn "mov" for 0x402d36>, <DisassemblerInsn "mov" for 0x402d3e>, <DisassemblerInsn "xor" for 0x402d40>, <DisassemblerInsn "cmp" for 0x402d42>, <DisassemblerInsn "mov" for 0x402d45>, <DisassemblerInsn "mov" for 0x402d48>, <DisassemblerInsn "mov" for 0x402d50>, <DisassemblerInsn "mov" for 0x402d53>, <DisassemblerInsn "mov" for 0x402d5b>, <DisassemblerInsn "mov" for 0x402d62>, <DisassemblerInsn "mov" for 0x402d6a>, <DisassemblerInsn "mov" for 0x402d72>, <DisassemblerInsn "mov" for 0x402d7a>, <DisassemblerInsn "jle" for 0x402d81>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403747>, <DisassemblerInsn "mov" for 0x40374b>, <DisassemblerInsn "mov" for 0x403753>, <DisassemblerInsn "add" for 0x403756>, <DisassemblerInsn "mov" for 0x40375d>, <DisassemblerInsn "mov" for 0x403762>, <DisassemblerInsn "mov" for 0x403768>, <DisassemblerInsn "cmp" for 0x40376c>, <DisassemblerInsn "mov" for 0x40376f>, <DisassemblerInsn "je" for 0x403776>]'}, {'block_Idx': 105, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401386>, <DisassemblerInsn "mov" for 0x40138d>, <DisassemblerInsn "mov" for 0x401394>, <DisassemblerInsn "mov" for 0x40139b>, <DisassemblerInsn "mov" for 0x4013a3>, <DisassemblerInsn "add" for 0x4013ab>, <DisassemblerInsn "mov" for 0x4013af>, <DisassemblerInsn "mov" for 0x4013b7>, <DisassemblerInsn "mov" for 0x4013bc>, <DisassemblerInsn "test" for 0x4013c1>, <DisassemblerInsn "cmovne" for 0x4013c5>, <DisassemblerInsn "imul" for 0x4013c8>, <DisassemblerInsn "imul" for 0x4013cb>, <DisassemblerInsn "cmp" for 0x4013ce>, <DisassemblerInsn "jg" for 0x4013d0>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4006dd>, <DisassemblerInsn "mov" for 0x4006e4>, <DisassemblerInsn "mov" for 0x4006eb>, <DisassemblerInsn "mov" for 0x4006f2>, <DisassemblerInsn "mov" for 0x4006fa>, <DisassemblerInsn "add" for 0x4006fd>, <DisassemblerInsn "mov" for 0x400704>, <DisassemblerInsn "mov" for 0x40070c>, <DisassemblerInsn "cmp" for 0x400712>, <DisassemblerInsn "mov" for 0x400714>, <DisassemblerInsn "mov" for 0x40071b>, <DisassemblerInsn "mov" for 0x400722>, <DisassemblerInsn "jae" for 0x400729>]'}, {'block_Idx': 389, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40212c>, <DisassemblerInsn "mov" for 0x402133>, <DisassemblerInsn "mov" for 0x40213a>, <DisassemblerInsn "mov" for 0x402141>, <DisassemblerInsn "mov" for 0x402148>, <DisassemblerInsn "mov" for 0x402150>, <DisassemblerInsn "mov" for 0x402153>, <DisassemblerInsn "and" for 0x40215b>, <DisassemblerInsn "mov" for 0x40215f>, <DisassemblerInsn "mov" for 0x402167>, <DisassemblerInsn "cmp" for 0x40216c>, <DisassemblerInsn "mov" for 0x402170>, <DisassemblerInsn "mov" for 0x402178>, <DisassemblerInsn "mov" for 0x40217f>, <DisassemblerInsn "mov" for 0x402186>, <DisassemblerInsn "mov" for 0x40218d>, <DisassemblerInsn "je" for 0x402194>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e2f>, <DisassemblerInsn "mov" for 0x400e37>, <DisassemblerInsn "add" for 0x400e3e>, <DisassemblerInsn "sub" for 0x400e41>, <DisassemblerInsn "setb" for 0x400e44>, <DisassemblerInsn "mov" for 0x400e47>, <DisassemblerInsn "mov" for 0x400e4a>, <DisassemblerInsn "sub" for 0x400e4c>, <DisassemblerInsn "sete" for 0x400e4f>, <DisassemblerInsn "and" for 0x400e52>, <DisassemblerInsn "test" for 0x400e54>, <DisassemblerInsn "mov" for 0x400e57>, <DisassemblerInsn "jne" for 0x400e5e>]'}, {'block_Idx': 152, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40169e>, <DisassemblerInsn "mov" for 0x4016a5>, <DisassemblerInsn "mov" for 0x4016ac>, <DisassemblerInsn "add" for 0x4016b4>, <DisassemblerInsn "mov" for 0x4016b8>, <DisassemblerInsn "xor" for 0x4016c0>, <DisassemblerInsn "mov" for 0x4016c2>, <DisassemblerInsn "mov" for 0x4016c9>, <DisassemblerInsn "mov" for 0x4016d0>, <DisassemblerInsn "mov" for 0x4016d8>, <DisassemblerInsn "mov" for 0x4016e0>, <DisassemblerInsn "mov" for 0x4016e7>, <DisassemblerInsn "mov" for 0x4016ee>, <DisassemblerInsn "mov" for 0x4016f6>, <DisassemblerInsn "mov" for 0x4016fe>, <DisassemblerInsn "mov" for 0x401705>, <DisassemblerInsn "mov" for 0x40170c>, <DisassemblerInsn "cmp" for 0x40170e>, <DisassemblerInsn "jne" for 0x401712>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4034d3>, <DisassemblerInsn "cmp" for 0x4034da>, <DisassemblerInsn "jne" for 0x4034dd>]'}, {'block_Idx': 218, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40323a>, <DisassemblerInsn "mov" for 0x403242>, <DisassemblerInsn "mov" for 0x403249>, <DisassemblerInsn "mov" for 0x403251>, <DisassemblerInsn "add" for 0x403259>, <DisassemblerInsn "movsxd" for 0x40325d>, <DisassemblerInsn "cmp" for 0x403260>, <DisassemblerInsn "mov" for 0x403263>, <DisassemblerInsn "mov" for 0x403265>, <DisassemblerInsn "mov" for 0x40326c>, <DisassemblerInsn "mov" for 0x403274>, <DisassemblerInsn "mov" for 0x40327c>, <DisassemblerInsn "mov" for 0x403284>, <DisassemblerInsn "jl" for 0x40328b>]'}, {'block_Idx': 76, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c64>, <DisassemblerInsn "mov" for 0x402c6c>, <DisassemblerInsn "xor" for 0x402c70>, <DisassemblerInsn "lea" for 0x402c72>, <DisassemblerInsn "mov" for 0x402c79>, <DisassemblerInsn "call" for 0x402c7b>]'}, {'block_Idx': 110, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013d6>, <DisassemblerInsn "cmp" for 0x4013dd>, <DisassemblerInsn "jne" for 0x4013e0>]'}, {'block_Idx': 140, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40145d>, <DisassemblerInsn "sub" for 0x401464>, <DisassemblerInsn "je" for 0x401467>]'}, {'block_Idx': 59, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f19>, <DisassemblerInsn "movsxd" for 0x400f20>, <DisassemblerInsn "lea" for 0x400f23>, <DisassemblerInsn "shl" for 0x400f2a>, <DisassemblerInsn "add" for 0x400f2e>, <DisassemblerInsn "mov" for 0x400f31>, <DisassemblerInsn "jmp" for 0x400f39>]'}, {'block_Idx': 80, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011d7>, <DisassemblerInsn "mov" for 0x4011df>, <DisassemblerInsn "mov" for 0x4011e7>, <DisassemblerInsn "cmp" for 0x4011ee>, <DisassemblerInsn "jge" for 0x4011f2>]'}, {'block_Idx': 25, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b91>, <DisassemblerInsn "cmp" for 0x400b98>, <DisassemblerInsn "je" for 0x400b9b>]'}, {'block_Idx': 39, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400803>, <DisassemblerInsn "mov" for 0x40080b>, <DisassemblerInsn "mov" for 0x400813>, <DisassemblerInsn "mov" for 0x400819>, <DisassemblerInsn "xor" for 0x40081b>, <DisassemblerInsn "mov" for 0x40081d>, <DisassemblerInsn "mov" for 0x400824>, <DisassemblerInsn "mov" for 0x40082b>, <DisassemblerInsn "mov" for 0x400832>, <DisassemblerInsn "mov" for 0x40083a>, <DisassemblerInsn "mov" for 0x400842>, <DisassemblerInsn "mov" for 0x400849>, <DisassemblerInsn "mov" for 0x400850>, <DisassemblerInsn "add" for 0x400857>, <DisassemblerInsn "mov" for 0x400859>, <DisassemblerInsn "add" for 0x40085b>, <DisassemblerInsn "movsxd" for 0x40085e>, <DisassemblerInsn "call" for 0x400861>]'}, {'block_Idx': 245, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401be4>, <DisassemblerInsn "mov" for 0x401bec>, <DisassemblerInsn "mov" for 0x401bf3>, <DisassemblerInsn "mov" for 0x401bfa>, <DisassemblerInsn "mov" for 0x401c02>, <DisassemblerInsn "mov" for 0x401c0a>, <DisassemblerInsn "mov" for 0x401c11>, <DisassemblerInsn "mov" for 0x401c18>, <DisassemblerInsn "sar" for 0x401c1a>, <DisassemblerInsn "movsxd" for 0x401c1d>, <DisassemblerInsn "mov" for 0x401c20>, <DisassemblerInsn "ror" for 0x401c23>, <DisassemblerInsn "ror" for 0x401c27>, <DisassemblerInsn "ror" for 0x401c2a>, <DisassemblerInsn "and" for 0x401c2e>, <DisassemblerInsn "mov" for 0x401c31>, <DisassemblerInsn "shl" for 0x401c38>, <DisassemblerInsn "mov" for 0x401c3a>, <DisassemblerInsn "cmp" for 0x401c41>, <DisassemblerInsn "jge" for 0x401c44>]'}, {'block_Idx': 81, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40115b>, <DisassemblerInsn "mov" for 0x401163>, <DisassemblerInsn "mov" for 0x40116b>, <DisassemblerInsn "mov" for 0x401173>, <DisassemblerInsn "mov" for 0x40117b>, <DisassemblerInsn "add" for 0x401182>, <DisassemblerInsn "mov" for 0x401185>, <DisassemblerInsn "shr" for 0x401188>, <DisassemblerInsn "mov" for 0x40118c>, <DisassemblerInsn "ror" for 0x401190>, <DisassemblerInsn "ror" for 0x401194>, <DisassemblerInsn "ror" for 0x401197>, <DisassemblerInsn "shr" for 0x40119b>, <DisassemblerInsn "add" for 0x40119e>, <DisassemblerInsn "mov" for 0x4011a2>, <DisassemblerInsn "mov" for 0x4011a5>, <DisassemblerInsn "add" for 0x4011a8>, <DisassemblerInsn "shl" for 0x4011ab>, <DisassemblerInsn "movsxd" for 0x4011af>, <DisassemblerInsn "add" for 0x4011b2>, <DisassemblerInsn "cmp" for 0x4011b5>, <DisassemblerInsn "mov" for 0x4011b8>, <DisassemblerInsn "mov" for 0x4011c0>, <DisassemblerInsn "mov" for 0x4011c8>, <DisassemblerInsn "jb" for 0x4011cf>]'}, {'block_Idx': 261, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d09>, <DisassemblerInsn "mov" for 0x401d11>, <DisassemblerInsn "mov" for 0x401d19>, <DisassemblerInsn "mov" for 0x401d20>, <DisassemblerInsn "mov" for 0x401d27>, <DisassemblerInsn "sub" for 0x401d2c>, <DisassemblerInsn "mov" for 0x401d2e>, <DisassemblerInsn "shl" for 0x401d35>, <DisassemblerInsn "mov" for 0x401d37>, <DisassemblerInsn "sar" for 0x401d3e>, <DisassemblerInsn "mov" for 0x401d40>, <DisassemblerInsn "mov" for 0x401d48>, <DisassemblerInsn "mov" for 0x401d4b>, <DisassemblerInsn "add" for 0x401d4e>, <DisassemblerInsn "mov" for 0x401d52>, <DisassemblerInsn "movsxd" for 0x401d5a>, <DisassemblerInsn "cmp" for 0x401d5d>, <DisassemblerInsn "jge" for 0x401d60>]'}, {'block_Idx': 244, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b84>, <DisassemblerInsn "mov" for 0x402b8c>, <DisassemblerInsn "mov" for 0x402b94>, <DisassemblerInsn "mov" for 0x402b9b>, <DisassemblerInsn "shl" for 0x402b9e>, <DisassemblerInsn "mov" for 0x402ba0>, <DisassemblerInsn "mov" for 0x402ba8>, <DisassemblerInsn "mov" for 0x402baf>, <DisassemblerInsn "add" for 0x402bb2>, <DisassemblerInsn "mov" for 0x402bb6>, <DisassemblerInsn "movsxd" for 0x402bbe>, <DisassemblerInsn "cmp" for 0x402bc1>, <DisassemblerInsn "mov" for 0x402bc4>, <DisassemblerInsn "jl" for 0x402bcc>]'}, {'block_Idx': 388, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402278>, <DisassemblerInsn "mov" for 0x40227f>, <DisassemblerInsn "mov" for 0x402286>, <DisassemblerInsn "mov" for 0x40228d>, <DisassemblerInsn "and" for 0x402295>, <DisassemblerInsn "mov" for 0x402299>, <DisassemblerInsn "mov" for 0x4022a1>, <DisassemblerInsn "xor" for 0x4022a6>, <DisassemblerInsn "mov" for 0x4022a8>, <DisassemblerInsn "mov" for 0x4022b0>, <DisassemblerInsn "mov" for 0x4022b7>, <DisassemblerInsn "mov" for 0x4022be>, <DisassemblerInsn "mov" for 0x4022c5>, <DisassemblerInsn "jmp" for 0x4022cd>]'}, {'block_Idx': 181, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017d9>, <DisassemblerInsn "mov" for 0x4017e1>, <DisassemblerInsn "xor" for 0x4017e4>, <DisassemblerInsn "lea" for 0x4017e6>, <DisassemblerInsn "mov" for 0x4017ed>, <DisassemblerInsn "call" for 0x4017ef>]'}, {'block_Idx': 171, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401572>]'}, {'block_Idx': 242, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40285e>, <DisassemblerInsn "mov" for 0x402866>, <DisassemblerInsn "mov" for 0x40286e>, <DisassemblerInsn "and" for 0x402875>, <DisassemblerInsn "add" for 0x402878>, <DisassemblerInsn "mov" for 0x40287b>, <DisassemblerInsn "call" for 0x40287d>]'}, {'block_Idx': 65, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40103a>, <DisassemblerInsn "xor" for 0x401042>, <DisassemblerInsn "lea" for 0x401044>, <DisassemblerInsn "mov" for 0x40104b>, <DisassemblerInsn "call" for 0x40104d>]'}, {'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40123d>, <DisassemblerInsn "xor" for 0x401245>, <DisassemblerInsn "lea" for 0x401247>, <DisassemblerInsn "mov" for 0x40124e>, <DisassemblerInsn "call" for 0x401250>]'}, {'block_Idx': 212, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4019c1>]'}, {'block_Idx': 412, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4026f5>, <DisassemblerInsn "mov" for 0x4026fd>, <DisassemblerInsn "mov" for 0x402704>, <DisassemblerInsn "mov" for 0x40270c>, <DisassemblerInsn "mov" for 0x402713>, <DisassemblerInsn "mov" for 0x40271a>, <DisassemblerInsn "mov" for 0x402722>, <DisassemblerInsn "mov" for 0x40272a>, <DisassemblerInsn "add" for 0x402732>, <DisassemblerInsn "mov" for 0x402736>, <DisassemblerInsn "mov" for 0x40273d>, <DisassemblerInsn "add" for 0x40273f>, <DisassemblerInsn "mov" for 0x402741>, <DisassemblerInsn "mov" for 0x402748>, <DisassemblerInsn "add" for 0x40274a>, <DisassemblerInsn "mov" for 0x40274d>, <DisassemblerInsn "mov" for 0x402754>, <DisassemblerInsn "add" for 0x402756>, <DisassemblerInsn "mov" for 0x402758>, <DisassemblerInsn "mov" for 0x40275f>, <DisassemblerInsn "mov" for 0x402763>, <DisassemblerInsn "or" for 0x402766>, <DisassemblerInsn "mov" for 0x40276a>, <DisassemblerInsn "add" for 0x402772>, <DisassemblerInsn "mov" for 0x402776>, <DisassemblerInsn "mov" for 0x40277d>, <DisassemblerInsn "add" for 0x40277f>, <DisassemblerInsn "mov" for 0x402781>, <DisassemblerInsn "mov" for 0x402788>, <DisassemblerInsn "add" for 0x40278a>, <DisassemblerInsn "mov" for 0x40278c>, <DisassemblerInsn "mov" for 0x402793>, <DisassemblerInsn "add" for 0x402795>, <DisassemblerInsn "mov" for 0x402797>, <DisassemblerInsn "mov" for 0x40279e>, <DisassemblerInsn "add" for 0x4027a2>, <DisassemblerInsn "mov" for 0x4027a6>, <DisassemblerInsn "add" for 0x4027ae>, <DisassemblerInsn "mov" for 0x4027b2>, <DisassemblerInsn "cmp" for 0x4027ba>, <DisassemblerInsn "mov" for 0x4027bd>, <DisassemblerInsn "mov" for 0x4027c0>, <DisassemblerInsn "mov" for 0x4027c8>, <DisassemblerInsn "mov" for 0x4027cb>, <DisassemblerInsn "mov" for 0x4027d3>, <DisassemblerInsn "mov" for 0x4027d6>, <DisassemblerInsn "mov" for 0x4027de>, <DisassemblerInsn "mov" for 0x4027e1>, <DisassemblerInsn "mov" for 0x4027e9>, <DisassemblerInsn "mov" for 0x4027ec>, <DisassemblerInsn "mov" for 0x4027f4>, <DisassemblerInsn "mov" for 0x4027fc>, <DisassemblerInsn "mov" for 0x402804>, <DisassemblerInsn "mov" for 0x40280b>, <DisassemblerInsn "mov" for 0x402812>, <DisassemblerInsn "mov" for 0x402819>, <DisassemblerInsn "je" for 0x402820>]'}, {'block_Idx': 369, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4028ea>, <DisassemblerInsn "mov" for 0x4028f2>, <DisassemblerInsn "mov" for 0x4028f9>, <DisassemblerInsn "mov" for 0x402901>, <DisassemblerInsn "mov" for 0x402909>, <DisassemblerInsn "add" for 0x402911>, <DisassemblerInsn "mov" for 0x402914>, <DisassemblerInsn "mov" for 0x40291b>, <DisassemblerInsn "add" for 0x40291e>, <DisassemblerInsn "mov" for 0x402922>, <DisassemblerInsn "add" for 0x40292a>, <DisassemblerInsn "mov" for 0x40292e>, <DisassemblerInsn "cmp" for 0x402936>, <DisassemblerInsn "mov" for 0x402939>, <DisassemblerInsn "mov" for 0x402941>, <DisassemblerInsn "mov" for 0x402948>, <DisassemblerInsn "je" for 0x402950>]'}, {'block_Idx': 224, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b44>, <DisassemblerInsn "cmp" for 0x402b4b>, <DisassemblerInsn "je" for 0x402b4e>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x403039>]'}, {'block_Idx': 103, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40122c>, <DisassemblerInsn "sub" for 0x401233>, <DisassemblerInsn "je" for 0x401236>]'}, {'block_Idx': 26, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b1a>, <DisassemblerInsn "mov" for 0x400b22>, <DisassemblerInsn "mov" for 0x400b2a>, <DisassemblerInsn "mov" for 0x400b32>, <DisassemblerInsn "mov" for 0x400b3a>, <DisassemblerInsn "mov" for 0x400b42>, <DisassemblerInsn "mov" for 0x400b4a>, <DisassemblerInsn "add" for 0x400b4d>, <DisassemblerInsn "sar" for 0x400b50>, <DisassemblerInsn "xor" for 0x400b53>, <DisassemblerInsn "cmp" for 0x400b56>, <DisassemblerInsn "cmovl" for 0x400b5a>, <DisassemblerInsn "xor" for 0x400b5e>, <DisassemblerInsn "cmp" for 0x400b61>, <DisassemblerInsn "mov" for 0x400b65>, <DisassemblerInsn "cmovl" for 0x400b68>, <DisassemblerInsn "xor" for 0x400b6c>, <DisassemblerInsn "cmp" for 0x400b6f>, <DisassemblerInsn "cmovl" for 0x400b73>, <DisassemblerInsn "mov" for 0x400b77>, <DisassemblerInsn "mov" for 0x400b7a>, <DisassemblerInsn "movsxd" for 0x400b7d>, <DisassemblerInsn "add" for 0x400b80>, <DisassemblerInsn "mov" for 0x400b83>, <DisassemblerInsn "mov" for 0x400b86>, <DisassemblerInsn "jmp" for 0x400b8c>]'}, {'block_Idx': 372, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40233f>, <DisassemblerInsn "mov" for 0x402346>, <DisassemblerInsn "mov" for 0x40234d>, <DisassemblerInsn "and" for 0x402355>, <DisassemblerInsn "mov" for 0x402359>, <DisassemblerInsn "mov" for 0x402361>, <DisassemblerInsn "xor" for 0x402366>, <DisassemblerInsn "mov" for 0x402368>, <DisassemblerInsn "mov" for 0x402370>, <DisassemblerInsn "mov" for 0x402377>, <DisassemblerInsn "mov" for 0x40237e>, <DisassemblerInsn "jmp" for 0x402386>]'}, {'block_Idx': 89, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4011d5>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400617>, <DisassemblerInsn "mov" for 0x40061e>, <DisassemblerInsn "mov" for 0x400626>, <DisassemblerInsn "cmp" for 0x40062d>, <DisassemblerInsn "mov" for 0x400633>, <DisassemblerInsn "je" for 0x40063a>]'}, {'block_Idx': 193, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40333c>, <DisassemblerInsn "mov" for 0x403344>, <DisassemblerInsn "mov" for 0x40334c>, <DisassemblerInsn "mov" for 0x403354>, <DisassemblerInsn "mov" for 0x40335c>, <DisassemblerInsn "mov" for 0x403364>, <DisassemblerInsn "mov" for 0x40336c>, <DisassemblerInsn "mov" for 0x403374>, <DisassemblerInsn "mov" for 0x40337c>, <DisassemblerInsn "mov" for 0x403384>, <DisassemblerInsn "mov" for 0x40338c>, <DisassemblerInsn "mov" for 0x403394>, <DisassemblerInsn "mov" for 0x40339c>, <DisassemblerInsn "mov" for 0x40339f>, <DisassemblerInsn "mov" for 0x4033a2>, <DisassemblerInsn "mov" for 0x4033a9>, <DisassemblerInsn "add" for 0x4033ab>, <DisassemblerInsn "mov" for 0x4033ad>, <DisassemblerInsn "mov" for 0x4033af>, <DisassemblerInsn "shl" for 0x4033b6>, <DisassemblerInsn "mov" for 0x4033b8>, <DisassemblerInsn "cmp" for 0x4033bf>, <DisassemblerInsn "je" for 0x4033c2>]'}, {'block_Idx': 73, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010ef>, <DisassemblerInsn "mov" for 0x4010f6>, <DisassemblerInsn "mov" for 0x4010fd>, <DisassemblerInsn "mov" for 0x401102>, <DisassemblerInsn "shr" for 0x401104>, <DisassemblerInsn "mov" for 0x401106>, <DisassemblerInsn "and" for 0x401108>, <DisassemblerInsn "mov" for 0x40110a>, <DisassemblerInsn "mov" for 0x40110c>, <DisassemblerInsn "mov" for 0x401111>, <DisassemblerInsn "mov" for 0x401119>, <DisassemblerInsn "mov" for 0x401121>, <DisassemblerInsn "mov" for 0x401128>, <DisassemblerInsn "mov" for 0x401130>, <DisassemblerInsn "mov" for 0x401138>, <DisassemblerInsn "mov" for 0x40113f>, <DisassemblerInsn "mov" for 0x401146>, <DisassemblerInsn "mov" for 0x40114e>, <DisassemblerInsn "cmp" for 0x401156>, <DisassemblerInsn "jle" for 0x401159>]'}, {'block_Idx': 356, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023ea>, <DisassemblerInsn "mov" for 0x4023f1>, <DisassemblerInsn "and" for 0x4023f9>, <DisassemblerInsn "mov" for 0x4023fd>, <DisassemblerInsn "mov" for 0x402405>, <DisassemblerInsn "xor" for 0x40240a>, <DisassemblerInsn "mov" for 0x40240c>, <DisassemblerInsn "mov" for 0x402414>, <DisassemblerInsn "mov" for 0x40241b>, <DisassemblerInsn "mov" for 0x402423>, <DisassemblerInsn "mov" for 0x40242b>, <DisassemblerInsn "mov" for 0x402432>, <DisassemblerInsn "mov" for 0x40243a>, <DisassemblerInsn "mov" for 0x402442>, <DisassemblerInsn "mov" for 0x40244a>, <DisassemblerInsn "add" for 0x402452>, <DisassemblerInsn "mov" for 0x402455>, <DisassemblerInsn "mov" for 0x40245c>, <DisassemblerInsn "add" for 0x40245f>, <DisassemblerInsn "mov" for 0x402463>, <DisassemblerInsn "mov" for 0x40246a>, <DisassemblerInsn "add" for 0x40246e>, <DisassemblerInsn "mov" for 0x402472>, <DisassemblerInsn "mov" for 0x402479>, <DisassemblerInsn "add" for 0x40247d>, <DisassemblerInsn "mov" for 0x402481>, <DisassemblerInsn "mov" for 0x402488>, <DisassemblerInsn "add" for 0x40248c>, <DisassemblerInsn "mov" for 0x402490>, <DisassemblerInsn "add" for 0x402498>, <DisassemblerInsn "mov" for 0x40249c>, <DisassemblerInsn "cmp" for 0x4024a4>, <DisassemblerInsn "mov" for 0x4024a7>, <DisassemblerInsn "mov" for 0x4024aa>, <DisassemblerInsn "mov" for 0x4024b2>, <DisassemblerInsn "mov" for 0x4024b4>, <DisassemblerInsn "mov" for 0x4024bb>, <DisassemblerInsn "mov" for 0x4024c3>, <DisassemblerInsn "mov" for 0x4024cb>, <DisassemblerInsn "je" for 0x4024d2>]'}, {'block_Idx': 106, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40135a>, <DisassemblerInsn "mov" for 0x401362>, <DisassemblerInsn "mov" for 0x401369>, <DisassemblerInsn "xor" for 0x401371>, <DisassemblerInsn "lea" for 0x401373>, <DisassemblerInsn "mov" for 0x40137a>, <DisassemblerInsn "call" for 0x40137c>]'}, {'block_Idx': 400, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4025f7>, <DisassemblerInsn "mov" for 0x4025ff>, <DisassemblerInsn "mov" for 0x402606>, <DisassemblerInsn "mov" for 0x40260e>, <DisassemblerInsn "mov" for 0x402615>, <DisassemblerInsn "mov" for 0x40261d>, <DisassemblerInsn "mov" for 0x402625>, <DisassemblerInsn "add" for 0x40262d>, <DisassemblerInsn "mov" for 0x402631>, <DisassemblerInsn "mov" for 0x402638>, <DisassemblerInsn "add" for 0x40263a>, <DisassemblerInsn "mov" for 0x40263d>, <DisassemblerInsn "mov" for 0x402644>, <DisassemblerInsn "add" for 0x402647>, <DisassemblerInsn "mov" for 0x40264a>, <DisassemblerInsn "mov" for 0x402652>, <DisassemblerInsn "add" for 0x402656>, <DisassemblerInsn "mov" for 0x40265b>, <DisassemblerInsn "mov" for 0x402662>, <DisassemblerInsn "add" for 0x402664>, <DisassemblerInsn "mov" for 0x402666>, <DisassemblerInsn "mov" for 0x40266d>, <DisassemblerInsn "add" for 0x40266f>, <DisassemblerInsn "mov" for 0x402672>, <DisassemblerInsn "mov" for 0x402679>, <DisassemblerInsn "add" for 0x40267e>, <DisassemblerInsn "mov" for 0x402682>, <DisassemblerInsn "add" for 0x40268a>, <DisassemblerInsn "mov" for 0x40268e>, <DisassemblerInsn "cmp" for 0x402696>, <DisassemblerInsn "mov" for 0x402699>, <DisassemblerInsn "mov" for 0x40269c>, <DisassemblerInsn "mov" for 0x4026a4>, <DisassemblerInsn "mov" for 0x4026a7>, <DisassemblerInsn "mov" for 0x4026af>, <DisassemblerInsn "mov" for 0x4026b2>, <DisassemblerInsn "mov" for 0x4026ba>, <DisassemblerInsn "mov" for 0x4026bd>, <DisassemblerInsn "mov" for 0x4026c5>, <DisassemblerInsn "mov" for 0x4026cd>, <DisassemblerInsn "mov" for 0x4026d5>, <DisassemblerInsn "mov" for 0x4026dc>, <DisassemblerInsn "mov" for 0x4026e3>, <DisassemblerInsn "je" for 0x4026ea>]'}, {'block_Idx': 386, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024dd>, <DisassemblerInsn "mov" for 0x4024e5>, <DisassemblerInsn "mov" for 0x4024ec>, <DisassemblerInsn "mov" for 0x4024f3>, <DisassemblerInsn "mov" for 0x4024fb>, <DisassemblerInsn "mov" for 0x402503>, <DisassemblerInsn "mov" for 0x40250b>, <DisassemblerInsn "add" for 0x402513>, <DisassemblerInsn "mov" for 0x402517>, <DisassemblerInsn "mov" for 0x40251e>, <DisassemblerInsn "add" for 0x402521>, <DisassemblerInsn "mov" for 0x402524>, <DisassemblerInsn "mov" for 0x40252c>, <DisassemblerInsn "mov" for 0x402530>, <DisassemblerInsn "or" for 0x402533>, <DisassemblerInsn "mov" for 0x402537>, <DisassemblerInsn "add" for 0x40253f>, <DisassemblerInsn "mov" for 0x402543>, <DisassemblerInsn "mov" for 0x40254a>, <DisassemblerInsn "add" for 0x40254c>, <DisassemblerInsn "mov" for 0x40254f>, <DisassemblerInsn "mov" for 0x402556>, <DisassemblerInsn "add" for 0x40255a>, <DisassemblerInsn "mov" for 0x40255f>, <DisassemblerInsn "mov" for 0x402566>, <DisassemblerInsn "add" for 0x402569>, <DisassemblerInsn "mov" for 0x40256c>, <DisassemblerInsn "mov" for 0x402574>, <DisassemblerInsn "add" for 0x402579>, <DisassemblerInsn "mov" for 0x40257e>, <DisassemblerInsn "mov" for 0x402585>, <DisassemblerInsn "add" for 0x402587>, <DisassemblerInsn "mov" for 0x40258a>, <DisassemblerInsn "mov" for 0x402591>, <DisassemblerInsn "add" for 0x402596>, <DisassemblerInsn "mov" for 0x40259a>, <DisassemblerInsn "add" for 0x4025a2>, <DisassemblerInsn "mov" for 0x4025a6>, <DisassemblerInsn "cmp" for 0x4025ae>, <DisassemblerInsn "mov" for 0x4025b1>, <DisassemblerInsn "mov" for 0x4025b4>, <DisassemblerInsn "mov" for 0x4025bc>, <DisassemblerInsn "mov" for 0x4025be>, <DisassemblerInsn "mov" for 0x4025c5>, <DisassemblerInsn "mov" for 0x4025c7>, <DisassemblerInsn "mov" for 0x4025ce>, <DisassemblerInsn "mov" for 0x4025d6>, <DisassemblerInsn "mov" for 0x4025de>, <DisassemblerInsn "mov" for 0x4025e5>, <DisassemblerInsn "je" for 0x4025ec>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c15>, <DisassemblerInsn "mov" for 0x400c1d>, <DisassemblerInsn "mov" for 0x400c24>, <DisassemblerInsn "add" for 0x400c26>, <DisassemblerInsn "mov" for 0x400c28>, <DisassemblerInsn "mov" for 0x400c2a>, <DisassemblerInsn "mov" for 0x400c31>, <DisassemblerInsn "shr" for 0x400c36>, <DisassemblerInsn "mov" for 0x400c38>, <DisassemblerInsn "and" for 0x400c3f>, <DisassemblerInsn "cmp" for 0x400c41>, <DisassemblerInsn "jne" for 0x400c44>]'}, {'block_Idx': 251, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c46>, <DisassemblerInsn "mov" for 0x401c4d>, <DisassemblerInsn "mov" for 0x401c54>, <DisassemblerInsn "mov" for 0x401c5b>, <DisassemblerInsn "xor" for 0x401c5e>, <DisassemblerInsn "sub" for 0x401c60>, <DisassemblerInsn "shr" for 0x401c63>, <DisassemblerInsn "mov" for 0x401c65>, <DisassemblerInsn "add" for 0x401c6d>, <DisassemblerInsn "mov" for 0x401c6f>, <DisassemblerInsn "mov" for 0x401c71>, <DisassemblerInsn "jmp" for 0x401c78>]'}, {'block_Idx': 52, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ef4>, <DisassemblerInsn "add" for 0x400efc>, <DisassemblerInsn "mov" for 0x400f00>, <DisassemblerInsn "jmp" for 0x400f08>]'}, {'block_Idx': 93, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40121c>]'}, {'block_Idx': 56, 'blockInsts': '[<DisassemblerInsn "sub" for 0x400110>, <DisassemblerInsn "mov" for 0x400114>, <DisassemblerInsn "mov" for 0x400119>, <DisassemblerInsn "mov" for 0x40011e>, <DisassemblerInsn "mov" for 0x400123>, <DisassemblerInsn "ror" for 0x400126>, <DisassemblerInsn "ror" for 0x40012a>, <DisassemblerInsn "ror" for 0x40012d>, <DisassemblerInsn "shr" for 0x400131>, <DisassemblerInsn "mov" for 0x400134>, <DisassemblerInsn "mov" for 0x400138>, <DisassemblerInsn "cmp" for 0x40013a>, <DisassemblerInsn "jge" for 0x40013d>]'}, {'block_Idx': 239, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402007>, <DisassemblerInsn "mov" for 0x40200f>, <DisassemblerInsn "mov" for 0x402017>, <DisassemblerInsn "xor" for 0x402019>, <DisassemblerInsn "call" for 0x40201b>]'}, {'block_Idx': 107, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012ad>, <DisassemblerInsn "mov" for 0x4012b5>, <DisassemblerInsn "mov" for 0x4012bc>, <DisassemblerInsn "mov" for 0x4012c4>, <DisassemblerInsn "shr" for 0x4012cc>, <DisassemblerInsn "and" for 0x4012d0>, <DisassemblerInsn "mov" for 0x4012d7>, <DisassemblerInsn "ror" for 0x4012da>, <DisassemblerInsn "ror" for 0x4012de>, <DisassemblerInsn "ror" for 0x4012e1>, <DisassemblerInsn "shr" for 0x4012e5>, <DisassemblerInsn "add" for 0x4012e8>, <DisassemblerInsn "mov" for 0x4012eb>, <DisassemblerInsn "add" for 0x4012ed>, <DisassemblerInsn "mov" for 0x4012f0>, <DisassemblerInsn "mov" for 0x4012f7>, <DisassemblerInsn "jmp" for 0x4012fe>]'}, {'block_Idx': 311, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402005>]'}, {'block_Idx': 237, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b5d>, <DisassemblerInsn "mov" for 0x402b65>, <DisassemblerInsn "mov" for 0x402b6d>, <DisassemblerInsn "mov" for 0x402b72>, <DisassemblerInsn "xor" for 0x402b7a>, <DisassemblerInsn "mov" for 0x402b7c>, <DisassemblerInsn "mov" for 0x402b84>, <DisassemblerInsn "mov" for 0x402b8c>, <DisassemblerInsn "mov" for 0x402b94>, <DisassemblerInsn "mov" for 0x402b9b>, <DisassemblerInsn "shl" for 0x402b9e>, <DisassemblerInsn "mov" for 0x402ba0>, <DisassemblerInsn "mov" for 0x402ba8>, <DisassemblerInsn "mov" for 0x402baf>, <DisassemblerInsn "add" for 0x402bb2>, <DisassemblerInsn "mov" for 0x402bb6>, <DisassemblerInsn "movsxd" for 0x402bbe>, <DisassemblerInsn "cmp" for 0x402bc1>, <DisassemblerInsn "mov" for 0x402bc4>, <DisassemblerInsn "jl" for 0x402bcc>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402e90>, <DisassemblerInsn "mov" for 0x402e98>, <DisassemblerInsn "mov" for 0x402ea0>, <DisassemblerInsn "mov" for 0x402ea8>, <DisassemblerInsn "mov" for 0x402eaf>, <DisassemblerInsn "add" for 0x402eb2>, <DisassemblerInsn "mov" for 0x402eb6>, <DisassemblerInsn "mov" for 0x402eb8>, <DisassemblerInsn "mov" for 0x402eba>, <DisassemblerInsn "mov" for 0x402ec1>, <DisassemblerInsn "mov" for 0x402ec9>, <DisassemblerInsn "jmp" for 0x402ed1>]'}, {'block_Idx': 175, 'blockInsts': '[<DisassemblerInsn "lea" for 0x40354b>, <DisassemblerInsn "lea" for 0x403552>, <DisassemblerInsn "mov" for 0x403559>, <DisassemblerInsn "lea" for 0x40355e>, <DisassemblerInsn "call" for 0x403565>]'}, {'block_Idx': 118, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401577>, <DisassemblerInsn "mov" for 0x40157f>, <DisassemblerInsn "mov" for 0x401586>, <DisassemblerInsn "mov" for 0x40158d>, <DisassemblerInsn "add" for 0x401594>, <DisassemblerInsn "mov" for 0x401597>, <DisassemblerInsn "xor" for 0x401599>, <DisassemblerInsn "call" for 0x40159b>]'}, {'block_Idx': 170, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40174d>]'}, {'block_Idx': 359, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4020d2>, <DisassemblerInsn "mov" for 0x4020d9>, <DisassemblerInsn "mov" for 0x4020e0>, <DisassemblerInsn "mov" for 0x4020e7>, <DisassemblerInsn "mov" for 0x4020ef>, <DisassemblerInsn "shl" for 0x4020f6>, <DisassemblerInsn "mov" for 0x4020f8>, <DisassemblerInsn "add" for 0x4020fb>, <DisassemblerInsn "mov" for 0x4020ff>, <DisassemblerInsn "mov" for 0x402102>, <DisassemblerInsn "add" for 0x402106>, <DisassemblerInsn "add" for 0x402108>, <DisassemblerInsn "sub" for 0x40210a>, <DisassemblerInsn "mov" for 0x40210c>, <DisassemblerInsn "cmp" for 0x402113>, <DisassemblerInsn "jne" for 0x402116>]'}, {'block_Idx': 228, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402bce>, <DisassemblerInsn "mov" for 0x402bd6>, <DisassemblerInsn "add" for 0x402bde>, <DisassemblerInsn "mov" for 0x402be2>, <DisassemblerInsn "mov" for 0x402bea>, <DisassemblerInsn "mov" for 0x402bec>, <DisassemblerInsn "movsxd" for 0x402bf3>, <DisassemblerInsn "cmp" for 0x402bf6>, <DisassemblerInsn "jge" for 0x402bf9>]'}, {'block_Idx': 223, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b3b>, <DisassemblerInsn "mov" for 0x401b43>, <DisassemblerInsn "mov" for 0x401b4a>, <DisassemblerInsn "mov" for 0x401b51>, <DisassemblerInsn "sub" for 0x401b56>, <DisassemblerInsn "mov" for 0x401b58>, <DisassemblerInsn "shl" for 0x401b5f>, <DisassemblerInsn "mov" for 0x401b61>, <DisassemblerInsn "sar" for 0x401b68>, <DisassemblerInsn "mov" for 0x401b6a>, <DisassemblerInsn "cmp" for 0x401b71>, <DisassemblerInsn "jle" for 0x401b74>]'}, {'block_Idx': 226, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4019d3>]'}, {'block_Idx': 201, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401933>, <DisassemblerInsn "mov" for 0x40193a>, <DisassemblerInsn "mov" for 0x401941>, <DisassemblerInsn "mov" for 0x401949>, <DisassemblerInsn "sub" for 0x401950>, <DisassemblerInsn "mov" for 0x401952>, <DisassemblerInsn "mov" for 0x401954>, <DisassemblerInsn "mov" for 0x40195b>, <DisassemblerInsn "mov" for 0x401962>, <DisassemblerInsn "mov" for 0x401969>, <DisassemblerInsn "mov" for 0x401970>, <DisassemblerInsn "mov" for 0x401977>, <DisassemblerInsn "mov" for 0x40197e>, <DisassemblerInsn "mov" for 0x401985>, <DisassemblerInsn "mov" for 0x40198c>, <DisassemblerInsn "cmp" for 0x401993>, <DisassemblerInsn "jle" for 0x401996>]'}, {'block_Idx': 318, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40202e>, <DisassemblerInsn "mov" for 0x402035>, <DisassemblerInsn "mov" for 0x40203d>, <DisassemblerInsn "add" for 0x40203f>, <DisassemblerInsn "mov" for 0x402042>, <DisassemblerInsn "mov" for 0x402044>, <DisassemblerInsn "mov" for 0x402047>, <DisassemblerInsn "cmp" for 0x40204e>, <DisassemblerInsn "je" for 0x402051>]'}, {'block_Idx': 87, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401211>, <DisassemblerInsn "test" for 0x401218>, <DisassemblerInsn "je" for 0x40121a>]'}, {'block_Idx': 129, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015a0>, <DisassemblerInsn "mov" for 0x4015a8>, <DisassemblerInsn "mov" for 0x4015ab>, <DisassemblerInsn "mov" for 0x4015b3>, <DisassemblerInsn "mov" for 0x4015b6>, <DisassemblerInsn "mov" for 0x4015be>, <DisassemblerInsn "mov" for 0x4015c0>, <DisassemblerInsn "mov" for 0x4015c7>, <DisassemblerInsn "cdq" for 0x4015cc>, <DisassemblerInsn "idiv" for 0x4015cd>, <DisassemblerInsn "mov" for 0x4015cf>, <DisassemblerInsn "movsxd" for 0x4015d7>, <DisassemblerInsn "xor" for 0x4015da>, <DisassemblerInsn "call" for 0x4015dc>]'}, {'block_Idx': 247, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e91>, <DisassemblerInsn "mov" for 0x401e98>, <DisassemblerInsn "mov" for 0x401e9f>, <DisassemblerInsn "mov" for 0x401ea6>, <DisassemblerInsn "xor" for 0x401ea9>, <DisassemblerInsn "sub" for 0x401eab>, <DisassemblerInsn "shr" for 0x401eae>, <DisassemblerInsn "mov" for 0x401eb0>, <DisassemblerInsn "add" for 0x401eb8>, <DisassemblerInsn "mov" for 0x401eba>, <DisassemblerInsn "mov" for 0x401ebc>, <DisassemblerInsn "jmp" for 0x401ec3>]'}, {'block_Idx': 172, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4032a2>, <DisassemblerInsn "mov" for 0x4032aa>, <DisassemblerInsn "mov" for 0x4032ac>, <DisassemblerInsn "cmp" for 0x4032b3>, <DisassemblerInsn "mov" for 0x4032b6>, <DisassemblerInsn "jle" for 0x4032bd>]'}, {'block_Idx': 200, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401998>, <DisassemblerInsn "mov" for 0x4019a0>, <DisassemblerInsn "lea" for 0x4019a3>, <DisassemblerInsn "xor" for 0x4019aa>, <DisassemblerInsn "call" for 0x4019ac>]'}, {'block_Idx': 230, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ba1>, <DisassemblerInsn "mov" for 0x401ba9>, <DisassemblerInsn "mov" for 0x401bb1>, <DisassemblerInsn "mov" for 0x401bb9>, <DisassemblerInsn "mov" for 0x401bc0>, <DisassemblerInsn "add" for 0x401bc3>, <DisassemblerInsn "mov" for 0x401bc7>, <DisassemblerInsn "movsxd" for 0x401bcf>, <DisassemblerInsn "cmp" for 0x401bd2>, <DisassemblerInsn "mov" for 0x401bd5>, <DisassemblerInsn "jl" for 0x401bdd>]'}, {'block_Idx': 119, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401413>, <DisassemblerInsn "mov" for 0x40141a>, <DisassemblerInsn "movsxd" for 0x401421>, <DisassemblerInsn "lea" for 0x401424>, <DisassemblerInsn "mov" for 0x40142b>, <DisassemblerInsn "mov" for 0x40142e>, <DisassemblerInsn "mov" for 0x401435>, <DisassemblerInsn "jmp" for 0x40143c>]'}, {'block_Idx': 67, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400eac>]'}, {'block_Idx': 173, 'blockInsts': '[<DisassemblerInsn "lea" for 0x40331d>, <DisassemblerInsn "lea" for 0x403324>, <DisassemblerInsn "mov" for 0x40332b>, <DisassemblerInsn "lea" for 0x403330>, <DisassemblerInsn "call" for 0x403337>]'}, {'block_Idx': 108, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401238>]'}, {'block_Idx': 130, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40144f>, <DisassemblerInsn "sub" for 0x401456>, <DisassemblerInsn "je" for 0x401459>]'}, {'block_Idx': 42, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c09>, <DisassemblerInsn "cmp" for 0x400c10>, <DisassemblerInsn "jle" for 0x400c13>]'}, {'block_Idx': 28, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c8a>, <DisassemblerInsn "mov" for 0x400c92>, <DisassemblerInsn "xor" for 0x400c96>, <DisassemblerInsn "lea" for 0x400c98>, <DisassemblerInsn "mov" for 0x400c9f>, <DisassemblerInsn "call" for 0x400ca1>]'}, {'block_Idx': 235, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402bfb>, <DisassemblerInsn "mov" for 0x402c03>, <DisassemblerInsn "mov" for 0x402c0b>, <DisassemblerInsn "mov" for 0x402c13>, <DisassemblerInsn "mov" for 0x402c15>, <DisassemblerInsn "mov" for 0x402c17>, <DisassemblerInsn "mov" for 0x402c1e>, <DisassemblerInsn "mov" for 0x402c25>, <DisassemblerInsn "jmp" for 0x402c2d>]'}, {'block_Idx': 176, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40304a>, <DisassemblerInsn "mov" for 0x403052>, <DisassemblerInsn "mov" for 0x403054>, <DisassemblerInsn "cmp" for 0x40305b>, <DisassemblerInsn "mov" for 0x40305e>, <DisassemblerInsn "jle" for 0x403065>]'}, {'block_Idx': 38, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400866>, <DisassemblerInsn "mov" for 0x40086e>, <DisassemblerInsn "mov" for 0x400876>, <DisassemblerInsn "mov" for 0x40087e>, <DisassemblerInsn "mov" for 0x400886>, <DisassemblerInsn "mov" for 0x40088d>, <DisassemblerInsn "mov" for 0x400894>, <DisassemblerInsn "add" for 0x400896>, <DisassemblerInsn "mov" for 0x400899>, <DisassemblerInsn "add" for 0x40089b>, <DisassemblerInsn "mov" for 0x40089d>, <DisassemblerInsn "cmp" for 0x40089f>, <DisassemblerInsn "setl" for 0x4008a1>, <DisassemblerInsn "cmp" for 0x4008a5>, <DisassemblerInsn "setne" for 0x4008a8>, <DisassemblerInsn "and" for 0x4008ac>, <DisassemblerInsn "test" for 0x4008af>, <DisassemblerInsn "mov" for 0x4008b3>, <DisassemblerInsn "mov" for 0x4008b5>, <DisassemblerInsn "mov" for 0x4008bc>, <DisassemblerInsn "mov" for 0x4008c3>, <DisassemblerInsn "mov" for 0x4008cb>, <DisassemblerInsn "jne" for 0x4008d2>]'}, {'block_Idx': 357, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022e2>, <DisassemblerInsn "mov" for 0x4022e9>, <DisassemblerInsn "mov" for 0x4022f0>, <DisassemblerInsn "mov" for 0x4022f7>, <DisassemblerInsn "mov" for 0x4022f9>, <DisassemblerInsn "mov" for 0x4022fb>, <DisassemblerInsn "add" for 0x4022fe>, <DisassemblerInsn "mov" for 0x402302>, <DisassemblerInsn "add" for 0x40230a>, <DisassemblerInsn "and" for 0x40230e>, <DisassemblerInsn "mov" for 0x402312>, <DisassemblerInsn "mov" for 0x40231a>, <DisassemblerInsn "cmp" for 0x40231f>, <DisassemblerInsn "mov" for 0x402323>, <DisassemblerInsn "mov" for 0x40232b>, <DisassemblerInsn "mov" for 0x402332>, <DisassemblerInsn "jb" for 0x402339>]'}, {'block_Idx': 49, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a31>, <DisassemblerInsn "mov" for 0x400a39>, <DisassemblerInsn "mov" for 0x400a40>, <DisassemblerInsn "mov" for 0x400a48>, <DisassemblerInsn "sar" for 0x400a4a>, <DisassemblerInsn "movsxd" for 0x400a4d>, <DisassemblerInsn "mov" for 0x400a50>, <DisassemblerInsn "mov" for 0x400a53>, <DisassemblerInsn "and" for 0x400a55>, <DisassemblerInsn "mov" for 0x400a58>, <DisassemblerInsn "movzx" for 0x400a5f>, <DisassemblerInsn "mov" for 0x400a62>, <DisassemblerInsn "mov" for 0x400a69>, <DisassemblerInsn "add" for 0x400a6b>, <DisassemblerInsn "mov" for 0x400a6e>, <DisassemblerInsn "sar" for 0x400a70>, <DisassemblerInsn "movsxd" for 0x400a73>, <DisassemblerInsn "mov" for 0x400a76>, <DisassemblerInsn "ror" for 0x400a79>, <DisassemblerInsn "ror" for 0x400a7d>, <DisassemblerInsn "ror" for 0x400a80>, <DisassemblerInsn "and" for 0x400a84>, <DisassemblerInsn "shl" for 0x400a87>, <DisassemblerInsn "mov" for 0x400a89>, <DisassemblerInsn "shr" for 0x400a90>, <DisassemblerInsn "mov" for 0x400a93>, <DisassemblerInsn "mov" for 0x400a9a>, <DisassemblerInsn "add" for 0x400a9c>, <DisassemblerInsn "sar" for 0x400a9f>, <DisassemblerInsn "movsxd" for 0x400aa2>, <DisassemblerInsn "mov" for 0x400aa5>, <DisassemblerInsn "ror" for 0x400aa8>, <DisassemblerInsn "ror" for 0x400aac>, <DisassemblerInsn "ror" for 0x400aaf>, <DisassemblerInsn "shl" for 0x400ab3>, <DisassemblerInsn "mov" for 0x400ab5>, <DisassemblerInsn "shr" for 0x400abc>, <DisassemblerInsn "mov" for 0x400abf>, <DisassemblerInsn "add" for 0x400ac2>, <DisassemblerInsn "shl" for 0x400ac6>, <DisassemblerInsn "sar" for 0x400ac9>, <DisassemblerInsn "movsxd" for 0x400acd>, <DisassemblerInsn "mov" for 0x400ad0>, <DisassemblerInsn "ror" for 0x400ad4>, <DisassemblerInsn "ror" for 0x400ad8>, <DisassemblerInsn "ror" for 0x400adb>, <DisassemblerInsn "shl" for 0x400adf>, <DisassemblerInsn "mov" for 0x400ae1>, <DisassemblerInsn "shr" for 0x400ae9>, <DisassemblerInsn "add" for 0x400aec>, <DisassemblerInsn "mov" for 0x400aef>, <DisassemblerInsn "mov" for 0x400af6>, <DisassemblerInsn "or" for 0x400af8>, <DisassemblerInsn "mov" for 0x400afa>, <DisassemblerInsn "shl" for 0x400b01>, <DisassemblerInsn "mov" for 0x400b04>, <DisassemblerInsn "add" for 0x400b0b>, <DisassemblerInsn "mov" for 0x400b0d>, <DisassemblerInsn "mov" for 0x400b0f>, <DisassemblerInsn "cmp" for 0x400b16>, <DisassemblerInsn "jle" for 0x400b18>]'}, {'block_Idx': 410, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4026f0>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400698>, <DisassemblerInsn "mov" for 0x40069f>, <DisassemblerInsn "mov" for 0x4006a7>, <DisassemblerInsn "add" for 0x4006aa>, <DisassemblerInsn "mov" for 0x4006b1>, <DisassemblerInsn "mov" for 0x4006b9>, <DisassemblerInsn "mov" for 0x4006bf>, <DisassemblerInsn "xor" for 0x4006c6>, <DisassemblerInsn "mov" for 0x4006c9>, <DisassemblerInsn "cmp" for 0x4006ce>, <DisassemblerInsn "mov" for 0x4006d0>, <DisassemblerInsn "ja" for 0x4006d7>]'}, {'block_Idx': 134, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014c2>, <DisassemblerInsn "mov" for 0x4014c9>, <DisassemblerInsn "mov" for 0x4014d1>, <DisassemblerInsn "sar" for 0x4014d3>, <DisassemblerInsn "movsxd" for 0x4014d6>, <DisassemblerInsn "mov" for 0x4014d9>, <DisassemblerInsn "ror" for 0x4014dc>, <DisassemblerInsn "ror" for 0x4014e0>, <DisassemblerInsn "ror" for 0x4014e3>, <DisassemblerInsn "and" for 0x4014e7>, <DisassemblerInsn "shl" for 0x4014ea>, <DisassemblerInsn "mov" for 0x4014ec>, <DisassemblerInsn "shr" for 0x4014f3>, <DisassemblerInsn "add" for 0x4014f6>, <DisassemblerInsn "mov" for 0x4014f9>, <DisassemblerInsn "mov" for 0x401500>, <DisassemblerInsn "jmp" for 0x401507>]'}, {'block_Idx': 255, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f54>, <DisassemblerInsn "mov" for 0x401f5c>, <DisassemblerInsn "mov" for 0x401f64>, <DisassemblerInsn "mov" for 0x401f6b>, <DisassemblerInsn "mov" for 0x401f72>, <DisassemblerInsn "sub" for 0x401f77>, <DisassemblerInsn "mov" for 0x401f79>, <DisassemblerInsn "shl" for 0x401f80>, <DisassemblerInsn "mov" for 0x401f82>, <DisassemblerInsn "sar" for 0x401f89>, <DisassemblerInsn "mov" for 0x401f8b>, <DisassemblerInsn "mov" for 0x401f93>, <DisassemblerInsn "add" for 0x401f96>, <DisassemblerInsn "mov" for 0x401f9a>, <DisassemblerInsn "cmp" for 0x401fa2>, <DisassemblerInsn "je" for 0x401fa5>]'}, {'block_Idx': 139, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015e1>, <DisassemblerInsn "cmp" for 0x4015e8>, <DisassemblerInsn "je" for 0x4015eb>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40082b>, <DisassemblerInsn "mov" for 0x400832>, <DisassemblerInsn "mov" for 0x40083a>, <DisassemblerInsn "mov" for 0x400842>, <DisassemblerInsn "mov" for 0x400849>, <DisassemblerInsn "mov" for 0x400850>, <DisassemblerInsn "add" for 0x400857>, <DisassemblerInsn "mov" for 0x400859>, <DisassemblerInsn "add" for 0x40085b>, <DisassemblerInsn "movsxd" for 0x40085e>, <DisassemblerInsn "call" for 0x400861>]'}, {'block_Idx': 50, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bba>, <DisassemblerInsn "mov" for 0x400bc2>, <DisassemblerInsn "mov" for 0x400bc9>, <DisassemblerInsn "mov" for 0x400bd1>, <DisassemblerInsn "mov" for 0x400bd4>, <DisassemblerInsn "cdq" for 0x400bd9>, <DisassemblerInsn "idiv" for 0x400bda>, <DisassemblerInsn "mov" for 0x400bdc>, <DisassemblerInsn "cdqe" for 0x400be4>, <DisassemblerInsn "add" for 0x400be6>, <DisassemblerInsn "call" for 0x400be9>]'}, {'block_Idx': 398, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4025f2>]'}, {'block_Idx': 327, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40238b>, <DisassemblerInsn "cmp" for 0x402392>, <DisassemblerInsn "jle" for 0x402395>]'}, {'block_Idx': 348, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4052a3>, <DisassemblerInsn "add" for 0x4052aa>, <DisassemblerInsn "ret" for 0x4052b1>]'}, {'block_Idx': 115, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401407>, <DisassemblerInsn "cmp" for 0x40140e>, <DisassemblerInsn "jge" for 0x401411>]'}, {'block_Idx': 341, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022d2>, <DisassemblerInsn "cmp" for 0x4022d9>, <DisassemblerInsn "jle" for 0x4022dc>]'}, {'block_Idx': 402, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40219a>, <DisassemblerInsn "mov" for 0x4021a1>, <DisassemblerInsn "mov" for 0x4021a8>, <DisassemblerInsn "mov" for 0x4021af>, <DisassemblerInsn "mov" for 0x4021b6>, <DisassemblerInsn "add" for 0x4021be>, <DisassemblerInsn "and" for 0x4021c2>, <DisassemblerInsn "mov" for 0x4021c6>, <DisassemblerInsn "mov" for 0x4021ce>, <DisassemblerInsn "xor" for 0x4021d4>, <DisassemblerInsn "mov" for 0x4021d6>, <DisassemblerInsn "mov" for 0x4021de>, <DisassemblerInsn "mov" for 0x4021e5>, <DisassemblerInsn "mov" for 0x4021ec>, <DisassemblerInsn "mov" for 0x4021f3>, <DisassemblerInsn "mov" for 0x4021fa>, <DisassemblerInsn "jmp" for 0x402202>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400eb1>, <DisassemblerInsn "mov" for 0x400eb9>, <DisassemblerInsn "mov" for 0x400ec0>, <DisassemblerInsn "mov" for 0x400ec7>, <DisassemblerInsn "mov" for 0x400ece>, <DisassemblerInsn "mov" for 0x400ed5>, <DisassemblerInsn "shl" for 0x400edc>, <DisassemblerInsn "shr" for 0x400edf>, <DisassemblerInsn "mov" for 0x400ee2>, <DisassemblerInsn "mov" for 0x400ee9>, <DisassemblerInsn "cmp" for 0x400eef>, <DisassemblerInsn "jne" for 0x400ef2>]'}, {'block_Idx': 61, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d44>, <DisassemblerInsn "mov" for 0x400d4c>, <DisassemblerInsn "add" for 0x400d53>, <DisassemblerInsn "mov" for 0x400d56>, <DisassemblerInsn "mov" for 0x400d5d>, <DisassemblerInsn "mov" for 0x400d5f>, <DisassemblerInsn "cdq" for 0x400d64>, <DisassemblerInsn "idiv" for 0x400d65>, <DisassemblerInsn "mov" for 0x400d67>, <DisassemblerInsn "mov" for 0x400d6e>, <DisassemblerInsn "mov" for 0x400d70>, <DisassemblerInsn "add" for 0x400d77>, <DisassemblerInsn "cmp" for 0x400d7a>, <DisassemblerInsn "mov" for 0x400d7c>, <DisassemblerInsn "jl" for 0x400d83>]'}, {'block_Idx': 47, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ca6>, <DisassemblerInsn "mov" for 0x400cae>, <DisassemblerInsn "mov" for 0x400cb5>, <DisassemblerInsn "mov" for 0x400cb7>, <DisassemblerInsn "mov" for 0x400cbe>, <DisassemblerInsn "cdq" for 0x400cc3>, <DisassemblerInsn "idiv" for 0x400cc4>, <DisassemblerInsn "add" for 0x400cc6>, <DisassemblerInsn "cmp" for 0x400cc9>, <DisassemblerInsn "jge" for 0x400ccb>]'}, {'block_Idx': 58, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f3b>, <DisassemblerInsn "mov" for 0x400f42>, <DisassemblerInsn "mov" for 0x400f4a>, <DisassemblerInsn "xor" for 0x400f4e>, <DisassemblerInsn "lea" for 0x400f50>, <DisassemblerInsn "mov" for 0x400f57>, <DisassemblerInsn "call" for 0x400f59>]'}, {'block_Idx': 41, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bad>, <DisassemblerInsn "cmp" for 0x400bb5>, <DisassemblerInsn "jne" for 0x400bb8>]'}, {'block_Idx': 387, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402958>, <DisassemblerInsn "mov" for 0x402960>, <DisassemblerInsn "mov" for 0x402968>, <DisassemblerInsn "mov" for 0x40296f>, <DisassemblerInsn "mov" for 0x402976>, <DisassemblerInsn "mov" for 0x40297d>, <DisassemblerInsn "mov" for 0x402984>, <DisassemblerInsn "mov" for 0x40298b>, <DisassemblerInsn "mov" for 0x402992>, <DisassemblerInsn "cmp" for 0x40299a>, <DisassemblerInsn "je" for 0x40299e>]'}, {'block_Idx': 373, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402217>, <DisassemblerInsn "mov" for 0x40221e>, <DisassemblerInsn "mov" for 0x402225>, <DisassemblerInsn "mov" for 0x40222c>, <DisassemblerInsn "mov" for 0x402233>, <DisassemblerInsn "add" for 0x402235>, <DisassemblerInsn "mov" for 0x402239>, <DisassemblerInsn "and" for 0x402241>, <DisassemblerInsn "mov" for 0x402245>, <DisassemblerInsn "mov" for 0x40224d>, <DisassemblerInsn "cmp" for 0x402252>, <DisassemblerInsn "mov" for 0x402255>, <DisassemblerInsn "mov" for 0x40225d>, <DisassemblerInsn "mov" for 0x402264>, <DisassemblerInsn "mov" for 0x40226b>, <DisassemblerInsn "je" for 0x402272>]'}, {'block_Idx': 250, 'blockInsts': '[<DisassemblerInsn "push" for 0x403970>, <DisassemblerInsn "mov" for 0x403971>, <DisassemblerInsn "push" for 0x403974>, <DisassemblerInsn "sub" for 0x403975>, <DisassemblerInsn "mov" for 0x40397c>, <DisassemblerInsn "mov" for 0x40397f>, <DisassemblerInsn "mov" for 0x403982>, <DisassemblerInsn "mov" for 0x403986>, <DisassemblerInsn "mov" for 0x403988>, <DisassemblerInsn "lea" for 0x40398c>, <DisassemblerInsn "and" for 0x403994>, <DisassemblerInsn "mov" for 0x403998>, <DisassemblerInsn "sub" for 0x40399b>, <DisassemblerInsn "mov" for 0x40399e>, <DisassemblerInsn "mov" for 0x4039a2>, <DisassemblerInsn "movsxd" for 0x4039a5>, <DisassemblerInsn "mov" for 0x4039a8>, <DisassemblerInsn "mov" for 0x4039ad>, <DisassemblerInsn "cmp" for 0x4039b1>, <DisassemblerInsn "setg" for 0x4039b4>, <DisassemblerInsn "mov" for 0x4039b7>, <DisassemblerInsn "test" for 0x4039ba>, <DisassemblerInsn "jne" for 0x4039bc>]'}, {'block_Idx': 282, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x402020>, <DisassemblerInsn "jl" for 0x402023>]'}, {'block_Idx': 55, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cd1>, <DisassemblerInsn "mov" for 0x400cd8>, <DisassemblerInsn "mov" for 0x400ce0>, <DisassemblerInsn "mov" for 0x400ce3>, <DisassemblerInsn "mov" for 0x400ceb>, <DisassemblerInsn "and" for 0x400ced>, <DisassemblerInsn "mov" for 0x400cf0>, <DisassemblerInsn "mov" for 0x400cf7>, <DisassemblerInsn "mov" for 0x400cfe>, <DisassemblerInsn "mov" for 0x400d05>, <DisassemblerInsn "mov" for 0x400d0d>, <DisassemblerInsn "mov" for 0x400d14>, <DisassemblerInsn "sar" for 0x400d1b>, <DisassemblerInsn "movsxd" for 0x400d1e>, <DisassemblerInsn "mov" for 0x400d21>, <DisassemblerInsn "ror" for 0x400d24>, <DisassemblerInsn "ror" for 0x400d28>, <DisassemblerInsn "ror" for 0x400d2b>, <DisassemblerInsn "shl" for 0x400d2f>, <DisassemblerInsn "shr" for 0x400d31>, <DisassemblerInsn "and" for 0x400d34>, <DisassemblerInsn "cmp" for 0x400d39>, <DisassemblerInsn "je" for 0x400d3e>]'}, {'block_Idx': 411, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402a34>, <DisassemblerInsn "mov" for 0x402a3c>, <DisassemblerInsn "mov" for 0x402a44>, <DisassemblerInsn "mov" for 0x402a4b>, <DisassemblerInsn "mov" for 0x402a52>, <DisassemblerInsn "mov" for 0x402a5a>, <DisassemblerInsn "add" for 0x402a61>, <DisassemblerInsn "add" for 0x402a64>, <DisassemblerInsn "add" for 0x402a67>, <DisassemblerInsn "add" for 0x402a69>, <DisassemblerInsn "mov" for 0x402a6b>, <DisassemblerInsn "jmp" for 0x402a6e>]'}, {'block_Idx': 203, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40341d>, <DisassemblerInsn "mov" for 0x403425>, <DisassemblerInsn "mov" for 0x40342c>, <DisassemblerInsn "mov" for 0x403434>, <DisassemblerInsn "mov" for 0x40343b>, <DisassemblerInsn "mov" for 0x403442>, <DisassemblerInsn "mov" for 0x40344a>, <DisassemblerInsn "shl" for 0x40344e>, <DisassemblerInsn "mov" for 0x403450>, <DisassemblerInsn "mov" for 0x403452>, <DisassemblerInsn "mov" for 0x403455>, <DisassemblerInsn "add" for 0x403458>, <DisassemblerInsn "mov" for 0x40345c>, <DisassemblerInsn "mov" for 0x403460>, <DisassemblerInsn "mov" for 0x403467>, <DisassemblerInsn "mov" for 0x40346f>, <DisassemblerInsn "mov" for 0x403477>, <DisassemblerInsn "mov" for 0x40347f>, <DisassemblerInsn "mov" for 0x403486>, <DisassemblerInsn "mov" for 0x40348e>, <DisassemblerInsn "add" for 0x403496>, <DisassemblerInsn "movsxd" for 0x40349a>, <DisassemblerInsn "cmp" for 0x40349d>, <DisassemblerInsn "mov" for 0x4034a0>, <DisassemblerInsn "mov" for 0x4034a2>, <DisassemblerInsn "mov" for 0x4034a9>, <DisassemblerInsn "mov" for 0x4034b1>, <DisassemblerInsn "mov" for 0x4034b9>, <DisassemblerInsn "mov" for 0x4034c1>, <DisassemblerInsn "jl" for 0x4034c8>]'}, {'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "push" for 0x4004e0>, <DisassemblerInsn "sub" for 0x4004e1>, <DisassemblerInsn "mov" for 0x4004e8>, <DisassemblerInsn "mov" for 0x4004f0>, <DisassemblerInsn "mov" for 0x4004f8>, <DisassemblerInsn "mov" for 0x400500>, <DisassemblerInsn "mov" for 0x400507>, <DisassemblerInsn "mov" for 0x40050f>, <DisassemblerInsn "mov" for 0x400512>, <DisassemblerInsn "mov" for 0x40051a>, <DisassemblerInsn "mov" for 0x400522>, <DisassemblerInsn "mov" for 0x400524>, <DisassemblerInsn "mov" for 0x40052b>, <DisassemblerInsn "mov" for 0x400531>, <DisassemblerInsn "add" for 0x400534>, <DisassemblerInsn "mov" for 0x400538>, <DisassemblerInsn "mov" for 0x400540>, <DisassemblerInsn "cmp" for 0x400543>, <DisassemblerInsn "mov" for 0x400546>, <DisassemblerInsn "jne" for 0x40054d>]'}, {'block_Idx': 403, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40284d>]'}, {'block_Idx': 303, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x401ffc>, <DisassemblerInsn "jl" for 0x401fff>]'}, {'block_Idx': 165, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40303e>, <DisassemblerInsn "cmp" for 0x403045>, <DisassemblerInsn "jne" for 0x403048>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f63>, <DisassemblerInsn "mov" for 0x400f6b>, <DisassemblerInsn "mov" for 0x400f73>, <DisassemblerInsn "mov" for 0x400f7b>, <DisassemblerInsn "mov" for 0x400f83>, <DisassemblerInsn "mov" for 0x400f85>, <DisassemblerInsn "cmp" for 0x400f8c>, <DisassemblerInsn "setg" for 0x400f8f>, <DisassemblerInsn "mov" for 0x400f93>, <DisassemblerInsn "mov" for 0x400f9b>, <DisassemblerInsn "add" for 0x400f9e>, <DisassemblerInsn "mov" for 0x400fa2>, <DisassemblerInsn "mov" for 0x400faa>, <DisassemblerInsn "mov" for 0x400fae>, <DisassemblerInsn "mov" for 0x400fb4>, <DisassemblerInsn "cmp" for 0x400fba>, <DisassemblerInsn "cmovg" for 0x400fbd>, <DisassemblerInsn "mov" for 0x400fc1>, <DisassemblerInsn "mov" for 0x400fc7>, <DisassemblerInsn "cmp" for 0x400fcd>, <DisassemblerInsn "cmovg" for 0x400fd0>, <DisassemblerInsn "and" for 0x400fd4>, <DisassemblerInsn "movzx" for 0x400fd8>, <DisassemblerInsn "mov" for 0x400fdc>, <DisassemblerInsn "sub" for 0x400fe0>, <DisassemblerInsn "mov" for 0x400fe3>, <DisassemblerInsn "mov" for 0x400fe6>, <DisassemblerInsn "mov" for 0x400fee>, <DisassemblerInsn "add" for 0x400ff1>, <DisassemblerInsn "mov" for 0x400ff5>, <DisassemblerInsn "mov" for 0x400ffd>, <DisassemblerInsn "mov" for 0x401001>, <DisassemblerInsn "add" for 0x401004>, <DisassemblerInsn "mov" for 0x401008>, <DisassemblerInsn "mov" for 0x401010>, <DisassemblerInsn "mov" for 0x401014>, <DisassemblerInsn "mov" for 0x40101a>, <DisassemblerInsn "add" for 0x40101d>, <DisassemblerInsn "mov" for 0x401021>, <DisassemblerInsn "mov" for 0x401029>, <DisassemblerInsn "mov" for 0x40102c>, <DisassemblerInsn "mov" for 0x40102e>, <DisassemblerInsn "and" for 0x401034>, <DisassemblerInsn "cmp" for 0x401036>, <DisassemblerInsn "je" for 0x401038>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40063c>, <DisassemblerInsn "mov" for 0x400643>, <DisassemblerInsn "mov" for 0x40064a>, <DisassemblerInsn "xor" for 0x400651>, <DisassemblerInsn "sub" for 0x400653>, <DisassemblerInsn "cmovb" for 0x400655>, <DisassemblerInsn "cmp" for 0x400658>, <DisassemblerInsn "cmovb" for 0x40065a>, <DisassemblerInsn "mov" for 0x40065d>, <DisassemblerInsn "mov" for 0x400664>, <DisassemblerInsn "mov" for 0x40066b>, <DisassemblerInsn "mov" for 0x400672>, <DisassemblerInsn "mov" for 0x400679>, <DisassemblerInsn "add" for 0x40067b>, <DisassemblerInsn "mov" for 0x40067d>, <DisassemblerInsn "mov" for 0x400684>, <DisassemblerInsn "cmp" for 0x400689>, <DisassemblerInsn "mov" for 0x40068b>, <DisassemblerInsn "jb" for 0x400692>]'}, {'block_Idx': 202, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4017f4>]'}, {'block_Idx': 220, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401aaf>, <DisassemblerInsn "mov" for 0x401ab7>, <DisassemblerInsn "mov" for 0x401abe>, <DisassemblerInsn "mov" for 0x401ac5>, <DisassemblerInsn "mov" for 0x401acd>, <DisassemblerInsn "shr" for 0x401ad5>, <DisassemblerInsn "mov" for 0x401ad9>, <DisassemblerInsn "add" for 0x401adc>, <DisassemblerInsn "mov" for 0x401ae0>, <DisassemblerInsn "add" for 0x401ae2>, <DisassemblerInsn "mov" for 0x401ae5>, <DisassemblerInsn "shl" for 0x401aec>, <DisassemblerInsn "mov" for 0x401aef>, <DisassemblerInsn "mov" for 0x401af6>, <DisassemblerInsn "sar" for 0x401afe>, <DisassemblerInsn "movsxd" for 0x401b02>, <DisassemblerInsn "mov" for 0x401b05>, <DisassemblerInsn "ror" for 0x401b09>, <DisassemblerInsn "ror" for 0x401b0d>, <DisassemblerInsn "ror" for 0x401b10>, <DisassemblerInsn "shl" for 0x401b14>, <DisassemblerInsn "mov" for 0x401b16>, <DisassemblerInsn "mov" for 0x401b1d>, <DisassemblerInsn "xor" for 0x401b20>, <DisassemblerInsn "sub" for 0x401b22>, <DisassemblerInsn "shr" for 0x401b25>, <DisassemblerInsn "mov" for 0x401b27>, <DisassemblerInsn "add" for 0x401b2e>, <DisassemblerInsn "mov" for 0x401b30>, <DisassemblerInsn "or" for 0x401b32>, <DisassemblerInsn "mov" for 0x401b34>, <DisassemblerInsn "mov" for 0x401b3b>, <DisassemblerInsn "mov" for 0x401b43>, <DisassemblerInsn "mov" for 0x401b4a>, <DisassemblerInsn "mov" for 0x401b51>, <DisassemblerInsn "sub" for 0x401b56>, <DisassemblerInsn "mov" for 0x401b58>, <DisassemblerInsn "shl" for 0x401b5f>, <DisassemblerInsn "mov" for 0x401b61>, <DisassemblerInsn "sar" for 0x401b68>, <DisassemblerInsn "mov" for 0x401b6a>, <DisassemblerInsn "cmp" for 0x401b71>, <DisassemblerInsn "jle" for 0x401b74>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ed3>, <DisassemblerInsn "mov" for 0x402edb>, <DisassemblerInsn "mov" for 0x402ee2>, <DisassemblerInsn "mov" for 0x402eea>, <DisassemblerInsn "mov" for 0x402ef1>, <DisassemblerInsn "mov" for 0x402ef4>, <DisassemblerInsn "add" for 0x402ef7>, <DisassemblerInsn "mov" for 0x402efb>, <DisassemblerInsn "mov" for 0x402efe>, <DisassemblerInsn "mov" for 0x402f05>, <DisassemblerInsn "mov" for 0x402f0d>, <DisassemblerInsn "mov" for 0x402f15>, <DisassemblerInsn "mov" for 0x402f1d>, <DisassemblerInsn "mov" for 0x402f24>, <DisassemblerInsn "mov" for 0x402f2c>, <DisassemblerInsn "mov" for 0x402f34>, <DisassemblerInsn "mov" for 0x402f3c>, <DisassemblerInsn "mov" for 0x402f44>, <DisassemblerInsn "add" for 0x402f4b>, <DisassemblerInsn "movsxd" for 0x402f4f>, <DisassemblerInsn "cmp" for 0x402f52>, <DisassemblerInsn "mov" for 0x402f55>, <DisassemblerInsn "mov" for 0x402f5c>, <DisassemblerInsn "mov" for 0x402f64>, <DisassemblerInsn "mov" for 0x402f6c>, <DisassemblerInsn "jl" for 0x402f74>]'}, {'block_Idx': 96, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40121e>, <DisassemblerInsn "sub" for 0x401225>, <DisassemblerInsn "je" for 0x401228>]'}, {'block_Idx': 154, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401553>, <DisassemblerInsn "mov" for 0x40155a>, <DisassemblerInsn "xor" for 0x401562>, <DisassemblerInsn "lea" for 0x401564>, <DisassemblerInsn "mov" for 0x40156b>, <DisassemblerInsn "call" for 0x40156d>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403618>, <DisassemblerInsn "mov" for 0x40361d>, <DisassemblerInsn "mov" for 0x403621>, <DisassemblerInsn "mov" for 0x403626>, <DisassemblerInsn "mov" for 0x40362a>, <DisassemblerInsn "mov" for 0x40362e>, <DisassemblerInsn "mov" for 0x403633>, <DisassemblerInsn "shl" for 0x403637>, <DisassemblerInsn "mov" for 0x403639>, <DisassemblerInsn "mov" for 0x40363b>, <DisassemblerInsn "mov" for 0x40363e>, <DisassemblerInsn "add" for 0x403641>, <DisassemblerInsn "mov" for 0x403645>, <DisassemblerInsn "mov" for 0x403649>, <DisassemblerInsn "mov" for 0x40364d>, <DisassemblerInsn "mov" for 0x403652>, <DisassemblerInsn "mov" for 0x403657>, <DisassemblerInsn "mov" for 0x40365c>, <DisassemblerInsn "mov" for 0x403660>, <DisassemblerInsn "mov" for 0x403665>, <DisassemblerInsn "add" for 0x40366a>, <DisassemblerInsn "movsxd" for 0x40366e>, <DisassemblerInsn "cmp" for 0x403671>, <DisassemblerInsn "mov" for 0x403674>, <DisassemblerInsn "mov" for 0x403676>, <DisassemblerInsn "mov" for 0x40367a>, <DisassemblerInsn "mov" for 0x40367f>, <DisassemblerInsn "mov" for 0x403684>, <DisassemblerInsn "mov" for 0x40368c>, <DisassemblerInsn "jl" for 0x403693>]'}, {'block_Idx': 440, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4048bb>, <DisassemblerInsn "lea" for 0x4048c1>, <DisassemblerInsn "pop" for 0x4048c5>, <DisassemblerInsn "pop" for 0x4048c6>, <DisassemblerInsn "ret" for 0x4048c7>]'}, {'block_Idx': 238, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019e6>, <DisassemblerInsn "mov" for 0x4019ed>, <DisassemblerInsn "mov" for 0x4019f4>, <DisassemblerInsn "mov" for 0x4019fc>, <DisassemblerInsn "add" for 0x401a04>, <DisassemblerInsn "shl" for 0x401a08>, <DisassemblerInsn "add" for 0x401a0c>, <DisassemblerInsn "mov" for 0x401a0f>, <DisassemblerInsn "xor" for 0x401a17>, <DisassemblerInsn "mov" for 0x401a19>, <DisassemblerInsn "mov" for 0x401a20>, <DisassemblerInsn "mov" for 0x401a27>, <DisassemblerInsn "jmp" for 0x401a2f>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40072b>, <DisassemblerInsn "mov" for 0x400733>, <DisassemblerInsn "mov" for 0x40073b>, <DisassemblerInsn "mov" for 0x400742>, <DisassemblerInsn "call" for 0x400749>]'}, {'block_Idx': 232, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019d5>, <DisassemblerInsn "cmp" for 0x4019dd>, <DisassemblerInsn "jle" for 0x4019e0>]'}, {'block_Idx': 160, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40160f>]'}, {'block_Idx': 174, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4034df>, <DisassemblerInsn "mov" for 0x4034e7>, <DisassemblerInsn "mov" for 0x4034e9>, <DisassemblerInsn "cmp" for 0x4034f0>, <DisassemblerInsn "mov" for 0x4034f3>, <DisassemblerInsn "jle" for 0x4034fa>]'}, {'block_Idx': 54, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e81>, <DisassemblerInsn "mov" for 0x400e88>, <DisassemblerInsn "mov" for 0x400e90>, <DisassemblerInsn "mov" for 0x400e98>, <DisassemblerInsn "xor" for 0x400e9c>, <DisassemblerInsn "lea" for 0x400e9e>, <DisassemblerInsn "mov" for 0x400ea5>, <DisassemblerInsn "call" for 0x400ea7>]'}, {'block_Idx': 243, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016d8>, <DisassemblerInsn "mov" for 0x4016e0>, <DisassemblerInsn "mov" for 0x4016e7>, <DisassemblerInsn "mov" for 0x4016ee>, <DisassemblerInsn "mov" for 0x4016f6>, <DisassemblerInsn "mov" for 0x4016fe>, <DisassemblerInsn "mov" for 0x401705>, <DisassemblerInsn "mov" for 0x40170c>, <DisassemblerInsn "cmp" for 0x40170e>, <DisassemblerInsn "jne" for 0x401712>]'}, {'block_Idx': 182, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4032c3>, <DisassemblerInsn "mov" for 0x4032cb>, <DisassemblerInsn "mov" for 0x4032d3>, <DisassemblerInsn "mov" for 0x4032da>, <DisassemblerInsn "mov" for 0x4032e2>, <DisassemblerInsn "mov" for 0x4032e6>, <DisassemblerInsn "mov" for 0x4032ee>, <DisassemblerInsn "mov" for 0x4032f2>, <DisassemblerInsn "xor" for 0x4032fa>, <DisassemblerInsn "mov" for 0x4032fc>, <DisassemblerInsn "mov" for 0x403303>, <DisassemblerInsn "mov" for 0x40330b>, <DisassemblerInsn "mov" for 0x403313>, <DisassemblerInsn "jmp" for 0x40331b>]'}, {'block_Idx': 438, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40288b>]'}, {'block_Idx': 114, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013e2>, <DisassemblerInsn "mov" for 0x4013e9>, <DisassemblerInsn "mov" for 0x4013f1>, <DisassemblerInsn "mov" for 0x4013f4>, <DisassemblerInsn "mov" for 0x4013fb>, <DisassemblerInsn "jmp" for 0x401402>]'}, {'block_Idx': 146, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401509>, <DisassemblerInsn "mov" for 0x401510>, <DisassemblerInsn "mov" for 0x401518>, <DisassemblerInsn "sar" for 0x40151a>, <DisassemblerInsn "movsxd" for 0x40151d>, <DisassemblerInsn "mov" for 0x401520>, <DisassemblerInsn "ror" for 0x401523>, <DisassemblerInsn "ror" for 0x401527>, <DisassemblerInsn "ror" for 0x40152a>, <DisassemblerInsn "and" for 0x40152e>, <DisassemblerInsn "shl" for 0x401531>, <DisassemblerInsn "mov" for 0x401533>, <DisassemblerInsn "shr" for 0x40153a>, <DisassemblerInsn "add" for 0x40153d>, <DisassemblerInsn "imul" for 0x401540>, <DisassemblerInsn "mov" for 0x401543>, <DisassemblerInsn "mov" for 0x40154a>, <DisassemblerInsn "jmp" for 0x401551>]'}, {'block_Idx': 86, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40120c>]'}, {'block_Idx': 215, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403477>, <DisassemblerInsn "mov" for 0x40347f>, <DisassemblerInsn "mov" for 0x403486>, <DisassemblerInsn "mov" for 0x40348e>, <DisassemblerInsn "add" for 0x403496>, <DisassemblerInsn "movsxd" for 0x40349a>, <DisassemblerInsn "cmp" for 0x40349d>, <DisassemblerInsn "mov" for 0x4034a0>, <DisassemblerInsn "mov" for 0x4034a2>, <DisassemblerInsn "mov" for 0x4034a9>, <DisassemblerInsn "mov" for 0x4034b1>, <DisassemblerInsn "mov" for 0x4034b9>, <DisassemblerInsn "mov" for 0x4034c1>, <DisassemblerInsn "jl" for 0x4034c8>]'}, {'block_Idx': 88, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401128>, <DisassemblerInsn "mov" for 0x401130>, <DisassemblerInsn "mov" for 0x401138>, <DisassemblerInsn "mov" for 0x40113f>, <DisassemblerInsn "mov" for 0x401146>, <DisassemblerInsn "mov" for 0x40114e>, <DisassemblerInsn "cmp" for 0x401156>, <DisassemblerInsn "jle" for 0x401159>]'}, {'block_Idx': 234, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402852>, <DisassemblerInsn "cmp" for 0x402859>, <DisassemblerInsn "jle" for 0x40285c>]'}, {'block_Idx': 401, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4029d8>, <DisassemblerInsn "mov" for 0x4029e0>, <DisassemblerInsn "mov" for 0x4029e8>, <DisassemblerInsn "mov" for 0x4029ef>, <DisassemblerInsn "mov" for 0x4029f6>, <DisassemblerInsn "mov" for 0x4029fd>, <DisassemblerInsn "mov" for 0x402a05>, <DisassemblerInsn "mov" for 0x402a0d>, <DisassemblerInsn "mov" for 0x402a14>, <DisassemblerInsn "mov" for 0x402a1b>, <DisassemblerInsn "mov" for 0x402a22>, <DisassemblerInsn "cmp" for 0x402a2a>, <DisassemblerInsn "je" for 0x402a2e>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4030e4>, <DisassemblerInsn "mov" for 0x4030ec>, <DisassemblerInsn "mov" for 0x4030f4>, <DisassemblerInsn "mov" for 0x4030fc>, <DisassemblerInsn "mov" for 0x403104>, <DisassemblerInsn "mov" for 0x40310c>, <DisassemblerInsn "mov" for 0x403114>, <DisassemblerInsn "mov" for 0x40311c>, <DisassemblerInsn "mov" for 0x403124>, <DisassemblerInsn "mov" for 0x40312c>, <DisassemblerInsn "mov" for 0x403134>, <DisassemblerInsn "mov" for 0x40313c>, <DisassemblerInsn "mov" for 0x403144>, <DisassemblerInsn "mov" for 0x403147>, <DisassemblerInsn "mov" for 0x40314e>, <DisassemblerInsn "mov" for 0x403151>, <DisassemblerInsn "mov" for 0x403158>, <DisassemblerInsn "mov" for 0x40315a>, <DisassemblerInsn "mov" for 0x40315c>, <DisassemblerInsn "shl" for 0x403163>, <DisassemblerInsn "mov" for 0x403165>, <DisassemblerInsn "cmp" for 0x40316c>, <DisassemblerInsn "je" for 0x40316f>]'}, {'block_Idx': 90, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c80>, <DisassemblerInsn "mov" for 0x402c88>, <DisassemblerInsn "mov" for 0x402c92>, <DisassemblerInsn "mov" for 0x402c9c>, <DisassemblerInsn "mov" for 0x402ca1>, <DisassemblerInsn "jmp" for 0x402ca8>]'}, {'block_Idx': 179, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40176a>, <DisassemblerInsn "mov" for 0x401772>, <DisassemblerInsn "mov" for 0x40177a>, <DisassemblerInsn "mov" for 0x401781>, <DisassemblerInsn "mov" for 0x401788>, <DisassemblerInsn "mov" for 0x40178a>, <DisassemblerInsn "mov" for 0x401791>, <DisassemblerInsn "mov" for 0x401794>, <DisassemblerInsn "mov" for 0x40179c>, <DisassemblerInsn "sar" for 0x40179e>, <DisassemblerInsn "movsxd" for 0x4017a1>, <DisassemblerInsn "mov" for 0x4017a4>, <DisassemblerInsn "mov" for 0x4017a8>, <DisassemblerInsn "and" for 0x4017aa>, <DisassemblerInsn "movzx" for 0x4017ad>, <DisassemblerInsn "mov" for 0x4017b1>, <DisassemblerInsn "add" for 0x4017b8>, <DisassemblerInsn "mov" for 0x4017bb>, <DisassemblerInsn "mov" for 0x4017c2>, <DisassemblerInsn "mov" for 0x4017c4>, <DisassemblerInsn "shr" for 0x4017c9>, <DisassemblerInsn "mov" for 0x4017cb>, <DisassemblerInsn "and" for 0x4017d2>, <DisassemblerInsn "cmp" for 0x4017d4>, <DisassemblerInsn "je" for 0x4017d7>]'}, {'block_Idx': 53, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f0a>, <DisassemblerInsn "and" for 0x400f11>, <DisassemblerInsn "cmp" for 0x400f14>, <DisassemblerInsn "je" for 0x400f17>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e60>]'}, {'block_Idx': 256, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fde>, <DisassemblerInsn "mov" for 0x401fe5>, <DisassemblerInsn "mov" for 0x401fed>, <DisassemblerInsn "mov" for 0x401ff5>, <DisassemblerInsn "call" for 0x401ff7>]'}, {'block_Idx': 460, 'blockInsts': '[<DisassemblerInsn "mov" for 0x404892>, <DisassemblerInsn "mov" for 0x404896>, <DisassemblerInsn "mov" for 0x40489c>, <DisassemblerInsn "sar" for 0x4048a2>, <DisassemblerInsn "mov" for 0x4048a4>, <DisassemblerInsn "movsxd" for 0x4048aa>, <DisassemblerInsn "add" for 0x4048ad>, <DisassemblerInsn "mov" for 0x4048b0>, <DisassemblerInsn "xor" for 0x4048b3>, <DisassemblerInsn "mov" for 0x4048b5>, <DisassemblerInsn "mov" for 0x4048bb>, <DisassemblerInsn "lea" for 0x4048c1>, <DisassemblerInsn "pop" for 0x4048c5>, <DisassemblerInsn "pop" for 0x4048c6>, <DisassemblerInsn "ret" for 0x4048c7>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008d8>, <DisassemblerInsn "mov" for 0x4008e0>, <DisassemblerInsn "mov" for 0x4008e7>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f6>, <DisassemblerInsn "mov" for 0x4008fd>, <DisassemblerInsn "mov" for 0x400904>, <DisassemblerInsn "shl" for 0x400906>, <DisassemblerInsn "xor" for 0x400909>, <DisassemblerInsn "cmp" for 0x40090b>, <DisassemblerInsn "cmovl" for 0x40090e>, <DisassemblerInsn "mov" for 0x400912>, <DisassemblerInsn "xor" for 0x40091a>, <DisassemblerInsn "cmp" for 0x40091c>, <DisassemblerInsn "cmovl" for 0x40091f>, <DisassemblerInsn "xor" for 0x400922>, <DisassemblerInsn "cmp" for 0x400925>, <DisassemblerInsn "mov" for 0x400928>, <DisassemblerInsn "cmovl" for 0x40092a>, <DisassemblerInsn "mov" for 0x40092e>, <DisassemblerInsn "add" for 0x400931>, <DisassemblerInsn "mov" for 0x400935>, <DisassemblerInsn "mov" for 0x40093d>, <DisassemblerInsn "mov" for 0x400941>, <DisassemblerInsn "add" for 0x400944>, <DisassemblerInsn "mov" for 0x400948>, <DisassemblerInsn "mov" for 0x400950>, <DisassemblerInsn "mov" for 0x400953>, <DisassemblerInsn "add" for 0x400955>, <DisassemblerInsn "mov" for 0x400958>, <DisassemblerInsn "add" for 0x40095b>, <DisassemblerInsn "mov" for 0x40095f>, <DisassemblerInsn "mov" for 0x400967>, <DisassemblerInsn "mov" for 0x40096b>, <DisassemblerInsn "add" for 0x40096e>, <DisassemblerInsn "mov" for 0x400972>, <DisassemblerInsn "mov" for 0x40097a>, <DisassemblerInsn "cmp" for 0x400981>, <DisassemblerInsn "jl" for 0x400984>]'}, {'block_Idx': 180, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017f9>, <DisassemblerInsn "mov" for 0x401801>, <DisassemblerInsn "mov" for 0x401808>, <DisassemblerInsn "mov" for 0x401810>, <DisassemblerInsn "mov" for 0x401817>, <DisassemblerInsn "sar" for 0x401819>, <DisassemblerInsn "movsxd" for 0x40181c>, <DisassemblerInsn "mov" for 0x40181f>, <DisassemblerInsn "ror" for 0x401822>, <DisassemblerInsn "ror" for 0x401826>, <DisassemblerInsn "ror" for 0x401829>, <DisassemblerInsn "and" for 0x40182d>, <DisassemblerInsn "shl" for 0x401830>, <DisassemblerInsn "mov" for 0x401832>, <DisassemblerInsn "shr" for 0x401834>, <DisassemblerInsn "mov" for 0x401837>, <DisassemblerInsn "mov" for 0x40183e>, <DisassemblerInsn "add" for 0x401840>, <DisassemblerInsn "mov" for 0x401843>, <DisassemblerInsn "mov" for 0x401845>, <DisassemblerInsn "sar" for 0x401847>, <DisassemblerInsn "movsxd" for 0x40184a>, <DisassemblerInsn "mov" for 0x40184d>, <DisassemblerInsn "and" for 0x401850>, <DisassemblerInsn "movzx" for 0x401853>, <DisassemblerInsn "add" for 0x401856>, <DisassemblerInsn "mov" for 0x401859>, <DisassemblerInsn "mov" for 0x40185b>, <DisassemblerInsn "shr" for 0x401860>, <DisassemblerInsn "mov" for 0x401862>, <DisassemblerInsn "and" for 0x401869>, <DisassemblerInsn "xor" for 0x40186b>, <DisassemblerInsn "mov" for 0x40186d>, <DisassemblerInsn "cmp" for 0x401872>, <DisassemblerInsn "mov" for 0x401875>, <DisassemblerInsn "mov" for 0x401877>, <DisassemblerInsn "mov" for 0x40187e>, <DisassemblerInsn "mov" for 0x401885>, <DisassemblerInsn "mov" for 0x40188c>, <DisassemblerInsn "mov" for 0x401893>, <DisassemblerInsn "je" for 0x40189a>]'}, {'block_Idx': 27, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d8e>, <DisassemblerInsn "mov" for 0x400d96>, <DisassemblerInsn "mov" for 0x400d9e>, <DisassemblerInsn "mov" for 0x400da5>, <DisassemblerInsn "shr" for 0x400da7>, <DisassemblerInsn "mov" for 0x400daa>, <DisassemblerInsn "shl" for 0x400db1>, <DisassemblerInsn "shr" for 0x400db4>, <DisassemblerInsn "mov" for 0x400db7>, <DisassemblerInsn "mov" for 0x400dbe>, <DisassemblerInsn "add" for 0x400dc1>, <DisassemblerInsn "mov" for 0x400dc5>, <DisassemblerInsn "mov" for 0x400dcd>, <DisassemblerInsn "ror" for 0x400dd0>, <DisassemblerInsn "ror" for 0x400dd4>, <DisassemblerInsn "ror" for 0x400dd7>, <DisassemblerInsn "mov" for 0x400ddb>, <DisassemblerInsn "shr" for 0x400de2>, <DisassemblerInsn "mov" for 0x400de5>, <DisassemblerInsn "mov" for 0x400dec>, <DisassemblerInsn "cmp" for 0x400df2>, <DisassemblerInsn "jge" for 0x400df5>]'}, {'block_Idx': 64, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401057>, <DisassemblerInsn "mov" for 0x40105f>, <DisassemblerInsn "mov" for 0x401067>, <DisassemblerInsn "ror" for 0x40106a>, <DisassemblerInsn "ror" for 0x40106e>, <DisassemblerInsn "ror" for 0x401071>, <DisassemblerInsn "shr" for 0x401075>, <DisassemblerInsn "mov" for 0x401078>, <DisassemblerInsn "mov" for 0x40107f>, <DisassemblerInsn "mov" for 0x401085>, <DisassemblerInsn "xor" for 0x401087>, <DisassemblerInsn "shr" for 0x40108d>, <DisassemblerInsn "cmp" for 0x401090>, <DisassemblerInsn "cmovb" for 0x401096>, <DisassemblerInsn "mov" for 0x401099>, <DisassemblerInsn "xor" for 0x40109e>, <DisassemblerInsn "cmp" for 0x4010a0>, <DisassemblerInsn "cmovb" for 0x4010a6>, <DisassemblerInsn "mov" for 0x4010a9>, <DisassemblerInsn "and" for 0x4010ab>, <DisassemblerInsn "mov" for 0x4010b1>, <DisassemblerInsn "shr" for 0x4010b3>, <DisassemblerInsn "mov" for 0x4010b6>, <DisassemblerInsn "or" for 0x4010b8>, <DisassemblerInsn "cmp" for 0x4010bb>, <DisassemblerInsn "cmove" for 0x4010be>, <DisassemblerInsn "cmp" for 0x4010c1>, <DisassemblerInsn "cmove" for 0x4010c4>, <DisassemblerInsn "mov" for 0x4010c7>, <DisassemblerInsn "mov" for 0x4010c9>, <DisassemblerInsn "mov" for 0x4010cb>, <DisassemblerInsn "movzx" for 0x4010d2>, <DisassemblerInsn "add" for 0x4010d6>, <DisassemblerInsn "mov" for 0x4010d8>, <DisassemblerInsn "sub" for 0x4010dd>, <DisassemblerInsn "mov" for 0x4010df>, <DisassemblerInsn "cmp" for 0x4010e6>, <DisassemblerInsn "je" for 0x4010e9>]'}, {'block_Idx': 328, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402057>, <DisassemblerInsn "mov" for 0x40205e>, <DisassemblerInsn "mov" for 0x402065>, <DisassemblerInsn "mov" for 0x40206d>, <DisassemblerInsn "add" for 0x40206f>, <DisassemblerInsn "mov" for 0x402072>, <DisassemblerInsn "mov" for 0x402074>, <DisassemblerInsn "mov" for 0x402077>, <DisassemblerInsn "sub" for 0x40207e>, <DisassemblerInsn "mov" for 0x402080>, <DisassemblerInsn "cmp" for 0x402087>, <DisassemblerInsn "jbe" for 0x40208a>]'}, {'block_Idx': 236, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c32>, <DisassemblerInsn "mov" for 0x402c39>, <DisassemblerInsn "mov" for 0x402c41>, <DisassemblerInsn "mov" for 0x402c49>, <DisassemblerInsn "mov" for 0x402c4b>, <DisassemblerInsn "mov" for 0x402c4d>, <DisassemblerInsn "mov" for 0x402c54>, <DisassemblerInsn "mov" for 0x402c5b>, <DisassemblerInsn "jmp" for 0x402c62>]'}, {'block_Idx': 217, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x403291>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4036f4>, <DisassemblerInsn "mov" for 0x4036fc>, <DisassemblerInsn "mov" for 0x403703>, <DisassemblerInsn "mov" for 0x403707>, <DisassemblerInsn "sub" for 0x40370b>, <DisassemblerInsn "xor" for 0x40370d>, <DisassemblerInsn "lea" for 0x40370f>, <DisassemblerInsn "mov" for 0x403716>, <DisassemblerInsn "call" for 0x403718>]'}, {'block_Idx': 227, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d9d>, <DisassemblerInsn "add" for 0x401da4>, <DisassemblerInsn "cmp" for 0x401da7>, <DisassemblerInsn "jae" for 0x401daa>]'}, {'block_Idx': 75, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400f5e>]'}, {'block_Idx': 157, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d09>, <DisassemblerInsn "mov" for 0x402d11>, <DisassemblerInsn "mov" for 0x402d13>, <DisassemblerInsn "jmp" for 0x402d1a>]'}, {'block_Idx': 418, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402826>]'}, {'block_Idx': 148, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403953>, <DisassemblerInsn "mov" for 0x403956>, <DisassemblerInsn "mov" for 0x40395b>, <DisassemblerInsn "add" for 0x403962>, <DisassemblerInsn "ret" for 0x403966>]'}, {'block_Idx': 178, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d87>, <DisassemblerInsn "mov" for 0x402d8e>, <DisassemblerInsn "mov" for 0x402d95>, <DisassemblerInsn "mov" for 0x402d9c>, <DisassemblerInsn "mov" for 0x402da4>, <DisassemblerInsn "mov" for 0x402dac>, <DisassemblerInsn "mov" for 0x402db4>, <DisassemblerInsn "xor" for 0x402dbc>, <DisassemblerInsn "cmp" for 0x402dbf>, <DisassemblerInsn "mov" for 0x402dc2>, <DisassemblerInsn "mov" for 0x402dc5>, <DisassemblerInsn "mov" for 0x402dcd>, <DisassemblerInsn "mov" for 0x402dd5>, <DisassemblerInsn "mov" for 0x402dd8>, <DisassemblerInsn "mov" for 0x402de0>, <DisassemblerInsn "mov" for 0x402de3>, <DisassemblerInsn "mov" for 0x402deb>, <DisassemblerInsn "mov" for 0x402df2>, <DisassemblerInsn "mov" for 0x402df9>, <DisassemblerInsn "mov" for 0x402e00>, <DisassemblerInsn "mov" for 0x402e08>, <DisassemblerInsn "jle" for 0x402e10>]'}, {'block_Idx': 214, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4034ce>]'}, {'block_Idx': 177, 'blockInsts': '[<DisassemblerInsn "lea" for 0x4030c5>, <DisassemblerInsn "lea" for 0x4030cc>, <DisassemblerInsn "mov" for 0x4030d3>, <DisassemblerInsn "lea" for 0x4030d8>, <DisassemblerInsn "call" for 0x4030df>]'}, {'block_Idx': 46, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e62>, <DisassemblerInsn "add" for 0x400e69>, <DisassemblerInsn "mov" for 0x400e6c>, <DisassemblerInsn "mov" for 0x400e71>, <DisassemblerInsn "mov" for 0x400e78>, <DisassemblerInsn "jmp" for 0x400e7f>]'}, {'block_Idx': 222, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4019b1>]'}, {'block_Idx': 1, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400553>, <DisassemblerInsn "mov" for 0x40055a>, <DisassemblerInsn "mov" for 0x400562>, <DisassemblerInsn "mov" for 0x40056a>, <DisassemblerInsn "cmp" for 0x40056f>, <DisassemblerInsn "cmovg" for 0x400572>, <DisassemblerInsn "mov" for 0x400575>, <DisassemblerInsn "mov" for 0x400577>, <DisassemblerInsn "add" for 0x40057e>, <DisassemblerInsn "call" for 0x400585>]'}, {'block_Idx': 142, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bfb>, <DisassemblerInsn "mov" for 0x400c03>, <DisassemblerInsn "mov" for 0x400c09>, <DisassemblerInsn "cmp" for 0x400c10>, <DisassemblerInsn "jle" for 0x400c13>]'}, {'block_Idx': 32, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40371d>, <DisassemblerInsn "mov" for 0x403725>, <DisassemblerInsn "mov" for 0x40372f>, <DisassemblerInsn "mov" for 0x403739>, <DisassemblerInsn "mov" for 0x40373e>, <DisassemblerInsn "jmp" for 0x403745>]'}, {'block_Idx': 158, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401714>, <DisassemblerInsn "mov" for 0x40171b>, <DisassemblerInsn "cmp" for 0x401722>, <DisassemblerInsn "mov" for 0x401725>, <DisassemblerInsn "je" for 0x40172c>]'}, {'block_Idx': 40, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c4a>, <DisassemblerInsn "mov" for 0x400c52>, <DisassemblerInsn "mov" for 0x400c5a>, <DisassemblerInsn "mov" for 0x400c5c>, <DisassemblerInsn "mov" for 0x400c5f>, <DisassemblerInsn "mov" for 0x400c67>, <DisassemblerInsn "jmp" for 0x400c6e>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40098a>, <DisassemblerInsn "mov" for 0x400992>, <DisassemblerInsn "ror" for 0x400994>, <DisassemblerInsn "ror" for 0x400998>, <DisassemblerInsn "ror" for 0x40099b>, <DisassemblerInsn "shr" for 0x40099f>, <DisassemblerInsn "mov" for 0x4009a2>, <DisassemblerInsn "shl" for 0x4009a9>, <DisassemblerInsn "mov" for 0x4009ac>, <DisassemblerInsn "ror" for 0x4009af>, <DisassemblerInsn "ror" for 0x4009b3>, <DisassemblerInsn "ror" for 0x4009b6>, <DisassemblerInsn "mov" for 0x4009ba>, <DisassemblerInsn "shr" for 0x4009c1>, <DisassemblerInsn "or" for 0x4009c4>, <DisassemblerInsn "cmp" for 0x4009c6>, <DisassemblerInsn "jne" for 0x4009cb>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f15>, <DisassemblerInsn "mov" for 0x402f1d>, <DisassemblerInsn "mov" for 0x402f24>, <DisassemblerInsn "mov" for 0x402f2c>, <DisassemblerInsn "mov" for 0x402f34>, <DisassemblerInsn "mov" for 0x402f3c>, <DisassemblerInsn "mov" for 0x402f44>, <DisassemblerInsn "add" for 0x402f4b>, <DisassemblerInsn "movsxd" for 0x402f4f>, <DisassemblerInsn "cmp" for 0x402f52>, <DisassemblerInsn "mov" for 0x402f55>, <DisassemblerInsn "mov" for 0x402f5c>, <DisassemblerInsn "mov" for 0x402f64>, <DisassemblerInsn "mov" for 0x402f6c>, <DisassemblerInsn "jl" for 0x402f74>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40058a>, <DisassemblerInsn "mov" for 0x400592>, <DisassemblerInsn "mov" for 0x40059a>, <DisassemblerInsn "mov" for 0x4005a1>, <DisassemblerInsn "mov" for 0x4005a4>, <DisassemblerInsn "mov" for 0x4005ac>, <DisassemblerInsn "mov" for 0x4005b3>, <DisassemblerInsn "xor" for 0x4005b5>, <DisassemblerInsn "cmp" for 0x4005b7>, <DisassemblerInsn "mov" for 0x4005ba>, <DisassemblerInsn "mov" for 0x4005c1>, <DisassemblerInsn "mov" for 0x4005c8>, <DisassemblerInsn "mov" for 0x4005cf>, <DisassemblerInsn "je" for 0x4005d7>]'}, {'block_Idx': 374, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40211c>, <DisassemblerInsn "cmp" for 0x402123>, <DisassemblerInsn "jle" for 0x402126>]'}, {'block_Idx': 240, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401df8>, <DisassemblerInsn "mov" for 0x401dff>, <DisassemblerInsn "mov" for 0x401e06>, <DisassemblerInsn "mov" for 0x401e0d>, <DisassemblerInsn "mov" for 0x401e0f>, <DisassemblerInsn "xor" for 0x401e17>, <DisassemblerInsn "mov" for 0x401e19>, <DisassemblerInsn "mov" for 0x401e20>, <DisassemblerInsn "mov" for 0x401e27>, <DisassemblerInsn "mov" for 0x401e2f>, <DisassemblerInsn "mov" for 0x401e37>, <DisassemblerInsn "mov" for 0x401e3e>, <DisassemblerInsn "mov" for 0x401e45>, <DisassemblerInsn "mov" for 0x401e4d>, <DisassemblerInsn "mov" for 0x401e55>, <DisassemblerInsn "mov" for 0x401e5c>, <DisassemblerInsn "mov" for 0x401e63>, <DisassemblerInsn "sar" for 0x401e65>, <DisassemblerInsn "movsxd" for 0x401e68>, <DisassemblerInsn "mov" for 0x401e6b>, <DisassemblerInsn "ror" for 0x401e6e>, <DisassemblerInsn "ror" for 0x401e72>, <DisassemblerInsn "ror" for 0x401e75>, <DisassemblerInsn "and" for 0x401e79>, <DisassemblerInsn "mov" for 0x401e7c>, <DisassemblerInsn "shl" for 0x401e83>, <DisassemblerInsn "mov" for 0x401e85>, <DisassemblerInsn "cmp" for 0x401e8c>, <DisassemblerInsn "jge" for 0x401e8f>]'}, {'block_Idx': 168, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40172e>]'}, {'block_Idx': 229, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b50>, <DisassemblerInsn "cmp" for 0x402b58>, <DisassemblerInsn "jle" for 0x402b5b>]'}, {'block_Idx': 231, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401bdf>]'}, {'block_Idx': 19, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c73>, <DisassemblerInsn "and" for 0x400c7a>, <DisassemblerInsn "cmp" for 0x400c7f>, <DisassemblerInsn "je" for 0x400c84>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4037b0>, <DisassemblerInsn "add" for 0x4037b7>, <DisassemblerInsn "pop" for 0x4037be>, <DisassemblerInsn "ret" for 0x4037bf>]'}, {'block_Idx': 370, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4024d8>]'}, {'block_Idx': 124, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401472>, <DisassemblerInsn "mov" for 0x401479>, <DisassemblerInsn "mov" for 0x401481>, <DisassemblerInsn "sar" for 0x401483>, <DisassemblerInsn "movsxd" for 0x401486>, <DisassemblerInsn "mov" for 0x401489>, <DisassemblerInsn "ror" for 0x40148c>, <DisassemblerInsn "ror" for 0x401490>, <DisassemblerInsn "ror" for 0x401493>, <DisassemblerInsn "and" for 0x401497>, <DisassemblerInsn "shl" for 0x40149a>, <DisassemblerInsn "mov" for 0x40149c>, <DisassemblerInsn "shr" for 0x4014a3>, <DisassemblerInsn "add" for 0x4014a6>, <DisassemblerInsn "imul" for 0x4014a9>, <DisassemblerInsn "mov" for 0x4014af>, <DisassemblerInsn "mov" for 0x4014b6>, <DisassemblerInsn "jmp" for 0x4014bd>]'}, {'block_Idx': 221, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019c3>, <DisassemblerInsn "sub" for 0x4019ca>, <DisassemblerInsn "jne" for 0x4019cd>]'}, {'block_Idx': 340, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40239b>, <DisassemblerInsn "mov" for 0x4023a2>, <DisassemblerInsn "mov" for 0x4023a9>, <DisassemblerInsn "mov" for 0x4023ab>, <DisassemblerInsn "mov" for 0x4023ad>, <DisassemblerInsn "add" for 0x4023b0>, <DisassemblerInsn "mov" for 0x4023b4>, <DisassemblerInsn "add" for 0x4023bc>, <DisassemblerInsn "and" for 0x4023c0>, <DisassemblerInsn "mov" for 0x4023c4>, <DisassemblerInsn "mov" for 0x4023cc>, <DisassemblerInsn "cmp" for 0x4023d1>, <DisassemblerInsn "mov" for 0x4023d5>, <DisassemblerInsn "mov" for 0x4023dd>, <DisassemblerInsn "jb" for 0x4023e4>]'}, {'block_Idx': 167, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403699>, <DisassemblerInsn "mov" for 0x4036a1>, <DisassemblerInsn "mov" for 0x4036a9>, <DisassemblerInsn "mov" for 0x4036b1>, <DisassemblerInsn "imul" for 0x4036b8>, <DisassemblerInsn "mov" for 0x4036bb>, <DisassemblerInsn "mov" for 0x4036c0>, <DisassemblerInsn "cmp" for 0x4036c5>, <DisassemblerInsn "cmove" for 0x4036c8>, <DisassemblerInsn "imul" for 0x4036cb>, <DisassemblerInsn "mov" for 0x4036ce>, <DisassemblerInsn "mov" for 0x4036d0>, <DisassemblerInsn "mov" for 0x4036d7>, <DisassemblerInsn "mov" for 0x4036df>, <DisassemblerInsn "add" for 0x4036e1>, <DisassemblerInsn "mov" for 0x4036e4>, <DisassemblerInsn "cdq" for 0x4036e9>, <DisassemblerInsn "idiv" for 0x4036ea>, <DisassemblerInsn "mov" for 0x4036ec>, <DisassemblerInsn "cmp" for 0x4036f0>, <DisassemblerInsn "jle" for 0x4036f2>]'}, {'block_Idx': 207, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4031d5>, <DisassemblerInsn "mov" for 0x4031dd>, <DisassemblerInsn "mov" for 0x4031e4>, <DisassemblerInsn "mov" for 0x4031ec>, <DisassemblerInsn "mov" for 0x4031f3>, <DisassemblerInsn "mov" for 0x4031fb>, <DisassemblerInsn "mov" for 0x403202>, <DisassemblerInsn "mov" for 0x40320a>, <DisassemblerInsn "sub" for 0x40320e>, <DisassemblerInsn "shl" for 0x403211>, <DisassemblerInsn "mov" for 0x403213>, <DisassemblerInsn "mov" for 0x403215>, <DisassemblerInsn "mov" for 0x403218>, <DisassemblerInsn "add" for 0x40321b>, <DisassemblerInsn "mov" for 0x40321f>, <DisassemblerInsn "mov" for 0x403223>, <DisassemblerInsn "mov" for 0x40322a>, <DisassemblerInsn "mov" for 0x403232>, <DisassemblerInsn "mov" for 0x40323a>, <DisassemblerInsn "mov" for 0x403242>, <DisassemblerInsn "mov" for 0x403249>, <DisassemblerInsn "mov" for 0x403251>, <DisassemblerInsn "add" for 0x403259>, <DisassemblerInsn "movsxd" for 0x40325d>, <DisassemblerInsn "cmp" for 0x403260>, <DisassemblerInsn "mov" for 0x403263>, <DisassemblerInsn "mov" for 0x403265>, <DisassemblerInsn "mov" for 0x40326c>, <DisassemblerInsn "mov" for 0x403274>, <DisassemblerInsn "mov" for 0x40327c>, <DisassemblerInsn "mov" for 0x403284>, <DisassemblerInsn "jl" for 0x40328b>]'}, {'block_Idx': 208, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403171>, <DisassemblerInsn "mov" for 0x403179>, <DisassemblerInsn "mov" for 0x403181>, <DisassemblerInsn "mov" for 0x403189>, <DisassemblerInsn "mov" for 0x403190>, <DisassemblerInsn "mov" for 0x403197>, <DisassemblerInsn "mov" for 0x40319f>, <DisassemblerInsn "sub" for 0x4031a2>, <DisassemblerInsn "mov" for 0x4031a4>, <DisassemblerInsn "shl" for 0x4031a6>, <DisassemblerInsn "mov" for 0x4031a8>, <DisassemblerInsn "mov" for 0x4031b0>, <DisassemblerInsn "add" for 0x4031b3>, <DisassemblerInsn "mov" for 0x4031b7>, <DisassemblerInsn "mov" for 0x4031ba>, <DisassemblerInsn "mov" for 0x4031bc>, <DisassemblerInsn "mov" for 0x4031c3>, <DisassemblerInsn "mov" for 0x4031cb>, <DisassemblerInsn "jmp" for 0x4031d3>]'}, {'block_Idx': 184, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403500>, <DisassemblerInsn "mov" for 0x403508>, <DisassemblerInsn "mov" for 0x403510>, <DisassemblerInsn "mov" for 0x403517>, <DisassemblerInsn "mov" for 0x40351f>, <DisassemblerInsn "mov" for 0x403523>, <DisassemblerInsn "mov" for 0x403528>, <DisassemblerInsn "mov" for 0x40352c>, <DisassemblerInsn "xor" for 0x403531>, <DisassemblerInsn "mov" for 0x403533>, <DisassemblerInsn "mov" for 0x403537>, <DisassemblerInsn "mov" for 0x40353c>, <DisassemblerInsn "mov" for 0x403541>, <DisassemblerInsn "jmp" for 0x403549>]'}, {'block_Idx': 209, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f7a>, <DisassemblerInsn "mov" for 0x402f82>, <DisassemblerInsn "mov" for 0x402f8a>, <DisassemblerInsn "mov" for 0x402f91>, <DisassemblerInsn "mov" for 0x402f99>, <DisassemblerInsn "mov" for 0x402f9b>, <DisassemblerInsn "mov" for 0x402fa2>, <DisassemblerInsn "mov" for 0x402fa4>, <DisassemblerInsn "mov" for 0x402fab>, <DisassemblerInsn "mov" for 0x402fb2>, <DisassemblerInsn "mov" for 0x402fba>, <DisassemblerInsn "mov" for 0x402fc2>, <DisassemblerInsn "mov" for 0x402fca>, <DisassemblerInsn "mov" for 0x402fd1>, <DisassemblerInsn "mov" for 0x402fd9>, <DisassemblerInsn "mov" for 0x402fe0>, <DisassemblerInsn "mov" for 0x402fe8>, <DisassemblerInsn "add" for 0x402ff0>, <DisassemblerInsn "movsxd" for 0x402ff4>, <DisassemblerInsn "cmp" for 0x402ff7>, <DisassemblerInsn "mov" for 0x402ffa>, <DisassemblerInsn "mov" for 0x402ffd>, <DisassemblerInsn "mov" for 0x403005>, <DisassemblerInsn "mov" for 0x40300d>, <DisassemblerInsn "mov" for 0x403014>, <DisassemblerInsn "mov" for 0x40301c>, <DisassemblerInsn "mov" for 0x403024>, <DisassemblerInsn "mov" for 0x40302c>, <DisassemblerInsn "jl" for 0x403033>]'}, {'block_Idx': 211, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a34>, <DisassemblerInsn "mov" for 0x401a3b>, <DisassemblerInsn "mov" for 0x401a42>, <DisassemblerInsn "mov" for 0x401a4a>, <DisassemblerInsn "sar" for 0x401a4c>, <DisassemblerInsn "movsxd" for 0x401a4f>, <DisassemblerInsn "mov" for 0x401a52>, <DisassemblerInsn "ror" for 0x401a55>, <DisassemblerInsn "ror" for 0x401a59>, <DisassemblerInsn "ror" for 0x401a5c>, <DisassemblerInsn "and" for 0x401a60>, <DisassemblerInsn "mov" for 0x401a63>, <DisassemblerInsn "shl" for 0x401a6a>, <DisassemblerInsn "mov" for 0x401a6c>, <DisassemblerInsn "cmp" for 0x401a73>, <DisassemblerInsn "jge" for 0x401a76>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007d5>, <DisassemblerInsn "mov" for 0x4007dc>, <DisassemblerInsn "mov" for 0x4007e3>, <DisassemblerInsn "mov" for 0x4007eb>, <DisassemblerInsn "mov" for 0x4007f2>, <DisassemblerInsn "mov" for 0x4007f4>, <DisassemblerInsn "add" for 0x4007f7>, <DisassemblerInsn "mov" for 0x4007fa>, <DisassemblerInsn "mov" for 0x4007fc>, <DisassemblerInsn "call" for 0x4007fe>]'}, {'block_Idx': 163, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403296>, <DisassemblerInsn "cmp" for 0x40329d>, <DisassemblerInsn "jne" for 0x4032a0>]'}, {'block_Idx': 258, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4028ab>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c2a>, <DisassemblerInsn "mov" for 0x400c31>, <DisassemblerInsn "shr" for 0x400c36>, <DisassemblerInsn "mov" for 0x400c38>, <DisassemblerInsn "and" for 0x400c3f>, <DisassemblerInsn "cmp" for 0x400c41>, <DisassemblerInsn "jne" for 0x400c44>]'}, {'block_Idx': 125, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40144d>]'}, {'block_Idx': 44, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e2d>]'}, {'block_Idx': 252, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c7d>, <DisassemblerInsn "mov" for 0x401c85>, <DisassemblerInsn "mov" for 0x401c8c>, <DisassemblerInsn "mov" for 0x401c93>, <DisassemblerInsn "mov" for 0x401c9b>, <DisassemblerInsn "shr" for 0x401ca3>, <DisassemblerInsn "mov" for 0x401ca7>, <DisassemblerInsn "add" for 0x401caa>, <DisassemblerInsn "mov" for 0x401cae>, <DisassemblerInsn "add" for 0x401cb0>, <DisassemblerInsn "mov" for 0x401cb3>, <DisassemblerInsn "shl" for 0x401cba>, <DisassemblerInsn "mov" for 0x401cbd>, <DisassemblerInsn "mov" for 0x401cc4>, <DisassemblerInsn "sar" for 0x401ccc>, <DisassemblerInsn "movsxd" for 0x401cd0>, <DisassemblerInsn "mov" for 0x401cd3>, <DisassemblerInsn "ror" for 0x401cd7>, <DisassemblerInsn "ror" for 0x401cdb>, <DisassemblerInsn "ror" for 0x401cde>, <DisassemblerInsn "shl" for 0x401ce2>, <DisassemblerInsn "mov" for 0x401ce4>, <DisassemblerInsn "mov" for 0x401ceb>, <DisassemblerInsn "xor" for 0x401cee>, <DisassemblerInsn "sub" for 0x401cf0>, <DisassemblerInsn "shr" for 0x401cf3>, <DisassemblerInsn "mov" for 0x401cf5>, <DisassemblerInsn "add" for 0x401cfc>, <DisassemblerInsn "mov" for 0x401cfe>, <DisassemblerInsn "or" for 0x401d00>, <DisassemblerInsn "mov" for 0x401d02>, <DisassemblerInsn "mov" for 0x401d09>, <DisassemblerInsn "mov" for 0x401d11>, <DisassemblerInsn "mov" for 0x401d19>, <DisassemblerInsn "mov" for 0x401d20>, <DisassemblerInsn "mov" for 0x401d27>, <DisassemblerInsn "sub" for 0x401d2c>, <DisassemblerInsn "mov" for 0x401d2e>, <DisassemblerInsn "shl" for 0x401d35>, <DisassemblerInsn "mov" for 0x401d37>, <DisassemblerInsn "sar" for 0x401d3e>, <DisassemblerInsn "mov" for 0x401d40>, <DisassemblerInsn "mov" for 0x401d48>, <DisassemblerInsn "mov" for 0x401d4b>, <DisassemblerInsn "add" for 0x401d4e>, <DisassemblerInsn "mov" for 0x401d52>, <DisassemblerInsn "movsxd" for 0x401d5a>, <DisassemblerInsn "cmp" for 0x401d5d>, <DisassemblerInsn "jge" for 0x401d60>]'}, {'block_Idx': 100, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40122a>]'}, {'block_Idx': 313, 'blockInsts': '[<DisassemblerInsn "sub" for 0x4048d0>, <DisassemblerInsn "mov" for 0x4048d7>, <DisassemblerInsn "mov" for 0x4048de>, <DisassemblerInsn "mov" for 0x4048e5>, <DisassemblerInsn "mov" for 0x4048ed>, <DisassemblerInsn "add" for 0x4048f0>, <DisassemblerInsn "mov" for 0x4048f4>, <DisassemblerInsn "mov" for 0x4048fc>, <DisassemblerInsn "mov" for 0x4048ff>, <DisassemblerInsn "mov" for 0x404906>, <DisassemblerInsn "mov" for 0x40490a>, <DisassemblerInsn "mov" for 0x404912>, <DisassemblerInsn "sar" for 0x404914>, <DisassemblerInsn "movsxd" for 0x404917>, <DisassemblerInsn "mov" for 0x40491a>, <DisassemblerInsn "ror" for 0x40491d>, <DisassemblerInsn "ror" for 0x404921>, <DisassemblerInsn "ror" for 0x404924>, <DisassemblerInsn "and" for 0x404928>, <DisassemblerInsn "shl" for 0x40492b>, <DisassemblerInsn "mov" for 0x40492d>, <DisassemblerInsn "shr" for 0x404934>, <DisassemblerInsn "mov" for 0x404937>, <DisassemblerInsn "add" for 0x40493e>, <DisassemblerInsn "mov" for 0x404941>, <DisassemblerInsn "mov" for 0x404948>, <DisassemblerInsn "cmp" for 0x40494b>, <DisassemblerInsn "jle" for 0x40494e>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019b6>, <DisassemblerInsn "test" for 0x4019bd>, <DisassemblerInsn "je" for 0x4019bf>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40356a>, <DisassemblerInsn "mov" for 0x403572>, <DisassemblerInsn "mov" for 0x40357a>, <DisassemblerInsn "mov" for 0x40357f>, <DisassemblerInsn "mov" for 0x403584>, <DisassemblerInsn "mov" for 0x403589>, <DisassemblerInsn "mov" for 0x40358e>, <DisassemblerInsn "mov" for 0x403593>, <DisassemblerInsn "mov" for 0x40359b>, <DisassemblerInsn "mov" for 0x4035a0>, <DisassemblerInsn "mov" for 0x4035a5>, <DisassemblerInsn "mov" for 0x4035aa>, <DisassemblerInsn "mov" for 0x4035af>, <DisassemblerInsn "mov" for 0x4035b2>, <DisassemblerInsn "mov" for 0x4035b5>, <DisassemblerInsn "mov" for 0x4035b7>, <DisassemblerInsn "sar" for 0x4035b9>, <DisassemblerInsn "sub" for 0x4035bb>, <DisassemblerInsn "mov" for 0x4035bd>, <DisassemblerInsn "add" for 0x4035c1>, <DisassemblerInsn "mov" for 0x4035c3>, <DisassemblerInsn "mov" for 0x4035c5>, <DisassemblerInsn "shl" for 0x4035c9>, <DisassemblerInsn "mov" for 0x4035cb>, <DisassemblerInsn "cmp" for 0x4035cf>, <DisassemblerInsn "je" for 0x4035d2>]'}, {'block_Idx': 188, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402fc2>, <DisassemblerInsn "mov" for 0x402fca>, <DisassemblerInsn "mov" for 0x402fd1>, <DisassemblerInsn "mov" for 0x402fd9>, <DisassemblerInsn "mov" for 0x402fe0>, <DisassemblerInsn "mov" for 0x402fe8>, <DisassemblerInsn "add" for 0x402ff0>, <DisassemblerInsn "movsxd" for 0x402ff4>, <DisassemblerInsn "cmp" for 0x402ff7>, <DisassemblerInsn "mov" for 0x402ffa>, <DisassemblerInsn "mov" for 0x402ffd>, <DisassemblerInsn "mov" for 0x403005>, <DisassemblerInsn "mov" for 0x40300d>, <DisassemblerInsn "mov" for 0x403014>, <DisassemblerInsn "mov" for 0x40301c>, <DisassemblerInsn "mov" for 0x403024>, <DisassemblerInsn "mov" for 0x40302c>, <DisassemblerInsn "jl" for 0x403033>]'}, {'block_Idx': 82, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401052>]'}, {'block_Idx': 98, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401255>]'}, {'block_Idx': 233, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401db0>, <DisassemblerInsn "mov" for 0x401db8>, <DisassemblerInsn "mov" for 0x401dc0>, <DisassemblerInsn "mov" for 0x401dc8>, <DisassemblerInsn "and" for 0x401dcf>, <DisassemblerInsn "mov" for 0x401dd2>, <DisassemblerInsn "mov" for 0x401dd9>, <DisassemblerInsn "mov" for 0x401ddb>, <DisassemblerInsn "mov" for 0x401de2>, <DisassemblerInsn "mov" for 0x401de7>, <DisassemblerInsn "cmp" for 0x401def>, <DisassemblerInsn "je" for 0x401df2>]'}, {'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400664>, <DisassemblerInsn "mov" for 0x40066b>, <DisassemblerInsn "mov" for 0x400672>, <DisassemblerInsn "mov" for 0x400679>, <DisassemblerInsn "add" for 0x40067b>, <DisassemblerInsn "mov" for 0x40067d>, <DisassemblerInsn "mov" for 0x400684>, <DisassemblerInsn "cmp" for 0x400689>, <DisassemblerInsn "mov" for 0x40068b>, <DisassemblerInsn "jb" for 0x400692>]'}, {'block_Idx': 358, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402207>, <DisassemblerInsn "cmp" for 0x40220e>, <DisassemblerInsn "jle" for 0x402211>]'}, {'block_Idx': 72, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011f4>, <DisassemblerInsn "xor" for 0x4011fc>, <DisassemblerInsn "lea" for 0x4011fe>, <DisassemblerInsn "mov" for 0x401205>, <DisassemblerInsn "call" for 0x401207>]'}, {'block_Idx': 135, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40145b>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009d1>, <DisassemblerInsn "mov" for 0x4009d9>, <DisassemblerInsn "mov" for 0x4009e1>, <DisassemblerInsn "mov" for 0x4009e9>, <DisassemblerInsn "mov" for 0x4009ef>, <DisassemblerInsn "add" for 0x4009f2>, <DisassemblerInsn "mov" for 0x4009f6>, <DisassemblerInsn "mov" for 0x4009fe>, <DisassemblerInsn "add" for 0x400a01>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "mov" for 0x400a0d>, <DisassemblerInsn "mov" for 0x400a15>, <DisassemblerInsn "mov" for 0x400a1a>, <DisassemblerInsn "mov" for 0x400a22>, <DisassemblerInsn "mov" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a31>, <DisassemblerInsn "mov" for 0x400a39>, <DisassemblerInsn "mov" for 0x400a40>, <DisassemblerInsn "mov" for 0x400a48>, <DisassemblerInsn "sar" for 0x400a4a>, <DisassemblerInsn "movsxd" for 0x400a4d>, <DisassemblerInsn "mov" for 0x400a50>, <DisassemblerInsn "mov" for 0x400a53>, <DisassemblerInsn "and" for 0x400a55>, <DisassemblerInsn "mov" for 0x400a58>, <DisassemblerInsn "movzx" for 0x400a5f>, <DisassemblerInsn "mov" for 0x400a62>, <DisassemblerInsn "mov" for 0x400a69>, <DisassemblerInsn "add" for 0x400a6b>, <DisassemblerInsn "mov" for 0x400a6e>, <DisassemblerInsn "sar" for 0x400a70>, <DisassemblerInsn "movsxd" for 0x400a73>, <DisassemblerInsn "mov" for 0x400a76>, <DisassemblerInsn "ror" for 0x400a79>, <DisassemblerInsn "ror" for 0x400a7d>, <DisassemblerInsn "ror" for 0x400a80>, <DisassemblerInsn "and" for 0x400a84>, <DisassemblerInsn "shl" for 0x400a87>, <DisassemblerInsn "mov" for 0x400a89>, <DisassemblerInsn "shr" for 0x400a90>, <DisassemblerInsn "mov" for 0x400a93>, <DisassemblerInsn "mov" for 0x400a9a>, <DisassemblerInsn "add" for 0x400a9c>, <DisassemblerInsn "sar" for 0x400a9f>, <DisassemblerInsn "movsxd" for 0x400aa2>, <DisassemblerInsn "mov" for 0x400aa5>, <DisassemblerInsn "ror" for 0x400aa8>, <DisassemblerInsn "ror" for 0x400aac>, <DisassemblerInsn "ror" for 0x400aaf>, <DisassemblerInsn "shl" for 0x400ab3>, <DisassemblerInsn "mov" for 0x400ab5>, <DisassemblerInsn "shr" for 0x400abc>, <DisassemblerInsn "mov" for 0x400abf>, <DisassemblerInsn "add" for 0x400ac2>, <DisassemblerInsn "shl" for 0x400ac6>, <DisassemblerInsn "sar" for 0x400ac9>, <DisassemblerInsn "movsxd" for 0x400acd>, <DisassemblerInsn "mov" for 0x400ad0>, <DisassemblerInsn "ror" for 0x400ad4>, <DisassemblerInsn "ror" for 0x400ad8>, <DisassemblerInsn "ror" for 0x400adb>, <DisassemblerInsn "shl" for 0x400adf>, <DisassemblerInsn "mov" for 0x400ae1>, <DisassemblerInsn "shr" for 0x400ae9>, <DisassemblerInsn "add" for 0x400aec>, <DisassemblerInsn "mov" for 0x400aef>, <DisassemblerInsn "mov" for 0x400af6>, <DisassemblerInsn "or" for 0x400af8>, <DisassemblerInsn "mov" for 0x400afa>, <DisassemblerInsn "shl" for 0x400b01>, <DisassemblerInsn "mov" for 0x400b04>, <DisassemblerInsn "add" for 0x400b0b>, <DisassemblerInsn "mov" for 0x400b0d>, <DisassemblerInsn "mov" for 0x400b0f>, <DisassemblerInsn "cmp" for 0x400b16>, <DisassemblerInsn "jle" for 0x400b18>]'}, {'block_Idx': 144, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401614>, <DisassemblerInsn "mov" for 0x40161b>, <DisassemblerInsn "mov" for 0x401622>, <DisassemblerInsn "mov" for 0x40162a>, <DisassemblerInsn "mov" for 0x401632>, <DisassemblerInsn "mov" for 0x40163a>, <DisassemblerInsn "mov" for 0x401642>, <DisassemblerInsn "mov" for 0x40164a>, <DisassemblerInsn "mov" for 0x401652>, <DisassemblerInsn "add" for 0x401655>, <DisassemblerInsn "mov" for 0x401659>, <DisassemblerInsn "mov" for 0x401661>, <DisassemblerInsn "mov" for 0x401665>, <DisassemblerInsn "mov" for 0x401669>, <DisassemblerInsn "mov" for 0x40166c>, <DisassemblerInsn "add" for 0x40166f>, <DisassemblerInsn "mov" for 0x401673>, <DisassemblerInsn "mov" for 0x40167b>, <DisassemblerInsn "mov" for 0x40167e>, <DisassemblerInsn "cmp" for 0x401680>, <DisassemblerInsn "mov" for 0x401683>, <DisassemblerInsn "mov" for 0x40168a>, <DisassemblerInsn "mov" for 0x401691>, <DisassemblerInsn "jle" for 0x401698>]'}, {'block_Idx': 257, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fa7>, <DisassemblerInsn "mov" for 0x401faf>, <DisassemblerInsn "mov" for 0x401fb7>, <DisassemblerInsn "mov" for 0x401fbf>, <DisassemblerInsn "mov" for 0x401fc1>, <DisassemblerInsn "mov" for 0x401fc3>, <DisassemblerInsn "mov" for 0x401fca>, <DisassemblerInsn "mov" for 0x401fd1>, <DisassemblerInsn "jmp" for 0x401fd9>]'}, {'block_Idx': 371, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402a73>, <DisassemblerInsn "mov" for 0x402a7b>, <DisassemblerInsn "mov" for 0x402a83>, <DisassemblerInsn "mov" for 0x402a8a>, <DisassemblerInsn "xor" for 0x402a91>, <DisassemblerInsn "cmp" for 0x402a93>, <DisassemblerInsn "mov" for 0x402a97>, <DisassemblerInsn "mov" for 0x402a9f>, <DisassemblerInsn "mov" for 0x402aa6>, <DisassemblerInsn "mov" for 0x402aad>, <DisassemblerInsn "je" for 0x402ab5>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403778>, <DisassemblerInsn "mov" for 0x40377f>, <DisassemblerInsn "mov" for 0x403784>, <DisassemblerInsn "mov" for 0x403788>, <DisassemblerInsn "mov" for 0x40378c>, <DisassemblerInsn "mov" for 0x403794>, <DisassemblerInsn "add" for 0x403797>, <DisassemblerInsn "mov" for 0x40379e>, <DisassemblerInsn "sub" for 0x4037a5>, <DisassemblerInsn "mov" for 0x4037a7>, <DisassemblerInsn "mov" for 0x4037a9>, <DisassemblerInsn "mov" for 0x4037b0>, <DisassemblerInsn "add" for 0x4037b7>, <DisassemblerInsn "pop" for 0x4037be>, <DisassemblerInsn "ret" for 0x4037bf>]'}, {'block_Idx': 262, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d66>, <DisassemblerInsn "mov" for 0x401d6e>, <DisassemblerInsn "mov" for 0x401d76>, <DisassemblerInsn "mov" for 0x401d7e>, <DisassemblerInsn "mov" for 0x401d80>, <DisassemblerInsn "mov" for 0x401d82>, <DisassemblerInsn "mov" for 0x401d89>, <DisassemblerInsn "mov" for 0x401d90>, <DisassemblerInsn "jmp" for 0x401d98>]'}, {'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401969>, <DisassemblerInsn "mov" for 0x401970>, <DisassemblerInsn "mov" for 0x401977>, <DisassemblerInsn "mov" for 0x40197e>, <DisassemblerInsn "mov" for 0x401985>, <DisassemblerInsn "mov" for 0x40198c>, <DisassemblerInsn "cmp" for 0x401993>, <DisassemblerInsn "jle" for 0x401996>]'}, {'block_Idx': 437, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x402882>, <DisassemblerInsn "jl" for 0x402885>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40074e>, <DisassemblerInsn "mov" for 0x400756>, <DisassemblerInsn "mov" for 0x40075e>, <DisassemblerInsn "mov" for 0x400766>, <DisassemblerInsn "mov" for 0x400769>, <DisassemblerInsn "mov" for 0x400771>, <DisassemblerInsn "mov" for 0x400778>, <DisassemblerInsn "mov" for 0x40077a>, <DisassemblerInsn "mov" for 0x40077c>, <DisassemblerInsn "mov" for 0x40077e>, <DisassemblerInsn "mov" for 0x400785>, <DisassemblerInsn "mov" for 0x40078c>, <DisassemblerInsn "mov" for 0x400793>, <DisassemblerInsn "mov" for 0x40079a>, <DisassemblerInsn "mov" for 0x4007a1>, <DisassemblerInsn "mov" for 0x4007a8>, <DisassemblerInsn "mov" for 0x4007af>, <DisassemblerInsn "mov" for 0x4007b6>, <DisassemblerInsn "mov" for 0x4007bd>, <DisassemblerInsn "add" for 0x4007bf>, <DisassemblerInsn "add" for 0x4007c1>, <DisassemblerInsn "cmp" for 0x4007c3>, <DisassemblerInsn "mov" for 0x4007c5>, <DisassemblerInsn "mov" for 0x4007cc>, <DisassemblerInsn "jbe" for 0x4007d3>]'}, {'block_Idx': 102, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401329>, <DisassemblerInsn "mov" for 0x401331>, <DisassemblerInsn "mov" for 0x401338>, <DisassemblerInsn "mov" for 0x40133f>, <DisassemblerInsn "mov" for 0x401346>, <DisassemblerInsn "mov" for 0x40134d>, <DisassemblerInsn "mov" for 0x40134f>, <DisassemblerInsn "cmp" for 0x401356>, <DisassemblerInsn "jle" for 0x401358>]'}, {'block_Idx': 219, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a78>, <DisassemblerInsn "mov" for 0x401a7f>, <DisassemblerInsn "mov" for 0x401a86>, <DisassemblerInsn "mov" for 0x401a8d>, <DisassemblerInsn "xor" for 0x401a90>, <DisassemblerInsn "sub" for 0x401a92>, <DisassemblerInsn "shr" for 0x401a95>, <DisassemblerInsn "mov" for 0x401a97>, <DisassemblerInsn "add" for 0x401a9f>, <DisassemblerInsn "mov" for 0x401aa1>, <DisassemblerInsn "mov" for 0x401aa3>, <DisassemblerInsn "jmp" for 0x401aaa>]'}, {'block_Idx': 113, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bee>, <DisassemblerInsn "call" for 0x400bf6>]'}, {'block_Idx': 383, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402956>]'}, {'block_Idx': 385, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402abb>, <DisassemblerInsn "mov" for 0x402ac3>, <DisassemblerInsn "mov" for 0x402acb>, <DisassemblerInsn "mov" for 0x402ad2>, <DisassemblerInsn "mov" for 0x402ada>, <DisassemblerInsn "mov" for 0x402ae2>, <DisassemblerInsn "add" for 0x402aea>, <DisassemblerInsn "mov" for 0x402aee>, <DisassemblerInsn "mov" for 0x402af5>, <DisassemblerInsn "add" for 0x402af7>, <DisassemblerInsn "mov" for 0x402afa>, <DisassemblerInsn "mov" for 0x402b01>, <DisassemblerInsn "add" for 0x402b05>, <DisassemblerInsn "mov" for 0x402b09>, <DisassemblerInsn "add" for 0x402b11>, <DisassemblerInsn "mov" for 0x402b15>, <DisassemblerInsn "cmp" for 0x402b1d>, <DisassemblerInsn "mov" for 0x402b20>, <DisassemblerInsn "mov" for 0x402b28>, <DisassemblerInsn "mov" for 0x402b2f>, <DisassemblerInsn "mov" for 0x402b36>, <DisassemblerInsn "jne" for 0x402b3e>]'}, {'block_Idx': 355, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4028b0>, <DisassemblerInsn "mov" for 0x4028b8>, <DisassemblerInsn "mov" for 0x4028c0>, <DisassemblerInsn "xor" for 0x4028c7>, <DisassemblerInsn "cmp" for 0x4028c9>, <DisassemblerInsn "mov" for 0x4028cd>, <DisassemblerInsn "mov" for 0x4028d5>, <DisassemblerInsn "mov" for 0x4028dc>, <DisassemblerInsn "je" for 0x4028e4>]'}, {'block_Idx': 248, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ec8>, <DisassemblerInsn "mov" for 0x401ed0>, <DisassemblerInsn "mov" for 0x401ed7>, <DisassemblerInsn "mov" for 0x401ede>, <DisassemblerInsn "mov" for 0x401ee6>, <DisassemblerInsn "shr" for 0x401eee>, <DisassemblerInsn "mov" for 0x401ef2>, <DisassemblerInsn "add" for 0x401ef5>, <DisassemblerInsn "mov" for 0x401ef9>, <DisassemblerInsn "add" for 0x401efb>, <DisassemblerInsn "mov" for 0x401efe>, <DisassemblerInsn "shl" for 0x401f05>, <DisassemblerInsn "mov" for 0x401f08>, <DisassemblerInsn "mov" for 0x401f0f>, <DisassemblerInsn "sar" for 0x401f17>, <DisassemblerInsn "movsxd" for 0x401f1b>, <DisassemblerInsn "mov" for 0x401f1e>, <DisassemblerInsn "ror" for 0x401f22>, <DisassemblerInsn "ror" for 0x401f26>, <DisassemblerInsn "ror" for 0x401f29>, <DisassemblerInsn "shl" for 0x401f2d>, <DisassemblerInsn "mov" for 0x401f2f>, <DisassemblerInsn "mov" for 0x401f36>, <DisassemblerInsn "xor" for 0x401f39>, <DisassemblerInsn "sub" for 0x401f3b>, <DisassemblerInsn "shr" for 0x401f3e>, <DisassemblerInsn "mov" for 0x401f40>, <DisassemblerInsn "add" for 0x401f47>, <DisassemblerInsn "mov" for 0x401f49>, <DisassemblerInsn "or" for 0x401f4b>, <DisassemblerInsn "mov" for 0x401f4d>, <DisassemblerInsn "mov" for 0x401f54>, <DisassemblerInsn "mov" for 0x401f5c>, <DisassemblerInsn "mov" for 0x401f64>, <DisassemblerInsn "mov" for 0x401f6b>, <DisassemblerInsn "mov" for 0x401f72>, <DisassemblerInsn "sub" for 0x401f77>, <DisassemblerInsn "mov" for 0x401f79>, <DisassemblerInsn "shl" for 0x401f80>, <DisassemblerInsn "mov" for 0x401f82>, <DisassemblerInsn "sar" for 0x401f89>, <DisassemblerInsn "mov" for 0x401f8b>, <DisassemblerInsn "mov" for 0x401f93>, <DisassemblerInsn "add" for 0x401f96>, <DisassemblerInsn "mov" for 0x401f9a>, <DisassemblerInsn "cmp" for 0x401fa2>, <DisassemblerInsn "je" for 0x401fa5>]'}, {'block_Idx': 191, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018a0>, <DisassemblerInsn "mov" for 0x4018a7>, <DisassemblerInsn "mov" for 0x4018ae>, <DisassemblerInsn "mov" for 0x4018b6>, <DisassemblerInsn "mov" for 0x4018be>, <DisassemblerInsn "mov" for 0x4018c5>, <DisassemblerInsn "sar" for 0x4018c7>, <DisassemblerInsn "mov" for 0x4018ca>, <DisassemblerInsn "movsxd" for 0x4018d1>, <DisassemblerInsn "mov" for 0x4018d4>, <DisassemblerInsn "mov" for 0x4018d8>, <DisassemblerInsn "and" for 0x4018da>, <DisassemblerInsn "mov" for 0x4018dd>, <DisassemblerInsn "movzx" for 0x4018e4>, <DisassemblerInsn "add" for 0x4018e8>, <DisassemblerInsn "mov" for 0x4018eb>, <DisassemblerInsn "mov" for 0x4018f2>, <DisassemblerInsn "mov" for 0x4018f4>, <DisassemblerInsn "shr" for 0x4018f9>, <DisassemblerInsn "mov" for 0x4018fb>, <DisassemblerInsn "mov" for 0x401902>, <DisassemblerInsn "and" for 0x401909>, <DisassemblerInsn "mov" for 0x40190b>, <DisassemblerInsn "add" for 0x401912>, <DisassemblerInsn "mov" for 0x401915>, <DisassemblerInsn "cmp" for 0x40191c>, <DisassemblerInsn "mov" for 0x40191f>, <DisassemblerInsn "mov" for 0x401926>, <DisassemblerInsn "je" for 0x40192d>]'}, {'block_Idx': 137, 'blockInsts': '[<DisassemblerInsn "add" for 0x403962>, <DisassemblerInsn "ret" for 0x403966>]'}, {'block_Idx': 151, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402cad>, <DisassemblerInsn "mov" for 0x402cb5>, <DisassemblerInsn "mov" for 0x402cbc>, <DisassemblerInsn "mov" for 0x402cc3>, <DisassemblerInsn "mov" for 0x402cca>, <DisassemblerInsn "mov" for 0x402cd1>, <DisassemblerInsn "neg" for 0x402cd3>, <DisassemblerInsn "and" for 0x402cd5>, <DisassemblerInsn "mov" for 0x402cd8>, <DisassemblerInsn "mov" for 0x402cda>, <DisassemblerInsn "lea" for 0x402cdc>, <DisassemblerInsn "mov" for 0x402ce0>, <DisassemblerInsn "mov" for 0x402ce2>, <DisassemblerInsn "mov" for 0x402ce4>, <DisassemblerInsn "sub" for 0x402cec>, <DisassemblerInsn "ja" for 0x402cef>]'}, {'block_Idx': 216, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403657>, <DisassemblerInsn "mov" for 0x40365c>, <DisassemblerInsn "mov" for 0x403660>, <DisassemblerInsn "mov" for 0x403665>, <DisassemblerInsn "add" for 0x40366a>, <DisassemblerInsn "movsxd" for 0x40366e>, <DisassemblerInsn "cmp" for 0x403671>, <DisassemblerInsn "mov" for 0x403674>, <DisassemblerInsn "mov" for 0x403676>, <DisassemblerInsn "mov" for 0x40367a>, <DisassemblerInsn "mov" for 0x40367f>, <DisassemblerInsn "mov" for 0x403684>, <DisassemblerInsn "mov" for 0x40368c>, <DisassemblerInsn "jl" for 0x403693>]'}, {'block_Idx': 68, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cfe>, <DisassemblerInsn "mov" for 0x400d05>, <DisassemblerInsn "mov" for 0x400d0d>, <DisassemblerInsn "mov" for 0x400d14>, <DisassemblerInsn "sar" for 0x400d1b>, <DisassemblerInsn "movsxd" for 0x400d1e>, <DisassemblerInsn "mov" for 0x400d21>, <DisassemblerInsn "ror" for 0x400d24>, <DisassemblerInsn "ror" for 0x400d28>, <DisassemblerInsn "ror" for 0x400d2b>, <DisassemblerInsn "shl" for 0x400d2f>, <DisassemblerInsn "shr" for 0x400d31>, <DisassemblerInsn "and" for 0x400d34>, <DisassemblerInsn "cmp" for 0x400d39>, <DisassemblerInsn "je" for 0x400d3e>]'}, {'block_Idx': 241, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402890>, <DisassemblerInsn "mov" for 0x402898>, <DisassemblerInsn "xor" for 0x40289b>, <DisassemblerInsn "lea" for 0x40289d>, <DisassemblerInsn "mov" for 0x4028a4>, <DisassemblerInsn "call" for 0x4028a6>]'}, {'block_Idx': 291, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402029>]'}, {'block_Idx': 384, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402423>, <DisassemblerInsn "mov" for 0x40242b>, <DisassemblerInsn "mov" for 0x402432>, <DisassemblerInsn "mov" for 0x40243a>, <DisassemblerInsn "mov" for 0x402442>, <DisassemblerInsn "mov" for 0x40244a>, <DisassemblerInsn "add" for 0x402452>, <DisassemblerInsn "mov" for 0x402455>, <DisassemblerInsn "mov" for 0x40245c>, <DisassemblerInsn "add" for 0x40245f>, <DisassemblerInsn "mov" for 0x402463>, <DisassemblerInsn "mov" for 0x40246a>, <DisassemblerInsn "add" for 0x40246e>, <DisassemblerInsn "mov" for 0x402472>, <DisassemblerInsn "mov" for 0x402479>, <DisassemblerInsn "add" for 0x40247d>, <DisassemblerInsn "mov" for 0x402481>, <DisassemblerInsn "mov" for 0x402488>, <DisassemblerInsn "add" for 0x40248c>, <DisassemblerInsn "mov" for 0x402490>, <DisassemblerInsn "add" for 0x402498>, <DisassemblerInsn "mov" for 0x40249c>, <DisassemblerInsn "cmp" for 0x4024a4>, <DisassemblerInsn "mov" for 0x4024a7>, <DisassemblerInsn "mov" for 0x4024aa>, <DisassemblerInsn "mov" for 0x4024b2>, <DisassemblerInsn "mov" for 0x4024b4>, <DisassemblerInsn "mov" for 0x4024bb>, <DisassemblerInsn "mov" for 0x4024c3>, <DisassemblerInsn "mov" for 0x4024cb>, <DisassemblerInsn "je" for 0x4024d2>]'}, {'block_Idx': 145, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015ed>, <DisassemblerInsn "mov" for 0x4015f4>, <DisassemblerInsn "mov" for 0x4015fc>, <DisassemblerInsn "xor" for 0x4015ff>, <DisassemblerInsn "lea" for 0x401601>, <DisassemblerInsn "mov" for 0x401608>, <DisassemblerInsn "call" for 0x40160a>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4005dd>, <DisassemblerInsn "mov" for 0x4005e5>, <DisassemblerInsn "mov" for 0x4005ec>, <DisassemblerInsn "mov" for 0x4005f3>, <DisassemblerInsn "add" for 0x4005f6>, <DisassemblerInsn "mov" for 0x4005fd>, <DisassemblerInsn "mov" for 0x400605>, <DisassemblerInsn "mov" for 0x40060b>, <DisassemblerInsn "cmp" for 0x400612>, <DisassemblerInsn "jb" for 0x400615>]'}, {'block_Idx': 112, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401300>, <DisassemblerInsn "mov" for 0x401307>, <DisassemblerInsn "movsxd" for 0x40130e>, <DisassemblerInsn "lea" for 0x401311>, <DisassemblerInsn "mov" for 0x401318>, <DisassemblerInsn "mov" for 0x40131b>, <DisassemblerInsn "mov" for 0x401322>, <DisassemblerInsn "mov" for 0x401329>, <DisassemblerInsn "mov" for 0x401331>, <DisassemblerInsn "mov" for 0x401338>, <DisassemblerInsn "mov" for 0x40133f>, <DisassemblerInsn "mov" for 0x401346>, <DisassemblerInsn "mov" for 0x40134d>, <DisassemblerInsn "mov" for 0x40134f>, <DisassemblerInsn "cmp" for 0x401356>, <DisassemblerInsn "jle" for 0x401358>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4036d0>, <DisassemblerInsn "mov" for 0x4036d7>, <DisassemblerInsn "mov" for 0x4036df>, <DisassemblerInsn "add" for 0x4036e1>, <DisassemblerInsn "mov" for 0x4036e4>, <DisassemblerInsn "cdq" for 0x4036e9>, <DisassemblerInsn "idiv" for 0x4036ea>, <DisassemblerInsn "mov" for 0x4036ec>, <DisassemblerInsn "cmp" for 0x4036f0>, <DisassemblerInsn "jle" for 0x4036f2>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400df7>, <DisassemblerInsn "mov" for 0x400dfe>, <DisassemblerInsn "mov" for 0x400e06>, <DisassemblerInsn "add" for 0x400e09>, <DisassemblerInsn "xor" for 0x400e0c>, <DisassemblerInsn "cmp" for 0x400e0e>, <DisassemblerInsn "mov" for 0x400e10>, <DisassemblerInsn "mov" for 0x400e12>, <DisassemblerInsn "mov" for 0x400e19>, <DisassemblerInsn "mov" for 0x400e20>, <DisassemblerInsn "je" for 0x400e27>]'}, {'block_Idx': 99, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40125a>, <DisassemblerInsn "mov" for 0x401262>, <DisassemblerInsn "mov" for 0x401269>, <DisassemblerInsn "mov" for 0x401271>, <DisassemblerInsn "shr" for 0x401279>, <DisassemblerInsn "and" for 0x40127d>, <DisassemblerInsn "mov" for 0x401284>, <DisassemblerInsn "ror" for 0x401287>, <DisassemblerInsn "ror" for 0x40128b>, <DisassemblerInsn "ror" for 0x40128e>, <DisassemblerInsn "shr" for 0x401292>, <DisassemblerInsn "add" for 0x401295>, <DisassemblerInsn "mov" for 0x401298>, <DisassemblerInsn "add" for 0x40129a>, <DisassemblerInsn "mov" for 0x40129d>, <DisassemblerInsn "mov" for 0x4012a4>, <DisassemblerInsn "jmp" for 0x4012ab>]'}, {'block_Idx': 342, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402090>, <DisassemblerInsn "mov" for 0x402097>, <DisassemblerInsn "mov" for 0x40209f>, <DisassemblerInsn "mov" for 0x4020a6>, <DisassemblerInsn "sub" for 0x4020ad>, <DisassemblerInsn "mov" for 0x4020af>, <DisassemblerInsn "add" for 0x4020b1>, <DisassemblerInsn "mov" for 0x4020b4>, <DisassemblerInsn "mov" for 0x4020b6>, <DisassemblerInsn "mov" for 0x4020b9>, <DisassemblerInsn "add" for 0x4020c0>, <DisassemblerInsn "mov" for 0x4020c2>, <DisassemblerInsn "cmp" for 0x4020c9>, <DisassemblerInsn "je" for 0x4020cc>]'}, {'block_Idx': 116, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401381>]'}, {'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400793>, <DisassemblerInsn "mov" for 0x40079a>, <DisassemblerInsn "mov" for 0x4007a1>, <DisassemblerInsn "mov" for 0x4007a8>, <DisassemblerInsn "mov" for 0x4007af>, <DisassemblerInsn "mov" for 0x4007b6>, <DisassemblerInsn "mov" for 0x4007bd>, <DisassemblerInsn "add" for 0x4007bf>, <DisassemblerInsn "add" for 0x4007c1>, <DisassemblerInsn "cmp" for 0x4007c3>, <DisassemblerInsn "mov" for 0x4007c5>, <DisassemblerInsn "mov" for 0x4007cc>, <DisassemblerInsn "jbe" for 0x4007d3>]'}, {'block_Idx': 169, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40174f>, <DisassemblerInsn "mov" for 0x401757>, <DisassemblerInsn "add" for 0x40175e>, <DisassemblerInsn "mov" for 0x401761>, <DisassemblerInsn "mov" for 0x401763>, <DisassemblerInsn "mov" for 0x40176a>, <DisassemblerInsn "mov" for 0x401772>, <DisassemblerInsn "mov" for 0x40177a>, <DisassemblerInsn "mov" for 0x401781>, <DisassemblerInsn "mov" for 0x401788>, <DisassemblerInsn "mov" for 0x40178a>, <DisassemblerInsn "mov" for 0x401791>, <DisassemblerInsn "mov" for 0x401794>, <DisassemblerInsn "mov" for 0x40179c>, <DisassemblerInsn "sar" for 0x40179e>, <DisassemblerInsn "movsxd" for 0x4017a1>, <DisassemblerInsn "mov" for 0x4017a4>, <DisassemblerInsn "mov" for 0x4017a8>, <DisassemblerInsn "and" for 0x4017aa>, <DisassemblerInsn "movzx" for 0x4017ad>, <DisassemblerInsn "mov" for 0x4017b1>, <DisassemblerInsn "add" for 0x4017b8>, <DisassemblerInsn "mov" for 0x4017bb>, <DisassemblerInsn "mov" for 0x4017c2>, <DisassemblerInsn "mov" for 0x4017c4>, <DisassemblerInsn "shr" for 0x4017c9>, <DisassemblerInsn "mov" for 0x4017cb>, <DisassemblerInsn "and" for 0x4017d2>, <DisassemblerInsn "cmp" for 0x4017d4>, <DisassemblerInsn "je" for 0x4017d7>]'}, {'block_Idx': 204, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4033c4>, <DisassemblerInsn "mov" for 0x4033cc>, <DisassemblerInsn "mov" for 0x4033d4>, <DisassemblerInsn "mov" for 0x4033db>, <DisassemblerInsn "mov" for 0x4033e3>, <DisassemblerInsn "mov" for 0x4033ea>, <DisassemblerInsn "mov" for 0x4033ec>, <DisassemblerInsn "shl" for 0x4033ee>, <DisassemblerInsn "mov" for 0x4033f0>, <DisassemblerInsn "mov" for 0x4033f8>, <DisassemblerInsn "add" for 0x4033fb>, <DisassemblerInsn "mov" for 0x4033ff>, <DisassemblerInsn "mov" for 0x403402>, <DisassemblerInsn "mov" for 0x403404>, <DisassemblerInsn "mov" for 0x40340b>, <DisassemblerInsn "mov" for 0x403413>, <DisassemblerInsn "jmp" for 0x40341b>]'}, {'block_Idx': 186, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40306b>, <DisassemblerInsn "mov" for 0x403073>, <DisassemblerInsn "mov" for 0x40307b>, <DisassemblerInsn "mov" for 0x403082>, <DisassemblerInsn "mov" for 0x40308a>, <DisassemblerInsn "mov" for 0x40308e>, <DisassemblerInsn "mov" for 0x403096>, <DisassemblerInsn "mov" for 0x40309a>, <DisassemblerInsn "xor" for 0x4030a2>, <DisassemblerInsn "mov" for 0x4030a4>, <DisassemblerInsn "mov" for 0x4030ab>, <DisassemblerInsn "mov" for 0x4030b3>, <DisassemblerInsn "mov" for 0x4030bb>, <DisassemblerInsn "jmp" for 0x4030c3>]'}, {'block_Idx': 225, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b7a>, <DisassemblerInsn "mov" for 0x401b82>, <DisassemblerInsn "mov" for 0x401b8a>, <DisassemblerInsn "mov" for 0x401b8f>, <DisassemblerInsn "xor" for 0x401b97>, <DisassemblerInsn "mov" for 0x401b99>, <DisassemblerInsn "mov" for 0x401ba1>, <DisassemblerInsn "mov" for 0x401ba9>, <DisassemblerInsn "mov" for 0x401bb1>, <DisassemblerInsn "mov" for 0x401bb9>, <DisassemblerInsn "mov" for 0x401bc0>, <DisassemblerInsn "add" for 0x401bc3>, <DisassemblerInsn "mov" for 0x401bc7>, <DisassemblerInsn "movsxd" for 0x401bcf>, <DisassemblerInsn "cmp" for 0x401bd2>, <DisassemblerInsn "mov" for 0x401bd5>, <DisassemblerInsn "jl" for 0x401bdd>]'}, {'block_Idx': 34, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ba1>, <DisassemblerInsn "cmp" for 0x400ba8>, <DisassemblerInsn "jne" for 0x400bab>]'}, {'block_Idx': 375, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40282b>, <DisassemblerInsn "mov" for 0x402832>, <DisassemblerInsn "mov" for 0x40283a>, <DisassemblerInsn "xor" for 0x40283d>, <DisassemblerInsn "lea" for 0x40283f>, <DisassemblerInsn "mov" for 0x402846>, <DisassemblerInsn "call" for 0x402848>]'}, {'block_Idx': 69, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d89>]'}], 'cfg_block_detailed_info': [{'block_Idx': 267, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x538]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~rsi, qword ptr [rsp + 0x540]>', '<mov~~qword ptr [rsp + 0x518], rsi>', '<mov~~dword ptr [rsp + 0x520], eax>', '<mov~~dword ptr [rsp + 0x524], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x528], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x52c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401ec8>']}, {'block_Idx': 120, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<sub~~eax, 0xc>', '<je~~0x401472>']}, {'block_Idx': 159, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x648]>', '<mov~~ecx, dword ptr [rsp + 0x64c]>', '<or~~ecx, 2>', '<sub~~ecx, 3>', '<mov~~dword ptr [rsp + 0x63c], eax>', '<je~~0x40174f>']}, {'block_Idx': 156, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x238]>', '<lea~~rcx, [rip + 0x25c0]>', '<movsxd~~rax, dword ptr [rcx + rax*4]>', '<add~~rax, rcx>', '<jmp~~rax>']}, {'block_Idx': 147, 'blockInsts': ['<jmp~~0x401553>']}, {'block_Idx': 189, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x718]>', '<mov~~rsi, qword ptr [rsp + 0x1c0]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rax, qword ptr [rsp + 0x720]>', '<mov~~r8d, dword ptr [rsp + 0x1cc]>', '<mov~~rdi, qword ptr [rsp + 0x1d0]>', '<mov~~r9, qword ptr [rsp + 0x1d8]>', '<mov~~r10, qword ptr [rsp + 0x1e0]>', '<mov~~qword ptr [rsp + 0x1a0], r10>', '<mov~~qword ptr [rsp + 0x1a8], r9>', '<mov~~qword ptr [rsp + 0x1b0], rdi>', '<mov~~dword ptr [rsp + 0x1b8], r8d>', '<mov~~eax, dword ptr [rax]>', '<mov~~rdx, qword ptr [rdx + rdi*8 + 0x58]>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~ecx, dword ptr [rcx]>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x1bc], edx>', '<cmp~~eax, 0>', '<je~~0x402ed3>']}, {'block_Idx': 206, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x668]>', '<mov~~rsi, qword ptr [rsp + 0x38]>', '<mov~~edi, dword ptr [rsp + 0x4c]>', '<mov~~rax, qword ptr [rsp + 0x718]>', '<mov~~ecx, dword ptr [rsp + 0x54]>', '<mov~~dword ptr [rsi], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0x30]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x1c], edx>', '<mov~~qword ptr [rsp + 0x20], rcx>', '<mov~~qword ptr [rsp + 0x28], rax>', '<jmp~~0x403657>']}, {'block_Idx': 399, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x550]>', '<mov~~rcx, qword ptr [rsp + 0x2c0]>', '<mov~~esi, dword ptr [rsp + 0x2b4]>', '<mov~~edi, dword ptr [rsp + 0x2b8]>', '<mov~~edx, dword ptr [rsp + 0x2bc]>', '<add~~edx, dword ptr [rax + rcx*4]>', '<add~~edx, edi>', '<add~~edx, esi>', '<mov~~dword ptr [rax + rcx*4], edx>', '<jmp~~0x402b44>']}, {'block_Idx': 166, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x898]>', '<mov~~rdx, qword ptr [rsp + 0x8a0]>', '<mov~~edi, dword ptr [rsp + 0x234]>', '<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~eax, dword ptr [rax]>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<mov~~r8d, eax>', '<mov~~dword ptr [rsp + 0x20c], r8d>', '<mov~~r8d, edi>', '<mov~~dword ptr [rsp + 0x210], r8d>', '<mov~~dword ptr [rsp + 0x214], edi>', '<mov~~qword ptr [rsp + 0x218], rsi>', '<mov~~qword ptr [rsp + 0x220], rdx>', '<mov~~qword ptr [rsp + 0x228], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x403699>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x18]>', '<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~rdx, rcx>', '<add~~rdx, 0xa0>', '<mov~~qword ptr [rsp + 8], rdx>', '<mov~~ecx, dword ptr [rcx + 0xa0]>', '<mov~~dword ptr [rsp + 0x14], ecx>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<je~~0x4037b0>']}, {'block_Idx': 105, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x8ac]>', '<mov~~edx, dword ptr [rsp + 0x6b4]>', '<mov~~esi, dword ptr [rsp + 0x73c]>', '<mov~~r8b, byte ptr [rsp + 0x707]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<add~~rax, 0xc>', '<mov~~qword ptr [rsp + 0x6a8], rax>', '<mov~~eax, 2>', '<mov~~edi, 4>', '<test~~r8b, 1>', '<cmovne~~eax, edi>', '<imul~~eax, esi>', '<imul~~eax, edx>', '<cmp~~eax, ecx>', '<jg~~0x402c64>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x840]>', '<mov~~ecx, dword ptr [rsp + 0x864]>', '<mov~~esi, dword ptr [rsp + 0x848]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rdi, rdx>', '<add~~rdi, 0xa8>', '<mov~~qword ptr [rsp + 0x820], rdi>', '<mov~~edx, dword ptr [rdx + 0xa8]>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x82c], edx>', '<mov~~dword ptr [rsp + 0x830], ecx>', '<mov~~dword ptr [rsp + 0x834], eax>', '<jae~~0x400793>']}, {'block_Idx': 389, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x4f8]>', '<mov~~ecx, dword ptr [rsp + 0x4f4]>', '<mov~~edx, dword ptr [rsp + 0x4ec]>', '<mov~~esi, dword ptr [rsp + 0x4e4]>', '<mov~~r8d, dword ptr [rsp + 0x54c]>', '<mov~~edi, r8d>', '<mov~~qword ptr [rsp + 0x4b8], rdi>', '<and~~rdi, 1>', '<mov~~qword ptr [rsp + 0x4c0], rdi>', '<mov~~edi, 4>', '<cmp~~r8d, 5>', '<mov~~qword ptr [rsp + 0x4c8], rdi>', '<mov~~dword ptr [rsp + 0x4d4], esi>', '<mov~~dword ptr [rsp + 0x4d8], edx>', '<mov~~dword ptr [rsp + 0x4dc], ecx>', '<mov~~dword ptr [rsp + 0x4e0], eax>', '<je~~0x4029d8>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~ecx, dword ptr [rsp + 0x764]>', '<add~~ecx, -8>', '<sub~~ecx, 3>', '<setb~~cl>', '<mov~~eax, dword ptr [rax + 0xc]>', '<mov~~edx, eax>', '<sub~~edx, 2>', '<sete~~dl>', '<and~~cl, dl>', '<test~~cl, 1>', '<mov~~dword ptr [rsp + 0x744], eax>', '<jne~~0x400e62>']}, {'block_Idx': 152, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x700]>', '<mov~~edx, dword ptr [rsp + 0x738]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<add~~rax, 0x44>', '<mov~~qword ptr [rsp + 0x650], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x658], edx>', '<mov~~dword ptr [rsp + 0x65c], ecx>', '<mov~~qword ptr [rsp + 0x660], rax>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~esi, dword ptr [rsp + 0x658]>', '<mov~~edx, dword ptr [rsp + 0x65c]>', '<mov~~rax, qword ptr [rsp + 0x660]>', '<mov~~qword ptr [rsp + 0x640], rax>', '<mov~~dword ptr [rsp + 0x648], edx>', '<mov~~dword ptr [rsp + 0x64c], esi>', '<mov~~dword ptr [rcx], edx>', '<cmp~~rax, 0>', '<jne~~0x401730>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x234]>', '<cmp~~eax, 2>', '<jne~~0x40354b>']}, {'block_Idx': 218, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x120]>', '<mov~~eax, dword ptr [rsp + 0xfc]>', '<mov~~rcx, qword ptr [rsp + 0x100]>', '<mov~~rdx, qword ptr [rsp + 0x108]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x154], edi>', '<mov~~qword ptr [rsp + 0x158], rsi>', '<mov~~qword ptr [rsp + 0x160], rdx>', '<mov~~qword ptr [rsp + 0x168], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x4030e4>']}, {'block_Idx': 76, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x282d]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 110, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<cmp~~eax, 0>', '<jne~~0x401407>']}, {'block_Idx': 140, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<sub~~eax, 0xe>', '<je~~0x401509>']}, {'block_Idx': 59, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x740]>', '<movsxd~~rcx, eax>', '<lea~~rax, [rip + 0x4856]>', '<shl~~rcx, 2>', '<add~~rax, rcx>', '<mov~~qword ptr [rsp + 0x730], rax>', '<jmp~~0x400f63>']}, {'block_Idx': 80, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d0]>', '<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~dword ptr [rsp + 0x6c8], ecx>', '<cmp~~rax, 0>', '<jge~~0x401211>']}, {'block_Idx': 25, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7a4]>', '<cmp~~eax, 0>', '<je~~0x400c2a>']}, {'block_Idx': 39, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x838]>', '<mov~~rax, qword ptr [rsp + 0x858]>', '<mov~~dword ptr [rcx], 0>', '<mov~~ecx, dword ptr [rax]>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x818], ecx>', '<mov~~dword ptr [rsp + 0x81c], eax>', '<mov~~eax, dword ptr [rsp + 0x844]>', '<mov~~rdi, qword ptr [rsp + 0x890]>', '<mov~~rsi, qword ptr [rsp + 0x880]>', '<mov~~ecx, dword ptr [rsp + 0x818]>', '<mov~~edx, dword ptr [rsp + 0x81c]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<add~~ecx, edx>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500020>']}, {'block_Idx': 245, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x5d0]>', '<mov~~eax, dword ptr [rsp + 0x5d4]>', '<mov~~rsi, qword ptr [rsp + 0x5d8]>', '<mov~~qword ptr [rsp + 0x578], rsi>', '<mov~~dword ptr [rsp + 0x580], eax>', '<mov~~dword ptr [rsp + 0x584], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x588], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x58c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401c7d>']}, {'block_Idx': 81, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d0]>', '<mov~~rdi, qword ptr [rsp + 0x808]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rsi, qword ptr [rsp + 0x7e8]>', '<mov~~eax, dword ptr [rsp + 0x6cc]>', '<add~~eax, -1>', '<mov~~r8, rdx>', '<shr~~r8, 3>', '<mov~~esi, dword ptr [rsi + r8]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xf8>', '<add~~rdx, 8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rdi], r8d>', '<add~~esi, -0x80>', '<shl~~rcx, 6>', '<movsxd~~rdi, esi>', '<add~~rcx, rdi>', '<cmp~~esi, 0x40>', '<mov~~qword ptr [rsp + 0x6e0], rdx>', '<mov~~qword ptr [rsp + 0x6e8], rcx>', '<mov~~dword ptr [rsp + 0x6f4], eax>', '<jb~~0x401128>']}, {'block_Idx': 261, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x578]>', '<mov~~rdx, qword ptr [rsp + 0x5c8]>', '<mov~~edi, dword ptr [rsp + 0x580]>', '<mov~~esi, dword ptr [rsp + 0x574]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x55c], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x55c]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x560], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402b44>']}, {'block_Idx': 244, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x260]>', '<mov~~rdx, qword ptr [rsp + 0x258]>', '<mov~~ecx, dword ptr [rsp + 0x5e0]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~dword ptr [rsp + 0x24c], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x250], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x260], rax>', '<jl~~0x402b84>']}, {'block_Idx': 388, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x4f8]>', '<mov~~edx, dword ptr [rsp + 0x4f4]>', '<mov~~esi, dword ptr [rsp + 0x4ec]>', '<mov~~rax, qword ptr [rsp + 0x468]>', '<and~~rax, 0xfffffffffffffffe>', '<mov~~qword ptr [rsp + 0x440], rax>', '<mov~~edi, 3>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x448], rdi>', '<mov~~dword ptr [rsp + 0x454], esi>', '<mov~~dword ptr [rsp + 0x458], edx>', '<mov~~dword ptr [rsp + 0x45c], ecx>', '<mov~~qword ptr [rsp + 0x460], rax>', '<jmp~~0x4025f7>']}, {'block_Idx': 181, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x708]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3e22]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 171, 'blockInsts': ['<jmp~~0x402c64>']}, {'block_Idx': 242, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x890]>', '<mov~~rax, qword ptr [rsp + 0x640]>', '<mov~~edx, dword ptr [rsp + 0x608]>', '<and~~edx, 0xffffffdf>', '<add~~edx, 1>', '<mov~~esi, eax>', '<call~~0x403970>']}, {'block_Idx': 65, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x710]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x452e]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 92, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x710]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4358]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 212, 'blockInsts': ['<jmp~~0x4019c3>']}, {'block_Idx': 412, 'blockInsts': ['<mov~~r8, qword ptr [rsp + 0x4b0]>', '<mov~~edx, dword ptr [rsp + 0x4ac]>', '<mov~~r11d, dword ptr [rsp + 0x4a8]>', '<mov~~eax, dword ptr [rsp + 0x4a4]>', '<mov~~esi, dword ptr [rsp + 0x4a0]>', '<mov~~rdi, qword ptr [rsp + 0x498]>', '<mov~~r9, qword ptr [rsp + 0x490]>', '<mov~~r10, qword ptr [rsp + 0x550]>', '<add~~esi, dword ptr [r10 + rdi*4]>', '<mov~~dword ptr [rsp + 0x2f8], esi>', '<mov~~ecx, esi>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x2fc], ecx>', '<mov~~eax, ecx>', '<add~~eax, r11d>', '<mov~~dword ptr [rsp + 0x300], eax>', '<mov~~ebx, eax>', '<add~~ebx, edx>', '<mov~~dword ptr [rsp + 0x304], ebx>', '<mov~~dword ptr [r10 + rdi*4], ebx>', '<mov~~r11, rdi>', '<or~~r11, 1>', '<mov~~qword ptr [rsp + 0x308], r11>', '<add~~esi, dword ptr [r10 + r11*4]>', '<mov~~dword ptr [rsp + 0x310], esi>', '<mov~~edx, esi>', '<add~~edx, ecx>', '<mov~~dword ptr [rsp + 0x314], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x318], ecx>', '<mov~~eax, ecx>', '<add~~eax, ebx>', '<mov~~dword ptr [rsp + 0x31c], eax>', '<mov~~dword ptr [r10 + r11*4], eax>', '<add~~rdi, 2>', '<mov~~qword ptr [rsp + 0x320], rdi>', '<add~~r8, 2>', '<mov~~qword ptr [rsp + 0x328], r8>', '<cmp~~r8, r9>', '<mov~~r9, rdi>', '<mov~~qword ptr [rsp + 0x498], r9>', '<mov~~r9d, esi>', '<mov~~dword ptr [rsp + 0x4a0], r9d>', '<mov~~r9d, edx>', '<mov~~dword ptr [rsp + 0x4a4], r9d>', '<mov~~r9d, ecx>', '<mov~~dword ptr [rsp + 0x4a8], r9d>', '<mov~~r9d, eax>', '<mov~~dword ptr [rsp + 0x4ac], r9d>', '<mov~~qword ptr [rsp + 0x4b0], r8>', '<mov~~qword ptr [rsp + 0x4c8], rdi>', '<mov~~dword ptr [rsp + 0x4d4], esi>', '<mov~~dword ptr [rsp + 0x4d8], edx>', '<mov~~dword ptr [rsp + 0x4dc], ecx>', '<mov~~dword ptr [rsp + 0x4e0], eax>', '<je~~0x4029d8>']}, {'block_Idx': 369, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x2f0]>', '<mov~~ecx, dword ptr [rsp + 0x2ec]>', '<mov~~rdx, qword ptr [rsp + 0x2e0]>', '<mov~~rsi, qword ptr [rsp + 0x3e8]>', '<mov~~rdi, qword ptr [rsp + 0x550]>', '<add~~ecx, dword ptr [rdi + rdx*4]>', '<mov~~dword ptr [rsp + 0x2cc], ecx>', '<mov~~dword ptr [rdi + rdx*4], ecx>', '<add~~rdx, 1>', '<mov~~qword ptr [rsp + 0x2d0], rdx>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x2d8], rax>', '<cmp~~rax, rsi>', '<mov~~qword ptr [rsp + 0x2e0], rdx>', '<mov~~dword ptr [rsp + 0x2ec], ecx>', '<mov~~qword ptr [rsp + 0x2f0], rax>', '<je~~0x402b44>']}, {'block_Idx': 224, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5e0]>', '<cmp~~eax, 0>', '<je~~0x402bce>']}, {'block_Idx': 196, 'blockInsts': ['<jmp~~0x403699>']}, {'block_Idx': 103, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x750]>', '<sub~~eax, 7>', '<je~~0x4012ad>']}, {'block_Idx': 26, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rsp + 0x800]>', '<mov~~rdi, qword ptr [rsp + 0x7f8]>', '<mov~~r9, qword ptr [rsp + 0x7f0]>', '<mov~~r11d, dword ptr [rsp + 0x7ac]>', '<mov~~rdx, qword ptr [rsp + 0x788]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x4036d0>']}, {'block_Idx': 372, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x4f8]>', '<mov~~edx, dword ptr [rsp + 0x4f4]>', '<mov~~rax, qword ptr [rsp + 0x420]>', '<and~~rax, 0xfffffffffffffffc>', '<mov~~qword ptr [rsp + 0x400], rax>', '<mov~~esi, 2>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x408], rsi>', '<mov~~dword ptr [rsp + 0x410], edx>', '<mov~~dword ptr [rsp + 0x414], ecx>', '<mov~~qword ptr [rsp + 0x418], rax>', '<jmp~~0x4024dd>']}, {'block_Idx': 89, 'blockInsts': ['<jmp~~0x4011f4>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x88c]>', '<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<cmp~~dword ptr [rcx], 0x43614c66>', '<mov~~dword ptr [rsp + 0x850], eax>', '<je~~0x400664>']}, {'block_Idx': 193, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x718]>', '<mov~~rax, qword ptr [rsp + 0x720]>', '<mov~~rdx, qword ptr [rsp + 0xd0]>', '<mov~~rsi, qword ptr [rsp + 0xc8]>', '<mov~~r8d, dword ptr [rsp + 0xdc]>', '<mov~~rdi, qword ptr [rsp + 0xe0]>', '<mov~~r9, qword ptr [rsp + 0xe8]>', '<mov~~r10, qword ptr [rsp + 0xf0]>', '<mov~~qword ptr [rsp + 0xa0], r10>', '<mov~~qword ptr [rsp + 0xa8], r9>', '<mov~~qword ptr [rsp + 0xb0], rdi>', '<mov~~dword ptr [rsp + 0xb8], r8d>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~dword ptr [rsp + 0xbc], edx>', '<mov~~eax, dword ptr [rax]>', '<add~~edx, esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0xc0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0xc4], edx>', '<cmp~~eax, 0>', '<je~~0x40341d>']}, {'block_Idx': 73, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6fc]>', '<mov~~edx, dword ptr [rsp + 0x6f8]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~edx, 0x28>', '<mov~~qword ptr [rsp + 0x6e0], rdx>', '<mov~~qword ptr [rsp + 0x6e8], rcx>', '<mov~~dword ptr [rsp + 0x6f4], eax>', '<mov~~rcx, qword ptr [rsp + 0x6e0]>', '<mov~~rdx, qword ptr [rsp + 0x6e8]>', '<mov~~eax, dword ptr [rsp + 0x6f4]>', '<mov~~dword ptr [rsp + 0x6cc], eax>', '<mov~~qword ptr [rsp + 0x6d0], rdx>', '<mov~~qword ptr [rsp + 0x6d8], rcx>', '<cmp~~eax, 1>', '<jle~~0x4011d7>']}, {'block_Idx': 356, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x4f8]>', '<mov~~rax, qword ptr [rsp + 0x3e0]>', '<and~~rax, 0xfffffffffffffffc>', '<mov~~qword ptr [rsp + 0x3c0], rax>', '<mov~~edx, 1>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x3c8], rdx>', '<mov~~dword ptr [rsp + 0x3d4], ecx>', '<mov~~qword ptr [rsp + 0x3d8], rax>', '<mov~~rdx, qword ptr [rsp + 0x3d8]>', '<mov~~eax, dword ptr [rsp + 0x3d4]>', '<mov~~rcx, qword ptr [rsp + 0x3c8]>', '<mov~~rsi, qword ptr [rsp + 0x3c0]>', '<mov~~rdi, qword ptr [rsp + 0x550]>', '<mov~~qword ptr [rsp + 0x398], rcx>', '<add~~eax, dword ptr [rdi + rcx*4]>', '<mov~~dword ptr [rsp + 0x3a0], eax>', '<mov~~dword ptr [rdi + rcx*4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 4]>', '<mov~~dword ptr [rsp + 0x3a4], eax>', '<mov~~dword ptr [rdi + rcx*4 + 4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 8]>', '<mov~~dword ptr [rsp + 0x3a8], eax>', '<mov~~dword ptr [rdi + rcx*4 + 8], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 0xc]>', '<mov~~dword ptr [rsp + 0x3ac], eax>', '<mov~~dword ptr [rdi + rcx*4 + 0xc], eax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x3b0], rcx>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x3b8], rdx>', '<cmp~~rdx, rsi>', '<mov~~rsi, rcx>', '<mov~~qword ptr [rsp + 0x3c8], rsi>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x3d4], esi>', '<mov~~qword ptr [rsp + 0x3d8], rdx>', '<mov~~qword ptr [rsp + 0x3f0], rcx>', '<mov~~dword ptr [rsp + 0x3fc], eax>', '<je~~0x4028b0>']}, {'block_Idx': 106, 'blockInsts': ['<mov~~r8d, dword ptr [rsp + 0x6bc]>', '<mov~~ecx, dword ptr [rsp + 0x6b4]>', '<mov~~rdi, qword ptr [rsp + 0x710]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4248]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 400, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x460]>', '<mov~~ecx, dword ptr [rsp + 0x45c]>', '<mov~~r10d, dword ptr [rsp + 0x458]>', '<mov~~edx, dword ptr [rsp + 0x454]>', '<mov~~rsi, qword ptr [rsp + 0x448]>', '<mov~~r8, qword ptr [rsp + 0x440]>', '<mov~~r9, qword ptr [rsp + 0x550]>', '<add~~edx, dword ptr [r9 + rsi*4]>', '<mov~~dword ptr [rsp + 0x330], edx>', '<mov~~eax, edx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x334], eax>', '<mov~~r10d, eax>', '<add~~r10d, ecx>', '<mov~~dword ptr [rsp + 0x338], r10d>', '<mov~~dword ptr [r9 + rsi*4], r10d>', '<add~~edx, dword ptr [r9 + rsi*4 + 4]>', '<mov~~dword ptr [rsp + 0x33c], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x340], ecx>', '<mov~~eax, ecx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x344], eax>', '<mov~~dword ptr [r9 + rsi*4 + 4], eax>', '<add~~rsi, 2>', '<mov~~qword ptr [rsp + 0x348], rsi>', '<add~~rdi, 2>', '<mov~~qword ptr [rsp + 0x350], rdi>', '<cmp~~rdi, r8>', '<mov~~r8, rsi>', '<mov~~qword ptr [rsp + 0x448], r8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rsp + 0x454], r8d>', '<mov~~r8d, ecx>', '<mov~~dword ptr [rsp + 0x458], r8d>', '<mov~~r8d, eax>', '<mov~~dword ptr [rsp + 0x45c], r8d>', '<mov~~qword ptr [rsp + 0x460], rdi>', '<mov~~qword ptr [rsp + 0x478], rsi>', '<mov~~dword ptr [rsp + 0x484], edx>', '<mov~~dword ptr [rsp + 0x488], ecx>', '<mov~~dword ptr [rsp + 0x48c], eax>', '<je~~0x402958>']}, {'block_Idx': 386, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x418]>', '<mov~~eax, dword ptr [rsp + 0x414]>', '<mov~~ecx, dword ptr [rsp + 0x410]>', '<mov~~rdx, qword ptr [rsp + 0x408]>', '<mov~~rdi, qword ptr [rsp + 0x400]>', '<mov~~r8, qword ptr [rsp + 0x550]>', '<mov~~qword ptr [rsp + 0x358], rdx>', '<add~~ecx, dword ptr [r8 + rdx*4]>', '<mov~~dword ptr [rsp + 0x360], ecx>', '<mov~~r10d, ecx>', '<add~~r10d, eax>', '<mov~~dword ptr [rsp + 0x364], r10d>', '<mov~~dword ptr [r8 + rdx*4], r10d>', '<mov~~r9, rdx>', '<or~~r9, 1>', '<mov~~qword ptr [rsp + 0x368], r9>', '<add~~ecx, dword ptr [r8 + r9*4]>', '<mov~~dword ptr [rsp + 0x370], ecx>', '<mov~~eax, ecx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x374], eax>', '<mov~~dword ptr [r8 + r9*4], eax>', '<add~~ecx, dword ptr [r8 + rdx*4 + 8]>', '<mov~~dword ptr [rsp + 0x378], ecx>', '<mov~~r9d, ecx>', '<add~~r9d, eax>', '<mov~~dword ptr [rsp + 0x37c], r9d>', '<mov~~dword ptr [r8 + rdx*4 + 8], r9d>', '<add~~ecx, dword ptr [r8 + rdx*4 + 0xc]>', '<mov~~dword ptr [rsp + 0x380], ecx>', '<mov~~eax, ecx>', '<add~~eax, r9d>', '<mov~~dword ptr [rsp + 0x384], eax>', '<mov~~dword ptr [r8 + rdx*4 + 0xc], eax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x388], rdx>', '<add~~rsi, 4>', '<mov~~qword ptr [rsp + 0x390], rsi>', '<cmp~~rsi, rdi>', '<mov~~rdi, rdx>', '<mov~~qword ptr [rsp + 0x408], rdi>', '<mov~~edi, ecx>', '<mov~~dword ptr [rsp + 0x410], edi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x414], edi>', '<mov~~qword ptr [rsp + 0x418], rsi>', '<mov~~qword ptr [rsp + 0x430], rdx>', '<mov~~dword ptr [rsp + 0x438], ecx>', '<mov~~dword ptr [rsp + 0x43c], eax>', '<je~~0x402a73>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~edx, dword ptr [rsp + 0x7a8]>', '<mov~~ecx, dword ptr [rax]>', '<add~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x794]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<jne~~0x4036d0>']}, {'block_Idx': 251, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x584]>', '<mov~~edx, dword ptr [rsp + 0x580]>', '<mov~~eax, dword ptr [rsp + 0x58c]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x808]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x574], eax>', '<jmp~~0x401d09>']}, {'block_Idx': 52, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x730], rax>', '<jmp~~0x400f63>']}, {'block_Idx': 93, 'blockInsts': ['<jmp~~0x40121e>']}, {'block_Idx': 56, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x18], rdi>', '<mov~~qword ptr [rsp + 0x20], rsi>', '<mov~~qword ptr [rsp + 0x28], rdx>', '<mov~~eax, dword ptr [rdx + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<mov~~dword ptr [rsp + 0x34], eax>', '<mov~~dword ptr [rsi], eax>', '<cmp~~eax, 0x10>', '<jge~~0x400166>']}, {'block_Idx': 239, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x890]>', '<mov~~rax, qword ptr [rsp + 0x640]>', '<mov~~esi, eax>', '<xor~~edx, edx>', '<call~~0x4048d0>']}, {'block_Idx': 107, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~ecx, dword ptr [rsp + 0x6c8]>', '<mov~~rax, qword ptr [rsp + 0x7e8]>', '<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x6c0], ecx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<jmp~~0x401329>']}, {'block_Idx': 311, 'blockInsts': ['<jmp~~0x40202e>']}, {'block_Idx': 237, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x258], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x260], rax>', '<mov~~rax, qword ptr [rsp + 0x260]>', '<mov~~rdx, qword ptr [rsp + 0x258]>', '<mov~~ecx, dword ptr [rsp + 0x5e0]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~dword ptr [rsp + 0x24c], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x250], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x260], rax>', '<jl~~0x402b84>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x1a0]>', '<mov~~rdx, qword ptr [rsp + 0x6a8]>', '<mov~~rsi, qword ptr [rsp + 0x1a8]>', '<mov~~edi, dword ptr [rsp + 0x1bc]>', '<mov~~rax, rsi>', '<add~~rax, 4>', '<mov~~dword ptr [rsi], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x18c], edx>', '<mov~~qword ptr [rsp + 0x190], rcx>', '<mov~~qword ptr [rsp + 0x198], rax>', '<jmp~~0x402f15>']}, {'block_Idx': 175, 'blockInsts': ['<lea~~rdi, [rip + 0x1f6b]>', '<lea~~rsi, [rip + 0x1efc]>', '<mov~~edx, 0x2be>', '<lea~~rcx, [rip + 0x1f69]>', '<call~~0x500050>']}, {'block_Idx': 118, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~ecx, dword ptr [rsp + 0x6a0]>', '<mov~~edx, dword ptr [rsp + 0x6a4]>', '<mov~~dword ptr [rsp + 0x688], edx>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500038>']}, {'block_Idx': 170, 'blockInsts': ['<jmp~~0x40176a>']}, {'block_Idx': 359, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x548]>', '<mov~~edx, dword ptr [rsp + 0x4f0]>', '<mov~~edi, dword ptr [rsp + 0x4ec]>', '<mov~~rsi, qword ptr [rsp + 0x550]>', '<mov~~ecx, dword ptr [rsp + 0x4e8]>', '<shl~~ecx, 1>', '<mov~~r8d, eax>', '<add~~r8d, -4>', '<mov~~r8d, r8d>', '<mov~~esi, dword ptr [rsi + r8*4]>', '<add~~ecx, edi>', '<add~~edx, esi>', '<sub~~ecx, edx>', '<mov~~dword ptr [rsp + 0x4e4], ecx>', '<cmp~~eax, 4>', '<jne~~0x40282b>']}, {'block_Idx': 228, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6a8]>', '<mov~~rax, qword ptr [rsp + 0x640]>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x240], rax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x248], ecx>', '<movsxd~~rcx, ecx>', '<cmp~~rax, rcx>', '<jge~~0x402c32>']}, {'block_Idx': 223, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~esi, dword ptr [rsp + 0x5e4]>', '<mov~~edx, dword ptr [rsp + 0x5bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x5ac], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x5ac]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x5b0], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402b44>']}, {'block_Idx': 226, 'blockInsts': ['<jmp~~0x4019d5>']}, {'block_Idx': 201, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5ec]>', '<mov~~edx, dword ptr [rsp + 0x5f8]>', '<mov~~rsi, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rsp + 0x620]>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsi], ecx>', '<mov~~dword ptr [rsp + 0x614], edx>', '<mov~~dword ptr [rsp + 0x618], ecx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<mov~~ecx, dword ptr [rsp + 0x614]>', '<mov~~eax, dword ptr [rsp + 0x618]>', '<mov~~edx, dword ptr [rsp + 0x61c]>', '<mov~~dword ptr [rsp + 0x5e0], edx>', '<mov~~dword ptr [rsp + 0x5e4], eax>', '<mov~~dword ptr [rsp + 0x5e8], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x4019b6>']}, {'block_Idx': 318, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x548]>', '<mov~~rcx, qword ptr [rsp + 0x550]>', '<mov~~edx, eax>', '<add~~edx, -1>', '<mov~~edx, edx>', '<mov~~ecx, dword ptr [rcx + rdx*4]>', '<mov~~dword ptr [rsp + 0x4f8], ecx>', '<cmp~~eax, 1>', '<je~~0x40238b>']}, {'block_Idx': 87, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x750]>', '<test~~eax, eax>', '<je~~0x40123d>']}, {'block_Idx': 129, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7f0]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x690], rcx>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x68c], eax>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x690]>', '<movsxd~~rcx, eax>', '<xor~~esi, esi>', '<call~~0x500040>']}, {'block_Idx': 247, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x524]>', '<mov~~edx, dword ptr [rsp + 0x520]>', '<mov~~eax, dword ptr [rsp + 0x52c]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x808]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x514], eax>', '<jmp~~0x401f54>']}, {'block_Idx': 172, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0xf8], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x403699>']}, {'block_Idx': 200, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x708]>', '<mov~~rdi, qword ptr [rax]>', '<lea~~rsi, [rip + 0x3c7f]>', '<xor~~edx, edx>', '<call~~0x500048>']}, {'block_Idx': 230, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x5a0]>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rsp + 0x598]>', '<mov~~esi, dword ptr [rsp + 0x5b0]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x590], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x5a0], rax>', '<jl~~0x401ba1>']}, {'block_Idx': 119, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~eax, dword ptr [rsp + 0x754]>', '<movsxd~~rdx, eax>', '<lea~~rax, [rip + 0x3ee5]>', '<mov~~eax, dword ptr [rax + rdx*4]>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401577>']}, {'block_Idx': 67, 'blockInsts': ['<jmp~~0x402c64>']}, {'block_Idx': 173, 'blockInsts': ['<lea~~rdi, [rip + 0x2199]>', '<lea~~rsi, [rip + 0x212a]>', '<mov~~edx, 0x2bc>', '<lea~~rcx, [rip + 0x2197]>', '<call~~0x500050>']}, {'block_Idx': 108, 'blockInsts': ['<jmp~~0x401300>']}, {'block_Idx': 130, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<sub~~eax, 0xd>', '<je~~0x4014c2>']}, {'block_Idx': 42, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7a4]>', '<cmp~~eax, 0>', '<jle~~0x400c2a>']}, {'block_Idx': 28, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x47f0]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 235, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x240]>', '<mov~~rdx, qword ptr [rsp + 0x670]>', '<mov~~rcx, qword ptr [rsp + 0x728]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x658], edx>', '<mov~~dword ptr [rsp + 0x65c], ecx>', '<mov~~qword ptr [rsp + 0x660], rax>', '<jmp~~0x4016d8>']}, {'block_Idx': 176, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x174], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x403699>']}, {'block_Idx': 38, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~rdx, qword ptr [rsp + 0x838]>', '<mov~~rdi, qword ptr [rsp + 0x858]>', '<mov~~rsi, qword ptr [rsp + 0x8b0]>', '<mov~~eax, dword ptr [rsp + 0x844]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x868], esi>', '<mov~~dword ptr [rsp + 0x86c], edx>', '<mov~~qword ptr [rsp + 0x870], rcx>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jne~~0x4037b0>']}, {'block_Idx': 357, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x4f8]>', '<mov~~ecx, dword ptr [rsp + 0x4f4]>', '<mov~~edx, dword ptr [rsp + 0x54c]>', '<mov~~edx, edx>', '<mov~~esi, edx>', '<mov~~rdx, rsi>', '<add~~rdx, -2>', '<mov~~qword ptr [rsp + 0x420], rdx>', '<add~~rsi, -3>', '<and~~rdx, 3>', '<mov~~qword ptr [rsp + 0x428], rdx>', '<mov~~edx, 2>', '<cmp~~rsi, 3>', '<mov~~qword ptr [rsp + 0x430], rdx>', '<mov~~dword ptr [rsp + 0x438], ecx>', '<mov~~dword ptr [rsp + 0x43c], eax>', '<jb~~0x402a73>']}, {'block_Idx': 49, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x808]>', '<mov~~rax, qword ptr [rsp + 0x7c8]>', '<mov~~edx, dword ptr [rsp + 0x7d4]>', '<mov~~qword ptr [rsp + 0x788], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x79c], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x794], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x798], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x7f8]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x7a0], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x7a4], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x7a8], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x7ac], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400b91>']}, {'block_Idx': 410, 'blockInsts': ['<jmp~~0x4025f7>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x848]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rdx, rax>', '<add~~rdx, 0xa4>', '<mov~~qword ptr [rsp + 0x838], rdx>', '<mov~~edx, dword ptr [rax + 0xa4]>', '<mov~~dword ptr [rsp + 0x840], edx>', '<xor~~edx, 0xffffffff>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<ja~~0x4037b0>']}, {'block_Idx': 134, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~rax, qword ptr [rsp + 0x7e8]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401577>']}, {'block_Idx': 255, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~rdx, qword ptr [rsp + 0x550]>', '<mov~~edi, dword ptr [rsp + 0x520]>', '<mov~~esi, dword ptr [rsp + 0x514]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x4fc], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x4fc]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x530]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x500], rax>', '<cmp~~rax, rcx>', '<je~~0x401fde>']}, {'block_Idx': 139, 'blockInsts': ['<mov~~dword ptr [rsp + 0x69c], eax>', '<cmp~~eax, 0>', '<je~~0x401614>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x844]>', '<mov~~rdi, qword ptr [rsp + 0x890]>', '<mov~~rsi, qword ptr [rsp + 0x880]>', '<mov~~ecx, dword ptr [rsp + 0x818]>', '<mov~~edx, dword ptr [rsp + 0x81c]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<add~~ecx, edx>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500020>']}, {'block_Idx': 50, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x7c0]>', '<mov~~eax, dword ptr [rsp + 0x7a0]>', '<mov~~rcx, qword ptr [rsp + 0x7b8]>', '<mov~~rdi, qword ptr [rcx]>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x788]>', '<cdqe~~>', '<add~~rdx, rax>', '<call~~0x400110>']}, {'block_Idx': 398, 'blockInsts': ['<jmp~~0x4024dd>']}, {'block_Idx': 327, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x54c]>', '<cmp~~eax, 1>', '<jle~~0x402b44>']}, {'block_Idx': 348, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x164]>', '<add~~rsp, 0x198>', '<ret~~>']}, {'block_Idx': 115, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<cmp~~eax, 0xc>', '<jge~~0x401441>']}, {'block_Idx': 341, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x54c]>', '<cmp~~eax, 2>', '<jle~~0x402b44>']}, {'block_Idx': 402, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x4f8]>', '<mov~~edx, dword ptr [rsp + 0x4f4]>', '<mov~~esi, dword ptr [rsp + 0x4ec]>', '<mov~~edi, dword ptr [rsp + 0x4e4]>', '<mov~~rax, qword ptr [rsp + 0x4b8]>', '<add~~rax, -4>', '<and~~rax, 0xfffffffffffffffe>', '<mov~~qword ptr [rsp + 0x490], rax>', '<mov~~r8d, 4>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x498], r8>', '<mov~~dword ptr [rsp + 0x4a0], edi>', '<mov~~dword ptr [rsp + 0x4a4], esi>', '<mov~~dword ptr [rsp + 0x4a8], edx>', '<mov~~dword ptr [rsp + 0x4ac], ecx>', '<mov~~qword ptr [rsp + 0x4b0], rax>', '<jmp~~0x4026f5>']}, {'block_Idx': 43, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x808]>', '<mov~~eax, dword ptr [rsp + 0x760]>', '<mov~~edx, dword ptr [rsp + 0x748]>', '<mov~~esi, dword ptr [rsp + 0x74c]>', '<mov~~dword ptr [rsp + 0x738], esi>', '<mov~~dword ptr [rsp + 0x73c], edx>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x740], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x400f0a>']}, {'block_Idx': 61, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x808]>', '<mov~~eax, dword ptr [rsp + 0x76c]>', '<add~~eax, 8>', '<mov~~dword ptr [rsp + 0x768], eax>', '<mov~~dword ptr [rcx], eax>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~edx, dword ptr [rsp + 0x7e0]>', '<mov~~ecx, eax>', '<mov~~eax, dword ptr [rsp + 0x768]>', '<add~~ecx, 2>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x780], eax>', '<jl~~0x400cfe>']}, {'block_Idx': 47, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~ecx, dword ptr [rsp + 0x7e0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x784], eax>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<add~~eax, 2>', '<cmp~~eax, ecx>', '<jge~~0x4036d0>']}, {'block_Idx': 58, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x740]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4603]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 41, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x7b0]>', '<cmp~~dword ptr [rax], 0>', '<jne~~0x400c09>']}, {'block_Idx': 387, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~rcx, qword ptr [rsp + 0x478]>', '<mov~~edx, dword ptr [rsp + 0x484]>', '<mov~~esi, dword ptr [rsp + 0x488]>', '<mov~~edi, dword ptr [rsp + 0x48c]>', '<mov~~dword ptr [rsp + 0x2b4], edi>', '<mov~~dword ptr [rsp + 0x2b8], esi>', '<mov~~dword ptr [rsp + 0x2bc], edx>', '<mov~~qword ptr [rsp + 0x2c0], rcx>', '<cmp~~rax, 0>', '<je~~0x402b44>']}, {'block_Idx': 373, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x4f8]>', '<mov~~ecx, dword ptr [rsp + 0x4f4]>', '<mov~~edx, dword ptr [rsp + 0x4ec]>', '<mov~~edi, dword ptr [rsp + 0x54c]>', '<mov~~esi, edi>', '<add~~rsi, -3>', '<mov~~qword ptr [rsp + 0x468], rsi>', '<and~~rsi, 1>', '<mov~~qword ptr [rsp + 0x470], rsi>', '<mov~~esi, 3>', '<cmp~~edi, 4>', '<mov~~qword ptr [rsp + 0x478], rsi>', '<mov~~dword ptr [rsp + 0x484], edx>', '<mov~~dword ptr [rsp + 0x488], ecx>', '<mov~~dword ptr [rsp + 0x48c], eax>', '<je~~0x402958>']}, {'block_Idx': 250, 'blockInsts': ['<push~~rbp>', '<mov~~rbp, rsp>', '<push~~rbx>', '<sub~~rsp, 0x4a8>', '<mov~~dword ptr [rbp - 0x38], edx>', '<mov~~dword ptr [rbp - 0x34], esi>', '<mov~~qword ptr [rbp - 0x30], rdi>', '<mov~~eax, edx>', '<mov~~qword ptr [rbp - 0x28], rax>', '<lea~~rcx, [rax*4 + 0xf]>', '<and~~rcx, 0xfffffffffffffff0>', '<mov~~rax, rsp>', '<sub~~rax, rcx>', '<mov~~qword ptr [rbp - 0x20], rax>', '<mov~~rsp, rax>', '<movsxd~~rax, esi>', '<mov~~rax, qword ptr [rdi + rax*8 + 0x58]>', '<mov~~qword ptr [rbp - 0x18], rax>', '<cmp~~edx, 0>', '<setg~~al>', '<mov~~byte ptr [rbp - 9], al>', '<test~~al, 1>', '<jne~~0x4039cf>']}, {'block_Idx': 282, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x402c64>']}, {'block_Idx': 55, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x784]>', '<mov~~rcx, qword ptr [rsp + 0x7f0]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x770], rcx>', '<mov~~ecx, eax>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x77c], ecx>', '<mov~~dword ptr [rsp + 0x780], eax>', '<mov~~ecx, dword ptr [rsp + 0x77c]>', '<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~edx, dword ptr [rsp + 0x780]>', '<mov~~dword ptr [rsp + 0x76c], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x4036d0>']}, {'block_Idx': 411, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x550]>', '<mov~~rcx, qword ptr [rsp + 0x2a8]>', '<mov~~esi, dword ptr [rsp + 0x298]>', '<mov~~edi, dword ptr [rsp + 0x29c]>', '<mov~~r8d, dword ptr [rsp + 0x2a0]>', '<mov~~edx, dword ptr [rsp + 0x2a4]>', '<add~~edx, dword ptr [rax + rcx*4]>', '<add~~edx, r8d>', '<add~~edx, edi>', '<add~~edx, esi>', '<mov~~dword ptr [rax + rcx*4], edx>', '<jmp~~0x402b44>']}, {'block_Idx': 203, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0xa8]>', '<mov~~edx, dword ptr [rsp + 0xb8]>', '<mov~~rsi, qword ptr [rsp + 0xa0]>', '<mov~~edi, dword ptr [rsp + 0xbc]>', '<mov~~ecx, dword ptr [rsp + 0xc0]>', '<mov~~r8d, dword ptr [rsp + 0xc4]>', '<mov~~word ptr [rsi], r8w>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0x8c], edx>', '<mov~~qword ptr [rsp + 0x90], rcx>', '<mov~~qword ptr [rsp + 0x98], rax>', '<mov~~rsi, qword ptr [rsp + 0xb0]>', '<mov~~eax, dword ptr [rsp + 0x8c]>', '<mov~~rcx, qword ptr [rsp + 0x90]>', '<mov~~rdx, qword ptr [rsp + 0x98]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0xdc], edi>', '<mov~~qword ptr [rsp + 0xe0], rsi>', '<mov~~qword ptr [rsp + 0xe8], rdx>', '<mov~~qword ptr [rsp + 0xf0], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x40333c>']}, {'block_Idx': 0, 'blockInsts': ['<push~~rbx>', '<sub~~rsp, 0x8c0>', '<mov~~qword ptr [rsp + 0x878], rdx>', '<mov~~qword ptr [rsp + 0x880], rcx>', '<mov~~dword ptr [rsp + 0x88c], r8d>', '<mov~~rax, qword ptr [rdi + 0xa0]>', '<mov~~qword ptr [rsp + 0x890], rax>', '<mov~~rcx, rsi>', '<mov~~qword ptr [rsp + 0x898], rcx>', '<mov~~qword ptr [rsp + 0x8a0], rsi>', '<mov~~ecx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x8ac], ecx>', '<mov~~dword ptr [rdx], 0>', '<mov~~rcx, rax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x8b0], rcx>', '<mov~~eax, dword ptr [rax + 4]>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x8bc], eax>', '<jne~~0x4005dd>']}, {'block_Idx': 403, 'blockInsts': ['<jmp~~0x402c64>']}, {'block_Idx': 303, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x402c64>']}, {'block_Idx': 165, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x234]>', '<cmp~~eax, 2>', '<jne~~0x4030c5>']}, {'block_Idx': 57, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x808]>', '<mov~~rax, qword ptr [rsp + 0x758]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rsi, qword ptr [rsp + 0x730]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x700], esi>', '<cmp~~esi, 0x10>', '<setg~~r8b>', '<mov~~byte ptr [rsp + 0x707], r8b>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x708], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r9d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r9d>', '<mov~~r9d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r9d, r11d>', '<and~~r8b, 1>', '<movzx~~r8d, r8b>', '<mov~~dword ptr [rdi + 0x58], r10d>', '<sub~~r9d, esi>', '<mov~~r10, rdi>', '<mov~~qword ptr [rsp + 0x710], r10>', '<mov~~r10, rdx>', '<add~~r10, 0x48>', '<mov~~qword ptr [rsp + 0x718], r10>', '<mov~~dword ptr [rdx + 0x48], r9d>', '<mov~~r9, rdx>', '<add~~r9, 0x4c>', '<mov~~qword ptr [rsp + 0x720], r9>', '<mov~~dword ptr [rdx + 0x4c], r8d>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x728], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x401057>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x88c]>', '<mov~~esi, dword ptr [rsp + 0x864]>', '<mov~~ecx, dword ptr [rsp + 0x854]>', '<xor~~edx, edx>', '<sub~~ecx, esi>', '<cmovb~~ecx, edx>', '<cmp~~ecx, eax>', '<cmovb~~eax, ecx>', '<mov~~dword ptr [rsp + 0x850], eax>', '<mov~~eax, dword ptr [rsp + 0x864]>', '<mov~~edx, dword ptr [rsp + 0x850]>', '<mov~~dword ptr [rsp + 0x844], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x848], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jb~~0x4037b0>']}, {'block_Idx': 202, 'blockInsts': ['<jmp~~0x402c64>']}, {'block_Idx': 220, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~edi, dword ptr [rsp + 0x5e8]>', '<mov~~esi, dword ptr [rsp + 0x5e4]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~r9d, dword ptr [rsp + 0x5c4]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x5b4], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x5c0]>', '<mov~~dword ptr [rsp + 0x5b8], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x5b4]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x5b8]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x5bc], eax>', '<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~esi, dword ptr [rsp + 0x5e4]>', '<mov~~edx, dword ptr [rsp + 0x5bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x5ac], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x5ac]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x5b0], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402b44>']}, {'block_Idx': 197, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x1a8]>', '<mov~~edx, dword ptr [rsp + 0x1b8]>', '<mov~~rsi, qword ptr [rsp + 0x1a0]>', '<mov~~ecx, dword ptr [rsp + 0x1bc]>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 2>', '<mov~~word ptr [rsi], di>', '<mov~~dword ptr [rsp + 0x18c], edx>', '<mov~~qword ptr [rsp + 0x190], rcx>', '<mov~~qword ptr [rsp + 0x198], rax>', '<mov~~rdx, qword ptr [rsp + 0x1b0]>', '<mov~~esi, dword ptr [rsp + 0x18c]>', '<mov~~rax, qword ptr [rsp + 0x190]>', '<mov~~rcx, qword ptr [rsp + 0x198]>', '<mov~~qword ptr [rsp + 0x178], rcx>', '<mov~~qword ptr [rsp + 0x180], rax>', '<mov~~dword ptr [rsp + 0x188], esi>', '<add~~rdx, 1>', '<movsxd~~rdi, esi>', '<cmp~~rdx, rdi>', '<mov~~dword ptr [rsp + 0x1cc], esi>', '<mov~~qword ptr [rsp + 0x1d0], rdx>', '<mov~~qword ptr [rsp + 0x1d8], rcx>', '<mov~~qword ptr [rsp + 0x1e0], rax>', '<jl~~0x402e16>']}, {'block_Idx': 96, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x750]>', '<sub~~eax, 6>', '<je~~0x40125a>']}, {'block_Idx': 154, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x754]>', '<mov~~rdi, qword ptr [rsp + 0x710]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x406a]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x38]>', '<mov~~edx, dword ptr [rsp + 0x48]>', '<mov~~rsi, qword ptr [rsp + 0x30]>', '<mov~~edi, dword ptr [rsp + 0x4c]>', '<mov~~ecx, dword ptr [rsp + 0x50]>', '<mov~~r8d, dword ptr [rsp + 0x54]>', '<mov~~word ptr [rsi], r8w>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0x1c], edx>', '<mov~~qword ptr [rsp + 0x20], rcx>', '<mov~~qword ptr [rsp + 0x28], rax>', '<mov~~rsi, qword ptr [rsp + 0x40]>', '<mov~~eax, dword ptr [rsp + 0x1c]>', '<mov~~rcx, qword ptr [rsp + 0x20]>', '<mov~~rdx, qword ptr [rsp + 0x28]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x6c], edi>', '<mov~~qword ptr [rsp + 0x70], rsi>', '<mov~~qword ptr [rsp + 0x78], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x40356a>']}, {'block_Idx': 440, 'blockInsts': ['<mov~~eax, dword ptr [rbp - 0xac]>', '<lea~~rsp, [rbp - 8]>', '<pop~~rbx>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 238, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<mov~~edx, dword ptr [rsp + 0x5e8]>', '<mov~~rsi, qword ptr [rsp + 0x640]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<add~~rax, 0x58>', '<shl~~rsi, 3>', '<add~~rax, rsi>', '<mov~~qword ptr [rsp + 0x5c8], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x5d0], edx>', '<mov~~dword ptr [rsp + 0x5d4], ecx>', '<mov~~qword ptr [rsp + 0x5d8], rax>', '<jmp~~0x401be4>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x820]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~edx, dword ptr [rsp + 0x848]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<call~~0x500010>']}, {'block_Idx': 232, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402b44>']}, {'block_Idx': 160, 'blockInsts': ['<jmp~~0x402c64>']}, {'block_Idx': 174, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x88], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x403699>']}, {'block_Idx': 54, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x764]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~r8d, dword ptr [rsp + 0x744]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4684]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 243, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~esi, dword ptr [rsp + 0x658]>', '<mov~~edx, dword ptr [rsp + 0x65c]>', '<mov~~rax, qword ptr [rsp + 0x660]>', '<mov~~qword ptr [rsp + 0x640], rax>', '<mov~~dword ptr [rsp + 0x648], edx>', '<mov~~dword ptr [rsp + 0x64c], esi>', '<mov~~dword ptr [rcx], edx>', '<cmp~~rax, 0>', '<jne~~0x401730>']}, {'block_Idx': 182, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x898]>', '<mov~~rcx, qword ptr [rsp + 0x8a0]>', '<mov~~esi, dword ptr [rsp + 0xf8]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0xc8], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0xd0], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0xdc], esi>', '<mov~~qword ptr [rsp + 0xe0], rdx>', '<mov~~qword ptr [rsp + 0xe8], rcx>', '<mov~~qword ptr [rsp + 0xf0], rax>', '<jmp~~0x40333c>']}, {'block_Idx': 438, 'blockInsts': ['<jmp~~0x402b44>']}, {'block_Idx': 114, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~eax, dword ptr [rax + 8]>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401577>']}, {'block_Idx': 146, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~rax, qword ptr [rsp + 0x7e8]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401577>']}, {'block_Idx': 86, 'blockInsts': ['<jmp~~0x402c64>']}, {'block_Idx': 215, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0xb0]>', '<mov~~eax, dword ptr [rsp + 0x8c]>', '<mov~~rcx, qword ptr [rsp + 0x90]>', '<mov~~rdx, qword ptr [rsp + 0x98]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0xdc], edi>', '<mov~~qword ptr [rsp + 0xe0], rsi>', '<mov~~qword ptr [rsp + 0xe8], rdx>', '<mov~~qword ptr [rsp + 0xf0], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x40333c>']}, {'block_Idx': 88, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6e0]>', '<mov~~rdx, qword ptr [rsp + 0x6e8]>', '<mov~~eax, dword ptr [rsp + 0x6f4]>', '<mov~~dword ptr [rsp + 0x6cc], eax>', '<mov~~qword ptr [rsp + 0x6d0], rdx>', '<mov~~qword ptr [rsp + 0x6d8], rcx>', '<cmp~~eax, 1>', '<jle~~0x4011d7>']}, {'block_Idx': 234, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x608]>', '<cmp~~eax, 0x1f>', '<jle~~0x402890>']}, {'block_Idx': 401, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4c0]>', '<mov~~rcx, qword ptr [rsp + 0x4c8]>', '<mov~~edx, dword ptr [rsp + 0x4d4]>', '<mov~~esi, dword ptr [rsp + 0x4d8]>', '<mov~~edi, dword ptr [rsp + 0x4dc]>', '<mov~~r8d, dword ptr [rsp + 0x4e0]>', '<mov~~dword ptr [rsp + 0x298], r8d>', '<mov~~dword ptr [rsp + 0x29c], edi>', '<mov~~dword ptr [rsp + 0x2a0], esi>', '<mov~~dword ptr [rsp + 0x2a4], edx>', '<mov~~qword ptr [rsp + 0x2a8], rcx>', '<cmp~~rax, 0>', '<je~~0x402b44>']}, {'block_Idx': 195, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x718]>', '<mov~~rax, qword ptr [rsp + 0x720]>', '<mov~~rsi, qword ptr [rsp + 0x148]>', '<mov~~rdx, qword ptr [rsp + 0x140]>', '<mov~~r8d, dword ptr [rsp + 0x154]>', '<mov~~rdi, qword ptr [rsp + 0x158]>', '<mov~~r9, qword ptr [rsp + 0x160]>', '<mov~~r10, qword ptr [rsp + 0x168]>', '<mov~~qword ptr [rsp + 0x110], r10>', '<mov~~qword ptr [rsp + 0x118], r9>', '<mov~~qword ptr [rsp + 0x120], rdi>', '<mov~~dword ptr [rsp + 0x12c], r8d>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~dword ptr [rsp + 0x130], edx>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~dword ptr [rsp + 0x134], esi>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x138], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x13c], edx>', '<cmp~~eax, 0>', '<je~~0x4031d5>']}, {'block_Idx': 90, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jmp~~0x4037b0>']}, {'block_Idx': 179, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rsp + 0x7f0]>', '<mov~~edx, dword ptr [rsp + 0x63c]>', '<mov~~dword ptr [rsp + 0x620], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x624], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x628], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x638], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x634], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x638]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x4017f9>']}, {'block_Idx': 53, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x740]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x400f3b>']}, {'block_Idx': 45, 'blockInsts': ['<jmp~~0x400e81>']}, {'block_Idx': 256, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x548]>', '<mov~~rdi, qword ptr [rsp + 0x890]>', '<mov~~rax, qword ptr [rsp + 0x640]>', '<mov~~esi, eax>', '<call~~0x4048d0>']}, {'block_Idx': 460, 'blockInsts': ['<mov~~rax, qword ptr [rbp - 0x18]>', '<mov~~ecx, dword ptr [rbp - 0xb4]>', '<mov~~edx, dword ptr [rbp - 0x3a8]>', '<sar~~edx, cl>', '<mov~~ecx, dword ptr [rbp - 0x3a4]>', '<movsxd~~rcx, ecx>', '<add~~edx, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rax + rcx*4], edx>', '<xor~~eax, eax>', '<mov~~dword ptr [rbp - 0xac], eax>', '<mov~~eax, dword ptr [rbp - 0xac]>', '<lea~~rsp, [rbp - 8]>', '<pop~~rbx>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~esi, dword ptr [rsp + 0x868]>', '<mov~~eax, dword ptr [rsp + 0x86c]>', '<mov~~rdx, qword ptr [rsp + 0x870]>', '<mov~~dword ptr [rsp + 0x7e0], eax>', '<mov~~dword ptr [rsp + 0x7e4], esi>', '<mov~~edi, eax>', '<shl~~edi, 3>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x7e8], rdx>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~edi, esi>', '<xor~~r8d, r8d>', '<cmp~~eax, 0>', '<mov~~esi, eax>', '<cmovl~~esi, r8d>', '<mov~~r8, rcx>', '<add~~r8, 0x28>', '<mov~~qword ptr [rsp + 0x7f0], r8>', '<mov~~qword ptr [rcx + 0x28], rdx>', '<mov~~r8, rcx>', '<add~~r8, 0x3c>', '<mov~~qword ptr [rsp + 0x7f8], r8>', '<mov~~dword ptr [rcx + 0x3c], edi>', '<mov~~esi, esi>', '<add~~rdx, rsi>', '<mov~~rsi, rcx>', '<add~~rsi, 0x30>', '<mov~~qword ptr [rsp + 0x800], rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x808], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<cmp~~eax, 0x18>', '<jl~~0x4036d0>']}, {'block_Idx': 180, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x808]>', '<mov~~edx, dword ptr [rsp + 0x624]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x634]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x608], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 7>', '<mov~~dword ptr [rsi], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~edx, 8>', '<mov~~dword ptr [rsi], edx>', '<mov~~edi, 0x80>', '<shr~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x620]>', '<and~~edi, eax>', '<xor~~eax, eax>', '<mov~~esi, 1>', '<cmp~~edi, 0>', '<mov~~edi, edx>', '<mov~~dword ptr [rsp + 0x60c], edi>', '<mov~~dword ptr [rsp + 0x610], esi>', '<mov~~dword ptr [rsp + 0x614], edx>', '<mov~~dword ptr [rsp + 0x618], ecx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<je~~0x401969>']}, {'block_Idx': 27, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x808]>', '<mov~~rax, qword ptr [rsp + 0x7e8]>', '<mov~~edx, dword ptr [rsp + 0x7dc]>', '<mov~~esi, edx>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x750], esi>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x754], edx>', '<mov~~rdx, rax>', '<add~~rdx, 3>', '<mov~~qword ptr [rsp + 0x758], rdx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x760], eax>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x764], eax>', '<mov~~dword ptr [rcx], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x400e2f>']}, {'block_Idx': 64, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x6f8], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~ecx, edi>', '<shr~~ecx, 8>', '<mov~~eax, edx>', '<or~~eax, 8>', '<cmp~~esi, 0>', '<cmove~~ecx, edi>', '<cmp~~esi, 0>', '<cmove~~eax, edx>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, qword ptr [rip + 0xfef5e]>', '<movzx~~ecx, byte ptr [rcx + rdx]>', '<add~~eax, ecx>', '<mov~~ecx, 7>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsp + 0x6fc], ecx>', '<cmp~~eax, 6>', '<je~~0x4011f4>']}, {'block_Idx': 328, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x548]>', '<mov~~ecx, dword ptr [rsp + 0x4f8]>', '<mov~~rdx, qword ptr [rsp + 0x550]>', '<mov~~esi, eax>', '<add~~esi, -2>', '<mov~~esi, esi>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~dword ptr [rsp + 0x4f0], edx>', '<sub~~ecx, edx>', '<mov~~dword ptr [rsp + 0x4f4], ecx>', '<cmp~~eax, 2>', '<jbe~~0x4022d2>']}, {'block_Idx': 236, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x248]>', '<mov~~rcx, qword ptr [rsp + 0x670]>', '<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x67c], edx>', '<mov~~dword ptr [rsp + 0x680], ecx>', '<mov~~dword ptr [rsp + 0x684], eax>', '<jmp~~0x402cad>']}, {'block_Idx': 217, 'blockInsts': ['<jmp~~0x403699>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~eax, dword ptr [rsp + 0x7e0]>', '<mov~~ecx, dword ptr [rsp + 0x18]>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<sub~~ecx, eax>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x1e05]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 227, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x608]>', '<add~~eax, -8>', '<cmp~~eax, 5>', '<jae~~0x402852>']}, {'block_Idx': 75, 'blockInsts': ['<jmp~~0x402c64>']}, {'block_Idx': 157, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jmp~~0x403699>']}, {'block_Idx': 418, 'blockInsts': ['<jmp~~0x4026f5>']}, {'block_Idx': 148, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x58]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 178, 'blockInsts': ['<mov~~edi, dword ptr [rsp + 0x20c]>', '<mov~~esi, dword ptr [rsp + 0x210]>', '<mov~~edx, dword ptr [rsp + 0x214]>', '<mov~~r8, qword ptr [rsp + 0x218]>', '<mov~~rax, qword ptr [rsp + 0x220]>', '<mov~~rcx, qword ptr [rsp + 0x228]>', '<mov~~qword ptr [rsp + 0x1c0], r8>', '<xor~~r8d, r8d>', '<cmp~~edx, 0>', '<mov~~r9d, esi>', '<mov~~dword ptr [rsp + 0x1cc], r9d>', '<mov~~qword ptr [rsp + 0x1d0], r8>', '<mov~~r8, rax>', '<mov~~qword ptr [rsp + 0x1d8], r8>', '<mov~~r8, rcx>', '<mov~~qword ptr [rsp + 0x1e0], r8>', '<mov~~dword ptr [rsp + 0x1ec], edi>', '<mov~~dword ptr [rsp + 0x1f0], esi>', '<mov~~dword ptr [rsp + 0x1f4], edx>', '<mov~~qword ptr [rsp + 0x1f8], rcx>', '<mov~~qword ptr [rsp + 0x200], rax>', '<jle~~0x402fc2>']}, {'block_Idx': 214, 'blockInsts': ['<jmp~~0x403699>']}, {'block_Idx': 177, 'blockInsts': ['<lea~~rdi, [rip + 0x23f1]>', '<lea~~rsi, [rip + 0x2382]>', '<mov~~edx, 0x2ba>', '<lea~~rcx, [rip + 0x23ef]>', '<call~~0x500050>']}, {'block_Idx': 46, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x764]>', '<add~~eax, -7>', '<mov~~ecx, 2>', '<mov~~dword ptr [rsp + 0x748], ecx>', '<mov~~dword ptr [rsp + 0x74c], eax>', '<jmp~~0x400eb1>']}, {'block_Idx': 222, 'blockInsts': ['<jmp~~0x402c64>']}, {'block_Idx': 1, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x88c]>', '<mov~~rax, qword ptr [rsp + 0x8b0]>', '<mov~~rsi, qword ptr [rsp + 0x890]>', '<mov~~edx, 4>', '<cmp~~ecx, 4>', '<cmovg~~edx, ecx>', '<mov~~dword ptr [rax], edx>', '<mov~~rdi, qword ptr [rsi + 0x98]>', '<add~~rsi, 0xa8>', '<call~~0x500010>']}, {'block_Idx': 142, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x7b0]>', '<mov~~dword ptr [rax], 1>', '<mov~~eax, dword ptr [rsp + 0x7a4]>', '<cmp~~eax, 0>', '<jle~~0x400c2a>']}, {'block_Idx': 32, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jmp~~0x4037b0>']}, {'block_Idx': 158, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x648]>', '<mov~~ecx, dword ptr [rsp + 0x64c]>', '<cmp~~ecx, 2>', '<mov~~dword ptr [rsp + 0x63c], eax>', '<je~~0x40174f>']}, {'block_Idx': 40, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7f0]>', '<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~eax, dword ptr [rax]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x7c8], rcx>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<jmp~~0x400a29>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x7e8]>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x7d8], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x7dc], eax>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x400c73>']}, {'block_Idx': 210, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x1b0]>', '<mov~~esi, dword ptr [rsp + 0x18c]>', '<mov~~rax, qword ptr [rsp + 0x190]>', '<mov~~rcx, qword ptr [rsp + 0x198]>', '<mov~~qword ptr [rsp + 0x178], rcx>', '<mov~~qword ptr [rsp + 0x180], rax>', '<mov~~dword ptr [rsp + 0x188], esi>', '<add~~rdx, 1>', '<movsxd~~rdi, esi>', '<cmp~~rdx, rdi>', '<mov~~dword ptr [rsp + 0x1cc], esi>', '<mov~~qword ptr [rsp + 0x1d0], rdx>', '<mov~~qword ptr [rsp + 0x1d8], rcx>', '<mov~~qword ptr [rsp + 0x1e0], rax>', '<jl~~0x402e16>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x890]>', '<mov~~rdx, qword ptr [rsp + 0x8b0]>', '<mov~~ecx, dword ptr [rsp + 0x88c]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x880]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~esi, dword ptr [rdx]>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x8bc], esi>', '<mov~~dword ptr [rsp + 0x868], edx>', '<mov~~dword ptr [rsp + 0x86c], ecx>', '<mov~~qword ptr [rsp + 0x870], rax>', '<je~~0x4008d8>']}, {'block_Idx': 374, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x54c]>', '<cmp~~eax, 4>', '<jle~~0x402b44>']}, {'block_Idx': 240, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<mov~~edx, dword ptr [rsp + 0x5e8]>', '<mov~~eax, dword ptr [rsp + 0x548]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x530], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x538], edx>', '<mov~~dword ptr [rsp + 0x53c], ecx>', '<mov~~qword ptr [rsp + 0x540], rax>', '<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x538]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~rsi, qword ptr [rsp + 0x540]>', '<mov~~qword ptr [rsp + 0x518], rsi>', '<mov~~dword ptr [rsp + 0x520], eax>', '<mov~~dword ptr [rsp + 0x524], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x528], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x52c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401ec8>']}, {'block_Idx': 168, 'blockInsts': ['<jmp~~0x40176a>']}, {'block_Idx': 229, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402bce>']}, {'block_Idx': 231, 'blockInsts': ['<jmp~~0x402b44>']}, {'block_Idx': 19, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7d8]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400d8e>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x84c]>', '<add~~rsp, 0x8c0>', '<pop~~rbx>', '<ret~~>']}, {'block_Idx': 370, 'blockInsts': ['<jmp~~0x402423>']}, {'block_Idx': 124, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~rax, qword ptr [rsp + 0x7e8]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401577>']}, {'block_Idx': 221, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x608]>', '<sub~~eax, 1>', '<jne~~0x401d9d>']}, {'block_Idx': 340, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x4f8]>', '<mov~~ecx, dword ptr [rsp + 0x54c]>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, rdx>', '<add~~rcx, -1>', '<mov~~qword ptr [rsp + 0x3e0], rcx>', '<add~~rdx, -2>', '<and~~rcx, 3>', '<mov~~qword ptr [rsp + 0x3e8], rcx>', '<mov~~ecx, 1>', '<cmp~~rdx, 3>', '<mov~~qword ptr [rsp + 0x3f0], rcx>', '<mov~~dword ptr [rsp + 0x3fc], eax>', '<jb~~0x4028b0>']}, {'block_Idx': 167, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x878]>', '<mov~~rdi, qword ptr [rsp + 0x720]>', '<mov~~rdx, qword ptr [rsp + 0x6a8]>', '<mov~~ecx, dword ptr [rsp + 0x230]>', '<imul~~ecx, dword ptr [rdx]>', '<mov~~edx, 4>', '<mov~~esi, 2>', '<cmp~~dword ptr [rdi], 0>', '<cmove~~edx, esi>', '<imul~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x7e0]>', '<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x18], eax>', '<cmp~~eax, ecx>', '<jle~~0x403747>']}, {'block_Idx': 207, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x118]>', '<mov~~edx, dword ptr [rsp + 0x12c]>', '<mov~~rsi, qword ptr [rsp + 0x110]>', '<mov~~ecx, dword ptr [rsp + 0x138]>', '<mov~~r8d, dword ptr [rsp + 0x134]>', '<mov~~edi, dword ptr [rsp + 0x130]>', '<mov~~r9d, dword ptr [rsp + 0x13c]>', '<mov~~word ptr [rsi], r9w>', '<sub~~edi, r8d>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0xfc], edx>', '<mov~~qword ptr [rsp + 0x100], rcx>', '<mov~~qword ptr [rsp + 0x108], rax>', '<mov~~rsi, qword ptr [rsp + 0x120]>', '<mov~~eax, dword ptr [rsp + 0xfc]>', '<mov~~rcx, qword ptr [rsp + 0x100]>', '<mov~~rdx, qword ptr [rsp + 0x108]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x154], edi>', '<mov~~qword ptr [rsp + 0x158], rsi>', '<mov~~qword ptr [rsp + 0x160], rdx>', '<mov~~qword ptr [rsp + 0x168], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x4030e4>']}, {'block_Idx': 208, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x668]>', '<mov~~rsi, qword ptr [rsp + 0x118]>', '<mov~~rax, qword ptr [rsp + 0x718]>', '<mov~~ecx, dword ptr [rsp + 0x134]>', '<mov~~edi, dword ptr [rsp + 0x130]>', '<mov~~r8d, dword ptr [rsp + 0x13c]>', '<mov~~dword ptr [rsi], r8d>', '<sub~~edi, ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0x110]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0xfc], edx>', '<mov~~qword ptr [rsp + 0x100], rcx>', '<mov~~qword ptr [rsp + 0x108], rax>', '<jmp~~0x40323a>']}, {'block_Idx': 184, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x898]>', '<mov~~rcx, qword ptr [rsp + 0x8a0]>', '<mov~~esi, dword ptr [rsp + 0x88]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x58], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x60], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0x6c], esi>', '<mov~~qword ptr [rsp + 0x70], rdx>', '<mov~~qword ptr [rsp + 0x78], rcx>', '<mov~~qword ptr [rsp + 0x80], rax>', '<jmp~~0x40356a>']}, {'block_Idx': 209, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x178]>', '<mov~~rcx, qword ptr [rsp + 0x180]>', '<mov~~edx, dword ptr [rsp + 0x188]>', '<mov~~rsi, qword ptr [rsp + 0x668]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x1ec], esi>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x1f0], esi>', '<mov~~dword ptr [rsp + 0x1f4], edx>', '<mov~~qword ptr [rsp + 0x1f8], rcx>', '<mov~~qword ptr [rsp + 0x200], rax>', '<mov~~rsi, qword ptr [rsp + 0x1c0]>', '<mov~~eax, dword ptr [rsp + 0x1ec]>', '<mov~~r8d, dword ptr [rsp + 0x1f0]>', '<mov~~edi, dword ptr [rsp + 0x1f4]>', '<mov~~rcx, qword ptr [rsp + 0x1f8]>', '<mov~~rdx, qword ptr [rsp + 0x200]>', '<add~~rsi, 1>', '<movsxd~~r9, eax>', '<cmp~~rsi, r9>', '<mov~~r9d, eax>', '<mov~~dword ptr [rsp + 0x20c], r9d>', '<mov~~dword ptr [rsp + 0x210], r8d>', '<mov~~dword ptr [rsp + 0x214], edi>', '<mov~~qword ptr [rsp + 0x218], rsi>', '<mov~~qword ptr [rsp + 0x220], rdx>', '<mov~~qword ptr [rsp + 0x228], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402d87>']}, {'block_Idx': 211, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5e4]>', '<mov~~ecx, dword ptr [rsp + 0x5e8]>', '<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x5c0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x5c4], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401aaf>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x814]>', '<mov~~ecx, dword ptr [rsp + 0x810]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rdx + 0x98]>', '<mov~~ecx, ecx>', '<mov~~rsi, rdi>', '<add~~rsi, rcx>', '<mov~~eax, eax>', '<mov~~edx, eax>', '<call~~0x500018>']}, {'block_Idx': 163, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x234]>', '<cmp~~eax, 2>', '<jne~~0x40331d>']}, {'block_Idx': 258, 'blockInsts': ['<jmp~~0x402c64>']}, {'block_Idx': 33, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x79c]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x794]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<jne~~0x4036d0>']}, {'block_Idx': 125, 'blockInsts': ['<jmp~~0x40144f>']}, {'block_Idx': 44, 'blockInsts': ['<jmp~~0x400e81>']}, {'block_Idx': 252, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~edi, dword ptr [rsp + 0x584]>', '<mov~~esi, dword ptr [rsp + 0x580]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~r9d, dword ptr [rsp + 0x58c]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x56c], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x588]>', '<mov~~dword ptr [rsp + 0x570], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x56c]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x570]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x574], eax>', '<mov~~rax, qword ptr [rsp + 0x578]>', '<mov~~rdx, qword ptr [rsp + 0x5c8]>', '<mov~~edi, dword ptr [rsp + 0x580]>', '<mov~~esi, dword ptr [rsp + 0x574]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x55c], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x55c]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x560], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402b44>']}, {'block_Idx': 100, 'blockInsts': ['<jmp~~0x40122c>']}, {'block_Idx': 313, 'blockInsts': ['<sub~~rsp, 0x198>', '<mov~~dword ptr [rsp + 0x168], edx>', '<mov~~dword ptr [rsp + 0x16c], esi>', '<mov~~qword ptr [rsp + 0x170], rdi>', '<mov~~rax, rdi>', '<add~~rax, 0x38>', '<mov~~qword ptr [rsp + 0x178], rax>', '<mov~~ecx, dword ptr [rdi + 0x38]>', '<mov~~dword ptr [rsp + 0x18c], ecx>', '<mov~~rax, qword ptr [rdi + 0x28]>', '<mov~~qword ptr [rsp + 0x180], rax>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x18c]>', '<shr~~eax, 0xfe>', '<mov~~dword ptr [rsp + 0x190], eax>', '<add~~ecx, 2>', '<mov~~dword ptr [rsp + 0x194], ecx>', '<mov~~dword ptr [rdi + 0x38], ecx>', '<cmp~~eax, 1>', '<jle~~0x404984>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x608]>', '<test~~eax, eax>', '<je~~0x401a34>']}, {'block_Idx': 194, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x718]>', '<mov~~rax, qword ptr [rsp + 0x720]>', '<mov~~rsi, qword ptr [rsp + 0x60]>', '<mov~~rdx, qword ptr [rsp + 0x58]>', '<mov~~r8d, dword ptr [rsp + 0x6c]>', '<mov~~rdi, qword ptr [rsp + 0x70]>', '<mov~~r9, qword ptr [rsp + 0x78]>', '<mov~~r10, qword ptr [rsp + 0x80]>', '<mov~~qword ptr [rsp + 0x30], r10>', '<mov~~qword ptr [rsp + 0x38], r9>', '<mov~~qword ptr [rsp + 0x40], rdi>', '<mov~~dword ptr [rsp + 0x48], r8d>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~eax, dword ptr [rax]>', '<mov~~edi, esi>', '<sar~~edi, 1>', '<sub~~edx, edi>', '<mov~~dword ptr [rsp + 0x4c], edx>', '<add~~edx, esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x50], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x54], edx>', '<cmp~~eax, 0>', '<je~~0x403618>']}, {'block_Idx': 188, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x1c0]>', '<mov~~eax, dword ptr [rsp + 0x1ec]>', '<mov~~r8d, dword ptr [rsp + 0x1f0]>', '<mov~~edi, dword ptr [rsp + 0x1f4]>', '<mov~~rcx, qword ptr [rsp + 0x1f8]>', '<mov~~rdx, qword ptr [rsp + 0x200]>', '<add~~rsi, 1>', '<movsxd~~r9, eax>', '<cmp~~rsi, r9>', '<mov~~r9d, eax>', '<mov~~dword ptr [rsp + 0x20c], r9d>', '<mov~~dword ptr [rsp + 0x210], r8d>', '<mov~~dword ptr [rsp + 0x214], edi>', '<mov~~qword ptr [rsp + 0x218], rsi>', '<mov~~qword ptr [rsp + 0x220], rdx>', '<mov~~qword ptr [rsp + 0x228], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402d87>']}, {'block_Idx': 82, 'blockInsts': ['<jmp~~0x402c64>']}, {'block_Idx': 98, 'blockInsts': ['<jmp~~0x402c64>']}, {'block_Idx': 233, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~rdx, qword ptr [rsp + 0x640]>', '<mov~~rsi, qword ptr [rsp + 0x668]>', '<mov~~eax, dword ptr [rsp + 0x608]>', '<and~~eax, 0xfffffff7>', '<mov~~dword ptr [rsp + 0x548], eax>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x54c], esi>', '<mov~~rcx, qword ptr [rcx + rdx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x550], rcx>', '<cmp~~eax, 0>', '<je~~0x402007>']}, {'block_Idx': 9, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x864]>', '<mov~~edx, dword ptr [rsp + 0x850]>', '<mov~~dword ptr [rsp + 0x844], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x848], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jb~~0x4037b0>']}, {'block_Idx': 358, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x54c]>', '<cmp~~eax, 3>', '<jle~~0x402b44>']}, {'block_Idx': 72, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x710]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4394]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 135, 'blockInsts': ['<jmp~~0x40145d>']}, {'block_Idx': 18, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~dword ptr [rdx], 0x20>', '<mov~~rdx, rax>', '<add~~rdx, 0x54>', '<mov~~qword ptr [rsp + 0x7b0], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x20>', '<mov~~qword ptr [rsp + 0x7b8], rdx>', '<mov~~qword ptr [rsp + 0x7c0], rax>', '<mov~~eax, 0x20>', '<mov~~qword ptr [rsp + 0x7c8], rcx>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<mov~~rdi, qword ptr [rsp + 0x808]>', '<mov~~rax, qword ptr [rsp + 0x7c8]>', '<mov~~edx, dword ptr [rsp + 0x7d4]>', '<mov~~qword ptr [rsp + 0x788], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x79c], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x794], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x798], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x7f8]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x7a0], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x7a4], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x7a8], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x7ac], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400b91>']}, {'block_Idx': 144, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68c]>', '<mov~~ecx, dword ptr [rsp + 0x738]>', '<mov~~rdx, qword ptr [rsp + 0x6a8]>', '<mov~~rsi, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rsp + 0x728]>', '<mov~~r8d, dword ptr [rsp + 0x700]>', '<mov~~r9d, dword ptr [rsp + 0x688]>', '<mov~~r10d, dword ptr [rsp + 0x6b4]>', '<mov~~r11, rsi>', '<add~~r11, 0x40>', '<mov~~qword ptr [rsp + 0x668], r11>', '<mov~~dword ptr [rsi + 0x40], r10d>', '<mov~~dword ptr [rsi + 8], r9d>', '<mov~~dword ptr [rdi], r8d>', '<mov~~rdi, rsi>', '<add~~rdi, 0x50>', '<mov~~qword ptr [rsp + 0x670], rdi>', '<mov~~dword ptr [rsi + 0x50], ecx>', '<mov~~edx, dword ptr [rdx]>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x67c], edx>', '<mov~~dword ptr [rsp + 0x680], ecx>', '<mov~~dword ptr [rsp + 0x684], eax>', '<jle~~0x402cad>']}, {'block_Idx': 257, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x500]>', '<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x538], edx>', '<mov~~dword ptr [rsp + 0x53c], ecx>', '<mov~~qword ptr [rsp + 0x540], rax>', '<jmp~~0x401e2f>']}, {'block_Idx': 371, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x428]>', '<mov~~rsi, qword ptr [rsp + 0x430]>', '<mov~~edx, dword ptr [rsp + 0x438]>', '<mov~~ecx, dword ptr [rsp + 0x43c]>', '<xor~~eax, eax>', '<cmp~~rdi, 0>', '<mov~~qword ptr [rsp + 0x280], rsi>', '<mov~~dword ptr [rsp + 0x288], edx>', '<mov~~dword ptr [rsp + 0x28c], ecx>', '<mov~~qword ptr [rsp + 0x290], rax>', '<je~~0x402b44>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7e4]>', '<mov~~rcx, qword ptr [rsp + 8]>', '<mov~~esi, dword ptr [rsp + 0x18]>', '<mov~~edx, dword ptr [rsp + 0x14]>', '<mov~~rdi, qword ptr [rsp + 0x890]>', '<mov~~r8d, esi>', '<add~~r8d, dword ptr [rdi + 0xa4]>', '<mov~~dword ptr [rdi + 0xa4], r8d>', '<sub~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<mov~~eax, dword ptr [rsp + 0x84c]>', '<add~~rsp, 0x8c0>', '<pop~~rbx>', '<ret~~>']}, {'block_Idx': 262, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x560]>', '<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x5d0], edx>', '<mov~~dword ptr [rsp + 0x5d4], ecx>', '<mov~~qword ptr [rsp + 0x5d8], rax>', '<jmp~~0x401be4>']}, {'block_Idx': 190, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x614]>', '<mov~~eax, dword ptr [rsp + 0x618]>', '<mov~~edx, dword ptr [rsp + 0x61c]>', '<mov~~dword ptr [rsp + 0x5e0], edx>', '<mov~~dword ptr [rsp + 0x5e4], eax>', '<mov~~dword ptr [rsp + 0x5e8], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x4019b6>']}, {'block_Idx': 437, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x402c64>']}, {'block_Idx': 29, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x890]>', '<mov~~rcx, qword ptr [rsp + 0x858]>', '<mov~~rdx, qword ptr [rsp + 0x820]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x838]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x82c], edx>', '<mov~~dword ptr [rsp + 0x830], ecx>', '<mov~~dword ptr [rsp + 0x834], eax>', '<mov~~edi, dword ptr [rsp + 0x844]>', '<mov~~esi, dword ptr [rsp + 0x82c]>', '<mov~~ecx, dword ptr [rsp + 0x830]>', '<mov~~eax, dword ptr [rsp + 0x834]>', '<mov~~dword ptr [rsp + 0x810], eax>', '<mov~~dword ptr [rsp + 0x814], ecx>', '<mov~~edx, eax>', '<add~~edx, edi>', '<add~~edx, ecx>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x818], ecx>', '<mov~~dword ptr [rsp + 0x81c], eax>', '<jbe~~0x40082b>']}, {'block_Idx': 102, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~edx, dword ptr [rsp + 0x6c0]>', '<mov~~eax, dword ptr [rsp + 0x6c4]>', '<mov~~dword ptr [rsp + 0x6b4], eax>', '<mov~~dword ptr [rsp + 0x6b8], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x6bc], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401386>']}, {'block_Idx': 219, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x5e8]>', '<mov~~edx, dword ptr [rsp + 0x5e4]>', '<mov~~eax, dword ptr [rsp + 0x5c4]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x808]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x5bc], eax>', '<jmp~~0x401b3b>']}, {'block_Idx': 113, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x890]>', '<call~~0x4037e0>']}, {'block_Idx': 383, 'blockInsts': ['<jmp~~0x4028ea>']}, {'block_Idx': 385, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x290]>', '<mov~~r9d, dword ptr [rsp + 0x28c]>', '<mov~~edx, dword ptr [rsp + 0x288]>', '<mov~~rsi, qword ptr [rsp + 0x280]>', '<mov~~rdi, qword ptr [rsp + 0x428]>', '<mov~~r8, qword ptr [rsp + 0x550]>', '<add~~edx, dword ptr [r8 + rsi*4]>', '<mov~~dword ptr [rsp + 0x268], edx>', '<mov~~ecx, edx>', '<add~~ecx, r9d>', '<mov~~dword ptr [rsp + 0x26c], ecx>', '<mov~~dword ptr [r8 + rsi*4], ecx>', '<add~~rsi, 1>', '<mov~~qword ptr [rsp + 0x270], rsi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x278], rax>', '<cmp~~rax, rdi>', '<mov~~qword ptr [rsp + 0x280], rsi>', '<mov~~dword ptr [rsp + 0x288], edx>', '<mov~~dword ptr [rsp + 0x28c], ecx>', '<mov~~qword ptr [rsp + 0x290], rax>', '<jne~~0x402abb>']}, {'block_Idx': 355, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x3e8]>', '<mov~~rdx, qword ptr [rsp + 0x3f0]>', '<mov~~ecx, dword ptr [rsp + 0x3fc]>', '<xor~~eax, eax>', '<cmp~~rsi, 0>', '<mov~~qword ptr [rsp + 0x2e0], rdx>', '<mov~~dword ptr [rsp + 0x2ec], ecx>', '<mov~~qword ptr [rsp + 0x2f0], rax>', '<je~~0x402b44>']}, {'block_Idx': 248, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~edi, dword ptr [rsp + 0x524]>', '<mov~~esi, dword ptr [rsp + 0x520]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~r9d, dword ptr [rsp + 0x52c]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x50c], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x528]>', '<mov~~dword ptr [rsp + 0x510], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x50c]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x510]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x514], eax>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~rdx, qword ptr [rsp + 0x550]>', '<mov~~edi, dword ptr [rsp + 0x520]>', '<mov~~esi, dword ptr [rsp + 0x514]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x4fc], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x4fc]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x530]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x500], rax>', '<cmp~~rax, rcx>', '<je~~0x401fde>']}, {'block_Idx': 191, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x610]>', '<mov~~edi, dword ptr [rsp + 0x60c]>', '<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rsp + 0x628]>', '<mov~~dword ptr [rsp + 0x5ec], eax>', '<mov~~esi, edi>', '<sar~~esi, 3>', '<mov~~dword ptr [rsp + 0x5f0], esi>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x5f4], ecx>', '<movzx~~esi, sil>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x5f8], edi>', '<mov~~dword ptr [rdx], edi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x5f8]>', '<mov~~dword ptr [rsp + 0x5fc], edx>', '<and~~edx, esi>', '<mov~~dword ptr [rsp + 0x600], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x604], eax>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x60c], ecx>', '<mov~~dword ptr [rsp + 0x610], eax>', '<je~~0x4018a0>']}, {'block_Idx': 137, 'blockInsts': ['<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 151, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x808]>', '<mov~~edx, dword ptr [rsp + 0x67c]>', '<mov~~eax, dword ptr [rsp + 0x680]>', '<mov~~esi, dword ptr [rsp + 0x684]>', '<mov~~dword ptr [rsp + 0x234], edx>', '<mov~~edi, esi>', '<neg~~edi>', '<and~~edi, 7>', '<mov~~edx, esi>', '<mov~~esi, edi>', '<lea~~edx, [rdx + rsi + 0x10]>', '<mov~~dword ptr [rcx], edx>', '<mov~~ecx, eax>', '<mov~~qword ptr [rsp + 0x238], rcx>', '<sub~~eax, 3>', '<ja~~0x402d09>']}, {'block_Idx': 216, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x40]>', '<mov~~eax, dword ptr [rsp + 0x1c]>', '<mov~~rcx, qword ptr [rsp + 0x20]>', '<mov~~rdx, qword ptr [rsp + 0x28]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x6c], edi>', '<mov~~qword ptr [rsp + 0x70], rsi>', '<mov~~qword ptr [rsp + 0x78], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x40356a>']}, {'block_Idx': 68, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x77c]>', '<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~edx, dword ptr [rsp + 0x780]>', '<mov~~dword ptr [rsp + 0x76c], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x4036d0>']}, {'block_Idx': 241, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x708]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2da1]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 291, 'blockInsts': ['<jmp~~0x402b44>']}, {'block_Idx': 384, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x3d8]>', '<mov~~eax, dword ptr [rsp + 0x3d4]>', '<mov~~rcx, qword ptr [rsp + 0x3c8]>', '<mov~~rsi, qword ptr [rsp + 0x3c0]>', '<mov~~rdi, qword ptr [rsp + 0x550]>', '<mov~~qword ptr [rsp + 0x398], rcx>', '<add~~eax, dword ptr [rdi + rcx*4]>', '<mov~~dword ptr [rsp + 0x3a0], eax>', '<mov~~dword ptr [rdi + rcx*4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 4]>', '<mov~~dword ptr [rsp + 0x3a4], eax>', '<mov~~dword ptr [rdi + rcx*4 + 4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 8]>', '<mov~~dword ptr [rsp + 0x3a8], eax>', '<mov~~dword ptr [rdi + rcx*4 + 8], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 0xc]>', '<mov~~dword ptr [rsp + 0x3ac], eax>', '<mov~~dword ptr [rdi + rcx*4 + 0xc], eax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x3b0], rcx>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x3b8], rdx>', '<cmp~~rdx, rsi>', '<mov~~rsi, rcx>', '<mov~~qword ptr [rsp + 0x3c8], rsi>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x3d4], esi>', '<mov~~qword ptr [rsp + 0x3d8], rdx>', '<mov~~qword ptr [rsp + 0x3f0], rcx>', '<mov~~dword ptr [rsp + 0x3fc], eax>', '<je~~0x4028b0>']}, {'block_Idx': 145, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x69c]>', '<mov~~rax, qword ptr [rsp + 0x708]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3fea]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~ecx, dword ptr [rsp + 0x8bc]>', '<mov~~dword ptr [rsp + 0x854], ecx>', '<mov~~rcx, rax>', '<add~~rcx, 0xa0>', '<mov~~qword ptr [rsp + 0x858], rcx>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x864], eax>', '<cmp~~eax, 4>', '<jb~~0x40063c>']}, {'block_Idx': 112, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6c8]>', '<mov~~eax, dword ptr [rsp + 0x750]>', '<movsxd~~rdx, eax>', '<lea~~rax, [rip + 0x3fb8]>', '<mov~~eax, dword ptr [rax + rdx*4]>', '<mov~~dword ptr [rsp + 0x6c0], ecx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~edx, dword ptr [rsp + 0x6c0]>', '<mov~~eax, dword ptr [rsp + 0x6c4]>', '<mov~~dword ptr [rsp + 0x6b4], eax>', '<mov~~dword ptr [rsp + 0x6b8], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x6bc], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401386>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7e0]>', '<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x18], eax>', '<cmp~~eax, ecx>', '<jle~~0x403747>']}, {'block_Idx': 35, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x764]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~edx, ecx>', '<mov~~dword ptr [rsp + 0x744], edx>', '<mov~~dword ptr [rsp + 0x748], ecx>', '<mov~~dword ptr [rsp + 0x74c], eax>', '<je~~0x400eb1>']}, {'block_Idx': 99, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x808]>', '<mov~~ecx, dword ptr [rsp + 0x6c8]>', '<mov~~rax, qword ptr [rsp + 0x7e8]>', '<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x6c0], ecx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<jmp~~0x401329>']}, {'block_Idx': 342, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x548]>', '<mov~~rcx, qword ptr [rsp + 0x550]>', '<mov~~esi, dword ptr [rsp + 0x4f0]>', '<mov~~edx, dword ptr [rsp + 0x4f4]>', '<sub~~edx, esi>', '<mov~~esi, eax>', '<add~~esi, -3>', '<mov~~esi, esi>', '<mov~~ecx, dword ptr [rcx + rsi*4]>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<add~~ecx, edx>', '<mov~~dword ptr [rsp + 0x4ec], ecx>', '<cmp~~eax, 3>', '<je~~0x402207>']}, {'block_Idx': 116, 'blockInsts': ['<jmp~~0x402c64>']}, {'block_Idx': 15, 'blockInsts': ['<mov~~edi, dword ptr [rsp + 0x844]>', '<mov~~esi, dword ptr [rsp + 0x82c]>', '<mov~~ecx, dword ptr [rsp + 0x830]>', '<mov~~eax, dword ptr [rsp + 0x834]>', '<mov~~dword ptr [rsp + 0x810], eax>', '<mov~~dword ptr [rsp + 0x814], ecx>', '<mov~~edx, eax>', '<add~~edx, edi>', '<add~~edx, ecx>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x818], ecx>', '<mov~~dword ptr [rsp + 0x81c], eax>', '<jbe~~0x40082b>']}, {'block_Idx': 169, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rsp + 0x648]>', '<add~~eax, 1>', '<mov~~dword ptr [rcx], eax>', '<mov~~dword ptr [rsp + 0x63c], eax>', '<mov~~rax, qword ptr [rsp + 0x808]>', '<mov~~rcx, qword ptr [rsp + 0x7f0]>', '<mov~~edx, dword ptr [rsp + 0x63c]>', '<mov~~dword ptr [rsp + 0x620], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x624], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x628], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x638], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x634], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x638]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x4017f9>']}, {'block_Idx': 204, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x668]>', '<mov~~rsi, qword ptr [rsp + 0xa8]>', '<mov~~edi, dword ptr [rsp + 0xbc]>', '<mov~~rax, qword ptr [rsp + 0x718]>', '<mov~~ecx, dword ptr [rsp + 0xc4]>', '<mov~~dword ptr [rsi], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0xa0]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x8c], edx>', '<mov~~qword ptr [rsp + 0x90], rcx>', '<mov~~qword ptr [rsp + 0x98], rax>', '<jmp~~0x403477>']}, {'block_Idx': 186, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x898]>', '<mov~~rcx, qword ptr [rsp + 0x8a0]>', '<mov~~esi, dword ptr [rsp + 0x174]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x140], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x148], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0x154], esi>', '<mov~~qword ptr [rsp + 0x158], rdx>', '<mov~~qword ptr [rsp + 0x160], rcx>', '<mov~~qword ptr [rsp + 0x168], rax>', '<jmp~~0x4030e4>']}, {'block_Idx': 225, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x598], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x5a0], rax>', '<mov~~rax, qword ptr [rsp + 0x5a0]>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rsp + 0x598]>', '<mov~~esi, dword ptr [rsp + 0x5b0]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x590], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x5a0], rax>', '<jl~~0x401ba1>']}, {'block_Idx': 34, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x798]>', '<cmp~~eax, 0>', '<jne~~0x400c09>']}, {'block_Idx': 375, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x548]>', '<mov~~rax, qword ptr [rsp + 0x708]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2e14]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 69, 'blockInsts': ['<jmp~~0x4036d0>']}], 'cfg_edge_info': [(247, 255), (226, 232), (229, 228), (18, 26), (229, 237), (355, 224), (159, 169), (191, 201), (11, 14), (251, 261), (140, 146), (203, 193), (41, 42), (232, 238), (25, 34), (125, 130), (144, 152), (233, 239), (106, 116), (166, 167), (357, 372), (96, 99), (55, 61), (89, 72), (218, 195), (207, 195), (228, 236), (358, 373), (210, 209), (328, 341), (232, 224), (172, 182), (113, 142), (224, 229), (50, 113), (196, 167), (225, 230), (348, 282), (235, 243), (375, 403), (195, 207), (88, 81), (206, 216), (398, 386), (29, 22), (139, 144), (180, 191), (191, 191), (40, 49), (169, 181), (369, 224), (358, 224), (25, 33), (282, 76), (252, 224), (87, 93), (386, 398), (357, 371), (387, 399), (228, 235), (10, 12), (224, 228), (51, 40), (194, 205), (142, 33), (179, 180), (142, 51), (88, 80), (28, 47), (6, 10), (29, 21), (168, 179), (180, 190), (58, 75), (383, 369), (172, 167), (169, 180), (242, 250), (221, 227), (399, 224), (160, 76), (87, 92), (227, 233), (65, 82), (120, 125), (201, 199), (39, 38), (51, 12), (234, 241), (412, 418), (342, 359), (124, 118), (43, 53), (359, 375), (57, 64), (220, 225), (371, 385), (236, 151), (261, 262), (35, 44), (193, 203), (156, 163), (135, 140), (356, 355), (243, 158), (437, 438), (27, 36), (120, 124), (340, 356), (258, 76), (197, 209), (50, 56), (370, 384), (341, 357), (182, 193), (146, 118), (32, 7), (75, 76), (212, 221), (171, 76), (359, 374), (186, 195), (19, 27), (389, 402), (239, 313), (223, 225), (385, 385), (86, 76), (164, 175), (318, 328), (208, 218), (27, 35), (340, 355), (42, 33), (119, 118), (205, 167), (219, 223), (211, 219), (112, 106), (303, 311), (105, 76), (116, 76), (115, 120), (16, 7), (174, 184), (156, 166), (388, 400), (67, 76), (18, 25), (209, 178), (218, 217), (207, 217), (440, 437), (41, 50), (255, 257), (215, 193), (144, 151), (216, 167), (68, 12), (93, 96), (216, 194), (373, 388), (49, 26), (237, 244), (318, 327), (197, 189), (400, 387), (410, 400), (203, 214), (112, 105), (152, 159), (34, 42), (107, 102), (8, 7), (118, 129), (199, 212), (384, 370), (73, 81), (255, 256), (44, 54), (244, 228), (114, 118), (38, 7), (348, 303), (373, 387), (36, 46), (49, 25), (47, 55), (59, 57), (438, 224), (99, 102), (210, 189), (8, 11), (262, 245), (100, 103), (129, 139), (151, 157), (33, 40), (81, 89), (165, 177), (22, 39), (166, 178), (198, 210), (0, 2), (199, 211), (167, 17), (372, 386), (221, 226), (240, 248), (54, 67), (73, 80), (103, 108), (411, 224), (90, 7), (17, 32), (36, 45), (158, 169), (76, 90), (403, 76), (256, 313), (21, 38), (148, 142), (80, 87), (33, 12), (140, 147), (384, 355), (110, 115), (342, 358), (43, 52), (165, 176), (147, 154), (220, 224), (61, 69), (328, 342), (102, 106), (327, 224), (214, 167), (55, 12), (154, 171), (35, 43), (103, 107), (176, 186), (202, 76), (188, 178), (139, 145), (256, 303), (42, 51), (205, 194), (2, 5), (231, 224), (110, 114), (374, 389), (47, 12), (209, 196), (157, 167), (389, 401), (327, 340), (400, 410), (261, 224), (80, 72), (61, 68), (190, 200), (401, 411), (10, 13), (102, 105), (223, 224), (194, 206), (176, 167), (108, 112), (164, 174), (9, 8), (291, 224), (179, 181), (98, 76), (6, 2), (238, 245), (257, 267), (387, 224), (2, 4), (217, 167), (115, 119), (13, 19), (204, 215), (64, 73), (72, 86), (386, 371), (46, 43), (156, 165), (245, 252), (68, 61), (248, 257), (227, 234), (178, 189), (189, 198), (201, 200), (163, 173), (412, 401), (200, 222), (190, 199), (311, 318), (303, 76), (234, 242), (437, 76), (282, 291), (267, 248), (53, 59), (341, 224), (145, 160), (5, 9), (69, 12), (9, 7), (57, 65), (130, 135), (460, 437), (230, 231), (356, 370), (82, 76), (241, 258), (12, 17), (371, 224), (152, 158), (34, 41), (13, 18), (215, 214), (16, 23), (64, 72), (105, 110), (137, 142), (193, 204), (5, 4), (156, 164), (245, 251), (248, 256), (243, 159), (178, 188), (189, 197), (134, 118), (163, 172), (4, 8), (52, 57), (267, 247), (355, 369), (53, 58), (45, 54), (15, 22), (418, 412), (130, 134), (159, 170), (170, 179), (11, 15), (230, 230), (19, 28), (92, 98), (151, 156), (402, 412), (12, 16), (81, 88), (401, 224), (1, 6), (233, 240), (181, 202), (252, 262), (38, 10), (237, 228), (96, 100), (385, 224), (374, 224), (0, 1), (369, 383), (242, 437), (167, 16), (239, 282), (240, 247), (184, 194), (211, 220), (4, 7), (225, 231), (14, 29), (244, 244), (174, 167), (222, 76), (26, 12), (195, 208), (158, 168)], 'cdg_edge_info': [(174, 194), (357, 386), (18, 26), (229, 237), (102, 7), (369, 369), (159, 169), (180, 201), (11, 14), (140, 146), (203, 193), (41, 42), (232, 238), (53, 7), (64, 7), (25, 34), (103, 102), (144, 152), (233, 239), (228, 151), (357, 372), (18, 12), (96, 99), (55, 61), (218, 195), (207, 195), (228, 236), (80, 90), (328, 341), (221, 224), (172, 182), (224, 229), (110, 118), (240, 255), (190, 7), (282, 90), (225, 230), (87, 98), (328, 224), (195, 207), (36, 43), (88, 81), (96, 103), (29, 22), (139, 144), (180, 191), (140, 118), (191, 191), (80, 76), (169, 181), (221, 228), (190, 222), (81, 86), (25, 33), (282, 76), (87, 93), (356, 384), (387, 399), (228, 235), (220, 231), (10, 12), (81, 72), (221, 232), (51, 40), (51, 49), (194, 205), (142, 33), (179, 180), (142, 51), (88, 80), (140, 90), (6, 10), (359, 403), (120, 130), (437, 224), (120, 139), (180, 190), (201, 222), (105, 7), (261, 245), (169, 180), (102, 90), (221, 227), (35, 54), (87, 92), (53, 90), (64, 90), (227, 233), (179, 202), (120, 125), (201, 199), (437, 228), (359, 7), (102, 76), (51, 12), (234, 241), (342, 359), (223, 231), (53, 76), (64, 76), (43, 53), (87, 96), (359, 375), (190, 90), (57, 64), (342, 224), (57, 82), (120, 129), (389, 412), (189, 210), (220, 225), (371, 385), (341, 371), (234, 7), (261, 262), (64, 80), (35, 44), (164, 167), (193, 203), (156, 163), (190, 76), (233, 303), (243, 158), (437, 438), (81, 7), (27, 36), (120, 124), (340, 356), (341, 357), (112, 116), (53, 57), (267, 255), (115, 139), (53, 75), (156, 167), (359, 374), (179, 7), (19, 27), (389, 402), (178, 209), (255, 267), (35, 7), (169, 7), (105, 90), (201, 76), (223, 225), (385, 385), (318, 328), (27, 35), (42, 33), (211, 219), (112, 106), (303, 311), (105, 76), (115, 120), (16, 7), (115, 129), (359, 90), (174, 184), (156, 166), (18, 25), (193, 215), (209, 178), (140, 154), (41, 50), (211, 223), (255, 257), (215, 193), (359, 76), (318, 224), (328, 228), (233, 256), (216, 194), (373, 388), (234, 90), (49, 26), (237, 244), (130, 118), (318, 327), (197, 189), (19, 12), (282, 224), (201, 7), (359, 224), (151, 167), (167, 32), (81, 90), (112, 105), (384, 384), (152, 159), (34, 42), (57, 7), (234, 76), (49, 12), (96, 102), (8, 7), (29, 39), (199, 212), (282, 228), (199, 221), (81, 76), (87, 7), (232, 245), (179, 90), (140, 171), (73, 81), (110, 139), (38, 7), (36, 46), (49, 25), (35, 90), (47, 55), (158, 179), (169, 90), (210, 189), (8, 11), (228, 243), (140, 139), (179, 76), (151, 157), (169, 202), (33, 40), (81, 89), (33, 49), (35, 67), (35, 76), (169, 76), (166, 178), (139, 151), (0, 2), (139, 160), (199, 211), (167, 17), (139, 7), (240, 248), (172, 193), (102, 116), (110, 129), (43, 57), (103, 108), (36, 45), (158, 169), (342, 228), (195, 218), (36, 54), (327, 355), (303, 7), (140, 129), (80, 87), (33, 12), (140, 147), (110, 115), (234, 258), (201, 90), (165, 167), (43, 52), (165, 176), (103, 112), (57, 90), (328, 342), (412, 412), (102, 106), (35, 43), (194, 216), (103, 107), (87, 90), (386, 386), (176, 186), (176, 195), (57, 76), (139, 145), (42, 51), (80, 86), (205, 194), (2, 5), (110, 114), (374, 389), (87, 76), (112, 7), (248, 267), (120, 118), (327, 340), (80, 72), (61, 68), (190, 200), (401, 411), (10, 13), (12, 32), (102, 105), (194, 206), (36, 7), (139, 90), (164, 174), (9, 8), (179, 181), (6, 2), (2, 4), (115, 119), (303, 90), (318, 228), (437, 90), (13, 19), (64, 73), (139, 76), (156, 165), (245, 252), (245, 261), (68, 61), (248, 257), (227, 234), (130, 140), (178, 189), (400, 400), (189, 198), (201, 200), (359, 228), (190, 199), (303, 76), (234, 242), (437, 76), (282, 291), (267, 248), (53, 59), (374, 401), (64, 86), (233, 282), (5, 9), (9, 7), (57, 65), (130, 135), (8, 38), (19, 47), (12, 17), (152, 158), (303, 318), (252, 245), (115, 118), (34, 41), (13, 18), (16, 23), (105, 110), (64, 72), (193, 204), (373, 400), (5, 4), (156, 164), (80, 7), (245, 251), (140, 76), (243, 159), (130, 139), (189, 197), (282, 7), (11, 29), (112, 90), (163, 172), (4, 8), (267, 247), (355, 369), (53, 58), (130, 134), (159, 170), (0, 6), (36, 90), (437, 7), (159, 179), (230, 230), (19, 28), (199, 224), (112, 76), (151, 156), (12, 7), (163, 167), (81, 88), (12, 16), (233, 240), (252, 262), (38, 10), (96, 100), (36, 67), (36, 76), (130, 129), (0, 1), (167, 7), (199, 228), (167, 16), (240, 247), (4, 7), (211, 220), (140, 7), (244, 244), (195, 208), (158, 168)], 'ddg_edge_info': [(247, 255), (386, 184), (229, 237), (255, 375), (261, 189), (0, 5), (180, 201), (207, 218), (11, 14), (251, 261), (39, 81), (224, 243), (243, 256), (399, 244), (369, 252), (146, 180), (384, 237), (207, 195), (64, 146), (233, 369), (191, 223), (224, 220), (412, 191), (243, 233), (411, 375), (318, 184), (255, 244), (369, 229), (27, 120), (224, 256), (399, 257), (229, 191), (228, 375), (386, 174), (144, 232), (29, 22), (1, 103), (180, 191), (400, 194), (6, 38), (38, 107), (191, 200), (129, 145), (224, 233), (244, 211), (318, 17), (129, 230), (57, 241), (385, 186), (411, 244), (229, 204), (261, 385), (1, 80), (0, 237), (228, 244), (224, 210), (412, 181), (27, 110), (229, 181), (129, 243), (1, 57), (13, 68), (179, 180), (5, 27), (230, 411), (28, 47), (400, 184), (318, 151), (230, 267), (255, 211), (201, 240), (27, 87), (224, 223), (57, 195), (129, 220), (1, 34), (385, 176), (9, 11), (261, 375), (228, 198), (359, 389), (144, 235), (6, 5), (385, 261), (191, 167), (43, 152), (197, 210), (27, 64), (386, 262), (412, 400), (39, 38), (224, 200), (142, 167), (261, 267), (112, 144), (57, 208), (229, 400), (124, 118), (411, 211), (384, 194), (129, 233), (142, 23), (57, 64), (228, 211), (359, 402), (400, 174), (238, 261), (230, 257), (236, 151), (369, 186), (261, 244), (233, 411), (39, 51), (129, 210), (318, 262), (191, 386), (191, 157), (38, 64), (27, 54), (386, 252), (39, 28), (399, 191), (182, 193), (247, 179), (112, 134), (144, 166), (318, 239), (223, 230), (129, 223), (384, 184), (81, 146), (49, 50), (9, 14), (191, 399), (386, 229), (224, 167), (243, 180), (189, 209), (369, 176), (375, 76), (39, 41), (412, 223), (224, 23), (318, 216), (129, 200), (369, 261), (1, 14), (10, 99), (385, 241), (340, 355), (261, 211), (205, 167), (39, 18), (191, 232), (10, 220), (224, 180), (57, 152), (399, 181), (318, 193), (400, 262), (112, 124), (412, 236), (318, 229), (384, 174), (174, 184), (197, 167), (49, 40), (229, 236), (209, 178), (1, 112), (0, 4), (224, 157), (230, 237), (191, 245), (244, 400), (318, 206), (215, 193), (1, 4), (385, 375), (216, 194), (318, 327), (0, 17), (99, 139), (179, 248), (399, 400), (129, 167), (369, 228), (27, 119), (400, 252), (224, 255), (244, 233), (208, 167), (129, 23), (230, 191), (88, 107), (118, 129), (386, 209), (369, 385), (129, 144), (255, 220), (400, 229), (191, 235), (10, 43), (2, 39), (369, 241), (26, 167), (39, 106), (59, 57), (158, 179), (386, 186), (144, 244), (210, 189), (384, 262), (1, 115), (8, 11), (261, 191), (99, 129), (239, 23), (412, 180), (255, 233), (129, 157), (224, 245), (244, 223), (237, 184), (411, 220), (230, 181), (228, 400), (1, 92), (191, 189), (369, 375), (237, 76), (167, 17), (372, 386), (412, 193), (244, 200), (2, 29), (28, 167), (54, 76), (0, 105), (39, 96), (411, 233), (129, 255), (229, 193), (235, 236), (386, 176), (384, 252), (230, 194), (228, 233), (386, 261), (211, 180), (318, 163), (255, 223), (39, 73), (224, 235), (399, 236), (129, 232), (230, 400), (229, 206), (384, 229), (9, 23), (191, 179), (10, 167), (0, 239), (255, 200), (39, 50), (10, 252), (243, 225), (10, 23), (106, 76), (318, 261), (411, 223), (129, 245), (1, 59), (57, 76), (261, 400), (228, 223), (139, 145), (400, 186), (38, 99), (224, 189), (244, 167), (224, 225), (318, 238), (411, 200), (1, 36), (228, 200), (201, 219), (261, 233), (39, 40), (244, 180), (10, 13), (2, 9), (129, 199), (146, 139), (385, 384), (112, 146), (318, 251), (129, 235), (176, 167), (142, 25), (1, 49), (386, 385), (10, 134), (255, 167), (191, 411), (27, 43), (400, 176), (386, 241), (105, 228), (318, 372), (224, 179), (39, 17), (244, 157), (399, 180), (39, 53), (191, 267), (400, 261), (318, 228), (1, 26), (28, 16), (256, 23), (178, 189), (224, 156), (43, 144), (243, 169), (189, 198), (230, 236), (255, 180), (261, 223), (0, 39), (191, 244), (244, 399), (399, 193), (318, 205), (411, 167), (129, 189), (146, 129), (57, 200), (412, 248), (318, 241), (384, 186), (1, 39), (228, 167), (386, 375), (5, 9), (144, 204), (229, 248), (255, 157), (1, 124), (261, 200), (412, 369), (64, 180), (224, 169), (129, 166), (261, 236), (0, 52), (244, 412), (191, 257), (412, 225), (229, 369), (318, 218), (411, 180), (1, 16), (27, 154), (412, 261), (209, 167), (228, 180), (18, 41), (243, 159), (229, 261), (255, 399), (369, 384), (27, 46), (0, 29), (400, 228), (399, 412), (57, 154), (411, 386), (318, 195), (411, 157), (129, 179), (328, 388), (224, 267), (244, 245), (76, 23), (228, 157), (385, 220), (237, 242), (384, 261), (1, 114), (400, 385), (0, 6), (233, 357), (159, 179), (224, 159), (255, 412), (129, 156), (400, 241), (57, 167), (243, 257), (411, 399), (10, 55), (318, 208), (1, 6), (39, 118), (38, 10), (228, 399), (261, 167), (385, 233), (8, 23), (167, 16), (57, 144), (255, 245), (129, 169), (73, 88), (224, 257), (412, 228), (244, 235), (411, 232), (38, 23), (229, 228), (230, 193), (228, 412), (400, 375), (261, 180), (105, 198), (191, 201), (191, 237), (151, 164), (224, 234), (318, 198), (244, 248), (411, 245), (129, 267), (384, 228), (1, 81), (261, 157), (218, 195), (0, 238), (228, 245), (0, 9), (244, 369), (412, 182), (129, 159), (369, 220), (255, 235), (240, 255), (18, 142), (224, 247), (244, 225), (399, 248), (384, 385), (237, 186), (229, 182), (129, 244), (342, 388), (385, 200), (90, 23), (384, 241), (261, 399), (88, 99), (107, 112), (399, 369), (10, 179), (58, 76), (412, 195), (243, 237), (399, 225), (369, 233), (180, 303), (399, 261), (229, 195), (129, 257), (411, 235), (81, 180), (144, 236), (356, 384), (28, 61), (261, 412), (255, 189), (228, 235), (224, 201), (412, 172), (318, 165), (255, 225), (224, 237), (384, 375), (245, 180), (229, 172), (129, 234), (386, 384), (237, 32), (233, 327), (191, 181), (261, 245), (172, 167), (39, 52), (411, 189), (129, 211), (385, 167), (64, 81), (237, 189), (43, 58), (411, 225), (129, 247), (228, 369), (35, 54), (10, 146), (9, 38), (228, 225), (318, 384), (224, 191), (369, 200), (39, 65), (399, 228), (318, 240), (129, 224), (1, 38), (13, 49), (49, 51), (191, 400), (243, 181), (230, 248), (189, 210), (261, 235), (244, 411), (224, 204), (244, 182), (2, 11), (129, 201), (385, 386), (385, 157), (230, 369), (1, 51), (243, 158), (340, 356), (39, 19), (318, 374), (224, 181), (230, 261), (399, 182), (341, 357), (261, 248), (146, 118), (10, 257), (57, 189), (412, 237), (318, 230), (1, 28), (385, 399), (39, 140), (261, 369), (400, 384), (186, 195), (38, 68), (386, 220), (224, 158), (255, 411), (369, 167), (201, 211), (340, 369), (261, 225), (399, 195), (318, 207), (129, 191), (255, 267), (1, 5), (252, 261), (318, 243), (244, 257), (385, 232), (318, 328), (27, 35), (154, 76), (0, 18), (386, 233), (119, 118), (399, 172), (0, 54), (318, 220), (129, 204), (1, 18), (39, 130), (385, 209), (411, 267), (228, 411), (388, 400), (228, 182), (385, 245), (318, 341), (230, 228), (369, 386), (228, 267), (180, 227), (191, 236), (151, 163), (318, 197), (129, 181), (255, 257), (39, 107), (229, 384), (0, 152), (237, 244), (189, 167), (107, 134), (400, 387), (0, 8), (233, 359), (369, 399), (318, 174), (129, 158), (112, 105), (224, 17), (318, 210), (10, 57), (39, 120), (411, 257), (230, 182), (152, 262), (386, 200), (228, 257), (179, 252), (400, 220), (57, 375), (412, 194), (49, 142), (369, 232), (240, 267), (244, 237), (229, 194), (129, 256), (373, 387), (229, 230), (230, 195), (1, 106), (261, 411), (107, 124), (261, 182), (10, 191), (318, 164), (237, 90), (369, 209), (328, 357), (400, 233), (38, 146), (151, 166), (224, 236), (399, 237), (10, 47), (369, 245), (39, 110), (385, 189), (230, 172), (191, 180), (29, 38), (412, 184), (244, 191), (255, 237), (39, 87), (229, 184), (129, 17), (386, 167), (76, 90), (36, 54), (1, 96), (261, 172), (144, 261), (191, 193), (203, 167), (261, 257), (39, 64), (243, 239), (411, 237), (384, 220), (142, 49), (1, 73), (198, 209), (105, 167), (255, 191), (228, 237), (201, 220), (400, 200), (399, 384), (224, 203), (412, 174), (244, 181), (27, 103), (180, 282), (318, 252), (318, 23), (229, 174), (35, 43), (129, 236), (194, 216), (142, 26), (1, 50), (386, 157), (105, 144), (384, 233), (191, 412), (318, 373), (369, 189), (39, 54), (224, 216), (244, 194), (411, 191), (374, 389), (1, 27), (206, 167), (28, 17), (0, 184), (228, 191), (386, 399), (157, 167), (255, 181), (220, 223), (27, 57), (224, 193), (318, 386), (399, 194), (236, 167), (0, 76), (205, 216), (318, 242), (194, 206), (142, 16), (1, 40), (385, 411), (400, 167), (385, 267), (386, 232), (257, 267), (255, 194), (201, 223), (261, 237), (224, 206), (112, 114), (318, 219), (411, 181), (129, 203), (1, 17), (412, 262), (64, 73), (318, 255), (384, 200), (228, 181), (385, 244), (318, 340), (229, 262), (255, 400), (386, 245), (399, 184), (129, 180), (328, 389), (318, 232), (129, 216), (39, 142), (230, 384), (228, 194), (400, 386), (400, 157), (385, 257), (35, 144), (39, 34), (191, 248), (10, 236), (224, 16), (411, 400), (318, 209), (129, 193), (328, 402), (39, 119), (144, 172), (412, 252), (16, 23), (191, 369), (5, 13), (237, 256), (229, 252), (107, 146), (400, 399), (386, 235), (11, 29), (191, 225), (57, 145), (399, 174), (369, 411), (318, 186), (191, 261), (57, 181), (412, 229), (244, 236), (384, 167), (369, 267), (355, 369), (14, 39), (385, 211), (237, 233), (1, 105), (220, 180), (261, 181), (233, 384), (400, 232), (151, 165), (318, 199), (369, 244), (233, 240), (229, 386), (386, 189), (1, 118), (261, 194), (0, 10), (400, 209), (318, 176), (255, 236), (180, 242), (27, 112), (400, 245), (224, 248), (384, 386), (369, 257), (342, 389), (14, 29), (129, 16), (174, 167), (200, 76), (230, 184), (10, 180), (0, 23), (233, 374), (191, 228), (243, 238), (318, 189), (204, 167), (39, 99), (224, 261), (399, 262), (384, 399), (411, 236), (342, 402), (0, 144), (1, 72), (229, 232), (228, 236), (261, 184), (318, 166), (369, 211), (328, 359), (39, 76), (224, 238), (412, 209), (10, 49), (39, 112), (385, 191), (229, 209), (230, 174), (384, 232), (233, 328), (191, 182), (0, 242), (40, 49), (224, 215), (412, 186), (243, 228), (244, 193), (10, 26), (318, 179), (27, 115), (224, 251), (399, 252), (43, 59), (229, 186), (129, 248), (384, 209), (207, 167), (357, 371), (384, 245), (9, 39), (387, 399), (233, 341), (5, 68), (400, 189), (191, 195), (318, 385), (318, 156), (224, 228), (399, 229), (51, 40), (129, 225), (194, 205), (385, 181), (10, 124), (129, 261), (237, 23), (142, 51), (88, 80), (386, 411), (233, 318), (6, 10), (191, 172), (57, 92), (255, 193), (386, 267), (39, 43), (224, 205), (412, 176), (13, 27), (72, 76), (229, 176), (129, 238), (1, 52), (5, 22), (9, 29), (386, 244), (224, 182), (318, 375), (230, 262), (369, 191), (224, 218), (411, 193), (384, 176), (342, 359), (129, 215), (1, 29), (5, 179), (385, 400), (318, 267), (142, 41), (1, 65), (0, 186), (228, 193), (386, 257), (224, 195), (318, 388), (36, 144), (261, 262), (318, 244), (229, 166), (384, 189), (129, 228), (39, 154), (17, 23), (27, 36), (39, 10), (224, 172), (230, 252), (369, 181), (39, 46), (10, 248), (399, 209), (411, 412), (318, 221), (129, 205), (1, 19), (267, 255), (220, 179), (39, 167), (386, 211), (57, 72), (318, 342), (230, 229), (389, 402), (1, 140), (400, 411), (0, 32), (412, 385), (39, 23), (399, 186), (129, 182), (400, 267), (57, 193), (412, 241), (229, 385), (318, 234), (10, 81), (385, 223), (230, 386), (229, 241), (208, 218), (0, 189), (261, 193), (118, 144), (318, 355), (369, 400), (261, 229), (400, 244), (112, 106), (318, 211), (129, 195), (1, 9), (144, 174), (244, 261), (38, 13), (208, 195), (0, 166), (193, 215), (385, 236), (38, 49), (1, 130), (0, 22), (233, 373), (412, 375), (39, 13), (38, 134), (399, 176), (129, 172), (255, 248), (400, 257), (112, 119), (144, 151), (318, 224), (229, 375), (39, 134), (373, 388), (255, 369), (1, 107), (191, 384), (230, 232), (80, 107), (233, 386), (0, 35), (318, 201), (255, 261), (384, 411), (229, 208), (411, 248), (386, 191), (229, 244), (384, 267), (230, 209), (1, 120), (29, 39), (228, 248), (99, 134), (400, 211), (38, 124), (318, 178), (411, 369), (369, 223), (39, 88), (244, 228), (10, 61), (114, 118), (39, 124), (38, 16), (237, 225), (49, 25), (411, 261), (230, 186), (384, 244), (55, 68), (179, 220), (233, 340), (191, 194), (129, 139), (228, 261), (201, 244), (180, 221), (224, 227), (318, 191), (369, 236), (244, 241), (385, 180), (57, 235), (142, 50), (166, 178), (152, 243), (198, 210), (386, 181), (384, 257), (1, 110), (0, 2), (99, 124), (399, 385), (255, 228), (129, 152), (172, 193), (224, 240), (10, 51), (399, 241), (129, 237), (385, 193), (64, 107), (229, 211), (230, 176), (17, 32), (195, 218), (1, 87), (5, 57), (6, 22), (191, 184), (244, 195), (384, 355), (134, 180), (411, 228), (384, 211), (142, 40), (1, 64), (386, 400), (144, 229), (255, 182), (400, 191), (399, 375), (318, 387), (224, 194), (318, 158), (244, 172), (224, 230), (129, 227), (142, 17), (1, 41), (385, 412), (144, 206), (176, 195), (191, 174), (38, 81), (255, 195), (228, 241), (201, 224), (369, 180), (107, 180), (205, 194), (318, 400), (10, 247), (224, 207), (10, 18), (411, 182), (0, 90), (237, 182), (318, 256), (129, 240), (1, 54), (206, 194), (389, 401), (255, 172), (327, 340), (369, 157), (400, 181), (412, 384), (224, 184), (369, 193), (401, 411), (39, 58), (145, 76), (318, 233), (411, 195), (198, 167), (230, 385), (251, 179), (9, 8), (228, 195), (6, 2), (386, 223), (238, 245), (230, 241), (261, 228), (118, 179), (39, 35), (224, 197), (252, 179), (2, 4), (411, 172), (129, 194), (1, 8), (13, 19), (384, 191), (228, 172), (5, 14), (144, 209), (385, 235), (10, 129), (245, 261), (386, 236), (224, 174), (369, 412), (261, 241), (0, 57), (191, 262), (399, 211), (318, 223), (129, 207), (230, 375), (49, 34), (385, 248), (224, 151), (1, 142), (8, 38), (233, 385), (5, 112), (39, 25), (318, 200), (129, 184), (81, 107), (385, 369), (318, 236), (384, 181), (193, 204), (39, 146), (385, 225), (245, 251), (1, 119), (261, 195), (0, 11), (318, 357), (224, 164), (230, 244), (52, 57), (191, 252), (412, 220), (243, 262), (129, 197), (1, 11), (267, 247), (144, 176), (229, 220), (233, 375), (99, 146), (400, 223), (191, 229), (151, 156), (244, 384), (402, 412), (129, 174), (369, 235), (224, 262), (412, 233), (384, 400), (386, 180), (124, 180), (229, 233), (181, 76), (0, 1), (18, 49), (318, 167), (129, 151), (180, 233), (400, 236), (211, 220), (224, 239), (318, 203), (369, 248), (27, 139), (174, 194), (385, 228), (386, 193), (255, 384), (230, 211), (0, 14), (179, 245), (57, 139), (203, 193), (318, 180), (10, 27), (129, 164), (215, 167), (369, 225), (328, 373), (241, 76), (224, 252), (166, 167), (357, 372), (229, 223), (1, 99), (233, 342), (210, 209), (318, 157), (0, 256), (80, 99), (172, 182), (224, 229), (412, 200), (243, 242), (411, 384), (10, 40), (27, 129), (0, 112), (39, 103), (225, 230), (385, 182), (229, 200), (129, 262), (228, 384), (384, 223), (235, 243), (1, 76), (88, 81), (195, 207), (206, 216), (386, 412), (357, 385), (0, 233), (191, 209), (57, 129), (318, 399), (244, 184), (10, 17), (80, 112), (39, 80), (224, 242), (244, 220), (129, 239), (1, 53), (198, 189), (385, 195), (218, 167), (384, 236), (400, 180), (191, 186), (57, 106), (39, 57), (224, 219), (318, 412), (399, 220), (411, 194), (385, 172), (129, 252), (10, 151), (255, 184), (400, 193), (318, 389), (412, 167), (244, 174), (27, 96), (224, 232), (57, 204), (399, 233), (318, 245), (318, 16), (229, 167), (342, 373), (129, 229), (1, 43), (144, 208), (64, 99), (261, 384), (5, 49), (6, 14), (191, 176), (369, 182), (224, 209), (318, 402), (2, 16), (411, 184), (129, 206), (43, 53), (229, 180), (129, 242), (228, 184), (255, 174), (228, 220), (400, 412), (371, 385), (412, 386), (386, 248), (224, 186), (412, 157), (369, 195), (10, 262), (57, 194), (399, 223), (318, 235), (229, 157), (384, 180), (129, 219), (386, 369), (193, 203), (10, 118), (237, 17), (28, 23), (248, 255), (5, 39), (386, 225), (224, 163), (197, 209), (318, 356), (369, 172), (1, 154), (412, 399), (224, 199), (399, 200), (49, 167), (411, 174), (384, 157), (1, 10), (318, 248), (229, 399), (244, 262), (384, 193), (1, 46), (0, 167), (228, 174), (385, 237), (230, 220), (178, 209), (224, 176), (318, 369), (1, 167), (134, 139), (412, 232), (318, 225), (129, 209), (1, 23), (229, 412), (38, 27), (43, 105), (191, 385), (230, 233), (261, 220), (179, 267), (0, 36), (39, 27), (219, 223), (191, 241), (400, 235), (211, 219), (203, 215), (255, 262), (129, 186), (152, 169), (412, 245), (244, 252), (384, 412), (57, 17), (61, 167), (229, 245), (107, 139), (386, 228), (224, 166), (318, 359), (399, 167), (129, 163), (134, 129), (328, 372), (233, 400), (180, 245), (400, 248), (244, 229), (204, 193), (318, 215), (216, 167), (1, 13), (233, 256), (49, 26), (411, 262), (261, 174), (400, 369), (191, 375), (99, 112), (197, 189), (230, 223), (1, 134), (228, 262), (400, 225), (244, 386), (10, 219), (167, 23), (129, 176), (369, 237), (255, 252), (81, 99), (412, 235), (386, 182), (237, 239), (229, 235), (230, 200), (107, 129), (180, 199), (399, 386), (399, 157), (318, 169), (255, 229), (4, 9), (224, 241), (14, 22), (39, 115), (385, 194), (411, 252), (384, 235), (1, 88), (47, 55), (179, 211), (152, 257), (386, 195), (57, 105), (255, 386), (262, 245), (228, 252), (0, 16), (318, 411), (412, 189), (318, 182), (39, 92), (244, 232), (229, 189), (129, 251), (411, 229), (22, 39), (386, 172), (144, 230), (229, 225), (384, 248), (28, 55), (228, 229), (92, 76), (318, 159), (169, 179), (244, 209), (384, 369), (399, 232), (2, 38), (248, 179), (0, 114), (39, 105), (385, 184), (230, 167), (384, 225), (228, 386), (179, 201), (64, 134), (28, 68), (191, 211), (224, 208), (318, 401), (318, 172), (244, 186), (255, 232), (224, 244), (399, 245), (318, 257), (129, 241), (65, 76), (230, 180), (180, 179), (400, 182), (255, 209), (369, 194), (201, 238), (328, 342), (261, 252), (39, 59), (224, 221), (129, 218), (152, 201), (385, 174), (124, 139), (230, 157), (176, 186), (237, 16), (1, 68), (179, 191), (144, 233), (64, 124), (5, 38), (255, 186), (0, 225), (228, 232), (400, 195), (6, 39), (39, 36), (252, 180), (224, 198), (244, 176), (39, 72), (57, 206), (399, 235), (318, 247), (411, 209), (230, 399), (261, 386), (248, 267), (228, 209), (400, 172), (386, 237), (51, 167), (61, 68), (369, 184), (0, 58), (99, 180), (412, 411), (39, 49), (224, 211), (10, 251), (244, 189), (411, 186), (129, 208), (1, 22), (412, 267), (229, 411), (124, 129), (10, 107), (142, 34), (1, 58), (228, 186), (144, 223), (230, 412), (229, 267), (255, 176), (8, 39), (39, 26), (243, 201), (399, 189), (180, 267), (32, 23), (412, 244), (204, 215), (318, 237), (384, 182), (129, 221), (1, 35), (386, 371), (46, 43), (245, 252), (68, 61), (385, 262), (224, 165), (230, 245), (369, 174), (261, 232), (233, 399), (412, 401), (411, 176), (129, 198), (267, 248), (233, 255), (412, 257), (384, 195), (228, 176), (57, 65), (229, 257), (8, 29), (261, 209), (39, 16), (244, 385), (318, 371), (224, 178), (233, 412), (252, 245), (318, 227), (384, 172), (81, 134), (1, 25), (237, 238), (0, 182), (228, 189), (261, 186), (18, 50), (385, 252), (189, 197), (230, 235), (1, 146), (134, 118), (0, 38), (180, 234), (233, 389), (400, 237), (412, 211), (318, 204), (1, 2), (27, 140), (39, 114), (385, 229), (386, 194), (255, 385), (180, 211), (244, 375), (191, 220), (318, 181), (129, 165), (255, 241), (81, 88), (10, 64), (369, 262), (81, 124), (244, 267), (237, 228), (230, 189), (261, 176), (219, 179), (230, 225), (0, 28), (191, 233), (399, 411), (184, 194), (411, 385), (318, 194), (129, 178), (27, 130), (144, 157), (399, 267), (411, 241), (228, 385), (195, 208)]}]}
{'flac_decode_frame': [{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 191, 'instruction': 'movl\t%eax, %edi'}, {'instIndex': 192, 'instruction': 'shll\t$3, %edi'}, {'instIndex': 222, 'instruction': 'cmpl\t$0x18, %eax'}, {'instIndex': 223, 'instruction': 'jl\t.LBB4_179'}, {'instIndex': 239, 'instruction': ''}, {'instIndex': 240, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 282, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 283, 'instruction': ''}, {'instIndex': 293, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 294, 'instruction': 'movl\t0x79c(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 305, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 306, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 307, 'instruction': 'movq\t0x7f8(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 467, 'instruction': 'movq\t%rdx, 0x758(%rsp)                # 8-byte Spill'}, {'instIndex': 520, 'instruction': 'movq\t0x808(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 605, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 668, 'instruction': 'movq\t0x6d8(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 669, 'instruction': 'movq\t0x7e8(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 670, 'instruction': 'movl\t0x6cc(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 721, 'instruction': 'jmp\t.LBB4_143'}, {'instIndex': 722, 'instruction': 'movq\t0x808(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 738, 'instruction': 'movl\t%eax, 0x6c4(%rsp)                # 4-byte Spill'}, {'instIndex': 739, 'instruction': 'jmp\t.LBB4_53'}, {'instIndex': 828, 'instruction': 'jmp\t.LBB4_64'}, {'instIndex': 846, 'instruction': 'movl\t%eax, 0x6a4(%rsp)                # 4-byte Spill'}, {'instIndex': 863, 'instruction': 'movl\t%ecx, 0x6a0(%rsp)                # 4-byte Spill'}, {'instIndex': 1017, 'instruction': 'jmp\t.LBB4_143'}, {'instIndex': 1018, 'instruction': 'movq\t0x808(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 1019, 'instruction': 'movl\t0x624(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1137, 'instruction': 'movl\t0x5e8(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 1142, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1143, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1144, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1152, 'instruction': 'movl\t0x5e8(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1153, 'instruction': 'movl\t0x5e4(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1168, 'instruction': 'movq\t0x628(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1173, 'instruction': 'addl\t$0x10, %r8d'}, {'instIndex': 1174, 'instruction': 'movl\t%esi, %ecx'}, {'instIndex': 1230, 'instruction': 'movl\t0x5d4(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1235, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1236, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1237, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1245, 'instruction': 'movl\t%edx, 0x58c(%rsp)                # 4-byte Spill'}, {'instIndex': 1246, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1261, 'instruction': 'movq\t0x808(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 1266, 'instruction': 'shrl\t$0xf0, %r9d'}, {'instIndex': 1267, 'instruction': ''}, {'instIndex': 1345, 'instruction': 'movq\t%rax, 0x540(%rsp)                # 8-byte Spill'}, {'instIndex': 1350, 'instruction': 'movq\t%rsi, 0x518(%rsp)                # 8-byte Spill'}, {'instIndex': 1351, 'instruction': 'movl\t%eax, 0x520(%rsp)                # 4-byte Spill'}, {'instIndex': 1352, 'instruction': 'movl\t%ecx, 0x524(%rsp)                # 4-byte Spill'}, {'instIndex': 1360, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1361, 'instruction': 'movl\t%ecx, 0x528(%rsp)                # 4-byte Spill'}, {'instIndex': 1376, 'instruction': 'movl\t%edx, (%rcx)'}, {'instIndex': 1381, 'instruction': 'movl\t0x520(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1382, 'instruction': 'movq\t0x628(%rsp), %rax                # 8-byte Reload'}]}]}
The case of compiler clang with optimization O3.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O3/flacdec.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O3/flacdec.s---flac_decode_frame---after
function id: 4
function flag: True
There are 2824 instructions for function: flac_decode_frame in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '639', 'end': 649}, 'before': {'start': '639', 'end': 644}}}]
[{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 191, 'instruction': 'movl\t%eax, %edi'}, {'instIndex': 192, 'instruction': 'shll\t$3, %edi'}, {'instIndex': 222, 'instruction': 'cmpl\t$0x18, %eax'}, {'instIndex': 223, 'instruction': 'jl\t.LBB4_196'}, {'instIndex': 239, 'instruction': ''}, {'instIndex': 240, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 297, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 298, 'instruction': ''}, {'instIndex': 308, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 309, 'instruction': 'movl\t0x8d4(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 320, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 321, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 322, 'instruction': 'movq\t0x958(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 564, 'instruction': 'movq\t%rdx, 0x860(%rsp)                # 8-byte Spill'}, {'instIndex': 617, 'instruction': 'movq\t0x968(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 702, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 765, 'instruction': 'movq\t0x7e0(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 766, 'instruction': 'movq\t0x948(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 767, 'instruction': 'movl\t0x7d4(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 818, 'instruction': 'jmp\t.LBB4_153'}, {'instIndex': 819, 'instruction': 'movq\t0x968(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 835, 'instruction': 'movl\t%eax, 0x7cc(%rsp)                # 4-byte Spill'}, {'instIndex': 836, 'instruction': 'jmp\t.LBB4_63'}, {'instIndex': 925, 'instruction': 'jmp\t.LBB4_74'}, {'instIndex': 943, 'instruction': 'movl\t%eax, 0x7ac(%rsp)                # 4-byte Spill'}, {'instIndex': 960, 'instruction': 'movl\t%ecx, 0x7a8(%rsp)                # 4-byte Spill'}, {'instIndex': 1114, 'instruction': 'jmp\t.LBB4_153'}, {'instIndex': 1115, 'instruction': 'movq\t0x968(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 1116, 'instruction': 'movl\t0x72c(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1234, 'instruction': 'movl\t0x6f0(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 1239, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1240, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1241, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1249, 'instruction': 'movl\t0x6f0(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1250, 'instruction': 'movl\t0x6ec(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1265, 'instruction': 'movq\t0x730(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1270, 'instruction': 'addl\t$0x10, %r8d'}, {'instIndex': 1271, 'instruction': 'movl\t%esi, %ecx'}, {'instIndex': 1327, 'instruction': 'movl\t0x6dc(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1332, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1333, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1334, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1342, 'instruction': 'movl\t%edx, 0x694(%rsp)                # 4-byte Spill'}, {'instIndex': 1343, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1358, 'instruction': 'movq\t0x968(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 1363, 'instruction': 'shrl\t$0xf0, %r9d'}, {'instIndex': 1364, 'instruction': ''}, {'instIndex': 1442, 'instruction': 'movq\t%rax, 0x648(%rsp)                # 8-byte Spill'}, {'instIndex': 1447, 'instruction': 'movq\t%rsi, 0x620(%rsp)                # 8-byte Spill'}, {'instIndex': 1448, 'instruction': 'movl\t%eax, 0x628(%rsp)                # 4-byte Spill'}, {'instIndex': 1449, 'instruction': 'movl\t%ecx, 0x62c(%rsp)                # 4-byte Spill'}, {'instIndex': 1457, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1458, 'instruction': 'movl\t%ecx, 0x630(%rsp)                # 4-byte Spill'}, {'instIndex': 1473, 'instruction': 'movl\t%edx, (%rcx)'}, {'instIndex': 1478, 'instruction': 'movl\t0x628(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1479, 'instruction': 'movq\t0x730(%rsp), %rax                # 8-byte Reload'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O3/flacdec.o
Patched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O3/flacdec.o---after
The extraction of function: flac_decode_frame
Analyzing the binaries to generate subCFGs from patched function ...
It has 432 nodes and 745 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 2797 instructions in binary file.
[4196984, 4197162, 4197233, 4197401, 4198705, 4198996, 4199418, 4199678, 4199933, 4200016, 4200469, 4200549, 4200620, 4201372, 4202011, 4202066, 4202473, 4202528, 4203060, 4203115]
The execution time of patched subCFG information extraction via angr: 0:00:04.954012
{'flac_decode_frame': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40119a>, <DisassemblerInsn "mov" for 0x4011a1>, <DisassemblerInsn "mov" for 0x4011a9>, <DisassemblerInsn "add" for 0x4011ac>, <DisassemblerInsn "xor" for 0x4011af>, <DisassemblerInsn "cmp" for 0x4011b1>, <DisassemblerInsn "mov" for 0x4011b3>, <DisassemblerInsn "mov" for 0x4011b5>, <DisassemblerInsn "mov" for 0x4011bc>, <DisassemblerInsn "mov" for 0x4011c3>, <DisassemblerInsn "je" for 0x4011ca>]'}, {'block_Idx': 218, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402020>, <DisassemblerInsn "mov" for 0x402028>, <DisassemblerInsn "mov" for 0x40202f>, <DisassemblerInsn "mov" for 0x402036>, <DisassemblerInsn "mov" for 0x40203e>, <DisassemblerInsn "shr" for 0x402046>, <DisassemblerInsn "mov" for 0x40204a>, <DisassemblerInsn "add" for 0x40204d>, <DisassemblerInsn "mov" for 0x402051>, <DisassemblerInsn "add" for 0x402053>, <DisassemblerInsn "mov" for 0x402056>, <DisassemblerInsn "shl" for 0x40205d>, <DisassemblerInsn "mov" for 0x402060>, <DisassemblerInsn "mov" for 0x402067>, <DisassemblerInsn "sar" for 0x40206f>, <DisassemblerInsn "movsxd" for 0x402073>, <DisassemblerInsn "mov" for 0x402076>, <DisassemblerInsn "ror" for 0x40207a>, <DisassemblerInsn "ror" for 0x40207e>, <DisassemblerInsn "ror" for 0x402081>, <DisassemblerInsn "shl" for 0x402085>, <DisassemblerInsn "mov" for 0x402087>, <DisassemblerInsn "mov" for 0x40208e>, <DisassemblerInsn "xor" for 0x402091>, <DisassemblerInsn "sub" for 0x402093>, <DisassemblerInsn "shr" for 0x402096>, <DisassemblerInsn "mov" for 0x402098>, <DisassemblerInsn "add" for 0x40209f>, <DisassemblerInsn "mov" for 0x4020a1>, <DisassemblerInsn "or" for 0x4020a3>, <DisassemblerInsn "mov" for 0x4020a5>, <DisassemblerInsn "mov" for 0x4020ac>, <DisassemblerInsn "mov" for 0x4020b4>, <DisassemblerInsn "mov" for 0x4020bc>, <DisassemblerInsn "mov" for 0x4020c3>, <DisassemblerInsn "mov" for 0x4020ca>, <DisassemblerInsn "sub" for 0x4020cf>, <DisassemblerInsn "mov" for 0x4020d1>, <DisassemblerInsn "shl" for 0x4020d8>, <DisassemblerInsn "mov" for 0x4020da>, <DisassemblerInsn "sar" for 0x4020e1>, <DisassemblerInsn "mov" for 0x4020e3>, <DisassemblerInsn "mov" for 0x4020eb>, <DisassemblerInsn "mov" for 0x4020ee>, <DisassemblerInsn "add" for 0x4020f1>, <DisassemblerInsn "mov" for 0x4020f5>, <DisassemblerInsn "movsxd" for 0x4020fd>, <DisassemblerInsn "cmp" for 0x402100>, <DisassemblerInsn "jge" for 0x402103>]'}, {'block_Idx': 64, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401597>, <DisassemblerInsn "xor" for 0x40159f>, <DisassemblerInsn "lea" for 0x4015a1>, <DisassemblerInsn "mov" for 0x4015a8>, <DisassemblerInsn "call" for 0x4015aa>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a78>, <DisassemblerInsn "mov" for 0x400a80>, <DisassemblerInsn "mov" for 0x400a87>, <DisassemblerInsn "mov" for 0x400a8e>, <DisassemblerInsn "mov" for 0x400a96>, <DisassemblerInsn "mov" for 0x400a9d>, <DisassemblerInsn "mov" for 0x400aa4>, <DisassemblerInsn "shl" for 0x400aa6>, <DisassemblerInsn "xor" for 0x400aa9>, <DisassemblerInsn "cmp" for 0x400aab>, <DisassemblerInsn "cmovl" for 0x400aae>, <DisassemblerInsn "mov" for 0x400ab2>, <DisassemblerInsn "xor" for 0x400aba>, <DisassemblerInsn "cmp" for 0x400abc>, <DisassemblerInsn "cmovl" for 0x400abf>, <DisassemblerInsn "xor" for 0x400ac2>, <DisassemblerInsn "cmp" for 0x400ac5>, <DisassemblerInsn "mov" for 0x400ac8>, <DisassemblerInsn "cmovl" for 0x400aca>, <DisassemblerInsn "mov" for 0x400ace>, <DisassemblerInsn "add" for 0x400ad1>, <DisassemblerInsn "mov" for 0x400ad5>, <DisassemblerInsn "mov" for 0x400add>, <DisassemblerInsn "mov" for 0x400ae1>, <DisassemblerInsn "add" for 0x400ae4>, <DisassemblerInsn "mov" for 0x400ae8>, <DisassemblerInsn "mov" for 0x400af0>, <DisassemblerInsn "mov" for 0x400af3>, <DisassemblerInsn "add" for 0x400af5>, <DisassemblerInsn "mov" for 0x400af8>, <DisassemblerInsn "add" for 0x400afb>, <DisassemblerInsn "mov" for 0x400aff>, <DisassemblerInsn "mov" for 0x400b07>, <DisassemblerInsn "mov" for 0x400b0b>, <DisassemblerInsn "add" for 0x400b0e>, <DisassemblerInsn "mov" for 0x400b12>, <DisassemblerInsn "mov" for 0x400b1a>, <DisassemblerInsn "cmp" for 0x400b21>, <DisassemblerInsn "jl" for 0x400b24>]'}, {'block_Idx': 117, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401800>, <DisassemblerInsn "sub" for 0x401807>, <DisassemblerInsn "je" for 0x40180a>]'}, {'block_Idx': 189, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ede>, <DisassemblerInsn "mov" for 0x401ee6>, <DisassemblerInsn "mov" for 0x401eed>, <DisassemblerInsn "mov" for 0x401ef4>, <DisassemblerInsn "sub" for 0x401ef9>, <DisassemblerInsn "mov" for 0x401efb>, <DisassemblerInsn "shl" for 0x401f02>, <DisassemblerInsn "mov" for 0x401f04>, <DisassemblerInsn "sar" for 0x401f0b>, <DisassemblerInsn "mov" for 0x401f0d>, <DisassemblerInsn "cmp" for 0x401f14>, <DisassemblerInsn "jle" for 0x401f17>]'}, {'block_Idx': 211, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f87>, <DisassemblerInsn "mov" for 0x401f8f>, <DisassemblerInsn "mov" for 0x401f96>, <DisassemblerInsn "mov" for 0x401f9d>, <DisassemblerInsn "mov" for 0x401fa5>, <DisassemblerInsn "mov" for 0x401fad>, <DisassemblerInsn "mov" for 0x401fb4>, <DisassemblerInsn "mov" for 0x401fbb>, <DisassemblerInsn "sar" for 0x401fbd>, <DisassemblerInsn "movsxd" for 0x401fc0>, <DisassemblerInsn "mov" for 0x401fc3>, <DisassemblerInsn "ror" for 0x401fc6>, <DisassemblerInsn "ror" for 0x401fca>, <DisassemblerInsn "ror" for 0x401fcd>, <DisassemblerInsn "and" for 0x401fd1>, <DisassemblerInsn "mov" for 0x401fd4>, <DisassemblerInsn "shl" for 0x401fdb>, <DisassemblerInsn "mov" for 0x401fdd>, <DisassemblerInsn "cmp" for 0x401fe4>, <DisassemblerInsn "jge" for 0x401fe7>]'}, {'block_Idx': 106, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401815>, <DisassemblerInsn "mov" for 0x40181c>, <DisassemblerInsn "mov" for 0x401824>, <DisassemblerInsn "sar" for 0x401826>, <DisassemblerInsn "movsxd" for 0x401829>, <DisassemblerInsn "mov" for 0x40182c>, <DisassemblerInsn "ror" for 0x40182f>, <DisassemblerInsn "ror" for 0x401833>, <DisassemblerInsn "ror" for 0x401836>, <DisassemblerInsn "and" for 0x40183a>, <DisassemblerInsn "shl" for 0x40183d>, <DisassemblerInsn "mov" for 0x40183f>, <DisassemblerInsn "shr" for 0x401846>, <DisassemblerInsn "add" for 0x401849>, <DisassemblerInsn "imul" for 0x40184c>, <DisassemblerInsn "mov" for 0x401852>, <DisassemblerInsn "mov" for 0x401859>, <DisassemblerInsn "jmp" for 0x401860>]'}, {'block_Idx': 32, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a06>, <DisassemblerInsn "mov" for 0x400a0e>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "mov" for 0x400a1e>, <DisassemblerInsn "mov" for 0x400a26>, <DisassemblerInsn "mov" for 0x400a2d>, <DisassemblerInsn "mov" for 0x400a34>, <DisassemblerInsn "add" for 0x400a36>, <DisassemblerInsn "mov" for 0x400a39>, <DisassemblerInsn "add" for 0x400a3b>, <DisassemblerInsn "mov" for 0x400a3d>, <DisassemblerInsn "cmp" for 0x400a3f>, <DisassemblerInsn "setl" for 0x400a41>, <DisassemblerInsn "cmp" for 0x400a45>, <DisassemblerInsn "setne" for 0x400a48>, <DisassemblerInsn "and" for 0x400a4c>, <DisassemblerInsn "test" for 0x400a4f>, <DisassemblerInsn "mov" for 0x400a53>, <DisassemblerInsn "mov" for 0x400a55>, <DisassemblerInsn "mov" for 0x400a5c>, <DisassemblerInsn "mov" for 0x400a63>, <DisassemblerInsn "mov" for 0x400a6b>, <DisassemblerInsn "jne" for 0x400a72>]'}, {'block_Idx': 3, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40072a>, <DisassemblerInsn "mov" for 0x400732>, <DisassemblerInsn "mov" for 0x40073a>, <DisassemblerInsn "mov" for 0x400741>, <DisassemblerInsn "mov" for 0x400744>, <DisassemblerInsn "mov" for 0x40074c>, <DisassemblerInsn "mov" for 0x400753>, <DisassemblerInsn "xor" for 0x400755>, <DisassemblerInsn "cmp" for 0x400757>, <DisassemblerInsn "mov" for 0x40075a>, <DisassemblerInsn "mov" for 0x400761>, <DisassemblerInsn "mov" for 0x400768>, <DisassemblerInsn "mov" for 0x40076f>, <DisassemblerInsn "je" for 0x400777>]'}, {'block_Idx': 222, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40234a>, <DisassemblerInsn "mov" for 0x402352>, <DisassemblerInsn "mov" for 0x40235a>, <DisassemblerInsn "mov" for 0x402362>, <DisassemblerInsn "mov" for 0x402364>, <DisassemblerInsn "mov" for 0x402366>, <DisassemblerInsn "mov" for 0x40236d>, <DisassemblerInsn "mov" for 0x402374>, <DisassemblerInsn "jmp" for 0x40237c>]'}, {'block_Idx': 122, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018ac>, <DisassemblerInsn "mov" for 0x4018b3>, <DisassemblerInsn "mov" for 0x4018bb>, <DisassemblerInsn "sar" for 0x4018bd>, <DisassemblerInsn "movsxd" for 0x4018c0>, <DisassemblerInsn "mov" for 0x4018c3>, <DisassemblerInsn "ror" for 0x4018c6>, <DisassemblerInsn "ror" for 0x4018ca>, <DisassemblerInsn "ror" for 0x4018cd>, <DisassemblerInsn "and" for 0x4018d1>, <DisassemblerInsn "shl" for 0x4018d4>, <DisassemblerInsn "mov" for 0x4018d6>, <DisassemblerInsn "shr" for 0x4018dd>, <DisassemblerInsn "add" for 0x4018e0>, <DisassemblerInsn "imul" for 0x4018e3>, <DisassemblerInsn "mov" for 0x4018e6>, <DisassemblerInsn "mov" for 0x4018ed>, <DisassemblerInsn "jmp" for 0x4018f4>]'}, {'block_Idx': 44, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401297>, <DisassemblerInsn "add" for 0x40129f>, <DisassemblerInsn "mov" for 0x4012a3>, <DisassemblerInsn "jmp" for 0x4012ab>]'}, {'block_Idx': 91, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016cc>, <DisassemblerInsn "mov" for 0x4016d4>, <DisassemblerInsn "mov" for 0x4016db>, <DisassemblerInsn "mov" for 0x4016e2>, <DisassemblerInsn "mov" for 0x4016e9>, <DisassemblerInsn "mov" for 0x4016f0>, <DisassemblerInsn "mov" for 0x4016f2>, <DisassemblerInsn "cmp" for 0x4016f9>, <DisassemblerInsn "jle" for 0x4016fb>]'}, {'block_Idx': 172, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401dd7>, <DisassemblerInsn "mov" for 0x401dde>, <DisassemblerInsn "mov" for 0x401de5>, <DisassemblerInsn "mov" for 0x401ded>, <DisassemblerInsn "sar" for 0x401def>, <DisassemblerInsn "movsxd" for 0x401df2>, <DisassemblerInsn "mov" for 0x401df5>, <DisassemblerInsn "ror" for 0x401df8>, <DisassemblerInsn "ror" for 0x401dfc>, <DisassemblerInsn "ror" for 0x401dff>, <DisassemblerInsn "and" for 0x401e03>, <DisassemblerInsn "mov" for 0x401e06>, <DisassemblerInsn "shl" for 0x401e0d>, <DisassemblerInsn "mov" for 0x401e0f>, <DisassemblerInsn "cmp" for 0x401e16>, <DisassemblerInsn "jge" for 0x401e19>]'}, {'block_Idx': 227, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4021d2>, <DisassemblerInsn "mov" for 0x4021da>, <DisassemblerInsn "mov" for 0x4021e1>, <DisassemblerInsn "mov" for 0x4021e8>, <DisassemblerInsn "mov" for 0x4021f0>, <DisassemblerInsn "mov" for 0x4021f8>, <DisassemblerInsn "mov" for 0x4021ff>, <DisassemblerInsn "mov" for 0x402206>, <DisassemblerInsn "sar" for 0x402208>, <DisassemblerInsn "movsxd" for 0x40220b>, <DisassemblerInsn "mov" for 0x40220e>, <DisassemblerInsn "ror" for 0x402211>, <DisassemblerInsn "ror" for 0x402215>, <DisassemblerInsn "ror" for 0x402218>, <DisassemblerInsn "and" for 0x40221c>, <DisassemblerInsn "mov" for 0x40221f>, <DisassemblerInsn "shl" for 0x402226>, <DisassemblerInsn "mov" for 0x402228>, <DisassemblerInsn "cmp" for 0x40222f>, <DisassemblerInsn "jge" for 0x402232>]'}, {'block_Idx': 41, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fed>, <DisassemblerInsn "mov" for 0x400ff5>, <DisassemblerInsn "mov" for 0x400ffd>, <DisassemblerInsn "mov" for 0x400fff>, <DisassemblerInsn "mov" for 0x401002>, <DisassemblerInsn "mov" for 0x40100a>, <DisassemblerInsn "jmp" for 0x401011>]'}, {'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b71>, <DisassemblerInsn "mov" for 0x400b79>, <DisassemblerInsn "mov" for 0x400b81>, <DisassemblerInsn "mov" for 0x400b89>, <DisassemblerInsn "mov" for 0x400b8f>, <DisassemblerInsn "add" for 0x400b92>, <DisassemblerInsn "mov" for 0x400b96>, <DisassemblerInsn "mov" for 0x400b9e>, <DisassemblerInsn "add" for 0x400ba1>, <DisassemblerInsn "mov" for 0x400ba5>, <DisassemblerInsn "mov" for 0x400bad>, <DisassemblerInsn "mov" for 0x400bb0>, <DisassemblerInsn "mov" for 0x400bb8>, <DisassemblerInsn "add" for 0x400bbb>, <DisassemblerInsn "mov" for 0x400bbf>, <DisassemblerInsn "mov" for 0x400bc7>, <DisassemblerInsn "add" for 0x400bca>, <DisassemblerInsn "mov" for 0x400bce>, <DisassemblerInsn "mov" for 0x400bd6>, <DisassemblerInsn "add" for 0x400bd9>, <DisassemblerInsn "mov" for 0x400bdd>, <DisassemblerInsn "mov" for 0x400be5>, <DisassemblerInsn "add" for 0x400be8>, <DisassemblerInsn "mov" for 0x400bef>, <DisassemblerInsn "add" for 0x400bf7>, <DisassemblerInsn "mov" for 0x400bfd>, <DisassemblerInsn "mov" for 0x400c05>, <DisassemblerInsn "mov" for 0x400c0a>, <DisassemblerInsn "mov" for 0x400c12>, <DisassemblerInsn "mov" for 0x400c19>, <DisassemblerInsn "mov" for 0x400c21>, <DisassemblerInsn "mov" for 0x400c29>, <DisassemblerInsn "mov" for 0x400c30>, <DisassemblerInsn "mov" for 0x400c38>, <DisassemblerInsn "sar" for 0x400c3a>, <DisassemblerInsn "movsxd" for 0x400c3d>, <DisassemblerInsn "mov" for 0x400c40>, <DisassemblerInsn "mov" for 0x400c43>, <DisassemblerInsn "and" for 0x400c45>, <DisassemblerInsn "mov" for 0x400c48>, <DisassemblerInsn "movzx" for 0x400c4f>, <DisassemblerInsn "mov" for 0x400c52>, <DisassemblerInsn "mov" for 0x400c59>, <DisassemblerInsn "add" for 0x400c5b>, <DisassemblerInsn "mov" for 0x400c5e>, <DisassemblerInsn "sar" for 0x400c60>, <DisassemblerInsn "movsxd" for 0x400c63>, <DisassemblerInsn "mov" for 0x400c66>, <DisassemblerInsn "ror" for 0x400c69>, <DisassemblerInsn "ror" for 0x400c6d>, <DisassemblerInsn "ror" for 0x400c70>, <DisassemblerInsn "and" for 0x400c74>, <DisassemblerInsn "shl" for 0x400c77>, <DisassemblerInsn "mov" for 0x400c79>, <DisassemblerInsn "shr" for 0x400c80>, <DisassemblerInsn "mov" for 0x400c83>, <DisassemblerInsn "mov" for 0x400c8a>, <DisassemblerInsn "add" for 0x400c8c>, <DisassemblerInsn "sar" for 0x400c8f>, <DisassemblerInsn "movsxd" for 0x400c92>, <DisassemblerInsn "mov" for 0x400c95>, <DisassemblerInsn "ror" for 0x400c98>, <DisassemblerInsn "ror" for 0x400c9c>, <DisassemblerInsn "ror" for 0x400c9f>, <DisassemblerInsn "shl" for 0x400ca3>, <DisassemblerInsn "mov" for 0x400ca5>, <DisassemblerInsn "shr" for 0x400cac>, <DisassemblerInsn "mov" for 0x400caf>, <DisassemblerInsn "add" for 0x400cb2>, <DisassemblerInsn "shl" for 0x400cb6>, <DisassemblerInsn "sar" for 0x400cb9>, <DisassemblerInsn "movsxd" for 0x400cbd>, <DisassemblerInsn "mov" for 0x400cc0>, <DisassemblerInsn "ror" for 0x400cc4>, <DisassemblerInsn "ror" for 0x400cc8>, <DisassemblerInsn "ror" for 0x400ccb>, <DisassemblerInsn "shl" for 0x400ccf>, <DisassemblerInsn "mov" for 0x400cd1>, <DisassemblerInsn "shr" for 0x400cd9>, <DisassemblerInsn "add" for 0x400cdc>, <DisassemblerInsn "mov" for 0x400cdf>, <DisassemblerInsn "mov" for 0x400ce6>, <DisassemblerInsn "or" for 0x400ce8>, <DisassemblerInsn "mov" for 0x400cea>, <DisassemblerInsn "shl" for 0x400cf1>, <DisassemblerInsn "mov" for 0x400cf4>, <DisassemblerInsn "add" for 0x400cfb>, <DisassemblerInsn "mov" for 0x400cfd>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401306>, <DisassemblerInsn "mov" for 0x40130e>, <DisassemblerInsn "mov" for 0x401316>, <DisassemblerInsn "mov" for 0x40131e>, <DisassemblerInsn "mov" for 0x401326>, <DisassemblerInsn "mov" for 0x401328>, <DisassemblerInsn "cmp" for 0x40132f>, <DisassemblerInsn "setg" for 0x401332>, <DisassemblerInsn "mov" for 0x401336>, <DisassemblerInsn "mov" for 0x40133e>, <DisassemblerInsn "add" for 0x401341>, <DisassemblerInsn "mov" for 0x401345>, <DisassemblerInsn "mov" for 0x40134d>, <DisassemblerInsn "mov" for 0x401351>, <DisassemblerInsn "mov" for 0x401357>, <DisassemblerInsn "cmp" for 0x40135d>, <DisassemblerInsn "cmovg" for 0x401360>, <DisassemblerInsn "mov" for 0x401364>, <DisassemblerInsn "mov" for 0x40136a>, <DisassemblerInsn "cmp" for 0x401370>, <DisassemblerInsn "cmovg" for 0x401373>, <DisassemblerInsn "and" for 0x401377>, <DisassemblerInsn "movzx" for 0x40137b>, <DisassemblerInsn "mov" for 0x40137f>, <DisassemblerInsn "sub" for 0x401383>, <DisassemblerInsn "mov" for 0x401386>, <DisassemblerInsn "mov" for 0x401389>, <DisassemblerInsn "mov" for 0x401391>, <DisassemblerInsn "add" for 0x401394>, <DisassemblerInsn "mov" for 0x401398>, <DisassemblerInsn "mov" for 0x4013a0>, <DisassemblerInsn "mov" for 0x4013a4>, <DisassemblerInsn "add" for 0x4013a7>, <DisassemblerInsn "mov" for 0x4013ab>, <DisassemblerInsn "mov" for 0x4013b3>, <DisassemblerInsn "mov" for 0x4013b7>, <DisassemblerInsn "mov" for 0x4013bd>, <DisassemblerInsn "add" for 0x4013c0>, <DisassemblerInsn "mov" for 0x4013c4>, <DisassemblerInsn "mov" for 0x4013cc>, <DisassemblerInsn "mov" for 0x4013cf>, <DisassemblerInsn "mov" for 0x4013d1>, <DisassemblerInsn "and" for 0x4013d7>, <DisassemblerInsn "cmp" for 0x4013d9>, <DisassemblerInsn "je" for 0x4013db>]'}, {'block_Idx': 58, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013fa>, <DisassemblerInsn "mov" for 0x401402>, <DisassemblerInsn "mov" for 0x40140a>, <DisassemblerInsn "ror" for 0x40140d>, <DisassemblerInsn "ror" for 0x401411>, <DisassemblerInsn "ror" for 0x401414>, <DisassemblerInsn "shr" for 0x401418>, <DisassemblerInsn "mov" for 0x40141b>, <DisassemblerInsn "mov" for 0x401422>, <DisassemblerInsn "mov" for 0x401428>, <DisassemblerInsn "xor" for 0x40142a>, <DisassemblerInsn "shr" for 0x401430>, <DisassemblerInsn "cmp" for 0x401433>, <DisassemblerInsn "cmovb" for 0x401439>, <DisassemblerInsn "mov" for 0x40143c>, <DisassemblerInsn "xor" for 0x401441>, <DisassemblerInsn "cmp" for 0x401443>, <DisassemblerInsn "cmovb" for 0x401449>, <DisassemblerInsn "mov" for 0x40144c>, <DisassemblerInsn "and" for 0x40144e>, <DisassemblerInsn "mov" for 0x401454>, <DisassemblerInsn "shr" for 0x401456>, <DisassemblerInsn "mov" for 0x401459>, <DisassemblerInsn "or" for 0x40145b>, <DisassemblerInsn "cmp" for 0x40145e>, <DisassemblerInsn "cmove" for 0x401461>, <DisassemblerInsn "cmp" for 0x401464>, <DisassemblerInsn "cmove" for 0x401467>, <DisassemblerInsn "mov" for 0x40146a>, <DisassemblerInsn "mov" for 0x40146c>, <DisassemblerInsn "mov" for 0x40146e>, <DisassemblerInsn "movzx" for 0x401475>, <DisassemblerInsn "add" for 0x401479>, <DisassemblerInsn "mov" for 0x40147b>, <DisassemblerInsn "sub" for 0x401480>, <DisassemblerInsn "mov" for 0x401482>, <DisassemblerInsn "cmp" for 0x401489>, <DisassemblerInsn "je" for 0x40148c>]'}, {'block_Idx': 141, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b9c>, <DisassemblerInsn "mov" for 0x401ba4>, <DisassemblerInsn "mov" for 0x401bab>, <DisassemblerInsn "mov" for 0x401bb3>, <DisassemblerInsn "mov" for 0x401bba>, <DisassemblerInsn "sar" for 0x401bbc>, <DisassemblerInsn "movsxd" for 0x401bbf>, <DisassemblerInsn "mov" for 0x401bc2>, <DisassemblerInsn "ror" for 0x401bc5>, <DisassemblerInsn "ror" for 0x401bc9>, <DisassemblerInsn "ror" for 0x401bcc>, <DisassemblerInsn "and" for 0x401bd0>, <DisassemblerInsn "shl" for 0x401bd3>, <DisassemblerInsn "mov" for 0x401bd5>, <DisassemblerInsn "shr" for 0x401bd7>, <DisassemblerInsn "mov" for 0x401bda>, <DisassemblerInsn "mov" for 0x401be1>, <DisassemblerInsn "add" for 0x401be3>, <DisassemblerInsn "mov" for 0x401be6>, <DisassemblerInsn "mov" for 0x401be8>, <DisassemblerInsn "sar" for 0x401bea>, <DisassemblerInsn "movsxd" for 0x401bed>, <DisassemblerInsn "mov" for 0x401bf0>, <DisassemblerInsn "and" for 0x401bf3>, <DisassemblerInsn "movzx" for 0x401bf6>, <DisassemblerInsn "add" for 0x401bf9>, <DisassemblerInsn "mov" for 0x401bfc>, <DisassemblerInsn "mov" for 0x401bfe>, <DisassemblerInsn "shr" for 0x401c03>, <DisassemblerInsn "mov" for 0x401c05>, <DisassemblerInsn "and" for 0x401c0c>, <DisassemblerInsn "xor" for 0x401c0e>, <DisassemblerInsn "mov" for 0x401c10>, <DisassemblerInsn "cmp" for 0x401c15>, <DisassemblerInsn "mov" for 0x401c18>, <DisassemblerInsn "mov" for 0x401c1a>, <DisassemblerInsn "mov" for 0x401c21>, <DisassemblerInsn "mov" for 0x401c28>, <DisassemblerInsn "mov" for 0x401c2f>, <DisassemblerInsn "mov" for 0x401c36>, <DisassemblerInsn "je" for 0x401c3d>]'}, {'block_Idx': 87, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015c1>, <DisassemblerInsn "sub" for 0x4015c8>, <DisassemblerInsn "je" for 0x4015cb>]'}, {'block_Idx': 89, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015fd>, <DisassemblerInsn "mov" for 0x401605>, <DisassemblerInsn "mov" for 0x40160c>, <DisassemblerInsn "mov" for 0x401614>, <DisassemblerInsn "shr" for 0x40161c>, <DisassemblerInsn "and" for 0x401620>, <DisassemblerInsn "mov" for 0x401627>, <DisassemblerInsn "ror" for 0x40162a>, <DisassemblerInsn "ror" for 0x40162e>, <DisassemblerInsn "ror" for 0x401631>, <DisassemblerInsn "shr" for 0x401635>, <DisassemblerInsn "add" for 0x401638>, <DisassemblerInsn "mov" for 0x40163b>, <DisassemblerInsn "add" for 0x40163d>, <DisassemblerInsn "mov" for 0x401640>, <DisassemblerInsn "mov" for 0x401647>, <DisassemblerInsn "jmp" for 0x40164e>]'}, {'block_Idx': 151, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c43>, <DisassemblerInsn "mov" for 0x401c4a>, <DisassemblerInsn "mov" for 0x401c51>, <DisassemblerInsn "mov" for 0x401c59>, <DisassemblerInsn "mov" for 0x401c61>, <DisassemblerInsn "mov" for 0x401c68>, <DisassemblerInsn "sar" for 0x401c6a>, <DisassemblerInsn "mov" for 0x401c6d>, <DisassemblerInsn "movsxd" for 0x401c74>, <DisassemblerInsn "mov" for 0x401c77>, <DisassemblerInsn "mov" for 0x401c7b>, <DisassemblerInsn "and" for 0x401c7d>, <DisassemblerInsn "mov" for 0x401c80>, <DisassemblerInsn "movzx" for 0x401c87>, <DisassemblerInsn "add" for 0x401c8b>, <DisassemblerInsn "mov" for 0x401c8e>, <DisassemblerInsn "mov" for 0x401c95>, <DisassemblerInsn "mov" for 0x401c97>, <DisassemblerInsn "shr" for 0x401c9c>, <DisassemblerInsn "mov" for 0x401c9e>, <DisassemblerInsn "mov" for 0x401ca5>, <DisassemblerInsn "and" for 0x401cac>, <DisassemblerInsn "mov" for 0x401cae>, <DisassemblerInsn "add" for 0x401cb5>, <DisassemblerInsn "mov" for 0x401cb8>, <DisassemblerInsn "cmp" for 0x401cbf>, <DisassemblerInsn "mov" for 0x401cc2>, <DisassemblerInsn "mov" for 0x401cc9>, <DisassemblerInsn "je" for 0x401cd0>]'}, {'block_Idx': 217, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fe9>, <DisassemblerInsn "mov" for 0x401ff0>, <DisassemblerInsn "mov" for 0x401ff7>, <DisassemblerInsn "mov" for 0x401ffe>, <DisassemblerInsn "xor" for 0x402001>, <DisassemblerInsn "sub" for 0x402003>, <DisassemblerInsn "shr" for 0x402006>, <DisassemblerInsn "mov" for 0x402008>, <DisassemblerInsn "add" for 0x402010>, <DisassemblerInsn "mov" for 0x402012>, <DisassemblerInsn "mov" for 0x402014>, <DisassemblerInsn "jmp" for 0x40201b>]'}, {'block_Idx': 225, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402109>, <DisassemblerInsn "mov" for 0x402111>, <DisassemblerInsn "mov" for 0x402119>, <DisassemblerInsn "mov" for 0x402121>, <DisassemblerInsn "mov" for 0x402123>, <DisassemblerInsn "mov" for 0x402125>, <DisassemblerInsn "mov" for 0x40212c>, <DisassemblerInsn "mov" for 0x402133>, <DisassemblerInsn "jmp" for 0x40213b>]'}, {'block_Idx': 186, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e52>, <DisassemblerInsn "mov" for 0x401e5a>, <DisassemblerInsn "mov" for 0x401e61>, <DisassemblerInsn "mov" for 0x401e68>, <DisassemblerInsn "mov" for 0x401e70>, <DisassemblerInsn "shr" for 0x401e78>, <DisassemblerInsn "mov" for 0x401e7c>, <DisassemblerInsn "add" for 0x401e7f>, <DisassemblerInsn "mov" for 0x401e83>, <DisassemblerInsn "add" for 0x401e85>, <DisassemblerInsn "mov" for 0x401e88>, <DisassemblerInsn "shl" for 0x401e8f>, <DisassemblerInsn "mov" for 0x401e92>, <DisassemblerInsn "mov" for 0x401e99>, <DisassemblerInsn "sar" for 0x401ea1>, <DisassemblerInsn "movsxd" for 0x401ea5>, <DisassemblerInsn "mov" for 0x401ea8>, <DisassemblerInsn "ror" for 0x401eac>, <DisassemblerInsn "ror" for 0x401eb0>, <DisassemblerInsn "ror" for 0x401eb3>, <DisassemblerInsn "shl" for 0x401eb7>, <DisassemblerInsn "mov" for 0x401eb9>, <DisassemblerInsn "mov" for 0x401ec0>, <DisassemblerInsn "xor" for 0x401ec3>, <DisassemblerInsn "sub" for 0x401ec5>, <DisassemblerInsn "shr" for 0x401ec8>, <DisassemblerInsn "mov" for 0x401eca>, <DisassemblerInsn "add" for 0x401ed1>, <DisassemblerInsn "mov" for 0x401ed3>, <DisassemblerInsn "or" for 0x401ed5>, <DisassemblerInsn "mov" for 0x401ed7>, <DisassemblerInsn "mov" for 0x401ede>, <DisassemblerInsn "mov" for 0x401ee6>, <DisassemblerInsn "mov" for 0x401eed>, <DisassemblerInsn "mov" for 0x401ef4>, <DisassemblerInsn "sub" for 0x401ef9>, <DisassemblerInsn "mov" for 0x401efb>, <DisassemblerInsn "shl" for 0x401f02>, <DisassemblerInsn "mov" for 0x401f04>, <DisassemblerInsn "sar" for 0x401f0b>, <DisassemblerInsn "mov" for 0x401f0d>, <DisassemblerInsn "cmp" for 0x401f14>, <DisassemblerInsn "jle" for 0x401f17>]'}, {'block_Idx': 112, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401865>, <DisassemblerInsn "mov" for 0x40186c>, <DisassemblerInsn "mov" for 0x401874>, <DisassemblerInsn "sar" for 0x401876>, <DisassemblerInsn "movsxd" for 0x401879>, <DisassemblerInsn "mov" for 0x40187c>, <DisassemblerInsn "ror" for 0x40187f>, <DisassemblerInsn "ror" for 0x401883>, <DisassemblerInsn "ror" for 0x401886>, <DisassemblerInsn "and" for 0x40188a>, <DisassemblerInsn "shl" for 0x40188d>, <DisassemblerInsn "mov" for 0x40188f>, <DisassemblerInsn "shr" for 0x401896>, <DisassemblerInsn "add" for 0x401899>, <DisassemblerInsn "mov" for 0x40189c>, <DisassemblerInsn "mov" for 0x4018a3>, <DisassemblerInsn "jmp" for 0x4018aa>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401131>, <DisassemblerInsn "mov" for 0x401139>, <DisassemblerInsn "mov" for 0x401141>, <DisassemblerInsn "mov" for 0x401148>, <DisassemblerInsn "shr" for 0x40114a>, <DisassemblerInsn "mov" for 0x40114d>, <DisassemblerInsn "shl" for 0x401154>, <DisassemblerInsn "shr" for 0x401157>, <DisassemblerInsn "mov" for 0x40115a>, <DisassemblerInsn "mov" for 0x401161>, <DisassemblerInsn "add" for 0x401164>, <DisassemblerInsn "mov" for 0x401168>, <DisassemblerInsn "mov" for 0x401170>, <DisassemblerInsn "ror" for 0x401173>, <DisassemblerInsn "ror" for 0x401177>, <DisassemblerInsn "ror" for 0x40117a>, <DisassemblerInsn "mov" for 0x40117e>, <DisassemblerInsn "shr" for 0x401185>, <DisassemblerInsn "mov" for 0x401188>, <DisassemblerInsn "mov" for 0x40118f>, <DisassemblerInsn "cmp" for 0x401195>, <DisassemblerInsn "jge" for 0x401198>]'}, {'block_Idx': 65, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401492>, <DisassemblerInsn "mov" for 0x401499>, <DisassemblerInsn "mov" for 0x4014a0>, <DisassemblerInsn "mov" for 0x4014a5>, <DisassemblerInsn "shr" for 0x4014a7>, <DisassemblerInsn "mov" for 0x4014a9>, <DisassemblerInsn "and" for 0x4014ab>, <DisassemblerInsn "mov" for 0x4014ad>, <DisassemblerInsn "mov" for 0x4014af>, <DisassemblerInsn "mov" for 0x4014b4>, <DisassemblerInsn "mov" for 0x4014bc>, <DisassemblerInsn "mov" for 0x4014c4>, <DisassemblerInsn "mov" for 0x4014cb>, <DisassemblerInsn "mov" for 0x4014d3>, <DisassemblerInsn "mov" for 0x4014db>, <DisassemblerInsn "mov" for 0x4014e2>, <DisassemblerInsn "mov" for 0x4014e9>, <DisassemblerInsn "mov" for 0x4014f1>, <DisassemblerInsn "cmp" for 0x4014f9>, <DisassemblerInsn "jle" for 0x4014fc>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403f01>, <DisassemblerInsn "mov" for 0x403f08>, <DisassemblerInsn "mov" for 0x403f10>, <DisassemblerInsn "add" for 0x403f12>, <DisassemblerInsn "mov" for 0x403f15>, <DisassemblerInsn "cdq" for 0x403f1a>, <DisassemblerInsn "idiv" for 0x403f1b>, <DisassemblerInsn "mov" for 0x403f1d>, <DisassemblerInsn "cmp" for 0x403f21>, <DisassemblerInsn "jle" for 0x403f23>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401254>, <DisassemblerInsn "mov" for 0x40125c>, <DisassemblerInsn "mov" for 0x401263>, <DisassemblerInsn "mov" for 0x40126a>, <DisassemblerInsn "mov" for 0x401271>, <DisassemblerInsn "mov" for 0x401278>, <DisassemblerInsn "shl" for 0x40127f>, <DisassemblerInsn "shr" for 0x401282>, <DisassemblerInsn "mov" for 0x401285>, <DisassemblerInsn "mov" for 0x40128c>, <DisassemblerInsn "cmp" for 0x401292>, <DisassemblerInsn "jne" for 0x401295>]'}, {'block_Idx': 39, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401205>, <DisassemblerInsn "add" for 0x40120c>, <DisassemblerInsn "mov" for 0x40120f>, <DisassemblerInsn "mov" for 0x401214>, <DisassemblerInsn "mov" for 0x40121b>, <DisassemblerInsn "jmp" for 0x401222>]'}, {'block_Idx': 72, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014fe>, <DisassemblerInsn "mov" for 0x401506>, <DisassemblerInsn "mov" for 0x40150e>, <DisassemblerInsn "mov" for 0x401516>, <DisassemblerInsn "mov" for 0x40151e>, <DisassemblerInsn "add" for 0x401525>, <DisassemblerInsn "mov" for 0x401528>, <DisassemblerInsn "shr" for 0x40152b>, <DisassemblerInsn "mov" for 0x40152f>, <DisassemblerInsn "ror" for 0x401533>, <DisassemblerInsn "ror" for 0x401537>, <DisassemblerInsn "ror" for 0x40153a>, <DisassemblerInsn "shr" for 0x40153e>, <DisassemblerInsn "add" for 0x401541>, <DisassemblerInsn "mov" for 0x401545>, <DisassemblerInsn "mov" for 0x401548>, <DisassemblerInsn "add" for 0x40154b>, <DisassemblerInsn "shl" for 0x40154e>, <DisassemblerInsn "movsxd" for 0x401552>, <DisassemblerInsn "add" for 0x401555>, <DisassemblerInsn "cmp" for 0x401558>, <DisassemblerInsn "mov" for 0x40155b>, <DisassemblerInsn "mov" for 0x401563>, <DisassemblerInsn "mov" for 0x40156b>, <DisassemblerInsn "jb" for 0x401572>]'}, {'block_Idx': 206, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40219b>, <DisassemblerInsn "mov" for 0x4021a2>, <DisassemblerInsn "mov" for 0x4021a9>, <DisassemblerInsn "mov" for 0x4021b0>, <DisassemblerInsn "mov" for 0x4021b2>, <DisassemblerInsn "xor" for 0x4021ba>, <DisassemblerInsn "mov" for 0x4021bc>, <DisassemblerInsn "mov" for 0x4021c3>, <DisassemblerInsn "mov" for 0x4021ca>, <DisassemblerInsn "mov" for 0x4021d2>, <DisassemblerInsn "mov" for 0x4021da>, <DisassemblerInsn "mov" for 0x4021e1>, <DisassemblerInsn "mov" for 0x4021e8>, <DisassemblerInsn "mov" for 0x4021f0>, <DisassemblerInsn "mov" for 0x4021f8>, <DisassemblerInsn "mov" for 0x4021ff>, <DisassemblerInsn "mov" for 0x402206>, <DisassemblerInsn "sar" for 0x402208>, <DisassemblerInsn "movsxd" for 0x40220b>, <DisassemblerInsn "mov" for 0x40220e>, <DisassemblerInsn "ror" for 0x402211>, <DisassemblerInsn "ror" for 0x402215>, <DisassemblerInsn "ror" for 0x402218>, <DisassemblerInsn "and" for 0x40221c>, <DisassemblerInsn "mov" for 0x40221f>, <DisassemblerInsn "shl" for 0x402226>, <DisassemblerInsn "mov" for 0x402228>, <DisassemblerInsn "cmp" for 0x40222f>, <DisassemblerInsn "jge" for 0x402232>]'}, {'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015cf>, <DisassemblerInsn "sub" for 0x4015d6>, <DisassemblerInsn "je" for 0x4015d9>]'}, {'block_Idx': 213, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402234>, <DisassemblerInsn "mov" for 0x40223b>, <DisassemblerInsn "mov" for 0x402242>, <DisassemblerInsn "mov" for 0x402249>, <DisassemblerInsn "xor" for 0x40224c>, <DisassemblerInsn "sub" for 0x40224e>, <DisassemblerInsn "shr" for 0x402251>, <DisassemblerInsn "mov" for 0x402253>, <DisassemblerInsn "add" for 0x40225b>, <DisassemblerInsn "mov" for 0x40225d>, <DisassemblerInsn "mov" for 0x40225f>, <DisassemblerInsn "jmp" for 0x402266>]'}, {'block_Idx': 185, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e1b>, <DisassemblerInsn "mov" for 0x401e22>, <DisassemblerInsn "mov" for 0x401e29>, <DisassemblerInsn "mov" for 0x401e30>, <DisassemblerInsn "xor" for 0x401e33>, <DisassemblerInsn "sub" for 0x401e35>, <DisassemblerInsn "shr" for 0x401e38>, <DisassemblerInsn "mov" for 0x401e3a>, <DisassemblerInsn "add" for 0x401e42>, <DisassemblerInsn "mov" for 0x401e44>, <DisassemblerInsn "mov" for 0x401e46>, <DisassemblerInsn "jmp" for 0x401e4d>]'}, {'block_Idx': 76, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014cb>, <DisassemblerInsn "mov" for 0x4014d3>, <DisassemblerInsn "mov" for 0x4014db>, <DisassemblerInsn "mov" for 0x4014e2>, <DisassemblerInsn "mov" for 0x4014e9>, <DisassemblerInsn "mov" for 0x4014f1>, <DisassemblerInsn "cmp" for 0x4014f9>, <DisassemblerInsn "jle" for 0x4014fc>]'}, {'block_Idx': 95, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401650>, <DisassemblerInsn "mov" for 0x401658>, <DisassemblerInsn "mov" for 0x40165f>, <DisassemblerInsn "mov" for 0x401667>, <DisassemblerInsn "shr" for 0x40166f>, <DisassemblerInsn "and" for 0x401673>, <DisassemblerInsn "mov" for 0x40167a>, <DisassemblerInsn "ror" for 0x40167d>, <DisassemblerInsn "ror" for 0x401681>, <DisassemblerInsn "ror" for 0x401684>, <DisassemblerInsn "shr" for 0x401688>, <DisassemblerInsn "add" for 0x40168b>, <DisassemblerInsn "mov" for 0x40168e>, <DisassemblerInsn "add" for 0x401690>, <DisassemblerInsn "mov" for 0x401693>, <DisassemblerInsn "mov" for 0x40169a>, <DisassemblerInsn "jmp" for 0x4016a1>]'}, {'block_Idx': 221, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402381>, <DisassemblerInsn "mov" for 0x402388>, <DisassemblerInsn "mov" for 0x402390>, <DisassemblerInsn "mov" for 0x402398>, <DisassemblerInsn "call" for 0x40239a>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012ad>, <DisassemblerInsn "and" for 0x4012b4>, <DisassemblerInsn "cmp" for 0x4012b7>, <DisassemblerInsn "je" for 0x4012ba>]'}, {'block_Idx': 129, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401af2>, <DisassemblerInsn "mov" for 0x401afa>, <DisassemblerInsn "add" for 0x401b01>, <DisassemblerInsn "mov" for 0x401b04>, <DisassemblerInsn "mov" for 0x401b06>, <DisassemblerInsn "mov" for 0x401b0d>, <DisassemblerInsn "mov" for 0x401b15>, <DisassemblerInsn "mov" for 0x401b1d>, <DisassemblerInsn "mov" for 0x401b24>, <DisassemblerInsn "mov" for 0x401b2b>, <DisassemblerInsn "mov" for 0x401b2d>, <DisassemblerInsn "mov" for 0x401b34>, <DisassemblerInsn "mov" for 0x401b37>, <DisassemblerInsn "mov" for 0x401b3f>, <DisassemblerInsn "sar" for 0x401b41>, <DisassemblerInsn "movsxd" for 0x401b44>, <DisassemblerInsn "mov" for 0x401b47>, <DisassemblerInsn "mov" for 0x401b4b>, <DisassemblerInsn "and" for 0x401b4d>, <DisassemblerInsn "movzx" for 0x401b50>, <DisassemblerInsn "mov" for 0x401b54>, <DisassemblerInsn "add" for 0x401b5b>, <DisassemblerInsn "mov" for 0x401b5e>, <DisassemblerInsn "mov" for 0x401b65>, <DisassemblerInsn "mov" for 0x401b67>, <DisassemblerInsn "shr" for 0x401b6c>, <DisassemblerInsn "mov" for 0x401b6e>, <DisassemblerInsn "and" for 0x401b75>, <DisassemblerInsn "cmp" for 0x401b77>, <DisassemblerInsn "je" for 0x401b7a>]'}, {'block_Idx': 109, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017f2>, <DisassemblerInsn "sub" for 0x4017f9>, <DisassemblerInsn "je" for 0x4017fc>]'}, {'block_Idx': 150, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d0c>, <DisassemblerInsn "mov" for 0x401d13>, <DisassemblerInsn "mov" for 0x401d1a>, <DisassemblerInsn "mov" for 0x401d21>, <DisassemblerInsn "mov" for 0x401d28>, <DisassemblerInsn "mov" for 0x401d2f>, <DisassemblerInsn "cmp" for 0x401d36>, <DisassemblerInsn "jle" for 0x401d39>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cff>, <DisassemblerInsn "cmp" for 0x400d06>, <DisassemblerInsn "jle" for 0x400d08>]'}, {'block_Idx': 102, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40191a>, <DisassemblerInsn "mov" for 0x401922>, <DisassemblerInsn "mov" for 0x401929>, <DisassemblerInsn "mov" for 0x401930>, <DisassemblerInsn "add" for 0x401937>, <DisassemblerInsn "mov" for 0x40193a>, <DisassemblerInsn "xor" for 0x40193c>, <DisassemblerInsn "call" for 0x40193e>]'}, {'block_Idx': 77, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401578>]'}, {'block_Idx': 48, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c19>, <DisassemblerInsn "mov" for 0x400c21>, <DisassemblerInsn "mov" for 0x400c29>, <DisassemblerInsn "mov" for 0x400c30>, <DisassemblerInsn "mov" for 0x400c38>, <DisassemblerInsn "sar" for 0x400c3a>, <DisassemblerInsn "movsxd" for 0x400c3d>, <DisassemblerInsn "mov" for 0x400c40>, <DisassemblerInsn "mov" for 0x400c43>, <DisassemblerInsn "and" for 0x400c45>, <DisassemblerInsn "mov" for 0x400c48>, <DisassemblerInsn "movzx" for 0x400c4f>, <DisassemblerInsn "mov" for 0x400c52>, <DisassemblerInsn "mov" for 0x400c59>, <DisassemblerInsn "add" for 0x400c5b>, <DisassemblerInsn "mov" for 0x400c5e>, <DisassemblerInsn "sar" for 0x400c60>, <DisassemblerInsn "movsxd" for 0x400c63>, <DisassemblerInsn "mov" for 0x400c66>, <DisassemblerInsn "ror" for 0x400c69>, <DisassemblerInsn "ror" for 0x400c6d>, <DisassemblerInsn "ror" for 0x400c70>, <DisassemblerInsn "and" for 0x400c74>, <DisassemblerInsn "shl" for 0x400c77>, <DisassemblerInsn "mov" for 0x400c79>, <DisassemblerInsn "shr" for 0x400c80>, <DisassemblerInsn "mov" for 0x400c83>, <DisassemblerInsn "mov" for 0x400c8a>, <DisassemblerInsn "add" for 0x400c8c>, <DisassemblerInsn "sar" for 0x400c8f>, <DisassemblerInsn "movsxd" for 0x400c92>, <DisassemblerInsn "mov" for 0x400c95>, <DisassemblerInsn "ror" for 0x400c98>, <DisassemblerInsn "ror" for 0x400c9c>, <DisassemblerInsn "ror" for 0x400c9f>, <DisassemblerInsn "shl" for 0x400ca3>, <DisassemblerInsn "mov" for 0x400ca5>, <DisassemblerInsn "shr" for 0x400cac>, <DisassemblerInsn "mov" for 0x400caf>, <DisassemblerInsn "add" for 0x400cb2>, <DisassemblerInsn "shl" for 0x400cb6>, <DisassemblerInsn "sar" for 0x400cb9>, <DisassemblerInsn "movsxd" for 0x400cbd>, <DisassemblerInsn "mov" for 0x400cc0>, <DisassemblerInsn "ror" for 0x400cc4>, <DisassemblerInsn "ror" for 0x400cc8>, <DisassemblerInsn "ror" for 0x400ccb>, <DisassemblerInsn "shl" for 0x400ccf>, <DisassemblerInsn "mov" for 0x400cd1>, <DisassemblerInsn "shr" for 0x400cd9>, <DisassemblerInsn "add" for 0x400cdc>, <DisassemblerInsn "mov" for 0x400cdf>, <DisassemblerInsn "mov" for 0x400ce6>, <DisassemblerInsn "or" for 0x400ce8>, <DisassemblerInsn "mov" for 0x400cea>, <DisassemblerInsn "shl" for 0x400cf1>, <DisassemblerInsn "mov" for 0x400cf4>, <DisassemblerInsn "add" for 0x400cfb>, <DisassemblerInsn "mov" for 0x400cfd>, <DisassemblerInsn "mov" for 0x400cff>, <DisassemblerInsn "cmp" for 0x400d06>, <DisassemblerInsn "jle" for 0x400d08>]'}, {'block_Idx': 224, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4020ac>, <DisassemblerInsn "mov" for 0x4020b4>, <DisassemblerInsn "mov" for 0x4020bc>, <DisassemblerInsn "mov" for 0x4020c3>, <DisassemblerInsn "mov" for 0x4020ca>, <DisassemblerInsn "sub" for 0x4020cf>, <DisassemblerInsn "mov" for 0x4020d1>, <DisassemblerInsn "shl" for 0x4020d8>, <DisassemblerInsn "mov" for 0x4020da>, <DisassemblerInsn "sar" for 0x4020e1>, <DisassemblerInsn "mov" for 0x4020e3>, <DisassemblerInsn "mov" for 0x4020eb>, <DisassemblerInsn "mov" for 0x4020ee>, <DisassemblerInsn "add" for 0x4020f1>, <DisassemblerInsn "mov" for 0x4020f5>, <DisassemblerInsn "movsxd" for 0x4020fd>, <DisassemblerInsn "cmp" for 0x402100>, <DisassemblerInsn "jge" for 0x402103>]'}, {'block_Idx': 220, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022f7>, <DisassemblerInsn "mov" for 0x4022ff>, <DisassemblerInsn "mov" for 0x402307>, <DisassemblerInsn "mov" for 0x40230e>, <DisassemblerInsn "mov" for 0x402315>, <DisassemblerInsn "sub" for 0x40231a>, <DisassemblerInsn "mov" for 0x40231c>, <DisassemblerInsn "shl" for 0x402323>, <DisassemblerInsn "mov" for 0x402325>, <DisassemblerInsn "sar" for 0x40232c>, <DisassemblerInsn "mov" for 0x40232e>, <DisassemblerInsn "mov" for 0x402336>, <DisassemblerInsn "add" for 0x402339>, <DisassemblerInsn "mov" for 0x40233d>, <DisassemblerInsn "cmp" for 0x402345>, <DisassemblerInsn "je" for 0x402348>]'}, {'block_Idx': 191, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f1d>, <DisassemblerInsn "mov" for 0x401f25>, <DisassemblerInsn "mov" for 0x401f2d>, <DisassemblerInsn "mov" for 0x401f32>, <DisassemblerInsn "xor" for 0x401f3a>, <DisassemblerInsn "mov" for 0x401f3c>, <DisassemblerInsn "mov" for 0x401f44>, <DisassemblerInsn "mov" for 0x401f4c>, <DisassemblerInsn "mov" for 0x401f54>, <DisassemblerInsn "mov" for 0x401f5c>, <DisassemblerInsn "mov" for 0x401f63>, <DisassemblerInsn "add" for 0x401f66>, <DisassemblerInsn "mov" for 0x401f6a>, <DisassemblerInsn "movsxd" for 0x401f72>, <DisassemblerInsn "cmp" for 0x401f75>, <DisassemblerInsn "mov" for 0x401f78>, <DisassemblerInsn "jl" for 0x401f80>]'}, {'block_Idx': 214, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40226b>, <DisassemblerInsn "mov" for 0x402273>, <DisassemblerInsn "mov" for 0x40227a>, <DisassemblerInsn "mov" for 0x402281>, <DisassemblerInsn "mov" for 0x402289>, <DisassemblerInsn "shr" for 0x402291>, <DisassemblerInsn "mov" for 0x402295>, <DisassemblerInsn "add" for 0x402298>, <DisassemblerInsn "mov" for 0x40229c>, <DisassemblerInsn "add" for 0x40229e>, <DisassemblerInsn "mov" for 0x4022a1>, <DisassemblerInsn "shl" for 0x4022a8>, <DisassemblerInsn "mov" for 0x4022ab>, <DisassemblerInsn "mov" for 0x4022b2>, <DisassemblerInsn "sar" for 0x4022ba>, <DisassemblerInsn "movsxd" for 0x4022be>, <DisassemblerInsn "mov" for 0x4022c1>, <DisassemblerInsn "ror" for 0x4022c5>, <DisassemblerInsn "ror" for 0x4022c9>, <DisassemblerInsn "ror" for 0x4022cc>, <DisassemblerInsn "shl" for 0x4022d0>, <DisassemblerInsn "mov" for 0x4022d2>, <DisassemblerInsn "mov" for 0x4022d9>, <DisassemblerInsn "xor" for 0x4022dc>, <DisassemblerInsn "sub" for 0x4022de>, <DisassemblerInsn "shr" for 0x4022e1>, <DisassemblerInsn "mov" for 0x4022e3>, <DisassemblerInsn "add" for 0x4022ea>, <DisassemblerInsn "mov" for 0x4022ec>, <DisassemblerInsn "or" for 0x4022ee>, <DisassemblerInsn "mov" for 0x4022f0>, <DisassemblerInsn "mov" for 0x4022f7>, <DisassemblerInsn "mov" for 0x4022ff>, <DisassemblerInsn "mov" for 0x402307>, <DisassemblerInsn "mov" for 0x40230e>, <DisassemblerInsn "mov" for 0x402315>, <DisassemblerInsn "sub" for 0x40231a>, <DisassemblerInsn "mov" for 0x40231c>, <DisassemblerInsn "shl" for 0x402323>, <DisassemblerInsn "mov" for 0x402325>, <DisassemblerInsn "sar" for 0x40232c>, <DisassemblerInsn "mov" for 0x40232e>, <DisassemblerInsn "mov" for 0x402336>, <DisassemblerInsn "add" for 0x402339>, <DisassemblerInsn "mov" for 0x40233d>, <DisassemblerInsn "cmp" for 0x402345>, <DisassemblerInsn "je" for 0x402348>]'}, {'block_Idx': 104, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017e4>, <DisassemblerInsn "sub" for 0x4017eb>, <DisassemblerInsn "je" for 0x4017ee>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401016>, <DisassemblerInsn "and" for 0x40101d>, <DisassemblerInsn "cmp" for 0x401022>, <DisassemblerInsn "je" for 0x401027>]'}, {'block_Idx': 143, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b0d>, <DisassemblerInsn "mov" for 0x401b15>, <DisassemblerInsn "mov" for 0x401b1d>, <DisassemblerInsn "mov" for 0x401b24>, <DisassemblerInsn "mov" for 0x401b2b>, <DisassemblerInsn "mov" for 0x401b2d>, <DisassemblerInsn "mov" for 0x401b34>, <DisassemblerInsn "mov" for 0x401b37>, <DisassemblerInsn "mov" for 0x401b3f>, <DisassemblerInsn "sar" for 0x401b41>, <DisassemblerInsn "movsxd" for 0x401b44>, <DisassemblerInsn "mov" for 0x401b47>, <DisassemblerInsn "mov" for 0x401b4b>, <DisassemblerInsn "and" for 0x401b4d>, <DisassemblerInsn "movzx" for 0x401b50>, <DisassemblerInsn "mov" for 0x401b54>, <DisassemblerInsn "add" for 0x401b5b>, <DisassemblerInsn "mov" for 0x401b5e>, <DisassemblerInsn "mov" for 0x401b65>, <DisassemblerInsn "mov" for 0x401b67>, <DisassemblerInsn "shr" for 0x401b6c>, <DisassemblerInsn "mov" for 0x401b6e>, <DisassemblerInsn "and" for 0x401b75>, <DisassemblerInsn "cmp" for 0x401b77>, <DisassemblerInsn "je" for 0x401b7a>]'}, {'block_Idx': 27, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d81>, <DisassemblerInsn "cmp" for 0x400d88>, <DisassemblerInsn "je" for 0x400d8b>]'}, {'block_Idx': 28, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d0a>, <DisassemblerInsn "mov" for 0x400d12>, <DisassemblerInsn "mov" for 0x400d1a>, <DisassemblerInsn "mov" for 0x400d22>, <DisassemblerInsn "mov" for 0x400d2a>, <DisassemblerInsn "mov" for 0x400d32>, <DisassemblerInsn "mov" for 0x400d3a>, <DisassemblerInsn "add" for 0x400d3d>, <DisassemblerInsn "sar" for 0x400d40>, <DisassemblerInsn "xor" for 0x400d43>, <DisassemblerInsn "cmp" for 0x400d46>, <DisassemblerInsn "cmovl" for 0x400d4a>, <DisassemblerInsn "xor" for 0x400d4e>, <DisassemblerInsn "cmp" for 0x400d51>, <DisassemblerInsn "mov" for 0x400d55>, <DisassemblerInsn "cmovl" for 0x400d58>, <DisassemblerInsn "xor" for 0x400d5c>, <DisassemblerInsn "cmp" for 0x400d5f>, <DisassemblerInsn "cmovl" for 0x400d63>, <DisassemblerInsn "mov" for 0x400d67>, <DisassemblerInsn "mov" for 0x400d6a>, <DisassemblerInsn "movsxd" for 0x400d6d>, <DisassemblerInsn "add" for 0x400d70>, <DisassemblerInsn "mov" for 0x400d73>, <DisassemblerInsn "mov" for 0x400d76>, <DisassemblerInsn "jmp" for 0x400d7c>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b2a>, <DisassemblerInsn "mov" for 0x400b32>, <DisassemblerInsn "ror" for 0x400b34>, <DisassemblerInsn "ror" for 0x400b38>, <DisassemblerInsn "ror" for 0x400b3b>, <DisassemblerInsn "shr" for 0x400b3f>, <DisassemblerInsn "mov" for 0x400b42>, <DisassemblerInsn "shl" for 0x400b49>, <DisassemblerInsn "mov" for 0x400b4c>, <DisassemblerInsn "ror" for 0x400b4f>, <DisassemblerInsn "ror" for 0x400b53>, <DisassemblerInsn "ror" for 0x400b56>, <DisassemblerInsn "mov" for 0x400b5a>, <DisassemblerInsn "shr" for 0x400b61>, <DisassemblerInsn "or" for 0x400b64>, <DisassemblerInsn "cmp" for 0x400b66>, <DisassemblerInsn "jne" for 0x400b6b>]'}, {'block_Idx': 30, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011d2>, <DisassemblerInsn "mov" for 0x4011da>, <DisassemblerInsn "add" for 0x4011e1>, <DisassemblerInsn "sub" for 0x4011e4>, <DisassemblerInsn "setb" for 0x4011e7>, <DisassemblerInsn "mov" for 0x4011ea>, <DisassemblerInsn "mov" for 0x4011ed>, <DisassemblerInsn "sub" for 0x4011ef>, <DisassemblerInsn "sete" for 0x4011f2>, <DisassemblerInsn "and" for 0x4011f5>, <DisassemblerInsn "test" for 0x4011f7>, <DisassemblerInsn "mov" for 0x4011fa>, <DisassemblerInsn "jne" for 0x401201>]'}, {'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ee7>, <DisassemblerInsn "cmp" for 0x402eee>, <DisassemblerInsn "je" for 0x402ef1>]'}], 'cfg_block_detailed_info': [{'block_Idx': 29, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x86c]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~edx, ecx>', '<mov~~dword ptr [rsp + 0x84c], edx>', '<mov~~dword ptr [rsp + 0x850], ecx>', '<mov~~dword ptr [rsp + 0x854], eax>', '<je~~0x401254>']}, {'block_Idx': 218, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~edi, dword ptr [rsp + 0x68c]>', '<mov~~esi, dword ptr [rsp + 0x688]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~r9d, dword ptr [rsp + 0x694]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x674], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x690]>', '<mov~~dword ptr [rsp + 0x678], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x674]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x678]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x67c], eax>', '<mov~~rax, qword ptr [rsp + 0x680]>', '<mov~~rdx, qword ptr [rsp + 0x6d0]>', '<mov~~edi, dword ptr [rsp + 0x688]>', '<mov~~esi, dword ptr [rsp + 0x67c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x664], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x664]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x668], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402ee7>']}, {'block_Idx': 64, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x818]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x46f1]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~esi, dword ptr [rsp + 0x9c8]>', '<mov~~eax, dword ptr [rsp + 0x9cc]>', '<mov~~rdx, qword ptr [rsp + 0x9d0]>', '<mov~~dword ptr [rsp + 0x940], eax>', '<mov~~dword ptr [rsp + 0x944], esi>', '<mov~~edi, eax>', '<shl~~edi, 3>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x948], rdx>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~edi, esi>', '<xor~~r8d, r8d>', '<cmp~~eax, 0>', '<mov~~esi, eax>', '<cmovl~~esi, r8d>', '<mov~~r8, rcx>', '<add~~r8, 0x28>', '<mov~~qword ptr [rsp + 0x950], r8>', '<mov~~qword ptr [rcx + 0x28], rdx>', '<mov~~r8, rcx>', '<add~~r8, 0x3c>', '<mov~~qword ptr [rsp + 0x958], r8>', '<mov~~dword ptr [rcx + 0x3c], edi>', '<mov~~esi, esi>', '<add~~rdx, rsi>', '<mov~~rsi, rcx>', '<add~~rsi, 0x30>', '<mov~~qword ptr [rsp + 0x960], rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x968], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<cmp~~eax, 0x18>', '<jl~~0x403f01>']}, {'block_Idx': 117, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<sub~~eax, 0xe>', '<je~~0x4018ac>']}, {'block_Idx': 189, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~esi, dword ptr [rsp + 0x6ec]>', '<mov~~edx, dword ptr [rsp + 0x6c4]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x6b4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x6b8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402ee7>']}, {'block_Idx': 211, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x6d8]>', '<mov~~eax, dword ptr [rsp + 0x6dc]>', '<mov~~rsi, qword ptr [rsp + 0x6e0]>', '<mov~~qword ptr [rsp + 0x680], rsi>', '<mov~~dword ptr [rsp + 0x688], eax>', '<mov~~dword ptr [rsp + 0x68c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x690], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x694], edx>', '<cmp~~eax, 0x12>', '<jge~~0x402020>']}, {'block_Idx': 106, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~rax, qword ptr [rsp + 0x948]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40191a>']}, {'block_Idx': 32, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, qword ptr [rsp + 0x998]>', '<mov~~rdi, qword ptr [rsp + 0x9b8]>', '<mov~~rsi, qword ptr [rsp + 0xa10]>', '<mov~~eax, dword ptr [rsp + 0x9a4]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x9c8], esi>', '<mov~~dword ptr [rsp + 0x9cc], edx>', '<mov~~qword ptr [rsp + 0x9d0], rcx>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<jne~~0x403fdf>']}, {'block_Idx': 3, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, qword ptr [rsp + 0xa10]>', '<mov~~ecx, dword ptr [rsp + 0x9ec]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x9e0]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~esi, dword ptr [rdx]>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0xa1c], esi>', '<mov~~dword ptr [rsp + 0x9c8], edx>', '<mov~~dword ptr [rsp + 0x9cc], ecx>', '<mov~~qword ptr [rsp + 0x9d0], rax>', '<je~~0x400a78>']}, {'block_Idx': 222, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x608]>', '<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x640], edx>', '<mov~~dword ptr [rsp + 0x644], ecx>', '<mov~~qword ptr [rsp + 0x648], rax>', '<jmp~~0x4021d2>']}, {'block_Idx': 122, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~rax, qword ptr [rsp + 0x948]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40191a>']}, {'block_Idx': 44, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x838], rax>', '<jmp~~0x401306>']}, {'block_Idx': 91, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~edx, dword ptr [rsp + 0x7c8]>', '<mov~~eax, dword ptr [rsp + 0x7cc]>', '<mov~~dword ptr [rsp + 0x7bc], eax>', '<mov~~dword ptr [rsp + 0x7c0], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x7c4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401729>']}, {'block_Idx': 172, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6ec]>', '<mov~~ecx, dword ptr [rsp + 0x6f0]>', '<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x6c8], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x6cc], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401e52>']}, {'block_Idx': 227, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x640]>', '<mov~~eax, dword ptr [rsp + 0x644]>', '<mov~~rsi, qword ptr [rsp + 0x648]>', '<mov~~qword ptr [rsp + 0x620], rsi>', '<mov~~dword ptr [rsp + 0x628], eax>', '<mov~~dword ptr [rsp + 0x62c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x630], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x634], edx>', '<cmp~~eax, 0x12>', '<jge~~0x40226b>']}, {'block_Idx': 41, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x950]>', '<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~eax, dword ptr [rax]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x928], rcx>', '<mov~~dword ptr [rsp + 0x934], eax>', '<jmp~~0x400c19>']}, {'block_Idx': 15, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x948]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~dword ptr [rdx], 0x20>', '<mov~~rdx, rax>', '<add~~rdx, 0x54>', '<mov~~qword ptr [rsp + 0x8e8], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x20>', '<mov~~qword ptr [rsp + 0x8f0], rdx>', '<mov~~rdx, rax>', '<mov~~qword ptr [rsp + 0x8f8], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0xc>', '<mov~~qword ptr [rsp + 0x900], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x10>', '<mov~~qword ptr [rsp + 0x908], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x58>', '<mov~~qword ptr [rsp + 0x910], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0xa8>', '<mov~~qword ptr [rsp + 0x918], rdx>', '<add~~rax, 0x98>', '<mov~~qword ptr [rsp + 0x920], rax>', '<mov~~eax, 0x20>', '<mov~~qword ptr [rsp + 0x928], rcx>', '<mov~~dword ptr [rsp + 0x934], eax>', '<mov~~rdi, qword ptr [rsp + 0x968]>', '<mov~~rax, qword ptr [rsp + 0x928]>', '<mov~~edx, dword ptr [rsp + 0x934]>', '<mov~~qword ptr [rsp + 0x8c0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x8d4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x8cc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x8d0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x958]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x8d8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x8dc], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x8e0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x968]>', '<mov~~rax, qword ptr [rsp + 0x860]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rsi, qword ptr [rsp + 0x838]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x808], esi>', '<cmp~~esi, 0x10>', '<setg~~r8b>', '<mov~~byte ptr [rsp + 0x80f], r8b>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x810], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r9d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r9d>', '<mov~~r9d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r9d, r11d>', '<and~~r8b, 1>', '<movzx~~r8d, r8b>', '<mov~~dword ptr [rdi + 0x58], r10d>', '<sub~~r9d, esi>', '<mov~~r10, rdi>', '<mov~~qword ptr [rsp + 0x818], r10>', '<mov~~r10, rdx>', '<add~~r10, 0x48>', '<mov~~qword ptr [rsp + 0x820], r10>', '<mov~~dword ptr [rdx + 0x48], r9d>', '<mov~~r9, rdx>', '<add~~r9, 0x4c>', '<mov~~qword ptr [rsp + 0x828], r9>', '<mov~~dword ptr [rdx + 0x4c], r8d>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x830], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x4013fa>']}, {'block_Idx': 58, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rsp + 0x948]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x800], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~ecx, edi>', '<shr~~ecx, 8>', '<mov~~eax, edx>', '<or~~eax, 8>', '<cmp~~esi, 0>', '<cmove~~ecx, edi>', '<cmp~~esi, 0>', '<cmove~~eax, edx>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, qword ptr [rip + 0xfebcb]>', '<movzx~~ecx, byte ptr [rcx + rdx]>', '<add~~eax, ecx>', '<mov~~ecx, 7>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsp + 0x804], ecx>', '<cmp~~eax, 6>', '<je~~0x401597>']}, {'block_Idx': 141, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x968]>', '<mov~~edx, dword ptr [rsp + 0x72c]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x73c]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x710], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 7>', '<mov~~dword ptr [rsi], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~edx, 8>', '<mov~~dword ptr [rsi], edx>', '<mov~~edi, 0x80>', '<shr~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x728]>', '<and~~edi, eax>', '<xor~~eax, eax>', '<mov~~esi, 1>', '<cmp~~edi, 0>', '<mov~~edi, edx>', '<mov~~dword ptr [rsp + 0x714], edi>', '<mov~~dword ptr [rsp + 0x718], esi>', '<mov~~dword ptr [rsp + 0x71c], edx>', '<mov~~dword ptr [rsp + 0x720], ecx>', '<mov~~dword ptr [rsp + 0x724], eax>', '<je~~0x401d0c>']}, {'block_Idx': 87, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x858]>', '<sub~~eax, 6>', '<je~~0x4015fd>']}, {'block_Idx': 89, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~ecx, dword ptr [rsp + 0x7d0]>', '<mov~~rax, qword ptr [rsp + 0x948]>', '<mov~~rsi, qword ptr [rsp + 0x7e0]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x7c8], ecx>', '<mov~~dword ptr [rsp + 0x7cc], eax>', '<jmp~~0x4016cc>']}, {'block_Idx': 151, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x718]>', '<mov~~edi, dword ptr [rsp + 0x714]>', '<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rsp + 0x730]>', '<mov~~dword ptr [rsp + 0x6f4], eax>', '<mov~~esi, edi>', '<sar~~esi, 3>', '<mov~~dword ptr [rsp + 0x6f8], esi>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x6fc], ecx>', '<movzx~~esi, sil>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x700], edi>', '<mov~~dword ptr [rdx], edi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x700]>', '<mov~~dword ptr [rsp + 0x704], edx>', '<and~~edx, esi>', '<mov~~dword ptr [rsp + 0x708], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x70c], eax>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x714], ecx>', '<mov~~dword ptr [rsp + 0x718], eax>', '<je~~0x401c43>']}, {'block_Idx': 217, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x68c]>', '<mov~~edx, dword ptr [rsp + 0x688]>', '<mov~~eax, dword ptr [rsp + 0x694]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x968]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x67c], eax>', '<jmp~~0x4020ac>']}, {'block_Idx': 225, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x6d8], edx>', '<mov~~dword ptr [rsp + 0x6dc], ecx>', '<mov~~qword ptr [rsp + 0x6e0], rax>', '<jmp~~0x401f87>']}, {'block_Idx': 186, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~edi, dword ptr [rsp + 0x6f0]>', '<mov~~esi, dword ptr [rsp + 0x6ec]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~r9d, dword ptr [rsp + 0x6cc]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x6bc], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x6c8]>', '<mov~~dword ptr [rsp + 0x6c0], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6bc]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6c0]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~esi, dword ptr [rsp + 0x6ec]>', '<mov~~edx, dword ptr [rsp + 0x6c4]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x6b4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x6b8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402ee7>']}, {'block_Idx': 112, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~rax, qword ptr [rsp + 0x948]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40191a>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x968]>', '<mov~~rax, qword ptr [rsp + 0x948]>', '<mov~~edx, dword ptr [rsp + 0x93c]>', '<mov~~esi, edx>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x858], esi>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x85c], edx>', '<mov~~rdx, rax>', '<add~~rdx, 3>', '<mov~~qword ptr [rsp + 0x860], rdx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x868], eax>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x86c], eax>', '<mov~~dword ptr [rcx], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x4011d2>']}, {'block_Idx': 65, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x804]>', '<mov~~edx, dword ptr [rsp + 0x800]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~edx, 0x28>', '<mov~~qword ptr [rsp + 0x7e8], rdx>', '<mov~~qword ptr [rsp + 0x7f0], rcx>', '<mov~~dword ptr [rsp + 0x7fc], eax>', '<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~rdx, qword ptr [rsp + 0x7f0]>', '<mov~~eax, dword ptr [rsp + 0x7fc]>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<mov~~qword ptr [rsp + 0x7d8], rdx>', '<mov~~qword ptr [rsp + 0x7e0], rcx>', '<cmp~~eax, 1>', '<jle~~0x40157a>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x940]>', '<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x10], eax>', '<cmp~~eax, ecx>', '<jle~~0x403f78>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x968]>', '<mov~~eax, dword ptr [rsp + 0x868]>', '<mov~~edx, dword ptr [rsp + 0x850]>', '<mov~~esi, dword ptr [rsp + 0x854]>', '<mov~~dword ptr [rsp + 0x840], esi>', '<mov~~dword ptr [rsp + 0x844], edx>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x848], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x4012ad>']}, {'block_Idx': 39, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x86c]>', '<add~~eax, -7>', '<mov~~ecx, 2>', '<mov~~dword ptr [rsp + 0x850], ecx>', '<mov~~dword ptr [rsp + 0x854], eax>', '<jmp~~0x401254>']}, {'block_Idx': 72, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7d8]>', '<mov~~rdi, qword ptr [rsp + 0x968]>', '<mov~~rdx, qword ptr [rsp + 0x7e0]>', '<mov~~rsi, qword ptr [rsp + 0x948]>', '<mov~~eax, dword ptr [rsp + 0x7d4]>', '<add~~eax, -1>', '<mov~~r8, rdx>', '<shr~~r8, 3>', '<mov~~esi, dword ptr [rsi + r8]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xf8>', '<add~~rdx, 8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rdi], r8d>', '<add~~esi, -0x80>', '<shl~~rcx, 6>', '<movsxd~~rdi, esi>', '<add~~rcx, rdi>', '<cmp~~esi, 0x40>', '<mov~~qword ptr [rsp + 0x7e8], rdx>', '<mov~~qword ptr [rsp + 0x7f0], rcx>', '<mov~~dword ptr [rsp + 0x7fc], eax>', '<jb~~0x4014cb>']}, {'block_Idx': 206, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6ec]>', '<mov~~edx, dword ptr [rsp + 0x6f0]>', '<mov~~eax, dword ptr [rsp + 0x650]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x638], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x640], edx>', '<mov~~dword ptr [rsp + 0x644], ecx>', '<mov~~qword ptr [rsp + 0x648], rax>', '<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x640]>', '<mov~~eax, dword ptr [rsp + 0x644]>', '<mov~~rsi, qword ptr [rsp + 0x648]>', '<mov~~qword ptr [rsp + 0x620], rsi>', '<mov~~dword ptr [rsp + 0x628], eax>', '<mov~~dword ptr [rsp + 0x62c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x630], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x634], edx>', '<cmp~~eax, 0x12>', '<jge~~0x40226b>']}, {'block_Idx': 92, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x858]>', '<sub~~eax, 7>', '<je~~0x401650>']}, {'block_Idx': 213, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x62c]>', '<mov~~edx, dword ptr [rsp + 0x628]>', '<mov~~eax, dword ptr [rsp + 0x634]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x968]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<jmp~~0x4022f7>']}, {'block_Idx': 185, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x6f0]>', '<mov~~edx, dword ptr [rsp + 0x6ec]>', '<mov~~eax, dword ptr [rsp + 0x6cc]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x968]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<jmp~~0x401ede>']}, {'block_Idx': 76, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~rdx, qword ptr [rsp + 0x7f0]>', '<mov~~eax, dword ptr [rsp + 0x7fc]>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<mov~~qword ptr [rsp + 0x7d8], rdx>', '<mov~~qword ptr [rsp + 0x7e0], rcx>', '<cmp~~eax, 1>', '<jle~~0x40157a>']}, {'block_Idx': 95, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~ecx, dword ptr [rsp + 0x7d0]>', '<mov~~rax, qword ptr [rsp + 0x948]>', '<mov~~rsi, qword ptr [rsp + 0x7e0]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x7c8], ecx>', '<mov~~dword ptr [rsp + 0x7cc], eax>', '<jmp~~0x4016cc>']}, {'block_Idx': 221, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x650]>', '<mov~~rdi, qword ptr [rsp + 0x9f0]>', '<mov~~rax, qword ptr [rsp + 0x748]>', '<mov~~esi, eax>', '<call~~0x404f70>']}, {'block_Idx': 45, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x848]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x4012de>']}, {'block_Idx': 129, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~eax, dword ptr [rsp + 0x750]>', '<add~~eax, 1>', '<mov~~dword ptr [rcx], eax>', '<mov~~dword ptr [rsp + 0x744], eax>', '<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rsp + 0x950]>', '<mov~~edx, dword ptr [rsp + 0x744]>', '<mov~~dword ptr [rsp + 0x728], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x72c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x730], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x740], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x73c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x740]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401b9c>']}, {'block_Idx': 109, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<sub~~eax, 0xd>', '<je~~0x401865>']}, {'block_Idx': 150, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x71c]>', '<mov~~eax, dword ptr [rsp + 0x720]>', '<mov~~edx, dword ptr [rsp + 0x724]>', '<mov~~dword ptr [rsp + 0x6e8], edx>', '<mov~~dword ptr [rsp + 0x6ec], eax>', '<mov~~dword ptr [rsp + 0x6f0], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x401d59>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~dword ptr [rsp + 0x8e4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400d81>']}, {'block_Idx': 102, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~ecx, dword ptr [rsp + 0x7a8]>', '<mov~~edx, dword ptr [rsp + 0x7ac]>', '<mov~~dword ptr [rsp + 0x790], edx>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500048>']}, {'block_Idx': 77, 'blockInsts': ['<jmp~~0x401597>']}, {'block_Idx': 48, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x968]>', '<mov~~rax, qword ptr [rsp + 0x928]>', '<mov~~edx, dword ptr [rsp + 0x934]>', '<mov~~qword ptr [rsp + 0x8c0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x8d4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x8cc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x8d0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x958]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x8d8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x8dc], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x8e0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x8e4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400d81>']}, {'block_Idx': 224, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x680]>', '<mov~~rdx, qword ptr [rsp + 0x6d0]>', '<mov~~edi, dword ptr [rsp + 0x688]>', '<mov~~esi, dword ptr [rsp + 0x67c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x664], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x664]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x668], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402ee7>']}, {'block_Idx': 220, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~rdx, qword ptr [rsp + 0x658]>', '<mov~~edi, dword ptr [rsp + 0x628]>', '<mov~~esi, dword ptr [rsp + 0x61c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x604], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x604]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x608], rax>', '<cmp~~rax, rcx>', '<je~~0x402381>']}, {'block_Idx': 191, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rcx, qword ptr [rsp + 0x748]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x6a0], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x6a8], rax>', '<mov~~rax, qword ptr [rsp + 0x6a8]>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~rdx, qword ptr [rsp + 0x6a0]>', '<mov~~esi, dword ptr [rsp + 0x6b8]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x698], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x6a8], rax>', '<jl~~0x401f44>']}, {'block_Idx': 214, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~edi, dword ptr [rsp + 0x62c]>', '<mov~~esi, dword ptr [rsp + 0x628]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~r9d, dword ptr [rsp + 0x634]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x614], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x630]>', '<mov~~dword ptr [rsp + 0x618], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x614]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x618]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~rdx, qword ptr [rsp + 0x658]>', '<mov~~edi, dword ptr [rsp + 0x628]>', '<mov~~esi, dword ptr [rsp + 0x61c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x604], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x604]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x608], rax>', '<cmp~~rax, rcx>', '<je~~0x402381>']}, {'block_Idx': 104, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<sub~~eax, 0xc>', '<je~~0x401815>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x938]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x401131>']}, {'block_Idx': 143, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rsp + 0x950]>', '<mov~~edx, dword ptr [rsp + 0x744]>', '<mov~~dword ptr [rsp + 0x728], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x72c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x730], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x740], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x73c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x740]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401b9c>']}, {'block_Idx': 27, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x8dc]>', '<cmp~~eax, 0>', '<je~~0x400fcd>']}, {'block_Idx': 28, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rsp + 0x960]>', '<mov~~rdi, qword ptr [rsp + 0x958]>', '<mov~~r9, qword ptr [rsp + 0x950]>', '<mov~~r11d, dword ptr [rsp + 0x8e4]>', '<mov~~rdx, qword ptr [rsp + 0x8c0]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x403f01>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x948]>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x938], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x93c], eax>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x401016>']}, {'block_Idx': 30, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~ecx, dword ptr [rsp + 0x86c]>', '<add~~ecx, -8>', '<sub~~ecx, 3>', '<setb~~cl>', '<mov~~eax, dword ptr [rax + 0xc]>', '<mov~~edx, eax>', '<sub~~edx, 2>', '<sete~~dl>', '<and~~cl, dl>', '<test~~cl, 1>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jne~~0x401205>']}, {'block_Idx': 190, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6e8]>', '<cmp~~eax, 0>', '<je~~0x402f71>']}], 'cfg_edge_info': [(15, 21), (48, 27), (72, 76), (58, 65), (87, 89), (39, 36), (141, 151), (32, 6), (22, 29), (106, 102), (206, 213), (6, 11), (16, 22), (218, 190), (211, 218), (41, 48), (58, 64), (51, 58), (3, 6), (112, 102), (143, 141), (141, 150), (227, 214), (89, 91), (65, 72), (76, 72), (11, 16), (186, 191), (117, 122), (109, 112), (36, 45), (172, 186), (214, 222), (6, 10), (72, 77), (48, 28), (185, 189), (122, 102), (95, 91), (211, 217), (227, 213), (29, 36), (104, 106), (22, 30), (217, 224), (186, 190), (218, 225), (129, 141), (11, 15), (92, 95), (36, 44), (172, 185), (213, 220), (206, 214), (214, 221)]}]}
{'flac_decode_frame': [4196984, 4197162, 4197233, 4197401, 4198705, 4198996, 4199418, 4199678, 4199933, 4200016, 4200469, 4200549, 4200620, 4201372, 4202011, 4202066, 4202473, 4202528, 4203060, 4203115]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/O3/flacdec.o---after
The extraction of function: flac_decode_frame
[4196984, 4197162, 4197233, 4197401, 4198705, 4198996, 4199418, 4199678, 4199933, 4200016, 4200469, 4200549, 4200620, 4201372, 4202011, 4202066, 4202473, 4202528, 4203060, 4203115]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 528 nodes and 817 edges in CFGEmulated.
It has 528 nodes and 867 edges in CDG.
It has 21454 nodes and 53023 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4196984, 4197162, 4197233, 4197401, 4198705, 4198996, 4199418, 4199678, 4199933, 4200016, 4200469, 4200549, 4200620, 4201372, 4202011, 4202066, 4202473, 4202528, 4203060, 4203115]
{4200448, 4205569, 4198915, 4196356, 4198917, 4196870, 4206599, 4210184, 4209167, 4200464, 4200469, 4198422, 4206102, 4197401, 4202011, 4197915, 4204059, 4202528, 4208160, 4206627, 4198948, 4205605, 4198445, 4205614, 4203571, 4203060, 4205619, 4196408, 4207679, 4201025, 4197954, 4201539, 4207173, 4198473, 4210252, 4205646, 4198991, 4200016, 4206672, 4202066, 4205651, 4198996, 4209751, 4206174, 4200549, 4203115, 4198516, 4203637, 4209268, 4204149, 4196984, 4208760, 4201083, 4198012, 4196477, 4208251, 4195968, 4204672, 4208772, 4204165, 4210315, 4205709, 4199570, 4206740, 4199063, 4205208, 4198042, 4198561, 4200099, 4208805, 4207275, 4200620, 4199085, 4202668, 4206764, 4209841, 4198068, 4201143, 4199100, 4203711, 4206786, 4207814, 4210378, 4199627, 4200140, 4196555, 4203727, 4209360, 4201169, 4201171, 4201686, 4198108, 4209372, 4199134, 4202206, 4204258, 4207334, 4206311, 4198631, 4196590, 4201200, 4201202, 4196083, 4206323, 4200694, 4203255, 4205819, 4200189, 4199678, 4197631, 4206336, 4210433, 4199169, 4209405, 4203514, 4208389, 4199174, 4202761, 4197642, 4198154, 4201740, 4201229, 4209933, 4207890, 4200725, 4209945, 4200730, 4202269, 4208926, 4200228, 4210469, 4206375, 4200233, 4196138, 4197162, 4204334, 4198705, 4209978, 4201787, 4203837, 4204350, 4202816, 4200771, 4202308, 4198214, 4205895, 4206918, 4203338, 4210510, 4202835, 4201812, 4198231, 4201817, 4201828, 4207972, 4201830, 4197233, 4206449, 4198257, 4196725, 4209526, 4199800, 4210552, 4199802, 4201848, 4201340, 4196221, 4200313, 4205947, 4197761, 4202370, 4203393, 4200836, 4200325, 4202375, 4201865, 4204429, 4198288, 4197777, 4200848, 4199831, 4201367, 4198810, 4202907, 4201372, 4204954, 4198302, 4203423, 4206494, 4197793, 4210081, 4196771, 4210600, 4203432, 4200362, 4203434, 4198316, 4209067, 4199855, 4200882, 4197810, 4199860, 4200374, 4196279, 4198328, 4200887, 4203962, 4208060, 4199871, 4199873, 4203459, 4204486, 4203468, 4198349, 4199885, 4199887, 4198864, 4203473, 4198866, 4202962, 4205518, 4206549, 4209662, 4201943, 4206039, 4199899, 4196316, 4199389, 4210655, 4199904, 4207071, 4200420, 4197862, 4202473, 4208620, 4198381, 4200432, 4205552, 4200434, 4199413, 4205557, 4199928, 4199418, 4197884, 4199933, 4200446}
[229, 166, 155, 264, 137, 249, 208, 311, 52, 25, 75, 269, 56, 34, 131, 321, 222, 251, 162, 89, 148, 32, 299, 180, 252, 190, 219, 337, 100, 146, 21, 13, 2, 224, 246, 188, 67, 260, 125, 220, 48, 235, 103, 11, 157, 116, 394, 248, 265, 98, 290, 326, 275, 191, 205, 363, 171, 409, 127, 1, 202, 196, 338, 195, 165, 442, 259, 164, 392, 240, 213, 362, 206, 49, 348, 209, 241, 86, 85, 99, 7, 253, 23, 51, 179, 115, 424, 198, 156, 120, 445, 233, 161, 117, 381, 236, 135, 405, 72, 37, 182, 105, 383, 174, 8, 31, 68, 349, 218, 379, 17, 178, 153, 121, 243, 22, 380, 6, 384, 15, 39, 53, 26, 175, 250, 258, 150, 124, 107, 81, 245, 88, 122, 12, 239, 71, 170, 149, 64, 45, 4, 214, 210, 393, 232, 217, 28, 270, 136, 193, 223, 234, 38, 43, 356, 212, 404, 96, 40, 74, 93, 225, 416, 16, 185, 118, 237, 151, 61, 366, 228, 443, 201, 417, 255, 19, 54, 158, 0, 204, 167, 173, 199, 132, 106, 147, 406, 169, 226, 27, 35, 143, 163, 418, 181, 247, 92, 114, 263, 266, 184, 408, 66, 231, 108, 47, 390, 59, 79, 139, 256, 140, 58, 41, 80, 55, 14, 145, 112, 128, 197, 172, 168, 221, 33, 9, 238, 382, 18, 102, 211, 144, 63, 44, 159, 42, 62, 464, 129, 110, 391, 378, 119, 365, 207, 350, 200, 130, 203, 186, 395, 134, 177, 216, 230, 5, 10, 50, 57, 194, 396, 142, 176, 319, 227, 87, 364, 242, 407, 244]
The execution time of patched slicing information extraction via angr: 0:03:22.467452
{'flac_decode_frame': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 229, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401d54>]'}, {'block_Idx': 166, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403eca>, <DisassemblerInsn "mov" for 0x403ed2>, <DisassemblerInsn "mov" for 0x403eda>, <DisassemblerInsn "mov" for 0x403ee2>, <DisassemblerInsn "imul" for 0x403ee9>, <DisassemblerInsn "mov" for 0x403eec>, <DisassemblerInsn "mov" for 0x403ef1>, <DisassemblerInsn "cmp" for 0x403ef6>, <DisassemblerInsn "cmove" for 0x403ef9>, <DisassemblerInsn "imul" for 0x403efc>, <DisassemblerInsn "mov" for 0x403eff>, <DisassemblerInsn "mov" for 0x403f01>, <DisassemblerInsn "mov" for 0x403f08>, <DisassemblerInsn "mov" for 0x403f10>, <DisassemblerInsn "add" for 0x403f12>, <DisassemblerInsn "mov" for 0x403f15>, <DisassemblerInsn "cdq" for 0x403f1a>, <DisassemblerInsn "idiv" for 0x403f1b>, <DisassemblerInsn "mov" for 0x403f1d>, <DisassemblerInsn "cmp" for 0x403f21>, <DisassemblerInsn "jle" for 0x403f23>]'}, {'block_Idx': 155, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403094>, <DisassemblerInsn "lea" for 0x40309c>, <DisassemblerInsn "movsxd" for 0x4030a3>, <DisassemblerInsn "add" for 0x4030a7>, <DisassemblerInsn "jmp" for 0x4030aa>]'}, {'block_Idx': 264, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402381>, <DisassemblerInsn "mov" for 0x402388>, <DisassemblerInsn "mov" for 0x402390>, <DisassemblerInsn "mov" for 0x402398>, <DisassemblerInsn "call" for 0x40239a>]'}, {'block_Idx': 137, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f9e>, <DisassemblerInsn "mov" for 0x400fa6>, <DisassemblerInsn "mov" for 0x400fac>, <DisassemblerInsn "cmp" for 0x400fb3>, <DisassemblerInsn "jle" for 0x400fb6>]'}, {'block_Idx': 249, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c33>, <DisassemblerInsn "mov" for 0x402c3b>, <DisassemblerInsn "xor" for 0x402c3e>, <DisassemblerInsn "lea" for 0x402c40>, <DisassemblerInsn "mov" for 0x402c47>, <DisassemblerInsn "call" for 0x402c49>]'}, {'block_Idx': 208, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403512>, <DisassemblerInsn "mov" for 0x40351a>, <DisassemblerInsn "mov" for 0x403521>, <DisassemblerInsn "mov" for 0x403528>, <DisassemblerInsn "mov" for 0x403530>, <DisassemblerInsn "mov" for 0x403537>, <DisassemblerInsn "mov" for 0x40353b>, <DisassemblerInsn "add" for 0x40353e>, <DisassemblerInsn "mov" for 0x403542>, <DisassemblerInsn "mov" for 0x403546>, <DisassemblerInsn "mov" for 0x40354d>, <DisassemblerInsn "mov" for 0x403554>, <DisassemblerInsn "mov" for 0x40355c>, <DisassemblerInsn "mov" for 0x403564>, <DisassemblerInsn "mov" for 0x40356c>, <DisassemblerInsn "mov" for 0x403573>, <DisassemblerInsn "mov" for 0x40357a>, <DisassemblerInsn "mov" for 0x403582>, <DisassemblerInsn "mov" for 0x40358a>, <DisassemblerInsn "mov" for 0x403592>, <DisassemblerInsn "mov" for 0x40359a>, <DisassemblerInsn "mov" for 0x4035a1>, <DisassemblerInsn "add" for 0x4035a8>, <DisassemblerInsn "mov" for 0x4035ac>, <DisassemblerInsn "movsxd" for 0x4035b4>, <DisassemblerInsn "cmp" for 0x4035b7>, <DisassemblerInsn "jge" for 0x4035ba>]'}, {'block_Idx': 311, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x40239f>, <DisassemblerInsn "jl" for 0x4023a2>]'}, {'block_Idx': 52, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401224>, <DisassemblerInsn "mov" for 0x40122b>, <DisassemblerInsn "mov" for 0x401233>, <DisassemblerInsn "mov" for 0x40123b>, <DisassemblerInsn "xor" for 0x40123f>, <DisassemblerInsn "lea" for 0x401241>, <DisassemblerInsn "mov" for 0x401248>, <DisassemblerInsn "call" for 0x40124a>]'}, {'block_Idx': 25, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cff>, <DisassemblerInsn "cmp" for 0x400d06>, <DisassemblerInsn "jle" for 0x400d08>]'}, {'block_Idx': 75, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403007>, <DisassemblerInsn "mov" for 0x40300f>, <DisassemblerInsn "xor" for 0x403013>, <DisassemblerInsn "lea" for 0x403015>, <DisassemblerInsn "mov" for 0x40301c>, <DisassemblerInsn "call" for 0x40301e>]'}, {'block_Idx': 269, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4020ac>, <DisassemblerInsn "mov" for 0x4020b4>, <DisassemblerInsn "mov" for 0x4020bc>, <DisassemblerInsn "mov" for 0x4020c3>, <DisassemblerInsn "mov" for 0x4020ca>, <DisassemblerInsn "sub" for 0x4020cf>, <DisassemblerInsn "mov" for 0x4020d1>, <DisassemblerInsn "shl" for 0x4020d8>, <DisassemblerInsn "mov" for 0x4020da>, <DisassemblerInsn "sar" for 0x4020e1>, <DisassemblerInsn "mov" for 0x4020e3>, <DisassemblerInsn "mov" for 0x4020eb>, <DisassemblerInsn "mov" for 0x4020ee>, <DisassemblerInsn "add" for 0x4020f1>, <DisassemblerInsn "mov" for 0x4020f5>, <DisassemblerInsn "movsxd" for 0x4020fd>, <DisassemblerInsn "cmp" for 0x402100>, <DisassemblerInsn "jge" for 0x402103>]'}, {'block_Idx': 56, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fb8>, <DisassemblerInsn "mov" for 0x400fc0>, <DisassemblerInsn "mov" for 0x400fc7>, <DisassemblerInsn "add" for 0x400fc9>, <DisassemblerInsn "mov" for 0x400fcb>, <DisassemblerInsn "mov" for 0x400fcd>, <DisassemblerInsn "mov" for 0x400fd4>, <DisassemblerInsn "shr" for 0x400fd9>, <DisassemblerInsn "mov" for 0x400fdb>, <DisassemblerInsn "and" for 0x400fe2>, <DisassemblerInsn "cmp" for 0x400fe4>, <DisassemblerInsn "jne" for 0x400fe7>]'}, {'block_Idx': 34, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40119a>, <DisassemblerInsn "mov" for 0x4011a1>, <DisassemblerInsn "mov" for 0x4011a9>, <DisassemblerInsn "add" for 0x4011ac>, <DisassemblerInsn "xor" for 0x4011af>, <DisassemblerInsn "cmp" for 0x4011b1>, <DisassemblerInsn "mov" for 0x4011b3>, <DisassemblerInsn "mov" for 0x4011b5>, <DisassemblerInsn "mov" for 0x4011bc>, <DisassemblerInsn "mov" for 0x4011c3>, <DisassemblerInsn "je" for 0x4011ca>]'}, {'block_Idx': 131, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f57>, <DisassemblerInsn "mov" for 0x400f5f>, <DisassemblerInsn "mov" for 0x400f66>, <DisassemblerInsn "cmp" for 0x400f6d>, <DisassemblerInsn "jae" for 0x400f6f>]'}, {'block_Idx': 321, 'blockInsts': '[<DisassemblerInsn "push" for 0x404f70>, <DisassemblerInsn "sub" for 0x404f71>, <DisassemblerInsn "mov" for 0x404f78>, <DisassemblerInsn "mov" for 0x404f7f>, <DisassemblerInsn "mov" for 0x404f86>, <DisassemblerInsn "mov" for 0x404f8e>, <DisassemblerInsn "add" for 0x404f91>, <DisassemblerInsn "mov" for 0x404f95>, <DisassemblerInsn "mov" for 0x404f9d>, <DisassemblerInsn "mov" for 0x404fa0>, <DisassemblerInsn "mov" for 0x404fa7>, <DisassemblerInsn "mov" for 0x404fab>, <DisassemblerInsn "mov" for 0x404fb3>, <DisassemblerInsn "sar" for 0x404fb5>, <DisassemblerInsn "movsxd" for 0x404fb8>, <DisassemblerInsn "mov" for 0x404fbb>, <DisassemblerInsn "ror" for 0x404fbe>, <DisassemblerInsn "ror" for 0x404fc2>, <DisassemblerInsn "ror" for 0x404fc5>, <DisassemblerInsn "and" for 0x404fc9>, <DisassemblerInsn "shl" for 0x404fcc>, <DisassemblerInsn "mov" for 0x404fce>, <DisassemblerInsn "shr" for 0x404fd5>, <DisassemblerInsn "mov" for 0x404fd8>, <DisassemblerInsn "add" for 0x404fdf>, <DisassemblerInsn "mov" for 0x404fe2>, <DisassemblerInsn "mov" for 0x404fe9>, <DisassemblerInsn "cmp" for 0x404fec>, <DisassemblerInsn "jle" for 0x404fef>]'}, {'block_Idx': 222, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403620>, <DisassemblerInsn "mov" for 0x403628>, <DisassemblerInsn "mov" for 0x403630>, <DisassemblerInsn "mov" for 0x403637>, <DisassemblerInsn "mov" for 0x40363e>, <DisassemblerInsn "mov" for 0x403646>, <DisassemblerInsn "mov" for 0x403648>, <DisassemblerInsn "mov" for 0x40364f>, <DisassemblerInsn "mov" for 0x403656>, <DisassemblerInsn "mov" for 0x403658>, <DisassemblerInsn "mov" for 0x40365f>, <DisassemblerInsn "mov" for 0x403666>, <DisassemblerInsn "mov" for 0x40366e>, <DisassemblerInsn "jmp" for 0x403676>]'}, {'block_Idx': 251, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a7b>, <DisassemblerInsn "mov" for 0x401a83>, <DisassemblerInsn "mov" for 0x401a8a>, <DisassemblerInsn "mov" for 0x401a91>, <DisassemblerInsn "mov" for 0x401a99>, <DisassemblerInsn "mov" for 0x401aa1>, <DisassemblerInsn "mov" for 0x401aa8>, <DisassemblerInsn "mov" for 0x401aaf>, <DisassemblerInsn "cmp" for 0x401ab1>, <DisassemblerInsn "jne" for 0x401ab5>]'}, {'block_Idx': 162, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403878>, <DisassemblerInsn "cmp" for 0x40387f>, <DisassemblerInsn "jne" for 0x403882>]'}, {'block_Idx': 89, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403023>, <DisassemblerInsn "mov" for 0x40302b>, <DisassemblerInsn "mov" for 0x403035>, <DisassemblerInsn "mov" for 0x40303f>, <DisassemblerInsn "mov" for 0x403044>, <DisassemblerInsn "jmp" for 0x40304b>]'}, {'block_Idx': 148, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f46>, <DisassemblerInsn "mov" for 0x400f4e>, <DisassemblerInsn "mov" for 0x400f50>, <DisassemblerInsn "mov" for 0x400f57>, <DisassemblerInsn "mov" for 0x400f5f>, <DisassemblerInsn "mov" for 0x400f66>, <DisassemblerInsn "cmp" for 0x400f6d>, <DisassemblerInsn "jae" for 0x400f6f>]'}, {'block_Idx': 32, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d81>, <DisassemblerInsn "cmp" for 0x400d88>, <DisassemblerInsn "je" for 0x400d8b>]'}, {'block_Idx': 299, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4023cc>]'}, {'block_Idx': 180, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b9c>, <DisassemblerInsn "mov" for 0x401ba4>, <DisassemblerInsn "mov" for 0x401bab>, <DisassemblerInsn "mov" for 0x401bb3>, <DisassemblerInsn "mov" for 0x401bba>, <DisassemblerInsn "sar" for 0x401bbc>, <DisassemblerInsn "movsxd" for 0x401bbf>, <DisassemblerInsn "mov" for 0x401bc2>, <DisassemblerInsn "ror" for 0x401bc5>, <DisassemblerInsn "ror" for 0x401bc9>, <DisassemblerInsn "ror" for 0x401bcc>, <DisassemblerInsn "and" for 0x401bd0>, <DisassemblerInsn "shl" for 0x401bd3>, <DisassemblerInsn "mov" for 0x401bd5>, <DisassemblerInsn "shr" for 0x401bd7>, <DisassemblerInsn "mov" for 0x401bda>, <DisassemblerInsn "mov" for 0x401be1>, <DisassemblerInsn "add" for 0x401be3>, <DisassemblerInsn "mov" for 0x401be6>, <DisassemblerInsn "mov" for 0x401be8>, <DisassemblerInsn "sar" for 0x401bea>, <DisassemblerInsn "movsxd" for 0x401bed>, <DisassemblerInsn "mov" for 0x401bf0>, <DisassemblerInsn "and" for 0x401bf3>, <DisassemblerInsn "movzx" for 0x401bf6>, <DisassemblerInsn "add" for 0x401bf9>, <DisassemblerInsn "mov" for 0x401bfc>, <DisassemblerInsn "mov" for 0x401bfe>, <DisassemblerInsn "shr" for 0x401c03>, <DisassemblerInsn "mov" for 0x401c05>, <DisassemblerInsn "and" for 0x401c0c>, <DisassemblerInsn "xor" for 0x401c0e>, <DisassemblerInsn "mov" for 0x401c10>, <DisassemblerInsn "cmp" for 0x401c15>, <DisassemblerInsn "mov" for 0x401c18>, <DisassemblerInsn "mov" for 0x401c1a>, <DisassemblerInsn "mov" for 0x401c21>, <DisassemblerInsn "mov" for 0x401c28>, <DisassemblerInsn "mov" for 0x401c2f>, <DisassemblerInsn "mov" for 0x401c36>, <DisassemblerInsn "je" for 0x401c3d>]'}, {'block_Idx': 252, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f27>, <DisassemblerInsn "mov" for 0x402f2f>, <DisassemblerInsn "mov" for 0x402f37>, <DisassemblerInsn "mov" for 0x402f3e>, <DisassemblerInsn "shl" for 0x402f41>, <DisassemblerInsn "mov" for 0x402f43>, <DisassemblerInsn "mov" for 0x402f4b>, <DisassemblerInsn "mov" for 0x402f52>, <DisassemblerInsn "add" for 0x402f55>, <DisassemblerInsn "mov" for 0x402f59>, <DisassemblerInsn "movsxd" for 0x402f61>, <DisassemblerInsn "cmp" for 0x402f64>, <DisassemblerInsn "mov" for 0x402f67>, <DisassemblerInsn "jl" for 0x402f6f>]'}, {'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d0c>, <DisassemblerInsn "mov" for 0x401d13>, <DisassemblerInsn "mov" for 0x401d1a>, <DisassemblerInsn "mov" for 0x401d21>, <DisassemblerInsn "mov" for 0x401d28>, <DisassemblerInsn "mov" for 0x401d2f>, <DisassemblerInsn "cmp" for 0x401d36>, <DisassemblerInsn "jle" for 0x401d39>]'}, {'block_Idx': 219, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40343a>]'}, {'block_Idx': 337, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40272e>, <DisassemblerInsn "cmp" for 0x402735>, <DisassemblerInsn "jle" for 0x402738>]'}, {'block_Idx': 100, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4015cd>]'}, {'block_Idx': 146, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401810>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009cb>, <DisassemblerInsn "mov" for 0x4009d2>, <DisassemblerInsn "mov" for 0x4009da>, <DisassemblerInsn "mov" for 0x4009e2>, <DisassemblerInsn "mov" for 0x4009e9>, <DisassemblerInsn "mov" for 0x4009f0>, <DisassemblerInsn "add" for 0x4009f7>, <DisassemblerInsn "mov" for 0x4009f9>, <DisassemblerInsn "add" for 0x4009fb>, <DisassemblerInsn "movsxd" for 0x4009fe>, <DisassemblerInsn "call" for 0x400a01>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b2a>, <DisassemblerInsn "mov" for 0x400b32>, <DisassemblerInsn "ror" for 0x400b34>, <DisassemblerInsn "ror" for 0x400b38>, <DisassemblerInsn "ror" for 0x400b3b>, <DisassemblerInsn "shr" for 0x400b3f>, <DisassemblerInsn "mov" for 0x400b42>, <DisassemblerInsn "shl" for 0x400b49>, <DisassemblerInsn "mov" for 0x400b4c>, <DisassemblerInsn "ror" for 0x400b4f>, <DisassemblerInsn "ror" for 0x400b53>, <DisassemblerInsn "ror" for 0x400b56>, <DisassemblerInsn "mov" for 0x400b5a>, <DisassemblerInsn "shr" for 0x400b61>, <DisassemblerInsn "or" for 0x400b64>, <DisassemblerInsn "cmp" for 0x400b66>, <DisassemblerInsn "jne" for 0x400b6b>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40077d>, <DisassemblerInsn "mov" for 0x400785>, <DisassemblerInsn "mov" for 0x40078c>, <DisassemblerInsn "mov" for 0x400793>, <DisassemblerInsn "add" for 0x400796>, <DisassemblerInsn "mov" for 0x40079d>, <DisassemblerInsn "mov" for 0x4007a5>, <DisassemblerInsn "mov" for 0x4007ab>, <DisassemblerInsn "cmp" for 0x4007b2>, <DisassemblerInsn "jb" for 0x4007b5>]'}, {'block_Idx': 224, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x403d08>]'}, {'block_Idx': 246, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d89>, <DisassemblerInsn "mov" for 0x401d90>, <DisassemblerInsn "mov" for 0x401d97>, <DisassemblerInsn "mov" for 0x401d9f>, <DisassemblerInsn "add" for 0x401da7>, <DisassemblerInsn "shl" for 0x401dab>, <DisassemblerInsn "add" for 0x401daf>, <DisassemblerInsn "mov" for 0x401db2>, <DisassemblerInsn "xor" for 0x401dba>, <DisassemblerInsn "mov" for 0x401dbc>, <DisassemblerInsn "mov" for 0x401dc3>, <DisassemblerInsn "mov" for 0x401dca>, <DisassemblerInsn "jmp" for 0x401dd2>]'}, {'block_Idx': 188, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403afd>, <DisassemblerInsn "mov" for 0x403b05>, <DisassemblerInsn "mov" for 0x403b0d>, <DisassemblerInsn "mov" for 0x403b14>, <DisassemblerInsn "mov" for 0x403b1c>, <DisassemblerInsn "mov" for 0x403b20>, <DisassemblerInsn "mov" for 0x403b28>, <DisassemblerInsn "mov" for 0x403b2c>, <DisassemblerInsn "xor" for 0x403b34>, <DisassemblerInsn "mov" for 0x403b36>, <DisassemblerInsn "mov" for 0x403b3d>, <DisassemblerInsn "mov" for 0x403b45>, <DisassemblerInsn "mov" for 0x403b4d>, <DisassemblerInsn "jmp" for 0x403b55>]'}, {'block_Idx': 67, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010a1>, <DisassemblerInsn "mov" for 0x4010a8>, <DisassemblerInsn "mov" for 0x4010b0>, <DisassemblerInsn "mov" for 0x4010b7>, <DisassemblerInsn "sar" for 0x4010be>, <DisassemblerInsn "movsxd" for 0x4010c1>, <DisassemblerInsn "mov" for 0x4010c4>, <DisassemblerInsn "ror" for 0x4010c7>, <DisassemblerInsn "ror" for 0x4010cb>, <DisassemblerInsn "ror" for 0x4010ce>, <DisassemblerInsn "shl" for 0x4010d2>, <DisassemblerInsn "shr" for 0x4010d4>, <DisassemblerInsn "and" for 0x4010d7>, <DisassemblerInsn "cmp" for 0x4010dc>, <DisassemblerInsn "je" for 0x4010e1>]'}, {'block_Idx': 260, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402020>, <DisassemblerInsn "mov" for 0x402028>, <DisassemblerInsn "mov" for 0x40202f>, <DisassemblerInsn "mov" for 0x402036>, <DisassemblerInsn "mov" for 0x40203e>, <DisassemblerInsn "shr" for 0x402046>, <DisassemblerInsn "mov" for 0x40204a>, <DisassemblerInsn "add" for 0x40204d>, <DisassemblerInsn "mov" for 0x402051>, <DisassemblerInsn "add" for 0x402053>, <DisassemblerInsn "mov" for 0x402056>, <DisassemblerInsn "shl" for 0x40205d>, <DisassemblerInsn "mov" for 0x402060>, <DisassemblerInsn "mov" for 0x402067>, <DisassemblerInsn "sar" for 0x40206f>, <DisassemblerInsn "movsxd" for 0x402073>, <DisassemblerInsn "mov" for 0x402076>, <DisassemblerInsn "ror" for 0x40207a>, <DisassemblerInsn "ror" for 0x40207e>, <DisassemblerInsn "ror" for 0x402081>, <DisassemblerInsn "shl" for 0x402085>, <DisassemblerInsn "mov" for 0x402087>, <DisassemblerInsn "mov" for 0x40208e>, <DisassemblerInsn "xor" for 0x402091>, <DisassemblerInsn "sub" for 0x402093>, <DisassemblerInsn "shr" for 0x402096>, <DisassemblerInsn "mov" for 0x402098>, <DisassemblerInsn "add" for 0x40209f>, <DisassemblerInsn "mov" for 0x4020a1>, <DisassemblerInsn "or" for 0x4020a3>, <DisassemblerInsn "mov" for 0x4020a5>, <DisassemblerInsn "mov" for 0x4020ac>, <DisassemblerInsn "mov" for 0x4020b4>, <DisassemblerInsn "mov" for 0x4020bc>, <DisassemblerInsn "mov" for 0x4020c3>, <DisassemblerInsn "mov" for 0x4020ca>, <DisassemblerInsn "sub" for 0x4020cf>, <DisassemblerInsn "mov" for 0x4020d1>, <DisassemblerInsn "shl" for 0x4020d8>, <DisassemblerInsn "mov" for 0x4020da>, <DisassemblerInsn "sar" for 0x4020e1>, <DisassemblerInsn "mov" for 0x4020e3>, <DisassemblerInsn "mov" for 0x4020eb>, <DisassemblerInsn "mov" for 0x4020ee>, <DisassemblerInsn "add" for 0x4020f1>, <DisassemblerInsn "mov" for 0x4020f5>, <DisassemblerInsn "movsxd" for 0x4020fd>, <DisassemblerInsn "cmp" for 0x402100>, <DisassemblerInsn "jge" for 0x402103>]'}, {'block_Idx': 125, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4017f0>]'}, {'block_Idx': 220, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403564>, <DisassemblerInsn "mov" for 0x40356c>, <DisassemblerInsn "mov" for 0x403573>, <DisassemblerInsn "mov" for 0x40357a>, <DisassemblerInsn "mov" for 0x403582>, <DisassemblerInsn "mov" for 0x40358a>, <DisassemblerInsn "mov" for 0x403592>, <DisassemblerInsn "mov" for 0x40359a>, <DisassemblerInsn "mov" for 0x4035a1>, <DisassemblerInsn "add" for 0x4035a8>, <DisassemblerInsn "mov" for 0x4035ac>, <DisassemblerInsn "movsxd" for 0x4035b4>, <DisassemblerInsn "cmp" for 0x4035b7>, <DisassemblerInsn "jge" for 0x4035ba>]'}, {'block_Idx': 48, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400da1>, <DisassemblerInsn "cmp" for 0x400da9>, <DisassemblerInsn "jne" for 0x400dac>]'}, {'block_Idx': 235, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402140>, <DisassemblerInsn "add" for 0x402147>, <DisassemblerInsn "cmp" for 0x40214a>, <DisassemblerInsn "jae" for 0x40214d>]'}, {'block_Idx': 103, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015cf>, <DisassemblerInsn "sub" for 0x4015d6>, <DisassemblerInsn "je" for 0x4015d9>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40087d>, <DisassemblerInsn "mov" for 0x400884>, <DisassemblerInsn "mov" for 0x40088b>, <DisassemblerInsn "mov" for 0x400892>, <DisassemblerInsn "mov" for 0x40089a>, <DisassemblerInsn "add" for 0x40089d>, <DisassemblerInsn "mov" for 0x4008a4>, <DisassemblerInsn "mov" for 0x4008ac>, <DisassemblerInsn "cmp" for 0x4008b2>, <DisassemblerInsn "mov" for 0x4008b4>, <DisassemblerInsn "mov" for 0x4008bb>, <DisassemblerInsn "mov" for 0x4008c2>, <DisassemblerInsn "jae" for 0x4008c9>]'}, {'block_Idx': 157, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ab7>, <DisassemblerInsn "mov" for 0x401abe>, <DisassemblerInsn "cmp" for 0x401ac5>, <DisassemblerInsn "mov" for 0x401ac8>, <DisassemblerInsn "je" for 0x401acf>]'}, {'block_Idx': 116, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401724>]'}, {'block_Idx': 394, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402cfb>, <DisassemblerInsn "mov" for 0x402d03>, <DisassemblerInsn "mov" for 0x402d0b>, <DisassemblerInsn "mov" for 0x402d12>, <DisassemblerInsn "mov" for 0x402d19>, <DisassemblerInsn "mov" for 0x402d20>, <DisassemblerInsn "mov" for 0x402d27>, <DisassemblerInsn "mov" for 0x402d2e>, <DisassemblerInsn "mov" for 0x402d35>, <DisassemblerInsn "cmp" for 0x402d3d>, <DisassemblerInsn "je" for 0x402d41>]'}, {'block_Idx': 248, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40219b>, <DisassemblerInsn "mov" for 0x4021a2>, <DisassemblerInsn "mov" for 0x4021a9>, <DisassemblerInsn "mov" for 0x4021b0>, <DisassemblerInsn "mov" for 0x4021b2>, <DisassemblerInsn "xor" for 0x4021ba>, <DisassemblerInsn "mov" for 0x4021bc>, <DisassemblerInsn "mov" for 0x4021c3>, <DisassemblerInsn "mov" for 0x4021ca>, <DisassemblerInsn "mov" for 0x4021d2>, <DisassemblerInsn "mov" for 0x4021da>, <DisassemblerInsn "mov" for 0x4021e1>, <DisassemblerInsn "mov" for 0x4021e8>, <DisassemblerInsn "mov" for 0x4021f0>, <DisassemblerInsn "mov" for 0x4021f8>, <DisassemblerInsn "mov" for 0x4021ff>, <DisassemblerInsn "mov" for 0x402206>, <DisassemblerInsn "sar" for 0x402208>, <DisassemblerInsn "movsxd" for 0x40220b>, <DisassemblerInsn "mov" for 0x40220e>, <DisassemblerInsn "ror" for 0x402211>, <DisassemblerInsn "ror" for 0x402215>, <DisassemblerInsn "ror" for 0x402218>, <DisassemblerInsn "and" for 0x40221c>, <DisassemblerInsn "mov" for 0x40221f>, <DisassemblerInsn "shl" for 0x402226>, <DisassemblerInsn "mov" for 0x402228>, <DisassemblerInsn "cmp" for 0x40222f>, <DisassemblerInsn "jge" for 0x402232>]'}, {'block_Idx': 265, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40234a>, <DisassemblerInsn "mov" for 0x402352>, <DisassemblerInsn "mov" for 0x40235a>, <DisassemblerInsn "mov" for 0x402362>, <DisassemblerInsn "mov" for 0x402364>, <DisassemblerInsn "mov" for 0x402366>, <DisassemblerInsn "mov" for 0x40236d>, <DisassemblerInsn "mov" for 0x402374>, <DisassemblerInsn "jmp" for 0x40237c>]'}, {'block_Idx': 98, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4015f8>]'}, {'block_Idx': 290, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x4023c3>, <DisassemblerInsn "jl" for 0x4023c6>]'}, {'block_Idx': 326, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023d1>, <DisassemblerInsn "mov" for 0x4023d8>, <DisassemblerInsn "mov" for 0x4023e0>, <DisassemblerInsn "add" for 0x4023e2>, <DisassemblerInsn "mov" for 0x4023e5>, <DisassemblerInsn "mov" for 0x4023e7>, <DisassemblerInsn "mov" for 0x4023ea>, <DisassemblerInsn "cmp" for 0x4023f1>, <DisassemblerInsn "je" for 0x4023f4>]'}, {'block_Idx': 275, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4021d2>, <DisassemblerInsn "mov" for 0x4021da>, <DisassemblerInsn "mov" for 0x4021e1>, <DisassemblerInsn "mov" for 0x4021e8>, <DisassemblerInsn "mov" for 0x4021f0>, <DisassemblerInsn "mov" for 0x4021f8>, <DisassemblerInsn "mov" for 0x4021ff>, <DisassemblerInsn "mov" for 0x402206>, <DisassemblerInsn "sar" for 0x402208>, <DisassemblerInsn "movsxd" for 0x40220b>, <DisassemblerInsn "mov" for 0x40220e>, <DisassemblerInsn "ror" for 0x402211>, <DisassemblerInsn "ror" for 0x402215>, <DisassemblerInsn "ror" for 0x402218>, <DisassemblerInsn "and" for 0x40221c>, <DisassemblerInsn "mov" for 0x40221f>, <DisassemblerInsn "shl" for 0x402226>, <DisassemblerInsn "mov" for 0x402228>, <DisassemblerInsn "cmp" for 0x40222f>, <DisassemblerInsn "jge" for 0x402232>]'}, {'block_Idx': 191, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c43>, <DisassemblerInsn "mov" for 0x401c4a>, <DisassemblerInsn "mov" for 0x401c51>, <DisassemblerInsn "mov" for 0x401c59>, <DisassemblerInsn "mov" for 0x401c61>, <DisassemblerInsn "mov" for 0x401c68>, <DisassemblerInsn "sar" for 0x401c6a>, <DisassemblerInsn "mov" for 0x401c6d>, <DisassemblerInsn "movsxd" for 0x401c74>, <DisassemblerInsn "mov" for 0x401c77>, <DisassemblerInsn "mov" for 0x401c7b>, <DisassemblerInsn "and" for 0x401c7d>, <DisassemblerInsn "mov" for 0x401c80>, <DisassemblerInsn "movzx" for 0x401c87>, <DisassemblerInsn "add" for 0x401c8b>, <DisassemblerInsn "mov" for 0x401c8e>, <DisassemblerInsn "mov" for 0x401c95>, <DisassemblerInsn "mov" for 0x401c97>, <DisassemblerInsn "shr" for 0x401c9c>, <DisassemblerInsn "mov" for 0x401c9e>, <DisassemblerInsn "mov" for 0x401ca5>, <DisassemblerInsn "and" for 0x401cac>, <DisassemblerInsn "mov" for 0x401cae>, <DisassemblerInsn "add" for 0x401cb5>, <DisassemblerInsn "mov" for 0x401cb8>, <DisassemblerInsn "cmp" for 0x401cbf>, <DisassemblerInsn "mov" for 0x401cc2>, <DisassemblerInsn "mov" for 0x401cc9>, <DisassemblerInsn "je" for 0x401cd0>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40367b>, <DisassemblerInsn "mov" for 0x403683>, <DisassemblerInsn "mov" for 0x40368a>, <DisassemblerInsn "mov" for 0x403691>, <DisassemblerInsn "mov" for 0x403699>, <DisassemblerInsn "mov" for 0x4036a1>, <DisassemblerInsn "mov" for 0x4036a9>, <DisassemblerInsn "xor" for 0x4036b1>, <DisassemblerInsn "cmp" for 0x4036b3>, <DisassemblerInsn "mov" for 0x4036b7>, <DisassemblerInsn "mov" for 0x4036bf>, <DisassemblerInsn "mov" for 0x4036c7>, <DisassemblerInsn "mov" for 0x4036cf>, <DisassemblerInsn "mov" for 0x4036d6>, <DisassemblerInsn "mov" for 0x4036d8>, <DisassemblerInsn "mov" for 0x4036df>, <DisassemblerInsn "mov" for 0x4036e1>, <DisassemblerInsn "mov" for 0x4036e8>, <DisassemblerInsn "mov" for 0x4036ef>, <DisassemblerInsn "mov" for 0x4036f7>, <DisassemblerInsn "je" for 0x4036ff>]'}, {'block_Idx': 363, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40278d>, <DisassemblerInsn "mov" for 0x402794>, <DisassemblerInsn "and" for 0x40279c>, <DisassemblerInsn "mov" for 0x4027a0>, <DisassemblerInsn "mov" for 0x4027a8>, <DisassemblerInsn "xor" for 0x4027ad>, <DisassemblerInsn "mov" for 0x4027af>, <DisassemblerInsn "mov" for 0x4027b7>, <DisassemblerInsn "mov" for 0x4027be>, <DisassemblerInsn "mov" for 0x4027c6>, <DisassemblerInsn "mov" for 0x4027ce>, <DisassemblerInsn "mov" for 0x4027d5>, <DisassemblerInsn "mov" for 0x4027dd>, <DisassemblerInsn "mov" for 0x4027e5>, <DisassemblerInsn "mov" for 0x4027ed>, <DisassemblerInsn "add" for 0x4027f5>, <DisassemblerInsn "mov" for 0x4027f8>, <DisassemblerInsn "mov" for 0x4027ff>, <DisassemblerInsn "add" for 0x402802>, <DisassemblerInsn "mov" for 0x402806>, <DisassemblerInsn "mov" for 0x40280d>, <DisassemblerInsn "add" for 0x402811>, <DisassemblerInsn "mov" for 0x402815>, <DisassemblerInsn "mov" for 0x40281c>, <DisassemblerInsn "add" for 0x402820>, <DisassemblerInsn "mov" for 0x402824>, <DisassemblerInsn "mov" for 0x40282b>, <DisassemblerInsn "add" for 0x40282f>, <DisassemblerInsn "mov" for 0x402833>, <DisassemblerInsn "add" for 0x40283b>, <DisassemblerInsn "mov" for 0x40283f>, <DisassemblerInsn "cmp" for 0x402847>, <DisassemblerInsn "mov" for 0x40284a>, <DisassemblerInsn "mov" for 0x40284d>, <DisassemblerInsn "mov" for 0x402855>, <DisassemblerInsn "mov" for 0x402857>, <DisassemblerInsn "mov" for 0x40285e>, <DisassemblerInsn "mov" for 0x402866>, <DisassemblerInsn "mov" for 0x40286e>, <DisassemblerInsn "je" for 0x402875>]'}, {'block_Idx': 171, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403884>, <DisassemblerInsn "mov" for 0x40388c>, <DisassemblerInsn "mov" for 0x40388e>, <DisassemblerInsn "cmp" for 0x403895>, <DisassemblerInsn "mov" for 0x403898>, <DisassemblerInsn "jle" for 0x40389f>]'}, {'block_Idx': 409, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402bf0>]'}, {'block_Idx': 127, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e42>, <DisassemblerInsn "mov" for 0x400e4a>, <DisassemblerInsn "mov" for 0x400e51>, <DisassemblerInsn "mov" for 0x400e58>, <DisassemblerInsn "mov" for 0x400e60>, <DisassemblerInsn "imul" for 0x400e62>, <DisassemblerInsn "imul" for 0x400e65>, <DisassemblerInsn "add" for 0x400e68>, <DisassemblerInsn "mov" for 0x400e6b>, <DisassemblerInsn "cdq" for 0x400e70>, <DisassemblerInsn "idiv" for 0x400e71>, <DisassemblerInsn "mov" for 0x400e73>, <DisassemblerInsn "mov" for 0x400e75>, <DisassemblerInsn "mov" for 0x400e7c>, <DisassemblerInsn "mov" for 0x400e83>, <DisassemblerInsn "cmp" for 0x400e8a>, <DisassemblerInsn "mov" for 0x400e8d>, <DisassemblerInsn "jle" for 0x400e94>]'}, {'block_Idx': 1, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4006f3>, <DisassemblerInsn "mov" for 0x4006fa>, <DisassemblerInsn "mov" for 0x400702>, <DisassemblerInsn "mov" for 0x40070a>, <DisassemblerInsn "cmp" for 0x40070f>, <DisassemblerInsn "cmovg" for 0x400712>, <DisassemblerInsn "mov" for 0x400715>, <DisassemblerInsn "mov" for 0x400717>, <DisassemblerInsn "add" for 0x40071e>, <DisassemblerInsn "call" for 0x400725>]'}, {'block_Idx': 202, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401b97>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40343f>, <DisassemblerInsn "mov" for 0x403447>, <DisassemblerInsn "mov" for 0x40344f>, <DisassemblerInsn "mov" for 0x403457>, <DisassemblerInsn "mov" for 0x40345f>, <DisassemblerInsn "mov" for 0x403467>, <DisassemblerInsn "mov" for 0x40346e>, <DisassemblerInsn "mov" for 0x403476>, <DisassemblerInsn "mov" for 0x40347e>, <DisassemblerInsn "mov" for 0x403486>, <DisassemblerInsn "mov" for 0x40348e>, <DisassemblerInsn "mov" for 0x403496>, <DisassemblerInsn "mov" for 0x40349e>, <DisassemblerInsn "mov" for 0x4034a6>, <DisassemblerInsn "mov" for 0x4034ae>, <DisassemblerInsn "mov" for 0x4034b3>, <DisassemblerInsn "mov" for 0x4034b6>, <DisassemblerInsn "shl" for 0x4034b8>, <DisassemblerInsn "mov" for 0x4034ba>, <DisassemblerInsn "cmp" for 0x4034c1>, <DisassemblerInsn "je" for 0x4034c4>]'}, {'block_Idx': 338, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023fa>, <DisassemblerInsn "mov" for 0x402401>, <DisassemblerInsn "mov" for 0x402408>, <DisassemblerInsn "mov" for 0x402410>, <DisassemblerInsn "add" for 0x402412>, <DisassemblerInsn "mov" for 0x402415>, <DisassemblerInsn "mov" for 0x402417>, <DisassemblerInsn "mov" for 0x40241a>, <DisassemblerInsn "sub" for 0x402421>, <DisassemblerInsn "mov" for 0x402423>, <DisassemblerInsn "cmp" for 0x40242a>, <DisassemblerInsn "jbe" for 0x40242d>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403245>, <DisassemblerInsn "mov" for 0x40324d>, <DisassemblerInsn "mov" for 0x403254>, <DisassemblerInsn "mov" for 0x40325c>, <DisassemblerInsn "mov" for 0x40325e>, <DisassemblerInsn "mov" for 0x403265>, <DisassemblerInsn "sub" for 0x403267>, <DisassemblerInsn "mov" for 0x40326a>, <DisassemblerInsn "cmovge" for 0x40326f>, <DisassemblerInsn "mov" for 0x403272>, <DisassemblerInsn "mov" for 0x403274>, <DisassemblerInsn "mov" for 0x40327c>, <DisassemblerInsn "add" for 0x40327f>, <DisassemblerInsn "and" for 0x403283>, <DisassemblerInsn "mov" for 0x403287>, <DisassemblerInsn "xor" for 0x40328f>, <DisassemblerInsn "cmp" for 0x403291>, <DisassemblerInsn "mov" for 0x403295>, <DisassemblerInsn "mov" for 0x40329d>, <DisassemblerInsn "jb" for 0x4032a5>]'}, {'block_Idx': 165, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403ad0>, <DisassemblerInsn "cmp" for 0x403ad7>, <DisassemblerInsn "jne" for 0x403ada>]'}, {'block_Idx': 442, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x402c25>, <DisassemblerInsn "jl" for 0x402c28>]'}, {'block_Idx': 259, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fe9>, <DisassemblerInsn "mov" for 0x401ff0>, <DisassemblerInsn "mov" for 0x401ff7>, <DisassemblerInsn "mov" for 0x401ffe>, <DisassemblerInsn "xor" for 0x402001>, <DisassemblerInsn "sub" for 0x402003>, <DisassemblerInsn "shr" for 0x402006>, <DisassemblerInsn "mov" for 0x402008>, <DisassemblerInsn "add" for 0x402010>, <DisassemblerInsn "mov" for 0x402012>, <DisassemblerInsn "mov" for 0x402014>, <DisassemblerInsn "jmp" for 0x40201b>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403d0d>, <DisassemblerInsn "cmp" for 0x403d14>, <DisassemblerInsn "jne" for 0x403d17>]'}, {'block_Idx': 392, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402e5e>, <DisassemblerInsn "mov" for 0x402e66>, <DisassemblerInsn "mov" for 0x402e6e>, <DisassemblerInsn "mov" for 0x402e75>, <DisassemblerInsn "mov" for 0x402e7d>, <DisassemblerInsn "mov" for 0x402e85>, <DisassemblerInsn "add" for 0x402e8d>, <DisassemblerInsn "mov" for 0x402e91>, <DisassemblerInsn "mov" for 0x402e98>, <DisassemblerInsn "add" for 0x402e9a>, <DisassemblerInsn "mov" for 0x402e9d>, <DisassemblerInsn "mov" for 0x402ea4>, <DisassemblerInsn "add" for 0x402ea8>, <DisassemblerInsn "mov" for 0x402eac>, <DisassemblerInsn "add" for 0x402eb4>, <DisassemblerInsn "mov" for 0x402eb8>, <DisassemblerInsn "cmp" for 0x402ec0>, <DisassemblerInsn "mov" for 0x402ec3>, <DisassemblerInsn "mov" for 0x402ecb>, <DisassemblerInsn "mov" for 0x402ed2>, <DisassemblerInsn "mov" for 0x402ed9>, <DisassemblerInsn "jne" for 0x402ee1>]'}, {'block_Idx': 240, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d78>, <DisassemblerInsn "cmp" for 0x401d80>, <DisassemblerInsn "jle" for 0x401d83>]'}, {'block_Idx': 213, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401dd7>, <DisassemblerInsn "mov" for 0x401dde>, <DisassemblerInsn "mov" for 0x401de5>, <DisassemblerInsn "mov" for 0x401ded>, <DisassemblerInsn "sar" for 0x401def>, <DisassemblerInsn "movsxd" for 0x401df2>, <DisassemblerInsn "mov" for 0x401df5>, <DisassemblerInsn "ror" for 0x401df8>, <DisassemblerInsn "ror" for 0x401dfc>, <DisassemblerInsn "ror" for 0x401dff>, <DisassemblerInsn "and" for 0x401e03>, <DisassemblerInsn "mov" for 0x401e06>, <DisassemblerInsn "shl" for 0x401e0d>, <DisassemblerInsn "mov" for 0x401e0f>, <DisassemblerInsn "cmp" for 0x401e16>, <DisassemblerInsn "jge" for 0x401e19>]'}, {'block_Idx': 362, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c53>, <DisassemblerInsn "mov" for 0x402c5b>, <DisassemblerInsn "mov" for 0x402c63>, <DisassemblerInsn "xor" for 0x402c6a>, <DisassemblerInsn "cmp" for 0x402c6c>, <DisassemblerInsn "mov" for 0x402c70>, <DisassemblerInsn "mov" for 0x402c78>, <DisassemblerInsn "mov" for 0x402c7f>, <DisassemblerInsn "je" for 0x402c87>]'}, {'block_Idx': 206, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4032ab>, <DisassemblerInsn "mov" for 0x4032b3>, <DisassemblerInsn "and" for 0x4032bb>, <DisassemblerInsn "mov" for 0x4032c1>, <DisassemblerInsn "xor" for 0x4032c9>, <DisassemblerInsn "mov" for 0x4032cb>, <DisassemblerInsn "mov" for 0x4032ce>, <DisassemblerInsn "mov" for 0x4032d6>, <DisassemblerInsn "mov" for 0x4032de>, <DisassemblerInsn "mov" for 0x4032e6>, <DisassemblerInsn "mov" for 0x4032ee>, <DisassemblerInsn "mov" for 0x4032f6>, <DisassemblerInsn "mov" for 0x4032fe>, <DisassemblerInsn "mov" for 0x403306>, <DisassemblerInsn "mov" for 0x40330d>, <DisassemblerInsn "mov" for 0x403315>, <DisassemblerInsn "mov" for 0x40331d>, <DisassemblerInsn "mov" for 0x403325>, <DisassemblerInsn "mov" for 0x40332a>, <DisassemblerInsn "shl" for 0x40332e>, <DisassemblerInsn "mov" for 0x403331>, <DisassemblerInsn "mov" for 0x403338>, <DisassemblerInsn "mov" for 0x403340>, <DisassemblerInsn "mov" for 0x403344>, <DisassemblerInsn "or" for 0x403347>, <DisassemblerInsn "mov" for 0x40334b>, <DisassemblerInsn "mov" for 0x403353>, <DisassemblerInsn "mov" for 0x403358>, <DisassemblerInsn "shl" for 0x40335c>, <DisassemblerInsn "mov" for 0x40335f>, <DisassemblerInsn "mov" for 0x403366>, <DisassemblerInsn "mov" for 0x40336e>, <DisassemblerInsn "mov" for 0x403373>, <DisassemblerInsn "or" for 0x403376>, <DisassemblerInsn "mov" for 0x40337a>, <DisassemblerInsn "mov" for 0x403382>, <DisassemblerInsn "mov" for 0x403387>, <DisassemblerInsn "shl" for 0x40338b>, <DisassemblerInsn "mov" for 0x40338e>, <DisassemblerInsn "mov" for 0x403395>, <DisassemblerInsn "mov" for 0x40339d>, <DisassemblerInsn "or" for 0x4033a2>, <DisassemblerInsn "mov" for 0x4033a6>, <DisassemblerInsn "mov" for 0x4033ae>, <DisassemblerInsn "mov" for 0x4033b3>, <DisassemblerInsn "shl" for 0x4033b7>, <DisassemblerInsn "mov" for 0x4033b9>, <DisassemblerInsn "mov" for 0x4033c1>, <DisassemblerInsn "mov" for 0x4033c8>, <DisassemblerInsn "mov" for 0x4033cc>, <DisassemblerInsn "add" for 0x4033cf>, <DisassemblerInsn "mov" for 0x4033d3>, <DisassemblerInsn "mov" for 0x4033db>, <DisassemblerInsn "add" for 0x4033e0>, <DisassemblerInsn "mov" for 0x4033e4>, <DisassemblerInsn "add" for 0x4033ec>, <DisassemblerInsn "mov" for 0x4033f0>, <DisassemblerInsn "cmp" for 0x4033f8>, <DisassemblerInsn "mov" for 0x4033fb>, <DisassemblerInsn "mov" for 0x4033fe>, <DisassemblerInsn "mov" for 0x403406>, <DisassemblerInsn "mov" for 0x403409>, <DisassemblerInsn "mov" for 0x403411>, <DisassemblerInsn "mov" for 0x403419>, <DisassemblerInsn "mov" for 0x40341c>, <DisassemblerInsn "mov" for 0x403424>, <DisassemblerInsn "mov" for 0x40342c>, <DisassemblerInsn "je" for 0x403434>]'}, {'block_Idx': 49, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fac>, <DisassemblerInsn "cmp" for 0x400fb3>, <DisassemblerInsn "jle" for 0x400fb6>]'}, {'block_Idx': 348, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40273e>, <DisassemblerInsn "mov" for 0x402745>, <DisassemblerInsn "mov" for 0x40274c>, <DisassemblerInsn "mov" for 0x40274e>, <DisassemblerInsn "mov" for 0x402750>, <DisassemblerInsn "add" for 0x402753>, <DisassemblerInsn "mov" for 0x402757>, <DisassemblerInsn "add" for 0x40275f>, <DisassemblerInsn "and" for 0x402763>, <DisassemblerInsn "mov" for 0x402767>, <DisassemblerInsn "mov" for 0x40276f>, <DisassemblerInsn "cmp" for 0x402774>, <DisassemblerInsn "mov" for 0x402778>, <DisassemblerInsn "mov" for 0x402780>, <DisassemblerInsn "jb" for 0x402787>]'}, {'block_Idx': 209, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403e4c>, <DisassemblerInsn "mov" for 0x403e51>, <DisassemblerInsn "mov" for 0x403e55>, <DisassemblerInsn "mov" for 0x403e5a>, <DisassemblerInsn "mov" for 0x403e5e>, <DisassemblerInsn "mov" for 0x403e62>, <DisassemblerInsn "mov" for 0x403e67>, <DisassemblerInsn "shl" for 0x403e6b>, <DisassemblerInsn "mov" for 0x403e6d>, <DisassemblerInsn "mov" for 0x403e6f>, <DisassemblerInsn "mov" for 0x403e72>, <DisassemblerInsn "add" for 0x403e75>, <DisassemblerInsn "mov" for 0x403e79>, <DisassemblerInsn "mov" for 0x403e7d>, <DisassemblerInsn "mov" for 0x403e81>, <DisassemblerInsn "mov" for 0x403e86>, <DisassemblerInsn "mov" for 0x403e8b>, <DisassemblerInsn "mov" for 0x403e90>, <DisassemblerInsn "mov" for 0x403e94>, <DisassemblerInsn "mov" for 0x403e99>, <DisassemblerInsn "add" for 0x403e9e>, <DisassemblerInsn "movsxd" for 0x403ea2>, <DisassemblerInsn "cmp" for 0x403ea5>, <DisassemblerInsn "mov" for 0x403ea8>, <DisassemblerInsn "mov" for 0x403eaa>, <DisassemblerInsn "mov" for 0x403eae>, <DisassemblerInsn "mov" for 0x403eb3>, <DisassemblerInsn "mov" for 0x403eb8>, <DisassemblerInsn "mov" for 0x403ebd>, <DisassemblerInsn "jl" for 0x403ec4>]'}, {'block_Idx': 241, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402153>, <DisassemblerInsn "mov" for 0x40215b>, <DisassemblerInsn "mov" for 0x402163>, <DisassemblerInsn "mov" for 0x40216b>, <DisassemblerInsn "and" for 0x402172>, <DisassemblerInsn "mov" for 0x402175>, <DisassemblerInsn "mov" for 0x40217c>, <DisassemblerInsn "mov" for 0x40217e>, <DisassemblerInsn "mov" for 0x402185>, <DisassemblerInsn "mov" for 0x40218a>, <DisassemblerInsn "cmp" for 0x402192>, <DisassemblerInsn "je" for 0x402195>]'}, {'block_Idx': 86, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015b4>, <DisassemblerInsn "test" for 0x4015bb>, <DisassemblerInsn "je" for 0x4015bd>]'}, {'block_Idx': 85, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4015af>]'}, {'block_Idx': 99, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015fd>, <DisassemblerInsn "mov" for 0x401605>, <DisassemblerInsn "mov" for 0x40160c>, <DisassemblerInsn "mov" for 0x401614>, <DisassemblerInsn "shr" for 0x40161c>, <DisassemblerInsn "and" for 0x401620>, <DisassemblerInsn "mov" for 0x401627>, <DisassemblerInsn "ror" for 0x40162a>, <DisassemblerInsn "ror" for 0x40162e>, <DisassemblerInsn "ror" for 0x401631>, <DisassemblerInsn "shr" for 0x401635>, <DisassemblerInsn "add" for 0x401638>, <DisassemblerInsn "mov" for 0x40163b>, <DisassemblerInsn "add" for 0x40163d>, <DisassemblerInsn "mov" for 0x401640>, <DisassemblerInsn "mov" for 0x401647>, <DisassemblerInsn "jmp" for 0x40164e>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403fdf>, <DisassemblerInsn "add" for 0x403fe6>, <DisassemblerInsn "pop" for 0x403fed>, <DisassemblerInsn "ret" for 0x403fee>]'}, {'block_Idx': 253, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f87>, <DisassemblerInsn "mov" for 0x401f8f>, <DisassemblerInsn "mov" for 0x401f96>, <DisassemblerInsn "mov" for 0x401f9d>, <DisassemblerInsn "mov" for 0x401fa5>, <DisassemblerInsn "mov" for 0x401fad>, <DisassemblerInsn "mov" for 0x401fb4>, <DisassemblerInsn "mov" for 0x401fbb>, <DisassemblerInsn "sar" for 0x401fbd>, <DisassemblerInsn "movsxd" for 0x401fc0>, <DisassemblerInsn "mov" for 0x401fc3>, <DisassemblerInsn "ror" for 0x401fc6>, <DisassemblerInsn "ror" for 0x401fca>, <DisassemblerInsn "ror" for 0x401fcd>, <DisassemblerInsn "and" for 0x401fd1>, <DisassemblerInsn "mov" for 0x401fd4>, <DisassemblerInsn "shl" for 0x401fdb>, <DisassemblerInsn "mov" for 0x401fdd>, <DisassemblerInsn "cmp" for 0x401fe4>, <DisassemblerInsn "jge" for 0x401fe7>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403fa8>, <DisassemblerInsn "mov" for 0x403faf>, <DisassemblerInsn "mov" for 0x403fb3>, <DisassemblerInsn "mov" for 0x403fb7>, <DisassemblerInsn "mov" for 0x403fbb>, <DisassemblerInsn "mov" for 0x403fc3>, <DisassemblerInsn "add" for 0x403fc6>, <DisassemblerInsn "mov" for 0x403fcd>, <DisassemblerInsn "sub" for 0x403fd4>, <DisassemblerInsn "mov" for 0x403fd6>, <DisassemblerInsn "mov" for 0x403fd8>, <DisassemblerInsn "mov" for 0x403fdf>, <DisassemblerInsn "add" for 0x403fe6>, <DisassemblerInsn "pop" for 0x403fed>, <DisassemblerInsn "ret" for 0x403fee>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012ad>, <DisassemblerInsn "and" for 0x4012b4>, <DisassemblerInsn "cmp" for 0x4012b7>, <DisassemblerInsn "je" for 0x4012ba>]'}, {'block_Idx': 179, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b0d>, <DisassemblerInsn "mov" for 0x401b15>, <DisassemblerInsn "mov" for 0x401b1d>, <DisassemblerInsn "mov" for 0x401b24>, <DisassemblerInsn "mov" for 0x401b2b>, <DisassemblerInsn "mov" for 0x401b2d>, <DisassemblerInsn "mov" for 0x401b34>, <DisassemblerInsn "mov" for 0x401b37>, <DisassemblerInsn "mov" for 0x401b3f>, <DisassemblerInsn "sar" for 0x401b41>, <DisassemblerInsn "movsxd" for 0x401b44>, <DisassemblerInsn "mov" for 0x401b47>, <DisassemblerInsn "mov" for 0x401b4b>, <DisassemblerInsn "and" for 0x401b4d>, <DisassemblerInsn "movzx" for 0x401b50>, <DisassemblerInsn "mov" for 0x401b54>, <DisassemblerInsn "add" for 0x401b5b>, <DisassemblerInsn "mov" for 0x401b5e>, <DisassemblerInsn "mov" for 0x401b65>, <DisassemblerInsn "mov" for 0x401b67>, <DisassemblerInsn "shr" for 0x401b6c>, <DisassemblerInsn "mov" for 0x401b6e>, <DisassemblerInsn "and" for 0x401b75>, <DisassemblerInsn "cmp" for 0x401b77>, <DisassemblerInsn "je" for 0x401b7a>]'}, {'block_Idx': 115, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017aa>, <DisassemblerInsn "cmp" for 0x4017b1>, <DisassemblerInsn "jge" for 0x4017b4>]'}, {'block_Idx': 424, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402bc9>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403b76>, <DisassemblerInsn "mov" for 0x403b7e>, <DisassemblerInsn "mov" for 0x403b86>, <DisassemblerInsn "mov" for 0x403b8e>, <DisassemblerInsn "mov" for 0x403b96>, <DisassemblerInsn "mov" for 0x403b9e>, <DisassemblerInsn "mov" for 0x403ba6>, <DisassemblerInsn "mov" for 0x403bae>, <DisassemblerInsn "mov" for 0x403bb6>, <DisassemblerInsn "mov" for 0x403bbe>, <DisassemblerInsn "mov" for 0x403bc6>, <DisassemblerInsn "mov" for 0x403bce>, <DisassemblerInsn "mov" for 0x403bd6>, <DisassemblerInsn "mov" for 0x403bd9>, <DisassemblerInsn "mov" for 0x403bdc>, <DisassemblerInsn "mov" for 0x403be3>, <DisassemblerInsn "add" for 0x403be5>, <DisassemblerInsn "mov" for 0x403be7>, <DisassemblerInsn "mov" for 0x403be9>, <DisassemblerInsn "shl" for 0x403bf0>, <DisassemblerInsn "mov" for 0x403bf2>, <DisassemblerInsn "cmp" for 0x403bf9>, <DisassemblerInsn "je" for 0x403bfc>]'}, {'block_Idx': 156, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4030ac>, <DisassemblerInsn "mov" for 0x4030b4>, <DisassemblerInsn "mov" for 0x4030b6>, <DisassemblerInsn "jmp" for 0x4030bd>]'}, {'block_Idx': 120, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017e4>, <DisassemblerInsn "sub" for 0x4017eb>, <DisassemblerInsn "je" for 0x4017ee>]'}, {'block_Idx': 445, 'blockInsts': '[<DisassemblerInsn "mov" for 0x404f57>, <DisassemblerInsn "lea" for 0x404f5d>, <DisassemblerInsn "pop" for 0x404f61>, <DisassemblerInsn "pop" for 0x404f62>, <DisassemblerInsn "ret" for 0x404f63>]'}, {'block_Idx': 233, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f1d>, <DisassemblerInsn "mov" for 0x401f25>, <DisassemblerInsn "mov" for 0x401f2d>, <DisassemblerInsn "mov" for 0x401f32>, <DisassemblerInsn "xor" for 0x401f3a>, <DisassemblerInsn "mov" for 0x401f3c>, <DisassemblerInsn "mov" for 0x401f44>, <DisassemblerInsn "mov" for 0x401f4c>, <DisassemblerInsn "mov" for 0x401f54>, <DisassemblerInsn "mov" for 0x401f5c>, <DisassemblerInsn "mov" for 0x401f63>, <DisassemblerInsn "add" for 0x401f66>, <DisassemblerInsn "mov" for 0x401f6a>, <DisassemblerInsn "movsxd" for 0x401f72>, <DisassemblerInsn "cmp" for 0x401f75>, <DisassemblerInsn "mov" for 0x401f78>, <DisassemblerInsn "jl" for 0x401f80>]'}, {'block_Idx': 161, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f0a>, <DisassemblerInsn "mov" for 0x400f12>, <DisassemblerInsn "mov" for 0x400f1a>, <DisassemblerInsn "mov" for 0x400f1d>, <DisassemblerInsn "mov" for 0x400f25>, <DisassemblerInsn "add" for 0x400f2a>, <DisassemblerInsn "mov" for 0x400f2e>, <DisassemblerInsn "movsxd" for 0x400f36>, <DisassemblerInsn "cmp" for 0x400f39>, <DisassemblerInsn "mov" for 0x400f3c>, <DisassemblerInsn "jl" for 0x400f44>]'}, {'block_Idx': 117, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400de6>, <DisassemblerInsn "mov" for 0x400dee>, <DisassemblerInsn "mov" for 0x400df0>, <DisassemblerInsn "cmp" for 0x400df7>, <DisassemblerInsn "jne" for 0x400dfa>]'}, {'block_Idx': 381, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4026e2>, <DisassemblerInsn "mov" for 0x4026e9>, <DisassemblerInsn "mov" for 0x4026f0>, <DisassemblerInsn "and" for 0x4026f8>, <DisassemblerInsn "mov" for 0x4026fc>, <DisassemblerInsn "mov" for 0x402704>, <DisassemblerInsn "xor" for 0x402709>, <DisassemblerInsn "mov" for 0x40270b>, <DisassemblerInsn "mov" for 0x402713>, <DisassemblerInsn "mov" for 0x40271a>, <DisassemblerInsn "mov" for 0x402721>, <DisassemblerInsn "jmp" for 0x402729>]'}, {'block_Idx': 236, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f71>, <DisassemblerInsn "mov" for 0x402f79>, <DisassemblerInsn "add" for 0x402f81>, <DisassemblerInsn "mov" for 0x402f85>, <DisassemblerInsn "mov" for 0x402f8d>, <DisassemblerInsn "mov" for 0x402f8f>, <DisassemblerInsn "movsxd" for 0x402f96>, <DisassemblerInsn "cmp" for 0x402f99>, <DisassemblerInsn "jge" for 0x402f9c>]'}, {'block_Idx': 135, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4017fe>]'}, {'block_Idx': 405, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d47>, <DisassemblerInsn "mov" for 0x402d4f>, <DisassemblerInsn "mov" for 0x402d57>, <DisassemblerInsn "mov" for 0x402d5e>, <DisassemblerInsn "mov" for 0x402d65>, <DisassemblerInsn "add" for 0x402d6c>, <DisassemblerInsn "add" for 0x402d6f>, <DisassemblerInsn "add" for 0x402d71>, <DisassemblerInsn "mov" for 0x402d73>, <DisassemblerInsn "jmp" for 0x402d76>]'}, {'block_Idx': 72, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401492>, <DisassemblerInsn "mov" for 0x401499>, <DisassemblerInsn "mov" for 0x4014a0>, <DisassemblerInsn "mov" for 0x4014a5>, <DisassemblerInsn "shr" for 0x4014a7>, <DisassemblerInsn "mov" for 0x4014a9>, <DisassemblerInsn "and" for 0x4014ab>, <DisassemblerInsn "mov" for 0x4014ad>, <DisassemblerInsn "mov" for 0x4014af>, <DisassemblerInsn "mov" for 0x4014b4>, <DisassemblerInsn "mov" for 0x4014bc>, <DisassemblerInsn "mov" for 0x4014c4>, <DisassemblerInsn "mov" for 0x4014cb>, <DisassemblerInsn "mov" for 0x4014d3>, <DisassemblerInsn "mov" for 0x4014db>, <DisassemblerInsn "mov" for 0x4014e2>, <DisassemblerInsn "mov" for 0x4014e9>, <DisassemblerInsn "mov" for 0x4014f1>, <DisassemblerInsn "cmp" for 0x4014f9>, <DisassemblerInsn "jle" for 0x4014fc>]'}, {'block_Idx': 37, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a06>, <DisassemblerInsn "mov" for 0x400a0e>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "mov" for 0x400a1e>, <DisassemblerInsn "mov" for 0x400a26>, <DisassemblerInsn "mov" for 0x400a2d>, <DisassemblerInsn "mov" for 0x400a34>, <DisassemblerInsn "add" for 0x400a36>, <DisassemblerInsn "mov" for 0x400a39>, <DisassemblerInsn "add" for 0x400a3b>, <DisassemblerInsn "mov" for 0x400a3d>, <DisassemblerInsn "cmp" for 0x400a3f>, <DisassemblerInsn "setl" for 0x400a41>, <DisassemblerInsn "cmp" for 0x400a45>, <DisassemblerInsn "setne" for 0x400a48>, <DisassemblerInsn "and" for 0x400a4c>, <DisassemblerInsn "test" for 0x400a4f>, <DisassemblerInsn "mov" for 0x400a53>, <DisassemblerInsn "mov" for 0x400a55>, <DisassemblerInsn "mov" for 0x400a5c>, <DisassemblerInsn "mov" for 0x400a63>, <DisassemblerInsn "mov" for 0x400a6b>, <DisassemblerInsn "jne" for 0x400a72>]'}, {'block_Idx': 182, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4038a5>, <DisassemblerInsn "mov" for 0x4038ad>, <DisassemblerInsn "mov" for 0x4038b5>, <DisassemblerInsn "mov" for 0x4038bc>, <DisassemblerInsn "mov" for 0x4038c4>, <DisassemblerInsn "mov" for 0x4038c8>, <DisassemblerInsn "mov" for 0x4038d0>, <DisassemblerInsn "mov" for 0x4038d4>, <DisassemblerInsn "xor" for 0x4038dc>, <DisassemblerInsn "mov" for 0x4038de>, <DisassemblerInsn "mov" for 0x4038e5>, <DisassemblerInsn "mov" for 0x4038ed>, <DisassemblerInsn "mov" for 0x4038f5>, <DisassemblerInsn "jmp" for 0x4038fd>]'}, {'block_Idx': 105, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401729>, <DisassemblerInsn "mov" for 0x401730>, <DisassemblerInsn "mov" for 0x401737>, <DisassemblerInsn "mov" for 0x40173e>, <DisassemblerInsn "mov" for 0x401746>, <DisassemblerInsn "add" for 0x40174e>, <DisassemblerInsn "mov" for 0x401752>, <DisassemblerInsn "mov" for 0x40175a>, <DisassemblerInsn "mov" for 0x40175f>, <DisassemblerInsn "test" for 0x401764>, <DisassemblerInsn "cmovne" for 0x401768>, <DisassemblerInsn "imul" for 0x40176b>, <DisassemblerInsn "imul" for 0x40176e>, <DisassemblerInsn "cmp" for 0x401771>, <DisassemblerInsn "jg" for 0x401773>]'}, {'block_Idx': 383, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024bf>, <DisassemblerInsn "cmp" for 0x4024c6>, <DisassemblerInsn "jle" for 0x4024c9>]'}, {'block_Idx': 174, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403146>, <DisassemblerInsn "mov" for 0x40314e>, <DisassemblerInsn "mov" for 0x403155>, <DisassemblerInsn "mov" for 0x40315c>, <DisassemblerInsn "mov" for 0x403163>, <DisassemblerInsn "mov" for 0x40316b>, <DisassemblerInsn "mov" for 0x403173>, <DisassemblerInsn "mov" for 0x40317b>, <DisassemblerInsn "mov" for 0x403183>, <DisassemblerInsn "mov" for 0x40318b>, <DisassemblerInsn "mov" for 0x403193>, <DisassemblerInsn "mov" for 0x40319a>, <DisassemblerInsn "mov" for 0x4031a1>, <DisassemblerInsn "cmp" for 0x4031a9>, <DisassemblerInsn "mov" for 0x4031ac>, <DisassemblerInsn "mov" for 0x4031b4>, <DisassemblerInsn "mov" for 0x4031bb>, <DisassemblerInsn "mov" for 0x4031c2>, <DisassemblerInsn "mov" for 0x4031c9>, <DisassemblerInsn "mov" for 0x4031d1>, <DisassemblerInsn "jle" for 0x4031d9>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400838>, <DisassemblerInsn "mov" for 0x40083f>, <DisassemblerInsn "mov" for 0x400847>, <DisassemblerInsn "add" for 0x40084a>, <DisassemblerInsn "mov" for 0x400851>, <DisassemblerInsn "mov" for 0x400859>, <DisassemblerInsn "mov" for 0x40085f>, <DisassemblerInsn "xor" for 0x400866>, <DisassemblerInsn "mov" for 0x400869>, <DisassemblerInsn "cmp" for 0x40086e>, <DisassemblerInsn "mov" for 0x400870>, <DisassemblerInsn "ja" for 0x400877>]'}, {'block_Idx': 31, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403f4e>, <DisassemblerInsn "mov" for 0x403f56>, <DisassemblerInsn "mov" for 0x403f60>, <DisassemblerInsn "mov" for 0x403f6a>, <DisassemblerInsn "mov" for 0x403f6f>, <DisassemblerInsn "jmp" for 0x403f76>]'}, {'block_Idx': 68, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40112c>]'}, {'block_Idx': 349, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402675>, <DisassemblerInsn "cmp" for 0x40267c>, <DisassemblerInsn "jle" for 0x40267f>]'}, {'block_Idx': 218, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403705>, <DisassemblerInsn "mov" for 0x40370d>, <DisassemblerInsn "mov" for 0x403714>, <DisassemblerInsn "mov" for 0x40371b>, <DisassemblerInsn "mov" for 0x403723>, <DisassemblerInsn "mov" for 0x40372b>, <DisassemblerInsn "mov" for 0x403733>, <DisassemblerInsn "mov" for 0x40373b>, <DisassemblerInsn "mov" for 0x403742>, <DisassemblerInsn "mov" for 0x40374a>, <DisassemblerInsn "mov" for 0x403752>, <DisassemblerInsn "mov" for 0x403757>, <DisassemblerInsn "shl" for 0x40375b>, <DisassemblerInsn "mov" for 0x40375e>, <DisassemblerInsn "mov" for 0x403766>, <DisassemblerInsn "mov" for 0x403769>, <DisassemblerInsn "mov" for 0x40376d>, <DisassemblerInsn "add" for 0x403770>, <DisassemblerInsn "mov" for 0x403774>, <DisassemblerInsn "mov" for 0x40377c>, <DisassemblerInsn "add" for 0x403780>, <DisassemblerInsn "mov" for 0x403784>, <DisassemblerInsn "add" for 0x40378c>, <DisassemblerInsn "mov" for 0x403790>, <DisassemblerInsn "cmp" for 0x403798>, <DisassemblerInsn "mov" for 0x40379b>, <DisassemblerInsn "mov" for 0x4037a3>, <DisassemblerInsn "mov" for 0x4037a6>, <DisassemblerInsn "mov" for 0x4037ae>, <DisassemblerInsn "mov" for 0x4037b6>, <DisassemblerInsn "mov" for 0x4037bd>, <DisassemblerInsn "mov" for 0x4037bf>, <DisassemblerInsn "mov" for 0x4037c6>, <DisassemblerInsn "mov" for 0x4037c8>, <DisassemblerInsn "mov" for 0x4037cf>, <DisassemblerInsn "mov" for 0x4037d6>, <DisassemblerInsn "mov" for 0x4037de>, <DisassemblerInsn "jne" for 0x4037e6>]'}, {'block_Idx': 379, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40287b>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403f25>, <DisassemblerInsn "mov" for 0x403f2d>, <DisassemblerInsn "mov" for 0x403f34>, <DisassemblerInsn "mov" for 0x403f38>, <DisassemblerInsn "sub" for 0x403f3c>, <DisassemblerInsn "xor" for 0x403f3e>, <DisassemblerInsn "lea" for 0x403f40>, <DisassemblerInsn "mov" for 0x403f47>, <DisassemblerInsn "call" for 0x403f49>]'}, {'block_Idx': 178, 'blockInsts': '[<DisassemblerInsn "lea" for 0x403b57>, <DisassemblerInsn "lea" for 0x403b5e>, <DisassemblerInsn "mov" for 0x403b65>, <DisassemblerInsn "lea" for 0x403b6a>, <DisassemblerInsn "call" for 0x403b71>]'}, {'block_Idx': 153, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018f6>, <DisassemblerInsn "mov" for 0x4018fd>, <DisassemblerInsn "xor" for 0x401905>, <DisassemblerInsn "lea" for 0x401907>, <DisassemblerInsn "mov" for 0x40190e>, <DisassemblerInsn "call" for 0x401910>]'}, {'block_Idx': 121, 'blockInsts': '[<DisassemblerInsn "lea" for 0x400dfc>, <DisassemblerInsn "lea" for 0x400e03>, <DisassemblerInsn "mov" for 0x400e0a>, <DisassemblerInsn "lea" for 0x400e0f>, <DisassemblerInsn "call" for 0x400e16>]'}, {'block_Idx': 243, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f9e>, <DisassemblerInsn "mov" for 0x402fa6>, <DisassemblerInsn "mov" for 0x402fae>, <DisassemblerInsn "mov" for 0x402fb6>, <DisassemblerInsn "mov" for 0x402fb8>, <DisassemblerInsn "mov" for 0x402fba>, <DisassemblerInsn "mov" for 0x402fc1>, <DisassemblerInsn "mov" for 0x402fc8>, <DisassemblerInsn "jmp" for 0x402fd0>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400975>, <DisassemblerInsn "mov" for 0x40097c>, <DisassemblerInsn "mov" for 0x400983>, <DisassemblerInsn "mov" for 0x40098b>, <DisassemblerInsn "mov" for 0x400992>, <DisassemblerInsn "mov" for 0x400994>, <DisassemblerInsn "add" for 0x400997>, <DisassemblerInsn "mov" for 0x40099a>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "call" for 0x40099e>]'}, {'block_Idx': 380, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402e16>, <DisassemblerInsn "mov" for 0x402e1e>, <DisassemblerInsn "mov" for 0x402e26>, <DisassemblerInsn "mov" for 0x402e2d>, <DisassemblerInsn "xor" for 0x402e34>, <DisassemblerInsn "cmp" for 0x402e36>, <DisassemblerInsn "mov" for 0x402e3a>, <DisassemblerInsn "mov" for 0x402e42>, <DisassemblerInsn "mov" for 0x402e49>, <DisassemblerInsn "mov" for 0x402e50>, <DisassemblerInsn "je" for 0x402e58>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40072a>, <DisassemblerInsn "mov" for 0x400732>, <DisassemblerInsn "mov" for 0x40073a>, <DisassemblerInsn "mov" for 0x400741>, <DisassemblerInsn "mov" for 0x400744>, <DisassemblerInsn "mov" for 0x40074c>, <DisassemblerInsn "mov" for 0x400753>, <DisassemblerInsn "xor" for 0x400755>, <DisassemblerInsn "cmp" for 0x400757>, <DisassemblerInsn "mov" for 0x40075a>, <DisassemblerInsn "mov" for 0x400761>, <DisassemblerInsn "mov" for 0x400768>, <DisassemblerInsn "mov" for 0x40076f>, <DisassemblerInsn "je" for 0x400777>]'}, {'block_Idx': 384, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402bce>, <DisassemblerInsn "mov" for 0x402bd5>, <DisassemblerInsn "mov" for 0x402bdd>, <DisassemblerInsn "xor" for 0x402be0>, <DisassemblerInsn "lea" for 0x402be2>, <DisassemblerInsn "mov" for 0x402be9>, <DisassemblerInsn "call" for 0x402beb>]'}, {'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400933>, <DisassemblerInsn "mov" for 0x40093a>, <DisassemblerInsn "mov" for 0x400941>, <DisassemblerInsn "mov" for 0x400948>, <DisassemblerInsn "mov" for 0x40094f>, <DisassemblerInsn "mov" for 0x400956>, <DisassemblerInsn "mov" for 0x40095d>, <DisassemblerInsn "add" for 0x40095f>, <DisassemblerInsn "add" for 0x400961>, <DisassemblerInsn "cmp" for 0x400963>, <DisassemblerInsn "mov" for 0x400965>, <DisassemblerInsn "mov" for 0x40096c>, <DisassemblerInsn "jbe" for 0x400973>]'}, {'block_Idx': 39, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fcd>, <DisassemblerInsn "mov" for 0x400fd4>, <DisassemblerInsn "shr" for 0x400fd9>, <DisassemblerInsn "mov" for 0x400fdb>, <DisassemblerInsn "and" for 0x400fe2>, <DisassemblerInsn "cmp" for 0x400fe4>, <DisassemblerInsn "jne" for 0x400fe7>]'}, {'block_Idx': 53, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401074>, <DisassemblerInsn "mov" for 0x40107b>, <DisassemblerInsn "mov" for 0x401083>, <DisassemblerInsn "mov" for 0x401086>, <DisassemblerInsn "mov" for 0x40108e>, <DisassemblerInsn "and" for 0x401090>, <DisassemblerInsn "mov" for 0x401093>, <DisassemblerInsn "mov" for 0x40109a>, <DisassemblerInsn "mov" for 0x4010a1>, <DisassemblerInsn "mov" for 0x4010a8>, <DisassemblerInsn "mov" for 0x4010b0>, <DisassemblerInsn "mov" for 0x4010b7>, <DisassemblerInsn "sar" for 0x4010be>, <DisassemblerInsn "movsxd" for 0x4010c1>, <DisassemblerInsn "mov" for 0x4010c4>, <DisassemblerInsn "ror" for 0x4010c7>, <DisassemblerInsn "ror" for 0x4010cb>, <DisassemblerInsn "ror" for 0x4010ce>, <DisassemblerInsn "shl" for 0x4010d2>, <DisassemblerInsn "shr" for 0x4010d4>, <DisassemblerInsn "and" for 0x4010d7>, <DisassemblerInsn "cmp" for 0x4010dc>, <DisassemblerInsn "je" for 0x4010e1>]'}, {'block_Idx': 26, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401131>, <DisassemblerInsn "mov" for 0x401139>, <DisassemblerInsn "mov" for 0x401141>, <DisassemblerInsn "mov" for 0x401148>, <DisassemblerInsn "shr" for 0x40114a>, <DisassemblerInsn "mov" for 0x40114d>, <DisassemblerInsn "shl" for 0x401154>, <DisassemblerInsn "shr" for 0x401157>, <DisassemblerInsn "mov" for 0x40115a>, <DisassemblerInsn "mov" for 0x401161>, <DisassemblerInsn "add" for 0x401164>, <DisassemblerInsn "mov" for 0x401168>, <DisassemblerInsn "mov" for 0x401170>, <DisassemblerInsn "ror" for 0x401173>, <DisassemblerInsn "ror" for 0x401177>, <DisassemblerInsn "ror" for 0x40117a>, <DisassemblerInsn "mov" for 0x40117e>, <DisassemblerInsn "shr" for 0x401185>, <DisassemblerInsn "mov" for 0x401188>, <DisassemblerInsn "mov" for 0x40118f>, <DisassemblerInsn "cmp" for 0x401195>, <DisassemblerInsn "jge" for 0x401198>]'}, {'block_Idx': 175, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403d19>, <DisassemblerInsn "mov" for 0x403d21>, <DisassemblerInsn "mov" for 0x403d23>, <DisassemblerInsn "cmp" for 0x403d2a>, <DisassemblerInsn "mov" for 0x403d2d>, <DisassemblerInsn "jle" for 0x403d34>]'}, {'block_Idx': 250, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c01>, <DisassemblerInsn "mov" for 0x402c09>, <DisassemblerInsn "mov" for 0x402c11>, <DisassemblerInsn "and" for 0x402c18>, <DisassemblerInsn "add" for 0x402c1b>, <DisassemblerInsn "mov" for 0x402c1e>, <DisassemblerInsn "call" for 0x402c20>]'}, {'block_Idx': 258, 'blockInsts': '[<DisassemblerInsn "push" for 0x404010>, <DisassemblerInsn "mov" for 0x404011>, <DisassemblerInsn "push" for 0x404014>, <DisassemblerInsn "sub" for 0x404015>, <DisassemblerInsn "mov" for 0x40401c>, <DisassemblerInsn "mov" for 0x40401f>, <DisassemblerInsn "mov" for 0x404022>, <DisassemblerInsn "mov" for 0x404026>, <DisassemblerInsn "mov" for 0x404028>, <DisassemblerInsn "lea" for 0x40402c>, <DisassemblerInsn "and" for 0x404034>, <DisassemblerInsn "mov" for 0x404038>, <DisassemblerInsn "sub" for 0x40403b>, <DisassemblerInsn "mov" for 0x40403e>, <DisassemblerInsn "mov" for 0x404042>, <DisassemblerInsn "movsxd" for 0x404045>, <DisassemblerInsn "mov" for 0x404048>, <DisassemblerInsn "mov" for 0x40404d>, <DisassemblerInsn "cmp" for 0x404051>, <DisassemblerInsn "setg" for 0x404054>, <DisassemblerInsn "mov" for 0x404057>, <DisassemblerInsn "test" for 0x40405a>, <DisassemblerInsn "jne" for 0x40405c>]'}, {'block_Idx': 150, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403050>, <DisassemblerInsn "mov" for 0x403058>, <DisassemblerInsn "mov" for 0x40305f>, <DisassemblerInsn "mov" for 0x403066>, <DisassemblerInsn "mov" for 0x40306d>, <DisassemblerInsn "mov" for 0x403074>, <DisassemblerInsn "neg" for 0x403076>, <DisassemblerInsn "and" for 0x403078>, <DisassemblerInsn "mov" for 0x40307b>, <DisassemblerInsn "mov" for 0x40307d>, <DisassemblerInsn "lea" for 0x40307f>, <DisassemblerInsn "mov" for 0x403083>, <DisassemblerInsn "mov" for 0x403085>, <DisassemblerInsn "mov" for 0x403087>, <DisassemblerInsn "sub" for 0x40308f>, <DisassemblerInsn "ja" for 0x403092>]'}, {'block_Idx': 124, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401815>, <DisassemblerInsn "mov" for 0x40181c>, <DisassemblerInsn "mov" for 0x401824>, <DisassemblerInsn "sar" for 0x401826>, <DisassemblerInsn "movsxd" for 0x401829>, <DisassemblerInsn "mov" for 0x40182c>, <DisassemblerInsn "ror" for 0x40182f>, <DisassemblerInsn "ror" for 0x401833>, <DisassemblerInsn "ror" for 0x401836>, <DisassemblerInsn "and" for 0x40183a>, <DisassemblerInsn "shl" for 0x40183d>, <DisassemblerInsn "mov" for 0x40183f>, <DisassemblerInsn "shr" for 0x401846>, <DisassemblerInsn "add" for 0x401849>, <DisassemblerInsn "imul" for 0x40184c>, <DisassemblerInsn "mov" for 0x401852>, <DisassemblerInsn "mov" for 0x401859>, <DisassemblerInsn "jmp" for 0x401860>]'}, {'block_Idx': 107, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401650>, <DisassemblerInsn "mov" for 0x401658>, <DisassemblerInsn "mov" for 0x40165f>, <DisassemblerInsn "mov" for 0x401667>, <DisassemblerInsn "shr" for 0x40166f>, <DisassemblerInsn "and" for 0x401673>, <DisassemblerInsn "mov" for 0x40167a>, <DisassemblerInsn "ror" for 0x40167d>, <DisassemblerInsn "ror" for 0x401681>, <DisassemblerInsn "ror" for 0x401684>, <DisassemblerInsn "shr" for 0x401688>, <DisassemblerInsn "add" for 0x40168b>, <DisassemblerInsn "mov" for 0x40168e>, <DisassemblerInsn "add" for 0x401690>, <DisassemblerInsn "mov" for 0x401693>, <DisassemblerInsn "mov" for 0x40169a>, <DisassemblerInsn "jmp" for 0x4016a1>]'}, {'block_Idx': 81, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4013f5>]'}, {'block_Idx': 245, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f00>, <DisassemblerInsn "mov" for 0x402f08>, <DisassemblerInsn "mov" for 0x402f10>, <DisassemblerInsn "mov" for 0x402f15>, <DisassemblerInsn "xor" for 0x402f1d>, <DisassemblerInsn "mov" for 0x402f1f>, <DisassemblerInsn "mov" for 0x402f27>, <DisassemblerInsn "mov" for 0x402f2f>, <DisassemblerInsn "mov" for 0x402f37>, <DisassemblerInsn "mov" for 0x402f3e>, <DisassemblerInsn "shl" for 0x402f41>, <DisassemblerInsn "mov" for 0x402f43>, <DisassemblerInsn "mov" for 0x402f4b>, <DisassemblerInsn "mov" for 0x402f52>, <DisassemblerInsn "add" for 0x402f55>, <DisassemblerInsn "mov" for 0x402f59>, <DisassemblerInsn "movsxd" for 0x402f61>, <DisassemblerInsn "cmp" for 0x402f64>, <DisassemblerInsn "mov" for 0x402f67>, <DisassemblerInsn "jl" for 0x402f6f>]'}, {'block_Idx': 88, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401578>]'}, {'block_Idx': 122, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e1b>, <DisassemblerInsn "mov" for 0x400e23>, <DisassemblerInsn "mov" for 0x400e2b>, <DisassemblerInsn "mov" for 0x400e2d>, <DisassemblerInsn "mov" for 0x400e2f>, <DisassemblerInsn "cmp" for 0x400e36>, <DisassemblerInsn "mov" for 0x400e39>, <DisassemblerInsn "jne" for 0x400e40>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403f01>, <DisassemblerInsn "mov" for 0x403f08>, <DisassemblerInsn "mov" for 0x403f10>, <DisassemblerInsn "add" for 0x403f12>, <DisassemblerInsn "mov" for 0x403f15>, <DisassemblerInsn "cdq" for 0x403f1a>, <DisassemblerInsn "idiv" for 0x403f1b>, <DisassemblerInsn "mov" for 0x403f1d>, <DisassemblerInsn "cmp" for 0x403f21>, <DisassemblerInsn "jle" for 0x403f23>]'}, {'block_Idx': 239, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401f82>]'}, {'block_Idx': 71, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401597>, <DisassemblerInsn "xor" for 0x40159f>, <DisassemblerInsn "lea" for 0x4015a1>, <DisassemblerInsn "mov" for 0x4015a8>, <DisassemblerInsn "call" for 0x4015aa>]'}, {'block_Idx': 170, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401915>]'}, {'block_Idx': 149, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400edc>, <DisassemblerInsn "mov" for 0x400ee4>, <DisassemblerInsn "mov" for 0x400eec>, <DisassemblerInsn "mov" for 0x400ef4>, <DisassemblerInsn "mov" for 0x400ef6>, <DisassemblerInsn "shl" for 0x400efb>, <DisassemblerInsn "mov" for 0x400efe>, <DisassemblerInsn "call" for 0x400f05>]'}, {'block_Idx': 64, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013dd>, <DisassemblerInsn "xor" for 0x4013e5>, <DisassemblerInsn "lea" for 0x4013e7>, <DisassemblerInsn "mov" for 0x4013ee>, <DisassemblerInsn "call" for 0x4013f0>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401049>, <DisassemblerInsn "mov" for 0x401051>, <DisassemblerInsn "mov" for 0x401058>, <DisassemblerInsn "mov" for 0x40105a>, <DisassemblerInsn "mov" for 0x401061>, <DisassemblerInsn "cdq" for 0x401066>, <DisassemblerInsn "idiv" for 0x401067>, <DisassemblerInsn "add" for 0x401069>, <DisassemblerInsn "cmp" for 0x40106c>, <DisassemblerInsn "jge" for 0x40106e>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007dc>, <DisassemblerInsn "mov" for 0x4007e3>, <DisassemblerInsn "mov" for 0x4007ea>, <DisassemblerInsn "xor" for 0x4007f1>, <DisassemblerInsn "sub" for 0x4007f3>, <DisassemblerInsn "cmovb" for 0x4007f5>, <DisassemblerInsn "cmp" for 0x4007f8>, <DisassemblerInsn "cmovb" for 0x4007fa>, <DisassemblerInsn "mov" for 0x4007fd>, <DisassemblerInsn "mov" for 0x400804>, <DisassemblerInsn "mov" for 0x40080b>, <DisassemblerInsn "mov" for 0x400812>, <DisassemblerInsn "mov" for 0x400819>, <DisassemblerInsn "add" for 0x40081b>, <DisassemblerInsn "mov" for 0x40081d>, <DisassemblerInsn "mov" for 0x400824>, <DisassemblerInsn "cmp" for 0x400829>, <DisassemblerInsn "mov" for 0x40082b>, <DisassemblerInsn "jb" for 0x400832>]'}, {'block_Idx': 214, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401d64>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403e08>, <DisassemblerInsn "mov" for 0x403e10>, <DisassemblerInsn "mov" for 0x403e15>, <DisassemblerInsn "mov" for 0x403e19>, <DisassemblerInsn "mov" for 0x403e21>, <DisassemblerInsn "mov" for 0x403e25>, <DisassemblerInsn "mov" for 0x403e27>, <DisassemblerInsn "shl" for 0x403e29>, <DisassemblerInsn "mov" for 0x403e2b>, <DisassemblerInsn "mov" for 0x403e30>, <DisassemblerInsn "add" for 0x403e33>, <DisassemblerInsn "mov" for 0x403e37>, <DisassemblerInsn "mov" for 0x403e3a>, <DisassemblerInsn "mov" for 0x403e3c>, <DisassemblerInsn "mov" for 0x403e40>, <DisassemblerInsn "mov" for 0x403e45>, <DisassemblerInsn "jmp" for 0x403e4a>]'}, {'block_Idx': 393, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402880>, <DisassemblerInsn "mov" for 0x402888>, <DisassemblerInsn "mov" for 0x40288f>, <DisassemblerInsn "mov" for 0x402896>, <DisassemblerInsn "mov" for 0x40289e>, <DisassemblerInsn "mov" for 0x4028a6>, <DisassemblerInsn "mov" for 0x4028ae>, <DisassemblerInsn "add" for 0x4028b6>, <DisassemblerInsn "mov" for 0x4028ba>, <DisassemblerInsn "mov" for 0x4028c1>, <DisassemblerInsn "add" for 0x4028c4>, <DisassemblerInsn "mov" for 0x4028c7>, <DisassemblerInsn "mov" for 0x4028cf>, <DisassemblerInsn "mov" for 0x4028d3>, <DisassemblerInsn "or" for 0x4028d6>, <DisassemblerInsn "mov" for 0x4028da>, <DisassemblerInsn "add" for 0x4028e2>, <DisassemblerInsn "mov" for 0x4028e6>, <DisassemblerInsn "mov" for 0x4028ed>, <DisassemblerInsn "add" for 0x4028ef>, <DisassemblerInsn "mov" for 0x4028f2>, <DisassemblerInsn "mov" for 0x4028f9>, <DisassemblerInsn "add" for 0x4028fd>, <DisassemblerInsn "mov" for 0x402902>, <DisassemblerInsn "mov" for 0x402909>, <DisassemblerInsn "add" for 0x40290c>, <DisassemblerInsn "mov" for 0x40290f>, <DisassemblerInsn "mov" for 0x402917>, <DisassemblerInsn "add" for 0x40291c>, <DisassemblerInsn "mov" for 0x402921>, <DisassemblerInsn "mov" for 0x402928>, <DisassemblerInsn "add" for 0x40292a>, <DisassemblerInsn "mov" for 0x40292d>, <DisassemblerInsn "mov" for 0x402934>, <DisassemblerInsn "add" for 0x402939>, <DisassemblerInsn "mov" for 0x40293d>, <DisassemblerInsn "add" for 0x402945>, <DisassemblerInsn "mov" for 0x402949>, <DisassemblerInsn "cmp" for 0x402951>, <DisassemblerInsn "mov" for 0x402954>, <DisassemblerInsn "mov" for 0x402957>, <DisassemblerInsn "mov" for 0x40295f>, <DisassemblerInsn "mov" for 0x402961>, <DisassemblerInsn "mov" for 0x402968>, <DisassemblerInsn "mov" for 0x40296a>, <DisassemblerInsn "mov" for 0x402971>, <DisassemblerInsn "mov" for 0x402979>, <DisassemblerInsn "mov" for 0x402981>, <DisassemblerInsn "mov" for 0x402988>, <DisassemblerInsn "je" for 0x40298f>]'}, {'block_Idx': 232, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ee7>, <DisassemblerInsn "cmp" for 0x402eee>, <DisassemblerInsn "je" for 0x402ef1>]'}, {'block_Idx': 217, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403a74>, <DisassemblerInsn "mov" for 0x403a7c>, <DisassemblerInsn "mov" for 0x403a83>, <DisassemblerInsn "mov" for 0x403a8b>, <DisassemblerInsn "add" for 0x403a93>, <DisassemblerInsn "movsxd" for 0x403a97>, <DisassemblerInsn "cmp" for 0x403a9a>, <DisassemblerInsn "mov" for 0x403a9d>, <DisassemblerInsn "mov" for 0x403a9f>, <DisassemblerInsn "mov" for 0x403aa6>, <DisassemblerInsn "mov" for 0x403aae>, <DisassemblerInsn "mov" for 0x403ab6>, <DisassemblerInsn "mov" for 0x403abe>, <DisassemblerInsn "jl" for 0x403ac5>]'}, {'block_Idx': 28, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f6>, <DisassemblerInsn "mov" for 0x4008fe>, <DisassemblerInsn "mov" for 0x400906>, <DisassemblerInsn "mov" for 0x400909>, <DisassemblerInsn "mov" for 0x400911>, <DisassemblerInsn "mov" for 0x400918>, <DisassemblerInsn "mov" for 0x40091a>, <DisassemblerInsn "mov" for 0x40091c>, <DisassemblerInsn "mov" for 0x40091e>, <DisassemblerInsn "mov" for 0x400925>, <DisassemblerInsn "mov" for 0x40092c>, <DisassemblerInsn "mov" for 0x400933>, <DisassemblerInsn "mov" for 0x40093a>, <DisassemblerInsn "mov" for 0x400941>, <DisassemblerInsn "mov" for 0x400948>, <DisassemblerInsn "mov" for 0x40094f>, <DisassemblerInsn "mov" for 0x400956>, <DisassemblerInsn "mov" for 0x40095d>, <DisassemblerInsn "add" for 0x40095f>, <DisassemblerInsn "add" for 0x400961>, <DisassemblerInsn "cmp" for 0x400963>, <DisassemblerInsn "mov" for 0x400965>, <DisassemblerInsn "mov" for 0x40096c>, <DisassemblerInsn "jbe" for 0x400973>]'}, {'block_Idx': 270, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402109>, <DisassemblerInsn "mov" for 0x402111>, <DisassemblerInsn "mov" for 0x402119>, <DisassemblerInsn "mov" for 0x402121>, <DisassemblerInsn "mov" for 0x402123>, <DisassemblerInsn "mov" for 0x402125>, <DisassemblerInsn "mov" for 0x40212c>, <DisassemblerInsn "mov" for 0x402133>, <DisassemblerInsn "jmp" for 0x40213b>]'}, {'block_Idx': 136, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f71>, <DisassemblerInsn "mov" for 0x400f79>, <DisassemblerInsn "mov" for 0x400f80>, <DisassemblerInsn "mov" for 0x400f88>, <DisassemblerInsn "call" for 0x400f8b>]'}, {'block_Idx': 193, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40391e>, <DisassemblerInsn "mov" for 0x403926>, <DisassemblerInsn "mov" for 0x40392e>, <DisassemblerInsn "mov" for 0x403936>, <DisassemblerInsn "mov" for 0x40393e>, <DisassemblerInsn "mov" for 0x403946>, <DisassemblerInsn "mov" for 0x40394e>, <DisassemblerInsn "mov" for 0x403956>, <DisassemblerInsn "mov" for 0x40395e>, <DisassemblerInsn "mov" for 0x403966>, <DisassemblerInsn "mov" for 0x40396e>, <DisassemblerInsn "mov" for 0x403976>, <DisassemblerInsn "mov" for 0x40397e>, <DisassemblerInsn "mov" for 0x403981>, <DisassemblerInsn "mov" for 0x403988>, <DisassemblerInsn "mov" for 0x40398b>, <DisassemblerInsn "mov" for 0x403992>, <DisassemblerInsn "mov" for 0x403994>, <DisassemblerInsn "mov" for 0x403996>, <DisassemblerInsn "shl" for 0x40399d>, <DisassemblerInsn "mov" for 0x40399f>, <DisassemblerInsn "cmp" for 0x4039a6>, <DisassemblerInsn "je" for 0x4039a9>]'}, {'block_Idx': 223, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403e8b>, <DisassemblerInsn "mov" for 0x403e90>, <DisassemblerInsn "mov" for 0x403e94>, <DisassemblerInsn "mov" for 0x403e99>, <DisassemblerInsn "add" for 0x403e9e>, <DisassemblerInsn "movsxd" for 0x403ea2>, <DisassemblerInsn "cmp" for 0x403ea5>, <DisassemblerInsn "mov" for 0x403ea8>, <DisassemblerInsn "mov" for 0x403eaa>, <DisassemblerInsn "mov" for 0x403eae>, <DisassemblerInsn "mov" for 0x403eb3>, <DisassemblerInsn "mov" for 0x403eb8>, <DisassemblerInsn "mov" for 0x403ebd>, <DisassemblerInsn "jl" for 0x403ec4>]'}, {'block_Idx': 234, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401d76>]'}, {'block_Idx': 38, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009a3>, <DisassemblerInsn "mov" for 0x4009ab>, <DisassemblerInsn "mov" for 0x4009b3>, <DisassemblerInsn "mov" for 0x4009b9>, <DisassemblerInsn "xor" for 0x4009bb>, <DisassemblerInsn "mov" for 0x4009bd>, <DisassemblerInsn "mov" for 0x4009c4>, <DisassemblerInsn "mov" for 0x4009cb>, <DisassemblerInsn "mov" for 0x4009d2>, <DisassemblerInsn "mov" for 0x4009da>, <DisassemblerInsn "mov" for 0x4009e2>, <DisassemblerInsn "mov" for 0x4009e9>, <DisassemblerInsn "mov" for 0x4009f0>, <DisassemblerInsn "add" for 0x4009f7>, <DisassemblerInsn "mov" for 0x4009f9>, <DisassemblerInsn "add" for 0x4009fb>, <DisassemblerInsn "movsxd" for 0x4009fe>, <DisassemblerInsn "call" for 0x400a01>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401203>]'}, {'block_Idx': 356, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4059ad>, <DisassemblerInsn "add" for 0x4059b4>, <DisassemblerInsn "pop" for 0x4059bb>, <DisassemblerInsn "ret" for 0x4059bc>]'}, {'block_Idx': 212, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403bfe>, <DisassemblerInsn "mov" for 0x403c06>, <DisassemblerInsn "mov" for 0x403c0e>, <DisassemblerInsn "mov" for 0x403c15>, <DisassemblerInsn "mov" for 0x403c1d>, <DisassemblerInsn "mov" for 0x403c24>, <DisassemblerInsn "mov" for 0x403c26>, <DisassemblerInsn "shl" for 0x403c28>, <DisassemblerInsn "mov" for 0x403c2a>, <DisassemblerInsn "mov" for 0x403c32>, <DisassemblerInsn "add" for 0x403c35>, <DisassemblerInsn "mov" for 0x403c39>, <DisassemblerInsn "mov" for 0x403c3c>, <DisassemblerInsn "mov" for 0x403c3e>, <DisassemblerInsn "mov" for 0x403c45>, <DisassemblerInsn "mov" for 0x403c4d>, <DisassemblerInsn "jmp" for 0x403c55>]'}, {'block_Idx': 404, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402995>]'}, {'block_Idx': 96, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015c1>, <DisassemblerInsn "sub" for 0x4015c8>, <DisassemblerInsn "je" for 0x4015cb>]'}, {'block_Idx': 40, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d91>, <DisassemblerInsn "cmp" for 0x400d98>, <DisassemblerInsn "jne" for 0x400d9b>]'}, {'block_Idx': 74, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401301>]'}, {'block_Idx': 93, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4015bf>]'}, {'block_Idx': 225, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403cb1>, <DisassemblerInsn "mov" for 0x403cb9>, <DisassemblerInsn "mov" for 0x403cc0>, <DisassemblerInsn "mov" for 0x403cc8>, <DisassemblerInsn "add" for 0x403cd0>, <DisassemblerInsn "movsxd" for 0x403cd4>, <DisassemblerInsn "cmp" for 0x403cd7>, <DisassemblerInsn "mov" for 0x403cda>, <DisassemblerInsn "mov" for 0x403cdc>, <DisassemblerInsn "mov" for 0x403ce3>, <DisassemblerInsn "mov" for 0x403ceb>, <DisassemblerInsn "mov" for 0x403cf3>, <DisassemblerInsn "mov" for 0x403cfb>, <DisassemblerInsn "jl" for 0x403d02>]'}, {'block_Idx': 416, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402a93>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403f78>, <DisassemblerInsn "mov" for 0x403f7c>, <DisassemblerInsn "mov" for 0x403f84>, <DisassemblerInsn "add" for 0x403f87>, <DisassemblerInsn "mov" for 0x403f8e>, <DisassemblerInsn "mov" for 0x403f92>, <DisassemblerInsn "mov" for 0x403f98>, <DisassemblerInsn "cmp" for 0x403f9c>, <DisassemblerInsn "mov" for 0x403f9f>, <DisassemblerInsn "je" for 0x403fa6>]'}, {'block_Idx': 185, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4031df>, <DisassemblerInsn "mov" for 0x4031e7>, <DisassemblerInsn "mov" for 0x4031ef>, <DisassemblerInsn "mov" for 0x4031f6>, <DisassemblerInsn "mov" for 0x4031fe>, <DisassemblerInsn "mov" for 0x403206>, <DisassemblerInsn "xor" for 0x40320b>, <DisassemblerInsn "cmp" for 0x40320d>, <DisassemblerInsn "mov" for 0x403211>, <DisassemblerInsn "mov" for 0x403219>, <DisassemblerInsn "mov" for 0x403220>, <DisassemblerInsn "mov" for 0x403227>, <DisassemblerInsn "mov" for 0x40322f>, <DisassemblerInsn "mov" for 0x403237>, <DisassemblerInsn "jne" for 0x40323f>]'}, {'block_Idx': 118, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40191a>, <DisassemblerInsn "mov" for 0x401922>, <DisassemblerInsn "mov" for 0x401929>, <DisassemblerInsn "mov" for 0x401930>, <DisassemblerInsn "add" for 0x401937>, <DisassemblerInsn "mov" for 0x40193a>, <DisassemblerInsn "xor" for 0x40193c>, <DisassemblerInsn "call" for 0x40193e>]'}, {'block_Idx': 237, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ef3>, <DisassemblerInsn "cmp" for 0x402efb>, <DisassemblerInsn "jle" for 0x402efe>]'}, {'block_Idx': 151, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a41>, <DisassemblerInsn "mov" for 0x401a48>, <DisassemblerInsn "mov" for 0x401a4f>, <DisassemblerInsn "add" for 0x401a57>, <DisassemblerInsn "mov" for 0x401a5b>, <DisassemblerInsn "xor" for 0x401a63>, <DisassemblerInsn "mov" for 0x401a65>, <DisassemblerInsn "mov" for 0x401a6c>, <DisassemblerInsn "mov" for 0x401a73>, <DisassemblerInsn "mov" for 0x401a7b>, <DisassemblerInsn "mov" for 0x401a83>, <DisassemblerInsn "mov" for 0x401a8a>, <DisassemblerInsn "mov" for 0x401a91>, <DisassemblerInsn "mov" for 0x401a99>, <DisassemblerInsn "mov" for 0x401aa1>, <DisassemblerInsn "mov" for 0x401aa8>, <DisassemblerInsn "mov" for 0x401aaf>, <DisassemblerInsn "cmp" for 0x401ab1>, <DisassemblerInsn "jne" for 0x401ab5>]'}, {'block_Idx': 61, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010e7>, <DisassemblerInsn "mov" for 0x4010ef>, <DisassemblerInsn "add" for 0x4010f6>, <DisassemblerInsn "mov" for 0x4010f9>, <DisassemblerInsn "mov" for 0x401100>, <DisassemblerInsn "mov" for 0x401102>, <DisassemblerInsn "cdq" for 0x401107>, <DisassemblerInsn "idiv" for 0x401108>, <DisassemblerInsn "mov" for 0x40110a>, <DisassemblerInsn "mov" for 0x401111>, <DisassemblerInsn "mov" for 0x401113>, <DisassemblerInsn "add" for 0x40111a>, <DisassemblerInsn "cmp" for 0x40111d>, <DisassemblerInsn "mov" for 0x40111f>, <DisassemblerInsn "jl" for 0x401126>]'}, {'block_Idx': 366, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402475>, <DisassemblerInsn "mov" for 0x40247c>, <DisassemblerInsn "mov" for 0x402483>, <DisassemblerInsn "mov" for 0x40248a>, <DisassemblerInsn "mov" for 0x402492>, <DisassemblerInsn "shl" for 0x402499>, <DisassemblerInsn "mov" for 0x40249b>, <DisassemblerInsn "add" for 0x40249e>, <DisassemblerInsn "mov" for 0x4024a2>, <DisassemblerInsn "mov" for 0x4024a5>, <DisassemblerInsn "add" for 0x4024a9>, <DisassemblerInsn "add" for 0x4024ab>, <DisassemblerInsn "sub" for 0x4024ad>, <DisassemblerInsn "mov" for 0x4024af>, <DisassemblerInsn "cmp" for 0x4024b6>, <DisassemblerInsn "jne" for 0x4024b9>]'}, {'block_Idx': 228, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d66>, <DisassemblerInsn "sub" for 0x401d6d>, <DisassemblerInsn "jne" for 0x401d70>]'}, {'block_Idx': 443, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402c2e>]'}, {'block_Idx': 201, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401cd6>, <DisassemblerInsn "mov" for 0x401cdd>, <DisassemblerInsn "mov" for 0x401ce4>, <DisassemblerInsn "mov" for 0x401cec>, <DisassemblerInsn "sub" for 0x401cf3>, <DisassemblerInsn "mov" for 0x401cf5>, <DisassemblerInsn "mov" for 0x401cf7>, <DisassemblerInsn "mov" for 0x401cfe>, <DisassemblerInsn "mov" for 0x401d05>, <DisassemblerInsn "mov" for 0x401d0c>, <DisassemblerInsn "mov" for 0x401d13>, <DisassemblerInsn "mov" for 0x401d1a>, <DisassemblerInsn "mov" for 0x401d21>, <DisassemblerInsn "mov" for 0x401d28>, <DisassemblerInsn "mov" for 0x401d2f>, <DisassemblerInsn "cmp" for 0x401d36>, <DisassemblerInsn "jle" for 0x401d39>]'}, {'block_Idx': 417, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402dd7>, <DisassemblerInsn "mov" for 0x402ddf>, <DisassemblerInsn "mov" for 0x402de7>, <DisassemblerInsn "mov" for 0x402dee>, <DisassemblerInsn "mov" for 0x402df5>, <DisassemblerInsn "mov" for 0x402dfd>, <DisassemblerInsn "add" for 0x402e04>, <DisassemblerInsn "add" for 0x402e07>, <DisassemblerInsn "add" for 0x402e0a>, <DisassemblerInsn "add" for 0x402e0c>, <DisassemblerInsn "mov" for 0x402e0e>, <DisassemblerInsn "jmp" for 0x402e11>]'}, {'block_Idx': 255, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402234>, <DisassemblerInsn "mov" for 0x40223b>, <DisassemblerInsn "mov" for 0x402242>, <DisassemblerInsn "mov" for 0x402249>, <DisassemblerInsn "xor" for 0x40224c>, <DisassemblerInsn "sub" for 0x40224e>, <DisassemblerInsn "shr" for 0x402251>, <DisassemblerInsn "mov" for 0x402253>, <DisassemblerInsn "add" for 0x40225b>, <DisassemblerInsn "mov" for 0x40225d>, <DisassemblerInsn "mov" for 0x40225f>, <DisassemblerInsn "jmp" for 0x402266>]'}, {'block_Idx': 19, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401016>, <DisassemblerInsn "and" for 0x40101d>, <DisassemblerInsn "cmp" for 0x401022>, <DisassemblerInsn "je" for 0x401027>]'}, {'block_Idx': 54, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c19>, <DisassemblerInsn "mov" for 0x400c21>, <DisassemblerInsn "mov" for 0x400c29>, <DisassemblerInsn "mov" for 0x400c30>, <DisassemblerInsn "mov" for 0x400c38>, <DisassemblerInsn "sar" for 0x400c3a>, <DisassemblerInsn "movsxd" for 0x400c3d>, <DisassemblerInsn "mov" for 0x400c40>, <DisassemblerInsn "mov" for 0x400c43>, <DisassemblerInsn "and" for 0x400c45>, <DisassemblerInsn "mov" for 0x400c48>, <DisassemblerInsn "movzx" for 0x400c4f>, <DisassemblerInsn "mov" for 0x400c52>, <DisassemblerInsn "mov" for 0x400c59>, <DisassemblerInsn "add" for 0x400c5b>, <DisassemblerInsn "mov" for 0x400c5e>, <DisassemblerInsn "sar" for 0x400c60>, <DisassemblerInsn "movsxd" for 0x400c63>, <DisassemblerInsn "mov" for 0x400c66>, <DisassemblerInsn "ror" for 0x400c69>, <DisassemblerInsn "ror" for 0x400c6d>, <DisassemblerInsn "ror" for 0x400c70>, <DisassemblerInsn "and" for 0x400c74>, <DisassemblerInsn "shl" for 0x400c77>, <DisassemblerInsn "mov" for 0x400c79>, <DisassemblerInsn "shr" for 0x400c80>, <DisassemblerInsn "mov" for 0x400c83>, <DisassemblerInsn "mov" for 0x400c8a>, <DisassemblerInsn "add" for 0x400c8c>, <DisassemblerInsn "sar" for 0x400c8f>, <DisassemblerInsn "movsxd" for 0x400c92>, <DisassemblerInsn "mov" for 0x400c95>, <DisassemblerInsn "ror" for 0x400c98>, <DisassemblerInsn "ror" for 0x400c9c>, <DisassemblerInsn "ror" for 0x400c9f>, <DisassemblerInsn "shl" for 0x400ca3>, <DisassemblerInsn "mov" for 0x400ca5>, <DisassemblerInsn "shr" for 0x400cac>, <DisassemblerInsn "mov" for 0x400caf>, <DisassemblerInsn "add" for 0x400cb2>, <DisassemblerInsn "shl" for 0x400cb6>, <DisassemblerInsn "sar" for 0x400cb9>, <DisassemblerInsn "movsxd" for 0x400cbd>, <DisassemblerInsn "mov" for 0x400cc0>, <DisassemblerInsn "ror" for 0x400cc4>, <DisassemblerInsn "ror" for 0x400cc8>, <DisassemblerInsn "ror" for 0x400ccb>, <DisassemblerInsn "shl" for 0x400ccf>, <DisassemblerInsn "mov" for 0x400cd1>, <DisassemblerInsn "shr" for 0x400cd9>, <DisassemblerInsn "add" for 0x400cdc>, <DisassemblerInsn "mov" for 0x400cdf>, <DisassemblerInsn "mov" for 0x400ce6>, <DisassemblerInsn "or" for 0x400ce8>, <DisassemblerInsn "mov" for 0x400cea>, <DisassemblerInsn "shl" for 0x400cf1>, <DisassemblerInsn "mov" for 0x400cf4>, <DisassemblerInsn "add" for 0x400cfb>, <DisassemblerInsn "mov" for 0x400cfd>, <DisassemblerInsn "mov" for 0x400cff>, <DisassemblerInsn "cmp" for 0x400d06>, <DisassemblerInsn "jle" for 0x400d08>]'}, {'block_Idx': 158, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ad3>, <DisassemblerInsn "mov" for 0x401ada>, <DisassemblerInsn "or" for 0x401ae1>, <DisassemblerInsn "sub" for 0x401ae4>, <DisassemblerInsn "mov" for 0x401ae7>, <DisassemblerInsn "je" for 0x401aee>]'}, {'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "push" for 0x400680>, <DisassemblerInsn "sub" for 0x400681>, <DisassemblerInsn "mov" for 0x400688>, <DisassemblerInsn "mov" for 0x400690>, <DisassemblerInsn "mov" for 0x400698>, <DisassemblerInsn "mov" for 0x4006a0>, <DisassemblerInsn "mov" for 0x4006a7>, <DisassemblerInsn "mov" for 0x4006af>, <DisassemblerInsn "mov" for 0x4006b2>, <DisassemblerInsn "mov" for 0x4006ba>, <DisassemblerInsn "mov" for 0x4006c2>, <DisassemblerInsn "mov" for 0x4006c4>, <DisassemblerInsn "mov" for 0x4006cb>, <DisassemblerInsn "mov" for 0x4006d1>, <DisassemblerInsn "add" for 0x4006d4>, <DisassemblerInsn "mov" for 0x4006d8>, <DisassemblerInsn "mov" for 0x4006e0>, <DisassemblerInsn "cmp" for 0x4006e3>, <DisassemblerInsn "mov" for 0x4006e6>, <DisassemblerInsn "jne" for 0x4006ed>]'}, {'block_Idx': 204, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4039ab>, <DisassemblerInsn "mov" for 0x4039b3>, <DisassemblerInsn "mov" for 0x4039bb>, <DisassemblerInsn "mov" for 0x4039c3>, <DisassemblerInsn "mov" for 0x4039ca>, <DisassemblerInsn "mov" for 0x4039d1>, <DisassemblerInsn "mov" for 0x4039d9>, <DisassemblerInsn "sub" for 0x4039dc>, <DisassemblerInsn "mov" for 0x4039de>, <DisassemblerInsn "shl" for 0x4039e0>, <DisassemblerInsn "mov" for 0x4039e2>, <DisassemblerInsn "mov" for 0x4039ea>, <DisassemblerInsn "add" for 0x4039ed>, <DisassemblerInsn "mov" for 0x4039f1>, <DisassemblerInsn "mov" for 0x4039f4>, <DisassemblerInsn "mov" for 0x4039f6>, <DisassemblerInsn "mov" for 0x4039fd>, <DisassemblerInsn "mov" for 0x403a05>, <DisassemblerInsn "jmp" for 0x403a0d>]'}, {'block_Idx': 167, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401ad1>]'}, {'block_Idx': 173, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x403141>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d59>, <DisassemblerInsn "test" for 0x401d60>, <DisassemblerInsn "je" for 0x401d62>]'}, {'block_Idx': 132, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e9a>, <DisassemblerInsn "mov" for 0x400ea2>, <DisassemblerInsn "mov" for 0x400ea9>, <DisassemblerInsn "shl" for 0x400eac>, <DisassemblerInsn "call" for 0x400eaf>]'}, {'block_Idx': 106, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016fd>, <DisassemblerInsn "mov" for 0x401705>, <DisassemblerInsn "mov" for 0x40170c>, <DisassemblerInsn "xor" for 0x401714>, <DisassemblerInsn "lea" for 0x401716>, <DisassemblerInsn "mov" for 0x40171d>, <DisassemblerInsn "call" for 0x40171f>]'}, {'block_Idx': 147, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f90>, <DisassemblerInsn "mov" for 0x400f93>, <DisassemblerInsn "mov" for 0x400f9b>, <DisassemblerInsn "mov" for 0x400f9e>, <DisassemblerInsn "mov" for 0x400fa6>, <DisassemblerInsn "mov" for 0x400fac>, <DisassemblerInsn "cmp" for 0x400fb3>, <DisassemblerInsn "jle" for 0x400fb6>]'}, {'block_Idx': 406, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40299a>, <DisassemblerInsn "mov" for 0x4029a2>, <DisassemblerInsn "mov" for 0x4029a9>, <DisassemblerInsn "mov" for 0x4029b1>, <DisassemblerInsn "mov" for 0x4029b8>, <DisassemblerInsn "mov" for 0x4029c0>, <DisassemblerInsn "mov" for 0x4029c8>, <DisassemblerInsn "add" for 0x4029d0>, <DisassemblerInsn "mov" for 0x4029d4>, <DisassemblerInsn "mov" for 0x4029db>, <DisassemblerInsn "add" for 0x4029dd>, <DisassemblerInsn "mov" for 0x4029e0>, <DisassemblerInsn "mov" for 0x4029e7>, <DisassemblerInsn "add" for 0x4029ea>, <DisassemblerInsn "mov" for 0x4029ed>, <DisassemblerInsn "mov" for 0x4029f5>, <DisassemblerInsn "add" for 0x4029f9>, <DisassemblerInsn "mov" for 0x4029fe>, <DisassemblerInsn "mov" for 0x402a05>, <DisassemblerInsn "add" for 0x402a07>, <DisassemblerInsn "mov" for 0x402a09>, <DisassemblerInsn "mov" for 0x402a10>, <DisassemblerInsn "add" for 0x402a12>, <DisassemblerInsn "mov" for 0x402a15>, <DisassemblerInsn "mov" for 0x402a1c>, <DisassemblerInsn "add" for 0x402a21>, <DisassemblerInsn "mov" for 0x402a25>, <DisassemblerInsn "add" for 0x402a2d>, <DisassemblerInsn "mov" for 0x402a31>, <DisassemblerInsn "cmp" for 0x402a39>, <DisassemblerInsn "mov" for 0x402a3c>, <DisassemblerInsn "mov" for 0x402a3f>, <DisassemblerInsn "mov" for 0x402a47>, <DisassemblerInsn "mov" for 0x402a4a>, <DisassemblerInsn "mov" for 0x402a52>, <DisassemblerInsn "mov" for 0x402a55>, <DisassemblerInsn "mov" for 0x402a5d>, <DisassemblerInsn "mov" for 0x402a60>, <DisassemblerInsn "mov" for 0x402a68>, <DisassemblerInsn "mov" for 0x402a70>, <DisassemblerInsn "mov" for 0x402a78>, <DisassemblerInsn "mov" for 0x402a7f>, <DisassemblerInsn "mov" for 0x402a86>, <DisassemblerInsn "je" for 0x402a8d>]'}, {'block_Idx': 169, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401af0>]'}, {'block_Idx': 226, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e1b>, <DisassemblerInsn "mov" for 0x401e22>, <DisassemblerInsn "mov" for 0x401e29>, <DisassemblerInsn "mov" for 0x401e30>, <DisassemblerInsn "xor" for 0x401e33>, <DisassemblerInsn "sub" for 0x401e35>, <DisassemblerInsn "shr" for 0x401e38>, <DisassemblerInsn "mov" for 0x401e3a>, <DisassemblerInsn "add" for 0x401e42>, <DisassemblerInsn "mov" for 0x401e44>, <DisassemblerInsn "mov" for 0x401e46>, <DisassemblerInsn "jmp" for 0x401e4d>]'}, {'block_Idx': 27, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40102d>, <DisassemblerInsn "mov" for 0x401035>, <DisassemblerInsn "xor" for 0x401039>, <DisassemblerInsn "lea" for 0x40103b>, <DisassemblerInsn "mov" for 0x401042>, <DisassemblerInsn "call" for 0x401044>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011d2>, <DisassemblerInsn "mov" for 0x4011da>, <DisassemblerInsn "add" for 0x4011e1>, <DisassemblerInsn "sub" for 0x4011e4>, <DisassemblerInsn "setb" for 0x4011e7>, <DisassemblerInsn "mov" for 0x4011ea>, <DisassemblerInsn "mov" for 0x4011ed>, <DisassemblerInsn "sub" for 0x4011ef>, <DisassemblerInsn "sete" for 0x4011f2>, <DisassemblerInsn "and" for 0x4011f5>, <DisassemblerInsn "test" for 0x4011f7>, <DisassemblerInsn "mov" for 0x4011fa>, <DisassemblerInsn "jne" for 0x401201>]'}, {'block_Idx': 143, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019b7>, <DisassemblerInsn "mov" for 0x4019be>, <DisassemblerInsn "mov" for 0x4019c5>, <DisassemblerInsn "mov" for 0x4019cd>, <DisassemblerInsn "mov" for 0x4019d5>, <DisassemblerInsn "mov" for 0x4019dd>, <DisassemblerInsn "mov" for 0x4019e5>, <DisassemblerInsn "mov" for 0x4019ed>, <DisassemblerInsn "mov" for 0x4019f5>, <DisassemblerInsn "add" for 0x4019f8>, <DisassemblerInsn "mov" for 0x4019fc>, <DisassemblerInsn "mov" for 0x401a04>, <DisassemblerInsn "mov" for 0x401a08>, <DisassemblerInsn "mov" for 0x401a0c>, <DisassemblerInsn "mov" for 0x401a0f>, <DisassemblerInsn "add" for 0x401a12>, <DisassemblerInsn "mov" for 0x401a16>, <DisassemblerInsn "mov" for 0x401a1e>, <DisassemblerInsn "mov" for 0x401a21>, <DisassemblerInsn "cmp" for 0x401a23>, <DisassemblerInsn "mov" for 0x401a26>, <DisassemblerInsn "mov" for 0x401a2d>, <DisassemblerInsn "mov" for 0x401a34>, <DisassemblerInsn "jle" for 0x401a3b>]'}, {'block_Idx': 163, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4030c2>, <DisassemblerInsn "mov" for 0x4030ca>, <DisassemblerInsn "mov" for 0x4030d2>, <DisassemblerInsn "mov" for 0x4030d9>, <DisassemblerInsn "mov" for 0x4030e1>, <DisassemblerInsn "test" for 0x4030e3>, <DisassemblerInsn "setg" for 0x4030e5>, <DisassemblerInsn "test" for 0x4030e9>, <DisassemblerInsn "setg" for 0x4030eb>, <DisassemblerInsn "and" for 0x4030ef>, <DisassemblerInsn "xor" for 0x4030f2>, <DisassemblerInsn "test" for 0x4030f4>, <DisassemblerInsn "mov" for 0x4030f8>, <DisassemblerInsn "mov" for 0x4030fb>, <DisassemblerInsn "mov" for 0x403103>, <DisassemblerInsn "mov" for 0x403106>, <DisassemblerInsn "mov" for 0x40310e>, <DisassemblerInsn "mov" for 0x403111>, <DisassemblerInsn "mov" for 0x403119>, <DisassemblerInsn "mov" for 0x403120>, <DisassemblerInsn "mov" for 0x403128>, <DisassemblerInsn "mov" for 0x403130>, <DisassemblerInsn "mov" for 0x403138>, <DisassemblerInsn "jne" for 0x40313f>]'}, {'block_Idx': 418, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402a98>, <DisassemblerInsn "mov" for 0x402aa0>, <DisassemblerInsn "mov" for 0x402aa7>, <DisassemblerInsn "mov" for 0x402aaf>, <DisassemblerInsn "mov" for 0x402ab6>, <DisassemblerInsn "mov" for 0x402abd>, <DisassemblerInsn "mov" for 0x402ac5>, <DisassemblerInsn "mov" for 0x402acd>, <DisassemblerInsn "add" for 0x402ad5>, <DisassemblerInsn "mov" for 0x402ad9>, <DisassemblerInsn "mov" for 0x402ae0>, <DisassemblerInsn "add" for 0x402ae2>, <DisassemblerInsn "mov" for 0x402ae4>, <DisassemblerInsn "mov" for 0x402aeb>, <DisassemblerInsn "add" for 0x402aed>, <DisassemblerInsn "mov" for 0x402af0>, <DisassemblerInsn "mov" for 0x402af7>, <DisassemblerInsn "add" for 0x402af9>, <DisassemblerInsn "mov" for 0x402afb>, <DisassemblerInsn "mov" for 0x402b02>, <DisassemblerInsn "mov" for 0x402b06>, <DisassemblerInsn "or" for 0x402b09>, <DisassemblerInsn "mov" for 0x402b0d>, <DisassemblerInsn "add" for 0x402b15>, <DisassemblerInsn "mov" for 0x402b19>, <DisassemblerInsn "mov" for 0x402b20>, <DisassemblerInsn "add" for 0x402b22>, <DisassemblerInsn "mov" for 0x402b24>, <DisassemblerInsn "mov" for 0x402b2b>, <DisassemblerInsn "add" for 0x402b2d>, <DisassemblerInsn "mov" for 0x402b2f>, <DisassemblerInsn "mov" for 0x402b36>, <DisassemblerInsn "add" for 0x402b38>, <DisassemblerInsn "mov" for 0x402b3a>, <DisassemblerInsn "mov" for 0x402b41>, <DisassemblerInsn "add" for 0x402b45>, <DisassemblerInsn "mov" for 0x402b49>, <DisassemblerInsn "add" for 0x402b51>, <DisassemblerInsn "mov" for 0x402b55>, <DisassemblerInsn "cmp" for 0x402b5d>, <DisassemblerInsn "mov" for 0x402b60>, <DisassemblerInsn "mov" for 0x402b63>, <DisassemblerInsn "mov" for 0x402b6b>, <DisassemblerInsn "mov" for 0x402b6e>, <DisassemblerInsn "mov" for 0x402b76>, <DisassemblerInsn "mov" for 0x402b79>, <DisassemblerInsn "mov" for 0x402b81>, <DisassemblerInsn "mov" for 0x402b84>, <DisassemblerInsn "mov" for 0x402b8c>, <DisassemblerInsn "mov" for 0x402b8f>, <DisassemblerInsn "mov" for 0x402b97>, <DisassemblerInsn "mov" for 0x402b9f>, <DisassemblerInsn "mov" for 0x402ba7>, <DisassemblerInsn "mov" for 0x402bae>, <DisassemblerInsn "mov" for 0x402bb5>, <DisassemblerInsn "mov" for 0x402bbc>, <DisassemblerInsn "je" for 0x402bc3>]'}, {'block_Idx': 181, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b7c>, <DisassemblerInsn "mov" for 0x401b84>, <DisassemblerInsn "xor" for 0x401b87>, <DisassemblerInsn "lea" for 0x401b89>, <DisassemblerInsn "mov" for 0x401b90>, <DisassemblerInsn "call" for 0x401b92>]'}, {'block_Idx': 247, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023aa>, <DisassemblerInsn "mov" for 0x4023b2>, <DisassemblerInsn "mov" for 0x4023ba>, <DisassemblerInsn "xor" for 0x4023bc>, <DisassemblerInsn "call" for 0x4023be>]'}, {'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015e0>, <DisassemblerInsn "xor" for 0x4015e8>, <DisassemblerInsn "lea" for 0x4015ea>, <DisassemblerInsn "mov" for 0x4015f1>, <DisassemblerInsn "call" for 0x4015f3>]'}, {'block_Idx': 114, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401785>, <DisassemblerInsn "mov" for 0x40178c>, <DisassemblerInsn "mov" for 0x401794>, <DisassemblerInsn "mov" for 0x401797>, <DisassemblerInsn "mov" for 0x40179e>, <DisassemblerInsn "jmp" for 0x4017a5>]'}, {'block_Idx': 263, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022f7>, <DisassemblerInsn "mov" for 0x4022ff>, <DisassemblerInsn "mov" for 0x402307>, <DisassemblerInsn "mov" for 0x40230e>, <DisassemblerInsn "mov" for 0x402315>, <DisassemblerInsn "sub" for 0x40231a>, <DisassemblerInsn "mov" for 0x40231c>, <DisassemblerInsn "shl" for 0x402323>, <DisassemblerInsn "mov" for 0x402325>, <DisassemblerInsn "sar" for 0x40232c>, <DisassemblerInsn "mov" for 0x40232e>, <DisassemblerInsn "mov" for 0x402336>, <DisassemblerInsn "add" for 0x402339>, <DisassemblerInsn "mov" for 0x40233d>, <DisassemblerInsn "cmp" for 0x402345>, <DisassemblerInsn "je" for 0x402348>]'}, {'block_Idx': 266, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402c4e>]'}, {'block_Idx': 184, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4037ec>, <DisassemblerInsn "mov" for 0x4037f4>, <DisassemblerInsn "mov" for 0x4037fb>, <DisassemblerInsn "mov" for 0x403803>, <DisassemblerInsn "mov" for 0x40380b>, <DisassemblerInsn "mov" for 0x403812>, <DisassemblerInsn "mov" for 0x40381a>, <DisassemblerInsn "add" for 0x403822>, <DisassemblerInsn "movsxd" for 0x403826>, <DisassemblerInsn "cmp" for 0x403829>, <DisassemblerInsn "mov" for 0x40382c>, <DisassemblerInsn "mov" for 0x40382f>, <DisassemblerInsn "mov" for 0x403837>, <DisassemblerInsn "mov" for 0x40383f>, <DisassemblerInsn "mov" for 0x403847>, <DisassemblerInsn "mov" for 0x40384e>, <DisassemblerInsn "mov" for 0x403856>, <DisassemblerInsn "mov" for 0x40385e>, <DisassemblerInsn "mov" for 0x403866>, <DisassemblerInsn "jl" for 0x40386d>]'}, {'block_Idx': 408, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40253d>, <DisassemblerInsn "mov" for 0x402544>, <DisassemblerInsn "mov" for 0x40254b>, <DisassemblerInsn "mov" for 0x402552>, <DisassemblerInsn "mov" for 0x402559>, <DisassemblerInsn "add" for 0x402561>, <DisassemblerInsn "and" for 0x402565>, <DisassemblerInsn "mov" for 0x402569>, <DisassemblerInsn "mov" for 0x402571>, <DisassemblerInsn "xor" for 0x402577>, <DisassemblerInsn "mov" for 0x402579>, <DisassemblerInsn "mov" for 0x402581>, <DisassemblerInsn "mov" for 0x402588>, <DisassemblerInsn "mov" for 0x40258f>, <DisassemblerInsn "mov" for 0x402596>, <DisassemblerInsn "mov" for 0x40259d>, <DisassemblerInsn "jmp" for 0x4025a5>]'}, {'block_Idx': 66, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40124f>]'}, {'block_Idx': 231, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ede>, <DisassemblerInsn "mov" for 0x401ee6>, <DisassemblerInsn "mov" for 0x401eed>, <DisassemblerInsn "mov" for 0x401ef4>, <DisassemblerInsn "sub" for 0x401ef9>, <DisassemblerInsn "mov" for 0x401efb>, <DisassemblerInsn "shl" for 0x401f02>, <DisassemblerInsn "mov" for 0x401f04>, <DisassemblerInsn "sar" for 0x401f0b>, <DisassemblerInsn "mov" for 0x401f0d>, <DisassemblerInsn "cmp" for 0x401f14>, <DisassemblerInsn "jle" for 0x401f17>]'}, {'block_Idx': 108, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4015db>]'}, {'block_Idx': 47, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fed>, <DisassemblerInsn "mov" for 0x400ff5>, <DisassemblerInsn "mov" for 0x400ffd>, <DisassemblerInsn "mov" for 0x400fff>, <DisassemblerInsn "mov" for 0x401002>, <DisassemblerInsn "mov" for 0x40100a>, <DisassemblerInsn "jmp" for 0x401011>]'}, {'block_Idx': 390, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402cf9>]'}, {'block_Idx': 59, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012bc>, <DisassemblerInsn "movsxd" for 0x4012c3>, <DisassemblerInsn "lea" for 0x4012c6>, <DisassemblerInsn "shl" for 0x4012cd>, <DisassemblerInsn "add" for 0x4012d1>, <DisassemblerInsn "mov" for 0x4012d4>, <DisassemblerInsn "jmp" for 0x4012dc>]'}, {'block_Idx': 79, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40157a>, <DisassemblerInsn "mov" for 0x401582>, <DisassemblerInsn "mov" for 0x40158a>, <DisassemblerInsn "cmp" for 0x401591>, <DisassemblerInsn "jge" for 0x401595>]'}, {'block_Idx': 139, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401984>, <DisassemblerInsn "cmp" for 0x40198b>, <DisassemblerInsn "je" for 0x40198e>]'}, {'block_Idx': 256, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40226b>, <DisassemblerInsn "mov" for 0x402273>, <DisassemblerInsn "mov" for 0x40227a>, <DisassemblerInsn "mov" for 0x402281>, <DisassemblerInsn "mov" for 0x402289>, <DisassemblerInsn "shr" for 0x402291>, <DisassemblerInsn "mov" for 0x402295>, <DisassemblerInsn "add" for 0x402298>, <DisassemblerInsn "mov" for 0x40229c>, <DisassemblerInsn "add" for 0x40229e>, <DisassemblerInsn "mov" for 0x4022a1>, <DisassemblerInsn "shl" for 0x4022a8>, <DisassemblerInsn "mov" for 0x4022ab>, <DisassemblerInsn "mov" for 0x4022b2>, <DisassemblerInsn "sar" for 0x4022ba>, <DisassemblerInsn "movsxd" for 0x4022be>, <DisassemblerInsn "mov" for 0x4022c1>, <DisassemblerInsn "ror" for 0x4022c5>, <DisassemblerInsn "ror" for 0x4022c9>, <DisassemblerInsn "ror" for 0x4022cc>, <DisassemblerInsn "shl" for 0x4022d0>, <DisassemblerInsn "mov" for 0x4022d2>, <DisassemblerInsn "mov" for 0x4022d9>, <DisassemblerInsn "xor" for 0x4022dc>, <DisassemblerInsn "sub" for 0x4022de>, <DisassemblerInsn "shr" for 0x4022e1>, <DisassemblerInsn "mov" for 0x4022e3>, <DisassemblerInsn "add" for 0x4022ea>, <DisassemblerInsn "mov" for 0x4022ec>, <DisassemblerInsn "or" for 0x4022ee>, <DisassemblerInsn "mov" for 0x4022f0>, <DisassemblerInsn "mov" for 0x4022f7>, <DisassemblerInsn "mov" for 0x4022ff>, <DisassemblerInsn "mov" for 0x402307>, <DisassemblerInsn "mov" for 0x40230e>, <DisassemblerInsn "mov" for 0x402315>, <DisassemblerInsn "sub" for 0x40231a>, <DisassemblerInsn "mov" for 0x40231c>, <DisassemblerInsn "shl" for 0x402323>, <DisassemblerInsn "mov" for 0x402325>, <DisassemblerInsn "sar" for 0x40232c>, <DisassemblerInsn "mov" for 0x40232e>, <DisassemblerInsn "mov" for 0x402336>, <DisassemblerInsn "add" for 0x402339>, <DisassemblerInsn "mov" for 0x40233d>, <DisassemblerInsn "cmp" for 0x402345>, <DisassemblerInsn "je" for 0x402348>]'}, {'block_Idx': 140, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401800>, <DisassemblerInsn "sub" for 0x401807>, <DisassemblerInsn "je" for 0x40180a>]'}, {'block_Idx': 58, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012de>, <DisassemblerInsn "mov" for 0x4012e5>, <DisassemblerInsn "mov" for 0x4012ed>, <DisassemblerInsn "xor" for 0x4012f1>, <DisassemblerInsn "lea" for 0x4012f3>, <DisassemblerInsn "mov" for 0x4012fa>, <DisassemblerInsn "call" for 0x4012fc>]'}, {'block_Idx': 41, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401254>, <DisassemblerInsn "mov" for 0x40125c>, <DisassemblerInsn "mov" for 0x401263>, <DisassemblerInsn "mov" for 0x40126a>, <DisassemblerInsn "mov" for 0x401271>, <DisassemblerInsn "mov" for 0x401278>, <DisassemblerInsn "shl" for 0x40127f>, <DisassemblerInsn "shr" for 0x401282>, <DisassemblerInsn "mov" for 0x401285>, <DisassemblerInsn "mov" for 0x40128c>, <DisassemblerInsn "cmp" for 0x401292>, <DisassemblerInsn "jne" for 0x401295>]'}, {'block_Idx': 80, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014fe>, <DisassemblerInsn "mov" for 0x401506>, <DisassemblerInsn "mov" for 0x40150e>, <DisassemblerInsn "mov" for 0x401516>, <DisassemblerInsn "mov" for 0x40151e>, <DisassemblerInsn "add" for 0x401525>, <DisassemblerInsn "mov" for 0x401528>, <DisassemblerInsn "shr" for 0x40152b>, <DisassemblerInsn "mov" for 0x40152f>, <DisassemblerInsn "ror" for 0x401533>, <DisassemblerInsn "ror" for 0x401537>, <DisassemblerInsn "ror" for 0x40153a>, <DisassemblerInsn "shr" for 0x40153e>, <DisassemblerInsn "add" for 0x401541>, <DisassemblerInsn "mov" for 0x401545>, <DisassemblerInsn "mov" for 0x401548>, <DisassemblerInsn "add" for 0x40154b>, <DisassemblerInsn "shl" for 0x40154e>, <DisassemblerInsn "movsxd" for 0x401552>, <DisassemblerInsn "add" for 0x401555>, <DisassemblerInsn "cmp" for 0x401558>, <DisassemblerInsn "mov" for 0x40155b>, <DisassemblerInsn "mov" for 0x401563>, <DisassemblerInsn "mov" for 0x40156b>, <DisassemblerInsn "jb" for 0x401572>]'}, {'block_Idx': 55, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400db2>, <DisassemblerInsn "mov" for 0x400dba>, <DisassemblerInsn "mov" for 0x400dc1>, <DisassemblerInsn "mov" for 0x400dc9>, <DisassemblerInsn "mov" for 0x400dcc>, <DisassemblerInsn "cdq" for 0x400dd1>, <DisassemblerInsn "idiv" for 0x400dd2>, <DisassemblerInsn "mov" for 0x400dd4>, <DisassemblerInsn "cdqe" for 0x400ddc>, <DisassemblerInsn "add" for 0x400dde>, <DisassemblerInsn "call" for 0x400de1>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008cb>, <DisassemblerInsn "mov" for 0x4008d3>, <DisassemblerInsn "mov" for 0x4008db>, <DisassemblerInsn "mov" for 0x4008e2>, <DisassemblerInsn "call" for 0x4008e9>]'}, {'block_Idx': 145, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018ac>, <DisassemblerInsn "mov" for 0x4018b3>, <DisassemblerInsn "mov" for 0x4018bb>, <DisassemblerInsn "sar" for 0x4018bd>, <DisassemblerInsn "movsxd" for 0x4018c0>, <DisassemblerInsn "mov" for 0x4018c3>, <DisassemblerInsn "ror" for 0x4018c6>, <DisassemblerInsn "ror" for 0x4018ca>, <DisassemblerInsn "ror" for 0x4018cd>, <DisassemblerInsn "and" for 0x4018d1>, <DisassemblerInsn "shl" for 0x4018d4>, <DisassemblerInsn "mov" for 0x4018d6>, <DisassemblerInsn "shr" for 0x4018dd>, <DisassemblerInsn "add" for 0x4018e0>, <DisassemblerInsn "imul" for 0x4018e3>, <DisassemblerInsn "mov" for 0x4018e6>, <DisassemblerInsn "mov" for 0x4018ed>, <DisassemblerInsn "jmp" for 0x4018f4>]'}, {'block_Idx': 112, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016a3>, <DisassemblerInsn "mov" for 0x4016aa>, <DisassemblerInsn "movsxd" for 0x4016b1>, <DisassemblerInsn "lea" for 0x4016b4>, <DisassemblerInsn "mov" for 0x4016bb>, <DisassemblerInsn "mov" for 0x4016be>, <DisassemblerInsn "mov" for 0x4016c5>, <DisassemblerInsn "mov" for 0x4016cc>, <DisassemblerInsn "mov" for 0x4016d4>, <DisassemblerInsn "mov" for 0x4016db>, <DisassemblerInsn "mov" for 0x4016e2>, <DisassemblerInsn "mov" for 0x4016e9>, <DisassemblerInsn "mov" for 0x4016f0>, <DisassemblerInsn "mov" for 0x4016f2>, <DisassemblerInsn "cmp" for 0x4016f9>, <DisassemblerInsn "jle" for 0x4016fb>]'}, {'block_Idx': 128, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e7c>, <DisassemblerInsn "mov" for 0x400e83>, <DisassemblerInsn "cmp" for 0x400e8a>, <DisassemblerInsn "mov" for 0x400e8d>, <DisassemblerInsn "jle" for 0x400e94>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403da1>, <DisassemblerInsn "mov" for 0x403da9>, <DisassemblerInsn "mov" for 0x403db1>, <DisassemblerInsn "mov" for 0x403db6>, <DisassemblerInsn "mov" for 0x403dbb>, <DisassemblerInsn "mov" for 0x403dc0>, <DisassemblerInsn "mov" for 0x403dc5>, <DisassemblerInsn "mov" for 0x403dca>, <DisassemblerInsn "mov" for 0x403dcf>, <DisassemblerInsn "mov" for 0x403dd4>, <DisassemblerInsn "mov" for 0x403dd9>, <DisassemblerInsn "mov" for 0x403dde>, <DisassemblerInsn "mov" for 0x403de3>, <DisassemblerInsn "mov" for 0x403de6>, <DisassemblerInsn "mov" for 0x403de9>, <DisassemblerInsn "mov" for 0x403deb>, <DisassemblerInsn "sar" for 0x403ded>, <DisassemblerInsn "sub" for 0x403def>, <DisassemblerInsn "mov" for 0x403df1>, <DisassemblerInsn "add" for 0x403df5>, <DisassemblerInsn "mov" for 0x403df7>, <DisassemblerInsn "mov" for 0x403df9>, <DisassemblerInsn "shl" for 0x403dfd>, <DisassemblerInsn "mov" for 0x403dff>, <DisassemblerInsn "cmp" for 0x403e03>, <DisassemblerInsn "je" for 0x403e06>]'}, {'block_Idx': 172, 'blockInsts': '[<DisassemblerInsn "lea" for 0x4038ff>, <DisassemblerInsn "lea" for 0x403906>, <DisassemblerInsn "mov" for 0x40390d>, <DisassemblerInsn "lea" for 0x403912>, <DisassemblerInsn "call" for 0x403919>]'}, {'block_Idx': 168, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401af2>, <DisassemblerInsn "mov" for 0x401afa>, <DisassemblerInsn "add" for 0x401b01>, <DisassemblerInsn "mov" for 0x401b04>, <DisassemblerInsn "mov" for 0x401b06>, <DisassemblerInsn "mov" for 0x401b0d>, <DisassemblerInsn "mov" for 0x401b15>, <DisassemblerInsn "mov" for 0x401b1d>, <DisassemblerInsn "mov" for 0x401b24>, <DisassemblerInsn "mov" for 0x401b2b>, <DisassemblerInsn "mov" for 0x401b2d>, <DisassemblerInsn "mov" for 0x401b34>, <DisassemblerInsn "mov" for 0x401b37>, <DisassemblerInsn "mov" for 0x401b3f>, <DisassemblerInsn "sar" for 0x401b41>, <DisassemblerInsn "movsxd" for 0x401b44>, <DisassemblerInsn "mov" for 0x401b47>, <DisassemblerInsn "mov" for 0x401b4b>, <DisassemblerInsn "and" for 0x401b4d>, <DisassemblerInsn "movzx" for 0x401b50>, <DisassemblerInsn "mov" for 0x401b54>, <DisassemblerInsn "add" for 0x401b5b>, <DisassemblerInsn "mov" for 0x401b5e>, <DisassemblerInsn "mov" for 0x401b65>, <DisassemblerInsn "mov" for 0x401b67>, <DisassemblerInsn "shr" for 0x401b6c>, <DisassemblerInsn "mov" for 0x401b6e>, <DisassemblerInsn "and" for 0x401b75>, <DisassemblerInsn "cmp" for 0x401b77>, <DisassemblerInsn "je" for 0x401b7a>]'}, {'block_Idx': 221, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4035bc>, <DisassemblerInsn "mov" for 0x4035c4>, <DisassemblerInsn "mov" for 0x4035cc>, <DisassemblerInsn "mov" for 0x4035d4>, <DisassemblerInsn "mov" for 0x4035db>, <DisassemblerInsn "mov" for 0x4035e3>, <DisassemblerInsn "mov" for 0x4035eb>, <DisassemblerInsn "mov" for 0x4035ed>, <DisassemblerInsn "mov" for 0x4035f5>, <DisassemblerInsn "mov" for 0x4035fc>, <DisassemblerInsn "mov" for 0x403603>, <DisassemblerInsn "mov" for 0x40360b>, <DisassemblerInsn "mov" for 0x403613>, <DisassemblerInsn "jmp" for 0x40361b>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d0a>, <DisassemblerInsn "mov" for 0x400d12>, <DisassemblerInsn "mov" for 0x400d1a>, <DisassemblerInsn "mov" for 0x400d22>, <DisassemblerInsn "mov" for 0x400d2a>, <DisassemblerInsn "mov" for 0x400d32>, <DisassemblerInsn "mov" for 0x400d3a>, <DisassemblerInsn "add" for 0x400d3d>, <DisassemblerInsn "sar" for 0x400d40>, <DisassemblerInsn "xor" for 0x400d43>, <DisassemblerInsn "cmp" for 0x400d46>, <DisassemblerInsn "cmovl" for 0x400d4a>, <DisassemblerInsn "xor" for 0x400d4e>, <DisassemblerInsn "cmp" for 0x400d51>, <DisassemblerInsn "mov" for 0x400d55>, <DisassemblerInsn "cmovl" for 0x400d58>, <DisassemblerInsn "xor" for 0x400d5c>, <DisassemblerInsn "cmp" for 0x400d5f>, <DisassemblerInsn "cmovl" for 0x400d63>, <DisassemblerInsn "mov" for 0x400d67>, <DisassemblerInsn "mov" for 0x400d6a>, <DisassemblerInsn "movsxd" for 0x400d6d>, <DisassemblerInsn "add" for 0x400d70>, <DisassemblerInsn "mov" for 0x400d73>, <DisassemblerInsn "mov" for 0x400d76>, <DisassemblerInsn "jmp" for 0x400d7c>]'}, {'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400804>, <DisassemblerInsn "mov" for 0x40080b>, <DisassemblerInsn "mov" for 0x400812>, <DisassemblerInsn "mov" for 0x400819>, <DisassemblerInsn "add" for 0x40081b>, <DisassemblerInsn "mov" for 0x40081d>, <DisassemblerInsn "mov" for 0x400824>, <DisassemblerInsn "cmp" for 0x400829>, <DisassemblerInsn "mov" for 0x40082b>, <DisassemblerInsn "jb" for 0x400832>]'}, {'block_Idx': 238, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f44>, <DisassemblerInsn "mov" for 0x401f4c>, <DisassemblerInsn "mov" for 0x401f54>, <DisassemblerInsn "mov" for 0x401f5c>, <DisassemblerInsn "mov" for 0x401f63>, <DisassemblerInsn "add" for 0x401f66>, <DisassemblerInsn "mov" for 0x401f6a>, <DisassemblerInsn "movsxd" for 0x401f72>, <DisassemblerInsn "cmp" for 0x401f75>, <DisassemblerInsn "mov" for 0x401f78>, <DisassemblerInsn "jl" for 0x401f80>]'}, {'block_Idx': 382, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4025ba>, <DisassemblerInsn "mov" for 0x4025c1>, <DisassemblerInsn "mov" for 0x4025c8>, <DisassemblerInsn "mov" for 0x4025cf>, <DisassemblerInsn "mov" for 0x4025d6>, <DisassemblerInsn "add" for 0x4025d8>, <DisassemblerInsn "mov" for 0x4025dc>, <DisassemblerInsn "and" for 0x4025e4>, <DisassemblerInsn "mov" for 0x4025e8>, <DisassemblerInsn "mov" for 0x4025f0>, <DisassemblerInsn "cmp" for 0x4025f5>, <DisassemblerInsn "mov" for 0x4025f8>, <DisassemblerInsn "mov" for 0x402600>, <DisassemblerInsn "mov" for 0x402607>, <DisassemblerInsn "mov" for 0x40260e>, <DisassemblerInsn "je" for 0x402615>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b71>, <DisassemblerInsn "mov" for 0x400b79>, <DisassemblerInsn "mov" for 0x400b81>, <DisassemblerInsn "mov" for 0x400b89>, <DisassemblerInsn "mov" for 0x400b8f>, <DisassemblerInsn "add" for 0x400b92>, <DisassemblerInsn "mov" for 0x400b96>, <DisassemblerInsn "mov" for 0x400b9e>, <DisassemblerInsn "add" for 0x400ba1>, <DisassemblerInsn "mov" for 0x400ba5>, <DisassemblerInsn "mov" for 0x400bad>, <DisassemblerInsn "mov" for 0x400bb0>, <DisassemblerInsn "mov" for 0x400bb8>, <DisassemblerInsn "add" for 0x400bbb>, <DisassemblerInsn "mov" for 0x400bbf>, <DisassemblerInsn "mov" for 0x400bc7>, <DisassemblerInsn "add" for 0x400bca>, <DisassemblerInsn "mov" for 0x400bce>, <DisassemblerInsn "mov" for 0x400bd6>, <DisassemblerInsn "add" for 0x400bd9>, <DisassemblerInsn "mov" for 0x400bdd>, <DisassemblerInsn "mov" for 0x400be5>, <DisassemblerInsn "add" for 0x400be8>, <DisassemblerInsn "mov" for 0x400bef>, <DisassemblerInsn "add" for 0x400bf7>, <DisassemblerInsn "mov" for 0x400bfd>, <DisassemblerInsn "mov" for 0x400c05>, <DisassemblerInsn "mov" for 0x400c0a>, <DisassemblerInsn "mov" for 0x400c12>, <DisassemblerInsn "mov" for 0x400c19>, <DisassemblerInsn "mov" for 0x400c21>, <DisassemblerInsn "mov" for 0x400c29>, <DisassemblerInsn "mov" for 0x400c30>, <DisassemblerInsn "mov" for 0x400c38>, <DisassemblerInsn "sar" for 0x400c3a>, <DisassemblerInsn "movsxd" for 0x400c3d>, <DisassemblerInsn "mov" for 0x400c40>, <DisassemblerInsn "mov" for 0x400c43>, <DisassemblerInsn "and" for 0x400c45>, <DisassemblerInsn "mov" for 0x400c48>, <DisassemblerInsn "movzx" for 0x400c4f>, <DisassemblerInsn "mov" for 0x400c52>, <DisassemblerInsn "mov" for 0x400c59>, <DisassemblerInsn "add" for 0x400c5b>, <DisassemblerInsn "mov" for 0x400c5e>, <DisassemblerInsn "sar" for 0x400c60>, <DisassemblerInsn "movsxd" for 0x400c63>, <DisassemblerInsn "mov" for 0x400c66>, <DisassemblerInsn "ror" for 0x400c69>, <DisassemblerInsn "ror" for 0x400c6d>, <DisassemblerInsn "ror" for 0x400c70>, <DisassemblerInsn "and" for 0x400c74>, <DisassemblerInsn "shl" for 0x400c77>, <DisassemblerInsn "mov" for 0x400c79>, <DisassemblerInsn "shr" for 0x400c80>, <DisassemblerInsn "mov" for 0x400c83>, <DisassemblerInsn "mov" for 0x400c8a>, <DisassemblerInsn "add" for 0x400c8c>, <DisassemblerInsn "sar" for 0x400c8f>, <DisassemblerInsn "movsxd" for 0x400c92>, <DisassemblerInsn "mov" for 0x400c95>, <DisassemblerInsn "ror" for 0x400c98>, <DisassemblerInsn "ror" for 0x400c9c>, <DisassemblerInsn "ror" for 0x400c9f>, <DisassemblerInsn "shl" for 0x400ca3>, <DisassemblerInsn "mov" for 0x400ca5>, <DisassemblerInsn "shr" for 0x400cac>, <DisassemblerInsn "mov" for 0x400caf>, <DisassemblerInsn "add" for 0x400cb2>, <DisassemblerInsn "shl" for 0x400cb6>, <DisassemblerInsn "sar" for 0x400cb9>, <DisassemblerInsn "movsxd" for 0x400cbd>, <DisassemblerInsn "mov" for 0x400cc0>, <DisassemblerInsn "ror" for 0x400cc4>, <DisassemblerInsn "ror" for 0x400cc8>, <DisassemblerInsn "ror" for 0x400ccb>, <DisassemblerInsn "shl" for 0x400ccf>, <DisassemblerInsn "mov" for 0x400cd1>, <DisassemblerInsn "shr" for 0x400cd9>, <DisassemblerInsn "add" for 0x400cdc>, <DisassemblerInsn "mov" for 0x400cdf>, <DisassemblerInsn "mov" for 0x400ce6>, <DisassemblerInsn "or" for 0x400ce8>, <DisassemblerInsn "mov" for 0x400cea>, <DisassemblerInsn "shl" for 0x400cf1>, <DisassemblerInsn "mov" for 0x400cf4>, <DisassemblerInsn "add" for 0x400cfb>, <DisassemblerInsn "mov" for 0x400cfd>]'}, {'block_Idx': 102, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016cc>, <DisassemblerInsn "mov" for 0x4016d4>, <DisassemblerInsn "mov" for 0x4016db>, <DisassemblerInsn "mov" for 0x4016e2>, <DisassemblerInsn "mov" for 0x4016e9>, <DisassemblerInsn "mov" for 0x4016f0>, <DisassemblerInsn "mov" for 0x4016f2>, <DisassemblerInsn "cmp" for 0x4016f9>, <DisassemblerInsn "jle" for 0x4016fb>]'}, {'block_Idx': 211, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403c57>, <DisassemblerInsn "mov" for 0x403c5f>, <DisassemblerInsn "mov" for 0x403c66>, <DisassemblerInsn "mov" for 0x403c6e>, <DisassemblerInsn "mov" for 0x403c75>, <DisassemblerInsn "mov" for 0x403c7c>, <DisassemblerInsn "mov" for 0x403c84>, <DisassemblerInsn "shl" for 0x403c88>, <DisassemblerInsn "mov" for 0x403c8a>, <DisassemblerInsn "mov" for 0x403c8c>, <DisassemblerInsn "mov" for 0x403c8f>, <DisassemblerInsn "add" for 0x403c92>, <DisassemblerInsn "mov" for 0x403c96>, <DisassemblerInsn "mov" for 0x403c9a>, <DisassemblerInsn "mov" for 0x403ca1>, <DisassemblerInsn "mov" for 0x403ca9>, <DisassemblerInsn "mov" for 0x403cb1>, <DisassemblerInsn "mov" for 0x403cb9>, <DisassemblerInsn "mov" for 0x403cc0>, <DisassemblerInsn "mov" for 0x403cc8>, <DisassemblerInsn "add" for 0x403cd0>, <DisassemblerInsn "movsxd" for 0x403cd4>, <DisassemblerInsn "cmp" for 0x403cd7>, <DisassemblerInsn "mov" for 0x403cda>, <DisassemblerInsn "mov" for 0x403cdc>, <DisassemblerInsn "mov" for 0x403ce3>, <DisassemblerInsn "mov" for 0x403ceb>, <DisassemblerInsn "mov" for 0x403cf3>, <DisassemblerInsn "mov" for 0x403cfb>, <DisassemblerInsn "jl" for 0x403d02>]'}, {'block_Idx': 144, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401990>, <DisassemblerInsn "mov" for 0x401997>, <DisassemblerInsn "mov" for 0x40199f>, <DisassemblerInsn "xor" for 0x4019a2>, <DisassemblerInsn "lea" for 0x4019a4>, <DisassemblerInsn "mov" for 0x4019ab>, <DisassemblerInsn "call" for 0x4019ad>]'}, {'block_Idx': 63, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013fa>, <DisassemblerInsn "mov" for 0x401402>, <DisassemblerInsn "mov" for 0x40140a>, <DisassemblerInsn "ror" for 0x40140d>, <DisassemblerInsn "ror" for 0x401411>, <DisassemblerInsn "ror" for 0x401414>, <DisassemblerInsn "shr" for 0x401418>, <DisassemblerInsn "mov" for 0x40141b>, <DisassemblerInsn "mov" for 0x401422>, <DisassemblerInsn "mov" for 0x401428>, <DisassemblerInsn "xor" for 0x40142a>, <DisassemblerInsn "shr" for 0x401430>, <DisassemblerInsn "cmp" for 0x401433>, <DisassemblerInsn "cmovb" for 0x401439>, <DisassemblerInsn "mov" for 0x40143c>, <DisassemblerInsn "xor" for 0x401441>, <DisassemblerInsn "cmp" for 0x401443>, <DisassemblerInsn "cmovb" for 0x401449>, <DisassemblerInsn "mov" for 0x40144c>, <DisassemblerInsn "and" for 0x40144e>, <DisassemblerInsn "mov" for 0x401454>, <DisassemblerInsn "shr" for 0x401456>, <DisassemblerInsn "mov" for 0x401459>, <DisassemblerInsn "or" for 0x40145b>, <DisassemblerInsn "cmp" for 0x40145e>, <DisassemblerInsn "cmove" for 0x401461>, <DisassemblerInsn "cmp" for 0x401464>, <DisassemblerInsn "cmove" for 0x401467>, <DisassemblerInsn "mov" for 0x40146a>, <DisassemblerInsn "mov" for 0x40146c>, <DisassemblerInsn "mov" for 0x40146e>, <DisassemblerInsn "movzx" for 0x401475>, <DisassemblerInsn "add" for 0x401479>, <DisassemblerInsn "mov" for 0x40147b>, <DisassemblerInsn "sub" for 0x401480>, <DisassemblerInsn "mov" for 0x401482>, <DisassemblerInsn "cmp" for 0x401489>, <DisassemblerInsn "je" for 0x40148c>]'}, {'block_Idx': 44, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401205>, <DisassemblerInsn "add" for 0x40120c>, <DisassemblerInsn "mov" for 0x40120f>, <DisassemblerInsn "mov" for 0x401214>, <DisassemblerInsn "mov" for 0x40121b>, <DisassemblerInsn "jmp" for 0x401222>]'}, {'block_Idx': 159, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4019b2>]'}, {'block_Idx': 42, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4011d0>]'}, {'block_Idx': 62, 'blockInsts': '[<DisassemblerInsn "sub" for 0x400110>, <DisassemblerInsn "mov" for 0x400114>, <DisassemblerInsn "mov" for 0x400119>, <DisassemblerInsn "mov" for 0x40011e>, <DisassemblerInsn "mov" for 0x400123>, <DisassemblerInsn "ror" for 0x400126>, <DisassemblerInsn "ror" for 0x40012a>, <DisassemblerInsn "ror" for 0x40012d>, <DisassemblerInsn "shr" for 0x400131>, <DisassemblerInsn "mov" for 0x400134>, <DisassemblerInsn "mov" for 0x400138>, <DisassemblerInsn "cmp" for 0x40013a>, <DisassemblerInsn "jge" for 0x40013d>]'}, {'block_Idx': 464, 'blockInsts': '[<DisassemblerInsn "mov" for 0x404f2e>, <DisassemblerInsn "mov" for 0x404f32>, <DisassemblerInsn "mov" for 0x404f38>, <DisassemblerInsn "sar" for 0x404f3e>, <DisassemblerInsn "mov" for 0x404f40>, <DisassemblerInsn "movsxd" for 0x404f46>, <DisassemblerInsn "add" for 0x404f49>, <DisassemblerInsn "mov" for 0x404f4c>, <DisassemblerInsn "xor" for 0x404f4f>, <DisassemblerInsn "mov" for 0x404f51>, <DisassemblerInsn "mov" for 0x404f57>, <DisassemblerInsn "lea" for 0x404f5d>, <DisassemblerInsn "pop" for 0x404f61>, <DisassemblerInsn "pop" for 0x404f62>, <DisassemblerInsn "ret" for 0x404f63>]'}, {'block_Idx': 129, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401943>, <DisassemblerInsn "mov" for 0x40194b>, <DisassemblerInsn "mov" for 0x40194e>, <DisassemblerInsn "mov" for 0x401956>, <DisassemblerInsn "mov" for 0x401959>, <DisassemblerInsn "mov" for 0x401961>, <DisassemblerInsn "mov" for 0x401963>, <DisassemblerInsn "mov" for 0x40196a>, <DisassemblerInsn "cdq" for 0x40196f>, <DisassemblerInsn "idiv" for 0x401970>, <DisassemblerInsn "mov" for 0x401972>, <DisassemblerInsn "movsxd" for 0x40197a>, <DisassemblerInsn "xor" for 0x40197d>, <DisassemblerInsn "call" for 0x40197f>]'}, {'block_Idx': 110, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401779>, <DisassemblerInsn "cmp" for 0x401780>, <DisassemblerInsn "jne" for 0x401783>]'}, {'block_Idx': 391, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4027c6>, <DisassemblerInsn "mov" for 0x4027ce>, <DisassemblerInsn "mov" for 0x4027d5>, <DisassemblerInsn "mov" for 0x4027dd>, <DisassemblerInsn "mov" for 0x4027e5>, <DisassemblerInsn "mov" for 0x4027ed>, <DisassemblerInsn "add" for 0x4027f5>, <DisassemblerInsn "mov" for 0x4027f8>, <DisassemblerInsn "mov" for 0x4027ff>, <DisassemblerInsn "add" for 0x402802>, <DisassemblerInsn "mov" for 0x402806>, <DisassemblerInsn "mov" for 0x40280d>, <DisassemblerInsn "add" for 0x402811>, <DisassemblerInsn "mov" for 0x402815>, <DisassemblerInsn "mov" for 0x40281c>, <DisassemblerInsn "add" for 0x402820>, <DisassemblerInsn "mov" for 0x402824>, <DisassemblerInsn "mov" for 0x40282b>, <DisassemblerInsn "add" for 0x40282f>, <DisassemblerInsn "mov" for 0x402833>, <DisassemblerInsn "add" for 0x40283b>, <DisassemblerInsn "mov" for 0x40283f>, <DisassemblerInsn "cmp" for 0x402847>, <DisassemblerInsn "mov" for 0x40284a>, <DisassemblerInsn "mov" for 0x40284d>, <DisassemblerInsn "mov" for 0x402855>, <DisassemblerInsn "mov" for 0x402857>, <DisassemblerInsn "mov" for 0x40285e>, <DisassemblerInsn "mov" for 0x402866>, <DisassemblerInsn "mov" for 0x40286e>, <DisassemblerInsn "je" for 0x402875>]'}, {'block_Idx': 378, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c8d>, <DisassemblerInsn "mov" for 0x402c95>, <DisassemblerInsn "mov" for 0x402c9c>, <DisassemblerInsn "mov" for 0x402ca4>, <DisassemblerInsn "mov" for 0x402cac>, <DisassemblerInsn "add" for 0x402cb4>, <DisassemblerInsn "mov" for 0x402cb7>, <DisassemblerInsn "mov" for 0x402cbe>, <DisassemblerInsn "add" for 0x402cc1>, <DisassemblerInsn "mov" for 0x402cc5>, <DisassemblerInsn "add" for 0x402ccd>, <DisassemblerInsn "mov" for 0x402cd1>, <DisassemblerInsn "cmp" for 0x402cd9>, <DisassemblerInsn "mov" for 0x402cdc>, <DisassemblerInsn "mov" for 0x402ce4>, <DisassemblerInsn "mov" for 0x402ceb>, <DisassemblerInsn "je" for 0x402cf3>]'}, {'block_Idx': 119, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017b6>, <DisassemblerInsn "mov" for 0x4017bd>, <DisassemblerInsn "movsxd" for 0x4017c4>, <DisassemblerInsn "lea" for 0x4017c7>, <DisassemblerInsn "mov" for 0x4017ce>, <DisassemblerInsn "mov" for 0x4017d1>, <DisassemblerInsn "mov" for 0x4017d8>, <DisassemblerInsn "jmp" for 0x4017df>]'}, {'block_Idx': 365, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4025aa>, <DisassemblerInsn "cmp" for 0x4025b1>, <DisassemblerInsn "jle" for 0x4025b4>]'}, {'block_Idx': 207, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4034c6>, <DisassemblerInsn "mov" for 0x4034ce>, <DisassemblerInsn "mov" for 0x4034d6>, <DisassemblerInsn "mov" for 0x4034de>, <DisassemblerInsn "mov" for 0x4034e5>, <DisassemblerInsn "add" for 0x4034e8>, <DisassemblerInsn "mov" for 0x4034ec>, <DisassemblerInsn "mov" for 0x4034ee>, <DisassemblerInsn "mov" for 0x4034f0>, <DisassemblerInsn "mov" for 0x4034f2>, <DisassemblerInsn "mov" for 0x4034f9>, <DisassemblerInsn "mov" for 0x403500>, <DisassemblerInsn "mov" for 0x403508>, <DisassemblerInsn "jmp" for 0x403510>]'}, {'block_Idx': 350, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402433>, <DisassemblerInsn "mov" for 0x40243a>, <DisassemblerInsn "mov" for 0x402442>, <DisassemblerInsn "mov" for 0x402449>, <DisassemblerInsn "sub" for 0x402450>, <DisassemblerInsn "mov" for 0x402452>, <DisassemblerInsn "add" for 0x402454>, <DisassemblerInsn "mov" for 0x402457>, <DisassemblerInsn "mov" for 0x402459>, <DisassemblerInsn "mov" for 0x40245c>, <DisassemblerInsn "add" for 0x402463>, <DisassemblerInsn "mov" for 0x402465>, <DisassemblerInsn "cmp" for 0x40246c>, <DisassemblerInsn "je" for 0x40246f>]'}, {'block_Idx': 200, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d3b>, <DisassemblerInsn "mov" for 0x401d43>, <DisassemblerInsn "lea" for 0x401d46>, <DisassemblerInsn "xor" for 0x401d4d>, <DisassemblerInsn "call" for 0x401d4f>]'}, {'block_Idx': 130, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017f2>, <DisassemblerInsn "sub" for 0x4017f9>, <DisassemblerInsn "je" for 0x4017fc>]'}, {'block_Idx': 203, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403a0f>, <DisassemblerInsn "mov" for 0x403a17>, <DisassemblerInsn "mov" for 0x403a1e>, <DisassemblerInsn "mov" for 0x403a26>, <DisassemblerInsn "mov" for 0x403a2d>, <DisassemblerInsn "mov" for 0x403a35>, <DisassemblerInsn "mov" for 0x403a3c>, <DisassemblerInsn "mov" for 0x403a44>, <DisassemblerInsn "sub" for 0x403a48>, <DisassemblerInsn "shl" for 0x403a4b>, <DisassemblerInsn "mov" for 0x403a4d>, <DisassemblerInsn "mov" for 0x403a4f>, <DisassemblerInsn "mov" for 0x403a52>, <DisassemblerInsn "add" for 0x403a55>, <DisassemblerInsn "mov" for 0x403a59>, <DisassemblerInsn "mov" for 0x403a5d>, <DisassemblerInsn "mov" for 0x403a64>, <DisassemblerInsn "mov" for 0x403a6c>, <DisassemblerInsn "mov" for 0x403a74>, <DisassemblerInsn "mov" for 0x403a7c>, <DisassemblerInsn "mov" for 0x403a83>, <DisassemblerInsn "mov" for 0x403a8b>, <DisassemblerInsn "add" for 0x403a93>, <DisassemblerInsn "movsxd" for 0x403a97>, <DisassemblerInsn "cmp" for 0x403a9a>, <DisassemblerInsn "mov" for 0x403a9d>, <DisassemblerInsn "mov" for 0x403a9f>, <DisassemblerInsn "mov" for 0x403aa6>, <DisassemblerInsn "mov" for 0x403aae>, <DisassemblerInsn "mov" for 0x403ab6>, <DisassemblerInsn "mov" for 0x403abe>, <DisassemblerInsn "jl" for 0x403ac5>]'}, {'block_Idx': 186, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403d3a>, <DisassemblerInsn "mov" for 0x403d42>, <DisassemblerInsn "mov" for 0x403d4a>, <DisassemblerInsn "mov" for 0x403d51>, <DisassemblerInsn "mov" for 0x403d59>, <DisassemblerInsn "mov" for 0x403d5d>, <DisassemblerInsn "mov" for 0x403d62>, <DisassemblerInsn "mov" for 0x403d66>, <DisassemblerInsn "xor" for 0x403d6b>, <DisassemblerInsn "mov" for 0x403d6d>, <DisassemblerInsn "mov" for 0x403d71>, <DisassemblerInsn "mov" for 0x403d76>, <DisassemblerInsn "mov" for 0x403d7b>, <DisassemblerInsn "jmp" for 0x403d80>]'}, {'block_Idx': 395, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40261b>, <DisassemblerInsn "mov" for 0x402622>, <DisassemblerInsn "mov" for 0x402629>, <DisassemblerInsn "mov" for 0x402630>, <DisassemblerInsn "and" for 0x402638>, <DisassemblerInsn "mov" for 0x40263c>, <DisassemblerInsn "mov" for 0x402644>, <DisassemblerInsn "xor" for 0x402649>, <DisassemblerInsn "mov" for 0x40264b>, <DisassemblerInsn "mov" for 0x402653>, <DisassemblerInsn "mov" for 0x40265a>, <DisassemblerInsn "mov" for 0x402661>, <DisassemblerInsn "mov" for 0x402668>, <DisassemblerInsn "jmp" for 0x402670>]'}, {'block_Idx': 134, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401865>, <DisassemblerInsn "mov" for 0x40186c>, <DisassemblerInsn "mov" for 0x401874>, <DisassemblerInsn "sar" for 0x401876>, <DisassemblerInsn "movsxd" for 0x401879>, <DisassemblerInsn "mov" for 0x40187c>, <DisassemblerInsn "ror" for 0x40187f>, <DisassemblerInsn "ror" for 0x401883>, <DisassemblerInsn "ror" for 0x401886>, <DisassemblerInsn "and" for 0x40188a>, <DisassemblerInsn "shl" for 0x40188d>, <DisassemblerInsn "mov" for 0x40188f>, <DisassemblerInsn "shr" for 0x401896>, <DisassemblerInsn "add" for 0x401899>, <DisassemblerInsn "mov" for 0x40189c>, <DisassemblerInsn "mov" for 0x4018a3>, <DisassemblerInsn "jmp" for 0x4018aa>]'}, {'block_Idx': 177, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403adc>, <DisassemblerInsn "mov" for 0x403ae4>, <DisassemblerInsn "mov" for 0x403ae6>, <DisassemblerInsn "cmp" for 0x403aed>, <DisassemblerInsn "mov" for 0x403af0>, <DisassemblerInsn "jle" for 0x403af7>]'}, {'block_Idx': 216, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x403acb>]'}, {'block_Idx': 230, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4032e6>, <DisassemblerInsn "mov" for 0x4032ee>, <DisassemblerInsn "mov" for 0x4032f6>, <DisassemblerInsn "mov" for 0x4032fe>, <DisassemblerInsn "mov" for 0x403306>, <DisassemblerInsn "mov" for 0x40330d>, <DisassemblerInsn "mov" for 0x403315>, <DisassemblerInsn "mov" for 0x40331d>, <DisassemblerInsn "mov" for 0x403325>, <DisassemblerInsn "mov" for 0x40332a>, <DisassemblerInsn "shl" for 0x40332e>, <DisassemblerInsn "mov" for 0x403331>, <DisassemblerInsn "mov" for 0x403338>, <DisassemblerInsn "mov" for 0x403340>, <DisassemblerInsn "mov" for 0x403344>, <DisassemblerInsn "or" for 0x403347>, <DisassemblerInsn "mov" for 0x40334b>, <DisassemblerInsn "mov" for 0x403353>, <DisassemblerInsn "mov" for 0x403358>, <DisassemblerInsn "shl" for 0x40335c>, <DisassemblerInsn "mov" for 0x40335f>, <DisassemblerInsn "mov" for 0x403366>, <DisassemblerInsn "mov" for 0x40336e>, <DisassemblerInsn "mov" for 0x403373>, <DisassemblerInsn "or" for 0x403376>, <DisassemblerInsn "mov" for 0x40337a>, <DisassemblerInsn "mov" for 0x403382>, <DisassemblerInsn "mov" for 0x403387>, <DisassemblerInsn "shl" for 0x40338b>, <DisassemblerInsn "mov" for 0x40338e>, <DisassemblerInsn "mov" for 0x403395>, <DisassemblerInsn "mov" for 0x40339d>, <DisassemblerInsn "or" for 0x4033a2>, <DisassemblerInsn "mov" for 0x4033a6>, <DisassemblerInsn "mov" for 0x4033ae>, <DisassemblerInsn "mov" for 0x4033b3>, <DisassemblerInsn "shl" for 0x4033b7>, <DisassemblerInsn "mov" for 0x4033b9>, <DisassemblerInsn "mov" for 0x4033c1>, <DisassemblerInsn "mov" for 0x4033c8>, <DisassemblerInsn "mov" for 0x4033cc>, <DisassemblerInsn "add" for 0x4033cf>, <DisassemblerInsn "mov" for 0x4033d3>, <DisassemblerInsn "mov" for 0x4033db>, <DisassemblerInsn "add" for 0x4033e0>, <DisassemblerInsn "mov" for 0x4033e4>, <DisassemblerInsn "add" for 0x4033ec>, <DisassemblerInsn "mov" for 0x4033f0>, <DisassemblerInsn "cmp" for 0x4033f8>, <DisassemblerInsn "mov" for 0x4033fb>, <DisassemblerInsn "mov" for 0x4033fe>, <DisassemblerInsn "mov" for 0x403406>, <DisassemblerInsn "mov" for 0x403409>, <DisassemblerInsn "mov" for 0x403411>, <DisassemblerInsn "mov" for 0x403419>, <DisassemblerInsn "mov" for 0x40341c>, <DisassemblerInsn "mov" for 0x403424>, <DisassemblerInsn "mov" for 0x40342c>, <DisassemblerInsn "je" for 0x403434>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007b7>, <DisassemblerInsn "mov" for 0x4007be>, <DisassemblerInsn "mov" for 0x4007c6>, <DisassemblerInsn "cmp" for 0x4007cd>, <DisassemblerInsn "mov" for 0x4007d3>, <DisassemblerInsn "je" for 0x4007da>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a78>, <DisassemblerInsn "mov" for 0x400a80>, <DisassemblerInsn "mov" for 0x400a87>, <DisassemblerInsn "mov" for 0x400a8e>, <DisassemblerInsn "mov" for 0x400a96>, <DisassemblerInsn "mov" for 0x400a9d>, <DisassemblerInsn "mov" for 0x400aa4>, <DisassemblerInsn "shl" for 0x400aa6>, <DisassemblerInsn "xor" for 0x400aa9>, <DisassemblerInsn "cmp" for 0x400aab>, <DisassemblerInsn "cmovl" for 0x400aae>, <DisassemblerInsn "mov" for 0x400ab2>, <DisassemblerInsn "xor" for 0x400aba>, <DisassemblerInsn "cmp" for 0x400abc>, <DisassemblerInsn "cmovl" for 0x400abf>, <DisassemblerInsn "xor" for 0x400ac2>, <DisassemblerInsn "cmp" for 0x400ac5>, <DisassemblerInsn "mov" for 0x400ac8>, <DisassemblerInsn "cmovl" for 0x400aca>, <DisassemblerInsn "mov" for 0x400ace>, <DisassemblerInsn "add" for 0x400ad1>, <DisassemblerInsn "mov" for 0x400ad5>, <DisassemblerInsn "mov" for 0x400add>, <DisassemblerInsn "mov" for 0x400ae1>, <DisassemblerInsn "add" for 0x400ae4>, <DisassemblerInsn "mov" for 0x400ae8>, <DisassemblerInsn "mov" for 0x400af0>, <DisassemblerInsn "mov" for 0x400af3>, <DisassemblerInsn "add" for 0x400af5>, <DisassemblerInsn "mov" for 0x400af8>, <DisassemblerInsn "add" for 0x400afb>, <DisassemblerInsn "mov" for 0x400aff>, <DisassemblerInsn "mov" for 0x400b07>, <DisassemblerInsn "mov" for 0x400b0b>, <DisassemblerInsn "add" for 0x400b0e>, <DisassemblerInsn "mov" for 0x400b12>, <DisassemblerInsn "mov" for 0x400b1a>, <DisassemblerInsn "cmp" for 0x400b21>, <DisassemblerInsn "jl" for 0x400b24>]'}, {'block_Idx': 50, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401297>, <DisassemblerInsn "add" for 0x40129f>, <DisassemblerInsn "mov" for 0x4012a3>, <DisassemblerInsn "jmp" for 0x4012ab>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401306>, <DisassemblerInsn "mov" for 0x40130e>, <DisassemblerInsn "mov" for 0x401316>, <DisassemblerInsn "mov" for 0x40131e>, <DisassemblerInsn "mov" for 0x401326>, <DisassemblerInsn "mov" for 0x401328>, <DisassemblerInsn "cmp" for 0x40132f>, <DisassemblerInsn "setg" for 0x401332>, <DisassemblerInsn "mov" for 0x401336>, <DisassemblerInsn "mov" for 0x40133e>, <DisassemblerInsn "add" for 0x401341>, <DisassemblerInsn "mov" for 0x401345>, <DisassemblerInsn "mov" for 0x40134d>, <DisassemblerInsn "mov" for 0x401351>, <DisassemblerInsn "mov" for 0x401357>, <DisassemblerInsn "cmp" for 0x40135d>, <DisassemblerInsn "cmovg" for 0x401360>, <DisassemblerInsn "mov" for 0x401364>, <DisassemblerInsn "mov" for 0x40136a>, <DisassemblerInsn "cmp" for 0x401370>, <DisassemblerInsn "cmovg" for 0x401373>, <DisassemblerInsn "and" for 0x401377>, <DisassemblerInsn "movzx" for 0x40137b>, <DisassemblerInsn "mov" for 0x40137f>, <DisassemblerInsn "sub" for 0x401383>, <DisassemblerInsn "mov" for 0x401386>, <DisassemblerInsn "mov" for 0x401389>, <DisassemblerInsn "mov" for 0x401391>, <DisassemblerInsn "add" for 0x401394>, <DisassemblerInsn "mov" for 0x401398>, <DisassemblerInsn "mov" for 0x4013a0>, <DisassemblerInsn "mov" for 0x4013a4>, <DisassemblerInsn "add" for 0x4013a7>, <DisassemblerInsn "mov" for 0x4013ab>, <DisassemblerInsn "mov" for 0x4013b3>, <DisassemblerInsn "mov" for 0x4013b7>, <DisassemblerInsn "mov" for 0x4013bd>, <DisassemblerInsn "add" for 0x4013c0>, <DisassemblerInsn "mov" for 0x4013c4>, <DisassemblerInsn "mov" for 0x4013cc>, <DisassemblerInsn "mov" for 0x4013cf>, <DisassemblerInsn "mov" for 0x4013d1>, <DisassemblerInsn "and" for 0x4013d7>, <DisassemblerInsn "cmp" for 0x4013d9>, <DisassemblerInsn "je" for 0x4013db>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x403873>]'}, {'block_Idx': 396, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024cf>, <DisassemblerInsn "mov" for 0x4024d6>, <DisassemblerInsn "mov" for 0x4024dd>, <DisassemblerInsn "mov" for 0x4024e4>, <DisassemblerInsn "mov" for 0x4024eb>, <DisassemblerInsn "mov" for 0x4024f3>, <DisassemblerInsn "mov" for 0x4024f6>, <DisassemblerInsn "and" for 0x4024fe>, <DisassemblerInsn "mov" for 0x402502>, <DisassemblerInsn "mov" for 0x40250a>, <DisassemblerInsn "cmp" for 0x40250f>, <DisassemblerInsn "mov" for 0x402513>, <DisassemblerInsn "mov" for 0x40251b>, <DisassemblerInsn "mov" for 0x402522>, <DisassemblerInsn "mov" for 0x402529>, <DisassemblerInsn "mov" for 0x402530>, <DisassemblerInsn "je" for 0x402537>]'}, {'block_Idx': 142, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400eb4>, <DisassemblerInsn "mov" for 0x400ebc>, <DisassemblerInsn "mov" for 0x400ebf>, <DisassemblerInsn "mov" for 0x400ec7>, <DisassemblerInsn "mov" for 0x400eca>, <DisassemblerInsn "cmp" for 0x400ecf>, <DisassemblerInsn "mov" for 0x400ed2>, <DisassemblerInsn "jle" for 0x400eda>]'}, {'block_Idx': 176, 'blockInsts': '[<DisassemblerInsn "lea" for 0x403d82>, <DisassemblerInsn "lea" for 0x403d89>, <DisassemblerInsn "mov" for 0x403d90>, <DisassemblerInsn "lea" for 0x403d95>, <DisassemblerInsn "call" for 0x403d9c>]'}, {'block_Idx': 319, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4023a8>]'}, {'block_Idx': 227, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e52>, <DisassemblerInsn "mov" for 0x401e5a>, <DisassemblerInsn "mov" for 0x401e61>, <DisassemblerInsn "mov" for 0x401e68>, <DisassemblerInsn "mov" for 0x401e70>, <DisassemblerInsn "shr" for 0x401e78>, <DisassemblerInsn "mov" for 0x401e7c>, <DisassemblerInsn "add" for 0x401e7f>, <DisassemblerInsn "mov" for 0x401e83>, <DisassemblerInsn "add" for 0x401e85>, <DisassemblerInsn "mov" for 0x401e88>, <DisassemblerInsn "shl" for 0x401e8f>, <DisassemblerInsn "mov" for 0x401e92>, <DisassemblerInsn "mov" for 0x401e99>, <DisassemblerInsn "sar" for 0x401ea1>, <DisassemblerInsn "movsxd" for 0x401ea5>, <DisassemblerInsn "mov" for 0x401ea8>, <DisassemblerInsn "ror" for 0x401eac>, <DisassemblerInsn "ror" for 0x401eb0>, <DisassemblerInsn "ror" for 0x401eb3>, <DisassemblerInsn "shl" for 0x401eb7>, <DisassemblerInsn "mov" for 0x401eb9>, <DisassemblerInsn "mov" for 0x401ec0>, <DisassemblerInsn "xor" for 0x401ec3>, <DisassemblerInsn "sub" for 0x401ec5>, <DisassemblerInsn "shr" for 0x401ec8>, <DisassemblerInsn "mov" for 0x401eca>, <DisassemblerInsn "add" for 0x401ed1>, <DisassemblerInsn "mov" for 0x401ed3>, <DisassemblerInsn "or" for 0x401ed5>, <DisassemblerInsn "mov" for 0x401ed7>, <DisassemblerInsn "mov" for 0x401ede>, <DisassemblerInsn "mov" for 0x401ee6>, <DisassemblerInsn "mov" for 0x401eed>, <DisassemblerInsn "mov" for 0x401ef4>, <DisassemblerInsn "sub" for 0x401ef9>, <DisassemblerInsn "mov" for 0x401efb>, <DisassemblerInsn "shl" for 0x401f02>, <DisassemblerInsn "mov" for 0x401f04>, <DisassemblerInsn "sar" for 0x401f0b>, <DisassemblerInsn "mov" for 0x401f0d>, <DisassemblerInsn "cmp" for 0x401f14>, <DisassemblerInsn "jle" for 0x401f17>]'}, {'block_Idx': 87, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014cb>, <DisassemblerInsn "mov" for 0x4014d3>, <DisassemblerInsn "mov" for 0x4014db>, <DisassemblerInsn "mov" for 0x4014e2>, <DisassemblerInsn "mov" for 0x4014e9>, <DisassemblerInsn "mov" for 0x4014f1>, <DisassemblerInsn "cmp" for 0x4014f9>, <DisassemblerInsn "jle" for 0x4014fc>]'}, {'block_Idx': 364, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402685>, <DisassemblerInsn "mov" for 0x40268c>, <DisassemblerInsn "mov" for 0x402693>, <DisassemblerInsn "mov" for 0x40269a>, <DisassemblerInsn "mov" for 0x40269c>, <DisassemblerInsn "mov" for 0x40269e>, <DisassemblerInsn "add" for 0x4026a1>, <DisassemblerInsn "mov" for 0x4026a5>, <DisassemblerInsn "add" for 0x4026ad>, <DisassemblerInsn "and" for 0x4026b1>, <DisassemblerInsn "mov" for 0x4026b5>, <DisassemblerInsn "mov" for 0x4026bd>, <DisassemblerInsn "cmp" for 0x4026c2>, <DisassemblerInsn "mov" for 0x4026c6>, <DisassemblerInsn "mov" for 0x4026ce>, <DisassemblerInsn "mov" for 0x4026d5>, <DisassemblerInsn "jb" for 0x4026dc>]'}, {'block_Idx': 242, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402bf5>, <DisassemblerInsn "cmp" for 0x402bfc>, <DisassemblerInsn "jle" for 0x402bff>]'}, {'block_Idx': 407, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d7b>, <DisassemblerInsn "mov" for 0x402d83>, <DisassemblerInsn "mov" for 0x402d8b>, <DisassemblerInsn "mov" for 0x402d92>, <DisassemblerInsn "mov" for 0x402d99>, <DisassemblerInsn "mov" for 0x402da0>, <DisassemblerInsn "mov" for 0x402da8>, <DisassemblerInsn "mov" for 0x402db0>, <DisassemblerInsn "mov" for 0x402db7>, <DisassemblerInsn "mov" for 0x402dbe>, <DisassemblerInsn "mov" for 0x402dc5>, <DisassemblerInsn "cmp" for 0x402dcd>, <DisassemblerInsn "je" for 0x402dd1>]'}, {'block_Idx': 244, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402fd5>, <DisassemblerInsn "mov" for 0x402fdc>, <DisassemblerInsn "mov" for 0x402fe4>, <DisassemblerInsn "mov" for 0x402fec>, <DisassemblerInsn "mov" for 0x402fee>, <DisassemblerInsn "mov" for 0x402ff0>, <DisassemblerInsn "mov" for 0x402ff7>, <DisassemblerInsn "mov" for 0x402ffe>, <DisassemblerInsn "jmp" for 0x403005>]'}], 'cfg_block_detailed_info': [{'block_Idx': 229, 'blockInsts': ['<jmp~~0x403007>']}, {'block_Idx': 166, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9d8]>', '<mov~~rdi, qword ptr [rsp + 0x828]>', '<mov~~rdx, qword ptr [rsp + 0x7b0]>', '<mov~~ecx, dword ptr [rsp + 0x338]>', '<imul~~ecx, dword ptr [rdx]>', '<mov~~edx, 4>', '<mov~~esi, 2>', '<cmp~~dword ptr [rdi], 0>', '<cmove~~edx, esi>', '<imul~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x940]>', '<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x10], eax>', '<cmp~~eax, ecx>', '<jle~~0x403f78>']}, {'block_Idx': 155, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x340]>', '<lea~~rcx, [rip + 0x291d]>', '<movsxd~~rax, dword ptr [rcx + rax*4]>', '<add~~rax, rcx>', '<jmp~~rax>']}, {'block_Idx': 264, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x650]>', '<mov~~rdi, qword ptr [rsp + 0x9f0]>', '<mov~~rax, qword ptr [rsp + 0x748]>', '<mov~~esi, eax>', '<call~~0x404f70>']}, {'block_Idx': 137, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x8e8]>', '<mov~~dword ptr [rax], 1>', '<mov~~eax, dword ptr [rsp + 0x8dc]>', '<cmp~~eax, 0>', '<jle~~0x400fcd>']}, {'block_Idx': 249, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x810]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x30fe]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 208, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x1e0]>', '<mov~~edx, dword ptr [rsp + 0x1f0]>', '<mov~~esi, dword ptr [rsp + 0x1f4]>', '<mov~~rdi, qword ptr [rsp + 0x1d8]>', '<mov~~ecx, dword ptr [rsp + 0x1f8]>', '<mov~~r8w, cx>', '<mov~~rcx, rdi>', '<add~~rcx, 2>', '<mov~~word ptr [rdi], r8w>', '<mov~~dword ptr [rsp + 0x1c0], esi>', '<mov~~dword ptr [rsp + 0x1c4], edx>', '<mov~~qword ptr [rsp + 0x1c8], rcx>', '<mov~~qword ptr [rsp + 0x1d0], rax>', '<mov~~rax, qword ptr [rsp + 0x1e8]>', '<mov~~edx, dword ptr [rsp + 0x1c0]>', '<mov~~ecx, dword ptr [rsp + 0x1c4]>', '<mov~~rsi, qword ptr [rsp + 0x1c8]>', '<mov~~rdi, qword ptr [rsp + 0x1d0]>', '<mov~~qword ptr [rsp + 0x1a0], rdi>', '<mov~~qword ptr [rsp + 0x1a8], rsi>', '<mov~~dword ptr [rsp + 0x1b0], ecx>', '<mov~~dword ptr [rsp + 0x1b4], edx>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x1b8], rax>', '<movsxd~~rcx, ecx>', '<cmp~~rax, rcx>', '<jge~~0x403620>']}, {'block_Idx': 311, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x403007>']}, {'block_Idx': 52, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x86c]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~r8d, dword ptr [rsp + 0x84c]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x49e1]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 25, 'blockInsts': ['<mov~~dword ptr [rsp + 0x8e4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400d81>']}, {'block_Idx': 75, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2b8a]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 269, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x680]>', '<mov~~rdx, qword ptr [rsp + 0x6d0]>', '<mov~~edi, dword ptr [rsp + 0x688]>', '<mov~~esi, dword ptr [rsp + 0x67c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x664], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x664]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x668], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402ee7>']}, {'block_Idx': 56, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~edx, dword ptr [rsp + 0x8e0]>', '<mov~~ecx, dword ptr [rax]>', '<add~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x8cc]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<jne~~0x403f01>']}, {'block_Idx': 34, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x86c]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~edx, ecx>', '<mov~~dword ptr [rsp + 0x84c], edx>', '<mov~~dword ptr [rsp + 0x850], ecx>', '<mov~~dword ptr [rsp + 0x854], eax>', '<je~~0x401254>']}, {'block_Idx': 131, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x918]>', '<mov~~ecx, dword ptr [rsp + 0x8b0]>', '<mov~~dword ptr [rsp + 0x890], ecx>', '<cmp~~dword ptr [rax], ecx>', '<jae~~0x400f9e>']}, {'block_Idx': 321, 'blockInsts': ['<push~~rbx>', '<sub~~rsp, 0x190>', '<mov~~dword ptr [rsp + 0x160], edx>', '<mov~~dword ptr [rsp + 0x164], esi>', '<mov~~qword ptr [rsp + 0x168], rdi>', '<mov~~rax, rdi>', '<add~~rax, 0x38>', '<mov~~qword ptr [rsp + 0x170], rax>', '<mov~~ecx, dword ptr [rdi + 0x38]>', '<mov~~dword ptr [rsp + 0x184], ecx>', '<mov~~rax, qword ptr [rdi + 0x28]>', '<mov~~qword ptr [rsp + 0x178], rax>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x184]>', '<shr~~eax, 0xfe>', '<mov~~dword ptr [rsp + 0x188], eax>', '<add~~ecx, 2>', '<mov~~dword ptr [rsp + 0x18c], ecx>', '<mov~~dword ptr [rdi + 0x38], ecx>', '<cmp~~eax, 1>', '<jle~~0x405025>']}, {'block_Idx': 222, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x1a0]>', '<mov~~rcx, qword ptr [rsp + 0x1a8]>', '<mov~~edx, dword ptr [rsp + 0x1b0]>', '<mov~~esi, dword ptr [rsp + 0x1b4]>', '<mov~~rdi, qword ptr [rsp + 0x770]>', '<mov~~edi, dword ptr [rdi]>', '<mov~~dword ptr [rsp + 0x2f0], edi>', '<mov~~dword ptr [rsp + 0x2f4], esi>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x2f8], esi>', '<mov~~dword ptr [rsp + 0x2fc], edx>', '<mov~~qword ptr [rsp + 0x300], rcx>', '<mov~~qword ptr [rsp + 0x308], rax>', '<jmp~~0x4037ec>']}, {'block_Idx': 251, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~esi, dword ptr [rsp + 0x760]>', '<mov~~edx, dword ptr [rsp + 0x764]>', '<mov~~rax, qword ptr [rsp + 0x768]>', '<mov~~qword ptr [rsp + 0x748], rax>', '<mov~~dword ptr [rsp + 0x750], edx>', '<mov~~dword ptr [rsp + 0x754], esi>', '<mov~~dword ptr [rcx], edx>', '<cmp~~rax, 0>', '<jne~~0x401ad3>']}, {'block_Idx': 162, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x33c]>', '<cmp~~eax, 2>', '<jne~~0x4038ff>']}, {'block_Idx': 89, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<jmp~~0x403fdf>']}, {'block_Idx': 148, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0xa10]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x8b0], eax>', '<mov~~rax, qword ptr [rsp + 0x918]>', '<mov~~ecx, dword ptr [rsp + 0x8b0]>', '<mov~~dword ptr [rsp + 0x890], ecx>', '<cmp~~dword ptr [rax], ecx>', '<jae~~0x400f9e>']}, {'block_Idx': 32, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x8dc]>', '<cmp~~eax, 0>', '<je~~0x400fcd>']}, {'block_Idx': 299, 'blockInsts': ['<jmp~~0x402ee7>']}, {'block_Idx': 180, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x968]>', '<mov~~edx, dword ptr [rsp + 0x72c]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x73c]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x710], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 7>', '<mov~~dword ptr [rsi], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~edx, 8>', '<mov~~dword ptr [rsi], edx>', '<mov~~edi, 0x80>', '<shr~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x728]>', '<and~~edi, eax>', '<xor~~eax, eax>', '<mov~~esi, 1>', '<cmp~~edi, 0>', '<mov~~edi, edx>', '<mov~~dword ptr [rsp + 0x714], edi>', '<mov~~dword ptr [rsp + 0x718], esi>', '<mov~~dword ptr [rsp + 0x71c], edx>', '<mov~~dword ptr [rsp + 0x720], ecx>', '<mov~~dword ptr [rsp + 0x724], eax>', '<je~~0x401d0c>']}, {'block_Idx': 252, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x368]>', '<mov~~rdx, qword ptr [rsp + 0x360]>', '<mov~~ecx, dword ptr [rsp + 0x6e8]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~dword ptr [rsp + 0x354], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x358], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x368], rax>', '<jl~~0x402f27>']}, {'block_Idx': 190, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x71c]>', '<mov~~eax, dword ptr [rsp + 0x720]>', '<mov~~edx, dword ptr [rsp + 0x724]>', '<mov~~dword ptr [rsp + 0x6e8], edx>', '<mov~~dword ptr [rsp + 0x6ec], eax>', '<mov~~dword ptr [rsp + 0x6f0], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x401d59>']}, {'block_Idx': 219, 'blockInsts': ['<jmp~~0x4032e6>']}, {'block_Idx': 337, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x654]>', '<cmp~~eax, 1>', '<jle~~0x402ee7>']}, {'block_Idx': 100, 'blockInsts': ['<jmp~~0x4015cf>']}, {'block_Idx': 146, 'blockInsts': ['<jmp~~0x4018f6>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x9a4]>', '<mov~~rdi, qword ptr [rsp + 0x9f0]>', '<mov~~rsi, qword ptr [rsp + 0x9e0]>', '<mov~~ecx, dword ptr [rsp + 0x978]>', '<mov~~edx, dword ptr [rsp + 0x97c]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<add~~ecx, edx>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500030>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x948]>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x938], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x93c], eax>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x401016>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~ecx, dword ptr [rsp + 0xa1c]>', '<mov~~dword ptr [rsp + 0x9b4], ecx>', '<mov~~rcx, rax>', '<add~~rcx, 0xa0>', '<mov~~qword ptr [rsp + 0x9b8], rcx>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x9c4], eax>', '<cmp~~eax, 4>', '<jb~~0x4007dc>']}, {'block_Idx': 224, 'blockInsts': ['<jmp~~0x403eca>']}, {'block_Idx': 246, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6ec]>', '<mov~~edx, dword ptr [rsp + 0x6f0]>', '<mov~~rsi, qword ptr [rsp + 0x748]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<add~~rax, 0x58>', '<shl~~rsi, 3>', '<add~~rax, rsi>', '<mov~~qword ptr [rsp + 0x6d0], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x6d8], edx>', '<mov~~dword ptr [rsp + 0x6dc], ecx>', '<mov~~qword ptr [rsp + 0x6e0], rax>', '<jmp~~0x401f87>']}, {'block_Idx': 188, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f8]>', '<mov~~rcx, qword ptr [rsp + 0xa00]>', '<mov~~esi, dword ptr [rsp + 0xf0]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0xc0], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0xc8], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0xd4], esi>', '<mov~~qword ptr [rsp + 0xd8], rdx>', '<mov~~qword ptr [rsp + 0xe0], rcx>', '<mov~~qword ptr [rsp + 0xe8], rax>', '<jmp~~0x403b76>']}, {'block_Idx': 67, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x884]>', '<mov~~rax, qword ptr [rsp + 0x878]>', '<mov~~edx, dword ptr [rsp + 0x888]>', '<mov~~dword ptr [rsp + 0x874], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x403f01>']}, {'block_Idx': 260, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~edi, dword ptr [rsp + 0x68c]>', '<mov~~esi, dword ptr [rsp + 0x688]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~r9d, dword ptr [rsp + 0x694]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x674], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x690]>', '<mov~~dword ptr [rsp + 0x678], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x674]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x678]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x67c], eax>', '<mov~~rax, qword ptr [rsp + 0x680]>', '<mov~~rdx, qword ptr [rsp + 0x6d0]>', '<mov~~edi, dword ptr [rsp + 0x688]>', '<mov~~esi, dword ptr [rsp + 0x67c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x664], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x664]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x668], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402ee7>']}, {'block_Idx': 125, 'blockInsts': ['<jmp~~0x4017f2>']}, {'block_Idx': 220, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x1e8]>', '<mov~~edx, dword ptr [rsp + 0x1c0]>', '<mov~~ecx, dword ptr [rsp + 0x1c4]>', '<mov~~rsi, qword ptr [rsp + 0x1c8]>', '<mov~~rdi, qword ptr [rsp + 0x1d0]>', '<mov~~qword ptr [rsp + 0x1a0], rdi>', '<mov~~qword ptr [rsp + 0x1a8], rsi>', '<mov~~dword ptr [rsp + 0x1b0], ecx>', '<mov~~dword ptr [rsp + 0x1b4], edx>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x1b8], rax>', '<movsxd~~rcx, ecx>', '<cmp~~rax, rcx>', '<jge~~0x403620>']}, {'block_Idx': 48, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x8e8]>', '<cmp~~dword ptr [rax], 0>', '<jne~~0x400fac>']}, {'block_Idx': 235, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x710]>', '<add~~eax, -8>', '<cmp~~eax, 5>', '<jae~~0x402bf5>']}, {'block_Idx': 103, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x858]>', '<sub~~eax, 7>', '<je~~0x401650>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x9a0]>', '<mov~~ecx, dword ptr [rsp + 0x9c4]>', '<mov~~esi, dword ptr [rsp + 0x9a8]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, rdx>', '<add~~rdi, 0xa8>', '<mov~~qword ptr [rsp + 0x980], rdi>', '<mov~~edx, dword ptr [rdx + 0xa8]>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x98c], edx>', '<mov~~dword ptr [rsp + 0x990], ecx>', '<mov~~dword ptr [rsp + 0x994], eax>', '<jae~~0x400933>']}, {'block_Idx': 157, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x750]>', '<mov~~ecx, dword ptr [rsp + 0x754]>', '<cmp~~ecx, 2>', '<mov~~dword ptr [rsp + 0x744], eax>', '<je~~0x401af2>']}, {'block_Idx': 116, 'blockInsts': ['<jmp~~0x403007>']}, {'block_Idx': 394, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x578]>', '<mov~~rcx, qword ptr [rsp + 0x580]>', '<mov~~edx, dword ptr [rsp + 0x58c]>', '<mov~~esi, dword ptr [rsp + 0x590]>', '<mov~~edi, dword ptr [rsp + 0x594]>', '<mov~~dword ptr [rsp + 0x3bc], edi>', '<mov~~dword ptr [rsp + 0x3c0], esi>', '<mov~~dword ptr [rsp + 0x3c4], edx>', '<mov~~qword ptr [rsp + 0x3c8], rcx>', '<cmp~~rax, 0>', '<je~~0x402ee7>']}, {'block_Idx': 248, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6ec]>', '<mov~~edx, dword ptr [rsp + 0x6f0]>', '<mov~~eax, dword ptr [rsp + 0x650]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x638], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x640], edx>', '<mov~~dword ptr [rsp + 0x644], ecx>', '<mov~~qword ptr [rsp + 0x648], rax>', '<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x640]>', '<mov~~eax, dword ptr [rsp + 0x644]>', '<mov~~rsi, qword ptr [rsp + 0x648]>', '<mov~~qword ptr [rsp + 0x620], rsi>', '<mov~~dword ptr [rsp + 0x628], eax>', '<mov~~dword ptr [rsp + 0x62c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x630], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x634], edx>', '<cmp~~eax, 0x12>', '<jge~~0x40226b>']}, {'block_Idx': 265, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x608]>', '<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x640], edx>', '<mov~~dword ptr [rsp + 0x644], ecx>', '<mov~~qword ptr [rsp + 0x648], rax>', '<jmp~~0x4021d2>']}, {'block_Idx': 98, 'blockInsts': ['<jmp~~0x403007>']}, {'block_Idx': 290, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x403007>']}, {'block_Idx': 326, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x658]>', '<mov~~edx, eax>', '<add~~edx, -1>', '<mov~~edx, edx>', '<mov~~ecx, dword ptr [rcx + rdx*4]>', '<mov~~dword ptr [rsp + 0x600], ecx>', '<cmp~~eax, 1>', '<je~~0x40272e>']}, {'block_Idx': 275, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x640]>', '<mov~~eax, dword ptr [rsp + 0x644]>', '<mov~~rsi, qword ptr [rsp + 0x648]>', '<mov~~qword ptr [rsp + 0x620], rsi>', '<mov~~dword ptr [rsp + 0x628], eax>', '<mov~~dword ptr [rsp + 0x62c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x630], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x634], edx>', '<cmp~~eax, 0x12>', '<jge~~0x40226b>']}, {'block_Idx': 191, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x718]>', '<mov~~edi, dword ptr [rsp + 0x714]>', '<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rsp + 0x730]>', '<mov~~dword ptr [rsp + 0x6f4], eax>', '<mov~~esi, edi>', '<sar~~esi, 3>', '<mov~~dword ptr [rsp + 0x6f8], esi>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x6fc], ecx>', '<movzx~~esi, sil>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x700], edi>', '<mov~~dword ptr [rdx], edi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x700]>', '<mov~~dword ptr [rsp + 0x704], edx>', '<and~~edx, esi>', '<mov~~dword ptr [rsp + 0x708], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x70c], eax>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x714], ecx>', '<mov~~dword ptr [rsp + 0x718], eax>', '<je~~0x401c43>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x2d0]>', '<mov~~edx, dword ptr [rsp + 0x2e8]>', '<mov~~esi, dword ptr [rsp + 0x2ec]>', '<mov~~r10, qword ptr [rsp + 0x288]>', '<mov~~rcx, qword ptr [rsp + 0x250]>', '<mov~~r9, qword ptr [rsp + 0x290]>', '<mov~~r8, qword ptr [rsp + 0x298]>', '<xor~~edi, edi>', '<cmp~~r10, 0>', '<mov~~qword ptr [rsp + 0x188], r9>', '<mov~~qword ptr [rsp + 0x190], r8>', '<mov~~qword ptr [rsp + 0x198], rdi>', '<mov~~dword ptr [rsp + 0x2f0], esi>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x2f4], esi>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x2f8], esi>', '<mov~~dword ptr [rsp + 0x2fc], edx>', '<mov~~qword ptr [rsp + 0x300], rcx>', '<mov~~qword ptr [rsp + 0x308], rax>', '<je~~0x4037ec>']}, {'block_Idx': 363, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x600]>', '<mov~~rax, qword ptr [rsp + 0x4e8]>', '<and~~rax, 0xfffffffffffffffc>', '<mov~~qword ptr [rsp + 0x4c8], rax>', '<mov~~edx, 1>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x4d0], rdx>', '<mov~~dword ptr [rsp + 0x4dc], ecx>', '<mov~~qword ptr [rsp + 0x4e0], rax>', '<mov~~rdx, qword ptr [rsp + 0x4e0]>', '<mov~~eax, dword ptr [rsp + 0x4dc]>', '<mov~~rcx, qword ptr [rsp + 0x4d0]>', '<mov~~rsi, qword ptr [rsp + 0x4c8]>', '<mov~~rdi, qword ptr [rsp + 0x658]>', '<mov~~qword ptr [rsp + 0x4a0], rcx>', '<add~~eax, dword ptr [rdi + rcx*4]>', '<mov~~dword ptr [rsp + 0x4a8], eax>', '<mov~~dword ptr [rdi + rcx*4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 4]>', '<mov~~dword ptr [rsp + 0x4ac], eax>', '<mov~~dword ptr [rdi + rcx*4 + 4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 8]>', '<mov~~dword ptr [rsp + 0x4b0], eax>', '<mov~~dword ptr [rdi + rcx*4 + 8], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 0xc]>', '<mov~~dword ptr [rsp + 0x4b4], eax>', '<mov~~dword ptr [rdi + rcx*4 + 0xc], eax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x4b8], rcx>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x4c0], rdx>', '<cmp~~rdx, rsi>', '<mov~~rsi, rcx>', '<mov~~qword ptr [rsp + 0x4d0], rsi>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x4dc], esi>', '<mov~~qword ptr [rsp + 0x4e0], rdx>', '<mov~~qword ptr [rsp + 0x4f8], rcx>', '<mov~~dword ptr [rsp + 0x504], eax>', '<je~~0x402c53>']}, {'block_Idx': 171, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x168], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jle~~0x403eca>']}, {'block_Idx': 409, 'blockInsts': ['<jmp~~0x403007>']}, {'block_Idx': 127, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0xa10]>', '<mov~~esi, dword ptr [rsp + 0x8bc]>', '<mov~~eax, dword ptr [rsp + 0x8b4]>', '<mov~~rdx, qword ptr [rsp + 0x908]>', '<mov~~edx, dword ptr [rdx]>', '<imul~~eax, esi>', '<imul~~eax, edx>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rcx], eax>', '<mov~~dword ptr [rsp + 0x8b8], eax>', '<mov~~ecx, dword ptr [rsp + 0x8b4]>', '<mov~~eax, dword ptr [rsp + 0x8b8]>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x8b0], eax>', '<jle~~0x400f57>']}, {'block_Idx': 1, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x9ec]>', '<mov~~rax, qword ptr [rsp + 0xa10]>', '<mov~~rsi, qword ptr [rsp + 0x9f0]>', '<mov~~edx, 4>', '<cmp~~ecx, 4>', '<cmovg~~edx, ecx>', '<mov~~dword ptr [rax], edx>', '<mov~~rdi, qword ptr [rsi + 0x98]>', '<add~~rsi, 0xa8>', '<call~~0x500018>']}, {'block_Idx': 202, 'blockInsts': ['<jmp~~0x403007>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x820]>', '<mov~~rsi, qword ptr [rsp + 0x2d8]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~r8d, dword ptr [rsp + 0x2a4]>', '<mov~~r9d, dword ptr [rsp + 0x2a8]>', '<mov~~eax, dword ptr [rsp + 0x2ac]>', '<mov~~rdi, qword ptr [rsp + 0x2b0]>', '<mov~~r10, qword ptr [rsp + 0x2b8]>', '<mov~~r11, qword ptr [rsp + 0x2c0]>', '<mov~~qword ptr [rsp + 0x1d8], r11>', '<mov~~qword ptr [rsp + 0x1e0], r10>', '<mov~~qword ptr [rsp + 0x1e8], rdi>', '<mov~~dword ptr [rsp + 0x1f0], r9d>', '<mov~~dword ptr [rsp + 0x1f4], r8d>', '<mov~~rdx, qword ptr [rdx + rdi*8 + 0x58]>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~ecx, dword ptr [rcx]>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x1f8], edx>', '<cmp~~eax, 0>', '<je~~0x403512>']}, {'block_Idx': 338, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rsp + 0x600]>', '<mov~~rdx, qword ptr [rsp + 0x658]>', '<mov~~esi, eax>', '<add~~esi, -2>', '<mov~~esi, esi>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~dword ptr [rsp + 0x5f8], edx>', '<sub~~ecx, edx>', '<mov~~dword ptr [rsp + 0x5fc], ecx>', '<cmp~~eax, 2>', '<jbe~~0x402675>']}, {'block_Idx': 195, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x2c8]>', '<mov~~edx, dword ptr [rsp + 0x2e8]>', '<mov~~rcx, qword ptr [rsp + 0x820]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x27c], ecx>', '<mov~~ecx, edx>', '<sub~~ecx, 2>', '<mov~~ecx, 1>', '<cmovge~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~qword ptr [rsp + 0x280], rcx>', '<mov~~rdx, rcx>', '<add~~rdx, -1>', '<and~~rcx, 3>', '<mov~~qword ptr [rsp + 0x288], rcx>', '<xor~~ecx, ecx>', '<cmp~~rdx, 3>', '<mov~~qword ptr [rsp + 0x290], rcx>', '<mov~~qword ptr [rsp + 0x298], rax>', '<jb~~0x40367b>']}, {'block_Idx': 165, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x33c]>', '<cmp~~eax, 2>', '<jne~~0x403b57>']}, {'block_Idx': 442, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x403007>']}, {'block_Idx': 259, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x68c]>', '<mov~~edx, dword ptr [rsp + 0x688]>', '<mov~~eax, dword ptr [rsp + 0x694]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x968]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x67c], eax>', '<jmp~~0x4020ac>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x33c]>', '<cmp~~eax, 2>', '<jne~~0x403d82>']}, {'block_Idx': 392, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x398]>', '<mov~~r9d, dword ptr [rsp + 0x394]>', '<mov~~edx, dword ptr [rsp + 0x390]>', '<mov~~rsi, qword ptr [rsp + 0x388]>', '<mov~~rdi, qword ptr [rsp + 0x530]>', '<mov~~r8, qword ptr [rsp + 0x658]>', '<add~~edx, dword ptr [r8 + rsi*4]>', '<mov~~dword ptr [rsp + 0x370], edx>', '<mov~~ecx, edx>', '<add~~ecx, r9d>', '<mov~~dword ptr [rsp + 0x374], ecx>', '<mov~~dword ptr [r8 + rsi*4], ecx>', '<add~~rsi, 1>', '<mov~~qword ptr [rsp + 0x378], rsi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x380], rax>', '<cmp~~rax, rdi>', '<mov~~qword ptr [rsp + 0x388], rsi>', '<mov~~dword ptr [rsp + 0x390], edx>', '<mov~~dword ptr [rsp + 0x394], ecx>', '<mov~~qword ptr [rsp + 0x398], rax>', '<jne~~0x402e5e>']}, {'block_Idx': 240, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402ee7>']}, {'block_Idx': 213, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6ec]>', '<mov~~ecx, dword ptr [rsp + 0x6f0]>', '<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x6c8], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x6cc], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401e52>']}, {'block_Idx': 362, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x4f0]>', '<mov~~rdx, qword ptr [rsp + 0x4f8]>', '<mov~~ecx, dword ptr [rsp + 0x504]>', '<xor~~eax, eax>', '<cmp~~rsi, 0>', '<mov~~qword ptr [rsp + 0x3e8], rdx>', '<mov~~dword ptr [rsp + 0x3f4], ecx>', '<mov~~qword ptr [rsp + 0x3f8], rax>', '<je~~0x402ee7>']}, {'block_Idx': 206, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x2c8]>', '<mov~~rax, qword ptr [rsp + 0x280]>', '<and~~rax, 0x7ffffffc>', '<mov~~qword ptr [rsp + 0x258], rax>', '<xor~~eax, eax>', '<mov~~rdx, rax>', '<mov~~qword ptr [rsp + 0x260], rdx>', '<mov~~qword ptr [rsp + 0x268], rcx>', '<mov~~qword ptr [rsp + 0x270], rax>', '<mov~~rdx, qword ptr [rsp + 0x270]>', '<mov~~rdi, qword ptr [rsp + 0x268]>', '<mov~~r9, qword ptr [rsp + 0x260]>', '<mov~~rsi, qword ptr [rsp + 0x258]>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~r8, qword ptr [rsp + 0x2d8]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~qword ptr [rsp + 0x228], r9>', '<mov~~r10, qword ptr [rax + r9*8 + 0x58]>', '<mov~~r10d, dword ptr [r10 + r8*4]>', '<shl~~r10d, cl>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~dword ptr [rsp + 0x1fc], r10d>', '<mov~~word ptr [rdi], r10w>', '<mov~~r10, r9>', '<or~~r10, 1>', '<mov~~qword ptr [rsp + 0x200], r10>', '<mov~~r10, qword ptr [rax + r10*8 + 0x58]>', '<mov~~r10d, dword ptr [r10 + r8*4]>', '<shl~~r10d, cl>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~dword ptr [rsp + 0x20c], r10d>', '<mov~~word ptr [rdi + 2], r10w>', '<mov~~r10, r9>', '<or~~r10, 2>', '<mov~~qword ptr [rsp + 0x210], r10>', '<mov~~r10, qword ptr [rax + r10*8 + 0x58]>', '<mov~~r10d, dword ptr [r10 + r8*4]>', '<shl~~r10d, cl>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~dword ptr [rsp + 0x21c], r10d>', '<mov~~word ptr [rdi + 4], r10w>', '<or~~r9, 3>', '<mov~~qword ptr [rsp + 0x220], r9>', '<mov~~rax, qword ptr [rax + r9*8 + 0x58]>', '<mov~~eax, dword ptr [rax + r8*4]>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x228]>', '<mov~~dword ptr [rsp + 0x234], eax>', '<mov~~r8w, ax>', '<mov~~rax, rdi>', '<add~~rax, 8>', '<mov~~qword ptr [rsp + 0x238], rax>', '<mov~~word ptr [rdi + 6], r8w>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x240], rcx>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x248], rdx>', '<cmp~~rdx, rsi>', '<mov~~rsi, rcx>', '<mov~~qword ptr [rsp + 0x260], rsi>', '<mov~~rsi, rax>', '<mov~~qword ptr [rsp + 0x268], rsi>', '<mov~~qword ptr [rsp + 0x270], rdx>', '<mov~~rdx, rax>', '<mov~~qword ptr [rsp + 0x250], rdx>', '<mov~~qword ptr [rsp + 0x290], rcx>', '<mov~~qword ptr [rsp + 0x298], rax>', '<je~~0x40367b>']}, {'block_Idx': 49, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x8dc]>', '<cmp~~eax, 0>', '<jle~~0x400fcd>']}, {'block_Idx': 348, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x600]>', '<mov~~ecx, dword ptr [rsp + 0x654]>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, rdx>', '<add~~rcx, -1>', '<mov~~qword ptr [rsp + 0x4e8], rcx>', '<add~~rdx, -2>', '<and~~rcx, 3>', '<mov~~qword ptr [rsp + 0x4f0], rcx>', '<mov~~ecx, 1>', '<cmp~~rdx, 3>', '<mov~~qword ptr [rsp + 0x4f8], rcx>', '<mov~~dword ptr [rsp + 0x504], eax>', '<jb~~0x402c53>']}, {'block_Idx': 209, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x30]>', '<mov~~edx, dword ptr [rsp + 0x40]>', '<mov~~rsi, qword ptr [rsp + 0x28]>', '<mov~~edi, dword ptr [rsp + 0x44]>', '<mov~~ecx, dword ptr [rsp + 0x48]>', '<mov~~r8d, dword ptr [rsp + 0x4c]>', '<mov~~word ptr [rsi], r8w>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0x14], edx>', '<mov~~qword ptr [rsp + 0x18], rcx>', '<mov~~qword ptr [rsp + 0x20], rax>', '<mov~~rsi, qword ptr [rsp + 0x38]>', '<mov~~eax, dword ptr [rsp + 0x14]>', '<mov~~rcx, qword ptr [rsp + 0x18]>', '<mov~~rdx, qword ptr [rsp + 0x20]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x64], edi>', '<mov~~qword ptr [rsp + 0x68], rsi>', '<mov~~qword ptr [rsp + 0x70], rdx>', '<mov~~qword ptr [rsp + 0x78], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jl~~0x403da1>']}, {'block_Idx': 241, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, qword ptr [rsp + 0x748]>', '<mov~~rsi, qword ptr [rsp + 0x770]>', '<mov~~eax, dword ptr [rsp + 0x710]>', '<and~~eax, 0xfffffff7>', '<mov~~dword ptr [rsp + 0x650], eax>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x654], esi>', '<mov~~rcx, qword ptr [rcx + rdx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x658], rcx>', '<cmp~~eax, 0>', '<je~~0x4023aa>']}, {'block_Idx': 86, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x858]>', '<test~~eax, eax>', '<je~~0x4015e0>']}, {'block_Idx': 85, 'blockInsts': ['<jmp~~0x403007>']}, {'block_Idx': 99, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~ecx, dword ptr [rsp + 0x7d0]>', '<mov~~rax, qword ptr [rsp + 0x948]>', '<mov~~rsi, qword ptr [rsp + 0x7e0]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x7c8], ecx>', '<mov~~dword ptr [rsp + 0x7cc], eax>', '<jmp~~0x4016cc>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x9ac]>', '<add~~rsp, 0xa20>', '<pop~~rbx>', '<ret~~>']}, {'block_Idx': 253, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x6d8]>', '<mov~~eax, dword ptr [rsp + 0x6dc]>', '<mov~~rsi, qword ptr [rsp + 0x6e0]>', '<mov~~qword ptr [rsp + 0x680], rsi>', '<mov~~dword ptr [rsp + 0x688], eax>', '<mov~~dword ptr [rsp + 0x68c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x690], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x694], edx>', '<cmp~~eax, 0x12>', '<jge~~0x402020>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x944]>', '<mov~~rcx, qword ptr [rsp]>', '<mov~~esi, dword ptr [rsp + 0x10]>', '<mov~~edx, dword ptr [rsp + 0xc]>', '<mov~~rdi, qword ptr [rsp + 0x9f0]>', '<mov~~r8d, esi>', '<add~~r8d, dword ptr [rdi + 0xa4]>', '<mov~~dword ptr [rdi + 0xa4], r8d>', '<sub~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<mov~~eax, dword ptr [rsp + 0x9ac]>', '<add~~rsp, 0xa20>', '<pop~~rbx>', '<ret~~>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x848]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x4012de>']}, {'block_Idx': 179, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rsp + 0x950]>', '<mov~~edx, dword ptr [rsp + 0x744]>', '<mov~~dword ptr [rsp + 0x728], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x72c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x730], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x740], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x73c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x740]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401b9c>']}, {'block_Idx': 115, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<cmp~~eax, 0xc>', '<jge~~0x4017e4>']}, {'block_Idx': 424, 'blockInsts': ['<jmp~~0x402a98>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x820]>', '<mov~~rax, qword ptr [rsp + 0x828]>', '<mov~~rdx, qword ptr [rsp + 0xc8]>', '<mov~~rsi, qword ptr [rsp + 0xc0]>', '<mov~~r8d, dword ptr [rsp + 0xd4]>', '<mov~~rdi, qword ptr [rsp + 0xd8]>', '<mov~~r9, qword ptr [rsp + 0xe0]>', '<mov~~r10, qword ptr [rsp + 0xe8]>', '<mov~~qword ptr [rsp + 0x98], r10>', '<mov~~qword ptr [rsp + 0xa0], r9>', '<mov~~qword ptr [rsp + 0xa8], rdi>', '<mov~~dword ptr [rsp + 0xb0], r8d>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~dword ptr [rsp + 0xb4], edx>', '<mov~~eax, dword ptr [rax]>', '<add~~edx, esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0xb8], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0xbc], edx>', '<cmp~~eax, 0>', '<je~~0x403c57>']}, {'block_Idx': 156, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jmp~~0x403eca>']}, {'block_Idx': 120, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<sub~~eax, 0xc>', '<je~~0x401815>']}, {'block_Idx': 445, 'blockInsts': ['<mov~~eax, dword ptr [rbp - 0xac]>', '<lea~~rsp, [rbp - 8]>', '<pop~~rbx>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 233, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rcx, qword ptr [rsp + 0x748]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x6a0], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x6a8], rax>', '<mov~~rax, qword ptr [rsp + 0x6a8]>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~rdx, qword ptr [rsp + 0x6a0]>', '<mov~~esi, dword ptr [rsp + 0x6b8]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x698], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x6a8], rax>', '<jl~~0x401f44>']}, {'block_Idx': 161, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rcx, qword ptr [rsp + 0x900]>', '<mov~~rsi, rax>', '<mov~~rax, qword ptr [rsp + 0x898]>', '<mov~~qword ptr [rdx + rax*8 + 0x58], rsi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x8a0], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x8a8], rax>', '<jl~~0x400edc>']}, {'block_Idx': 117, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x8bc], eax>', '<cmp~~eax, 0>', '<jne~~0x400e1b>']}, {'block_Idx': 381, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x600]>', '<mov~~edx, dword ptr [rsp + 0x5fc]>', '<mov~~rax, qword ptr [rsp + 0x528]>', '<and~~rax, 0xfffffffffffffffc>', '<mov~~qword ptr [rsp + 0x508], rax>', '<mov~~esi, 2>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x510], rsi>', '<mov~~dword ptr [rsp + 0x518], edx>', '<mov~~dword ptr [rsp + 0x51c], ecx>', '<mov~~qword ptr [rsp + 0x520], rax>', '<jmp~~0x402880>']}, {'block_Idx': 236, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7b0]>', '<mov~~rax, qword ptr [rsp + 0x748]>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x348], rax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x350], ecx>', '<movsxd~~rcx, ecx>', '<cmp~~rax, rcx>', '<jge~~0x402fd5>']}, {'block_Idx': 135, 'blockInsts': ['<jmp~~0x401800>']}, {'block_Idx': 405, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x658]>', '<mov~~rcx, qword ptr [rsp + 0x3c8]>', '<mov~~esi, dword ptr [rsp + 0x3bc]>', '<mov~~edi, dword ptr [rsp + 0x3c0]>', '<mov~~edx, dword ptr [rsp + 0x3c4]>', '<add~~edx, dword ptr [rax + rcx*4]>', '<add~~edx, edi>', '<add~~edx, esi>', '<mov~~dword ptr [rax + rcx*4], edx>', '<jmp~~0x402ee7>']}, {'block_Idx': 72, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x804]>', '<mov~~edx, dword ptr [rsp + 0x800]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~edx, 0x28>', '<mov~~qword ptr [rsp + 0x7e8], rdx>', '<mov~~qword ptr [rsp + 0x7f0], rcx>', '<mov~~dword ptr [rsp + 0x7fc], eax>', '<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~rdx, qword ptr [rsp + 0x7f0]>', '<mov~~eax, dword ptr [rsp + 0x7fc]>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<mov~~qword ptr [rsp + 0x7d8], rdx>', '<mov~~qword ptr [rsp + 0x7e0], rcx>', '<cmp~~eax, 1>', '<jle~~0x40157a>']}, {'block_Idx': 37, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, qword ptr [rsp + 0x998]>', '<mov~~rdi, qword ptr [rsp + 0x9b8]>', '<mov~~rsi, qword ptr [rsp + 0xa10]>', '<mov~~eax, dword ptr [rsp + 0x9a4]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x9c8], esi>', '<mov~~dword ptr [rsp + 0x9cc], edx>', '<mov~~qword ptr [rsp + 0x9d0], rcx>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<jne~~0x403fdf>']}, {'block_Idx': 182, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f8]>', '<mov~~rcx, qword ptr [rsp + 0xa00]>', '<mov~~esi, dword ptr [rsp + 0x168]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x138], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x140], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0x14c], esi>', '<mov~~qword ptr [rsp + 0x150], rdx>', '<mov~~qword ptr [rsp + 0x158], rcx>', '<mov~~qword ptr [rsp + 0x160], rax>', '<jmp~~0x40391e>']}, {'block_Idx': 105, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0xa0c]>', '<mov~~edx, dword ptr [rsp + 0x7bc]>', '<mov~~esi, dword ptr [rsp + 0x844]>', '<mov~~r8b, byte ptr [rsp + 0x80f]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<add~~rax, 0xc>', '<mov~~qword ptr [rsp + 0x7b0], rax>', '<mov~~eax, 2>', '<mov~~edi, 4>', '<test~~r8b, 1>', '<cmovne~~eax, edi>', '<imul~~eax, esi>', '<imul~~eax, edx>', '<cmp~~eax, ecx>', '<jg~~0x403007>']}, {'block_Idx': 383, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x654]>', '<cmp~~eax, 4>', '<jle~~0x402ee7>']}, {'block_Idx': 174, 'blockInsts': ['<mov~~r8d, dword ptr [rsp + 0x310]>', '<mov~~edi, dword ptr [rsp + 0x314]>', '<mov~~esi, dword ptr [rsp + 0x318]>', '<mov~~edx, dword ptr [rsp + 0x31c]>', '<mov~~r9, qword ptr [rsp + 0x320]>', '<mov~~rax, qword ptr [rsp + 0x328]>', '<mov~~rcx, qword ptr [rsp + 0x330]>', '<mov~~qword ptr [rsp + 0x2c8], rcx>', '<mov~~qword ptr [rsp + 0x2d0], rax>', '<mov~~qword ptr [rsp + 0x2d8], r9>', '<mov~~dword ptr [rsp + 0x2e4], esi>', '<mov~~dword ptr [rsp + 0x2e8], edi>', '<mov~~dword ptr [rsp + 0x2ec], r8d>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x2f0], r8d>', '<mov~~dword ptr [rsp + 0x2f4], edi>', '<mov~~dword ptr [rsp + 0x2f8], esi>', '<mov~~dword ptr [rsp + 0x2fc], edx>', '<mov~~qword ptr [rsp + 0x300], rcx>', '<mov~~qword ptr [rsp + 0x308], rax>', '<jle~~0x4037ec>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x9a8]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, rax>', '<add~~rdx, 0xa4>', '<mov~~qword ptr [rsp + 0x998], rdx>', '<mov~~edx, dword ptr [rax + 0xa4]>', '<mov~~dword ptr [rsp + 0x9a0], edx>', '<xor~~edx, 0xffffffff>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<ja~~0x403fdf>']}, {'block_Idx': 31, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<jmp~~0x403fdf>']}, {'block_Idx': 68, 'blockInsts': ['<jmp~~0x403f01>']}, {'block_Idx': 349, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x654]>', '<cmp~~eax, 2>', '<jle~~0x402ee7>']}, {'block_Idx': 218, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x2d0]>', '<mov~~edx, dword ptr [rsp + 0x2e8]>', '<mov~~esi, dword ptr [rsp + 0x2ec]>', '<mov~~rdi, qword ptr [rsp + 0x198]>', '<mov~~r10, qword ptr [rsp + 0x190]>', '<mov~~r8, qword ptr [rsp + 0x188]>', '<mov~~r9, qword ptr [rsp + 0x288]>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~rbx, qword ptr [rsp + 0x2d8]>', '<mov~~r11, qword ptr [rsp + 0x9f0]>', '<mov~~r11, qword ptr [r11 + r8*8 + 0x58]>', '<mov~~r11d, dword ptr [r11 + rbx*4]>', '<shl~~r11d, cl>', '<mov~~dword ptr [rsp + 0x16c], r11d>', '<mov~~ecx, r11d>', '<mov~~r11w, cx>', '<mov~~rcx, r10>', '<add~~rcx, 2>', '<mov~~qword ptr [rsp + 0x170], rcx>', '<mov~~word ptr [r10], r11w>', '<add~~r8, 1>', '<mov~~qword ptr [rsp + 0x178], r8>', '<add~~rdi, 1>', '<mov~~qword ptr [rsp + 0x180], rdi>', '<cmp~~rdi, r9>', '<mov~~qword ptr [rsp + 0x188], r8>', '<mov~~r8, rcx>', '<mov~~qword ptr [rsp + 0x190], r8>', '<mov~~qword ptr [rsp + 0x198], rdi>', '<mov~~dword ptr [rsp + 0x2f0], esi>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x2f4], esi>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x2f8], esi>', '<mov~~dword ptr [rsp + 0x2fc], edx>', '<mov~~qword ptr [rsp + 0x300], rcx>', '<mov~~qword ptr [rsp + 0x308], rax>', '<jne~~0x403705>']}, {'block_Idx': 379, 'blockInsts': ['<jmp~~0x4027c6>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~eax, dword ptr [rsp + 0x940]>', '<mov~~ecx, dword ptr [rsp + 0x10]>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<sub~~ecx, eax>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x1cd4]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 178, 'blockInsts': ['<lea~~rdi, [rip + 0x205f]>', '<lea~~rsi, [rip + 0x1ff0]>', '<mov~~edx, 0x2bc>', '<lea~~rcx, [rip + 0x205d]>', '<call~~0x500008>']}, {'block_Idx': 153, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x85c]>', '<mov~~rdi, qword ptr [rsp + 0x818]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x43c7]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 121, 'blockInsts': ['<lea~~rdi, [rip + 0x4d41]>', '<lea~~rsi, [rip + 0x4d4b]>', '<mov~~edx, 0xa6>', '<lea~~rcx, [rip + 0x4d54]>', '<call~~0x500008>']}, {'block_Idx': 243, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x348]>', '<mov~~rdx, qword ptr [rsp + 0x778]>', '<mov~~rcx, qword ptr [rsp + 0x830]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x760], edx>', '<mov~~dword ptr [rsp + 0x764], ecx>', '<mov~~qword ptr [rsp + 0x768], rax>', '<jmp~~0x401a7b>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x974]>', '<mov~~ecx, dword ptr [rsp + 0x970]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rdx + 0x98]>', '<mov~~ecx, ecx>', '<mov~~rsi, rdi>', '<add~~rsi, rcx>', '<mov~~eax, eax>', '<mov~~edx, eax>', '<call~~0x500028>']}, {'block_Idx': 380, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x530]>', '<mov~~rsi, qword ptr [rsp + 0x538]>', '<mov~~edx, dword ptr [rsp + 0x540]>', '<mov~~ecx, dword ptr [rsp + 0x544]>', '<xor~~eax, eax>', '<cmp~~rdi, 0>', '<mov~~qword ptr [rsp + 0x388], rsi>', '<mov~~dword ptr [rsp + 0x390], edx>', '<mov~~dword ptr [rsp + 0x394], ecx>', '<mov~~qword ptr [rsp + 0x398], rax>', '<je~~0x402ee7>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, qword ptr [rsp + 0xa10]>', '<mov~~ecx, dword ptr [rsp + 0x9ec]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x9e0]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~esi, dword ptr [rdx]>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0xa1c], esi>', '<mov~~dword ptr [rsp + 0x9c8], edx>', '<mov~~dword ptr [rsp + 0x9cc], ecx>', '<mov~~qword ptr [rsp + 0x9d0], rax>', '<je~~0x400a78>']}, {'block_Idx': 384, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x650]>', '<mov~~rax, qword ptr [rsp + 0x810]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3171]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 15, 'blockInsts': ['<mov~~edi, dword ptr [rsp + 0x9a4]>', '<mov~~esi, dword ptr [rsp + 0x98c]>', '<mov~~ecx, dword ptr [rsp + 0x990]>', '<mov~~eax, dword ptr [rsp + 0x994]>', '<mov~~dword ptr [rsp + 0x970], eax>', '<mov~~dword ptr [rsp + 0x974], ecx>', '<mov~~edx, eax>', '<add~~edx, edi>', '<add~~edx, ecx>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x978], ecx>', '<mov~~dword ptr [rsp + 0x97c], eax>', '<jbe~~0x4009cb>']}, {'block_Idx': 39, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x8cc]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<jne~~0x403f01>']}, {'block_Idx': 53, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x88c]>', '<mov~~rcx, qword ptr [rsp + 0x950]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x878], rcx>', '<mov~~ecx, eax>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x884], ecx>', '<mov~~dword ptr [rsp + 0x888], eax>', '<mov~~ecx, dword ptr [rsp + 0x884]>', '<mov~~rax, qword ptr [rsp + 0x878]>', '<mov~~edx, dword ptr [rsp + 0x888]>', '<mov~~dword ptr [rsp + 0x874], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x403f01>']}, {'block_Idx': 26, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x968]>', '<mov~~rax, qword ptr [rsp + 0x948]>', '<mov~~edx, dword ptr [rsp + 0x93c]>', '<mov~~esi, edx>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x858], esi>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x85c], edx>', '<mov~~rdx, rax>', '<add~~rdx, 3>', '<mov~~qword ptr [rsp + 0x860], rdx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x868], eax>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x86c], eax>', '<mov~~dword ptr [rcx], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x4011d2>']}, {'block_Idx': 175, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x80], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jle~~0x403eca>']}, {'block_Idx': 250, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x9f0]>', '<mov~~rax, qword ptr [rsp + 0x748]>', '<mov~~edx, dword ptr [rsp + 0x710]>', '<and~~edx, 0xffffffdf>', '<add~~edx, 1>', '<mov~~esi, eax>', '<call~~0x404010>']}, {'block_Idx': 258, 'blockInsts': ['<push~~rbp>', '<mov~~rbp, rsp>', '<push~~rbx>', '<sub~~rsp, 0x4a8>', '<mov~~dword ptr [rbp - 0x38], edx>', '<mov~~dword ptr [rbp - 0x34], esi>', '<mov~~qword ptr [rbp - 0x30], rdi>', '<mov~~eax, edx>', '<mov~~qword ptr [rbp - 0x28], rax>', '<lea~~rcx, [rax*4 + 0xf]>', '<and~~rcx, 0xfffffffffffffff0>', '<mov~~rax, rsp>', '<sub~~rax, rcx>', '<mov~~qword ptr [rbp - 0x20], rax>', '<mov~~rsp, rax>', '<movsxd~~rax, esi>', '<mov~~rax, qword ptr [rdi + rax*8 + 0x58]>', '<mov~~qword ptr [rbp - 0x18], rax>', '<cmp~~edx, 0>', '<setg~~al>', '<mov~~byte ptr [rbp - 9], al>', '<test~~al, 1>', '<jne~~0x40406f>']}, {'block_Idx': 150, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x968]>', '<mov~~edx, dword ptr [rsp + 0x784]>', '<mov~~eax, dword ptr [rsp + 0x788]>', '<mov~~esi, dword ptr [rsp + 0x78c]>', '<mov~~dword ptr [rsp + 0x33c], edx>', '<mov~~edi, esi>', '<neg~~edi>', '<and~~edi, 7>', '<mov~~edx, esi>', '<mov~~esi, edi>', '<lea~~edx, [rdx + rsi + 0x10]>', '<mov~~dword ptr [rcx], edx>', '<mov~~ecx, eax>', '<mov~~qword ptr [rsp + 0x340], rcx>', '<sub~~eax, 3>', '<ja~~0x4030ac>']}, {'block_Idx': 124, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~rax, qword ptr [rsp + 0x948]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40191a>']}, {'block_Idx': 107, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~ecx, dword ptr [rsp + 0x7d0]>', '<mov~~rax, qword ptr [rsp + 0x948]>', '<mov~~rsi, qword ptr [rsp + 0x7e0]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x7c8], ecx>', '<mov~~dword ptr [rsp + 0x7cc], eax>', '<jmp~~0x4016cc>']}, {'block_Idx': 81, 'blockInsts': ['<jmp~~0x403007>']}, {'block_Idx': 245, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rcx, qword ptr [rsp + 0x748]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x360], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x368], rax>', '<mov~~rax, qword ptr [rsp + 0x368]>', '<mov~~rdx, qword ptr [rsp + 0x360]>', '<mov~~ecx, dword ptr [rsp + 0x6e8]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~dword ptr [rsp + 0x354], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x358], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x368], rax>', '<jl~~0x402f27>']}, {'block_Idx': 88, 'blockInsts': ['<jmp~~0x401597>']}, {'block_Idx': 122, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x900]>', '<mov~~rax, qword ptr [rsp + 0xa10]>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x8b4], ecx>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x8b8], eax>', '<jne~~0x400e7c>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x940]>', '<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x10], eax>', '<cmp~~eax, ecx>', '<jle~~0x403f78>']}, {'block_Idx': 239, 'blockInsts': ['<jmp~~0x402ee7>']}, {'block_Idx': 71, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x818]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x46f1]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 170, 'blockInsts': ['<jmp~~0x403007>']}, {'block_Idx': 149, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x8a8]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~qword ptr [rsp + 0x898], rcx>', '<mov~~esi, dword ptr [rax]>', '<mov~~rdi, qword ptr [rax + rcx*8 + 0x58]>', '<shl~~esi, 2>', '<mov~~dword ptr [rsp + 0x894], esi>', '<call~~0x500010>']}, {'block_Idx': 64, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x818]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x488b]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 45, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~ecx, dword ptr [rsp + 0x940]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x88c], eax>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<add~~eax, 2>', '<cmp~~eax, ecx>', '<jge~~0x403f01>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x9ec]>', '<mov~~esi, dword ptr [rsp + 0x9c4]>', '<mov~~ecx, dword ptr [rsp + 0x9b4]>', '<xor~~edx, edx>', '<sub~~ecx, esi>', '<cmovb~~ecx, edx>', '<cmp~~ecx, eax>', '<cmovb~~eax, ecx>', '<mov~~dword ptr [rsp + 0x9b0], eax>', '<mov~~eax, dword ptr [rsp + 0x9c4]>', '<mov~~edx, dword ptr [rsp + 0x9b0]>', '<mov~~dword ptr [rsp + 0x9a4], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x9a8], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<jb~~0x403fdf>']}, {'block_Idx': 214, 'blockInsts': ['<jmp~~0x401d66>']}, {'block_Idx': 210, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x770]>', '<mov~~rsi, qword ptr [rsp + 0x30]>', '<mov~~edi, dword ptr [rsp + 0x44]>', '<mov~~rax, qword ptr [rsp + 0x820]>', '<mov~~ecx, dword ptr [rsp + 0x4c]>', '<mov~~dword ptr [rsi], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0x28]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x14], edx>', '<mov~~qword ptr [rsp + 0x18], rcx>', '<mov~~qword ptr [rsp + 0x20], rax>', '<jmp~~0x403e8b>']}, {'block_Idx': 393, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x520]>', '<mov~~eax, dword ptr [rsp + 0x51c]>', '<mov~~ecx, dword ptr [rsp + 0x518]>', '<mov~~rdx, qword ptr [rsp + 0x510]>', '<mov~~rdi, qword ptr [rsp + 0x508]>', '<mov~~r8, qword ptr [rsp + 0x658]>', '<mov~~qword ptr [rsp + 0x460], rdx>', '<add~~ecx, dword ptr [r8 + rdx*4]>', '<mov~~dword ptr [rsp + 0x468], ecx>', '<mov~~r10d, ecx>', '<add~~r10d, eax>', '<mov~~dword ptr [rsp + 0x46c], r10d>', '<mov~~dword ptr [r8 + rdx*4], r10d>', '<mov~~r9, rdx>', '<or~~r9, 1>', '<mov~~qword ptr [rsp + 0x470], r9>', '<add~~ecx, dword ptr [r8 + r9*4]>', '<mov~~dword ptr [rsp + 0x478], ecx>', '<mov~~eax, ecx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x47c], eax>', '<mov~~dword ptr [r8 + r9*4], eax>', '<add~~ecx, dword ptr [r8 + rdx*4 + 8]>', '<mov~~dword ptr [rsp + 0x480], ecx>', '<mov~~r9d, ecx>', '<add~~r9d, eax>', '<mov~~dword ptr [rsp + 0x484], r9d>', '<mov~~dword ptr [r8 + rdx*4 + 8], r9d>', '<add~~ecx, dword ptr [r8 + rdx*4 + 0xc]>', '<mov~~dword ptr [rsp + 0x488], ecx>', '<mov~~eax, ecx>', '<add~~eax, r9d>', '<mov~~dword ptr [rsp + 0x48c], eax>', '<mov~~dword ptr [r8 + rdx*4 + 0xc], eax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x490], rdx>', '<add~~rsi, 4>', '<mov~~qword ptr [rsp + 0x498], rsi>', '<cmp~~rsi, rdi>', '<mov~~rdi, rdx>', '<mov~~qword ptr [rsp + 0x510], rdi>', '<mov~~edi, ecx>', '<mov~~dword ptr [rsp + 0x518], edi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x51c], edi>', '<mov~~qword ptr [rsp + 0x520], rsi>', '<mov~~qword ptr [rsp + 0x538], rdx>', '<mov~~dword ptr [rsp + 0x540], ecx>', '<mov~~dword ptr [rsp + 0x544], eax>', '<je~~0x402e16>']}, {'block_Idx': 232, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6e8]>', '<cmp~~eax, 0>', '<je~~0x402f71>']}, {'block_Idx': 217, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x118]>', '<mov~~eax, dword ptr [rsp + 0xf4]>', '<mov~~rcx, qword ptr [rsp + 0xf8]>', '<mov~~rdx, qword ptr [rsp + 0x100]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x14c], edi>', '<mov~~qword ptr [rsp + 0x150], rsi>', '<mov~~qword ptr [rsp + 0x158], rdx>', '<mov~~qword ptr [rsp + 0x160], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jl~~0x40391e>']}, {'block_Idx': 28, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x9f0]>', '<mov~~rcx, qword ptr [rsp + 0x9b8]>', '<mov~~rdx, qword ptr [rsp + 0x980]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x998]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x98c], edx>', '<mov~~dword ptr [rsp + 0x990], ecx>', '<mov~~dword ptr [rsp + 0x994], eax>', '<mov~~edi, dword ptr [rsp + 0x9a4]>', '<mov~~esi, dword ptr [rsp + 0x98c]>', '<mov~~ecx, dword ptr [rsp + 0x990]>', '<mov~~eax, dword ptr [rsp + 0x994]>', '<mov~~dword ptr [rsp + 0x970], eax>', '<mov~~dword ptr [rsp + 0x974], ecx>', '<mov~~edx, eax>', '<add~~edx, edi>', '<add~~edx, ecx>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x978], ecx>', '<mov~~dword ptr [rsp + 0x97c], eax>', '<jbe~~0x4009cb>']}, {'block_Idx': 270, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x6d8], edx>', '<mov~~dword ptr [rsp + 0x6dc], ecx>', '<mov~~qword ptr [rsp + 0x6e0], rax>', '<jmp~~0x401f87>']}, {'block_Idx': 136, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x920]>', '<mov~~edx, dword ptr [rsp + 0x890]>', '<mov~~rsi, qword ptr [rsp + 0x918]>', '<mov~~rdi, qword ptr [rax]>', '<call~~0x500018>']}, {'block_Idx': 193, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x820]>', '<mov~~rax, qword ptr [rsp + 0x828]>', '<mov~~rsi, qword ptr [rsp + 0x140]>', '<mov~~rdx, qword ptr [rsp + 0x138]>', '<mov~~r8d, dword ptr [rsp + 0x14c]>', '<mov~~rdi, qword ptr [rsp + 0x150]>', '<mov~~r9, qword ptr [rsp + 0x158]>', '<mov~~r10, qword ptr [rsp + 0x160]>', '<mov~~qword ptr [rsp + 0x108], r10>', '<mov~~qword ptr [rsp + 0x110], r9>', '<mov~~qword ptr [rsp + 0x118], rdi>', '<mov~~dword ptr [rsp + 0x124], r8d>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~dword ptr [rsp + 0x128], edx>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~dword ptr [rsp + 0x12c], esi>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x130], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x134], edx>', '<cmp~~eax, 0>', '<je~~0x403a0f>']}, {'block_Idx': 223, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x38]>', '<mov~~eax, dword ptr [rsp + 0x14]>', '<mov~~rcx, qword ptr [rsp + 0x18]>', '<mov~~rdx, qword ptr [rsp + 0x20]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x64], edi>', '<mov~~qword ptr [rsp + 0x68], rsi>', '<mov~~qword ptr [rsp + 0x70], rdx>', '<mov~~qword ptr [rsp + 0x78], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jl~~0x403da1>']}, {'block_Idx': 234, 'blockInsts': ['<jmp~~0x401d78>']}, {'block_Idx': 38, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x998]>', '<mov~~rax, qword ptr [rsp + 0x9b8]>', '<mov~~dword ptr [rcx], 0>', '<mov~~ecx, dword ptr [rax]>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x978], ecx>', '<mov~~dword ptr [rsp + 0x97c], eax>', '<mov~~eax, dword ptr [rsp + 0x9a4]>', '<mov~~rdi, qword ptr [rsp + 0x9f0]>', '<mov~~rsi, qword ptr [rsp + 0x9e0]>', '<mov~~ecx, dword ptr [rsp + 0x978]>', '<mov~~edx, dword ptr [rsp + 0x97c]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<add~~ecx, edx>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500030>']}, {'block_Idx': 43, 'blockInsts': ['<jmp~~0x401224>']}, {'block_Idx': 356, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x15c]>', '<add~~rsp, 0x190>', '<pop~~rbx>', '<ret~~>']}, {'block_Idx': 212, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x770]>', '<mov~~rsi, qword ptr [rsp + 0xa0]>', '<mov~~edi, dword ptr [rsp + 0xb4]>', '<mov~~rax, qword ptr [rsp + 0x820]>', '<mov~~ecx, dword ptr [rsp + 0xbc]>', '<mov~~dword ptr [rsi], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0x98]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x84], edx>', '<mov~~qword ptr [rsp + 0x88], rcx>', '<mov~~qword ptr [rsp + 0x90], rax>', '<jmp~~0x403cb1>']}, {'block_Idx': 404, 'blockInsts': ['<jmp~~0x402880>']}, {'block_Idx': 96, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x858]>', '<sub~~eax, 6>', '<je~~0x4015fd>']}, {'block_Idx': 40, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x8d0]>', '<cmp~~eax, 0>', '<jne~~0x400fac>']}, {'block_Idx': 74, 'blockInsts': ['<jmp~~0x403007>']}, {'block_Idx': 93, 'blockInsts': ['<jmp~~0x4015c1>']}, {'block_Idx': 225, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0xa8]>', '<mov~~eax, dword ptr [rsp + 0x84]>', '<mov~~rcx, qword ptr [rsp + 0x88]>', '<mov~~rdx, qword ptr [rsp + 0x90]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0xd4], edi>', '<mov~~qword ptr [rsp + 0xd8], rsi>', '<mov~~qword ptr [rsp + 0xe0], rdx>', '<mov~~qword ptr [rsp + 0xe8], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jl~~0x403b76>']}, {'block_Idx': 416, 'blockInsts': ['<jmp~~0x40299a>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x10]>', '<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, rcx>', '<add~~rdx, 0xa0>', '<mov~~qword ptr [rsp], rdx>', '<mov~~ecx, dword ptr [rcx + 0xa0]>', '<mov~~dword ptr [rsp + 0xc], ecx>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<je~~0x403fdf>']}, {'block_Idx': 185, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x2c8]>', '<mov~~rcx, qword ptr [rsp + 0x2d0]>', '<mov~~edi, dword ptr [rsp + 0x2e4]>', '<mov~~r8d, dword ptr [rsp + 0x2e8]>', '<mov~~r9, qword ptr [rsp + 0x828]>', '<mov~~esi, 1>', '<xor~~edx, edx>', '<cmp~~dword ptr [r9], 0>', '<mov~~dword ptr [rsp + 0x2a4], r8d>', '<mov~~dword ptr [rsp + 0x2a8], edi>', '<mov~~dword ptr [rsp + 0x2ac], esi>', '<mov~~qword ptr [rsp + 0x2b0], rdx>', '<mov~~qword ptr [rsp + 0x2b8], rcx>', '<mov~~qword ptr [rsp + 0x2c0], rax>', '<jne~~0x40343f>']}, {'block_Idx': 118, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~ecx, dword ptr [rsp + 0x7a8]>', '<mov~~edx, dword ptr [rsp + 0x7ac]>', '<mov~~dword ptr [rsp + 0x790], edx>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500048>']}, {'block_Idx': 237, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402f71>']}, {'block_Idx': 151, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x808]>', '<mov~~edx, dword ptr [rsp + 0x840]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<add~~rax, 0x44>', '<mov~~qword ptr [rsp + 0x758], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x760], edx>', '<mov~~dword ptr [rsp + 0x764], ecx>', '<mov~~qword ptr [rsp + 0x768], rax>', '<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~esi, dword ptr [rsp + 0x760]>', '<mov~~edx, dword ptr [rsp + 0x764]>', '<mov~~rax, qword ptr [rsp + 0x768]>', '<mov~~qword ptr [rsp + 0x748], rax>', '<mov~~dword ptr [rsp + 0x750], edx>', '<mov~~dword ptr [rsp + 0x754], esi>', '<mov~~dword ptr [rcx], edx>', '<cmp~~rax, 0>', '<jne~~0x401ad3>']}, {'block_Idx': 61, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x968]>', '<mov~~eax, dword ptr [rsp + 0x874]>', '<add~~eax, 8>', '<mov~~dword ptr [rsp + 0x870], eax>', '<mov~~dword ptr [rcx], eax>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~edx, dword ptr [rsp + 0x940]>', '<mov~~ecx, eax>', '<mov~~eax, dword ptr [rsp + 0x870]>', '<add~~ecx, 2>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x888], eax>', '<jl~~0x4010a1>']}, {'block_Idx': 366, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x650]>', '<mov~~edx, dword ptr [rsp + 0x5f8]>', '<mov~~edi, dword ptr [rsp + 0x5f4]>', '<mov~~rsi, qword ptr [rsp + 0x658]>', '<mov~~ecx, dword ptr [rsp + 0x5f0]>', '<shl~~ecx, 1>', '<mov~~r8d, eax>', '<add~~r8d, -4>', '<mov~~r8d, r8d>', '<mov~~esi, dword ptr [rsi + r8*4]>', '<add~~ecx, edi>', '<add~~edx, esi>', '<sub~~ecx, edx>', '<mov~~dword ptr [rsp + 0x5ec], ecx>', '<cmp~~eax, 4>', '<jne~~0x402bce>']}, {'block_Idx': 228, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x710]>', '<sub~~eax, 1>', '<jne~~0x402140>']}, {'block_Idx': 443, 'blockInsts': ['<jmp~~0x402ee7>']}, {'block_Idx': 201, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6f4]>', '<mov~~edx, dword ptr [rsp + 0x700]>', '<mov~~rsi, qword ptr [rsp + 0x758]>', '<mov~~ecx, dword ptr [rsp + 0x728]>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsi], ecx>', '<mov~~dword ptr [rsp + 0x71c], edx>', '<mov~~dword ptr [rsp + 0x720], ecx>', '<mov~~dword ptr [rsp + 0x724], eax>', '<mov~~ecx, dword ptr [rsp + 0x71c]>', '<mov~~eax, dword ptr [rsp + 0x720]>', '<mov~~edx, dword ptr [rsp + 0x724]>', '<mov~~dword ptr [rsp + 0x6e8], edx>', '<mov~~dword ptr [rsp + 0x6ec], eax>', '<mov~~dword ptr [rsp + 0x6f0], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x401d59>']}, {'block_Idx': 417, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x658]>', '<mov~~rcx, qword ptr [rsp + 0x3b0]>', '<mov~~esi, dword ptr [rsp + 0x3a0]>', '<mov~~edi, dword ptr [rsp + 0x3a4]>', '<mov~~r8d, dword ptr [rsp + 0x3a8]>', '<mov~~edx, dword ptr [rsp + 0x3ac]>', '<add~~edx, dword ptr [rax + rcx*4]>', '<add~~edx, r8d>', '<add~~edx, edi>', '<add~~edx, esi>', '<mov~~dword ptr [rax + rcx*4], edx>', '<jmp~~0x402ee7>']}, {'block_Idx': 255, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x62c]>', '<mov~~edx, dword ptr [rsp + 0x628]>', '<mov~~eax, dword ptr [rsp + 0x634]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x968]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<jmp~~0x4022f7>']}, {'block_Idx': 19, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x938]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x401131>']}, {'block_Idx': 54, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x968]>', '<mov~~rax, qword ptr [rsp + 0x928]>', '<mov~~edx, dword ptr [rsp + 0x934]>', '<mov~~qword ptr [rsp + 0x8c0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x8d4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x8cc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x8d0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x958]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x8d8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x8dc], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x8e0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x8e4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400d81>']}, {'block_Idx': 158, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x750]>', '<mov~~ecx, dword ptr [rsp + 0x754]>', '<or~~ecx, 2>', '<sub~~ecx, 3>', '<mov~~dword ptr [rsp + 0x744], eax>', '<je~~0x401af2>']}, {'block_Idx': 0, 'blockInsts': ['<push~~rbx>', '<sub~~rsp, 0xa20>', '<mov~~qword ptr [rsp + 0x9d8], rdx>', '<mov~~qword ptr [rsp + 0x9e0], rcx>', '<mov~~dword ptr [rsp + 0x9ec], r8d>', '<mov~~rax, qword ptr [rdi + 0xa0]>', '<mov~~qword ptr [rsp + 0x9f0], rax>', '<mov~~rcx, rsi>', '<mov~~qword ptr [rsp + 0x9f8], rcx>', '<mov~~qword ptr [rsp + 0xa00], rsi>', '<mov~~ecx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0xa0c], ecx>', '<mov~~dword ptr [rdx], 0>', '<mov~~rcx, rax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0xa10], rcx>', '<mov~~eax, dword ptr [rax + 4]>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0xa1c], eax>', '<jne~~0x40077d>']}, {'block_Idx': 204, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x770]>', '<mov~~rsi, qword ptr [rsp + 0x110]>', '<mov~~rax, qword ptr [rsp + 0x820]>', '<mov~~ecx, dword ptr [rsp + 0x12c]>', '<mov~~edi, dword ptr [rsp + 0x128]>', '<mov~~r8d, dword ptr [rsp + 0x134]>', '<mov~~dword ptr [rsi], r8d>', '<sub~~edi, ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0x108]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0xf4], edx>', '<mov~~qword ptr [rsp + 0xf8], rcx>', '<mov~~qword ptr [rsp + 0x100], rax>', '<jmp~~0x403a74>']}, {'block_Idx': 167, 'blockInsts': ['<jmp~~0x401b0d>']}, {'block_Idx': 173, 'blockInsts': ['<jmp~~0x403eca>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x710]>', '<test~~eax, eax>', '<je~~0x401dd7>']}, {'block_Idx': 132, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x910]>', '<mov~~esi, dword ptr [rsp + 0x8bc]>', '<mov~~rdi, qword ptr [rax]>', '<shl~~esi, 2>', '<call~~0x500010>']}, {'block_Idx': 106, 'blockInsts': ['<mov~~r8d, dword ptr [rsp + 0x7c4]>', '<mov~~ecx, dword ptr [rsp + 0x7bc]>', '<mov~~rdi, qword ptr [rsp + 0x818]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x45a5]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 147, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x920]>', '<mov~~qword ptr [rax], rcx>', '<mov~~rax, qword ptr [rsp + 0x8e8]>', '<mov~~dword ptr [rax], 1>', '<mov~~eax, dword ptr [rsp + 0x8dc]>', '<cmp~~eax, 0>', '<jle~~0x400fcd>']}, {'block_Idx': 406, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x568]>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<mov~~r10d, dword ptr [rsp + 0x560]>', '<mov~~edx, dword ptr [rsp + 0x55c]>', '<mov~~rsi, qword ptr [rsp + 0x550]>', '<mov~~r8, qword ptr [rsp + 0x548]>', '<mov~~r9, qword ptr [rsp + 0x658]>', '<add~~edx, dword ptr [r9 + rsi*4]>', '<mov~~dword ptr [rsp + 0x438], edx>', '<mov~~eax, edx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x43c], eax>', '<mov~~r10d, eax>', '<add~~r10d, ecx>', '<mov~~dword ptr [rsp + 0x440], r10d>', '<mov~~dword ptr [r9 + rsi*4], r10d>', '<add~~edx, dword ptr [r9 + rsi*4 + 4]>', '<mov~~dword ptr [rsp + 0x444], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x448], ecx>', '<mov~~eax, ecx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x44c], eax>', '<mov~~dword ptr [r9 + rsi*4 + 4], eax>', '<add~~rsi, 2>', '<mov~~qword ptr [rsp + 0x450], rsi>', '<add~~rdi, 2>', '<mov~~qword ptr [rsp + 0x458], rdi>', '<cmp~~rdi, r8>', '<mov~~r8, rsi>', '<mov~~qword ptr [rsp + 0x550], r8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rsp + 0x55c], r8d>', '<mov~~r8d, ecx>', '<mov~~dword ptr [rsp + 0x560], r8d>', '<mov~~r8d, eax>', '<mov~~dword ptr [rsp + 0x564], r8d>', '<mov~~qword ptr [rsp + 0x568], rdi>', '<mov~~qword ptr [rsp + 0x580], rsi>', '<mov~~dword ptr [rsp + 0x58c], edx>', '<mov~~dword ptr [rsp + 0x590], ecx>', '<mov~~dword ptr [rsp + 0x594], eax>', '<je~~0x402cfb>']}, {'block_Idx': 169, 'blockInsts': ['<jmp~~0x401b0d>']}, {'block_Idx': 226, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x6f0]>', '<mov~~edx, dword ptr [rsp + 0x6ec]>', '<mov~~eax, dword ptr [rsp + 0x6cc]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x968]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<jmp~~0x401ede>']}, {'block_Idx': 27, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4b4d]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 35, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~ecx, dword ptr [rsp + 0x86c]>', '<add~~ecx, -8>', '<sub~~ecx, 3>', '<setb~~cl>', '<mov~~eax, dword ptr [rax + 0xc]>', '<mov~~edx, eax>', '<sub~~edx, 2>', '<sete~~dl>', '<and~~cl, dl>', '<test~~cl, 1>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jne~~0x401205>']}, {'block_Idx': 143, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x794]>', '<mov~~ecx, dword ptr [rsp + 0x840]>', '<mov~~rdx, qword ptr [rsp + 0x7b0]>', '<mov~~rsi, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rsp + 0x830]>', '<mov~~r8d, dword ptr [rsp + 0x808]>', '<mov~~r9d, dword ptr [rsp + 0x790]>', '<mov~~r10d, dword ptr [rsp + 0x7bc]>', '<mov~~r11, rsi>', '<add~~r11, 0x40>', '<mov~~qword ptr [rsp + 0x770], r11>', '<mov~~dword ptr [rsi + 0x40], r10d>', '<mov~~dword ptr [rsi + 8], r9d>', '<mov~~dword ptr [rdi], r8d>', '<mov~~rdi, rsi>', '<add~~rdi, 0x50>', '<mov~~qword ptr [rsp + 0x778], rdi>', '<mov~~dword ptr [rsi + 0x50], ecx>', '<mov~~edx, dword ptr [rdx]>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x784], edx>', '<mov~~dword ptr [rsp + 0x788], ecx>', '<mov~~dword ptr [rsp + 0x78c], eax>', '<jle~~0x403050>']}, {'block_Idx': 163, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f8]>', '<mov~~rdx, qword ptr [rsp + 0xa00]>', '<mov~~edi, dword ptr [rsp + 0x33c]>', '<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~eax, dword ptr [rax]>', '<test~~eax, eax>', '<setg~~r8b>', '<test~~edi, edi>', '<setg~~sil>', '<and~~r8b, sil>', '<xor~~esi, esi>', '<test~~r8b, 1>', '<mov~~r8d, eax>', '<mov~~dword ptr [rsp + 0x310], r8d>', '<mov~~r8d, edi>', '<mov~~dword ptr [rsp + 0x314], r8d>', '<mov~~r8d, edi>', '<mov~~dword ptr [rsp + 0x318], r8d>', '<mov~~dword ptr [rsp + 0x31c], edi>', '<mov~~qword ptr [rsp + 0x320], rsi>', '<mov~~qword ptr [rsp + 0x328], rdx>', '<mov~~qword ptr [rsp + 0x330], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jne~~0x403146>']}, {'block_Idx': 418, 'blockInsts': ['<mov~~r8, qword ptr [rsp + 0x5b8]>', '<mov~~edx, dword ptr [rsp + 0x5b4]>', '<mov~~r11d, dword ptr [rsp + 0x5b0]>', '<mov~~eax, dword ptr [rsp + 0x5ac]>', '<mov~~esi, dword ptr [rsp + 0x5a8]>', '<mov~~rdi, qword ptr [rsp + 0x5a0]>', '<mov~~r9, qword ptr [rsp + 0x598]>', '<mov~~r10, qword ptr [rsp + 0x658]>', '<add~~esi, dword ptr [r10 + rdi*4]>', '<mov~~dword ptr [rsp + 0x400], esi>', '<mov~~ecx, esi>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x404], ecx>', '<mov~~eax, ecx>', '<add~~eax, r11d>', '<mov~~dword ptr [rsp + 0x408], eax>', '<mov~~ebx, eax>', '<add~~ebx, edx>', '<mov~~dword ptr [rsp + 0x40c], ebx>', '<mov~~dword ptr [r10 + rdi*4], ebx>', '<mov~~r11, rdi>', '<or~~r11, 1>', '<mov~~qword ptr [rsp + 0x410], r11>', '<add~~esi, dword ptr [r10 + r11*4]>', '<mov~~dword ptr [rsp + 0x418], esi>', '<mov~~edx, esi>', '<add~~edx, ecx>', '<mov~~dword ptr [rsp + 0x41c], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x420], ecx>', '<mov~~eax, ecx>', '<add~~eax, ebx>', '<mov~~dword ptr [rsp + 0x424], eax>', '<mov~~dword ptr [r10 + r11*4], eax>', '<add~~rdi, 2>', '<mov~~qword ptr [rsp + 0x428], rdi>', '<add~~r8, 2>', '<mov~~qword ptr [rsp + 0x430], r8>', '<cmp~~r8, r9>', '<mov~~r9, rdi>', '<mov~~qword ptr [rsp + 0x5a0], r9>', '<mov~~r9d, esi>', '<mov~~dword ptr [rsp + 0x5a8], r9d>', '<mov~~r9d, edx>', '<mov~~dword ptr [rsp + 0x5ac], r9d>', '<mov~~r9d, ecx>', '<mov~~dword ptr [rsp + 0x5b0], r9d>', '<mov~~r9d, eax>', '<mov~~dword ptr [rsp + 0x5b4], r9d>', '<mov~~qword ptr [rsp + 0x5b8], r8>', '<mov~~qword ptr [rsp + 0x5d0], rdi>', '<mov~~dword ptr [rsp + 0x5dc], esi>', '<mov~~dword ptr [rsp + 0x5e0], edx>', '<mov~~dword ptr [rsp + 0x5e4], ecx>', '<mov~~dword ptr [rsp + 0x5e8], eax>', '<je~~0x402d7b>']}, {'block_Idx': 181, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x810]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x417f]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 247, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x9f0]>', '<mov~~rax, qword ptr [rsp + 0x748]>', '<mov~~esi, eax>', '<xor~~edx, edx>', '<call~~0x404f70>']}, {'block_Idx': 92, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x818]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x46b5]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 114, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~eax, dword ptr [rax + 8]>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40191a>']}, {'block_Idx': 263, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~rdx, qword ptr [rsp + 0x658]>', '<mov~~edi, dword ptr [rsp + 0x628]>', '<mov~~esi, dword ptr [rsp + 0x61c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x604], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x604]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x608], rax>', '<cmp~~rax, rcx>', '<je~~0x402381>']}, {'block_Idx': 266, 'blockInsts': ['<jmp~~0x403007>']}, {'block_Idx': 184, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x2d8]>', '<mov~~eax, dword ptr [rsp + 0x2f0]>', '<mov~~r9d, dword ptr [rsp + 0x2f4]>', '<mov~~r8d, dword ptr [rsp + 0x2f8]>', '<mov~~edi, dword ptr [rsp + 0x2fc]>', '<mov~~rcx, qword ptr [rsp + 0x300]>', '<mov~~rdx, qword ptr [rsp + 0x308]>', '<add~~rsi, 1>', '<movsxd~~r10, eax>', '<cmp~~rsi, r10>', '<mov~~r10d, eax>', '<mov~~dword ptr [rsp + 0x310], r10d>', '<mov~~dword ptr [rsp + 0x314], r9d>', '<mov~~dword ptr [rsp + 0x318], r8d>', '<mov~~dword ptr [rsp + 0x31c], edi>', '<mov~~qword ptr [rsp + 0x320], rsi>', '<mov~~qword ptr [rsp + 0x328], rdx>', '<mov~~qword ptr [rsp + 0x330], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jl~~0x403146>']}, {'block_Idx': 408, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x600]>', '<mov~~edx, dword ptr [rsp + 0x5fc]>', '<mov~~esi, dword ptr [rsp + 0x5f4]>', '<mov~~edi, dword ptr [rsp + 0x5ec]>', '<mov~~rax, qword ptr [rsp + 0x5c0]>', '<add~~rax, -4>', '<and~~rax, 0xfffffffffffffffe>', '<mov~~qword ptr [rsp + 0x598], rax>', '<mov~~r8d, 4>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x5a0], r8>', '<mov~~dword ptr [rsp + 0x5a8], edi>', '<mov~~dword ptr [rsp + 0x5ac], esi>', '<mov~~dword ptr [rsp + 0x5b0], edx>', '<mov~~dword ptr [rsp + 0x5b4], ecx>', '<mov~~qword ptr [rsp + 0x5b8], rax>', '<jmp~~0x402a98>']}, {'block_Idx': 66, 'blockInsts': ['<jmp~~0x403007>']}, {'block_Idx': 231, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~esi, dword ptr [rsp + 0x6ec]>', '<mov~~edx, dword ptr [rsp + 0x6c4]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x6b4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x6b8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402ee7>']}, {'block_Idx': 108, 'blockInsts': ['<jmp~~0x4016a3>']}, {'block_Idx': 47, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x950]>', '<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~eax, dword ptr [rax]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x928], rcx>', '<mov~~dword ptr [rsp + 0x934], eax>', '<jmp~~0x400c19>']}, {'block_Idx': 390, 'blockInsts': ['<jmp~~0x402c8d>']}, {'block_Idx': 59, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x848]>', '<movsxd~~rcx, eax>', '<lea~~rax, [rip + 0x4bb3]>', '<shl~~rcx, 2>', '<add~~rax, rcx>', '<mov~~qword ptr [rsp + 0x838], rax>', '<jmp~~0x401306>']}, {'block_Idx': 79, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x7d8]>', '<mov~~rcx, qword ptr [rsp + 0x7e0]>', '<mov~~dword ptr [rsp + 0x7d0], ecx>', '<cmp~~rax, 0>', '<jge~~0x4015b4>']}, {'block_Idx': 139, 'blockInsts': ['<mov~~dword ptr [rsp + 0x7a4], eax>', '<cmp~~eax, 0>', '<je~~0x4019b7>']}, {'block_Idx': 256, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~edi, dword ptr [rsp + 0x62c]>', '<mov~~esi, dword ptr [rsp + 0x628]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~r9d, dword ptr [rsp + 0x634]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x614], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x630]>', '<mov~~dword ptr [rsp + 0x618], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x614]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x618]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~rdx, qword ptr [rsp + 0x658]>', '<mov~~edi, dword ptr [rsp + 0x628]>', '<mov~~esi, dword ptr [rsp + 0x61c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x604], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x604]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x608], rax>', '<cmp~~rax, rcx>', '<je~~0x402381>']}, {'block_Idx': 140, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<sub~~eax, 0xe>', '<je~~0x4018ac>']}, {'block_Idx': 58, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x848]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4960]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 41, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x968]>', '<mov~~eax, dword ptr [rsp + 0x868]>', '<mov~~edx, dword ptr [rsp + 0x850]>', '<mov~~esi, dword ptr [rsp + 0x854]>', '<mov~~dword ptr [rsp + 0x840], esi>', '<mov~~dword ptr [rsp + 0x844], edx>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x848], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x4012ad>']}, {'block_Idx': 80, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7d8]>', '<mov~~rdi, qword ptr [rsp + 0x968]>', '<mov~~rdx, qword ptr [rsp + 0x7e0]>', '<mov~~rsi, qword ptr [rsp + 0x948]>', '<mov~~eax, dword ptr [rsp + 0x7d4]>', '<add~~eax, -1>', '<mov~~r8, rdx>', '<shr~~r8, 3>', '<mov~~esi, dword ptr [rsi + r8]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xf8>', '<add~~rdx, 8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rdi], r8d>', '<add~~esi, -0x80>', '<shl~~rcx, 6>', '<movsxd~~rdi, esi>', '<add~~rcx, rdi>', '<cmp~~esi, 0x40>', '<mov~~qword ptr [rsp + 0x7e8], rdx>', '<mov~~qword ptr [rsp + 0x7f0], rcx>', '<mov~~dword ptr [rsp + 0x7fc], eax>', '<jb~~0x4014cb>']}, {'block_Idx': 55, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x8f8]>', '<mov~~eax, dword ptr [rsp + 0x8d8]>', '<mov~~rcx, qword ptr [rsp + 0x8f0]>', '<mov~~rdi, qword ptr [rcx]>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x8c0]>', '<cdqe~~>', '<add~~rdx, rax>', '<call~~0x400110>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x980]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~edx, dword ptr [rsp + 0x9a8]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<call~~0x500018>']}, {'block_Idx': 145, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~rax, qword ptr [rsp + 0x948]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40191a>']}, {'block_Idx': 112, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7d0]>', '<mov~~eax, dword ptr [rsp + 0x858]>', '<movsxd~~rdx, eax>', '<lea~~rax, [rip + 0x4315]>', '<mov~~eax, dword ptr [rax + rdx*4]>', '<mov~~dword ptr [rsp + 0x7c8], ecx>', '<mov~~dword ptr [rsp + 0x7cc], eax>', '<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~edx, dword ptr [rsp + 0x7c8]>', '<mov~~eax, dword ptr [rsp + 0x7cc]>', '<mov~~dword ptr [rsp + 0x7bc], eax>', '<mov~~dword ptr [rsp + 0x7c0], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x7c4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401729>']}, {'block_Idx': 128, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x8b4]>', '<mov~~eax, dword ptr [rsp + 0x8b8]>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x8b0], eax>', '<jle~~0x400f57>']}, {'block_Idx': 197, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x820]>', '<mov~~rax, qword ptr [rsp + 0x828]>', '<mov~~rsi, qword ptr [rsp + 0x58]>', '<mov~~rdx, qword ptr [rsp + 0x50]>', '<mov~~r8d, dword ptr [rsp + 0x64]>', '<mov~~rdi, qword ptr [rsp + 0x68]>', '<mov~~r9, qword ptr [rsp + 0x70]>', '<mov~~r10, qword ptr [rsp + 0x78]>', '<mov~~qword ptr [rsp + 0x28], r10>', '<mov~~qword ptr [rsp + 0x30], r9>', '<mov~~qword ptr [rsp + 0x38], rdi>', '<mov~~dword ptr [rsp + 0x40], r8d>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~eax, dword ptr [rax]>', '<mov~~edi, esi>', '<sar~~edi, 1>', '<sub~~edx, edi>', '<mov~~dword ptr [rsp + 0x44], edx>', '<add~~edx, esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x48], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x4c], edx>', '<cmp~~eax, 0>', '<je~~0x403e4c>']}, {'block_Idx': 172, 'blockInsts': ['<lea~~rdi, [rip + 0x22b7]>', '<lea~~rsi, [rip + 0x2248]>', '<mov~~edx, 0x2ba>', '<lea~~rcx, [rip + 0x22b5]>', '<call~~0x500008>']}, {'block_Idx': 168, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~eax, dword ptr [rsp + 0x750]>', '<add~~eax, 1>', '<mov~~dword ptr [rcx], eax>', '<mov~~dword ptr [rsp + 0x744], eax>', '<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rsp + 0x950]>', '<mov~~edx, dword ptr [rsp + 0x744]>', '<mov~~dword ptr [rsp + 0x728], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x72c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x730], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x740], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x73c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x740]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401b9c>']}, {'block_Idx': 221, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x1a8]>', '<mov~~rcx, qword ptr [rsp + 0x1a0]>', '<mov~~rdx, qword ptr [rsp + 0x1b8]>', '<mov~~edi, dword ptr [rsp + 0x1b0]>', '<mov~~r8d, dword ptr [rsp + 0x1b4]>', '<mov~~rsi, qword ptr [rsp + 0x828]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x2a4], r8d>', '<mov~~dword ptr [rsp + 0x2a8], edi>', '<mov~~dword ptr [rsp + 0x2ac], esi>', '<mov~~qword ptr [rsp + 0x2b0], rdx>', '<mov~~qword ptr [rsp + 0x2b8], rcx>', '<mov~~qword ptr [rsp + 0x2c0], rax>', '<jmp~~0x40343f>']}, {'block_Idx': 33, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rsp + 0x960]>', '<mov~~rdi, qword ptr [rsp + 0x958]>', '<mov~~r9, qword ptr [rsp + 0x950]>', '<mov~~r11d, dword ptr [rsp + 0x8e4]>', '<mov~~rdx, qword ptr [rsp + 0x8c0]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x403f01>']}, {'block_Idx': 9, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x9c4]>', '<mov~~edx, dword ptr [rsp + 0x9b0]>', '<mov~~dword ptr [rsp + 0x9a4], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x9a8], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<jb~~0x403fdf>']}, {'block_Idx': 238, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6a8]>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~rdx, qword ptr [rsp + 0x6a0]>', '<mov~~esi, dword ptr [rsp + 0x6b8]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x698], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x6a8], rax>', '<jl~~0x401f44>']}, {'block_Idx': 382, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x600]>', '<mov~~ecx, dword ptr [rsp + 0x5fc]>', '<mov~~edx, dword ptr [rsp + 0x5f4]>', '<mov~~edi, dword ptr [rsp + 0x654]>', '<mov~~esi, edi>', '<add~~rsi, -3>', '<mov~~qword ptr [rsp + 0x570], rsi>', '<and~~rsi, 1>', '<mov~~qword ptr [rsp + 0x578], rsi>', '<mov~~esi, 3>', '<cmp~~edi, 4>', '<mov~~qword ptr [rsp + 0x580], rsi>', '<mov~~dword ptr [rsp + 0x58c], edx>', '<mov~~dword ptr [rsp + 0x590], ecx>', '<mov~~dword ptr [rsp + 0x594], eax>', '<je~~0x402cfb>']}, {'block_Idx': 18, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x948]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~dword ptr [rdx], 0x20>', '<mov~~rdx, rax>', '<add~~rdx, 0x54>', '<mov~~qword ptr [rsp + 0x8e8], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x20>', '<mov~~qword ptr [rsp + 0x8f0], rdx>', '<mov~~rdx, rax>', '<mov~~qword ptr [rsp + 0x8f8], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0xc>', '<mov~~qword ptr [rsp + 0x900], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x10>', '<mov~~qword ptr [rsp + 0x908], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x58>', '<mov~~qword ptr [rsp + 0x910], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0xa8>', '<mov~~qword ptr [rsp + 0x918], rdx>', '<add~~rax, 0x98>', '<mov~~qword ptr [rsp + 0x920], rax>', '<mov~~eax, 0x20>', '<mov~~qword ptr [rsp + 0x928], rcx>', '<mov~~dword ptr [rsp + 0x934], eax>', '<mov~~rdi, qword ptr [rsp + 0x968]>', '<mov~~rax, qword ptr [rsp + 0x928]>', '<mov~~edx, dword ptr [rsp + 0x934]>', '<mov~~qword ptr [rsp + 0x8c0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x8d4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x8cc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x8d0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x958]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x8d8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x8dc], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x8e0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>']}, {'block_Idx': 102, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~edx, dword ptr [rsp + 0x7c8]>', '<mov~~eax, dword ptr [rsp + 0x7cc]>', '<mov~~dword ptr [rsp + 0x7bc], eax>', '<mov~~dword ptr [rsp + 0x7c0], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x7c4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401729>']}, {'block_Idx': 211, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0xa0]>', '<mov~~edx, dword ptr [rsp + 0xb0]>', '<mov~~rsi, qword ptr [rsp + 0x98]>', '<mov~~edi, dword ptr [rsp + 0xb4]>', '<mov~~ecx, dword ptr [rsp + 0xb8]>', '<mov~~r8d, dword ptr [rsp + 0xbc]>', '<mov~~word ptr [rsi], r8w>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0x84], edx>', '<mov~~qword ptr [rsp + 0x88], rcx>', '<mov~~qword ptr [rsp + 0x90], rax>', '<mov~~rsi, qword ptr [rsp + 0xa8]>', '<mov~~eax, dword ptr [rsp + 0x84]>', '<mov~~rcx, qword ptr [rsp + 0x88]>', '<mov~~rdx, qword ptr [rsp + 0x90]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0xd4], edi>', '<mov~~qword ptr [rsp + 0xd8], rsi>', '<mov~~qword ptr [rsp + 0xe0], rdx>', '<mov~~qword ptr [rsp + 0xe8], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jl~~0x403b76>']}, {'block_Idx': 144, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7a4]>', '<mov~~rax, qword ptr [rsp + 0x810]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4347]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 63, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rsp + 0x948]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x800], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~ecx, edi>', '<shr~~ecx, 8>', '<mov~~eax, edx>', '<or~~eax, 8>', '<cmp~~esi, 0>', '<cmove~~ecx, edi>', '<cmp~~esi, 0>', '<cmove~~eax, edx>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, qword ptr [rip + 0xfebcb]>', '<movzx~~ecx, byte ptr [rcx + rdx]>', '<add~~eax, ecx>', '<mov~~ecx, 7>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsp + 0x804], ecx>', '<cmp~~eax, 6>', '<je~~0x401597>']}, {'block_Idx': 44, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x86c]>', '<add~~eax, -7>', '<mov~~ecx, 2>', '<mov~~dword ptr [rsp + 0x850], ecx>', '<mov~~dword ptr [rsp + 0x854], eax>', '<jmp~~0x401254>']}, {'block_Idx': 159, 'blockInsts': ['<jmp~~0x403007>']}, {'block_Idx': 42, 'blockInsts': ['<jmp~~0x401224>']}, {'block_Idx': 62, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x18], rdi>', '<mov~~qword ptr [rsp + 0x20], rsi>', '<mov~~qword ptr [rsp + 0x28], rdx>', '<mov~~eax, dword ptr [rdx + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<mov~~dword ptr [rsp + 0x34], eax>', '<mov~~dword ptr [rsi], eax>', '<cmp~~eax, 0x10>', '<jge~~0x400166>']}, {'block_Idx': 464, 'blockInsts': ['<mov~~rax, qword ptr [rbp - 0x18]>', '<mov~~ecx, dword ptr [rbp - 0xb4]>', '<mov~~edx, dword ptr [rbp - 0x3a8]>', '<sar~~edx, cl>', '<mov~~ecx, dword ptr [rbp - 0x3a4]>', '<movsxd~~rcx, ecx>', '<add~~edx, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rax + rcx*4], edx>', '<xor~~eax, eax>', '<mov~~dword ptr [rbp - 0xac], eax>', '<mov~~eax, dword ptr [rbp - 0xac]>', '<lea~~rsp, [rbp - 8]>', '<pop~~rbx>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 129, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x950]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x798], rcx>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x794], eax>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x798]>', '<movsxd~~rcx, eax>', '<xor~~esi, esi>', '<call~~0x500050>']}, {'block_Idx': 110, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<cmp~~eax, 0>', '<jne~~0x4017aa>']}, {'block_Idx': 391, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x4e0]>', '<mov~~eax, dword ptr [rsp + 0x4dc]>', '<mov~~rcx, qword ptr [rsp + 0x4d0]>', '<mov~~rsi, qword ptr [rsp + 0x4c8]>', '<mov~~rdi, qword ptr [rsp + 0x658]>', '<mov~~qword ptr [rsp + 0x4a0], rcx>', '<add~~eax, dword ptr [rdi + rcx*4]>', '<mov~~dword ptr [rsp + 0x4a8], eax>', '<mov~~dword ptr [rdi + rcx*4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 4]>', '<mov~~dword ptr [rsp + 0x4ac], eax>', '<mov~~dword ptr [rdi + rcx*4 + 4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 8]>', '<mov~~dword ptr [rsp + 0x4b0], eax>', '<mov~~dword ptr [rdi + rcx*4 + 8], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 0xc]>', '<mov~~dword ptr [rsp + 0x4b4], eax>', '<mov~~dword ptr [rdi + rcx*4 + 0xc], eax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x4b8], rcx>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x4c0], rdx>', '<cmp~~rdx, rsi>', '<mov~~rsi, rcx>', '<mov~~qword ptr [rsp + 0x4d0], rsi>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x4dc], esi>', '<mov~~qword ptr [rsp + 0x4e0], rdx>', '<mov~~qword ptr [rsp + 0x4f8], rcx>', '<mov~~dword ptr [rsp + 0x504], eax>', '<je~~0x402c53>']}, {'block_Idx': 378, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3f8]>', '<mov~~ecx, dword ptr [rsp + 0x3f4]>', '<mov~~rdx, qword ptr [rsp + 0x3e8]>', '<mov~~rsi, qword ptr [rsp + 0x4f0]>', '<mov~~rdi, qword ptr [rsp + 0x658]>', '<add~~ecx, dword ptr [rdi + rdx*4]>', '<mov~~dword ptr [rsp + 0x3d4], ecx>', '<mov~~dword ptr [rdi + rdx*4], ecx>', '<add~~rdx, 1>', '<mov~~qword ptr [rsp + 0x3d8], rdx>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3e0], rax>', '<cmp~~rax, rsi>', '<mov~~qword ptr [rsp + 0x3e8], rdx>', '<mov~~dword ptr [rsp + 0x3f4], ecx>', '<mov~~qword ptr [rsp + 0x3f8], rax>', '<je~~0x402ee7>']}, {'block_Idx': 119, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~eax, dword ptr [rsp + 0x85c]>', '<movsxd~~rdx, eax>', '<lea~~rax, [rip + 0x4242]>', '<mov~~eax, dword ptr [rax + rdx*4]>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40191a>']}, {'block_Idx': 365, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x654]>', '<cmp~~eax, 3>', '<jle~~0x402ee7>']}, {'block_Idx': 207, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x1d8]>', '<mov~~rdx, qword ptr [rsp + 0x7b0]>', '<mov~~rsi, qword ptr [rsp + 0x1e0]>', '<mov~~edi, dword ptr [rsp + 0x1f8]>', '<mov~~rax, rsi>', '<add~~rax, 4>', '<mov~~dword ptr [rsi], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x1c0], esi>', '<mov~~dword ptr [rsp + 0x1c4], edx>', '<mov~~qword ptr [rsp + 0x1c8], rcx>', '<mov~~qword ptr [rsp + 0x1d0], rax>', '<jmp~~0x403564>']}, {'block_Idx': 350, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x658]>', '<mov~~esi, dword ptr [rsp + 0x5f8]>', '<mov~~edx, dword ptr [rsp + 0x5fc]>', '<sub~~edx, esi>', '<mov~~esi, eax>', '<add~~esi, -3>', '<mov~~esi, esi>', '<mov~~ecx, dword ptr [rcx + rsi*4]>', '<mov~~dword ptr [rsp + 0x5f0], ecx>', '<add~~ecx, edx>', '<mov~~dword ptr [rsp + 0x5f4], ecx>', '<cmp~~eax, 3>', '<je~~0x4025aa>']}, {'block_Idx': 200, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x810]>', '<mov~~rdi, qword ptr [rax]>', '<lea~~rsi, [rip + 0x3fdc]>', '<xor~~edx, edx>', '<call~~0x500058>']}, {'block_Idx': 130, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<sub~~eax, 0xd>', '<je~~0x401865>']}, {'block_Idx': 203, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x110]>', '<mov~~edx, dword ptr [rsp + 0x124]>', '<mov~~rsi, qword ptr [rsp + 0x108]>', '<mov~~ecx, dword ptr [rsp + 0x130]>', '<mov~~r8d, dword ptr [rsp + 0x12c]>', '<mov~~edi, dword ptr [rsp + 0x128]>', '<mov~~r9d, dword ptr [rsp + 0x134]>', '<mov~~word ptr [rsi], r9w>', '<sub~~edi, r8d>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0xf4], edx>', '<mov~~qword ptr [rsp + 0xf8], rcx>', '<mov~~qword ptr [rsp + 0x100], rax>', '<mov~~rsi, qword ptr [rsp + 0x118]>', '<mov~~eax, dword ptr [rsp + 0xf4]>', '<mov~~rcx, qword ptr [rsp + 0xf8]>', '<mov~~rdx, qword ptr [rsp + 0x100]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x14c], edi>', '<mov~~qword ptr [rsp + 0x150], rsi>', '<mov~~qword ptr [rsp + 0x158], rdx>', '<mov~~qword ptr [rsp + 0x160], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jl~~0x40391e>']}, {'block_Idx': 186, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f8]>', '<mov~~rcx, qword ptr [rsp + 0xa00]>', '<mov~~esi, dword ptr [rsp + 0x80]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x50], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x58], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0x64], esi>', '<mov~~qword ptr [rsp + 0x68], rdx>', '<mov~~qword ptr [rsp + 0x70], rcx>', '<mov~~qword ptr [rsp + 0x78], rax>', '<jmp~~0x403da1>']}, {'block_Idx': 395, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x600]>', '<mov~~edx, dword ptr [rsp + 0x5fc]>', '<mov~~esi, dword ptr [rsp + 0x5f4]>', '<mov~~rax, qword ptr [rsp + 0x570]>', '<and~~rax, 0xfffffffffffffffe>', '<mov~~qword ptr [rsp + 0x548], rax>', '<mov~~edi, 3>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x550], rdi>', '<mov~~dword ptr [rsp + 0x55c], esi>', '<mov~~dword ptr [rsp + 0x560], edx>', '<mov~~dword ptr [rsp + 0x564], ecx>', '<mov~~qword ptr [rsp + 0x568], rax>', '<jmp~~0x40299a>']}, {'block_Idx': 134, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~rax, qword ptr [rsp + 0x948]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40191a>']}, {'block_Idx': 177, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0xf0], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jle~~0x403eca>']}, {'block_Idx': 216, 'blockInsts': ['<jmp~~0x403eca>']}, {'block_Idx': 230, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x270]>', '<mov~~rdi, qword ptr [rsp + 0x268]>', '<mov~~r9, qword ptr [rsp + 0x260]>', '<mov~~rsi, qword ptr [rsp + 0x258]>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~r8, qword ptr [rsp + 0x2d8]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~qword ptr [rsp + 0x228], r9>', '<mov~~r10, qword ptr [rax + r9*8 + 0x58]>', '<mov~~r10d, dword ptr [r10 + r8*4]>', '<shl~~r10d, cl>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~dword ptr [rsp + 0x1fc], r10d>', '<mov~~word ptr [rdi], r10w>', '<mov~~r10, r9>', '<or~~r10, 1>', '<mov~~qword ptr [rsp + 0x200], r10>', '<mov~~r10, qword ptr [rax + r10*8 + 0x58]>', '<mov~~r10d, dword ptr [r10 + r8*4]>', '<shl~~r10d, cl>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~dword ptr [rsp + 0x20c], r10d>', '<mov~~word ptr [rdi + 2], r10w>', '<mov~~r10, r9>', '<or~~r10, 2>', '<mov~~qword ptr [rsp + 0x210], r10>', '<mov~~r10, qword ptr [rax + r10*8 + 0x58]>', '<mov~~r10d, dword ptr [r10 + r8*4]>', '<shl~~r10d, cl>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~dword ptr [rsp + 0x21c], r10d>', '<mov~~word ptr [rdi + 4], r10w>', '<or~~r9, 3>', '<mov~~qword ptr [rsp + 0x220], r9>', '<mov~~rax, qword ptr [rax + r9*8 + 0x58]>', '<mov~~eax, dword ptr [rax + r8*4]>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x228]>', '<mov~~dword ptr [rsp + 0x234], eax>', '<mov~~r8w, ax>', '<mov~~rax, rdi>', '<add~~rax, 8>', '<mov~~qword ptr [rsp + 0x238], rax>', '<mov~~word ptr [rdi + 6], r8w>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x240], rcx>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x248], rdx>', '<cmp~~rdx, rsi>', '<mov~~rsi, rcx>', '<mov~~qword ptr [rsp + 0x260], rsi>', '<mov~~rsi, rax>', '<mov~~qword ptr [rsp + 0x268], rsi>', '<mov~~qword ptr [rsp + 0x270], rdx>', '<mov~~rdx, rax>', '<mov~~qword ptr [rsp + 0x250], rdx>', '<mov~~qword ptr [rsp + 0x290], rcx>', '<mov~~qword ptr [rsp + 0x298], rax>', '<je~~0x40367b>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x9ec]>', '<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<cmp~~dword ptr [rcx], 0x43614c66>', '<mov~~dword ptr [rsp + 0x9b0], eax>', '<je~~0x400804>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~esi, dword ptr [rsp + 0x9c8]>', '<mov~~eax, dword ptr [rsp + 0x9cc]>', '<mov~~rdx, qword ptr [rsp + 0x9d0]>', '<mov~~dword ptr [rsp + 0x940], eax>', '<mov~~dword ptr [rsp + 0x944], esi>', '<mov~~edi, eax>', '<shl~~edi, 3>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x948], rdx>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~edi, esi>', '<xor~~r8d, r8d>', '<cmp~~eax, 0>', '<mov~~esi, eax>', '<cmovl~~esi, r8d>', '<mov~~r8, rcx>', '<add~~r8, 0x28>', '<mov~~qword ptr [rsp + 0x950], r8>', '<mov~~qword ptr [rcx + 0x28], rdx>', '<mov~~r8, rcx>', '<add~~r8, 0x3c>', '<mov~~qword ptr [rsp + 0x958], r8>', '<mov~~dword ptr [rcx + 0x3c], edi>', '<mov~~esi, esi>', '<add~~rdx, rsi>', '<mov~~rsi, rcx>', '<add~~rsi, 0x30>', '<mov~~qword ptr [rsp + 0x960], rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x968], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<cmp~~eax, 0x18>', '<jl~~0x403f01>']}, {'block_Idx': 50, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x838], rax>', '<jmp~~0x401306>']}, {'block_Idx': 57, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x968]>', '<mov~~rax, qword ptr [rsp + 0x860]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rsi, qword ptr [rsp + 0x838]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x808], esi>', '<cmp~~esi, 0x10>', '<setg~~r8b>', '<mov~~byte ptr [rsp + 0x80f], r8b>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x810], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r9d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r9d>', '<mov~~r9d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r9d, r11d>', '<and~~r8b, 1>', '<movzx~~r8d, r8b>', '<mov~~dword ptr [rdi + 0x58], r10d>', '<sub~~r9d, esi>', '<mov~~r10, rdi>', '<mov~~qword ptr [rsp + 0x818], r10>', '<mov~~r10, rdx>', '<add~~r10, 0x48>', '<mov~~qword ptr [rsp + 0x820], r10>', '<mov~~dword ptr [rdx + 0x48], r9d>', '<mov~~r9, rdx>', '<add~~r9, 0x4c>', '<mov~~qword ptr [rsp + 0x828], r9>', '<mov~~dword ptr [rdx + 0x4c], r8d>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x830], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x4013fa>']}, {'block_Idx': 194, 'blockInsts': ['<jmp~~0x403eca>']}, {'block_Idx': 396, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x600]>', '<mov~~ecx, dword ptr [rsp + 0x5fc]>', '<mov~~edx, dword ptr [rsp + 0x5f4]>', '<mov~~esi, dword ptr [rsp + 0x5ec]>', '<mov~~r8d, dword ptr [rsp + 0x654]>', '<mov~~edi, r8d>', '<mov~~qword ptr [rsp + 0x5c0], rdi>', '<and~~rdi, 1>', '<mov~~qword ptr [rsp + 0x5c8], rdi>', '<mov~~edi, 4>', '<cmp~~r8d, 5>', '<mov~~qword ptr [rsp + 0x5d0], rdi>', '<mov~~dword ptr [rsp + 0x5dc], esi>', '<mov~~dword ptr [rsp + 0x5e0], edx>', '<mov~~dword ptr [rsp + 0x5e4], ecx>', '<mov~~dword ptr [rsp + 0x5e8], eax>', '<je~~0x402d7b>']}, {'block_Idx': 142, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x900]>', '<mov~~rdx, rax>', '<mov~~rax, qword ptr [rsp + 0x910]>', '<mov~~qword ptr [rax], rdx>', '<mov~~eax, 1>', '<cmp~~dword ptr [rcx], 1>', '<mov~~qword ptr [rsp + 0x8a8], rax>', '<jle~~0x400f46>']}, {'block_Idx': 176, 'blockInsts': ['<lea~~rdi, [rip + 0x1e34]>', '<lea~~rsi, [rip + 0x1dc5]>', '<mov~~edx, 0x2be>', '<lea~~rcx, [rip + 0x1e32]>', '<call~~0x500008>']}, {'block_Idx': 319, 'blockInsts': ['<jmp~~0x4023d1>']}, {'block_Idx': 227, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x968]>', '<mov~~edi, dword ptr [rsp + 0x6f0]>', '<mov~~esi, dword ptr [rsp + 0x6ec]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~r9d, dword ptr [rsp + 0x6cc]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x6bc], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x6c8]>', '<mov~~dword ptr [rsp + 0x6c0], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6bc]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6c0]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~esi, dword ptr [rsp + 0x6ec]>', '<mov~~edx, dword ptr [rsp + 0x6c4]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x6b4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x6b8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402ee7>']}, {'block_Idx': 87, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~rdx, qword ptr [rsp + 0x7f0]>', '<mov~~eax, dword ptr [rsp + 0x7fc]>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<mov~~qword ptr [rsp + 0x7d8], rdx>', '<mov~~qword ptr [rsp + 0x7e0], rcx>', '<cmp~~eax, 1>', '<jle~~0x40157a>']}, {'block_Idx': 364, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x600]>', '<mov~~ecx, dword ptr [rsp + 0x5fc]>', '<mov~~edx, dword ptr [rsp + 0x654]>', '<mov~~edx, edx>', '<mov~~esi, edx>', '<mov~~rdx, rsi>', '<add~~rdx, -2>', '<mov~~qword ptr [rsp + 0x528], rdx>', '<add~~rsi, -3>', '<and~~rdx, 3>', '<mov~~qword ptr [rsp + 0x530], rdx>', '<mov~~edx, 2>', '<cmp~~rsi, 3>', '<mov~~qword ptr [rsp + 0x538], rdx>', '<mov~~dword ptr [rsp + 0x540], ecx>', '<mov~~dword ptr [rsp + 0x544], eax>', '<jb~~0x402e16>']}, {'block_Idx': 242, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x710]>', '<cmp~~eax, 0x1f>', '<jle~~0x402c33>']}, {'block_Idx': 407, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x5c8]>', '<mov~~rcx, qword ptr [rsp + 0x5d0]>', '<mov~~edx, dword ptr [rsp + 0x5dc]>', '<mov~~esi, dword ptr [rsp + 0x5e0]>', '<mov~~edi, dword ptr [rsp + 0x5e4]>', '<mov~~r8d, dword ptr [rsp + 0x5e8]>', '<mov~~dword ptr [rsp + 0x3a0], r8d>', '<mov~~dword ptr [rsp + 0x3a4], edi>', '<mov~~dword ptr [rsp + 0x3a8], esi>', '<mov~~dword ptr [rsp + 0x3ac], edx>', '<mov~~qword ptr [rsp + 0x3b0], rcx>', '<cmp~~rax, 0>', '<je~~0x402ee7>']}, {'block_Idx': 244, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x350]>', '<mov~~rcx, qword ptr [rsp + 0x778]>', '<mov~~rax, qword ptr [rsp + 0x968]>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x784], edx>', '<mov~~dword ptr [rsp + 0x788], ecx>', '<mov~~dword ptr [rsp + 0x78c], eax>', '<jmp~~0x403050>']}], 'cfg_edge_info': [(350, 365), (218, 218), (191, 201), (21, 37), (199, 214), (11, 14), (229, 75), (210, 223), (140, 146), (132, 142), (203, 193), (41, 51), (45, 12), (56, 12), (442, 75), (125, 130), (233, 239), (74, 75), (85, 75), (236, 244), (392, 232), (106, 116), (96, 99), (264, 311), (48, 49), (442, 443), (365, 232), (148, 136), (391, 379), (223, 166), (240, 246), (243, 251), (51, 59), (246, 253), (14, 28), (143, 151), (265, 275), (122, 128), (66, 75), (155, 162), (202, 75), (198, 212), (139, 144), (379, 391), (191, 191), (180, 191), (199, 213), (40, 49), (140, 145), (240, 232), (380, 392), (232, 237), (225, 198), (25, 33), (37, 7), (356, 290), (338, 349), (177, 166), (117, 121), (406, 394), (220, 222), (228, 235), (221, 196), (61, 67), (10, 12), (184, 174), (290, 75), (67, 12), (51, 58), (87, 79), (217, 216), (165, 178), (143, 150), (179, 180), (88, 71), (195, 206), (235, 242), (198, 211), (6, 10), (250, 258), (136, 147), (139, 143), (166, 17), (180, 190), (161, 149), (54, 32), (242, 250), (290, 299), (253, 259), (217, 193), (32, 40), (89, 7), (349, 232), (64, 81), (227, 233), (417, 232), (201, 199), (149, 161), (197, 210), (120, 125), (220, 221), (50, 57), (228, 234), (249, 266), (142, 149), (39, 47), (382, 395), (445, 442), (124, 118), (72, 80), (416, 406), (127, 132), (256, 264), (57, 64), (235, 241), (241, 248), (161, 148), (260, 270), (464, 442), (242, 249), (137, 56), (275, 255), (326, 337), (175, 186), (32, 39), (35, 44), (193, 203), (135, 140), (164, 176), (248, 255), (227, 232), (238, 238), (120, 124), (197, 209), (27, 45), (244, 150), (42, 52), (142, 148), (381, 393), (182, 193), (200, 229), (393, 404), (234, 240), (204, 217), (382, 394), (159, 75), (170, 75), (45, 53), (72, 79), (251, 158), (245, 236), (127, 131), (57, 63), (209, 197), (266, 75), (19, 27), (241, 247), (211, 224), (252, 252), (75, 89), (212, 225), (196, 208), (53, 61), (237, 236), (164, 175), (26, 34), (237, 245), (418, 424), (259, 269), (119, 118), (112, 106), (194, 166), (363, 362), (115, 120), (16, 7), (251, 157), (174, 184), (226, 231), (156, 166), (18, 25), (247, 290), (230, 219), (260, 232), (19, 26), (224, 166), (393, 380), (41, 50), (163, 174), (223, 197), (311, 319), (233, 238), (56, 47), (196, 207), (68, 12), (236, 243), (93, 96), (396, 408), (230, 205), (86, 93), (151, 158), (44, 41), (362, 378), (112, 105), (263, 265), (105, 75), (116, 75), (34, 42), (122, 127), (214, 228), (107, 102), (177, 188), (407, 232), (8, 7), (118, 129), (406, 416), (40, 48), (232, 236), (383, 396), (25, 32), (147, 39), (392, 392), (225, 224), (216, 166), (144, 159), (395, 406), (114, 118), (155, 165), (67, 61), (206, 219), (218, 184), (59, 57), (99, 102), (188, 198), (8, 11), (207, 220), (80, 88), (129, 139), (100, 103), (151, 157), (213, 227), (162, 172), (37, 10), (252, 236), (165, 177), (394, 405), (195, 205), (206, 205), (356, 311), (269, 270), (166, 16), (0, 2), (58, 74), (270, 253), (169, 179), (81, 75), (205, 218), (364, 381), (103, 108), (155, 164), (158, 169), (365, 382), (47, 54), (350, 366), (80, 87), (33, 12), (213, 226), (110, 115), (162, 171), (380, 232), (424, 418), (43, 52), (128, 132), (157, 168), (264, 321), (391, 362), (150, 156), (153, 170), (102, 106), (173, 166), (383, 232), (35, 43), (364, 380), (103, 107), (28, 22), (17, 31), (168, 181), (239, 232), (2, 5), (131, 137), (110, 114), (231, 233), (146, 153), (269, 232), (338, 350), (208, 222), (117, 122), (394, 232), (128, 131), (157, 167), (348, 363), (390, 378), (79, 86), (61, 68), (150, 155), (349, 364), (190, 200), (10, 13), (175, 166), (102, 105), (87, 80), (108, 112), (9, 8), (407, 417), (28, 21), (179, 181), (378, 390), (6, 2), (408, 418), (168, 180), (247, 321), (205, 184), (171, 182), (404, 393), (54, 33), (443, 232), (2, 4), (337, 232), (253, 260), (131, 136), (115, 119), (363, 379), (13, 19), (231, 232), (405, 232), (245, 252), (49, 39), (299, 232), (208, 221), (348, 362), (319, 326), (201, 200), (39, 12), (378, 232), (163, 173), (190, 199), (250, 442), (185, 196), (396, 407), (5, 9), (9, 7), (86, 92), (256, 265), (366, 384), (337, 348), (130, 135), (98, 75), (186, 197), (79, 71), (63, 72), (71, 85), (219, 230), (12, 17), (137, 39), (311, 75), (263, 264), (34, 41), (275, 256), (13, 18), (326, 338), (16, 23), (105, 110), (193, 204), (5, 4), (248, 256), (49, 56), (167, 179), (238, 239), (55, 117), (134, 118), (31, 7), (4, 8), (409, 75), (52, 66), (147, 56), (15, 22), (185, 195), (130, 134), (366, 383), (48, 55), (11, 15), (92, 98), (211, 198), (63, 71), (12, 16), (145, 118), (1, 6), (181, 202), (22, 38), (384, 409), (362, 232), (55, 62), (96, 100), (209, 166), (38, 37), (26, 35), (418, 407), (0, 1), (148, 137), (222, 184), (171, 166), (184, 194), (53, 12), (4, 7), (203, 216), (255, 263), (155, 163), (174, 185), (158, 168)], 'cdg_edge_info': [(102, 7), (218, 218), (180, 201), (199, 214), (11, 14), (140, 146), (199, 232), (112, 75), (203, 193), (41, 51), (383, 407), (56, 12), (442, 75), (103, 102), (364, 393), (236, 244), (96, 99), (206, 230), (228, 236), (48, 49), (148, 136), (442, 443), (184, 184), (240, 246), (110, 118), (34, 7), (190, 7), (51, 59), (143, 151), (122, 128), (366, 89), (155, 162), (198, 212), (96, 103), (139, 144), (326, 236), (191, 191), (140, 118), (228, 240), (180, 191), (199, 213), (40, 49), (80, 85), (140, 145), (380, 392), (232, 237), (253, 269), (225, 198), (25, 33), (290, 89), (37, 7), (366, 75), (338, 349), (155, 166), (117, 121), (198, 225), (128, 148), (228, 235), (80, 71), (61, 67), (168, 202), (166, 31), (80, 89), (10, 12), (184, 174), (338, 232), (241, 290), (290, 75), (86, 7), (51, 58), (87, 79), (35, 41), (179, 180), (127, 142), (235, 242), (195, 206), (28, 38), (269, 253), (198, 211), (6, 10), (120, 130), (139, 143), (157, 179), (120, 139), (166, 17), (180, 190), (80, 75), (161, 149), (105, 7), (54, 32), (338, 236), (242, 250), (290, 299), (253, 259), (217, 193), (32, 40), (227, 233), (179, 202), (201, 199), (120, 125), (197, 210), (220, 221), (142, 149), (242, 7), (39, 47), (349, 380), (382, 395), (363, 391), (72, 80), (127, 132), (193, 217), (235, 241), (185, 222), (57, 64), (140, 89), (120, 129), (241, 248), (197, 223), (260, 270), (63, 89), (51, 7), (150, 166), (102, 89), (242, 249), (137, 56), (275, 255), (326, 337), (231, 239), (175, 186), (32, 39), (35, 44), (193, 203), (248, 255), (140, 75), (238, 238), (120, 124), (197, 209), (102, 75), (171, 193), (112, 116), (131, 147), (45, 53), (115, 139), (251, 158), (208, 196), (127, 131), (34, 89), (378, 378), (57, 63), (209, 197), (179, 7), (19, 27), (366, 409), (241, 247), (19, 45), (54, 12), (63, 79), (236, 150), (163, 184), (48, 117), (35, 7), (252, 252), (275, 263), (196, 208), (53, 61), (34, 66), (164, 166), (34, 75), (26, 34), (164, 175), (237, 245), (396, 418), (248, 263), (442, 232), (199, 236), (112, 106), (263, 275), (115, 120), (16, 7), (115, 129), (34, 52), (251, 157), (177, 198), (86, 89), (86, 98), (19, 26), (442, 236), (41, 50), (163, 174), (223, 197), (311, 319), (233, 238), (105, 89), (56, 47), (236, 243), (196, 207), (86, 75), (396, 408), (130, 118), (86, 93), (19, 12), (201, 7), (151, 158), (366, 232), (362, 378), (112, 105), (263, 265), (105, 75), (34, 42), (57, 7), (122, 127), (96, 102), (177, 188), (8, 7), (418, 418), (290, 232), (40, 48), (391, 391), (140, 153), (383, 396), (366, 236), (25, 32), (147, 39), (392, 392), (110, 139), (168, 89), (51, 89), (236, 251), (155, 165), (67, 61), (158, 179), (8, 11), (290, 236), (80, 88), (140, 139), (151, 157), (213, 227), (240, 253), (350, 232), (37, 10), (51, 57), (168, 75), (165, 177), (51, 75), (394, 405), (269, 270), (166, 7), (128, 142), (406, 406), (311, 7), (166, 16), (0, 2), (148, 147), (205, 218), (139, 7), (190, 229), (213, 231), (179, 89), (241, 311), (102, 116), (110, 129), (350, 236), (364, 381), (103, 108), (79, 7), (155, 164), (158, 169), (35, 89), (350, 366), (140, 129), (80, 87), (161, 161), (179, 75), (213, 226), (110, 115), (162, 171), (51, 74), (103, 112), (35, 66), (190, 89), (35, 75), (57, 81), (157, 168), (128, 132), (139, 150), (139, 159), (201, 229), (150, 156), (142, 161), (25, 12), (102, 106), (242, 266), (13, 25), (162, 166), (35, 43), (103, 107), (35, 52), (190, 75), (28, 22), (63, 7), (168, 181), (228, 232), (2, 5), (39, 54), (131, 137), (110, 114), (231, 233), (201, 89), (165, 166), (338, 350), (127, 148), (112, 7), (220, 196), (117, 122), (120, 118), (157, 167), (348, 363), (128, 131), (57, 89), (79, 86), (326, 232), (442, 7), (241, 264), (150, 155), (349, 364), (190, 200), (10, 13), (102, 105), (201, 75), (382, 406), (87, 80), (9, 8), (407, 417), (179, 181), (256, 275), (227, 239), (57, 75), (6, 2), (168, 180), (171, 182), (393, 393), (54, 33), (2, 4), (131, 136), (253, 260), (115, 119), (13, 19), (242, 89), (196, 220), (175, 197), (245, 252), (49, 39), (208, 221), (130, 140), (337, 362), (201, 200), (79, 85), (39, 12), (366, 7), (190, 199), (12, 31), (311, 89), (242, 75), (185, 196), (139, 89), (5, 9), (185, 205), (9, 7), (86, 92), (256, 265), (337, 348), (130, 135), (366, 384), (79, 71), (290, 7), (260, 253), (79, 89), (63, 72), (12, 17), (137, 39), (311, 75), (115, 118), (275, 256), (34, 41), (13, 18), (326, 338), (16, 23), (105, 110), (139, 75), (193, 204), (5, 4), (80, 7), (86, 96), (248, 256), (49, 56), (130, 139), (79, 75), (63, 85), (140, 170), (4, 8), (41, 57), (311, 326), (147, 56), (56, 54), (185, 195), (366, 383), (130, 134), (0, 6), (48, 55), (230, 230), (8, 37), (211, 198), (63, 71), (12, 7), (168, 7), (12, 16), (96, 100), (26, 35), (130, 129), (0, 1), (148, 137), (199, 228), (11, 28), (63, 75), (112, 89), (4, 7), (442, 89), (140, 7), (155, 163), (174, 185), (158, 168)], 'ddg_edge_info': [(378, 180), (0, 5), (180, 201), (207, 218), (105, 207), (11, 14), (210, 223), (391, 384), (129, 155), (232, 247), (38, 153), (10, 54), (405, 175), (245, 186), (132, 16), (237, 218), (392, 241), (153, 75), (179, 213), (207, 195), (206, 230), (378, 193), (417, 270), (0, 247), (26, 119), (38, 130), (212, 166), (406, 260), (405, 417), (405, 188), (236, 230), (237, 195), (392, 218), (417, 391), (391, 253), (129, 253), (122, 128), (1, 67), (87, 107), (238, 196), (418, 392), (1, 103), (180, 191), (406, 417), (326, 245), (6, 38), (191, 200), (38, 107), (326, 16), (232, 237), (393, 191), (225, 198), (269, 384), (236, 207), (391, 230), (129, 230), (326, 366), (364, 392), (392, 231), (269, 240), (1, 80), (207, 185), (406, 394), (191, 177), (117, 148), (417, 260), (61, 67), (201, 227), (38, 120), (184, 174), (136, 17), (391, 243), (237, 185), (129, 243), (1, 57), (179, 180), (269, 253), (417, 237), (26, 86), (326, 235), (166, 17), (232, 191), (406, 227), (58, 75), (232, 227), (393, 181), (405, 384), (57, 195), (236, 197), (392, 185), (129, 220), (1, 34), (238, 392), (392, 221), (269, 230), (9, 11), (208, 220), (406, 384), (326, 212), (6, 5), (197, 210), (326, 248), (232, 204), (406, 240), (252, 182), (391, 197), (134, 163), (391, 233), (237, 175), (392, 198), (124, 118), (129, 233), (1, 47), (193, 217), (238, 405), (245, 264), (405, 253), (57, 64), (237, 260), (38, 51), (417, 227), (28, 37), (149, 147), (326, 225), (38, 87), (232, 181), (197, 223), (143, 252), (191, 265), (57, 185), (392, 175), (129, 210), (393, 256), (237, 417), (37, 63), (405, 230), (378, 392), (37, 99), (38, 64), (232, 158), (417, 240), (263, 182), (1, 145), (107, 163), (0, 37), (406, 230), (182, 193), (149, 16), (80, 145), (112, 134), (57, 198), (392, 417), (204, 217), (392, 188), (269, 197), (129, 223), (241, 364), (1, 37), (393, 269), (326, 179), (38, 41), (405, 243), (9, 14), (256, 263), (418, 182), (174, 230), (232, 171), (0, 50), (236, 406), (212, 198), (391, 200), (129, 200), (1, 14), (252, 270), (10, 99), (38, 54), (418, 195), (0, 27), (252, 391), (391, 177), (129, 177), (232, 269), (112, 124), (237, 384), (405, 197), (174, 184), (226, 231), (405, 233), (236, 275), (237, 240), (156, 166), (263, 378), (1, 112), (0, 4), (338, 408), (406, 197), (238, 241), (350, 382), (1, 148), (393, 380), (191, 245), (232, 17), (392, 384), (10, 53), (223, 197), (263, 270), (1, 4), (393, 236), (252, 260), (236, 252), (391, 275), (129, 275), (0, 161), (326, 182), (237, 253), (263, 391), (238, 218), (0, 17), (180, 213), (207, 230), (99, 139), (191, 222), (350, 395), (418, 270), (232, 259), (393, 213), (252, 237), (269, 406), (269, 177), (122, 127), (227, 180), (129, 23), (151, 270), (236, 265), (237, 230), (238, 195), (418, 391), (392, 253), (118, 129), (251, 250), (129, 144), (132, 149), (57, 384), (232, 236), (263, 260), (147, 48), (405, 200), (391, 265), (392, 230), (143, 163), (129, 265), (0, 151), (1, 79), (67, 61), (59, 57), (158, 179), (406, 393), (378, 182), (269, 275), (117, 147), (1, 115), (8, 11), (207, 220), (99, 129), (38, 119), (263, 237), (418, 260), (129, 157), (136, 16), (232, 249), (252, 227), (37, 10), (245, 188), (10, 56), (405, 177), (326, 378), (246, 269), (13, 67), (392, 243), (124, 163), (269, 252), (238, 185), (1, 92), (166, 16), (38, 96), (270, 253), (418, 237), (326, 270), (232, 226), (393, 180), (10, 33), (236, 196), (117, 16), (0, 105), (364, 381), (37, 23), (237, 197), (417, 393), (129, 255), (326, 391), (260, 180), (405, 275), (269, 265), (417, 249), (263, 191), (326, 247), (232, 203), (252, 181), (263, 227), (201, 252), (213, 226), (393, 193), (406, 275), (129, 232), (57, 243), (392, 233), (238, 175), (417, 406), (9, 23), (147, 136), (218, 196), (191, 179), (38, 86), (418, 227), (326, 260), (406, 252), (378, 270), (10, 23), (236, 186), (391, 245), (89, 23), (35, 52), (129, 245), (1, 59), (87, 99), (326, 381), (378, 391), (238, 417), (191, 156), (405, 265), (117, 127), (263, 181), (326, 237), (38, 99), (232, 193), (252, 171), (203, 166), (418, 240), (10, 265), (57, 197), (391, 222), (129, 222), (80, 180), (208, 222), (127, 148), (143, 241), (417, 252), (209, 223), (384, 75), (232, 206), (378, 260), (10, 13), (2, 9), (129, 199), (175, 166), (54, 56), (57, 210), (237, 406), (392, 200), (129, 235), (326, 191), (105, 143), (10, 134), (256, 275), (263, 171), (326, 227), (378, 237), (54, 33), (10, 255), (236, 418), (392, 177), (269, 186), (129, 212), (1, 26), (326, 348), (238, 384), (269, 222), (326, 204), (237, 275), (238, 240), (406, 196), (143, 231), (1, 147), (5, 117), (191, 244), (232, 16), (236, 166), (263, 269), (57, 200), (241, 366), (174, 196), (5, 9), (326, 181), (405, 245), (237, 252), (392, 275), (0, 196), (1, 124), (378, 227), (238, 253), (143, 244), (63, 72), (391, 166), (129, 166), (0, 52), (393, 392), (217, 166), (275, 256), (1, 16), (326, 338), (227, 179), (245, 233), (405, 222), (417, 196), (191, 378), (185, 218), (38, 56), (232, 150), (237, 265), (406, 186), (238, 230), (245, 89), (418, 197), (179, 260), (252, 393), (236, 156), (129, 179), (52, 75), (252, 249), (269, 418), (236, 241), (326, 171), (185, 195), (132, 40), (38, 33), (245, 246), (392, 265), (1, 114), (191, 391), (0, 6), (18, 54), (27, 23), (232, 163), (56, 166), (391, 156), (263, 236), (129, 156), (232, 248), (211, 225), (269, 166), (1, 6), (132, 17), (38, 10), (143, 175), (417, 186), (0, 163), (26, 35), (326, 184), (207, 196), (263, 393), (8, 23), (107, 145), (326, 269), (11, 28), (171, 166), (57, 144), (263, 249), (236, 231), (237, 196), (14, 38), (260, 179), (38, 23), (378, 171), (238, 197), (418, 393), (179, 227), (406, 418), (191, 201), (326, 17), (418, 249), (180, 228), (191, 237), (232, 238), (10, 45), (405, 166), (269, 156), (0, 117), (236, 244), (417, 405), (218, 195), (406, 166), (10, 166), (418, 406), (117, 149), (148, 136), (0, 9), (326, 259), (251, 265), (252, 193), (223, 166), (18, 142), (232, 251), (236, 221), (237, 186), (391, 244), (129, 244), (14, 28), (326, 380), (392, 245), (417, 418), (107, 112), (139, 144), (326, 236), (10, 179), (380, 392), (232, 228), (393, 182), (204, 166), (405, 156), (236, 198), (63, 163), (392, 222), (269, 231), (1, 71), (326, 393), (218, 185), (263, 193), (128, 148), (221, 196), (326, 249), (232, 205), (79, 112), (391, 378), (406, 241), (418, 252), (54, 55), (18, 132), (1, 48), (238, 406), (269, 244), (28, 38), (326, 226), (191, 181), (0, 241), (201, 231), (54, 32), (232, 218), (252, 196), (236, 188), (149, 40), (129, 211), (237, 418), (269, 221), (129, 247), (326, 383), (207, 166), (378, 393), (9, 38), (417, 241), (149, 161), (0, 218), (255, 179), (220, 221), (232, 195), (406, 231), (378, 249), (238, 275), (150, 162), (28, 136), (237, 166), (363, 391), (269, 198), (1, 38), (393, 270), (405, 244), (417, 218), (54, 166), (378, 406), (191, 171), (238, 252), (143, 243), (26, 103), (393, 391), (232, 208), (406, 244), (10, 244), (63, 107), (2, 11), (392, 166), (129, 201), (275, 255), (326, 337), (13, 26), (57, 212), (241, 378), (1, 51), (326, 193), (38, 55), (9, 28), (417, 231), (418, 196), (27, 45), (232, 185), (252, 392), (406, 221), (238, 265), (381, 393), (191, 269), (405, 378), (237, 156), (269, 188), (382, 394), (1, 28), (27, 166), (326, 350), (393, 260), (37, 67), (38, 32), (245, 16), (237, 241), (241, 391), (26, 57), (326, 206), (185, 230), (232, 162), (406, 198), (99, 163), (252, 405), (378, 252), (57, 166), (391, 191), (392, 156), (129, 191), (1, 5), (393, 237), (212, 225), (236, 253), (417, 185), (26, 34), (37, 80), (406, 175), (263, 392), (143, 210), (417, 221), (248, 263), (418, 186), (0, 18), (232, 175), (119, 118), (350, 396), (57, 143), (129, 168), (180, 250), (232, 260), (38, 166), (129, 204), (1, 18), (34, 52), (11, 148), (237, 231), (417, 198), (326, 196), (406, 188), (263, 405), (0, 31), (191, 236), (163, 174), (391, 181), (129, 181), (136, 40), (233, 238), (393, 227), (10, 80), (56, 47), (236, 243), (196, 207), (417, 175), (38, 35), (237, 244), (418, 405), (230, 205), (107, 134), (0, 8), (207, 221), (118, 143), (218, 230), (191, 213), (251, 264), (129, 158), (191, 249), (232, 250), (112, 105), (10, 57), (117, 40), (326, 150), (236, 256), (237, 221), (238, 186), (392, 244), (143, 177), (417, 188), (132, 55), (378, 196), (251, 241), (230, 218), (117, 161), (0, 250), (383, 396), (129, 171), (117, 17), (41, 58), (232, 263), (252, 241), (405, 191), (236, 233), (391, 256), (237, 198), (395, 406), (241, 348), (129, 256), (41, 143), (326, 392), (326, 163), (132, 32), (338, 366), (218, 184), (230, 195), (1, 106), (188, 198), (107, 124), (37, 145), (38, 110), (10, 191), (213, 227), (232, 240), (252, 218), (392, 378), (10, 47), (151, 251), (391, 269), (269, 243), (129, 269), (326, 405), (191, 180), (378, 186), (37, 122), (26, 112), (232, 217), (393, 171), (252, 195), (406, 253), (232, 253), (226, 179), (57, 221), (405, 181), (237, 188), (417, 384), (129, 246), (129, 17), (326, 382), (238, 418), (10, 145), (269, 256), (230, 185), (117, 128), (9, 37), (1, 96), (326, 238), (191, 193), (350, 366), (263, 218), (418, 241), (232, 230), (236, 200), (238, 166), (269, 233), (129, 259), (326, 395), (378, 405), (263, 195), (418, 218), (417, 253), (0, 230), (260, 269), (27, 67), (326, 251), (232, 207), (406, 243), (252, 185), (236, 177), (245, 182), (236, 213), (391, 236), (129, 236), (1, 50), (145, 180), (405, 256), (17, 31), (417, 230), (378, 418), (326, 228), (232, 184), (418, 231), (26, 115), (232, 220), (252, 198), (406, 256), (10, 256), (391, 213), (129, 213), (1, 27), (326, 349), (72, 87), (259, 179), (238, 156), (129, 249), (1, 63), (326, 205), (405, 269), (263, 185), (417, 243), (326, 241), (232, 197), (252, 175), (406, 233), (150, 164), (54, 47), (392, 191), (269, 200), (129, 226), (149, 55), (87, 80), (1, 40), (326, 362), (38, 44), (418, 185), (326, 218), (232, 174), (38, 80), (418, 221), (252, 417), (112, 114), (236, 180), (149, 32), (129, 203), (1, 17), (393, 249), (269, 213), (417, 197), (326, 195), (38, 57), (251, 201), (238, 231), (143, 222), (417, 233), (418, 198), (248, 275), (348, 362), (263, 175), (378, 241), (350, 408), (391, 180), (129, 180), (393, 406), (392, 181), (185, 196), (38, 34), (405, 236), (245, 247), (237, 243), (241, 393), (418, 175), (191, 392), (326, 208), (18, 55), (186, 197), (232, 164), (378, 218), (263, 417), (238, 244), (406, 200), (63, 99), (391, 193), (129, 193), (180, 275), (34, 41), (16, 23), (405, 213), (326, 185), (132, 54), (5, 13), (38, 47), (378, 195), (406, 177), (238, 221), (143, 212), (418, 417), (418, 188), (237, 256), (252, 384), (378, 231), (57, 181), (252, 240), (392, 171), (269, 180), (393, 252), (326, 162), (251, 168), (237, 233), (392, 256), (238, 198), (417, 200), (1, 105), (8, 37), (38, 145), (232, 275), (252, 253), (236, 245), (237, 210), (417, 177), (326, 175), (38, 37), (378, 185), (392, 269), (418, 407), (263, 384), (1, 118), (0, 10), (263, 240), (180, 242), (232, 252), (252, 230), (37, 13), (405, 180), (236, 222), (241, 337), (136, 55), (129, 16), (238, 188), (418, 384), (326, 417), (37, 134), (406, 180), (378, 198), (10, 180), (417, 275), (0, 23), (132, 142), (406, 265), (263, 253), (136, 32), (232, 265), (252, 243), (37, 26), (405, 193), (237, 200), (117, 55), (143, 156), (1, 72), (326, 394), (326, 165), (105, 166), (378, 175), (253, 180), (326, 250), (218, 222), (38, 112), (184, 166), (263, 230), (418, 253), (129, 150), (232, 242), (393, 196), (243, 251), (237, 177), (117, 32), (227, 163), (265, 275), (185, 166), (237, 213), (392, 236), (269, 245), (326, 407), (338, 381), (378, 417), (37, 124), (191, 182), (251, 233), (378, 188), (136, 166), (417, 265), (418, 230), (201, 232), (326, 263), (391, 392), (252, 197), (10, 26), (37, 16), (392, 213), (129, 248), (326, 384), (220, 222), (326, 240), (191, 195), (232, 196), (251, 246), (418, 243), (150, 163), (0, 75), (393, 186), (149, 54), (129, 225), (87, 79), (10, 124), (195, 206), (1, 75), (180, 163), (198, 211), (326, 217), (6, 10), (38, 79), (57, 92), (157, 179), (263, 197), (161, 149), (326, 253), (232, 209), (406, 245), (237, 180), (129, 238), (127, 128), (1, 52), (260, 163), (378, 384), (5, 22), (218, 166), (326, 230), (191, 185), (38, 92), (232, 186), (378, 240), (406, 222), (418, 233), (142, 149), (393, 405), (191, 270), (392, 180), (382, 395), (5, 179), (245, 17), (241, 392), (0, 186), (326, 207), (238, 243), (35, 143), (417, 245), (241, 248), (252, 406), (232, 199), (252, 177), (378, 253), (393, 418), (405, 392), (392, 193), (129, 228), (326, 364), (17, 23), (241, 405), (149, 142), (417, 222), (326, 220), (213, 163), (378, 230), (238, 256), (244, 150), (191, 260), (236, 182), (129, 205), (80, 163), (1, 19), (252, 275), (64, 75), (245, 236), (241, 382), (54, 147), (326, 197), (185, 221), (38, 59), (263, 406), (238, 233), (418, 200), (1, 140), (191, 417), (378, 243), (391, 182), (129, 182), (57, 193), (196, 208), (1, 32), (122, 142), (326, 174), (251, 180), (237, 245), (418, 177), (208, 218), (207, 222), (326, 210), (232, 166), (259, 269), (143, 237), (1, 153), (249, 75), (180, 241), (112, 106), (391, 195), (263, 275), (129, 195), (136, 54), (1, 9), (393, 241), (252, 265), (200, 75), (145, 139), (38, 13), (251, 157), (237, 222), (208, 195), (0, 166), (132, 56), (378, 197), (1, 130), (0, 22), (179, 253), (366, 408), (378, 233), (38, 134), (191, 227), (236, 378), (263, 252), (418, 275), (41, 59), (232, 264), (112, 119), (393, 218), (269, 182), (117, 54), (241, 349), (417, 166), (0, 143), (326, 164), (132, 33), (38, 26), (236, 270), (406, 156), (238, 200), (396, 408), (149, 122), (230, 196), (1, 107), (27, 16), (191, 384), (232, 156), (218, 221), (0, 264), (0, 35), (80, 107), (191, 240), (232, 241), (38, 147), (236, 391), (393, 195), (44, 41), (263, 265), (117, 31), (241, 326), (393, 231), (145, 129), (391, 270), (238, 177), (237, 212), (129, 270), (208, 185), (326, 406), (326, 177), (238, 213), (143, 204), (1, 120), (99, 134), (38, 124), (418, 265), (129, 162), (10, 61), (405, 182), (417, 156), (114, 118), (151, 265), (132, 23), (38, 16), (33, 166), (5, 67), (378, 200), (251, 245), (129, 139), (326, 275), (18, 122), (191, 230), (232, 231), (393, 185), (269, 378), (256, 179), (405, 195), (236, 237), (391, 260), (129, 260), (195, 205), (326, 396), (378, 177), (269, 270), (263, 196), (1, 110), (0, 2), (99, 124), (326, 252), (326, 23), (38, 114), (252, 186), (26, 139), (232, 244), (393, 198), (252, 222), (269, 391), (391, 237), (129, 237), (238, 180), (143, 171), (195, 218), (1, 87), (47, 54), (5, 57), (6, 22), (210, 197), (245, 75), (80, 87), (326, 265), (232, 221), (393, 175), (378, 275), (236, 191), (134, 180), (245, 196), (236, 227), (129, 250), (1, 64), (406, 378), (405, 270), (269, 260), (117, 132), (263, 186), (417, 244), (326, 242), (92, 75), (191, 197), (232, 198), (143, 269), (150, 165), (418, 245), (26, 129), (393, 417), (393, 188), (406, 270), (10, 270), (405, 391), (231, 238), (391, 227), (2, 37), (129, 227), (149, 56), (1, 41), (326, 363), (269, 237), (230, 166), (406, 391), (418, 222), (107, 180), (326, 255), (252, 418), (232, 211), (378, 265), (10, 18), (236, 181), (149, 33), (237, 182), (391, 240), (417, 378), (129, 240), (1, 54), (338, 350), (38, 58), (405, 260), (57, 71), (117, 122), (241, 417), (348, 363), (326, 232), (232, 188), (252, 166), (144, 75), (150, 155), (349, 364), (10, 260), (392, 182), (269, 191), (129, 217), (405, 237), (269, 227), (9, 8), (0, 188), (191, 393), (326, 209), (6, 2), (5, 37), (38, 71), (232, 165), (263, 418), (238, 245), (26, 96), (27, 61), (179, 275), (393, 384), (232, 201), (118, 179), (205, 184), (406, 237), (236, 171), (2, 4), (149, 23), (253, 260), (1, 8), (13, 19), (393, 240), (392, 195), (196, 220), (175, 197), (1, 44), (326, 186), (5, 14), (10, 129), (38, 48), (238, 222), (263, 166), (208, 230), (191, 406), (326, 222), (252, 156), (391, 171), (241, 263), (0, 57), (180, 253), (237, 378), (269, 181), (129, 207), (6, 136), (393, 253), (405, 227), (236, 269), (241, 384), (396, 407), (418, 166), (326, 199), (232, 155), (406, 191), (237, 270), (260, 253), (8, 38), (0, 34), (5, 112), (105, 236), (378, 245), (10, 227), (129, 184), (191, 275), (393, 230), (237, 391), (193, 204), (405, 240), (392, 270), (263, 156), (1, 119), (26, 63), (0, 11), (232, 168), (378, 222), (263, 241), (132, 166), (191, 252), (252, 231), (392, 391), (269, 171), (129, 197), (241, 338), (136, 56), (1, 11), (393, 243), (417, 191), (418, 156), (326, 418), (406, 181), (230, 221), (8, 28), (63, 80), (129, 174), (136, 33), (252, 244), (145, 118), (117, 56), (326, 166), (245, 241), (392, 260), (124, 180), (34, 143), (0, 1), (37, 148), (263, 231), (129, 151), (232, 243), (393, 197), (252, 221), (236, 393), (405, 171), (255, 263), (117, 33), (393, 233), (245, 218), (236, 249), (392, 237), (417, 181), (1, 86), (326, 408), (132, 48), (338, 382), (406, 171), (1, 122), (0, 14), (252, 378), (326, 264), (251, 270), (57, 139), (391, 393), (203, 193), (263, 244), (129, 164), (136, 23), (41, 51), (18, 147), (232, 256), (10, 63), (237, 191), (391, 249), (326, 156), (38, 18), (237, 227), (378, 166), (195, 230), (1, 99), (338, 395), (191, 196), (166, 23), (251, 247), (38, 103), (263, 221), (418, 244), (201, 246), (80, 99), (232, 233), (406, 269), (391, 406), (117, 23), (0, 112), (246, 253), (237, 204), (392, 227), (269, 236), (417, 171), (198, 212), (417, 256), (263, 198), (0, 233), (232, 210), (57, 129), (252, 188), (10, 17), (0, 89), (253, 269), (232, 246), (393, 200), (269, 393), (63, 145), (237, 181), (177, 166), (378, 156), (238, 182), (418, 378), (269, 249), (392, 240), (117, 121), (198, 225), (326, 231), (191, 186), (57, 106), (417, 269), (0, 246), (132, 136), (232, 223), (393, 177), (10, 259), (236, 193), (391, 252), (143, 150), (129, 252), (161, 55), (136, 147), (149, 166), (263, 188), (168, 179), (201, 213), (326, 244), (6, 37), (38, 106), (79, 107), (232, 200), (406, 236), (253, 259), (18, 127), (405, 393), (57, 204), (217, 193), (237, 171), (180, 311), (13, 54), (393, 275), (405, 249), (245, 31), (241, 406), (191, 405), (326, 221), (6, 14), (232, 177), (406, 213), (50, 57), (201, 226), (232, 213), (406, 249), (252, 191), (2, 16), (129, 206), (53, 67), (405, 406), (238, 378), (129, 242), (241, 383), (1, 56), (326, 198), (185, 222), (5, 26), (210, 166), (237, 269), (417, 236), (191, 418), (378, 244), (238, 270), (10, 226), (54, 40), (151, 201), (269, 193), (149, 48), (175, 186), (1, 33), (393, 265), (193, 203), (238, 391), (145, 163), (10, 118), (245, 250), (251, 181), (241, 396), (417, 213), (326, 211), (191, 166), (366, 396), (378, 221), (197, 209), (143, 238), (348, 378), (171, 193), (232, 23), (391, 196), (129, 196), (1, 10), (112, 143), (45, 53), (392, 197), (251, 158), (127, 122), (208, 196), (326, 188), (38, 50), (405, 252), (57, 63), (418, 191), (209, 197), (99, 145), (232, 180), (238, 260), (163, 166), (134, 139), (75, 89), (129, 209), (241, 350), (275, 263), (1, 23), (38, 27), (237, 236), (26, 52), (27, 17), (326, 201), (18, 48), (181, 75), (232, 157), (38, 63), (406, 193), (238, 237), (27, 53), (213, 180), (191, 241), (151, 168), (31, 23), (236, 392), (391, 186), (129, 186), (237, 393), (252, 256), (269, 196), (57, 17), (417, 180), (132, 47), (38, 40), (177, 198), (237, 249), (149, 136), (418, 181), (107, 139), (191, 218), (263, 243), (129, 163), (134, 129), (232, 255), (236, 405), (252, 233), (392, 393), (204, 193), (1, 13), (393, 245), (252, 269), (326, 155), (38, 17), (245, 230), (392, 249), (238, 191), (417, 193), (174, 206), (99, 112), (238, 227), (117, 166), (1, 134), (191, 231), (57, 151), (391, 405), (263, 256), (362, 378), (80, 134), (393, 222), (392, 406), (405, 196), (326, 168), (177, 188), (418, 171), (107, 129), (180, 199), (38, 115), (263, 233), (418, 256), (180, 235), (26, 140), (18, 136), (232, 245), (4, 9), (391, 418), (269, 392), (136, 48), (14, 22), (57, 249), (63, 180), (238, 181), (378, 191), (251, 236), (57, 105), (0, 245), (0, 16), (191, 221), (232, 222), (252, 200), (418, 269), (80, 124), (26, 153), (252, 236), (269, 405), (405, 186), (237, 193), (117, 48), (129, 251), (208, 166), (394, 405), (326, 158), (392, 252), (10, 150), (326, 243), (191, 198), (38, 105), (75, 23), (129, 143), (201, 248), (26, 130), (132, 148), (232, 235), (205, 218), (252, 213), (243, 244), (63, 134), (2, 38), (0, 114), (238, 171), (129, 264), (41, 151), (179, 201), (406, 392), (378, 181), (191, 175), (263, 200), (326, 256), (38, 118), (232, 212), (393, 166), (236, 218), (391, 241), (129, 241), (1, 55), (241, 418), (263, 177), (253, 163), (180, 179), (406, 405), (326, 233), (191, 188), (211, 166), (391, 362), (238, 269), (263, 213), (418, 236), (26, 120), (232, 225), (63, 124), (236, 195), (2, 28), (391, 218), (149, 47), (129, 218), (41, 105), (405, 418), (364, 380), (417, 392), (124, 139), (28, 22), (227, 231), (179, 191), (338, 364), (5, 38), (37, 107), (38, 72), (117, 136), (418, 213), (326, 246), (393, 156), (378, 256), (252, 180), (391, 231), (392, 196), (129, 231), (269, 241), (326, 223), (232, 179), (241, 264), (1, 166), (26, 110), (0, 58), (99, 180), (5, 136), (378, 269), (236, 185), (129, 208), (180, 290), (1, 22), (106, 75), (124, 129), (10, 107), (269, 218), (1, 58), (407, 417), (326, 200), (57, 75), (238, 236), (263, 180), (408, 418), (79, 99), (171, 182), (244, 166), (391, 185), (129, 185), (5, 149), (57, 196), (237, 392), (391, 221), (237, 163), (392, 186), (269, 195), (129, 221), (61, 166), (1, 35), (238, 393), (245, 252), (405, 241), (245, 23), (418, 180), (208, 221), (326, 213), (38, 75), (238, 249), (143, 240), (142, 132), (191, 253), (225, 166), (236, 175), (391, 198), (129, 198), (112, 145), (393, 244), (237, 405), (405, 218), (236, 260), (174, 205), (26, 41), (38, 52), (406, 182), (337, 348), (149, 148), (230, 222), (418, 193), (179, 256), (232, 182), (406, 218), (378, 236), (391, 175), (129, 175), (236, 417), (252, 245), (392, 405), (393, 221), (269, 185), (405, 231), (237, 238), (0, 182), (174, 218), (326, 203), (406, 195), (378, 213), (134, 118), (0, 38), (393, 378), (191, 243), (391, 417), (203, 217), (391, 188), (129, 188), (149, 17), (136, 47), (1, 2), (392, 418), (417, 182), (122, 148), (174, 195), (326, 180), (71, 75), (211, 198), (263, 245), (129, 165), (18, 148), (191, 256), (405, 185), (269, 175), (117, 47), (22, 38), (326, 157), (37, 54), (38, 19), (405, 221), (238, 193), (417, 195), (122, 161), (209, 166), (26, 44), (338, 396), (406, 185), (222, 184), (263, 222), (122, 17), (0, 28), (132, 147), (191, 233), (38, 140), (236, 384), (57, 153), (10, 41), (18, 161), (232, 270), (269, 417), (405, 198), (236, 240), (129, 263), (0, 149), (174, 185)]}]}
{'flac_decode_frame': [{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 191, 'instruction': 'movl\t%eax, %edi'}, {'instIndex': 192, 'instruction': 'shll\t$3, %edi'}, {'instIndex': 222, 'instruction': 'cmpl\t$0x18, %eax'}, {'instIndex': 223, 'instruction': 'jl\t.LBB4_196'}, {'instIndex': 239, 'instruction': ''}, {'instIndex': 240, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 297, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 298, 'instruction': ''}, {'instIndex': 308, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 309, 'instruction': 'movl\t0x8d4(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 320, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 321, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 322, 'instruction': 'movq\t0x958(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 564, 'instruction': 'movq\t%rdx, 0x860(%rsp)                # 8-byte Spill'}, {'instIndex': 617, 'instruction': 'movq\t0x968(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 702, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 765, 'instruction': 'movq\t0x7e0(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 766, 'instruction': 'movq\t0x948(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 767, 'instruction': 'movl\t0x7d4(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 818, 'instruction': 'jmp\t.LBB4_153'}, {'instIndex': 819, 'instruction': 'movq\t0x968(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 835, 'instruction': 'movl\t%eax, 0x7cc(%rsp)                # 4-byte Spill'}, {'instIndex': 836, 'instruction': 'jmp\t.LBB4_63'}, {'instIndex': 925, 'instruction': 'jmp\t.LBB4_74'}, {'instIndex': 943, 'instruction': 'movl\t%eax, 0x7ac(%rsp)                # 4-byte Spill'}, {'instIndex': 960, 'instruction': 'movl\t%ecx, 0x7a8(%rsp)                # 4-byte Spill'}, {'instIndex': 1114, 'instruction': 'jmp\t.LBB4_153'}, {'instIndex': 1115, 'instruction': 'movq\t0x968(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 1116, 'instruction': 'movl\t0x72c(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1234, 'instruction': 'movl\t0x6f0(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 1239, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1240, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1241, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1249, 'instruction': 'movl\t0x6f0(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1250, 'instruction': 'movl\t0x6ec(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1265, 'instruction': 'movq\t0x730(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1270, 'instruction': 'addl\t$0x10, %r8d'}, {'instIndex': 1271, 'instruction': 'movl\t%esi, %ecx'}, {'instIndex': 1327, 'instruction': 'movl\t0x6dc(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1332, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1333, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1334, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1342, 'instruction': 'movl\t%edx, 0x694(%rsp)                # 4-byte Spill'}, {'instIndex': 1343, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1358, 'instruction': 'movq\t0x968(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 1363, 'instruction': 'shrl\t$0xf0, %r9d'}, {'instIndex': 1364, 'instruction': ''}, {'instIndex': 1442, 'instruction': 'movq\t%rax, 0x648(%rsp)                # 8-byte Spill'}, {'instIndex': 1447, 'instruction': 'movq\t%rsi, 0x620(%rsp)                # 8-byte Spill'}, {'instIndex': 1448, 'instruction': 'movl\t%eax, 0x628(%rsp)                # 4-byte Spill'}, {'instIndex': 1449, 'instruction': 'movl\t%ecx, 0x62c(%rsp)                # 4-byte Spill'}, {'instIndex': 1457, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1458, 'instruction': 'movl\t%ecx, 0x630(%rsp)                # 4-byte Spill'}, {'instIndex': 1473, 'instruction': 'movl\t%edx, (%rcx)'}, {'instIndex': 1478, 'instruction': 'movl\t0x628(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1479, 'instruction': 'movq\t0x730(%rsp), %rax                # 8-byte Reload'}]}]}
The case of compiler clang with optimization Os.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/Os/flacdec.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/Os/flacdec.s---flac_decode_frame---after
function id: 4
function flag: True
There are 2252 instructions for function: flac_decode_frame in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '639', 'end': 649}, 'before': {'start': '639', 'end': 644}}}]
[{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 190, 'instruction': 'movl\t%eax, %edi'}, {'instIndex': 191, 'instruction': 'shll\t$3, %edi'}, {'instIndex': 221, 'instruction': 'cmpl\t$0x18, %eax'}, {'instIndex': 222, 'instruction': 'jl\t.LBB4_167'}, {'instIndex': 238, 'instruction': ''}, {'instIndex': 239, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 281, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 282, 'instruction': ''}, {'instIndex': 292, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 293, 'instruction': 'movl\t0x5e4(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 304, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 305, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 306, 'instruction': 'movq\t0x640(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 466, 'instruction': 'movq\t%rdx, 0x5a0(%rsp)                # 8-byte Spill'}, {'instIndex': 519, 'instruction': 'movq\t0x650(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 604, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 667, 'instruction': 'movq\t0x520(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 668, 'instruction': 'movq\t0x630(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 669, 'instruction': 'movl\t0x514(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 720, 'instruction': 'jmp\t.LBB4_131'}, {'instIndex': 721, 'instruction': 'movq\t0x650(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 737, 'instruction': 'movl\t%eax, 0x50c(%rsp)                # 4-byte Spill'}, {'instIndex': 738, 'instruction': 'jmp\t.LBB4_53'}, {'instIndex': 827, 'instruction': 'jmp\t.LBB4_64'}, {'instIndex': 845, 'instruction': 'movl\t%eax, 0x4ec(%rsp)                # 4-byte Spill'}, {'instIndex': 862, 'instruction': 'movl\t%ecx, 0x4e8(%rsp)                # 4-byte Spill'}, {'instIndex': 1016, 'instruction': 'jmp\t.LBB4_131'}, {'instIndex': 1017, 'instruction': 'movq\t0x650(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 1018, 'instruction': 'movl\t0x46c(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1136, 'instruction': 'movl\t0x430(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 1141, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1142, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1143, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1151, 'instruction': 'movl\t0x430(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1152, 'instruction': 'movl\t0x42c(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1167, 'instruction': 'movq\t0x470(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1172, 'instruction': 'addl\t$0x10, %r8d'}, {'instIndex': 1173, 'instruction': 'movl\t%esi, %ecx'}, {'instIndex': 1229, 'instruction': 'movl\t0x41c(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1234, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1235, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1236, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1244, 'instruction': 'movl\t%edx, 0x3d4(%rsp)                 # 4-byte Spill'}, {'instIndex': 1245, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1260, 'instruction': 'movq\t0x650(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 1265, 'instruction': 'shrl\t$0xf0, %r9d'}, {'instIndex': 1266, 'instruction': ''}, {'instIndex': 1344, 'instruction': 'movq\t%rax, 0x388(%rsp)                 # 8-byte Spill'}, {'instIndex': 1349, 'instruction': 'movq\t%rsi, 0x360(%rsp)                 # 8-byte Spill'}, {'instIndex': 1350, 'instruction': 'movl\t%eax, 0x368(%rsp)                 # 4-byte Spill'}, {'instIndex': 1351, 'instruction': 'movl\t%ecx, 0x36c(%rsp)                 # 4-byte Spill'}, {'instIndex': 1359, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1360, 'instruction': 'movl\t%ecx, 0x370(%rsp)                 # 4-byte Spill'}, {'instIndex': 1375, 'instruction': 'movl\t%edx, (%rcx)'}, {'instIndex': 1380, 'instruction': 'movl\t0x368(%rsp), %esi                 # 4-byte Reload'}, {'instIndex': 1381, 'instruction': 'movq\t0x470(%rsp), %rax                # 8-byte Reload'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/Os/flacdec.o
Patched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/Os/flacdec.o---after
The extraction of function: flac_decode_frame
Analyzing the binaries to generate subCFGs from patched function ...
It has 367 nodes and 636 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 2225 instructions in binary file.
[4196375, 4196553, 4196624, 4196712, 4197581, 4197872, 4198294, 4198554, 4198809, 4198892, 4199345, 4199425, 4199496, 4200248, 4200887, 4200942, 4201349, 4201404, 4201936, 4201991]
The execution time of patched subCFG information extraction via angr: 0:00:04.326336
{'flac_decode_frame': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 46, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e33>, <DisassemblerInsn "add" for 0x400e3b>, <DisassemblerInsn "mov" for 0x400e3f>, <DisassemblerInsn "jmp" for 0x400e47>]'}, {'block_Idx': 109, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401448>, <DisassemblerInsn "mov" for 0x40144f>, <DisassemblerInsn "mov" for 0x401457>, <DisassemblerInsn "sar" for 0x401459>, <DisassemblerInsn "movsxd" for 0x40145c>, <DisassemblerInsn "mov" for 0x40145f>, <DisassemblerInsn "ror" for 0x401462>, <DisassemblerInsn "ror" for 0x401466>, <DisassemblerInsn "ror" for 0x401469>, <DisassemblerInsn "and" for 0x40146d>, <DisassemblerInsn "shl" for 0x401470>, <DisassemblerInsn "mov" for 0x401472>, <DisassemblerInsn "shr" for 0x401479>, <DisassemblerInsn "add" for 0x40147c>, <DisassemblerInsn "imul" for 0x40147f>, <DisassemblerInsn "mov" for 0x401482>, <DisassemblerInsn "mov" for 0x401489>, <DisassemblerInsn "jmp" for 0x401490>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ea2>, <DisassemblerInsn "mov" for 0x400eaa>, <DisassemblerInsn "mov" for 0x400eb2>, <DisassemblerInsn "mov" for 0x400eba>, <DisassemblerInsn "mov" for 0x400ec2>, <DisassemblerInsn "mov" for 0x400ec4>, <DisassemblerInsn "cmp" for 0x400ecb>, <DisassemblerInsn "setg" for 0x400ece>, <DisassemblerInsn "mov" for 0x400ed2>, <DisassemblerInsn "mov" for 0x400eda>, <DisassemblerInsn "add" for 0x400edd>, <DisassemblerInsn "mov" for 0x400ee1>, <DisassemblerInsn "mov" for 0x400ee9>, <DisassemblerInsn "mov" for 0x400eed>, <DisassemblerInsn "mov" for 0x400ef3>, <DisassemblerInsn "cmp" for 0x400ef9>, <DisassemblerInsn "cmovg" for 0x400efc>, <DisassemblerInsn "mov" for 0x400f00>, <DisassemblerInsn "mov" for 0x400f06>, <DisassemblerInsn "cmp" for 0x400f0c>, <DisassemblerInsn "cmovg" for 0x400f0f>, <DisassemblerInsn "and" for 0x400f13>, <DisassemblerInsn "movzx" for 0x400f17>, <DisassemblerInsn "mov" for 0x400f1b>, <DisassemblerInsn "sub" for 0x400f1f>, <DisassemblerInsn "mov" for 0x400f22>, <DisassemblerInsn "mov" for 0x400f25>, <DisassemblerInsn "mov" for 0x400f2d>, <DisassemblerInsn "add" for 0x400f30>, <DisassemblerInsn "mov" for 0x400f34>, <DisassemblerInsn "mov" for 0x400f3c>, <DisassemblerInsn "mov" for 0x400f40>, <DisassemblerInsn "add" for 0x400f43>, <DisassemblerInsn "mov" for 0x400f47>, <DisassemblerInsn "mov" for 0x400f4f>, <DisassemblerInsn "mov" for 0x400f53>, <DisassemblerInsn "mov" for 0x400f59>, <DisassemblerInsn "add" for 0x400f5c>, <DisassemblerInsn "mov" for 0x400f60>, <DisassemblerInsn "mov" for 0x400f68>, <DisassemblerInsn "mov" for 0x400f6b>, <DisassemblerInsn "mov" for 0x400f6d>, <DisassemblerInsn "and" for 0x400f73>, <DisassemblerInsn "cmp" for 0x400f75>, <DisassemblerInsn "je" for 0x400f77>]'}, {'block_Idx': 93, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013b1>, <DisassemblerInsn "mov" for 0x4013b8>, <DisassemblerInsn "mov" for 0x4013c0>, <DisassemblerInsn "sar" for 0x4013c2>, <DisassemblerInsn "movsxd" for 0x4013c5>, <DisassemblerInsn "mov" for 0x4013c8>, <DisassemblerInsn "ror" for 0x4013cb>, <DisassemblerInsn "ror" for 0x4013cf>, <DisassemblerInsn "ror" for 0x4013d2>, <DisassemblerInsn "and" for 0x4013d6>, <DisassemblerInsn "shl" for 0x4013d9>, <DisassemblerInsn "mov" for 0x4013db>, <DisassemblerInsn "shr" for 0x4013e2>, <DisassemblerInsn "add" for 0x4013e5>, <DisassemblerInsn "imul" for 0x4013e8>, <DisassemblerInsn "mov" for 0x4013ee>, <DisassemblerInsn "mov" for 0x4013f5>, <DisassemblerInsn "jmp" for 0x4013fc>]'}, {'block_Idx': 30, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d36>, <DisassemblerInsn "mov" for 0x400d3d>, <DisassemblerInsn "mov" for 0x400d45>, <DisassemblerInsn "add" for 0x400d48>, <DisassemblerInsn "xor" for 0x400d4b>, <DisassemblerInsn "cmp" for 0x400d4d>, <DisassemblerInsn "mov" for 0x400d4f>, <DisassemblerInsn "mov" for 0x400d51>, <DisassemblerInsn "mov" for 0x400d58>, <DisassemblerInsn "mov" for 0x400d5f>, <DisassemblerInsn "je" for 0x400d66>]'}, {'block_Idx': 104, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40139c>, <DisassemblerInsn "sub" for 0x4013a3>, <DisassemblerInsn "je" for 0x4013a6>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b85>, <DisassemblerInsn "mov" for 0x401b8c>, <DisassemblerInsn "mov" for 0x401b93>, <DisassemblerInsn "mov" for 0x401b9a>, <DisassemblerInsn "xor" for 0x401b9d>, <DisassemblerInsn "sub" for 0x401b9f>, <DisassemblerInsn "shr" for 0x401ba2>, <DisassemblerInsn "mov" for 0x401ba4>, <DisassemblerInsn "add" for 0x401bac>, <DisassemblerInsn "mov" for 0x401bae>, <DisassemblerInsn "mov" for 0x401bb0>, <DisassemblerInsn "jmp" for 0x401bb7>]'}, {'block_Idx': 169, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ab9>, <DisassemblerInsn "mov" for 0x401ac1>, <DisassemblerInsn "mov" for 0x401ac9>, <DisassemblerInsn "mov" for 0x401ace>, <DisassemblerInsn "xor" for 0x401ad6>, <DisassemblerInsn "mov" for 0x401ad8>, <DisassemblerInsn "mov" for 0x401ae0>, <DisassemblerInsn "mov" for 0x401ae8>, <DisassemblerInsn "mov" for 0x401af0>, <DisassemblerInsn "mov" for 0x401af8>, <DisassemblerInsn "mov" for 0x401aff>, <DisassemblerInsn "add" for 0x401b02>, <DisassemblerInsn "mov" for 0x401b06>, <DisassemblerInsn "movsxd" for 0x401b0e>, <DisassemblerInsn "cmp" for 0x401b11>, <DisassemblerInsn "mov" for 0x401b14>, <DisassemblerInsn "jl" for 0x401b1c>]'}, {'block_Idx': 202, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c48>, <DisassemblerInsn "mov" for 0x401c50>, <DisassemblerInsn "mov" for 0x401c58>, <DisassemblerInsn "mov" for 0x401c5f>, <DisassemblerInsn "mov" for 0x401c66>, <DisassemblerInsn "sub" for 0x401c6b>, <DisassemblerInsn "mov" for 0x401c6d>, <DisassemblerInsn "shl" for 0x401c74>, <DisassemblerInsn "mov" for 0x401c76>, <DisassemblerInsn "sar" for 0x401c7d>, <DisassemblerInsn "mov" for 0x401c7f>, <DisassemblerInsn "mov" for 0x401c87>, <DisassemblerInsn "mov" for 0x401c8a>, <DisassemblerInsn "add" for 0x401c8d>, <DisassemblerInsn "mov" for 0x401c91>, <DisassemblerInsn "movsxd" for 0x401c99>, <DisassemblerInsn "cmp" for 0x401c9c>, <DisassemblerInsn "jge" for 0x401c9f>]'}, {'block_Idx': 191, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401dd0>, <DisassemblerInsn "mov" for 0x401dd7>, <DisassemblerInsn "mov" for 0x401dde>, <DisassemblerInsn "mov" for 0x401de5>, <DisassemblerInsn "xor" for 0x401de8>, <DisassemblerInsn "sub" for 0x401dea>, <DisassemblerInsn "shr" for 0x401ded>, <DisassemblerInsn "mov" for 0x401def>, <DisassemblerInsn "add" for 0x401df7>, <DisassemblerInsn "mov" for 0x401df9>, <DisassemblerInsn "mov" for 0x401dfb>, <DisassemblerInsn "jmp" for 0x401e02>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402faa>, <DisassemblerInsn "mov" for 0x402fb1>, <DisassemblerInsn "mov" for 0x402fb9>, <DisassemblerInsn "add" for 0x402fbb>, <DisassemblerInsn "mov" for 0x402fbe>, <DisassemblerInsn "cdq" for 0x402fc3>, <DisassemblerInsn "idiv" for 0x402fc4>, <DisassemblerInsn "mov" for 0x402fc6>, <DisassemblerInsn "cmp" for 0x402fca>, <DisassemblerInsn "jle" for 0x402fcc>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bb2>, <DisassemblerInsn "and" for 0x400bb9>, <DisassemblerInsn "cmp" for 0x400bbe>, <DisassemblerInsn "je" for 0x400bc3>]'}, {'block_Idx': 38, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400df0>, <DisassemblerInsn "mov" for 0x400df8>, <DisassemblerInsn "mov" for 0x400dff>, <DisassemblerInsn "mov" for 0x400e06>, <DisassemblerInsn "mov" for 0x400e0d>, <DisassemblerInsn "mov" for 0x400e14>, <DisassemblerInsn "shl" for 0x400e1b>, <DisassemblerInsn "shr" for 0x400e1e>, <DisassemblerInsn "mov" for 0x400e21>, <DisassemblerInsn "mov" for 0x400e28>, <DisassemblerInsn "cmp" for 0x400e2e>, <DisassemblerInsn "jne" for 0x400e31>]'}, {'block_Idx': 75, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40115d>, <DisassemblerInsn "sub" for 0x401164>, <DisassemblerInsn "je" for 0x401167>]'}, {'block_Idx': 168, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40241e>, <DisassemblerInsn "cmp" for 0x402425>, <DisassemblerInsn "je" for 0x402428>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f1d>, <DisassemblerInsn "mov" for 0x401f24>, <DisassemblerInsn "mov" for 0x401f2c>, <DisassemblerInsn "mov" for 0x401f34>, <DisassemblerInsn "call" for 0x401f36>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a59>, <DisassemblerInsn "mov" for 0x400a61>, <DisassemblerInsn "mov" for 0x400a69>, <DisassemblerInsn "mov" for 0x400a71>, <DisassemblerInsn "mov" for 0x400a79>, <DisassemblerInsn "mov" for 0x400a81>, <DisassemblerInsn "mov" for 0x400a89>, <DisassemblerInsn "add" for 0x400a8c>, <DisassemblerInsn "sar" for 0x400a8f>, <DisassemblerInsn "xor" for 0x400a92>, <DisassemblerInsn "cmp" for 0x400a95>, <DisassemblerInsn "cmovl" for 0x400a99>, <DisassemblerInsn "xor" for 0x400a9d>, <DisassemblerInsn "cmp" for 0x400aa0>, <DisassemblerInsn "mov" for 0x400aa4>, <DisassemblerInsn "cmovl" for 0x400aa7>, <DisassemblerInsn "xor" for 0x400aab>, <DisassemblerInsn "cmp" for 0x400aae>, <DisassemblerInsn "cmovl" for 0x400ab2>, <DisassemblerInsn "mov" for 0x400ab6>, <DisassemblerInsn "mov" for 0x400ab9>, <DisassemblerInsn "movsxd" for 0x400abc>, <DisassemblerInsn "add" for 0x400abf>, <DisassemblerInsn "mov" for 0x400ac2>, <DisassemblerInsn "mov" for 0x400ac5>, <DisassemblerInsn "jmp" for 0x400acb>]'}, {'block_Idx': 68, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40109a>, <DisassemblerInsn "mov" for 0x4010a2>, <DisassemblerInsn "mov" for 0x4010aa>, <DisassemblerInsn "mov" for 0x4010b2>, <DisassemblerInsn "mov" for 0x4010ba>, <DisassemblerInsn "add" for 0x4010c1>, <DisassemblerInsn "mov" for 0x4010c4>, <DisassemblerInsn "shr" for 0x4010c7>, <DisassemblerInsn "mov" for 0x4010cb>, <DisassemblerInsn "ror" for 0x4010cf>, <DisassemblerInsn "ror" for 0x4010d3>, <DisassemblerInsn "ror" for 0x4010d6>, <DisassemblerInsn "shr" for 0x4010da>, <DisassemblerInsn "add" for 0x4010dd>, <DisassemblerInsn "mov" for 0x4010e1>, <DisassemblerInsn "mov" for 0x4010e4>, <DisassemblerInsn "add" for 0x4010e7>, <DisassemblerInsn "shl" for 0x4010ea>, <DisassemblerInsn "movsxd" for 0x4010ee>, <DisassemblerInsn "add" for 0x4010f1>, <DisassemblerInsn "cmp" for 0x4010f4>, <DisassemblerInsn "mov" for 0x4010f7>, <DisassemblerInsn "mov" for 0x4010ff>, <DisassemblerInsn "mov" for 0x401107>, <DisassemblerInsn "jb" for 0x40110e>]'}, {'block_Idx': 165, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019ee>, <DisassemblerInsn "mov" for 0x4019f6>, <DisassemblerInsn "mov" for 0x4019fd>, <DisassemblerInsn "mov" for 0x401a04>, <DisassemblerInsn "mov" for 0x401a0c>, <DisassemblerInsn "shr" for 0x401a14>, <DisassemblerInsn "mov" for 0x401a18>, <DisassemblerInsn "add" for 0x401a1b>, <DisassemblerInsn "mov" for 0x401a1f>, <DisassemblerInsn "add" for 0x401a21>, <DisassemblerInsn "mov" for 0x401a24>, <DisassemblerInsn "shl" for 0x401a2b>, <DisassemblerInsn "mov" for 0x401a2e>, <DisassemblerInsn "mov" for 0x401a35>, <DisassemblerInsn "sar" for 0x401a3d>, <DisassemblerInsn "movsxd" for 0x401a41>, <DisassemblerInsn "mov" for 0x401a44>, <DisassemblerInsn "ror" for 0x401a48>, <DisassemblerInsn "ror" for 0x401a4c>, <DisassemblerInsn "ror" for 0x401a4f>, <DisassemblerInsn "shl" for 0x401a53>, <DisassemblerInsn "mov" for 0x401a55>, <DisassemblerInsn "mov" for 0x401a5c>, <DisassemblerInsn "xor" for 0x401a5f>, <DisassemblerInsn "sub" for 0x401a61>, <DisassemblerInsn "shr" for 0x401a64>, <DisassemblerInsn "mov" for 0x401a66>, <DisassemblerInsn "add" for 0x401a6d>, <DisassemblerInsn "mov" for 0x401a6f>, <DisassemblerInsn "or" for 0x401a71>, <DisassemblerInsn "mov" for 0x401a73>, <DisassemblerInsn "mov" for 0x401a7a>, <DisassemblerInsn "mov" for 0x401a82>, <DisassemblerInsn "mov" for 0x401a89>, <DisassemblerInsn "mov" for 0x401a90>, <DisassemblerInsn "sub" for 0x401a95>, <DisassemblerInsn "mov" for 0x401a97>, <DisassemblerInsn "shl" for 0x401a9e>, <DisassemblerInsn "mov" for 0x401aa0>, <DisassemblerInsn "sar" for 0x401aa7>, <DisassemblerInsn "mov" for 0x401aa9>, <DisassemblerInsn "cmp" for 0x401ab0>, <DisassemblerInsn "jle" for 0x401ab3>]'}, {'block_Idx': 63, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40102e>, <DisassemblerInsn "mov" for 0x401035>, <DisassemblerInsn "mov" for 0x40103c>, <DisassemblerInsn "mov" for 0x401041>, <DisassemblerInsn "shr" for 0x401043>, <DisassemblerInsn "mov" for 0x401045>, <DisassemblerInsn "and" for 0x401047>, <DisassemblerInsn "mov" for 0x401049>, <DisassemblerInsn "mov" for 0x40104b>, <DisassemblerInsn "mov" for 0x401050>, <DisassemblerInsn "mov" for 0x401058>, <DisassemblerInsn "mov" for 0x401060>, <DisassemblerInsn "mov" for 0x401067>, <DisassemblerInsn "mov" for 0x40106f>, <DisassemblerInsn "mov" for 0x401077>, <DisassemblerInsn "mov" for 0x40107e>, <DisassemblerInsn "mov" for 0x401085>, <DisassemblerInsn "mov" for 0x40108d>, <DisassemblerInsn "cmp" for 0x401095>, <DisassemblerInsn "jle" for 0x401098>]'}, {'block_Idx': 62, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401133>, <DisassemblerInsn "xor" for 0x40113b>, <DisassemblerInsn "lea" for 0x40113d>, <DisassemblerInsn "mov" for 0x401144>, <DisassemblerInsn "call" for 0x401146>]'}, {'block_Idx': 127, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401738>, <DisassemblerInsn "mov" for 0x401740>, <DisassemblerInsn "mov" for 0x401747>, <DisassemblerInsn "mov" for 0x40174f>, <DisassemblerInsn "mov" for 0x401756>, <DisassemblerInsn "sar" for 0x401758>, <DisassemblerInsn "movsxd" for 0x40175b>, <DisassemblerInsn "mov" for 0x40175e>, <DisassemblerInsn "ror" for 0x401761>, <DisassemblerInsn "ror" for 0x401765>, <DisassemblerInsn "ror" for 0x401768>, <DisassemblerInsn "and" for 0x40176c>, <DisassemblerInsn "shl" for 0x40176f>, <DisassemblerInsn "mov" for 0x401771>, <DisassemblerInsn "shr" for 0x401773>, <DisassemblerInsn "mov" for 0x401776>, <DisassemblerInsn "mov" for 0x40177d>, <DisassemblerInsn "add" for 0x40177f>, <DisassemblerInsn "mov" for 0x401782>, <DisassemblerInsn "mov" for 0x401784>, <DisassemblerInsn "sar" for 0x401786>, <DisassemblerInsn "movsxd" for 0x401789>, <DisassemblerInsn "mov" for 0x40178c>, <DisassemblerInsn "and" for 0x40178f>, <DisassemblerInsn "movzx" for 0x401792>, <DisassemblerInsn "add" for 0x401795>, <DisassemblerInsn "mov" for 0x401798>, <DisassemblerInsn "mov" for 0x40179a>, <DisassemblerInsn "shr" for 0x40179f>, <DisassemblerInsn "mov" for 0x4017a1>, <DisassemblerInsn "and" for 0x4017a8>, <DisassemblerInsn "xor" for 0x4017aa>, <DisassemblerInsn "mov" for 0x4017ac>, <DisassemblerInsn "cmp" for 0x4017b1>, <DisassemblerInsn "mov" for 0x4017b4>, <DisassemblerInsn "mov" for 0x4017b6>, <DisassemblerInsn "mov" for 0x4017bd>, <DisassemblerInsn "mov" for 0x4017c4>, <DisassemblerInsn "mov" for 0x4017cb>, <DisassemblerInsn "mov" for 0x4017d2>, <DisassemblerInsn "je" for 0x4017d9>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ccd>, <DisassemblerInsn "mov" for 0x400cd5>, <DisassemblerInsn "mov" for 0x400cdd>, <DisassemblerInsn "mov" for 0x400ce4>, <DisassemblerInsn "shr" for 0x400ce6>, <DisassemblerInsn "mov" for 0x400ce9>, <DisassemblerInsn "shl" for 0x400cf0>, <DisassemblerInsn "shr" for 0x400cf3>, <DisassemblerInsn "mov" for 0x400cf6>, <DisassemblerInsn "mov" for 0x400cfd>, <DisassemblerInsn "add" for 0x400d00>, <DisassemblerInsn "mov" for 0x400d04>, <DisassemblerInsn "mov" for 0x400d0c>, <DisassemblerInsn "ror" for 0x400d0f>, <DisassemblerInsn "ror" for 0x400d13>, <DisassemblerInsn "ror" for 0x400d16>, <DisassemblerInsn "mov" for 0x400d1a>, <DisassemblerInsn "shr" for 0x400d21>, <DisassemblerInsn "mov" for 0x400d24>, <DisassemblerInsn "mov" for 0x400d2b>, <DisassemblerInsn "cmp" for 0x400d31>, <DisassemblerInsn "jge" for 0x400d34>]'}, {'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400910>, <DisassemblerInsn "mov" for 0x400918>, <DisassemblerInsn "mov" for 0x400920>, <DisassemblerInsn "mov" for 0x400928>, <DisassemblerInsn "mov" for 0x40092e>, <DisassemblerInsn "add" for 0x400931>, <DisassemblerInsn "mov" for 0x400935>, <DisassemblerInsn "mov" for 0x40093d>, <DisassemblerInsn "add" for 0x400940>, <DisassemblerInsn "mov" for 0x400944>, <DisassemblerInsn "mov" for 0x40094c>, <DisassemblerInsn "mov" for 0x400954>, <DisassemblerInsn "mov" for 0x400959>, <DisassemblerInsn "mov" for 0x400961>, <DisassemblerInsn "mov" for 0x400968>, <DisassemblerInsn "mov" for 0x400970>, <DisassemblerInsn "mov" for 0x400978>, <DisassemblerInsn "mov" for 0x40097f>, <DisassemblerInsn "mov" for 0x400987>, <DisassemblerInsn "sar" for 0x400989>, <DisassemblerInsn "movsxd" for 0x40098c>, <DisassemblerInsn "mov" for 0x40098f>, <DisassemblerInsn "mov" for 0x400992>, <DisassemblerInsn "and" for 0x400994>, <DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "movzx" for 0x40099e>, <DisassemblerInsn "mov" for 0x4009a1>, <DisassemblerInsn "mov" for 0x4009a8>, <DisassemblerInsn "add" for 0x4009aa>, <DisassemblerInsn "mov" for 0x4009ad>, <DisassemblerInsn "sar" for 0x4009af>, <DisassemblerInsn "movsxd" for 0x4009b2>, <DisassemblerInsn "mov" for 0x4009b5>, <DisassemblerInsn "ror" for 0x4009b8>, <DisassemblerInsn "ror" for 0x4009bc>, <DisassemblerInsn "ror" for 0x4009bf>, <DisassemblerInsn "and" for 0x4009c3>, <DisassemblerInsn "shl" for 0x4009c6>, <DisassemblerInsn "mov" for 0x4009c8>, <DisassemblerInsn "shr" for 0x4009cf>, <DisassemblerInsn "mov" for 0x4009d2>, <DisassemblerInsn "mov" for 0x4009d9>, <DisassemblerInsn "add" for 0x4009db>, <DisassemblerInsn "sar" for 0x4009de>, <DisassemblerInsn "movsxd" for 0x4009e1>, <DisassemblerInsn "mov" for 0x4009e4>, <DisassemblerInsn "ror" for 0x4009e7>, <DisassemblerInsn "ror" for 0x4009eb>, <DisassemblerInsn "ror" for 0x4009ee>, <DisassemblerInsn "shl" for 0x4009f2>, <DisassemblerInsn "mov" for 0x4009f4>, <DisassemblerInsn "shr" for 0x4009fb>, <DisassemblerInsn "mov" for 0x4009fe>, <DisassemblerInsn "add" for 0x400a01>, <DisassemblerInsn "shl" for 0x400a05>, <DisassemblerInsn "sar" for 0x400a08>, <DisassemblerInsn "movsxd" for 0x400a0c>, <DisassemblerInsn "mov" for 0x400a0f>, <DisassemblerInsn "ror" for 0x400a13>, <DisassemblerInsn "ror" for 0x400a17>, <DisassemblerInsn "ror" for 0x400a1a>, <DisassemblerInsn "shl" for 0x400a1e>, <DisassemblerInsn "mov" for 0x400a20>, <DisassemblerInsn "shr" for 0x400a28>, <DisassemblerInsn "add" for 0x400a2b>, <DisassemblerInsn "mov" for 0x400a2e>, <DisassemblerInsn "mov" for 0x400a35>, <DisassemblerInsn "or" for 0x400a37>, <DisassemblerInsn "mov" for 0x400a39>, <DisassemblerInsn "shl" for 0x400a40>, <DisassemblerInsn "mov" for 0x400a43>, <DisassemblerInsn "add" for 0x400a4a>, <DisassemblerInsn "mov" for 0x400a4c>, <DisassemblerInsn "mov" for 0x400a4e>, <DisassemblerInsn "cmp" for 0x400a55>, <DisassemblerInsn "jle" for 0x400a57>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b89>, <DisassemblerInsn "mov" for 0x400b91>, <DisassemblerInsn "mov" for 0x400b99>, <DisassemblerInsn "mov" for 0x400b9b>, <DisassemblerInsn "mov" for 0x400b9e>, <DisassemblerInsn "mov" for 0x400ba6>, <DisassemblerInsn "jmp" for 0x400bad>]'}, {'block_Idx': 41, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400da1>, <DisassemblerInsn "add" for 0x400da8>, <DisassemblerInsn "mov" for 0x400dab>, <DisassemblerInsn "mov" for 0x400db0>, <DisassemblerInsn "mov" for 0x400db7>, <DisassemblerInsn "jmp" for 0x400dbe>]'}, {'block_Idx': 31, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d6e>, <DisassemblerInsn "mov" for 0x400d76>, <DisassemblerInsn "add" for 0x400d7d>, <DisassemblerInsn "sub" for 0x400d80>, <DisassemblerInsn "setb" for 0x400d83>, <DisassemblerInsn "mov" for 0x400d86>, <DisassemblerInsn "mov" for 0x400d89>, <DisassemblerInsn "sub" for 0x400d8b>, <DisassemblerInsn "sete" for 0x400d8e>, <DisassemblerInsn "and" for 0x400d91>, <DisassemblerInsn "test" for 0x400d93>, <DisassemblerInsn "mov" for 0x400d96>, <DisassemblerInsn "jne" for 0x400d9d>]'}, {'block_Idx': 91, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401380>, <DisassemblerInsn "sub" for 0x401387>, <DisassemblerInsn "je" for 0x40138a>]'}, {'block_Idx': 3, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4004c9>, <DisassemblerInsn "mov" for 0x4004d1>, <DisassemblerInsn "mov" for 0x4004d9>, <DisassemblerInsn "mov" for 0x4004e0>, <DisassemblerInsn "mov" for 0x4004e3>, <DisassemblerInsn "mov" for 0x4004eb>, <DisassemblerInsn "mov" for 0x4004f2>, <DisassemblerInsn "xor" for 0x4004f4>, <DisassemblerInsn "cmp" for 0x4004f6>, <DisassemblerInsn "mov" for 0x4004f9>, <DisassemblerInsn "mov" for 0x400500>, <DisassemblerInsn "mov" for 0x400507>, <DisassemblerInsn "mov" for 0x40050e>, <DisassemblerInsn "je" for 0x400516>]'}, {'block_Idx': 71, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401114>]'}, {'block_Idx': 70, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401067>, <DisassemblerInsn "mov" for 0x40106f>, <DisassemblerInsn "mov" for 0x401077>, <DisassemblerInsn "mov" for 0x40107e>, <DisassemblerInsn "mov" for 0x401085>, <DisassemblerInsn "mov" for 0x40108d>, <DisassemblerInsn "cmp" for 0x401095>, <DisassemblerInsn "jle" for 0x401098>]'}, {'block_Idx': 99, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401401>, <DisassemblerInsn "mov" for 0x401408>, <DisassemblerInsn "mov" for 0x401410>, <DisassemblerInsn "sar" for 0x401412>, <DisassemblerInsn "movsxd" for 0x401415>, <DisassemblerInsn "mov" for 0x401418>, <DisassemblerInsn "ror" for 0x40141b>, <DisassemblerInsn "ror" for 0x40141f>, <DisassemblerInsn "ror" for 0x401422>, <DisassemblerInsn "and" for 0x401426>, <DisassemblerInsn "shl" for 0x401429>, <DisassemblerInsn "mov" for 0x40142b>, <DisassemblerInsn "shr" for 0x401432>, <DisassemblerInsn "add" for 0x401435>, <DisassemblerInsn "mov" for 0x401438>, <DisassemblerInsn "mov" for 0x40143f>, <DisassemblerInsn "jmp" for 0x401446>]'}, {'block_Idx': 184, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d37>, <DisassemblerInsn "mov" for 0x401d3e>, <DisassemblerInsn "mov" for 0x401d45>, <DisassemblerInsn "mov" for 0x401d4c>, <DisassemblerInsn "mov" for 0x401d4e>, <DisassemblerInsn "xor" for 0x401d56>, <DisassemblerInsn "mov" for 0x401d58>, <DisassemblerInsn "mov" for 0x401d5f>, <DisassemblerInsn "mov" for 0x401d66>, <DisassemblerInsn "mov" for 0x401d6e>, <DisassemblerInsn "mov" for 0x401d76>, <DisassemblerInsn "mov" for 0x401d7d>, <DisassemblerInsn "mov" for 0x401d84>, <DisassemblerInsn "mov" for 0x401d8c>, <DisassemblerInsn "mov" for 0x401d94>, <DisassemblerInsn "mov" for 0x401d9b>, <DisassemblerInsn "mov" for 0x401da2>, <DisassemblerInsn "sar" for 0x401da4>, <DisassemblerInsn "movsxd" for 0x401da7>, <DisassemblerInsn "mov" for 0x401daa>, <DisassemblerInsn "ror" for 0x401dad>, <DisassemblerInsn "ror" for 0x401db1>, <DisassemblerInsn "ror" for 0x401db4>, <DisassemblerInsn "and" for 0x401db8>, <DisassemblerInsn "mov" for 0x401dbb>, <DisassemblerInsn "shl" for 0x401dc2>, <DisassemblerInsn "mov" for 0x401dc4>, <DisassemblerInsn "cmp" for 0x401dcb>, <DisassemblerInsn "jge" for 0x401dce>]'}, {'block_Idx': 136, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018a8>, <DisassemblerInsn "mov" for 0x4018af>, <DisassemblerInsn "mov" for 0x4018b6>, <DisassemblerInsn "mov" for 0x4018bd>, <DisassemblerInsn "mov" for 0x4018c4>, <DisassemblerInsn "mov" for 0x4018cb>, <DisassemblerInsn "cmp" for 0x4018d2>, <DisassemblerInsn "jle" for 0x4018d5>]'}, {'block_Idx': 137, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017df>, <DisassemblerInsn "mov" for 0x4017e6>, <DisassemblerInsn "mov" for 0x4017ed>, <DisassemblerInsn "mov" for 0x4017f5>, <DisassemblerInsn "mov" for 0x4017fd>, <DisassemblerInsn "mov" for 0x401804>, <DisassemblerInsn "sar" for 0x401806>, <DisassemblerInsn "mov" for 0x401809>, <DisassemblerInsn "movsxd" for 0x401810>, <DisassemblerInsn "mov" for 0x401813>, <DisassemblerInsn "mov" for 0x401817>, <DisassemblerInsn "and" for 0x401819>, <DisassemblerInsn "mov" for 0x40181c>, <DisassemblerInsn "movzx" for 0x401823>, <DisassemblerInsn "add" for 0x401827>, <DisassemblerInsn "mov" for 0x40182a>, <DisassemblerInsn "mov" for 0x401831>, <DisassemblerInsn "mov" for 0x401833>, <DisassemblerInsn "shr" for 0x401838>, <DisassemblerInsn "mov" for 0x40183a>, <DisassemblerInsn "mov" for 0x401841>, <DisassemblerInsn "and" for 0x401848>, <DisassemblerInsn "mov" for 0x40184a>, <DisassemblerInsn "add" for 0x401851>, <DisassemblerInsn "mov" for 0x401854>, <DisassemblerInsn "cmp" for 0x40185b>, <DisassemblerInsn "mov" for 0x40185e>, <DisassemblerInsn "mov" for 0x401865>, <DisassemblerInsn "je" for 0x40186c>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e93>, <DisassemblerInsn "mov" for 0x401e9b>, <DisassemblerInsn "mov" for 0x401ea3>, <DisassemblerInsn "mov" for 0x401eaa>, <DisassemblerInsn "mov" for 0x401eb1>, <DisassemblerInsn "sub" for 0x401eb6>, <DisassemblerInsn "mov" for 0x401eb8>, <DisassemblerInsn "shl" for 0x401ebf>, <DisassemblerInsn "mov" for 0x401ec1>, <DisassemblerInsn "sar" for 0x401ec8>, <DisassemblerInsn "mov" for 0x401eca>, <DisassemblerInsn "mov" for 0x401ed2>, <DisassemblerInsn "add" for 0x401ed5>, <DisassemblerInsn "mov" for 0x401ed9>, <DisassemblerInsn "cmp" for 0x401ee1>, <DisassemblerInsn "je" for 0x401ee4>]'}, {'block_Idx': 96, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40138e>, <DisassemblerInsn "sub" for 0x401395>, <DisassemblerInsn "je" for 0x401398>]'}, {'block_Idx': 129, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016a9>, <DisassemblerInsn "mov" for 0x4016b1>, <DisassemblerInsn "mov" for 0x4016b9>, <DisassemblerInsn "mov" for 0x4016c0>, <DisassemblerInsn "mov" for 0x4016c7>, <DisassemblerInsn "mov" for 0x4016c9>, <DisassemblerInsn "mov" for 0x4016d0>, <DisassemblerInsn "mov" for 0x4016d3>, <DisassemblerInsn "mov" for 0x4016db>, <DisassemblerInsn "sar" for 0x4016dd>, <DisassemblerInsn "movsxd" for 0x4016e0>, <DisassemblerInsn "mov" for 0x4016e3>, <DisassemblerInsn "mov" for 0x4016e7>, <DisassemblerInsn "and" for 0x4016e9>, <DisassemblerInsn "movzx" for 0x4016ec>, <DisassemblerInsn "mov" for 0x4016f0>, <DisassemblerInsn "add" for 0x4016f7>, <DisassemblerInsn "mov" for 0x4016fa>, <DisassemblerInsn "mov" for 0x401701>, <DisassemblerInsn "mov" for 0x401703>, <DisassemblerInsn "shr" for 0x401708>, <DisassemblerInsn "mov" for 0x40170a>, <DisassemblerInsn "and" for 0x401711>, <DisassemblerInsn "cmp" for 0x401713>, <DisassemblerInsn "je" for 0x401716>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401bbc>, <DisassemblerInsn "mov" for 0x401bc4>, <DisassemblerInsn "mov" for 0x401bcb>, <DisassemblerInsn "mov" for 0x401bd2>, <DisassemblerInsn "mov" for 0x401bda>, <DisassemblerInsn "shr" for 0x401be2>, <DisassemblerInsn "mov" for 0x401be6>, <DisassemblerInsn "add" for 0x401be9>, <DisassemblerInsn "mov" for 0x401bed>, <DisassemblerInsn "add" for 0x401bef>, <DisassemblerInsn "mov" for 0x401bf2>, <DisassemblerInsn "shl" for 0x401bf9>, <DisassemblerInsn "mov" for 0x401bfc>, <DisassemblerInsn "mov" for 0x401c03>, <DisassemblerInsn "sar" for 0x401c0b>, <DisassemblerInsn "movsxd" for 0x401c0f>, <DisassemblerInsn "mov" for 0x401c12>, <DisassemblerInsn "ror" for 0x401c16>, <DisassemblerInsn "ror" for 0x401c1a>, <DisassemblerInsn "ror" for 0x401c1d>, <DisassemblerInsn "shl" for 0x401c21>, <DisassemblerInsn "mov" for 0x401c23>, <DisassemblerInsn "mov" for 0x401c2a>, <DisassemblerInsn "xor" for 0x401c2d>, <DisassemblerInsn "sub" for 0x401c2f>, <DisassemblerInsn "shr" for 0x401c32>, <DisassemblerInsn "mov" for 0x401c34>, <DisassemblerInsn "add" for 0x401c3b>, <DisassemblerInsn "mov" for 0x401c3d>, <DisassemblerInsn "or" for 0x401c3f>, <DisassemblerInsn "mov" for 0x401c41>, <DisassemblerInsn "mov" for 0x401c48>, <DisassemblerInsn "mov" for 0x401c50>, <DisassemblerInsn "mov" for 0x401c58>, <DisassemblerInsn "mov" for 0x401c5f>, <DisassemblerInsn "mov" for 0x401c66>, <DisassemblerInsn "sub" for 0x401c6b>, <DisassemblerInsn "mov" for 0x401c6d>, <DisassemblerInsn "shl" for 0x401c74>, <DisassemblerInsn "mov" for 0x401c76>, <DisassemblerInsn "sar" for 0x401c7d>, <DisassemblerInsn "mov" for 0x401c7f>, <DisassemblerInsn "mov" for 0x401c87>, <DisassemblerInsn "mov" for 0x401c8a>, <DisassemblerInsn "add" for 0x401c8d>, <DisassemblerInsn "mov" for 0x401c91>, <DisassemblerInsn "movsxd" for 0x401c99>, <DisassemblerInsn "cmp" for 0x401c9c>, <DisassemblerInsn "jge" for 0x401c9f>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ad0>, <DisassemblerInsn "cmp" for 0x400ad7>, <DisassemblerInsn "je" for 0x400ada>]'}, {'block_Idx': 200, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ee6>, <DisassemblerInsn "mov" for 0x401eee>, <DisassemblerInsn "mov" for 0x401ef6>, <DisassemblerInsn "mov" for 0x401efe>, <DisassemblerInsn "mov" for 0x401f00>, <DisassemblerInsn "mov" for 0x401f02>, <DisassemblerInsn "mov" for 0x401f09>, <DisassemblerInsn "mov" for 0x401f10>, <DisassemblerInsn "jmp" for 0x401f18>]'}, {'block_Idx': 89, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014b6>, <DisassemblerInsn "mov" for 0x4014be>, <DisassemblerInsn "mov" for 0x4014c5>, <DisassemblerInsn "mov" for 0x4014cc>, <DisassemblerInsn "add" for 0x4014d3>, <DisassemblerInsn "mov" for 0x4014d6>, <DisassemblerInsn "xor" for 0x4014d8>, <DisassemblerInsn "call" for 0x4014da>]'}, {'block_Idx': 76, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401199>, <DisassemblerInsn "mov" for 0x4011a1>, <DisassemblerInsn "mov" for 0x4011a8>, <DisassemblerInsn "mov" for 0x4011b0>, <DisassemblerInsn "shr" for 0x4011b8>, <DisassemblerInsn "and" for 0x4011bc>, <DisassemblerInsn "mov" for 0x4011c3>, <DisassemblerInsn "ror" for 0x4011c6>, <DisassemblerInsn "ror" for 0x4011ca>, <DisassemblerInsn "ror" for 0x4011cd>, <DisassemblerInsn "shr" for 0x4011d1>, <DisassemblerInsn "add" for 0x4011d4>, <DisassemblerInsn "mov" for 0x4011d7>, <DisassemblerInsn "add" for 0x4011d9>, <DisassemblerInsn "mov" for 0x4011dc>, <DisassemblerInsn "mov" for 0x4011e3>, <DisassemblerInsn "jmp" for 0x4011ea>]'}, {'block_Idx': 47, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e49>, <DisassemblerInsn "and" for 0x400e50>, <DisassemblerInsn "cmp" for 0x400e53>, <DisassemblerInsn "je" for 0x400e56>]'}, {'block_Idx': 203, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ca5>, <DisassemblerInsn "mov" for 0x401cad>, <DisassemblerInsn "mov" for 0x401cb5>, <DisassemblerInsn "mov" for 0x401cbd>, <DisassemblerInsn "mov" for 0x401cbf>, <DisassemblerInsn "mov" for 0x401cc1>, <DisassemblerInsn "mov" for 0x401cc8>, <DisassemblerInsn "mov" for 0x401ccf>, <DisassemblerInsn "jmp" for 0x401cd7>]'}, {'block_Idx': 192, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e07>, <DisassemblerInsn "mov" for 0x401e0f>, <DisassemblerInsn "mov" for 0x401e16>, <DisassemblerInsn "mov" for 0x401e1d>, <DisassemblerInsn "mov" for 0x401e25>, <DisassemblerInsn "shr" for 0x401e2d>, <DisassemblerInsn "mov" for 0x401e31>, <DisassemblerInsn "add" for 0x401e34>, <DisassemblerInsn "mov" for 0x401e38>, <DisassemblerInsn "add" for 0x401e3a>, <DisassemblerInsn "mov" for 0x401e3d>, <DisassemblerInsn "shl" for 0x401e44>, <DisassemblerInsn "mov" for 0x401e47>, <DisassemblerInsn "mov" for 0x401e4e>, <DisassemblerInsn "sar" for 0x401e56>, <DisassemblerInsn "movsxd" for 0x401e5a>, <DisassemblerInsn "mov" for 0x401e5d>, <DisassemblerInsn "ror" for 0x401e61>, <DisassemblerInsn "ror" for 0x401e65>, <DisassemblerInsn "ror" for 0x401e68>, <DisassemblerInsn "shl" for 0x401e6c>, <DisassemblerInsn "mov" for 0x401e6e>, <DisassemblerInsn "mov" for 0x401e75>, <DisassemblerInsn "xor" for 0x401e78>, <DisassemblerInsn "sub" for 0x401e7a>, <DisassemblerInsn "shr" for 0x401e7d>, <DisassemblerInsn "mov" for 0x401e7f>, <DisassemblerInsn "add" for 0x401e86>, <DisassemblerInsn "mov" for 0x401e88>, <DisassemblerInsn "or" for 0x401e8a>, <DisassemblerInsn "mov" for 0x401e8c>, <DisassemblerInsn "mov" for 0x401e93>, <DisassemblerInsn "mov" for 0x401e9b>, <DisassemblerInsn "mov" for 0x401ea3>, <DisassemblerInsn "mov" for 0x401eaa>, <DisassemblerInsn "mov" for 0x401eb1>, <DisassemblerInsn "sub" for 0x401eb6>, <DisassemblerInsn "mov" for 0x401eb8>, <DisassemblerInsn "shl" for 0x401ebf>, <DisassemblerInsn "mov" for 0x401ec1>, <DisassemblerInsn "sar" for 0x401ec8>, <DisassemblerInsn "mov" for 0x401eca>, <DisassemblerInsn "mov" for 0x401ed2>, <DisassemblerInsn "add" for 0x401ed5>, <DisassemblerInsn "mov" for 0x401ed9>, <DisassemblerInsn "cmp" for 0x401ee1>, <DisassemblerInsn "je" for 0x401ee4>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400968>, <DisassemblerInsn "mov" for 0x400970>, <DisassemblerInsn "mov" for 0x400978>, <DisassemblerInsn "mov" for 0x40097f>, <DisassemblerInsn "mov" for 0x400987>, <DisassemblerInsn "sar" for 0x400989>, <DisassemblerInsn "movsxd" for 0x40098c>, <DisassemblerInsn "mov" for 0x40098f>, <DisassemblerInsn "mov" for 0x400992>, <DisassemblerInsn "and" for 0x400994>, <DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "movzx" for 0x40099e>, <DisassemblerInsn "mov" for 0x4009a1>, <DisassemblerInsn "mov" for 0x4009a8>, <DisassemblerInsn "add" for 0x4009aa>, <DisassemblerInsn "mov" for 0x4009ad>, <DisassemblerInsn "sar" for 0x4009af>, <DisassemblerInsn "movsxd" for 0x4009b2>, <DisassemblerInsn "mov" for 0x4009b5>, <DisassemblerInsn "ror" for 0x4009b8>, <DisassemblerInsn "ror" for 0x4009bc>, <DisassemblerInsn "ror" for 0x4009bf>, <DisassemblerInsn "and" for 0x4009c3>, <DisassemblerInsn "shl" for 0x4009c6>, <DisassemblerInsn "mov" for 0x4009c8>, <DisassemblerInsn "shr" for 0x4009cf>, <DisassemblerInsn "mov" for 0x4009d2>, <DisassemblerInsn "mov" for 0x4009d9>, <DisassemblerInsn "add" for 0x4009db>, <DisassemblerInsn "sar" for 0x4009de>, <DisassemblerInsn "movsxd" for 0x4009e1>, <DisassemblerInsn "mov" for 0x4009e4>, <DisassemblerInsn "ror" for 0x4009e7>, <DisassemblerInsn "ror" for 0x4009eb>, <DisassemblerInsn "ror" for 0x4009ee>, <DisassemblerInsn "shl" for 0x4009f2>, <DisassemblerInsn "mov" for 0x4009f4>, <DisassemblerInsn "shr" for 0x4009fb>, <DisassemblerInsn "mov" for 0x4009fe>, <DisassemblerInsn "add" for 0x400a01>, <DisassemblerInsn "shl" for 0x400a05>, <DisassemblerInsn "sar" for 0x400a08>, <DisassemblerInsn "movsxd" for 0x400a0c>, <DisassemblerInsn "mov" for 0x400a0f>, <DisassemblerInsn "ror" for 0x400a13>, <DisassemblerInsn "ror" for 0x400a17>, <DisassemblerInsn "ror" for 0x400a1a>, <DisassemblerInsn "shl" for 0x400a1e>, <DisassemblerInsn "mov" for 0x400a20>, <DisassemblerInsn "shr" for 0x400a28>, <DisassemblerInsn "add" for 0x400a2b>, <DisassemblerInsn "mov" for 0x400a2e>, <DisassemblerInsn "mov" for 0x400a35>, <DisassemblerInsn "or" for 0x400a37>, <DisassemblerInsn "mov" for 0x400a39>, <DisassemblerInsn "shl" for 0x400a40>, <DisassemblerInsn "mov" for 0x400a43>, <DisassemblerInsn "add" for 0x400a4a>, <DisassemblerInsn "mov" for 0x400a4c>, <DisassemblerInsn "mov" for 0x400a4e>, <DisassemblerInsn "cmp" for 0x400a55>, <DisassemblerInsn "jle" for 0x400a57>]'}, {'block_Idx': 82, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011ec>, <DisassemblerInsn "mov" for 0x4011f4>, <DisassemblerInsn "mov" for 0x4011fb>, <DisassemblerInsn "mov" for 0x401203>, <DisassemblerInsn "shr" for 0x40120b>, <DisassemblerInsn "and" for 0x40120f>, <DisassemblerInsn "mov" for 0x401216>, <DisassemblerInsn "ror" for 0x401219>, <DisassemblerInsn "ror" for 0x40121d>, <DisassemblerInsn "ror" for 0x401220>, <DisassemblerInsn "shr" for 0x401224>, <DisassemblerInsn "add" for 0x401227>, <DisassemblerInsn "mov" for 0x40122a>, <DisassemblerInsn "add" for 0x40122c>, <DisassemblerInsn "mov" for 0x40122f>, <DisassemblerInsn "mov" for 0x401236>, <DisassemblerInsn "jmp" for 0x40123d>]'}, {'block_Idx': 156, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401973>, <DisassemblerInsn "mov" for 0x40197a>, <DisassemblerInsn "mov" for 0x401981>, <DisassemblerInsn "mov" for 0x401989>, <DisassemblerInsn "sar" for 0x40198b>, <DisassemblerInsn "movsxd" for 0x40198e>, <DisassemblerInsn "mov" for 0x401991>, <DisassemblerInsn "ror" for 0x401994>, <DisassemblerInsn "ror" for 0x401998>, <DisassemblerInsn "ror" for 0x40199b>, <DisassemblerInsn "and" for 0x40199f>, <DisassemblerInsn "mov" for 0x4019a2>, <DisassemblerInsn "shl" for 0x4019a9>, <DisassemblerInsn "mov" for 0x4019ab>, <DisassemblerInsn "cmp" for 0x4019b2>, <DisassemblerInsn "jge" for 0x4019b5>]'}, {'block_Idx': 116, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40168e>, <DisassemblerInsn "mov" for 0x401696>, <DisassemblerInsn "add" for 0x40169d>, <DisassemblerInsn "mov" for 0x4016a0>, <DisassemblerInsn "mov" for 0x4016a2>, <DisassemblerInsn "mov" for 0x4016a9>, <DisassemblerInsn "mov" for 0x4016b1>, <DisassemblerInsn "mov" for 0x4016b9>, <DisassemblerInsn "mov" for 0x4016c0>, <DisassemblerInsn "mov" for 0x4016c7>, <DisassemblerInsn "mov" for 0x4016c9>, <DisassemblerInsn "mov" for 0x4016d0>, <DisassemblerInsn "mov" for 0x4016d3>, <DisassemblerInsn "mov" for 0x4016db>, <DisassemblerInsn "sar" for 0x4016dd>, <DisassemblerInsn "movsxd" for 0x4016e0>, <DisassemblerInsn "mov" for 0x4016e3>, <DisassemblerInsn "mov" for 0x4016e7>, <DisassemblerInsn "and" for 0x4016e9>, <DisassemblerInsn "movzx" for 0x4016ec>, <DisassemblerInsn "mov" for 0x4016f0>, <DisassemblerInsn "add" for 0x4016f7>, <DisassemblerInsn "mov" for 0x4016fa>, <DisassemblerInsn "mov" for 0x401701>, <DisassemblerInsn "mov" for 0x401703>, <DisassemblerInsn "shr" for 0x401708>, <DisassemblerInsn "mov" for 0x40170a>, <DisassemblerInsn "and" for 0x401711>, <DisassemblerInsn "cmp" for 0x401713>, <DisassemblerInsn "je" for 0x401716>]'}, {'block_Idx': 78, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401268>, <DisassemblerInsn "mov" for 0x401270>, <DisassemblerInsn "mov" for 0x401277>, <DisassemblerInsn "mov" for 0x40127e>, <DisassemblerInsn "mov" for 0x401285>, <DisassemblerInsn "mov" for 0x40128c>, <DisassemblerInsn "mov" for 0x40128e>, <DisassemblerInsn "cmp" for 0x401295>, <DisassemblerInsn "jle" for 0x401297>]'}, {'block_Idx': 167, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a7a>, <DisassemblerInsn "mov" for 0x401a82>, <DisassemblerInsn "mov" for 0x401a89>, <DisassemblerInsn "mov" for 0x401a90>, <DisassemblerInsn "sub" for 0x401a95>, <DisassemblerInsn "mov" for 0x401a97>, <DisassemblerInsn "shl" for 0x401a9e>, <DisassemblerInsn "mov" for 0x401aa0>, <DisassemblerInsn "sar" for 0x401aa7>, <DisassemblerInsn "mov" for 0x401aa9>, <DisassemblerInsn "cmp" for 0x401ab0>, <DisassemblerInsn "jle" for 0x401ab3>]'}, {'block_Idx': 189, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b23>, <DisassemblerInsn "mov" for 0x401b2b>, <DisassemblerInsn "mov" for 0x401b32>, <DisassemblerInsn "mov" for 0x401b39>, <DisassemblerInsn "mov" for 0x401b41>, <DisassemblerInsn "mov" for 0x401b49>, <DisassemblerInsn "mov" for 0x401b50>, <DisassemblerInsn "mov" for 0x401b57>, <DisassemblerInsn "sar" for 0x401b59>, <DisassemblerInsn "movsxd" for 0x401b5c>, <DisassemblerInsn "mov" for 0x401b5f>, <DisassemblerInsn "ror" for 0x401b62>, <DisassemblerInsn "ror" for 0x401b66>, <DisassemblerInsn "ror" for 0x401b69>, <DisassemblerInsn "and" for 0x401b6d>, <DisassemblerInsn "mov" for 0x401b70>, <DisassemblerInsn "shl" for 0x401b77>, <DisassemblerInsn "mov" for 0x401b79>, <DisassemblerInsn "cmp" for 0x401b80>, <DisassemblerInsn "jge" for 0x401b83>]'}, {'block_Idx': 79, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40116b>, <DisassemblerInsn "sub" for 0x401172>, <DisassemblerInsn "je" for 0x401175>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d6e>, <DisassemblerInsn "mov" for 0x401d76>, <DisassemblerInsn "mov" for 0x401d7d>, <DisassemblerInsn "mov" for 0x401d84>, <DisassemblerInsn "mov" for 0x401d8c>, <DisassemblerInsn "mov" for 0x401d94>, <DisassemblerInsn "mov" for 0x401d9b>, <DisassemblerInsn "mov" for 0x401da2>, <DisassemblerInsn "sar" for 0x401da4>, <DisassemblerInsn "movsxd" for 0x401da7>, <DisassemblerInsn "mov" for 0x401daa>, <DisassemblerInsn "ror" for 0x401dad>, <DisassemblerInsn "ror" for 0x401db1>, <DisassemblerInsn "ror" for 0x401db4>, <DisassemblerInsn "and" for 0x401db8>, <DisassemblerInsn "mov" for 0x401dbb>, <DisassemblerInsn "shl" for 0x401dc2>, <DisassemblerInsn "mov" for 0x401dc4>, <DisassemblerInsn "cmp" for 0x401dcb>, <DisassemblerInsn "jge" for 0x401dce>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400817>, <DisassemblerInsn "mov" for 0x40081f>, <DisassemblerInsn "mov" for 0x400826>, <DisassemblerInsn "mov" for 0x40082d>, <DisassemblerInsn "mov" for 0x400835>, <DisassemblerInsn "mov" for 0x40083c>, <DisassemblerInsn "mov" for 0x400843>, <DisassemblerInsn "shl" for 0x400845>, <DisassemblerInsn "xor" for 0x400848>, <DisassemblerInsn "cmp" for 0x40084a>, <DisassemblerInsn "cmovl" for 0x40084d>, <DisassemblerInsn "mov" for 0x400851>, <DisassemblerInsn "xor" for 0x400859>, <DisassemblerInsn "cmp" for 0x40085b>, <DisassemblerInsn "cmovl" for 0x40085e>, <DisassemblerInsn "xor" for 0x400861>, <DisassemblerInsn "cmp" for 0x400864>, <DisassemblerInsn "mov" for 0x400867>, <DisassemblerInsn "cmovl" for 0x400869>, <DisassemblerInsn "mov" for 0x40086d>, <DisassemblerInsn "add" for 0x400870>, <DisassemblerInsn "mov" for 0x400874>, <DisassemblerInsn "mov" for 0x40087c>, <DisassemblerInsn "mov" for 0x400880>, <DisassemblerInsn "add" for 0x400883>, <DisassemblerInsn "mov" for 0x400887>, <DisassemblerInsn "mov" for 0x40088f>, <DisassemblerInsn "mov" for 0x400892>, <DisassemblerInsn "add" for 0x400894>, <DisassemblerInsn "mov" for 0x400897>, <DisassemblerInsn "add" for 0x40089a>, <DisassemblerInsn "mov" for 0x40089e>, <DisassemblerInsn "mov" for 0x4008a6>, <DisassemblerInsn "mov" for 0x4008aa>, <DisassemblerInsn "add" for 0x4008ad>, <DisassemblerInsn "mov" for 0x4008b1>, <DisassemblerInsn "mov" for 0x4008b9>, <DisassemblerInsn "cmp" for 0x4008c0>, <DisassemblerInsn "jl" for 0x4008c3>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019b7>, <DisassemblerInsn "mov" for 0x4019be>, <DisassemblerInsn "mov" for 0x4019c5>, <DisassemblerInsn "mov" for 0x4019cc>, <DisassemblerInsn "xor" for 0x4019cf>, <DisassemblerInsn "sub" for 0x4019d1>, <DisassemblerInsn "shr" for 0x4019d4>, <DisassemblerInsn "mov" for 0x4019d6>, <DisassemblerInsn "add" for 0x4019de>, <DisassemblerInsn "mov" for 0x4019e0>, <DisassemblerInsn "mov" for 0x4019e2>, <DisassemblerInsn "jmp" for 0x4019e9>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008c9>, <DisassemblerInsn "mov" for 0x4008d1>, <DisassemblerInsn "ror" for 0x4008d3>, <DisassemblerInsn "ror" for 0x4008d7>, <DisassemblerInsn "ror" for 0x4008da>, <DisassemblerInsn "shr" for 0x4008de>, <DisassemblerInsn "mov" for 0x4008e1>, <DisassemblerInsn "shl" for 0x4008e8>, <DisassemblerInsn "mov" for 0x4008eb>, <DisassemblerInsn "ror" for 0x4008ee>, <DisassemblerInsn "ror" for 0x4008f2>, <DisassemblerInsn "ror" for 0x4008f5>, <DisassemblerInsn "mov" for 0x4008f9>, <DisassemblerInsn "shr" for 0x400900>, <DisassemblerInsn "or" for 0x400903>, <DisassemblerInsn "cmp" for 0x400905>, <DisassemblerInsn "jne" for 0x40090a>]'}, {'block_Idx': 58, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f96>, <DisassemblerInsn "mov" for 0x400f9e>, <DisassemblerInsn "mov" for 0x400fa6>, <DisassemblerInsn "ror" for 0x400fa9>, <DisassemblerInsn "ror" for 0x400fad>, <DisassemblerInsn "ror" for 0x400fb0>, <DisassemblerInsn "shr" for 0x400fb4>, <DisassemblerInsn "mov" for 0x400fb7>, <DisassemblerInsn "mov" for 0x400fbe>, <DisassemblerInsn "mov" for 0x400fc4>, <DisassemblerInsn "xor" for 0x400fc6>, <DisassemblerInsn "shr" for 0x400fcc>, <DisassemblerInsn "cmp" for 0x400fcf>, <DisassemblerInsn "cmovb" for 0x400fd5>, <DisassemblerInsn "mov" for 0x400fd8>, <DisassemblerInsn "xor" for 0x400fdd>, <DisassemblerInsn "cmp" for 0x400fdf>, <DisassemblerInsn "cmovb" for 0x400fe5>, <DisassemblerInsn "mov" for 0x400fe8>, <DisassemblerInsn "and" for 0x400fea>, <DisassemblerInsn "mov" for 0x400ff0>, <DisassemblerInsn "shr" for 0x400ff2>, <DisassemblerInsn "mov" for 0x400ff5>, <DisassemblerInsn "or" for 0x400ff7>, <DisassemblerInsn "cmp" for 0x400ffa>, <DisassemblerInsn "cmove" for 0x400ffd>, <DisassemblerInsn "cmp" for 0x401000>, <DisassemblerInsn "cmove" for 0x401003>, <DisassemblerInsn "mov" for 0x401006>, <DisassemblerInsn "mov" for 0x401008>, <DisassemblerInsn "mov" for 0x40100a>, <DisassemblerInsn "movzx" for 0x401011>, <DisassemblerInsn "add" for 0x401015>, <DisassemblerInsn "mov" for 0x401017>, <DisassemblerInsn "sub" for 0x40101c>, <DisassemblerInsn "mov" for 0x40101e>, <DisassemblerInsn "cmp" for 0x401025>, <DisassemblerInsn "je" for 0x401028>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007a5>, <DisassemblerInsn "mov" for 0x4007ad>, <DisassemblerInsn "mov" for 0x4007b5>, <DisassemblerInsn "mov" for 0x4007bd>, <DisassemblerInsn "mov" for 0x4007c5>, <DisassemblerInsn "mov" for 0x4007cc>, <DisassemblerInsn "mov" for 0x4007d3>, <DisassemblerInsn "add" for 0x4007d5>, <DisassemblerInsn "mov" for 0x4007d8>, <DisassemblerInsn "add" for 0x4007da>, <DisassemblerInsn "mov" for 0x4007dc>, <DisassemblerInsn "cmp" for 0x4007de>, <DisassemblerInsn "setl" for 0x4007e0>, <DisassemblerInsn "cmp" for 0x4007e4>, <DisassemblerInsn "setne" for 0x4007e7>, <DisassemblerInsn "and" for 0x4007eb>, <DisassemblerInsn "test" for 0x4007ee>, <DisassemblerInsn "mov" for 0x4007f2>, <DisassemblerInsn "mov" for 0x4007f4>, <DisassemblerInsn "mov" for 0x4007fb>, <DisassemblerInsn "mov" for 0x400802>, <DisassemblerInsn "mov" for 0x40080a>, <DisassemblerInsn "jne" for 0x400811>]'}], 'cfg_block_detailed_info': [{'block_Idx': 46, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x578], rax>', '<jmp~~0x400ea2>']}, {'block_Idx': 109, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x500]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014b6>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~rax, qword ptr [rsp + 0x5a0]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rsi, qword ptr [rsp + 0x578]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x548], esi>', '<cmp~~esi, 0x10>', '<setg~~r8b>', '<mov~~byte ptr [rsp + 0x54f], r8b>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x550], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r9d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r9d>', '<mov~~r9d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r9d, r11d>', '<and~~r8b, 1>', '<movzx~~r8d, r8b>', '<mov~~dword ptr [rdi + 0x58], r10d>', '<sub~~r9d, esi>', '<mov~~r10, rdi>', '<mov~~qword ptr [rsp + 0x558], r10>', '<mov~~r10, rdx>', '<add~~r10, 0x48>', '<mov~~qword ptr [rsp + 0x560], r10>', '<mov~~dword ptr [rdx + 0x48], r9d>', '<mov~~r9, rdx>', '<add~~r9, 0x4c>', '<mov~~qword ptr [rsp + 0x568], r9>', '<mov~~dword ptr [rdx + 0x4c], r8d>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x570], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x400f96>']}, {'block_Idx': 93, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x500]>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014b6>']}, {'block_Idx': 30, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x5ac]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~edx, ecx>', '<mov~~dword ptr [rsp + 0x58c], edx>', '<mov~~dword ptr [rsp + 0x590], ecx>', '<mov~~dword ptr [rsp + 0x594], eax>', '<je~~0x400df0>']}, {'block_Idx': 104, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<sub~~eax, 0xe>', '<je~~0x401448>']}, {'block_Idx': 195, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x3cc]>', '<mov~~edx, dword ptr [rsp + 0x3c8]>', '<mov~~eax, dword ptr [rsp + 0x3d4]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x3bc], eax>', '<jmp~~0x401c48>']}, {'block_Idx': 169, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rcx, qword ptr [rsp + 0x488]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x3e0], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x3e8], rax>', '<mov~~rax, qword ptr [rsp + 0x3e8]>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~rdx, qword ptr [rsp + 0x3e0]>', '<mov~~esi, dword ptr [rsp + 0x3f8]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3d8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3e8], rax>', '<jl~~0x401ae0>']}, {'block_Idx': 202, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3c0]>', '<mov~~rdx, qword ptr [rsp + 0x410]>', '<mov~~edi, dword ptr [rsp + 0x3c8]>', '<mov~~esi, dword ptr [rsp + 0x3bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x3a4], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x3a4]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3a8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x40241e>']}, {'block_Idx': 191, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x36c]>', '<mov~~edx, dword ptr [rsp + 0x368]>', '<mov~~eax, dword ptr [rsp + 0x374]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x35c], eax>', '<jmp~~0x401e93>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x628]>', '<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x18], eax>', '<cmp~~eax, ecx>', '<jle~~0x403021>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x620]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400ccd>']}, {'block_Idx': 38, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rsp + 0x5a8]>', '<mov~~edx, dword ptr [rsp + 0x590]>', '<mov~~esi, dword ptr [rsp + 0x594]>', '<mov~~dword ptr [rsp + 0x580], esi>', '<mov~~dword ptr [rsp + 0x584], edx>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x588], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x400e49>']}, {'block_Idx': 75, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x598]>', '<sub~~eax, 6>', '<je~~0x401199>']}, {'block_Idx': 168, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x428]>', '<cmp~~eax, 0>', '<je~~0x4024a8>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x390]>', '<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<mov~~rax, qword ptr [rsp + 0x488]>', '<mov~~esi, eax>', '<call~~0x4039ef>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x648]>', '<mov~~rdi, qword ptr [rsp + 0x640]>', '<mov~~r9, qword ptr [rsp + 0x638]>', '<mov~~r11d, dword ptr [rsp + 0x5f4]>', '<mov~~rdx, qword ptr [rsp + 0x5d0]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x402faa>']}, {'block_Idx': 68, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x518]>', '<mov~~rdi, qword ptr [rsp + 0x650]>', '<mov~~rdx, qword ptr [rsp + 0x520]>', '<mov~~rsi, qword ptr [rsp + 0x630]>', '<mov~~eax, dword ptr [rsp + 0x514]>', '<add~~eax, -1>', '<mov~~r8, rdx>', '<shr~~r8, 3>', '<mov~~esi, dword ptr [rsi + r8]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xf8>', '<add~~rdx, 8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rdi], r8d>', '<add~~esi, -0x80>', '<shl~~rcx, 6>', '<movsxd~~rdi, esi>', '<add~~rcx, rdi>', '<cmp~~esi, 0x40>', '<mov~~qword ptr [rsp + 0x528], rdx>', '<mov~~qword ptr [rsp + 0x530], rcx>', '<mov~~dword ptr [rsp + 0x53c], eax>', '<jb~~0x401067>']}, {'block_Idx': 165, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~edi, dword ptr [rsp + 0x430]>', '<mov~~esi, dword ptr [rsp + 0x42c]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~r9d, dword ptr [rsp + 0x40c]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x3fc], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x408]>', '<mov~~dword ptr [rsp + 0x400], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3fc]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x400]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x404], eax>', '<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~esi, dword ptr [rsp + 0x42c]>', '<mov~~edx, dword ptr [rsp + 0x404]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3f4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3f4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3f8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x40241e>']}, {'block_Idx': 63, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x544]>', '<mov~~edx, dword ptr [rsp + 0x540]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~edx, 0x28>', '<mov~~qword ptr [rsp + 0x528], rdx>', '<mov~~qword ptr [rsp + 0x530], rcx>', '<mov~~dword ptr [rsp + 0x53c], eax>', '<mov~~rcx, qword ptr [rsp + 0x528]>', '<mov~~rdx, qword ptr [rsp + 0x530]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~dword ptr [rsp + 0x514], eax>', '<mov~~qword ptr [rsp + 0x518], rdx>', '<mov~~qword ptr [rsp + 0x520], rcx>', '<cmp~~eax, 1>', '<jle~~0x401116>']}, {'block_Idx': 62, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x558]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3575]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 127, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x650]>', '<mov~~edx, dword ptr [rsp + 0x46c]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x47c]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x450], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 7>', '<mov~~dword ptr [rsi], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~edx, 8>', '<mov~~dword ptr [rsi], edx>', '<mov~~edi, 0x80>', '<shr~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x468]>', '<and~~edi, eax>', '<xor~~eax, eax>', '<mov~~esi, 1>', '<cmp~~edi, 0>', '<mov~~edi, edx>', '<mov~~dword ptr [rsp + 0x454], edi>', '<mov~~dword ptr [rsp + 0x458], esi>', '<mov~~dword ptr [rsp + 0x45c], edx>', '<mov~~dword ptr [rsp + 0x460], ecx>', '<mov~~dword ptr [rsp + 0x464], eax>', '<je~~0x4018a8>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~edx, dword ptr [rsp + 0x624]>', '<mov~~esi, edx>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x598], esi>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x59c], edx>', '<mov~~rdx, rax>', '<add~~rdx, 3>', '<mov~~qword ptr [rsp + 0x5a0], rdx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x5a8], eax>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x5ac], eax>', '<mov~~dword ptr [rcx], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x400d6e>']}, {'block_Idx': 15, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~dword ptr [rdx], 0x20>', '<mov~~rdx, rax>', '<add~~rdx, 0x54>', '<mov~~qword ptr [rsp + 0x5f8], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x20>', '<mov~~qword ptr [rsp + 0x600], rdx>', '<mov~~qword ptr [rsp + 0x608], rax>', '<mov~~eax, 0x20>', '<mov~~qword ptr [rsp + 0x610], rcx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<mov~~rdi, qword ptr [rsp + 0x650]>', '<mov~~rax, qword ptr [rsp + 0x610]>', '<mov~~edx, dword ptr [rsp + 0x61c]>', '<mov~~qword ptr [rsp + 0x5d0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x5e4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x5dc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x5e0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x5e8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x5ec], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x5f4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400ad0>']}, {'block_Idx': 35, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rax]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x610], rcx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<jmp~~0x400968>']}, {'block_Idx': 41, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5ac]>', '<add~~eax, -7>', '<mov~~ecx, 2>', '<mov~~dword ptr [rsp + 0x590], ecx>', '<mov~~dword ptr [rsp + 0x594], eax>', '<jmp~~0x400df0>']}, {'block_Idx': 31, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~ecx, dword ptr [rsp + 0x5ac]>', '<add~~ecx, -8>', '<sub~~ecx, 3>', '<setb~~cl>', '<mov~~eax, dword ptr [rax + 0xc]>', '<mov~~edx, eax>', '<sub~~edx, 2>', '<sete~~dl>', '<and~~cl, dl>', '<test~~cl, 1>', '<mov~~dword ptr [rsp + 0x58c], eax>', '<jne~~0x400da1>']}, {'block_Idx': 91, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<sub~~eax, 0xc>', '<je~~0x4013b1>']}, {'block_Idx': 3, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, qword ptr [rsp + 0x6f8]>', '<mov~~ecx, dword ptr [rsp + 0x6d4]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x6c8]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~esi, dword ptr [rdx]>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x704], esi>', '<mov~~dword ptr [rsp + 0x6b0], edx>', '<mov~~dword ptr [rsp + 0x6b4], ecx>', '<mov~~qword ptr [rsp + 0x6b8], rax>', '<je~~0x400817>']}, {'block_Idx': 71, 'blockInsts': ['<jmp~~0x401133>']}, {'block_Idx': 70, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x528]>', '<mov~~rdx, qword ptr [rsp + 0x530]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~dword ptr [rsp + 0x514], eax>', '<mov~~qword ptr [rsp + 0x518], rdx>', '<mov~~qword ptr [rsp + 0x520], rcx>', '<cmp~~eax, 1>', '<jle~~0x401116>']}, {'block_Idx': 99, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x500]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014b6>']}, {'block_Idx': 184, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x42c]>', '<mov~~edx, dword ptr [rsp + 0x430]>', '<mov~~eax, dword ptr [rsp + 0x390]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x378], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x380], edx>', '<mov~~dword ptr [rsp + 0x384], ecx>', '<mov~~qword ptr [rsp + 0x388], rax>', '<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x380]>', '<mov~~eax, dword ptr [rsp + 0x384]>', '<mov~~rsi, qword ptr [rsp + 0x388]>', '<mov~~qword ptr [rsp + 0x360], rsi>', '<mov~~dword ptr [rsp + 0x368], eax>', '<mov~~dword ptr [rsp + 0x36c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x370], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x374], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401e07>']}, {'block_Idx': 136, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x45c]>', '<mov~~eax, dword ptr [rsp + 0x460]>', '<mov~~edx, dword ptr [rsp + 0x464]>', '<mov~~dword ptr [rsp + 0x428], edx>', '<mov~~dword ptr [rsp + 0x42c], eax>', '<mov~~dword ptr [rsp + 0x430], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x4018f5>']}, {'block_Idx': 137, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x458]>', '<mov~~edi, dword ptr [rsp + 0x454]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~dword ptr [rsp + 0x434], eax>', '<mov~~esi, edi>', '<sar~~esi, 3>', '<mov~~dword ptr [rsp + 0x438], esi>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x43c], ecx>', '<movzx~~esi, sil>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x440], edi>', '<mov~~dword ptr [rdx], edi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x440]>', '<mov~~dword ptr [rsp + 0x444], edx>', '<and~~edx, esi>', '<mov~~dword ptr [rsp + 0x448], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x44c], eax>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x454], ecx>', '<mov~~dword ptr [rsp + 0x458], eax>', '<je~~0x4017df>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x360]>', '<mov~~rdx, qword ptr [rsp + 0x398]>', '<mov~~edi, dword ptr [rsp + 0x368]>', '<mov~~esi, dword ptr [rsp + 0x35c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x344], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x344]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x378]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x348], rax>', '<cmp~~rax, rcx>', '<je~~0x401f1d>']}, {'block_Idx': 96, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<sub~~eax, 0xd>', '<je~~0x401401>']}, {'block_Idx': 129, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~edx, dword ptr [rsp + 0x484]>', '<mov~~dword ptr [rsp + 0x468], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x46c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x470], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x480], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x47c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x480]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401738>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~edi, dword ptr [rsp + 0x3cc]>', '<mov~~esi, dword ptr [rsp + 0x3c8]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~r9d, dword ptr [rsp + 0x3d4]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x3b4], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x3d0]>', '<mov~~dword ptr [rsp + 0x3b8], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3b4]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3b8]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x3bc], eax>', '<mov~~rax, qword ptr [rsp + 0x3c0]>', '<mov~~rdx, qword ptr [rsp + 0x410]>', '<mov~~edi, dword ptr [rsp + 0x3c8]>', '<mov~~esi, dword ptr [rsp + 0x3bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x3a4], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x3a4]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3a8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x40241e>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5ec]>', '<cmp~~eax, 0>', '<je~~0x400b69>']}, {'block_Idx': 200, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x348]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x380], edx>', '<mov~~dword ptr [rsp + 0x384], ecx>', '<mov~~qword ptr [rsp + 0x388], rax>', '<jmp~~0x401d6e>']}, {'block_Idx': 89, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rsp + 0x4e8]>', '<mov~~edx, dword ptr [rsp + 0x4ec]>', '<mov~~dword ptr [rsp + 0x4d0], edx>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500038>']}, {'block_Idx': 76, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rsp + 0x520]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x508], ecx>', '<mov~~dword ptr [rsp + 0x50c], eax>', '<jmp~~0x401268>']}, {'block_Idx': 47, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x588]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x400e7a>']}, {'block_Idx': 203, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3a8]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x418], edx>', '<mov~~dword ptr [rsp + 0x41c], ecx>', '<mov~~qword ptr [rsp + 0x420], rax>', '<jmp~~0x401b23>']}, {'block_Idx': 192, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~edi, dword ptr [rsp + 0x36c]>', '<mov~~esi, dword ptr [rsp + 0x368]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~r9d, dword ptr [rsp + 0x374]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x354], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x370]>', '<mov~~dword ptr [rsp + 0x358], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x354]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x358]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x35c], eax>', '<mov~~rax, qword ptr [rsp + 0x360]>', '<mov~~rdx, qword ptr [rsp + 0x398]>', '<mov~~edi, dword ptr [rsp + 0x368]>', '<mov~~esi, dword ptr [rsp + 0x35c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x344], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x344]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x378]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x348], rax>', '<cmp~~rax, rcx>', '<je~~0x401f1d>']}, {'block_Idx': 43, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x650]>', '<mov~~rax, qword ptr [rsp + 0x610]>', '<mov~~edx, dword ptr [rsp + 0x61c]>', '<mov~~qword ptr [rsp + 0x5d0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x5e4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x5dc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x5e0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x5e8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x5ec], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x5f4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400ad0>']}, {'block_Idx': 82, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rsp + 0x520]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x508], ecx>', '<mov~~dword ptr [rsp + 0x50c], eax>', '<jmp~~0x401268>']}, {'block_Idx': 156, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x42c]>', '<mov~~ecx, dword ptr [rsp + 0x430]>', '<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x408], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x40c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x4019ee>']}, {'block_Idx': 116, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~eax, dword ptr [rsp + 0x490]>', '<add~~eax, 1>', '<mov~~dword ptr [rcx], eax>', '<mov~~dword ptr [rsp + 0x484], eax>', '<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~edx, dword ptr [rsp + 0x484]>', '<mov~~dword ptr [rsp + 0x468], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x46c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x470], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x480], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x47c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x480]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401738>']}, {'block_Idx': 78, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~edx, dword ptr [rsp + 0x508]>', '<mov~~eax, dword ptr [rsp + 0x50c]>', '<mov~~dword ptr [rsp + 0x4fc], eax>', '<mov~~dword ptr [rsp + 0x500], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x504], ecx>', '<cmp~~eax, ecx>', '<jle~~0x4012c5>']}, {'block_Idx': 167, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~esi, dword ptr [rsp + 0x42c]>', '<mov~~edx, dword ptr [rsp + 0x404]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3f4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3f4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3f8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x40241e>']}, {'block_Idx': 189, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x418]>', '<mov~~eax, dword ptr [rsp + 0x41c]>', '<mov~~rsi, qword ptr [rsp + 0x420]>', '<mov~~qword ptr [rsp + 0x3c0], rsi>', '<mov~~dword ptr [rsp + 0x3c8], eax>', '<mov~~dword ptr [rsp + 0x3cc], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x3d0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x3d4], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401bbc>']}, {'block_Idx': 79, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x598]>', '<sub~~eax, 7>', '<je~~0x4011ec>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x380]>', '<mov~~eax, dword ptr [rsp + 0x384]>', '<mov~~rsi, qword ptr [rsp + 0x388]>', '<mov~~qword ptr [rsp + 0x360], rsi>', '<mov~~dword ptr [rsp + 0x368], eax>', '<mov~~dword ptr [rsp + 0x36c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x370], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x374], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401e07>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~esi, dword ptr [rsp + 0x6b0]>', '<mov~~eax, dword ptr [rsp + 0x6b4]>', '<mov~~rdx, qword ptr [rsp + 0x6b8]>', '<mov~~dword ptr [rsp + 0x628], eax>', '<mov~~dword ptr [rsp + 0x62c], esi>', '<mov~~edi, eax>', '<shl~~edi, 3>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x630], rdx>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~edi, esi>', '<xor~~r8d, r8d>', '<cmp~~eax, 0>', '<mov~~esi, eax>', '<cmovl~~esi, r8d>', '<mov~~r8, rcx>', '<add~~r8, 0x28>', '<mov~~qword ptr [rsp + 0x638], r8>', '<mov~~qword ptr [rcx + 0x28], rdx>', '<mov~~r8, rcx>', '<add~~r8, 0x3c>', '<mov~~qword ptr [rsp + 0x640], r8>', '<mov~~dword ptr [rcx + 0x3c], edi>', '<mov~~esi, esi>', '<add~~rdx, rsi>', '<mov~~rsi, rcx>', '<add~~rsi, 0x30>', '<mov~~qword ptr [rsp + 0x648], rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x650], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<cmp~~eax, 0x18>', '<jl~~0x402faa>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x430]>', '<mov~~edx, dword ptr [rsp + 0x42c]>', '<mov~~eax, dword ptr [rsp + 0x40c]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x404], eax>', '<jmp~~0x401a7a>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x620], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x624], eax>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x400bb2>']}, {'block_Idx': 58, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x540], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~ecx, edi>', '<shr~~ecx, 8>', '<mov~~eax, edx>', '<or~~eax, 8>', '<cmp~~esi, 0>', '<cmove~~ecx, edi>', '<cmp~~esi, 0>', '<cmove~~eax, edx>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, qword ptr [rip + 0xff01f]>', '<movzx~~ecx, byte ptr [rcx + rdx]>', '<add~~eax, ecx>', '<mov~~ecx, 7>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsp + 0x544], ecx>', '<cmp~~eax, 6>', '<je~~0x401133>']}, {'block_Idx': 33, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, qword ptr [rsp + 0x680]>', '<mov~~rdi, qword ptr [rsp + 0x6a0]>', '<mov~~rsi, qword ptr [rsp + 0x6f8]>', '<mov~~eax, dword ptr [rsp + 0x68c]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x6b0], esi>', '<mov~~dword ptr [rsp + 0x6b4], edx>', '<mov~~qword ptr [rsp + 0x6b8], rcx>', '<mov~~dword ptr [rsp + 0x694], eax>', '<jne~~0x40308a>']}], 'cfg_edge_info': [(15, 21), (192, 200), (58, 62), (156, 164), (109, 89), (38, 47), (82, 78), (205, 191), (191, 198), (23, 31), (127, 137), (93, 89), (196, 203), (43, 21), (6, 11), (192, 199), (184, 192), (165, 169), (51, 58), (3, 6), (164, 167), (116, 127), (23, 30), (127, 136), (129, 127), (38, 46), (11, 16), (68, 71), (76, 78), (99, 89), (189, 196), (30, 38), (6, 10), (41, 38), (96, 99), (184, 191), (15, 22), (58, 63), (70, 68), (196, 168), (35, 43), (165, 168), (156, 165), (104, 109), (205, 192), (91, 93), (33, 6), (75, 76), (68, 70), (11, 15), (195, 202), (189, 195), (63, 68), (43, 22), (79, 82), (16, 23)]}]}
{'flac_decode_frame': [4196375, 4196553, 4196624, 4196712, 4197581, 4197872, 4198294, 4198554, 4198809, 4198892, 4199345, 4199425, 4199496, 4200248, 4200887, 4200942, 4201349, 4201404, 4201936, 4201991]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_after/Os/flacdec.o---after
The extraction of function: flac_decode_frame
[4196375, 4196553, 4196624, 4196712, 4197581, 4197872, 4198294, 4198554, 4198809, 4198892, 4199345, 4199425, 4199496, 4200248, 4200887, 4200942, 4201349, 4201404, 4201936, 4201991]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 452 nodes and 715 edges in CFGEmulated.
It has 452 nodes and 761 edges in CDG.
It has 17616 nodes and 45615 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4196375, 4196553, 4196624, 4196712, 4197581, 4197872, 4198294, 4198554, 4198809, 4198892, 4199345, 4199425, 4199496, 4200248, 4200887, 4200942, 4201349, 4201404, 4201936, 4201991]
{4203008, 4199425, 4201991, 4197392, 4202513, 4205590, 4196375, 4199959, 4203545, 4195868, 4203550, 4195360, 4206625, 4203562, 4198446, 4197939, 4203575, 4197437, 4198975, 4206148, 4199496, 4197961, 4201544, 4205131, 4206674, 4200019, 4204628, 4197976, 4196953, 4202587, 4203614, 4204129, 4198503, 4199016, 4195946, 4202603, 4200045, 4203117, 4200047, 4200562, 4198010, 4201082, 4197507, 4206730, 4200076, 4195981, 4200078, 4199570, 4202131, 4195474, 4199065, 4198554, 4198045, 4205726, 4198050, 4201637, 4200616, 4200105, 4203688, 4206254, 4205231, 4199601, 4199606, 4201145, 4199104, 4199109, 4202694, 4195529, 4196553, 4197581, 4197072, 4203733, 4202710, 4200663, 4201692, 4199647, 4197088, 4201184, 4202214, 4197100, 4201711, 4200688, 4204272, 4206322, 4200693, 4205815, 4203256, 4197113, 4200704, 4200706, 4203788, 4196624, 4198676, 4200724, 4198678, 4199189, 4200216, 4204824, 4196116, 4205332, 4195612, 4202269, 4201246, 4199712, 4199201, 4201251, 4204836, 4200741, 4202787, 4199724, 4206385, 4198707, 4200243, 4202803, 4197686, 4201783, 4200248, 4197178, 4202299, 4203838, 4196162, 4202308, 4204869, 4199238, 4202310, 4197192, 4198731, 4199758, 4198736, 4205905, 4199250, 4199763, 4197204, 4195670, 4203866, 4198747, 4198749, 4202335, 4196712, 4197225, 4198761, 4198763, 4197740, 4202344, 4197742, 4201838, 4202349, 4205424, 4204394, 4200819, 4206451, 4202866, 4198775, 4198265, 4195707, 4198780, 4205436, 4199296, 4202882, 4201349, 4203911, 4197257, 4199308, 4199310, 4198289, 4198804, 4198294, 4202390, 4198809, 4199322, 4199324, 4203420, 4205469, 4197791, 4197793, 4195747, 4196261, 4206506, 4199340, 4205997, 4202926, 4204461, 4199345, 4197298, 4200887, 4206009, 4201404, 4203454, 4204990, 4197824, 4203459, 4197321, 4203979, 4206542, 4202447, 4201936, 4203471, 4195799, 4206042, 4199901, 4200415, 4204003, 4197349, 4197867, 4198892, 4200942, 4204527, 4197872, 4203507, 4206583, 4204025, 4203516, 4203518}
[427, 53, 39, 134, 179, 147, 241, 282, 318, 40, 195, 382, 328, 152, 198, 57, 220, 357, 234, 103, 355, 99, 142, 233, 165, 250, 148, 7, 93, 32, 202, 348, 181, 235, 262, 171, 65, 226, 248, 244, 115, 68, 255, 391, 12, 26, 203, 237, 114, 204, 205, 0, 106, 381, 214, 221, 175, 218, 135, 425, 158, 197, 368, 173, 311, 55, 207, 231, 201, 191, 243, 23, 129, 393, 247, 54, 239, 110, 34, 11, 14, 92, 13, 215, 108, 61, 228, 42, 151, 72, 212, 182, 211, 88, 257, 208, 245, 50, 38, 1, 185, 196, 227, 43, 356, 157, 194, 47, 36, 267, 120, 58, 210, 89, 164, 424, 340, 33, 81, 69, 251, 291, 238, 170, 219, 125, 358, 16, 327, 223, 392, 45, 96, 242, 184, 174, 107, 86, 229, 19, 400, 209, 200, 256, 341, 137, 180, 154, 27, 186, 216, 52, 56, 28, 22, 169, 178, 49, 230, 168, 25, 18, 46, 73, 87, 342, 15, 140, 116, 172, 372, 371, 76, 236, 160, 369, 176, 10, 67, 124, 166, 21, 445, 102, 159, 4, 222, 44, 313, 100, 258, 118, 41, 90, 9, 98, 105, 380, 59, 188, 206, 130, 199, 252, 35, 303, 144, 17, 261, 51, 29, 217, 145, 146, 113, 80, 193, 240, 177, 2, 224, 112, 190, 64, 82, 119, 5, 163, 75, 167, 8, 232, 370, 225, 156, 139, 6]
The execution time of patched slicing information extraction via angr: 0:04:08.980261
{'flac_decode_frame': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 427, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4039e4>, <DisassemblerInsn "mov" for 0x4039ea>, <DisassemblerInsn "pop" for 0x4039ed>, <DisassemblerInsn "ret" for 0x4039ee>]'}, {'block_Idx': 53, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e49>, <DisassemblerInsn "and" for 0x400e50>, <DisassemblerInsn "cmp" for 0x400e53>, <DisassemblerInsn "je" for 0x400e56>]'}, {'block_Idx': 39, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400742>, <DisassemblerInsn "mov" for 0x40074a>, <DisassemblerInsn "mov" for 0x400752>, <DisassemblerInsn "mov" for 0x400758>, <DisassemblerInsn "xor" for 0x40075a>, <DisassemblerInsn "mov" for 0x40075c>, <DisassemblerInsn "mov" for 0x400763>, <DisassemblerInsn "mov" for 0x40076a>, <DisassemblerInsn "mov" for 0x400771>, <DisassemblerInsn "mov" for 0x400779>, <DisassemblerInsn "mov" for 0x400781>, <DisassemblerInsn "mov" for 0x400788>, <DisassemblerInsn "mov" for 0x40078f>, <DisassemblerInsn "add" for 0x400796>, <DisassemblerInsn "mov" for 0x400798>, <DisassemblerInsn "add" for 0x40079a>, <DisassemblerInsn "movsxd" for 0x40079d>, <DisassemblerInsn "call" for 0x4007a0>]'}, {'block_Idx': 134, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401401>, <DisassemblerInsn "mov" for 0x401408>, <DisassemblerInsn "mov" for 0x401410>, <DisassemblerInsn "sar" for 0x401412>, <DisassemblerInsn "movsxd" for 0x401415>, <DisassemblerInsn "mov" for 0x401418>, <DisassemblerInsn "ror" for 0x40141b>, <DisassemblerInsn "ror" for 0x40141f>, <DisassemblerInsn "ror" for 0x401422>, <DisassemblerInsn "and" for 0x401426>, <DisassemblerInsn "shl" for 0x401429>, <DisassemblerInsn "mov" for 0x40142b>, <DisassemblerInsn "shr" for 0x401432>, <DisassemblerInsn "add" for 0x401435>, <DisassemblerInsn "mov" for 0x401438>, <DisassemblerInsn "mov" for 0x40143f>, <DisassemblerInsn "jmp" for 0x401446>]'}, {'block_Idx': 179, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016a9>, <DisassemblerInsn "mov" for 0x4016b1>, <DisassemblerInsn "mov" for 0x4016b9>, <DisassemblerInsn "mov" for 0x4016c0>, <DisassemblerInsn "mov" for 0x4016c7>, <DisassemblerInsn "mov" for 0x4016c9>, <DisassemblerInsn "mov" for 0x4016d0>, <DisassemblerInsn "mov" for 0x4016d3>, <DisassemblerInsn "mov" for 0x4016db>, <DisassemblerInsn "sar" for 0x4016dd>, <DisassemblerInsn "movsxd" for 0x4016e0>, <DisassemblerInsn "mov" for 0x4016e3>, <DisassemblerInsn "mov" for 0x4016e7>, <DisassemblerInsn "and" for 0x4016e9>, <DisassemblerInsn "movzx" for 0x4016ec>, <DisassemblerInsn "mov" for 0x4016f0>, <DisassemblerInsn "add" for 0x4016f7>, <DisassemblerInsn "mov" for 0x4016fa>, <DisassemblerInsn "mov" for 0x401701>, <DisassemblerInsn "mov" for 0x401703>, <DisassemblerInsn "shr" for 0x401708>, <DisassemblerInsn "mov" for 0x40170a>, <DisassemblerInsn "and" for 0x401711>, <DisassemblerInsn "cmp" for 0x401713>, <DisassemblerInsn "je" for 0x401716>]'}, {'block_Idx': 147, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4013ac>]'}, {'block_Idx': 241, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023fe>, <DisassemblerInsn "mov" for 0x402406>, <DisassemblerInsn "xor" for 0x402409>, <DisassemblerInsn "lea" for 0x40240b>, <DisassemblerInsn "mov" for 0x402412>, <DisassemblerInsn "call" for 0x402414>]'}, {'block_Idx': 282, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x401f5f>, <DisassemblerInsn "jl" for 0x401f62>]'}, {'block_Idx': 318, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f6d>, <DisassemblerInsn "mov" for 0x401f74>, <DisassemblerInsn "mov" for 0x401f7c>, <DisassemblerInsn "add" for 0x401f7e>, <DisassemblerInsn "mov" for 0x401f81>, <DisassemblerInsn "mov" for 0x401f83>, <DisassemblerInsn "mov" for 0x401f86>, <DisassemblerInsn "cmp" for 0x401f8d>, <DisassemblerInsn "je" for 0x401f90>]'}, {'block_Idx': 40, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b89>, <DisassemblerInsn "mov" for 0x400b91>, <DisassemblerInsn "mov" for 0x400b99>, <DisassemblerInsn "mov" for 0x400b9b>, <DisassemblerInsn "mov" for 0x400b9e>, <DisassemblerInsn "mov" for 0x400ba6>, <DisassemblerInsn "jmp" for 0x400bad>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4027ad>, <DisassemblerInsn "mov" for 0x4027b5>, <DisassemblerInsn "mov" for 0x4027bc>, <DisassemblerInsn "mov" for 0x4027c4>, <DisassemblerInsn "mov" for 0x4027cb>, <DisassemblerInsn "mov" for 0x4027ce>, <DisassemblerInsn "add" for 0x4027d1>, <DisassemblerInsn "mov" for 0x4027d5>, <DisassemblerInsn "mov" for 0x4027d8>, <DisassemblerInsn "mov" for 0x4027df>, <DisassemblerInsn "mov" for 0x4027e7>, <DisassemblerInsn "mov" for 0x4027ef>, <DisassemblerInsn "mov" for 0x4027f7>, <DisassemblerInsn "mov" for 0x4027fe>, <DisassemblerInsn "mov" for 0x402806>, <DisassemblerInsn "mov" for 0x40280e>, <DisassemblerInsn "mov" for 0x402816>, <DisassemblerInsn "mov" for 0x40281e>, <DisassemblerInsn "add" for 0x402825>, <DisassemblerInsn "movsxd" for 0x402829>, <DisassemblerInsn "cmp" for 0x40282c>, <DisassemblerInsn "mov" for 0x40282f>, <DisassemblerInsn "mov" for 0x402836>, <DisassemblerInsn "mov" for 0x40283e>, <DisassemblerInsn "mov" for 0x402846>, <DisassemblerInsn "jl" for 0x40284e>]'}, {'block_Idx': 382, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40206b>, <DisassemblerInsn "mov" for 0x402072>, <DisassemblerInsn "mov" for 0x402079>, <DisassemblerInsn "mov" for 0x402080>, <DisassemblerInsn "mov" for 0x402087>, <DisassemblerInsn "mov" for 0x40208e>, <DisassemblerInsn "mov" for 0x402090>, <DisassemblerInsn "mov" for 0x402098>, <DisassemblerInsn "mov" for 0x40209d>, <DisassemblerInsn "mov" for 0x4020a5>, <DisassemblerInsn "mov" for 0x4020ac>, <DisassemblerInsn "mov" for 0x4020b3>, <DisassemblerInsn "mov" for 0x4020ba>, <DisassemblerInsn "jmp" for 0x4020c1>]'}, {'block_Idx': 328, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f96>, <DisassemblerInsn "mov" for 0x401f9d>, <DisassemblerInsn "mov" for 0x401fa4>, <DisassemblerInsn "mov" for 0x401fac>, <DisassemblerInsn "add" for 0x401fae>, <DisassemblerInsn "mov" for 0x401fb1>, <DisassemblerInsn "mov" for 0x401fb3>, <DisassemblerInsn "mov" for 0x401fb6>, <DisassemblerInsn "sub" for 0x401fbd>, <DisassemblerInsn "mov" for 0x401fbf>, <DisassemblerInsn "cmp" for 0x401fc6>, <DisassemblerInsn "jbe" for 0x401fc9>]'}, {'block_Idx': 152, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015dd>, <DisassemblerInsn "mov" for 0x4015e4>, <DisassemblerInsn "mov" for 0x4015eb>, <DisassemblerInsn "add" for 0x4015f3>, <DisassemblerInsn "mov" for 0x4015f7>, <DisassemblerInsn "xor" for 0x4015ff>, <DisassemblerInsn "mov" for 0x401601>, <DisassemblerInsn "mov" for 0x401608>, <DisassemblerInsn "mov" for 0x40160f>, <DisassemblerInsn "mov" for 0x401617>, <DisassemblerInsn "mov" for 0x40161f>, <DisassemblerInsn "mov" for 0x401626>, <DisassemblerInsn "mov" for 0x40162d>, <DisassemblerInsn "mov" for 0x401635>, <DisassemblerInsn "mov" for 0x40163d>, <DisassemblerInsn "mov" for 0x401644>, <DisassemblerInsn "mov" for 0x40164b>, <DisassemblerInsn "cmp" for 0x40164d>, <DisassemblerInsn "jne" for 0x401651>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402e44>, <DisassemblerInsn "mov" for 0x402e4c>, <DisassemblerInsn "mov" for 0x402e54>, <DisassemblerInsn "mov" for 0x402e59>, <DisassemblerInsn "mov" for 0x402e5e>, <DisassemblerInsn "mov" for 0x402e63>, <DisassemblerInsn "mov" for 0x402e68>, <DisassemblerInsn "mov" for 0x402e6d>, <DisassemblerInsn "mov" for 0x402e75>, <DisassemblerInsn "mov" for 0x402e7a>, <DisassemblerInsn "mov" for 0x402e7f>, <DisassemblerInsn "mov" for 0x402e84>, <DisassemblerInsn "mov" for 0x402e89>, <DisassemblerInsn "mov" for 0x402e8c>, <DisassemblerInsn "mov" for 0x402e8f>, <DisassemblerInsn "mov" for 0x402e91>, <DisassemblerInsn "sar" for 0x402e93>, <DisassemblerInsn "sub" for 0x402e95>, <DisassemblerInsn "mov" for 0x402e97>, <DisassemblerInsn "add" for 0x402e9b>, <DisassemblerInsn "mov" for 0x402e9d>, <DisassemblerInsn "mov" for 0x402e9f>, <DisassemblerInsn "shl" for 0x402ea3>, <DisassemblerInsn "mov" for 0x402ea5>, <DisassemblerInsn "cmp" for 0x402ea9>, <DisassemblerInsn "je" for 0x402eac>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ea2>, <DisassemblerInsn "mov" for 0x400eaa>, <DisassemblerInsn "mov" for 0x400eb2>, <DisassemblerInsn "mov" for 0x400eba>, <DisassemblerInsn "mov" for 0x400ec2>, <DisassemblerInsn "mov" for 0x400ec4>, <DisassemblerInsn "cmp" for 0x400ecb>, <DisassemblerInsn "setg" for 0x400ece>, <DisassemblerInsn "mov" for 0x400ed2>, <DisassemblerInsn "mov" for 0x400eda>, <DisassemblerInsn "add" for 0x400edd>, <DisassemblerInsn "mov" for 0x400ee1>, <DisassemblerInsn "mov" for 0x400ee9>, <DisassemblerInsn "mov" for 0x400eed>, <DisassemblerInsn "mov" for 0x400ef3>, <DisassemblerInsn "cmp" for 0x400ef9>, <DisassemblerInsn "cmovg" for 0x400efc>, <DisassemblerInsn "mov" for 0x400f00>, <DisassemblerInsn "mov" for 0x400f06>, <DisassemblerInsn "cmp" for 0x400f0c>, <DisassemblerInsn "cmovg" for 0x400f0f>, <DisassemblerInsn "and" for 0x400f13>, <DisassemblerInsn "movzx" for 0x400f17>, <DisassemblerInsn "mov" for 0x400f1b>, <DisassemblerInsn "sub" for 0x400f1f>, <DisassemblerInsn "mov" for 0x400f22>, <DisassemblerInsn "mov" for 0x400f25>, <DisassemblerInsn "mov" for 0x400f2d>, <DisassemblerInsn "add" for 0x400f30>, <DisassemblerInsn "mov" for 0x400f34>, <DisassemblerInsn "mov" for 0x400f3c>, <DisassemblerInsn "mov" for 0x400f40>, <DisassemblerInsn "add" for 0x400f43>, <DisassemblerInsn "mov" for 0x400f47>, <DisassemblerInsn "mov" for 0x400f4f>, <DisassemblerInsn "mov" for 0x400f53>, <DisassemblerInsn "mov" for 0x400f59>, <DisassemblerInsn "add" for 0x400f5c>, <DisassemblerInsn "mov" for 0x400f60>, <DisassemblerInsn "mov" for 0x400f68>, <DisassemblerInsn "mov" for 0x400f6b>, <DisassemblerInsn "mov" for 0x400f6d>, <DisassemblerInsn "and" for 0x400f73>, <DisassemblerInsn "cmp" for 0x400f75>, <DisassemblerInsn "je" for 0x400f77>]'}, {'block_Idx': 220, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019ee>, <DisassemblerInsn "mov" for 0x4019f6>, <DisassemblerInsn "mov" for 0x4019fd>, <DisassemblerInsn "mov" for 0x401a04>, <DisassemblerInsn "mov" for 0x401a0c>, <DisassemblerInsn "shr" for 0x401a14>, <DisassemblerInsn "mov" for 0x401a18>, <DisassemblerInsn "add" for 0x401a1b>, <DisassemblerInsn "mov" for 0x401a1f>, <DisassemblerInsn "add" for 0x401a21>, <DisassemblerInsn "mov" for 0x401a24>, <DisassemblerInsn "shl" for 0x401a2b>, <DisassemblerInsn "mov" for 0x401a2e>, <DisassemblerInsn "mov" for 0x401a35>, <DisassemblerInsn "sar" for 0x401a3d>, <DisassemblerInsn "movsxd" for 0x401a41>, <DisassemblerInsn "mov" for 0x401a44>, <DisassemblerInsn "ror" for 0x401a48>, <DisassemblerInsn "ror" for 0x401a4c>, <DisassemblerInsn "ror" for 0x401a4f>, <DisassemblerInsn "shl" for 0x401a53>, <DisassemblerInsn "mov" for 0x401a55>, <DisassemblerInsn "mov" for 0x401a5c>, <DisassemblerInsn "xor" for 0x401a5f>, <DisassemblerInsn "sub" for 0x401a61>, <DisassemblerInsn "shr" for 0x401a64>, <DisassemblerInsn "mov" for 0x401a66>, <DisassemblerInsn "add" for 0x401a6d>, <DisassemblerInsn "mov" for 0x401a6f>, <DisassemblerInsn "or" for 0x401a71>, <DisassemblerInsn "mov" for 0x401a73>, <DisassemblerInsn "mov" for 0x401a7a>, <DisassemblerInsn "mov" for 0x401a82>, <DisassemblerInsn "mov" for 0x401a89>, <DisassemblerInsn "mov" for 0x401a90>, <DisassemblerInsn "sub" for 0x401a95>, <DisassemblerInsn "mov" for 0x401a97>, <DisassemblerInsn "shl" for 0x401a9e>, <DisassemblerInsn "mov" for 0x401aa0>, <DisassemblerInsn "sar" for 0x401aa7>, <DisassemblerInsn "mov" for 0x401aa9>, <DisassemblerInsn "cmp" for 0x401ab0>, <DisassemblerInsn "jle" for 0x401ab3>]'}, {'block_Idx': 357, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4020c6>, <DisassemblerInsn "cmp" for 0x4020cd>, <DisassemblerInsn "jle" for 0x4020d0>]'}, {'block_Idx': 234, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023c3>, <DisassemblerInsn "cmp" for 0x4023ca>, <DisassemblerInsn "jle" for 0x4023cd>]'}, {'block_Idx': 103, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40116b>, <DisassemblerInsn "sub" for 0x401172>, <DisassemblerInsn "je" for 0x401175>]'}, {'block_Idx': 355, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4021fe>]'}, {'block_Idx': 99, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401199>, <DisassemblerInsn "mov" for 0x4011a1>, <DisassemblerInsn "mov" for 0x4011a8>, <DisassemblerInsn "mov" for 0x4011b0>, <DisassemblerInsn "shr" for 0x4011b8>, <DisassemblerInsn "and" for 0x4011bc>, <DisassemblerInsn "mov" for 0x4011c3>, <DisassemblerInsn "ror" for 0x4011c6>, <DisassemblerInsn "ror" for 0x4011ca>, <DisassemblerInsn "ror" for 0x4011cd>, <DisassemblerInsn "shr" for 0x4011d1>, <DisassemblerInsn "add" for 0x4011d4>, <DisassemblerInsn "mov" for 0x4011d7>, <DisassemblerInsn "add" for 0x4011d9>, <DisassemblerInsn "mov" for 0x4011dc>, <DisassemblerInsn "mov" for 0x4011e3>, <DisassemblerInsn "jmp" for 0x4011ea>]'}, {'block_Idx': 142, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b3a>, <DisassemblerInsn "mov" for 0x400b42>, <DisassemblerInsn "mov" for 0x400b48>, <DisassemblerInsn "cmp" for 0x400b4f>, <DisassemblerInsn "jle" for 0x400b52>]'}, {'block_Idx': 233, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401cef>, <DisassemblerInsn "mov" for 0x401cf7>, <DisassemblerInsn "mov" for 0x401cff>, <DisassemblerInsn "mov" for 0x401d07>, <DisassemblerInsn "and" for 0x401d0e>, <DisassemblerInsn "mov" for 0x401d11>, <DisassemblerInsn "mov" for 0x401d18>, <DisassemblerInsn "mov" for 0x401d1a>, <DisassemblerInsn "mov" for 0x401d21>, <DisassemblerInsn "mov" for 0x401d26>, <DisassemblerInsn "cmp" for 0x401d2e>, <DisassemblerInsn "je" for 0x401d31>]'}, {'block_Idx': 165, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b70>, <DisassemblerInsn "cmp" for 0x402b77>, <DisassemblerInsn "jne" for 0x402b7a>]'}, {'block_Idx': 250, 'blockInsts': '[<DisassemblerInsn "push" for 0x40323c>, <DisassemblerInsn "mov" for 0x40323d>, <DisassemblerInsn "sub" for 0x403240>, <DisassemblerInsn "mov" for 0x403247>, <DisassemblerInsn "mov" for 0x40324a>, <DisassemblerInsn "mov" for 0x40324d>, <DisassemblerInsn "mov" for 0x403251>, <DisassemblerInsn "mov" for 0x403253>, <DisassemblerInsn "lea" for 0x403257>, <DisassemblerInsn "and" for 0x40325f>, <DisassemblerInsn "mov" for 0x403263>, <DisassemblerInsn "sub" for 0x403266>, <DisassemblerInsn "mov" for 0x403269>, <DisassemblerInsn "mov" for 0x40326d>, <DisassemblerInsn "movsxd" for 0x403270>, <DisassemblerInsn "mov" for 0x403273>, <DisassemblerInsn "mov" for 0x403278>, <DisassemblerInsn "cmp" for 0x40327c>, <DisassemblerInsn "setg" for 0x40327f>, <DisassemblerInsn "mov" for 0x403282>, <DisassemblerInsn "test" for 0x403285>, <DisassemblerInsn "jne" for 0x403287>]'}, {'block_Idx': 148, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403228>, <DisassemblerInsn "mov" for 0x40322b>, <DisassemblerInsn "mov" for 0x403230>, <DisassemblerInsn "add" for 0x403237>, <DisassemblerInsn "ret" for 0x40323b>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40308a>, <DisassemblerInsn "add" for 0x403091>, <DisassemblerInsn "ret" for 0x403098>]'}, {'block_Idx': 93, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40115b>]'}, {'block_Idx': 32, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ff7>, <DisassemblerInsn "mov" for 0x402fff>, <DisassemblerInsn "mov" for 0x403009>, <DisassemblerInsn "mov" for 0x403013>, <DisassemblerInsn "mov" for 0x403018>, <DisassemblerInsn "jmp" for 0x40301f>]'}, {'block_Idx': 202, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401733>]'}, {'block_Idx': 348, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4043c2>, <DisassemblerInsn "add" for 0x4043c9>, <DisassemblerInsn "ret" for 0x4043d0>]'}, {'block_Idx': 181, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401718>, <DisassemblerInsn "mov" for 0x401720>, <DisassemblerInsn "xor" for 0x401723>, <DisassemblerInsn "lea" for 0x401725>, <DisassemblerInsn "mov" for 0x40172c>, <DisassemblerInsn "call" for 0x40172e>]'}, {'block_Idx': 235, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024d5>, <DisassemblerInsn "mov" for 0x4024dd>, <DisassemblerInsn "mov" for 0x4024e5>, <DisassemblerInsn "mov" for 0x4024ed>, <DisassemblerInsn "mov" for 0x4024ef>, <DisassemblerInsn "mov" for 0x4024f1>, <DisassemblerInsn "mov" for 0x4024f8>, <DisassemblerInsn "mov" for 0x4024ff>, <DisassemblerInsn "jmp" for 0x402507>]'}, {'block_Idx': 262, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ca5>, <DisassemblerInsn "mov" for 0x401cad>, <DisassemblerInsn "mov" for 0x401cb5>, <DisassemblerInsn "mov" for 0x401cbd>, <DisassemblerInsn "mov" for 0x401cbf>, <DisassemblerInsn "mov" for 0x401cc1>, <DisassemblerInsn "mov" for 0x401cc8>, <DisassemblerInsn "mov" for 0x401ccf>, <DisassemblerInsn "jmp" for 0x401cd7>]'}, {'block_Idx': 171, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4014b1>]'}, {'block_Idx': 65, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f79>, <DisassemblerInsn "xor" for 0x400f81>, <DisassemblerInsn "lea" for 0x400f83>, <DisassemblerInsn "mov" for 0x400f8a>, <DisassemblerInsn "call" for 0x400f8c>]'}, {'block_Idx': 226, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401912>]'}, {'block_Idx': 248, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e07>, <DisassemblerInsn "mov" for 0x401e0f>, <DisassemblerInsn "mov" for 0x401e16>, <DisassemblerInsn "mov" for 0x401e1d>, <DisassemblerInsn "mov" for 0x401e25>, <DisassemblerInsn "shr" for 0x401e2d>, <DisassemblerInsn "mov" for 0x401e31>, <DisassemblerInsn "add" for 0x401e34>, <DisassemblerInsn "mov" for 0x401e38>, <DisassemblerInsn "add" for 0x401e3a>, <DisassemblerInsn "mov" for 0x401e3d>, <DisassemblerInsn "shl" for 0x401e44>, <DisassemblerInsn "mov" for 0x401e47>, <DisassemblerInsn "mov" for 0x401e4e>, <DisassemblerInsn "sar" for 0x401e56>, <DisassemblerInsn "movsxd" for 0x401e5a>, <DisassemblerInsn "mov" for 0x401e5d>, <DisassemblerInsn "ror" for 0x401e61>, <DisassemblerInsn "ror" for 0x401e65>, <DisassemblerInsn "ror" for 0x401e68>, <DisassemblerInsn "shl" for 0x401e6c>, <DisassemblerInsn "mov" for 0x401e6e>, <DisassemblerInsn "mov" for 0x401e75>, <DisassemblerInsn "xor" for 0x401e78>, <DisassemblerInsn "sub" for 0x401e7a>, <DisassemblerInsn "shr" for 0x401e7d>, <DisassemblerInsn "mov" for 0x401e7f>, <DisassemblerInsn "add" for 0x401e86>, <DisassemblerInsn "mov" for 0x401e88>, <DisassemblerInsn "or" for 0x401e8a>, <DisassemblerInsn "mov" for 0x401e8c>, <DisassemblerInsn "mov" for 0x401e93>, <DisassemblerInsn "mov" for 0x401e9b>, <DisassemblerInsn "mov" for 0x401ea3>, <DisassemblerInsn "mov" for 0x401eaa>, <DisassemblerInsn "mov" for 0x401eb1>, <DisassemblerInsn "sub" for 0x401eb6>, <DisassemblerInsn "mov" for 0x401eb8>, <DisassemblerInsn "shl" for 0x401ebf>, <DisassemblerInsn "mov" for 0x401ec1>, <DisassemblerInsn "sar" for 0x401ec8>, <DisassemblerInsn "mov" for 0x401eca>, <DisassemblerInsn "mov" for 0x401ed2>, <DisassemblerInsn "add" for 0x401ed5>, <DisassemblerInsn "mov" for 0x401ed9>, <DisassemblerInsn "cmp" for 0x401ee1>, <DisassemblerInsn "je" for 0x401ee4>]'}, {'block_Idx': 244, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40245e>, <DisassemblerInsn "mov" for 0x402466>, <DisassemblerInsn "mov" for 0x40246e>, <DisassemblerInsn "mov" for 0x402475>, <DisassemblerInsn "shl" for 0x402478>, <DisassemblerInsn "mov" for 0x40247a>, <DisassemblerInsn "mov" for 0x402482>, <DisassemblerInsn "mov" for 0x402489>, <DisassemblerInsn "add" for 0x40248c>, <DisassemblerInsn "mov" for 0x402490>, <DisassemblerInsn "movsxd" for 0x402498>, <DisassemblerInsn "cmp" for 0x40249b>, <DisassemblerInsn "mov" for 0x40249e>, <DisassemblerInsn "jl" for 0x4024a6>]'}, {'block_Idx': 115, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401346>, <DisassemblerInsn "cmp" for 0x40134d>, <DisassemblerInsn "jge" for 0x401350>]'}, {'block_Idx': 68, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c3d>, <DisassemblerInsn "mov" for 0x400c44>, <DisassemblerInsn "mov" for 0x400c4c>, <DisassemblerInsn "mov" for 0x400c53>, <DisassemblerInsn "sar" for 0x400c5a>, <DisassemblerInsn "movsxd" for 0x400c5d>, <DisassemblerInsn "mov" for 0x400c60>, <DisassemblerInsn "ror" for 0x400c63>, <DisassemblerInsn "ror" for 0x400c67>, <DisassemblerInsn "ror" for 0x400c6a>, <DisassemblerInsn "shl" for 0x400c6e>, <DisassemblerInsn "shr" for 0x400c70>, <DisassemblerInsn "and" for 0x400c73>, <DisassemblerInsn "cmp" for 0x400c78>, <DisassemblerInsn "je" for 0x400c7d>]'}, {'block_Idx': 255, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e93>, <DisassemblerInsn "mov" for 0x401e9b>, <DisassemblerInsn "mov" for 0x401ea3>, <DisassemblerInsn "mov" for 0x401eaa>, <DisassemblerInsn "mov" for 0x401eb1>, <DisassemblerInsn "sub" for 0x401eb6>, <DisassemblerInsn "mov" for 0x401eb8>, <DisassemblerInsn "shl" for 0x401ebf>, <DisassemblerInsn "mov" for 0x401ec1>, <DisassemblerInsn "sar" for 0x401ec8>, <DisassemblerInsn "mov" for 0x401eca>, <DisassemblerInsn "mov" for 0x401ed2>, <DisassemblerInsn "add" for 0x401ed5>, <DisassemblerInsn "mov" for 0x401ed9>, <DisassemblerInsn "cmp" for 0x401ee1>, <DisassemblerInsn "je" for 0x401ee4>]'}, {'block_Idx': 391, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4022f3>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402faa>, <DisassemblerInsn "mov" for 0x402fb1>, <DisassemblerInsn "mov" for 0x402fb9>, <DisassemblerInsn "add" for 0x402fbb>, <DisassemblerInsn "mov" for 0x402fbe>, <DisassemblerInsn "cdq" for 0x402fc3>, <DisassemblerInsn "idiv" for 0x402fc4>, <DisassemblerInsn "mov" for 0x402fc6>, <DisassemblerInsn "cmp" for 0x402fca>, <DisassemblerInsn "jle" for 0x402fcc>]'}, {'block_Idx': 26, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a59>, <DisassemblerInsn "mov" for 0x400a61>, <DisassemblerInsn "mov" for 0x400a69>, <DisassemblerInsn "mov" for 0x400a71>, <DisassemblerInsn "mov" for 0x400a79>, <DisassemblerInsn "mov" for 0x400a81>, <DisassemblerInsn "mov" for 0x400a89>, <DisassemblerInsn "add" for 0x400a8c>, <DisassemblerInsn "sar" for 0x400a8f>, <DisassemblerInsn "xor" for 0x400a92>, <DisassemblerInsn "cmp" for 0x400a95>, <DisassemblerInsn "cmovl" for 0x400a99>, <DisassemblerInsn "xor" for 0x400a9d>, <DisassemblerInsn "cmp" for 0x400aa0>, <DisassemblerInsn "mov" for 0x400aa4>, <DisassemblerInsn "cmovl" for 0x400aa7>, <DisassemblerInsn "xor" for 0x400aab>, <DisassemblerInsn "cmp" for 0x400aae>, <DisassemblerInsn "cmovl" for 0x400ab2>, <DisassemblerInsn "mov" for 0x400ab6>, <DisassemblerInsn "mov" for 0x400ab9>, <DisassemblerInsn "movsxd" for 0x400abc>, <DisassemblerInsn "add" for 0x400abf>, <DisassemblerInsn "mov" for 0x400ac2>, <DisassemblerInsn "mov" for 0x400ac5>, <DisassemblerInsn "jmp" for 0x400acb>]'}, {'block_Idx': 203, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402aaf>, <DisassemblerInsn "mov" for 0x402ab7>, <DisassemblerInsn "mov" for 0x402abe>, <DisassemblerInsn "mov" for 0x402ac6>, <DisassemblerInsn "mov" for 0x402acd>, <DisassemblerInsn "mov" for 0x402ad5>, <DisassemblerInsn "mov" for 0x402adc>, <DisassemblerInsn "mov" for 0x402ae4>, <DisassemblerInsn "sub" for 0x402ae8>, <DisassemblerInsn "shl" for 0x402aeb>, <DisassemblerInsn "mov" for 0x402aed>, <DisassemblerInsn "mov" for 0x402aef>, <DisassemblerInsn "mov" for 0x402af2>, <DisassemblerInsn "add" for 0x402af5>, <DisassemblerInsn "mov" for 0x402af9>, <DisassemblerInsn "mov" for 0x402afd>, <DisassemblerInsn "mov" for 0x402b04>, <DisassemblerInsn "mov" for 0x402b0c>, <DisassemblerInsn "mov" for 0x402b14>, <DisassemblerInsn "mov" for 0x402b1c>, <DisassemblerInsn "mov" for 0x402b23>, <DisassemblerInsn "mov" for 0x402b2b>, <DisassemblerInsn "add" for 0x402b33>, <DisassemblerInsn "movsxd" for 0x402b37>, <DisassemblerInsn "cmp" for 0x402b3a>, <DisassemblerInsn "mov" for 0x402b3d>, <DisassemblerInsn "mov" for 0x402b3f>, <DisassemblerInsn "mov" for 0x402b46>, <DisassemblerInsn "mov" for 0x402b4e>, <DisassemblerInsn "mov" for 0x402b56>, <DisassemblerInsn "mov" for 0x402b5e>, <DisassemblerInsn "jl" for 0x402b65>]'}, {'block_Idx': 237, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402437>, <DisassemblerInsn "mov" for 0x40243f>, <DisassemblerInsn "mov" for 0x402447>, <DisassemblerInsn "mov" for 0x40244c>, <DisassemblerInsn "xor" for 0x402454>, <DisassemblerInsn "mov" for 0x402456>, <DisassemblerInsn "mov" for 0x40245e>, <DisassemblerInsn "mov" for 0x402466>, <DisassemblerInsn "mov" for 0x40246e>, <DisassemblerInsn "mov" for 0x402475>, <DisassemblerInsn "shl" for 0x402478>, <DisassemblerInsn "mov" for 0x40247a>, <DisassemblerInsn "mov" for 0x402482>, <DisassemblerInsn "mov" for 0x402489>, <DisassemblerInsn "add" for 0x40248c>, <DisassemblerInsn "mov" for 0x402490>, <DisassemblerInsn "movsxd" for 0x402498>, <DisassemblerInsn "cmp" for 0x40249b>, <DisassemblerInsn "mov" for 0x40249e>, <DisassemblerInsn "jl" for 0x4024a6>]'}, {'block_Idx': 114, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401321>, <DisassemblerInsn "mov" for 0x401328>, <DisassemblerInsn "mov" for 0x401330>, <DisassemblerInsn "mov" for 0x401333>, <DisassemblerInsn "mov" for 0x40133a>, <DisassemblerInsn "jmp" for 0x401341>]'}, {'block_Idx': 204, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402a4b>, <DisassemblerInsn "mov" for 0x402a53>, <DisassemblerInsn "mov" for 0x402a5b>, <DisassemblerInsn "mov" for 0x402a63>, <DisassemblerInsn "mov" for 0x402a6a>, <DisassemblerInsn "mov" for 0x402a71>, <DisassemblerInsn "mov" for 0x402a79>, <DisassemblerInsn "sub" for 0x402a7c>, <DisassemblerInsn "mov" for 0x402a7e>, <DisassemblerInsn "shl" for 0x402a80>, <DisassemblerInsn "mov" for 0x402a82>, <DisassemblerInsn "mov" for 0x402a8a>, <DisassemblerInsn "add" for 0x402a8d>, <DisassemblerInsn "mov" for 0x402a91>, <DisassemblerInsn "mov" for 0x402a94>, <DisassemblerInsn "mov" for 0x402a96>, <DisassemblerInsn "mov" for 0x402a9d>, <DisassemblerInsn "mov" for 0x402aa5>, <DisassemblerInsn "jmp" for 0x402aad>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402854>, <DisassemblerInsn "mov" for 0x40285c>, <DisassemblerInsn "mov" for 0x402864>, <DisassemblerInsn "mov" for 0x40286b>, <DisassemblerInsn "mov" for 0x402873>, <DisassemblerInsn "mov" for 0x402875>, <DisassemblerInsn "mov" for 0x40287c>, <DisassemblerInsn "mov" for 0x40287e>, <DisassemblerInsn "mov" for 0x402885>, <DisassemblerInsn "mov" for 0x40288c>, <DisassemblerInsn "mov" for 0x402894>, <DisassemblerInsn "mov" for 0x40289c>, <DisassemblerInsn "mov" for 0x4028a4>, <DisassemblerInsn "mov" for 0x4028ab>, <DisassemblerInsn "mov" for 0x4028b3>, <DisassemblerInsn "mov" for 0x4028ba>, <DisassemblerInsn "mov" for 0x4028c2>, <DisassemblerInsn "add" for 0x4028ca>, <DisassemblerInsn "movsxd" for 0x4028ce>, <DisassemblerInsn "cmp" for 0x4028d1>, <DisassemblerInsn "mov" for 0x4028d4>, <DisassemblerInsn "mov" for 0x4028d7>, <DisassemblerInsn "mov" for 0x4028df>, <DisassemblerInsn "mov" for 0x4028e7>, <DisassemblerInsn "mov" for 0x4028ee>, <DisassemblerInsn "mov" for 0x4028f6>, <DisassemblerInsn "mov" for 0x4028fe>, <DisassemblerInsn "mov" for 0x402906>, <DisassemblerInsn "jl" for 0x40290d>]'}, {'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "sub" for 0x400420>, <DisassemblerInsn "mov" for 0x400427>, <DisassemblerInsn "mov" for 0x40042f>, <DisassemblerInsn "mov" for 0x400437>, <DisassemblerInsn "mov" for 0x40043f>, <DisassemblerInsn "mov" for 0x400446>, <DisassemblerInsn "mov" for 0x40044e>, <DisassemblerInsn "mov" for 0x400451>, <DisassemblerInsn "mov" for 0x400459>, <DisassemblerInsn "mov" for 0x400461>, <DisassemblerInsn "mov" for 0x400463>, <DisassemblerInsn "mov" for 0x40046a>, <DisassemblerInsn "mov" for 0x400470>, <DisassemblerInsn "add" for 0x400473>, <DisassemblerInsn "mov" for 0x400477>, <DisassemblerInsn "mov" for 0x40047f>, <DisassemblerInsn "cmp" for 0x400482>, <DisassemblerInsn "mov" for 0x400485>, <DisassemblerInsn "jne" for 0x40048c>]'}, {'block_Idx': 106, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401299>, <DisassemblerInsn "mov" for 0x4012a1>, <DisassemblerInsn "mov" for 0x4012a8>, <DisassemblerInsn "xor" for 0x4012b0>, <DisassemblerInsn "lea" for 0x4012b2>, <DisassemblerInsn "mov" for 0x4012b9>, <DisassemblerInsn "call" for 0x4012bb>]'}, {'block_Idx': 381, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40226d>, <DisassemblerInsn "mov" for 0x402275>, <DisassemblerInsn "mov" for 0x40227c>, <DisassemblerInsn "mov" for 0x402283>, <DisassemblerInsn "mov" for 0x40228b>, <DisassemblerInsn "mov" for 0x402293>, <DisassemblerInsn "add" for 0x40229b>, <DisassemblerInsn "mov" for 0x40229f>, <DisassemblerInsn "mov" for 0x4022a6>, <DisassemblerInsn "add" for 0x4022a8>, <DisassemblerInsn "mov" for 0x4022aa>, <DisassemblerInsn "mov" for 0x4022b1>, <DisassemblerInsn "add" for 0x4022b3>, <DisassemblerInsn "mov" for 0x4022b6>, <DisassemblerInsn "mov" for 0x4022bd>, <DisassemblerInsn "add" for 0x4022c1>, <DisassemblerInsn "mov" for 0x4022c5>, <DisassemblerInsn "cmp" for 0x4022cd>, <DisassemblerInsn "mov" for 0x4022d0>, <DisassemblerInsn "mov" for 0x4022d8>, <DisassemblerInsn "mov" for 0x4022df>, <DisassemblerInsn "mov" for 0x4022e6>, <DisassemblerInsn "je" for 0x4022ed>]'}, {'block_Idx': 214, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402b6b>]'}, {'block_Idx': 221, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401902>, <DisassemblerInsn "sub" for 0x401909>, <DisassemblerInsn "jne" for 0x40190c>]'}, {'block_Idx': 175, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b7c>, <DisassemblerInsn "mov" for 0x402b84>, <DisassemblerInsn "mov" for 0x402b86>, <DisassemblerInsn "cmp" for 0x402b8d>, <DisassemblerInsn "mov" for 0x402b90>, <DisassemblerInsn "jle" for 0x402b97>]'}, {'block_Idx': 218, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f31>, <DisassemblerInsn "mov" for 0x402f36>, <DisassemblerInsn "mov" for 0x402f3a>, <DisassemblerInsn "mov" for 0x402f3f>, <DisassemblerInsn "add" for 0x402f44>, <DisassemblerInsn "movsxd" for 0x402f48>, <DisassemblerInsn "cmp" for 0x402f4b>, <DisassemblerInsn "mov" for 0x402f4e>, <DisassemblerInsn "mov" for 0x402f50>, <DisassemblerInsn "mov" for 0x402f54>, <DisassemblerInsn "mov" for 0x402f59>, <DisassemblerInsn "mov" for 0x402f5e>, <DisassemblerInsn "mov" for 0x402f66>, <DisassemblerInsn "jl" for 0x402f6d>]'}, {'block_Idx': 135, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40139a>]'}, {'block_Idx': 425, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4023fc>]'}, {'block_Idx': 158, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401653>, <DisassemblerInsn "mov" for 0x40165a>, <DisassemblerInsn "cmp" for 0x401661>, <DisassemblerInsn "mov" for 0x401664>, <DisassemblerInsn "je" for 0x40166b>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c16>, <DisassemblerInsn "mov" for 0x402c1e>, <DisassemblerInsn "mov" for 0x402c26>, <DisassemblerInsn "mov" for 0x402c2e>, <DisassemblerInsn "mov" for 0x402c36>, <DisassemblerInsn "mov" for 0x402c3e>, <DisassemblerInsn "mov" for 0x402c46>, <DisassemblerInsn "mov" for 0x402c4e>, <DisassemblerInsn "mov" for 0x402c56>, <DisassemblerInsn "mov" for 0x402c5e>, <DisassemblerInsn "mov" for 0x402c66>, <DisassemblerInsn "mov" for 0x402c6e>, <DisassemblerInsn "mov" for 0x402c76>, <DisassemblerInsn "mov" for 0x402c79>, <DisassemblerInsn "mov" for 0x402c7c>, <DisassemblerInsn "mov" for 0x402c83>, <DisassemblerInsn "add" for 0x402c85>, <DisassemblerInsn "mov" for 0x402c87>, <DisassemblerInsn "mov" for 0x402c89>, <DisassemblerInsn "shl" for 0x402c90>, <DisassemblerInsn "mov" for 0x402c92>, <DisassemblerInsn "cmp" for 0x402c99>, <DisassemblerInsn "je" for 0x402c9c>]'}, {'block_Idx': 368, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4021ae>, <DisassemblerInsn "mov" for 0x4021b5>, <DisassemblerInsn "mov" for 0x4021bd>, <DisassemblerInsn "mov" for 0x4021c5>, <DisassemblerInsn "add" for 0x4021cd>, <DisassemblerInsn "mov" for 0x4021d0>, <DisassemblerInsn "mov" for 0x4021d7>, <DisassemblerInsn "add" for 0x4021da>, <DisassemblerInsn "mov" for 0x4021de>, <DisassemblerInsn "cmp" for 0x4021e6>, <DisassemblerInsn "mov" for 0x4021e9>, <DisassemblerInsn "mov" for 0x4021f1>, <DisassemblerInsn "je" for 0x4021f8>]'}, {'block_Idx': 173, 'blockInsts': '[<DisassemblerInsn "lea" for 0x40299f>, <DisassemblerInsn "lea" for 0x4029a6>, <DisassemblerInsn "mov" for 0x4029ad>, <DisassemblerInsn "lea" for 0x4029b2>, <DisassemblerInsn "call" for 0x4029b9>]'}, {'block_Idx': 311, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401f44>]'}, {'block_Idx': 55, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c10>, <DisassemblerInsn "mov" for 0x400c17>, <DisassemblerInsn "mov" for 0x400c1f>, <DisassemblerInsn "mov" for 0x400c22>, <DisassemblerInsn "mov" for 0x400c2a>, <DisassemblerInsn "and" for 0x400c2c>, <DisassemblerInsn "mov" for 0x400c2f>, <DisassemblerInsn "mov" for 0x400c36>, <DisassemblerInsn "mov" for 0x400c3d>, <DisassemblerInsn "mov" for 0x400c44>, <DisassemblerInsn "mov" for 0x400c4c>, <DisassemblerInsn "mov" for 0x400c53>, <DisassemblerInsn "sar" for 0x400c5a>, <DisassemblerInsn "movsxd" for 0x400c5d>, <DisassemblerInsn "mov" for 0x400c60>, <DisassemblerInsn "ror" for 0x400c63>, <DisassemblerInsn "ror" for 0x400c67>, <DisassemblerInsn "ror" for 0x400c6a>, <DisassemblerInsn "shl" for 0x400c6e>, <DisassemblerInsn "shr" for 0x400c70>, <DisassemblerInsn "and" for 0x400c73>, <DisassemblerInsn "cmp" for 0x400c78>, <DisassemblerInsn "je" for 0x400c7d>]'}, {'block_Idx': 207, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402cf7>, <DisassemblerInsn "mov" for 0x402cff>, <DisassemblerInsn "mov" for 0x402d06>, <DisassemblerInsn "mov" for 0x402d0e>, <DisassemblerInsn "mov" for 0x402d15>, <DisassemblerInsn "mov" for 0x402d1c>, <DisassemblerInsn "mov" for 0x402d24>, <DisassemblerInsn "shl" for 0x402d28>, <DisassemblerInsn "mov" for 0x402d2a>, <DisassemblerInsn "mov" for 0x402d2c>, <DisassemblerInsn "mov" for 0x402d2f>, <DisassemblerInsn "add" for 0x402d32>, <DisassemblerInsn "mov" for 0x402d36>, <DisassemblerInsn "mov" for 0x402d3a>, <DisassemblerInsn "mov" for 0x402d41>, <DisassemblerInsn "mov" for 0x402d49>, <DisassemblerInsn "mov" for 0x402d51>, <DisassemblerInsn "mov" for 0x402d59>, <DisassemblerInsn "mov" for 0x402d60>, <DisassemblerInsn "mov" for 0x402d68>, <DisassemblerInsn "add" for 0x402d70>, <DisassemblerInsn "movsxd" for 0x402d74>, <DisassemblerInsn "cmp" for 0x402d77>, <DisassemblerInsn "mov" for 0x402d7a>, <DisassemblerInsn "mov" for 0x402d7c>, <DisassemblerInsn "mov" for 0x402d83>, <DisassemblerInsn "mov" for 0x402d8b>, <DisassemblerInsn "mov" for 0x402d93>, <DisassemblerInsn "mov" for 0x402d9b>, <DisassemblerInsn "jl" for 0x402da2>]'}, {'block_Idx': 231, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401b1e>]'}, {'block_Idx': 201, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401872>, <DisassemblerInsn "mov" for 0x401879>, <DisassemblerInsn "mov" for 0x401880>, <DisassemblerInsn "mov" for 0x401888>, <DisassemblerInsn "sub" for 0x40188f>, <DisassemblerInsn "mov" for 0x401891>, <DisassemblerInsn "mov" for 0x401893>, <DisassemblerInsn "mov" for 0x40189a>, <DisassemblerInsn "mov" for 0x4018a1>, <DisassemblerInsn "mov" for 0x4018a8>, <DisassemblerInsn "mov" for 0x4018af>, <DisassemblerInsn "mov" for 0x4018b6>, <DisassemblerInsn "mov" for 0x4018bd>, <DisassemblerInsn "mov" for 0x4018c4>, <DisassemblerInsn "mov" for 0x4018cb>, <DisassemblerInsn "cmp" for 0x4018d2>, <DisassemblerInsn "jle" for 0x4018d5>]'}, {'block_Idx': 191, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017df>, <DisassemblerInsn "mov" for 0x4017e6>, <DisassemblerInsn "mov" for 0x4017ed>, <DisassemblerInsn "mov" for 0x4017f5>, <DisassemblerInsn "mov" for 0x4017fd>, <DisassemblerInsn "mov" for 0x401804>, <DisassemblerInsn "sar" for 0x401806>, <DisassemblerInsn "mov" for 0x401809>, <DisassemblerInsn "movsxd" for 0x401810>, <DisassemblerInsn "mov" for 0x401813>, <DisassemblerInsn "mov" for 0x401817>, <DisassemblerInsn "and" for 0x401819>, <DisassemblerInsn "mov" for 0x40181c>, <DisassemblerInsn "movzx" for 0x401823>, <DisassemblerInsn "add" for 0x401827>, <DisassemblerInsn "mov" for 0x40182a>, <DisassemblerInsn "mov" for 0x401831>, <DisassemblerInsn "mov" for 0x401833>, <DisassemblerInsn "shr" for 0x401838>, <DisassemblerInsn "mov" for 0x40183a>, <DisassemblerInsn "mov" for 0x401841>, <DisassemblerInsn "and" for 0x401848>, <DisassemblerInsn "mov" for 0x40184a>, <DisassemblerInsn "add" for 0x401851>, <DisassemblerInsn "mov" for 0x401854>, <DisassemblerInsn "cmp" for 0x40185b>, <DisassemblerInsn "mov" for 0x40185e>, <DisassemblerInsn "mov" for 0x401865>, <DisassemblerInsn "je" for 0x40186c>]'}, {'block_Idx': 243, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401617>, <DisassemblerInsn "mov" for 0x40161f>, <DisassemblerInsn "mov" for 0x401626>, <DisassemblerInsn "mov" for 0x40162d>, <DisassemblerInsn "mov" for 0x401635>, <DisassemblerInsn "mov" for 0x40163d>, <DisassemblerInsn "mov" for 0x401644>, <DisassemblerInsn "mov" for 0x40164b>, <DisassemblerInsn "cmp" for 0x40164d>, <DisassemblerInsn "jne" for 0x401651>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403052>, <DisassemblerInsn "mov" for 0x403059>, <DisassemblerInsn "mov" for 0x40305e>, <DisassemblerInsn "mov" for 0x403062>, <DisassemblerInsn "mov" for 0x403066>, <DisassemblerInsn "mov" for 0x40306e>, <DisassemblerInsn "add" for 0x403071>, <DisassemblerInsn "mov" for 0x403078>, <DisassemblerInsn "sub" for 0x40307f>, <DisassemblerInsn "mov" for 0x403081>, <DisassemblerInsn "mov" for 0x403083>, <DisassemblerInsn "mov" for 0x40308a>, <DisassemblerInsn "add" for 0x403091>, <DisassemblerInsn "ret" for 0x403098>]'}, {'block_Idx': 129, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014df>, <DisassemblerInsn "mov" for 0x4014e7>, <DisassemblerInsn "mov" for 0x4014ea>, <DisassemblerInsn "mov" for 0x4014f2>, <DisassemblerInsn "mov" for 0x4014f5>, <DisassemblerInsn "mov" for 0x4014fd>, <DisassemblerInsn "mov" for 0x4014ff>, <DisassemblerInsn "mov" for 0x401506>, <DisassemblerInsn "cdq" for 0x40150b>, <DisassemblerInsn "idiv" for 0x40150c>, <DisassemblerInsn "mov" for 0x40150e>, <DisassemblerInsn "movsxd" for 0x401516>, <DisassemblerInsn "xor" for 0x401519>, <DisassemblerInsn "call" for 0x40151b>]'}, {'block_Idx': 393, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4023be>]'}, {'block_Idx': 247, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401dd0>, <DisassemblerInsn "mov" for 0x401dd7>, <DisassemblerInsn "mov" for 0x401dde>, <DisassemblerInsn "mov" for 0x401de5>, <DisassemblerInsn "xor" for 0x401de8>, <DisassemblerInsn "sub" for 0x401dea>, <DisassemblerInsn "shr" for 0x401ded>, <DisassemblerInsn "mov" for 0x401def>, <DisassemblerInsn "add" for 0x401df7>, <DisassemblerInsn "mov" for 0x401df9>, <DisassemblerInsn "mov" for 0x401dfb>, <DisassemblerInsn "jmp" for 0x401e02>]'}, {'block_Idx': 54, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400dc0>, <DisassemblerInsn "mov" for 0x400dc7>, <DisassemblerInsn "mov" for 0x400dcf>, <DisassemblerInsn "mov" for 0x400dd7>, <DisassemblerInsn "xor" for 0x400ddb>, <DisassemblerInsn "lea" for 0x400ddd>, <DisassemblerInsn "mov" for 0x400de4>, <DisassemblerInsn "call" for 0x400de6>]'}, {'block_Idx': 239, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f46>, <DisassemblerInsn "mov" for 0x401f4e>, <DisassemblerInsn "mov" for 0x401f56>, <DisassemblerInsn "xor" for 0x401f58>, <DisassemblerInsn "call" for 0x401f5a>]'}, {'block_Idx': 110, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401315>, <DisassemblerInsn "cmp" for 0x40131c>, <DisassemblerInsn "jne" for 0x40131f>]'}, {'block_Idx': 34, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ae0>, <DisassemblerInsn "cmp" for 0x400ae7>, <DisassemblerInsn "jne" for 0x400aea>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40061c>, <DisassemblerInsn "mov" for 0x400623>, <DisassemblerInsn "mov" for 0x40062a>, <DisassemblerInsn "mov" for 0x400631>, <DisassemblerInsn "mov" for 0x400639>, <DisassemblerInsn "add" for 0x40063c>, <DisassemblerInsn "mov" for 0x400643>, <DisassemblerInsn "mov" for 0x40064b>, <DisassemblerInsn "cmp" for 0x400651>, <DisassemblerInsn "mov" for 0x400653>, <DisassemblerInsn "mov" for 0x40065a>, <DisassemblerInsn "mov" for 0x400661>, <DisassemblerInsn "jae" for 0x400668>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40066a>, <DisassemblerInsn "mov" for 0x400672>, <DisassemblerInsn "mov" for 0x40067a>, <DisassemblerInsn "mov" for 0x400681>, <DisassemblerInsn "call" for 0x400688>]'}, {'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40117c>, <DisassemblerInsn "xor" for 0x401184>, <DisassemblerInsn "lea" for 0x401186>, <DisassemblerInsn "mov" for 0x40118d>, <DisassemblerInsn "call" for 0x40118f>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008c9>, <DisassemblerInsn "mov" for 0x4008d1>, <DisassemblerInsn "ror" for 0x4008d3>, <DisassemblerInsn "ror" for 0x4008d7>, <DisassemblerInsn "ror" for 0x4008da>, <DisassemblerInsn "shr" for 0x4008de>, <DisassemblerInsn "mov" for 0x4008e1>, <DisassemblerInsn "shl" for 0x4008e8>, <DisassemblerInsn "mov" for 0x4008eb>, <DisassemblerInsn "ror" for 0x4008ee>, <DisassemblerInsn "ror" for 0x4008f2>, <DisassemblerInsn "ror" for 0x4008f5>, <DisassemblerInsn "mov" for 0x4008f9>, <DisassemblerInsn "shr" for 0x400900>, <DisassemblerInsn "or" for 0x400903>, <DisassemblerInsn "cmp" for 0x400905>, <DisassemblerInsn "jne" for 0x40090a>]'}, {'block_Idx': 215, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b14>, <DisassemblerInsn "mov" for 0x402b1c>, <DisassemblerInsn "mov" for 0x402b23>, <DisassemblerInsn "mov" for 0x402b2b>, <DisassemblerInsn "add" for 0x402b33>, <DisassemblerInsn "movsxd" for 0x402b37>, <DisassemblerInsn "cmp" for 0x402b3a>, <DisassemblerInsn "mov" for 0x402b3d>, <DisassemblerInsn "mov" for 0x402b3f>, <DisassemblerInsn "mov" for 0x402b46>, <DisassemblerInsn "mov" for 0x402b4e>, <DisassemblerInsn "mov" for 0x402b56>, <DisassemblerInsn "mov" for 0x402b5e>, <DisassemblerInsn "jl" for 0x402b65>]'}, {'block_Idx': 108, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401177>]'}, {'block_Idx': 61, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c83>, <DisassemblerInsn "mov" for 0x400c8b>, <DisassemblerInsn "add" for 0x400c92>, <DisassemblerInsn "mov" for 0x400c95>, <DisassemblerInsn "mov" for 0x400c9c>, <DisassemblerInsn "mov" for 0x400c9e>, <DisassemblerInsn "cdq" for 0x400ca3>, <DisassemblerInsn "idiv" for 0x400ca4>, <DisassemblerInsn "mov" for 0x400ca6>, <DisassemblerInsn "mov" for 0x400cad>, <DisassemblerInsn "mov" for 0x400caf>, <DisassemblerInsn "add" for 0x400cb6>, <DisassemblerInsn "cmp" for 0x400cb9>, <DisassemblerInsn "mov" for 0x400cbb>, <DisassemblerInsn "jl" for 0x400cc2>]'}, {'block_Idx': 228, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024a8>, <DisassemblerInsn "mov" for 0x4024b0>, <DisassemblerInsn "add" for 0x4024b8>, <DisassemblerInsn "mov" for 0x4024bc>, <DisassemblerInsn "mov" for 0x4024c4>, <DisassemblerInsn "mov" for 0x4024c6>, <DisassemblerInsn "movsxd" for 0x4024cd>, <DisassemblerInsn "cmp" for 0x4024d0>, <DisassemblerInsn "jge" for 0x4024d3>]'}, {'block_Idx': 42, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b48>, <DisassemblerInsn "cmp" for 0x400b4f>, <DisassemblerInsn "jle" for 0x400b52>]'}, {'block_Idx': 151, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402587>, <DisassemblerInsn "mov" for 0x40258f>, <DisassemblerInsn "mov" for 0x402596>, <DisassemblerInsn "mov" for 0x40259d>, <DisassemblerInsn "mov" for 0x4025a4>, <DisassemblerInsn "mov" for 0x4025ab>, <DisassemblerInsn "neg" for 0x4025ad>, <DisassemblerInsn "and" for 0x4025af>, <DisassemblerInsn "mov" for 0x4025b2>, <DisassemblerInsn "mov" for 0x4025b4>, <DisassemblerInsn "lea" for 0x4025b6>, <DisassemblerInsn "mov" for 0x4025ba>, <DisassemblerInsn "mov" for 0x4025bc>, <DisassemblerInsn "mov" for 0x4025be>, <DisassemblerInsn "sub" for 0x4025c6>, <DisassemblerInsn "ja" for 0x4025c9>]'}, {'block_Idx': 72, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401133>, <DisassemblerInsn "xor" for 0x40113b>, <DisassemblerInsn "lea" for 0x40113d>, <DisassemblerInsn "mov" for 0x401144>, <DisassemblerInsn "call" for 0x401146>]'}, {'block_Idx': 212, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401900>]'}, {'block_Idx': 182, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402945>, <DisassemblerInsn "mov" for 0x40294d>, <DisassemblerInsn "mov" for 0x402955>, <DisassemblerInsn "mov" for 0x40295c>, <DisassemblerInsn "mov" for 0x402964>, <DisassemblerInsn "mov" for 0x402968>, <DisassemblerInsn "mov" for 0x402970>, <DisassemblerInsn "mov" for 0x402974>, <DisassemblerInsn "xor" for 0x40297c>, <DisassemblerInsn "mov" for 0x40297e>, <DisassemblerInsn "mov" for 0x402985>, <DisassemblerInsn "mov" for 0x40298d>, <DisassemblerInsn "mov" for 0x402995>, <DisassemblerInsn "jmp" for 0x40299d>]'}, {'block_Idx': 211, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401973>, <DisassemblerInsn "mov" for 0x40197a>, <DisassemblerInsn "mov" for 0x401981>, <DisassemblerInsn "mov" for 0x401989>, <DisassemblerInsn "sar" for 0x40198b>, <DisassemblerInsn "movsxd" for 0x40198e>, <DisassemblerInsn "mov" for 0x401991>, <DisassemblerInsn "ror" for 0x401994>, <DisassemblerInsn "ror" for 0x401998>, <DisassemblerInsn "ror" for 0x40199b>, <DisassemblerInsn "and" for 0x40199f>, <DisassemblerInsn "mov" for 0x4019a2>, <DisassemblerInsn "shl" for 0x4019a9>, <DisassemblerInsn "mov" for 0x4019ab>, <DisassemblerInsn "cmp" for 0x4019b2>, <DisassemblerInsn "jge" for 0x4019b5>]'}, {'block_Idx': 88, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401067>, <DisassemblerInsn "mov" for 0x40106f>, <DisassemblerInsn "mov" for 0x401077>, <DisassemblerInsn "mov" for 0x40107e>, <DisassemblerInsn "mov" for 0x401085>, <DisassemblerInsn "mov" for 0x40108d>, <DisassemblerInsn "cmp" for 0x401095>, <DisassemblerInsn "jle" for 0x401098>]'}, {'block_Idx': 257, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ee6>, <DisassemblerInsn "mov" for 0x401eee>, <DisassemblerInsn "mov" for 0x401ef6>, <DisassemblerInsn "mov" for 0x401efe>, <DisassemblerInsn "mov" for 0x401f00>, <DisassemblerInsn "mov" for 0x401f02>, <DisassemblerInsn "mov" for 0x401f09>, <DisassemblerInsn "mov" for 0x401f10>, <DisassemblerInsn "jmp" for 0x401f18>]'}, {'block_Idx': 208, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c9e>, <DisassemblerInsn "mov" for 0x402ca6>, <DisassemblerInsn "mov" for 0x402cae>, <DisassemblerInsn "mov" for 0x402cb5>, <DisassemblerInsn "mov" for 0x402cbd>, <DisassemblerInsn "mov" for 0x402cc4>, <DisassemblerInsn "mov" for 0x402cc6>, <DisassemblerInsn "shl" for 0x402cc8>, <DisassemblerInsn "mov" for 0x402cca>, <DisassemblerInsn "mov" for 0x402cd2>, <DisassemblerInsn "add" for 0x402cd5>, <DisassemblerInsn "mov" for 0x402cd9>, <DisassemblerInsn "mov" for 0x402cdc>, <DisassemblerInsn "mov" for 0x402cde>, <DisassemblerInsn "mov" for 0x402ce5>, <DisassemblerInsn "mov" for 0x402ced>, <DisassemblerInsn "jmp" for 0x402cf5>]'}, {'block_Idx': 245, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b23>, <DisassemblerInsn "mov" for 0x401b2b>, <DisassemblerInsn "mov" for 0x401b32>, <DisassemblerInsn "mov" for 0x401b39>, <DisassemblerInsn "mov" for 0x401b41>, <DisassemblerInsn "mov" for 0x401b49>, <DisassemblerInsn "mov" for 0x401b50>, <DisassemblerInsn "mov" for 0x401b57>, <DisassemblerInsn "sar" for 0x401b59>, <DisassemblerInsn "movsxd" for 0x401b5c>, <DisassemblerInsn "mov" for 0x401b5f>, <DisassemblerInsn "ror" for 0x401b62>, <DisassemblerInsn "ror" for 0x401b66>, <DisassemblerInsn "ror" for 0x401b69>, <DisassemblerInsn "and" for 0x401b6d>, <DisassemblerInsn "mov" for 0x401b70>, <DisassemblerInsn "shl" for 0x401b77>, <DisassemblerInsn "mov" for 0x401b79>, <DisassemblerInsn "cmp" for 0x401b80>, <DisassemblerInsn "jge" for 0x401b83>]'}, {'block_Idx': 50, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400af9>, <DisassemblerInsn "mov" for 0x400b01>, <DisassemblerInsn "mov" for 0x400b08>, <DisassemblerInsn "mov" for 0x400b10>, <DisassemblerInsn "mov" for 0x400b13>, <DisassemblerInsn "cdq" for 0x400b18>, <DisassemblerInsn "idiv" for 0x400b19>, <DisassemblerInsn "mov" for 0x400b1b>, <DisassemblerInsn "cdqe" for 0x400b23>, <DisassemblerInsn "add" for 0x400b25>, <DisassemblerInsn "call" for 0x400b28>]'}, {'block_Idx': 38, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007a5>, <DisassemblerInsn "mov" for 0x4007ad>, <DisassemblerInsn "mov" for 0x4007b5>, <DisassemblerInsn "mov" for 0x4007bd>, <DisassemblerInsn "mov" for 0x4007c5>, <DisassemblerInsn "mov" for 0x4007cc>, <DisassemblerInsn "mov" for 0x4007d3>, <DisassemblerInsn "add" for 0x4007d5>, <DisassemblerInsn "mov" for 0x4007d8>, <DisassemblerInsn "add" for 0x4007da>, <DisassemblerInsn "mov" for 0x4007dc>, <DisassemblerInsn "cmp" for 0x4007de>, <DisassemblerInsn "setl" for 0x4007e0>, <DisassemblerInsn "cmp" for 0x4007e4>, <DisassemblerInsn "setne" for 0x4007e7>, <DisassemblerInsn "and" for 0x4007eb>, <DisassemblerInsn "test" for 0x4007ee>, <DisassemblerInsn "mov" for 0x4007f2>, <DisassemblerInsn "mov" for 0x4007f4>, <DisassemblerInsn "mov" for 0x4007fb>, <DisassemblerInsn "mov" for 0x400802>, <DisassemblerInsn "mov" for 0x40080a>, <DisassemblerInsn "jne" for 0x400811>]'}, {'block_Idx': 1, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400492>, <DisassemblerInsn "mov" for 0x400499>, <DisassemblerInsn "mov" for 0x4004a1>, <DisassemblerInsn "mov" for 0x4004a9>, <DisassemblerInsn "cmp" for 0x4004ae>, <DisassemblerInsn "cmovg" for 0x4004b1>, <DisassemblerInsn "mov" for 0x4004b4>, <DisassemblerInsn "mov" for 0x4004b6>, <DisassemblerInsn "add" for 0x4004bd>, <DisassemblerInsn "call" for 0x4004c4>]'}, {'block_Idx': 185, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4026f0>, <DisassemblerInsn "mov" for 0x4026f8>, <DisassemblerInsn "mov" for 0x402700>, <DisassemblerInsn "mov" for 0x402708>, <DisassemblerInsn "mov" for 0x402710>, <DisassemblerInsn "mov" for 0x402718>, <DisassemblerInsn "mov" for 0x402720>, <DisassemblerInsn "mov" for 0x402728>, <DisassemblerInsn "mov" for 0x402730>, <DisassemblerInsn "mov" for 0x402738>, <DisassemblerInsn "mov" for 0x402740>, <DisassemblerInsn "mov" for 0x402748>, <DisassemblerInsn "mov" for 0x402750>, <DisassemblerInsn "mov" for 0x402752>, <DisassemblerInsn "mov" for 0x402757>, <DisassemblerInsn "mov" for 0x40275a>, <DisassemblerInsn "shl" for 0x40275c>, <DisassemblerInsn "mov" for 0x40275e>, <DisassemblerInsn "cmp" for 0x402765>, <DisassemblerInsn "je" for 0x402768>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40276a>, <DisassemblerInsn "mov" for 0x402772>, <DisassemblerInsn "mov" for 0x40277a>, <DisassemblerInsn "mov" for 0x402782>, <DisassemblerInsn "mov" for 0x402789>, <DisassemblerInsn "add" for 0x40278c>, <DisassemblerInsn "mov" for 0x402790>, <DisassemblerInsn "mov" for 0x402792>, <DisassemblerInsn "mov" for 0x402794>, <DisassemblerInsn "mov" for 0x40279b>, <DisassemblerInsn "mov" for 0x4027a3>, <DisassemblerInsn "jmp" for 0x4027ab>]'}, {'block_Idx': 227, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401cdc>, <DisassemblerInsn "add" for 0x401ce3>, <DisassemblerInsn "cmp" for 0x401ce6>, <DisassemblerInsn "jae" for 0x401ce9>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400df0>, <DisassemblerInsn "mov" for 0x400df8>, <DisassemblerInsn "mov" for 0x400dff>, <DisassemblerInsn "mov" for 0x400e06>, <DisassemblerInsn "mov" for 0x400e0d>, <DisassemblerInsn "mov" for 0x400e14>, <DisassemblerInsn "shl" for 0x400e1b>, <DisassemblerInsn "shr" for 0x400e1e>, <DisassemblerInsn "mov" for 0x400e21>, <DisassemblerInsn "mov" for 0x400e28>, <DisassemblerInsn "cmp" for 0x400e2e>, <DisassemblerInsn "jne" for 0x400e31>]'}, {'block_Idx': 356, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402133>, <DisassemblerInsn "mov" for 0x40213a>, <DisassemblerInsn "mov" for 0x402141>, <DisassemblerInsn "mov" for 0x402148>, <DisassemblerInsn "mov" for 0x40214a>, <DisassemblerInsn "mov" for 0x402152>, <DisassemblerInsn "mov" for 0x402157>, <DisassemblerInsn "mov" for 0x40215f>, <DisassemblerInsn "mov" for 0x402166>, <DisassemblerInsn "jmp" for 0x40216d>]'}, {'block_Idx': 157, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4025e3>, <DisassemblerInsn "mov" for 0x4025eb>, <DisassemblerInsn "mov" for 0x4025ed>, <DisassemblerInsn "jmp" for 0x4025f4>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402913>]'}, {'block_Idx': 47, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400be5>, <DisassemblerInsn "mov" for 0x400bed>, <DisassemblerInsn "mov" for 0x400bf4>, <DisassemblerInsn "mov" for 0x400bf6>, <DisassemblerInsn "mov" for 0x400bfd>, <DisassemblerInsn "cdq" for 0x400c02>, <DisassemblerInsn "idiv" for 0x400c03>, <DisassemblerInsn "add" for 0x400c05>, <DisassemblerInsn "cmp" for 0x400c08>, <DisassemblerInsn "jge" for 0x400c0a>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d6e>, <DisassemblerInsn "mov" for 0x400d76>, <DisassemblerInsn "add" for 0x400d7d>, <DisassemblerInsn "sub" for 0x400d80>, <DisassemblerInsn "setb" for 0x400d83>, <DisassemblerInsn "mov" for 0x400d86>, <DisassemblerInsn "mov" for 0x400d89>, <DisassemblerInsn "sub" for 0x400d8b>, <DisassemblerInsn "sete" for 0x400d8e>, <DisassemblerInsn "and" for 0x400d91>, <DisassemblerInsn "test" for 0x400d93>, <DisassemblerInsn "mov" for 0x400d96>, <DisassemblerInsn "jne" for 0x400d9d>]'}, {'block_Idx': 267, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d6e>, <DisassemblerInsn "mov" for 0x401d76>, <DisassemblerInsn "mov" for 0x401d7d>, <DisassemblerInsn "mov" for 0x401d84>, <DisassemblerInsn "mov" for 0x401d8c>, <DisassemblerInsn "mov" for 0x401d94>, <DisassemblerInsn "mov" for 0x401d9b>, <DisassemblerInsn "mov" for 0x401da2>, <DisassemblerInsn "sar" for 0x401da4>, <DisassemblerInsn "movsxd" for 0x401da7>, <DisassemblerInsn "mov" for 0x401daa>, <DisassemblerInsn "ror" for 0x401dad>, <DisassemblerInsn "ror" for 0x401db1>, <DisassemblerInsn "ror" for 0x401db4>, <DisassemblerInsn "and" for 0x401db8>, <DisassemblerInsn "mov" for 0x401dbb>, <DisassemblerInsn "shl" for 0x401dc2>, <DisassemblerInsn "mov" for 0x401dc4>, <DisassemblerInsn "cmp" for 0x401dcb>, <DisassemblerInsn "jge" for 0x401dce>]'}, {'block_Idx': 120, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401380>, <DisassemblerInsn "sub" for 0x401387>, <DisassemblerInsn "je" for 0x40138a>]'}, {'block_Idx': 58, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e7a>, <DisassemblerInsn "mov" for 0x400e81>, <DisassemblerInsn "mov" for 0x400e89>, <DisassemblerInsn "xor" for 0x400e8d>, <DisassemblerInsn "lea" for 0x400e8f>, <DisassemblerInsn "mov" for 0x400e96>, <DisassemblerInsn "call" for 0x400e98>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402eae>, <DisassemblerInsn "mov" for 0x402eb6>, <DisassemblerInsn "mov" for 0x402ebb>, <DisassemblerInsn "mov" for 0x402ebf>, <DisassemblerInsn "mov" for 0x402ec7>, <DisassemblerInsn "mov" for 0x402ecb>, <DisassemblerInsn "mov" for 0x402ecd>, <DisassemblerInsn "shl" for 0x402ecf>, <DisassemblerInsn "mov" for 0x402ed1>, <DisassemblerInsn "mov" for 0x402ed6>, <DisassemblerInsn "add" for 0x402ed9>, <DisassemblerInsn "mov" for 0x402edd>, <DisassemblerInsn "mov" for 0x402ee0>, <DisassemblerInsn "mov" for 0x402ee2>, <DisassemblerInsn "mov" for 0x402ee6>, <DisassemblerInsn "mov" for 0x402eeb>, <DisassemblerInsn "jmp" for 0x402ef0>]'}, {'block_Idx': 89, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401114>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4025f9>, <DisassemblerInsn "mov" for 0x402601>, <DisassemblerInsn "mov" for 0x402609>, <DisassemblerInsn "mov" for 0x402610>, <DisassemblerInsn "mov" for 0x402618>, <DisassemblerInsn "xor" for 0x40261a>, <DisassemblerInsn "cmp" for 0x40261c>, <DisassemblerInsn "mov" for 0x40261f>, <DisassemblerInsn "mov" for 0x402622>, <DisassemblerInsn "mov" for 0x40262a>, <DisassemblerInsn "mov" for 0x40262d>, <DisassemblerInsn "mov" for 0x402635>, <DisassemblerInsn "mov" for 0x40263c>, <DisassemblerInsn "mov" for 0x402644>, <DisassemblerInsn "mov" for 0x40264c>, <DisassemblerInsn "mov" for 0x402654>, <DisassemblerInsn "jle" for 0x40265b>]'}, {'block_Idx': 424, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x4023f3>, <DisassemblerInsn "jl" for 0x4023f6>]'}, {'block_Idx': 340, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402182>, <DisassemblerInsn "mov" for 0x402189>, <DisassemblerInsn "mov" for 0x402190>, <DisassemblerInsn "mov" for 0x402192>, <DisassemblerInsn "mov" for 0x40219a>, <DisassemblerInsn "mov" for 0x40219f>, <DisassemblerInsn "mov" for 0x4021a7>, <DisassemblerInsn "mov" for 0x4021ae>, <DisassemblerInsn "mov" for 0x4021b5>, <DisassemblerInsn "mov" for 0x4021bd>, <DisassemblerInsn "mov" for 0x4021c5>, <DisassemblerInsn "add" for 0x4021cd>, <DisassemblerInsn "mov" for 0x4021d0>, <DisassemblerInsn "mov" for 0x4021d7>, <DisassemblerInsn "add" for 0x4021da>, <DisassemblerInsn "mov" for 0x4021de>, <DisassemblerInsn "cmp" for 0x4021e6>, <DisassemblerInsn "mov" for 0x4021e9>, <DisassemblerInsn "mov" for 0x4021f1>, <DisassemblerInsn "je" for 0x4021f8>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b69>, <DisassemblerInsn "mov" for 0x400b70>, <DisassemblerInsn "shr" for 0x400b75>, <DisassemblerInsn "mov" for 0x400b77>, <DisassemblerInsn "and" for 0x400b7e>, <DisassemblerInsn "cmp" for 0x400b80>, <DisassemblerInsn "jne" for 0x400b83>]'}, {'block_Idx': 81, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40109a>, <DisassemblerInsn "mov" for 0x4010a2>, <DisassemblerInsn "mov" for 0x4010aa>, <DisassemblerInsn "mov" for 0x4010b2>, <DisassemblerInsn "mov" for 0x4010ba>, <DisassemblerInsn "add" for 0x4010c1>, <DisassemblerInsn "mov" for 0x4010c4>, <DisassemblerInsn "shr" for 0x4010c7>, <DisassemblerInsn "mov" for 0x4010cb>, <DisassemblerInsn "ror" for 0x4010cf>, <DisassemblerInsn "ror" for 0x4010d3>, <DisassemblerInsn "ror" for 0x4010d6>, <DisassemblerInsn "shr" for 0x4010da>, <DisassemblerInsn "add" for 0x4010dd>, <DisassemblerInsn "mov" for 0x4010e1>, <DisassemblerInsn "mov" for 0x4010e4>, <DisassemblerInsn "add" for 0x4010e7>, <DisassemblerInsn "shl" for 0x4010ea>, <DisassemblerInsn "movsxd" for 0x4010ee>, <DisassemblerInsn "add" for 0x4010f1>, <DisassemblerInsn "cmp" for 0x4010f4>, <DisassemblerInsn "mov" for 0x4010f7>, <DisassemblerInsn "mov" for 0x4010ff>, <DisassemblerInsn "mov" for 0x401107>, <DisassemblerInsn "jb" for 0x40110e>]'}, {'block_Idx': 69, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400cc8>]'}, {'block_Idx': 251, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b85>, <DisassemblerInsn "mov" for 0x401b8c>, <DisassemblerInsn "mov" for 0x401b93>, <DisassemblerInsn "mov" for 0x401b9a>, <DisassemblerInsn "xor" for 0x401b9d>, <DisassemblerInsn "sub" for 0x401b9f>, <DisassemblerInsn "shr" for 0x401ba2>, <DisassemblerInsn "mov" for 0x401ba4>, <DisassemblerInsn "add" for 0x401bac>, <DisassemblerInsn "mov" for 0x401bae>, <DisassemblerInsn "mov" for 0x401bb0>, <DisassemblerInsn "jmp" for 0x401bb7>]'}, {'block_Idx': 291, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401f68>]'}, {'block_Idx': 238, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401925>, <DisassemblerInsn "mov" for 0x40192c>, <DisassemblerInsn "mov" for 0x401933>, <DisassemblerInsn "mov" for 0x40193b>, <DisassemblerInsn "add" for 0x401943>, <DisassemblerInsn "shl" for 0x401947>, <DisassemblerInsn "add" for 0x40194b>, <DisassemblerInsn "mov" for 0x40194e>, <DisassemblerInsn "xor" for 0x401956>, <DisassemblerInsn "mov" for 0x401958>, <DisassemblerInsn "mov" for 0x40195f>, <DisassemblerInsn "mov" for 0x401966>, <DisassemblerInsn "jmp" for 0x40196e>]'}, {'block_Idx': 170, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40168c>]'}, {'block_Idx': 219, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019b7>, <DisassemblerInsn "mov" for 0x4019be>, <DisassemblerInsn "mov" for 0x4019c5>, <DisassemblerInsn "mov" for 0x4019cc>, <DisassemblerInsn "xor" for 0x4019cf>, <DisassemblerInsn "sub" for 0x4019d1>, <DisassemblerInsn "shr" for 0x4019d4>, <DisassemblerInsn "mov" for 0x4019d6>, <DisassemblerInsn "add" for 0x4019de>, <DisassemblerInsn "mov" for 0x4019e0>, <DisassemblerInsn "mov" for 0x4019e2>, <DisassemblerInsn "jmp" for 0x4019e9>]'}, {'block_Idx': 125, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40138c>]'}, {'block_Idx': 358, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402011>, <DisassemblerInsn "mov" for 0x402018>, <DisassemblerInsn "mov" for 0x40201f>, <DisassemblerInsn "mov" for 0x402026>, <DisassemblerInsn "mov" for 0x40202e>, <DisassemblerInsn "shl" for 0x402035>, <DisassemblerInsn "mov" for 0x402037>, <DisassemblerInsn "add" for 0x40203a>, <DisassemblerInsn "mov" for 0x40203e>, <DisassemblerInsn "mov" for 0x402041>, <DisassemblerInsn "add" for 0x402045>, <DisassemblerInsn "add" for 0x402047>, <DisassemblerInsn "sub" for 0x402049>, <DisassemblerInsn "mov" for 0x40204b>, <DisassemblerInsn "cmp" for 0x402052>, <DisassemblerInsn "jne" for 0x402055>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403021>, <DisassemblerInsn "mov" for 0x403025>, <DisassemblerInsn "mov" for 0x40302d>, <DisassemblerInsn "add" for 0x403030>, <DisassemblerInsn "mov" for 0x403037>, <DisassemblerInsn "mov" for 0x40303c>, <DisassemblerInsn "mov" for 0x403042>, <DisassemblerInsn "cmp" for 0x403046>, <DisassemblerInsn "mov" for 0x403049>, <DisassemblerInsn "je" for 0x403050>]'}, {'block_Idx': 327, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402172>, <DisassemblerInsn "cmp" for 0x402179>, <DisassemblerInsn "jle" for 0x40217c>]'}, {'block_Idx': 223, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a7a>, <DisassemblerInsn "mov" for 0x401a82>, <DisassemblerInsn "mov" for 0x401a89>, <DisassemblerInsn "mov" for 0x401a90>, <DisassemblerInsn "sub" for 0x401a95>, <DisassemblerInsn "mov" for 0x401a97>, <DisassemblerInsn "shl" for 0x401a9e>, <DisassemblerInsn "mov" for 0x401aa0>, <DisassemblerInsn "sar" for 0x401aa7>, <DisassemblerInsn "mov" for 0x401aa9>, <DisassemblerInsn "cmp" for 0x401ab0>, <DisassemblerInsn "jle" for 0x401ab3>]'}, {'block_Idx': 392, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022f8>, <DisassemblerInsn "mov" for 0x402300>, <DisassemblerInsn "mov" for 0x402307>, <DisassemblerInsn "mov" for 0x40230e>, <DisassemblerInsn "mov" for 0x402315>, <DisassemblerInsn "mov" for 0x40231d>, <DisassemblerInsn "mov" for 0x402325>, <DisassemblerInsn "add" for 0x40232d>, <DisassemblerInsn "mov" for 0x402331>, <DisassemblerInsn "mov" for 0x402338>, <DisassemblerInsn "add" for 0x40233a>, <DisassemblerInsn "mov" for 0x40233c>, <DisassemblerInsn "mov" for 0x402343>, <DisassemblerInsn "add" for 0x402345>, <DisassemblerInsn "mov" for 0x402347>, <DisassemblerInsn "mov" for 0x40234e>, <DisassemblerInsn "add" for 0x402350>, <DisassemblerInsn "mov" for 0x402353>, <DisassemblerInsn "mov" for 0x40235a>, <DisassemblerInsn "add" for 0x40235e>, <DisassemblerInsn "mov" for 0x402362>, <DisassemblerInsn "cmp" for 0x40236a>, <DisassemblerInsn "mov" for 0x40236d>, <DisassemblerInsn "mov" for 0x402375>, <DisassemblerInsn "mov" for 0x40237c>, <DisassemblerInsn "mov" for 0x402383>, <DisassemblerInsn "mov" for 0x40238a>, <DisassemblerInsn "je" for 0x402391>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d9f>]'}, {'block_Idx': 96, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40115d>, <DisassemblerInsn "sub" for 0x401164>, <DisassemblerInsn "je" for 0x401167>]'}, {'block_Idx': 242, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023cf>, <DisassemblerInsn "mov" for 0x4023d7>, <DisassemblerInsn "mov" for 0x4023df>, <DisassemblerInsn "and" for 0x4023e6>, <DisassemblerInsn "add" for 0x4023e9>, <DisassemblerInsn "mov" for 0x4023ec>, <DisassemblerInsn "call" for 0x4023ee>]'}, {'block_Idx': 184, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40289c>, <DisassemblerInsn "mov" for 0x4028a4>, <DisassemblerInsn "mov" for 0x4028ab>, <DisassemblerInsn "mov" for 0x4028b3>, <DisassemblerInsn "mov" for 0x4028ba>, <DisassemblerInsn "mov" for 0x4028c2>, <DisassemblerInsn "add" for 0x4028ca>, <DisassemblerInsn "movsxd" for 0x4028ce>, <DisassemblerInsn "cmp" for 0x4028d1>, <DisassemblerInsn "mov" for 0x4028d4>, <DisassemblerInsn "mov" for 0x4028d7>, <DisassemblerInsn "mov" for 0x4028df>, <DisassemblerInsn "mov" for 0x4028e7>, <DisassemblerInsn "mov" for 0x4028ee>, <DisassemblerInsn "mov" for 0x4028f6>, <DisassemblerInsn "mov" for 0x4028fe>, <DisassemblerInsn "mov" for 0x402906>, <DisassemblerInsn "jl" for 0x40290d>]'}, {'block_Idx': 174, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402661>, <DisassemblerInsn "mov" for 0x402668>, <DisassemblerInsn "mov" for 0x40266f>, <DisassemblerInsn "mov" for 0x402676>, <DisassemblerInsn "mov" for 0x40267e>, <DisassemblerInsn "mov" for 0x402686>, <DisassemblerInsn "mov" for 0x40268e>, <DisassemblerInsn "xor" for 0x402696>, <DisassemblerInsn "cmp" for 0x402699>, <DisassemblerInsn "mov" for 0x40269c>, <DisassemblerInsn "mov" for 0x40269f>, <DisassemblerInsn "mov" for 0x4026a7>, <DisassemblerInsn "mov" for 0x4026af>, <DisassemblerInsn "mov" for 0x4026b2>, <DisassemblerInsn "mov" for 0x4026ba>, <DisassemblerInsn "mov" for 0x4026bd>, <DisassemblerInsn "mov" for 0x4026c5>, <DisassemblerInsn "mov" for 0x4026cc>, <DisassemblerInsn "mov" for 0x4026d3>, <DisassemblerInsn "mov" for 0x4026da>, <DisassemblerInsn "mov" for 0x4026e2>, <DisassemblerInsn "jle" for 0x4026ea>]'}, {'block_Idx': 107, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011ec>, <DisassemblerInsn "mov" for 0x4011f4>, <DisassemblerInsn "mov" for 0x4011fb>, <DisassemblerInsn "mov" for 0x401203>, <DisassemblerInsn "shr" for 0x40120b>, <DisassemblerInsn "and" for 0x40120f>, <DisassemblerInsn "mov" for 0x401216>, <DisassemblerInsn "ror" for 0x401219>, <DisassemblerInsn "ror" for 0x40121d>, <DisassemblerInsn "ror" for 0x401220>, <DisassemblerInsn "shr" for 0x401224>, <DisassemblerInsn "add" for 0x401227>, <DisassemblerInsn "mov" for 0x40122a>, <DisassemblerInsn "add" for 0x40122c>, <DisassemblerInsn "mov" for 0x40122f>, <DisassemblerInsn "mov" for 0x401236>, <DisassemblerInsn "jmp" for 0x40123d>]'}, {'block_Idx': 86, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40114b>]'}, {'block_Idx': 229, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40242a>, <DisassemblerInsn "cmp" for 0x402432>, <DisassemblerInsn "jle" for 0x402435>]'}, {'block_Idx': 19, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bb2>, <DisassemblerInsn "and" for 0x400bb9>, <DisassemblerInsn "cmp" for 0x400bbe>, <DisassemblerInsn "je" for 0x400bc3>]'}, {'block_Idx': 400, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402397>]'}, {'block_Idx': 209, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ef2>, <DisassemblerInsn "mov" for 0x402ef7>, <DisassemblerInsn "mov" for 0x402efb>, <DisassemblerInsn "mov" for 0x402f00>, <DisassemblerInsn "mov" for 0x402f04>, <DisassemblerInsn "mov" for 0x402f08>, <DisassemblerInsn "mov" for 0x402f0d>, <DisassemblerInsn "shl" for 0x402f11>, <DisassemblerInsn "mov" for 0x402f13>, <DisassemblerInsn "mov" for 0x402f15>, <DisassemblerInsn "mov" for 0x402f18>, <DisassemblerInsn "add" for 0x402f1b>, <DisassemblerInsn "mov" for 0x402f1f>, <DisassemblerInsn "mov" for 0x402f23>, <DisassemblerInsn "mov" for 0x402f27>, <DisassemblerInsn "mov" for 0x402f2c>, <DisassemblerInsn "mov" for 0x402f31>, <DisassemblerInsn "mov" for 0x402f36>, <DisassemblerInsn "mov" for 0x402f3a>, <DisassemblerInsn "mov" for 0x402f3f>, <DisassemblerInsn "add" for 0x402f44>, <DisassemblerInsn "movsxd" for 0x402f48>, <DisassemblerInsn "cmp" for 0x402f4b>, <DisassemblerInsn "mov" for 0x402f4e>, <DisassemblerInsn "mov" for 0x402f50>, <DisassemblerInsn "mov" for 0x402f54>, <DisassemblerInsn "mov" for 0x402f59>, <DisassemblerInsn "mov" for 0x402f5e>, <DisassemblerInsn "mov" for 0x402f66>, <DisassemblerInsn "jl" for 0x402f6d>]'}, {'block_Idx': 200, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018d7>, <DisassemblerInsn "mov" for 0x4018df>, <DisassemblerInsn "lea" for 0x4018e2>, <DisassemblerInsn "xor" for 0x4018e9>, <DisassemblerInsn "call" for 0x4018eb>]'}, {'block_Idx': 256, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f1d>, <DisassemblerInsn "mov" for 0x401f24>, <DisassemblerInsn "mov" for 0x401f2c>, <DisassemblerInsn "mov" for 0x401f34>, <DisassemblerInsn "call" for 0x401f36>]'}, {'block_Idx': 341, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402123>, <DisassemblerInsn "cmp" for 0x40212a>, <DisassemblerInsn "jle" for 0x40212d>]'}, {'block_Idx': 137, 'blockInsts': '[<DisassemblerInsn "add" for 0x403237>, <DisassemblerInsn "ret" for 0x40323b>]'}, {'block_Idx': 180, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401738>, <DisassemblerInsn "mov" for 0x401740>, <DisassemblerInsn "mov" for 0x401747>, <DisassemblerInsn "mov" for 0x40174f>, <DisassemblerInsn "mov" for 0x401756>, <DisassemblerInsn "sar" for 0x401758>, <DisassemblerInsn "movsxd" for 0x40175b>, <DisassemblerInsn "mov" for 0x40175e>, <DisassemblerInsn "ror" for 0x401761>, <DisassemblerInsn "ror" for 0x401765>, <DisassemblerInsn "ror" for 0x401768>, <DisassemblerInsn "and" for 0x40176c>, <DisassemblerInsn "shl" for 0x40176f>, <DisassemblerInsn "mov" for 0x401771>, <DisassemblerInsn "shr" for 0x401773>, <DisassemblerInsn "mov" for 0x401776>, <DisassemblerInsn "mov" for 0x40177d>, <DisassemblerInsn "add" for 0x40177f>, <DisassemblerInsn "mov" for 0x401782>, <DisassemblerInsn "mov" for 0x401784>, <DisassemblerInsn "sar" for 0x401786>, <DisassemblerInsn "movsxd" for 0x401789>, <DisassemblerInsn "mov" for 0x40178c>, <DisassemblerInsn "and" for 0x40178f>, <DisassemblerInsn "movzx" for 0x401792>, <DisassemblerInsn "add" for 0x401795>, <DisassemblerInsn "mov" for 0x401798>, <DisassemblerInsn "mov" for 0x40179a>, <DisassemblerInsn "shr" for 0x40179f>, <DisassemblerInsn "mov" for 0x4017a1>, <DisassemblerInsn "and" for 0x4017a8>, <DisassemblerInsn "xor" for 0x4017aa>, <DisassemblerInsn "mov" for 0x4017ac>, <DisassemblerInsn "cmp" for 0x4017b1>, <DisassemblerInsn "mov" for 0x4017b4>, <DisassemblerInsn "mov" for 0x4017b6>, <DisassemblerInsn "mov" for 0x4017bd>, <DisassemblerInsn "mov" for 0x4017c4>, <DisassemblerInsn "mov" for 0x4017cb>, <DisassemblerInsn "mov" for 0x4017d2>, <DisassemblerInsn "je" for 0x4017d9>]'}, {'block_Idx': 154, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401492>, <DisassemblerInsn "mov" for 0x401499>, <DisassemblerInsn "xor" for 0x4014a1>, <DisassemblerInsn "lea" for 0x4014a3>, <DisassemblerInsn "mov" for 0x4014aa>, <DisassemblerInsn "call" for 0x4014ac>]'}, {'block_Idx': 27, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ccd>, <DisassemblerInsn "mov" for 0x400cd5>, <DisassemblerInsn "mov" for 0x400cdd>, <DisassemblerInsn "mov" for 0x400ce4>, <DisassemblerInsn "shr" for 0x400ce6>, <DisassemblerInsn "mov" for 0x400ce9>, <DisassemblerInsn "shl" for 0x400cf0>, <DisassemblerInsn "shr" for 0x400cf3>, <DisassemblerInsn "mov" for 0x400cf6>, <DisassemblerInsn "mov" for 0x400cfd>, <DisassemblerInsn "add" for 0x400d00>, <DisassemblerInsn "mov" for 0x400d04>, <DisassemblerInsn "mov" for 0x400d0c>, <DisassemblerInsn "ror" for 0x400d0f>, <DisassemblerInsn "ror" for 0x400d13>, <DisassemblerInsn "ror" for 0x400d16>, <DisassemblerInsn "mov" for 0x400d1a>, <DisassemblerInsn "shr" for 0x400d21>, <DisassemblerInsn "mov" for 0x400d24>, <DisassemblerInsn "mov" for 0x400d2b>, <DisassemblerInsn "cmp" for 0x400d31>, <DisassemblerInsn "jge" for 0x400d34>]'}, {'block_Idx': 186, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b9d>, <DisassemblerInsn "mov" for 0x402ba5>, <DisassemblerInsn "mov" for 0x402bad>, <DisassemblerInsn "mov" for 0x402bb4>, <DisassemblerInsn "mov" for 0x402bbc>, <DisassemblerInsn "mov" for 0x402bc0>, <DisassemblerInsn "mov" for 0x402bc8>, <DisassemblerInsn "mov" for 0x402bcc>, <DisassemblerInsn "xor" for 0x402bd4>, <DisassemblerInsn "mov" for 0x402bd6>, <DisassemblerInsn "mov" for 0x402bdd>, <DisassemblerInsn "mov" for 0x402be5>, <DisassemblerInsn "mov" for 0x402bed>, <DisassemblerInsn "jmp" for 0x402bf5>]'}, {'block_Idx': 216, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402da8>]'}, {'block_Idx': 52, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e33>, <DisassemblerInsn "add" for 0x400e3b>, <DisassemblerInsn "mov" for 0x400e3f>, <DisassemblerInsn "jmp" for 0x400e47>]'}, {'block_Idx': 56, 'blockInsts': '[<DisassemblerInsn "sub" for 0x400110>, <DisassemblerInsn "mov" for 0x400114>, <DisassemblerInsn "mov" for 0x400119>, <DisassemblerInsn "mov" for 0x40011e>, <DisassemblerInsn "mov" for 0x400123>, <DisassemblerInsn "ror" for 0x400126>, <DisassemblerInsn "ror" for 0x40012a>, <DisassemblerInsn "ror" for 0x40012d>, <DisassemblerInsn "shr" for 0x400131>, <DisassemblerInsn "mov" for 0x400134>, <DisassemblerInsn "mov" for 0x400138>, <DisassemblerInsn "cmp" for 0x40013a>, <DisassemblerInsn "jge" for 0x40013d>]'}, {'block_Idx': 28, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bc9>, <DisassemblerInsn "mov" for 0x400bd1>, <DisassemblerInsn "xor" for 0x400bd5>, <DisassemblerInsn "lea" for 0x400bd7>, <DisassemblerInsn "mov" for 0x400bde>, <DisassemblerInsn "call" for 0x400be0>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400714>, <DisassemblerInsn "mov" for 0x40071b>, <DisassemblerInsn "mov" for 0x400722>, <DisassemblerInsn "mov" for 0x40072a>, <DisassemblerInsn "mov" for 0x400731>, <DisassemblerInsn "mov" for 0x400733>, <DisassemblerInsn "add" for 0x400736>, <DisassemblerInsn "mov" for 0x400739>, <DisassemblerInsn "mov" for 0x40073b>, <DisassemblerInsn "call" for 0x40073d>]'}, {'block_Idx': 169, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40168e>, <DisassemblerInsn "mov" for 0x401696>, <DisassemblerInsn "add" for 0x40169d>, <DisassemblerInsn "mov" for 0x4016a0>, <DisassemblerInsn "mov" for 0x4016a2>, <DisassemblerInsn "mov" for 0x4016a9>, <DisassemblerInsn "mov" for 0x4016b1>, <DisassemblerInsn "mov" for 0x4016b9>, <DisassemblerInsn "mov" for 0x4016c0>, <DisassemblerInsn "mov" for 0x4016c7>, <DisassemblerInsn "mov" for 0x4016c9>, <DisassemblerInsn "mov" for 0x4016d0>, <DisassemblerInsn "mov" for 0x4016d3>, <DisassemblerInsn "mov" for 0x4016db>, <DisassemblerInsn "sar" for 0x4016dd>, <DisassemblerInsn "movsxd" for 0x4016e0>, <DisassemblerInsn "mov" for 0x4016e3>, <DisassemblerInsn "mov" for 0x4016e7>, <DisassemblerInsn "and" for 0x4016e9>, <DisassemblerInsn "movzx" for 0x4016ec>, <DisassemblerInsn "mov" for 0x4016f0>, <DisassemblerInsn "add" for 0x4016f7>, <DisassemblerInsn "mov" for 0x4016fa>, <DisassemblerInsn "mov" for 0x401701>, <DisassemblerInsn "mov" for 0x401703>, <DisassemblerInsn "shr" for 0x401708>, <DisassemblerInsn "mov" for 0x40170a>, <DisassemblerInsn "and" for 0x401711>, <DisassemblerInsn "cmp" for 0x401713>, <DisassemblerInsn "je" for 0x401716>]'}, {'block_Idx': 178, 'blockInsts': '[<DisassemblerInsn "lea" for 0x402e25>, <DisassemblerInsn "lea" for 0x402e2c>, <DisassemblerInsn "mov" for 0x402e33>, <DisassemblerInsn "lea" for 0x402e38>, <DisassemblerInsn "call" for 0x402e3f>]'}, {'block_Idx': 49, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400968>, <DisassemblerInsn "mov" for 0x400970>, <DisassemblerInsn "mov" for 0x400978>, <DisassemblerInsn "mov" for 0x40097f>, <DisassemblerInsn "mov" for 0x400987>, <DisassemblerInsn "sar" for 0x400989>, <DisassemblerInsn "movsxd" for 0x40098c>, <DisassemblerInsn "mov" for 0x40098f>, <DisassemblerInsn "mov" for 0x400992>, <DisassemblerInsn "and" for 0x400994>, <DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "movzx" for 0x40099e>, <DisassemblerInsn "mov" for 0x4009a1>, <DisassemblerInsn "mov" for 0x4009a8>, <DisassemblerInsn "add" for 0x4009aa>, <DisassemblerInsn "mov" for 0x4009ad>, <DisassemblerInsn "sar" for 0x4009af>, <DisassemblerInsn "movsxd" for 0x4009b2>, <DisassemblerInsn "mov" for 0x4009b5>, <DisassemblerInsn "ror" for 0x4009b8>, <DisassemblerInsn "ror" for 0x4009bc>, <DisassemblerInsn "ror" for 0x4009bf>, <DisassemblerInsn "and" for 0x4009c3>, <DisassemblerInsn "shl" for 0x4009c6>, <DisassemblerInsn "mov" for 0x4009c8>, <DisassemblerInsn "shr" for 0x4009cf>, <DisassemblerInsn "mov" for 0x4009d2>, <DisassemblerInsn "mov" for 0x4009d9>, <DisassemblerInsn "add" for 0x4009db>, <DisassemblerInsn "sar" for 0x4009de>, <DisassemblerInsn "movsxd" for 0x4009e1>, <DisassemblerInsn "mov" for 0x4009e4>, <DisassemblerInsn "ror" for 0x4009e7>, <DisassemblerInsn "ror" for 0x4009eb>, <DisassemblerInsn "ror" for 0x4009ee>, <DisassemblerInsn "shl" for 0x4009f2>, <DisassemblerInsn "mov" for 0x4009f4>, <DisassemblerInsn "shr" for 0x4009fb>, <DisassemblerInsn "mov" for 0x4009fe>, <DisassemblerInsn "add" for 0x400a01>, <DisassemblerInsn "shl" for 0x400a05>, <DisassemblerInsn "sar" for 0x400a08>, <DisassemblerInsn "movsxd" for 0x400a0c>, <DisassemblerInsn "mov" for 0x400a0f>, <DisassemblerInsn "ror" for 0x400a13>, <DisassemblerInsn "ror" for 0x400a17>, <DisassemblerInsn "ror" for 0x400a1a>, <DisassemblerInsn "shl" for 0x400a1e>, <DisassemblerInsn "mov" for 0x400a20>, <DisassemblerInsn "shr" for 0x400a28>, <DisassemblerInsn "add" for 0x400a2b>, <DisassemblerInsn "mov" for 0x400a2e>, <DisassemblerInsn "mov" for 0x400a35>, <DisassemblerInsn "or" for 0x400a37>, <DisassemblerInsn "mov" for 0x400a39>, <DisassemblerInsn "shl" for 0x400a40>, <DisassemblerInsn "mov" for 0x400a43>, <DisassemblerInsn "add" for 0x400a4a>, <DisassemblerInsn "mov" for 0x400a4c>, <DisassemblerInsn "mov" for 0x400a4e>, <DisassemblerInsn "cmp" for 0x400a55>, <DisassemblerInsn "jle" for 0x400a57>]'}, {'block_Idx': 230, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ae0>, <DisassemblerInsn "mov" for 0x401ae8>, <DisassemblerInsn "mov" for 0x401af0>, <DisassemblerInsn "mov" for 0x401af8>, <DisassemblerInsn "mov" for 0x401aff>, <DisassemblerInsn "add" for 0x401b02>, <DisassemblerInsn "mov" for 0x401b06>, <DisassemblerInsn "movsxd" for 0x401b0e>, <DisassemblerInsn "cmp" for 0x401b11>, <DisassemblerInsn "mov" for 0x401b14>, <DisassemblerInsn "jl" for 0x401b1c>]'}, {'block_Idx': 168, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40166d>]'}, {'block_Idx': 25, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ad0>, <DisassemblerInsn "cmp" for 0x400ad7>, <DisassemblerInsn "je" for 0x400ada>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400910>, <DisassemblerInsn "mov" for 0x400918>, <DisassemblerInsn "mov" for 0x400920>, <DisassemblerInsn "mov" for 0x400928>, <DisassemblerInsn "mov" for 0x40092e>, <DisassemblerInsn "add" for 0x400931>, <DisassemblerInsn "mov" for 0x400935>, <DisassemblerInsn "mov" for 0x40093d>, <DisassemblerInsn "add" for 0x400940>, <DisassemblerInsn "mov" for 0x400944>, <DisassemblerInsn "mov" for 0x40094c>, <DisassemblerInsn "mov" for 0x400954>, <DisassemblerInsn "mov" for 0x400959>, <DisassemblerInsn "mov" for 0x400961>, <DisassemblerInsn "mov" for 0x400968>, <DisassemblerInsn "mov" for 0x400970>, <DisassemblerInsn "mov" for 0x400978>, <DisassemblerInsn "mov" for 0x40097f>, <DisassemblerInsn "mov" for 0x400987>, <DisassemblerInsn "sar" for 0x400989>, <DisassemblerInsn "movsxd" for 0x40098c>, <DisassemblerInsn "mov" for 0x40098f>, <DisassemblerInsn "mov" for 0x400992>, <DisassemblerInsn "and" for 0x400994>, <DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "movzx" for 0x40099e>, <DisassemblerInsn "mov" for 0x4009a1>, <DisassemblerInsn "mov" for 0x4009a8>, <DisassemblerInsn "add" for 0x4009aa>, <DisassemblerInsn "mov" for 0x4009ad>, <DisassemblerInsn "sar" for 0x4009af>, <DisassemblerInsn "movsxd" for 0x4009b2>, <DisassemblerInsn "mov" for 0x4009b5>, <DisassemblerInsn "ror" for 0x4009b8>, <DisassemblerInsn "ror" for 0x4009bc>, <DisassemblerInsn "ror" for 0x4009bf>, <DisassemblerInsn "and" for 0x4009c3>, <DisassemblerInsn "shl" for 0x4009c6>, <DisassemblerInsn "mov" for 0x4009c8>, <DisassemblerInsn "shr" for 0x4009cf>, <DisassemblerInsn "mov" for 0x4009d2>, <DisassemblerInsn "mov" for 0x4009d9>, <DisassemblerInsn "add" for 0x4009db>, <DisassemblerInsn "sar" for 0x4009de>, <DisassemblerInsn "movsxd" for 0x4009e1>, <DisassemblerInsn "mov" for 0x4009e4>, <DisassemblerInsn "ror" for 0x4009e7>, <DisassemblerInsn "ror" for 0x4009eb>, <DisassemblerInsn "ror" for 0x4009ee>, <DisassemblerInsn "shl" for 0x4009f2>, <DisassemblerInsn "mov" for 0x4009f4>, <DisassemblerInsn "shr" for 0x4009fb>, <DisassemblerInsn "mov" for 0x4009fe>, <DisassemblerInsn "add" for 0x400a01>, <DisassemblerInsn "shl" for 0x400a05>, <DisassemblerInsn "sar" for 0x400a08>, <DisassemblerInsn "movsxd" for 0x400a0c>, <DisassemblerInsn "mov" for 0x400a0f>, <DisassemblerInsn "ror" for 0x400a13>, <DisassemblerInsn "ror" for 0x400a17>, <DisassemblerInsn "ror" for 0x400a1a>, <DisassemblerInsn "shl" for 0x400a1e>, <DisassemblerInsn "mov" for 0x400a20>, <DisassemblerInsn "shr" for 0x400a28>, <DisassemblerInsn "add" for 0x400a2b>, <DisassemblerInsn "mov" for 0x400a2e>, <DisassemblerInsn "mov" for 0x400a35>, <DisassemblerInsn "or" for 0x400a37>, <DisassemblerInsn "mov" for 0x400a39>, <DisassemblerInsn "shl" for 0x400a40>, <DisassemblerInsn "mov" for 0x400a43>, <DisassemblerInsn "add" for 0x400a4a>, <DisassemblerInsn "mov" for 0x400a4c>, <DisassemblerInsn "mov" for 0x400a4e>, <DisassemblerInsn "cmp" for 0x400a55>, <DisassemblerInsn "jle" for 0x400a57>]'}, {'block_Idx': 46, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400da1>, <DisassemblerInsn "add" for 0x400da8>, <DisassemblerInsn "mov" for 0x400dab>, <DisassemblerInsn "mov" for 0x400db0>, <DisassemblerInsn "mov" for 0x400db7>, <DisassemblerInsn "jmp" for 0x400dbe>]'}, {'block_Idx': 73, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40102e>, <DisassemblerInsn "mov" for 0x401035>, <DisassemblerInsn "mov" for 0x40103c>, <DisassemblerInsn "mov" for 0x401041>, <DisassemblerInsn "shr" for 0x401043>, <DisassemblerInsn "mov" for 0x401045>, <DisassemblerInsn "and" for 0x401047>, <DisassemblerInsn "mov" for 0x401049>, <DisassemblerInsn "mov" for 0x40104b>, <DisassemblerInsn "mov" for 0x401050>, <DisassemblerInsn "mov" for 0x401058>, <DisassemblerInsn "mov" for 0x401060>, <DisassemblerInsn "mov" for 0x401067>, <DisassemblerInsn "mov" for 0x40106f>, <DisassemblerInsn "mov" for 0x401077>, <DisassemblerInsn "mov" for 0x40107e>, <DisassemblerInsn "mov" for 0x401085>, <DisassemblerInsn "mov" for 0x40108d>, <DisassemblerInsn "cmp" for 0x401095>, <DisassemblerInsn "jle" for 0x401098>]'}, {'block_Idx': 87, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401150>, <DisassemblerInsn "test" for 0x401157>, <DisassemblerInsn "je" for 0x401159>]'}, {'block_Idx': 342, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fcf>, <DisassemblerInsn "mov" for 0x401fd6>, <DisassemblerInsn "mov" for 0x401fde>, <DisassemblerInsn "mov" for 0x401fe5>, <DisassemblerInsn "sub" for 0x401fec>, <DisassemblerInsn "mov" for 0x401fee>, <DisassemblerInsn "add" for 0x401ff0>, <DisassemblerInsn "mov" for 0x401ff3>, <DisassemblerInsn "mov" for 0x401ff5>, <DisassemblerInsn "mov" for 0x401ff8>, <DisassemblerInsn "add" for 0x401fff>, <DisassemblerInsn "mov" for 0x402001>, <DisassemblerInsn "cmp" for 0x402008>, <DisassemblerInsn "je" for 0x40200b>]'}, {'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4006d2>, <DisassemblerInsn "mov" for 0x4006d9>, <DisassemblerInsn "mov" for 0x4006e0>, <DisassemblerInsn "mov" for 0x4006e7>, <DisassemblerInsn "mov" for 0x4006ee>, <DisassemblerInsn "mov" for 0x4006f5>, <DisassemblerInsn "mov" for 0x4006fc>, <DisassemblerInsn "add" for 0x4006fe>, <DisassemblerInsn "add" for 0x400700>, <DisassemblerInsn "cmp" for 0x400702>, <DisassemblerInsn "mov" for 0x400704>, <DisassemblerInsn "mov" for 0x40070b>, <DisassemblerInsn "jbe" for 0x400712>]'}, {'block_Idx': 140, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40139c>, <DisassemblerInsn "sub" for 0x4013a3>, <DisassemblerInsn "je" for 0x4013a6>]'}, {'block_Idx': 116, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4012c0>]'}, {'block_Idx': 172, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402924>, <DisassemblerInsn "mov" for 0x40292c>, <DisassemblerInsn "mov" for 0x40292e>, <DisassemblerInsn "cmp" for 0x402935>, <DisassemblerInsn "mov" for 0x402938>, <DisassemblerInsn "jle" for 0x40293f>]'}, {'block_Idx': 372, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40239c>, <DisassemblerInsn "mov" for 0x4023a3>, <DisassemblerInsn "mov" for 0x4023ab>, <DisassemblerInsn "xor" for 0x4023ae>, <DisassemblerInsn "lea" for 0x4023b0>, <DisassemblerInsn "mov" for 0x4023b7>, <DisassemblerInsn "call" for 0x4023b9>]'}, {'block_Idx': 371, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40205b>, <DisassemblerInsn "cmp" for 0x402062>, <DisassemblerInsn "jle" for 0x402065>]'}, {'block_Idx': 76, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40253e>, <DisassemblerInsn "mov" for 0x402546>, <DisassemblerInsn "xor" for 0x40254a>, <DisassemblerInsn "lea" for 0x40254c>, <DisassemblerInsn "mov" for 0x402553>, <DisassemblerInsn "call" for 0x402555>]'}, {'block_Idx': 236, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40250c>, <DisassemblerInsn "mov" for 0x402513>, <DisassemblerInsn "mov" for 0x40251b>, <DisassemblerInsn "mov" for 0x402523>, <DisassemblerInsn "mov" for 0x402525>, <DisassemblerInsn "mov" for 0x402527>, <DisassemblerInsn "mov" for 0x40252e>, <DisassemblerInsn "mov" for 0x402535>, <DisassemblerInsn "jmp" for 0x40253c>]'}, {'block_Idx': 160, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40154e>]'}, {'block_Idx': 369, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402200>, <DisassemblerInsn "mov" for 0x402208>, <DisassemblerInsn "mov" for 0x40220f>, <DisassemblerInsn "mov" for 0x402217>, <DisassemblerInsn "mov" for 0x40221f>, <DisassemblerInsn "add" for 0x402227>, <DisassemblerInsn "mov" for 0x40222a>, <DisassemblerInsn "mov" for 0x402231>, <DisassemblerInsn "add" for 0x402233>, <DisassemblerInsn "mov" for 0x402236>, <DisassemblerInsn "mov" for 0x40223d>, <DisassemblerInsn "add" for 0x402240>, <DisassemblerInsn "mov" for 0x402244>, <DisassemblerInsn "cmp" for 0x40224c>, <DisassemblerInsn "mov" for 0x40224f>, <DisassemblerInsn "mov" for 0x402257>, <DisassemblerInsn "mov" for 0x40225e>, <DisassemblerInsn "je" for 0x402265>]'}, {'block_Idx': 176, 'blockInsts': '[<DisassemblerInsn "lea" for 0x402bf7>, <DisassemblerInsn "lea" for 0x402bfe>, <DisassemblerInsn "mov" for 0x402c05>, <DisassemblerInsn "lea" for 0x402c0a>, <DisassemblerInsn "call" for 0x402c11>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400817>, <DisassemblerInsn "mov" for 0x40081f>, <DisassemblerInsn "mov" for 0x400826>, <DisassemblerInsn "mov" for 0x40082d>, <DisassemblerInsn "mov" for 0x400835>, <DisassemblerInsn "mov" for 0x40083c>, <DisassemblerInsn "mov" for 0x400843>, <DisassemblerInsn "shl" for 0x400845>, <DisassemblerInsn "xor" for 0x400848>, <DisassemblerInsn "cmp" for 0x40084a>, <DisassemblerInsn "cmovl" for 0x40084d>, <DisassemblerInsn "mov" for 0x400851>, <DisassemblerInsn "xor" for 0x400859>, <DisassemblerInsn "cmp" for 0x40085b>, <DisassemblerInsn "cmovl" for 0x40085e>, <DisassemblerInsn "xor" for 0x400861>, <DisassemblerInsn "cmp" for 0x400864>, <DisassemblerInsn "mov" for 0x400867>, <DisassemblerInsn "cmovl" for 0x400869>, <DisassemblerInsn "mov" for 0x40086d>, <DisassemblerInsn "add" for 0x400870>, <DisassemblerInsn "mov" for 0x400874>, <DisassemblerInsn "mov" for 0x40087c>, <DisassemblerInsn "mov" for 0x400880>, <DisassemblerInsn "add" for 0x400883>, <DisassemblerInsn "mov" for 0x400887>, <DisassemblerInsn "mov" for 0x40088f>, <DisassemblerInsn "mov" for 0x400892>, <DisassemblerInsn "add" for 0x400894>, <DisassemblerInsn "mov" for 0x400897>, <DisassemblerInsn "add" for 0x40089a>, <DisassemblerInsn "mov" for 0x40089e>, <DisassemblerInsn "mov" for 0x4008a6>, <DisassemblerInsn "mov" for 0x4008aa>, <DisassemblerInsn "add" for 0x4008ad>, <DisassemblerInsn "mov" for 0x4008b1>, <DisassemblerInsn "mov" for 0x4008b9>, <DisassemblerInsn "cmp" for 0x4008c0>, <DisassemblerInsn "jl" for 0x4008c3>]'}, {'block_Idx': 67, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400deb>]'}, {'block_Idx': 124, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013b1>, <DisassemblerInsn "mov" for 0x4013b8>, <DisassemblerInsn "mov" for 0x4013c0>, <DisassemblerInsn "sar" for 0x4013c2>, <DisassemblerInsn "movsxd" for 0x4013c5>, <DisassemblerInsn "mov" for 0x4013c8>, <DisassemblerInsn "ror" for 0x4013cb>, <DisassemblerInsn "ror" for 0x4013cf>, <DisassemblerInsn "ror" for 0x4013d2>, <DisassemblerInsn "and" for 0x4013d6>, <DisassemblerInsn "shl" for 0x4013d9>, <DisassemblerInsn "mov" for 0x4013db>, <DisassemblerInsn "shr" for 0x4013e2>, <DisassemblerInsn "add" for 0x4013e5>, <DisassemblerInsn "imul" for 0x4013e8>, <DisassemblerInsn "mov" for 0x4013ee>, <DisassemblerInsn "mov" for 0x4013f5>, <DisassemblerInsn "jmp" for 0x4013fc>]'}, {'block_Idx': 166, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402dad>, <DisassemblerInsn "cmp" for 0x402db4>, <DisassemblerInsn "jne" for 0x402db7>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40076a>, <DisassemblerInsn "mov" for 0x400771>, <DisassemblerInsn "mov" for 0x400779>, <DisassemblerInsn "mov" for 0x400781>, <DisassemblerInsn "mov" for 0x400788>, <DisassemblerInsn "mov" for 0x40078f>, <DisassemblerInsn "add" for 0x400796>, <DisassemblerInsn "mov" for 0x400798>, <DisassemblerInsn "add" for 0x40079a>, <DisassemblerInsn "movsxd" for 0x40079d>, <DisassemblerInsn "call" for 0x4007a0>]'}, {'block_Idx': 445, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4039bb>, <DisassemblerInsn "mov" for 0x4039bf>, <DisassemblerInsn "mov" for 0x4039c5>, <DisassemblerInsn "sar" for 0x4039cb>, <DisassemblerInsn "mov" for 0x4039cd>, <DisassemblerInsn "movsxd" for 0x4039d3>, <DisassemblerInsn "add" for 0x4039d6>, <DisassemblerInsn "mov" for 0x4039d9>, <DisassemblerInsn "xor" for 0x4039dc>, <DisassemblerInsn "mov" for 0x4039de>, <DisassemblerInsn "mov" for 0x4039e4>, <DisassemblerInsn "mov" for 0x4039ea>, <DisassemblerInsn "pop" for 0x4039ed>, <DisassemblerInsn "ret" for 0x4039ee>]'}, {'block_Idx': 102, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401268>, <DisassemblerInsn "mov" for 0x401270>, <DisassemblerInsn "mov" for 0x401277>, <DisassemblerInsn "mov" for 0x40127e>, <DisassemblerInsn "mov" for 0x401285>, <DisassemblerInsn "mov" for 0x40128c>, <DisassemblerInsn "mov" for 0x40128e>, <DisassemblerInsn "cmp" for 0x401295>, <DisassemblerInsn "jle" for 0x401297>]'}, {'block_Idx': 159, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40166f>, <DisassemblerInsn "mov" for 0x401676>, <DisassemblerInsn "or" for 0x40167d>, <DisassemblerInsn "sub" for 0x401680>, <DisassemblerInsn "mov" for 0x401683>, <DisassemblerInsn "je" for 0x40168a>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40057b>, <DisassemblerInsn "mov" for 0x400582>, <DisassemblerInsn "mov" for 0x400589>, <DisassemblerInsn "xor" for 0x400590>, <DisassemblerInsn "sub" for 0x400592>, <DisassemblerInsn "cmovb" for 0x400594>, <DisassemblerInsn "cmp" for 0x400597>, <DisassemblerInsn "cmovb" for 0x400599>, <DisassemblerInsn "mov" for 0x40059c>, <DisassemblerInsn "mov" for 0x4005a3>, <DisassemblerInsn "mov" for 0x4005aa>, <DisassemblerInsn "mov" for 0x4005b1>, <DisassemblerInsn "mov" for 0x4005b8>, <DisassemblerInsn "add" for 0x4005ba>, <DisassemblerInsn "mov" for 0x4005bc>, <DisassemblerInsn "mov" for 0x4005c3>, <DisassemblerInsn "cmp" for 0x4005c8>, <DisassemblerInsn "mov" for 0x4005ca>, <DisassemblerInsn "jb" for 0x4005d1>]'}, {'block_Idx': 222, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4018f0>]'}, {'block_Idx': 44, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d6c>]'}, {'block_Idx': 313, 'blockInsts': '[<DisassemblerInsn "sub" for 0x4039ef>, <DisassemblerInsn "mov" for 0x4039f6>, <DisassemblerInsn "mov" for 0x4039fd>, <DisassemblerInsn "mov" for 0x403a04>, <DisassemblerInsn "mov" for 0x403a0c>, <DisassemblerInsn "add" for 0x403a0f>, <DisassemblerInsn "mov" for 0x403a13>, <DisassemblerInsn "mov" for 0x403a1b>, <DisassemblerInsn "mov" for 0x403a1e>, <DisassemblerInsn "mov" for 0x403a25>, <DisassemblerInsn "mov" for 0x403a29>, <DisassemblerInsn "mov" for 0x403a31>, <DisassemblerInsn "sar" for 0x403a33>, <DisassemblerInsn "movsxd" for 0x403a36>, <DisassemblerInsn "mov" for 0x403a39>, <DisassemblerInsn "ror" for 0x403a3c>, <DisassemblerInsn "ror" for 0x403a40>, <DisassemblerInsn "ror" for 0x403a43>, <DisassemblerInsn "and" for 0x403a47>, <DisassemblerInsn "shl" for 0x403a4a>, <DisassemblerInsn "mov" for 0x403a4c>, <DisassemblerInsn "shr" for 0x403a53>, <DisassemblerInsn "mov" for 0x403a56>, <DisassemblerInsn "add" for 0x403a5d>, <DisassemblerInsn "mov" for 0x403a60>, <DisassemblerInsn "mov" for 0x403a67>, <DisassemblerInsn "cmp" for 0x403a6a>, <DisassemblerInsn "jle" for 0x403a6d>]'}, {'block_Idx': 100, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401169>]'}, {'block_Idx': 258, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402419>]'}, {'block_Idx': 118, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014b6>, <DisassemblerInsn "mov" for 0x4014be>, <DisassemblerInsn "mov" for 0x4014c5>, <DisassemblerInsn "mov" for 0x4014cc>, <DisassemblerInsn "add" for 0x4014d3>, <DisassemblerInsn "mov" for 0x4014d6>, <DisassemblerInsn "xor" for 0x4014d8>, <DisassemblerInsn "call" for 0x4014da>]'}, {'block_Idx': 41, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aec>, <DisassemblerInsn "cmp" for 0x400af4>, <DisassemblerInsn "jne" for 0x400af7>]'}, {'block_Idx': 90, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40255a>, <DisassemblerInsn "mov" for 0x402562>, <DisassemblerInsn "mov" for 0x40256c>, <DisassemblerInsn "mov" for 0x402576>, <DisassemblerInsn "mov" for 0x40257b>, <DisassemblerInsn "jmp" for 0x402582>]'}, {'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4005a3>, <DisassemblerInsn "mov" for 0x4005aa>, <DisassemblerInsn "mov" for 0x4005b1>, <DisassemblerInsn "mov" for 0x4005b8>, <DisassemblerInsn "add" for 0x4005ba>, <DisassemblerInsn "mov" for 0x4005bc>, <DisassemblerInsn "mov" for 0x4005c3>, <DisassemblerInsn "cmp" for 0x4005c8>, <DisassemblerInsn "mov" for 0x4005ca>, <DisassemblerInsn "jb" for 0x4005d1>]'}, {'block_Idx': 98, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401194>]'}, {'block_Idx': 105, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012c5>, <DisassemblerInsn "mov" for 0x4012cc>, <DisassemblerInsn "mov" for 0x4012d3>, <DisassemblerInsn "mov" for 0x4012da>, <DisassemblerInsn "mov" for 0x4012e2>, <DisassemblerInsn "add" for 0x4012ea>, <DisassemblerInsn "mov" for 0x4012ee>, <DisassemblerInsn "mov" for 0x4012f6>, <DisassemblerInsn "mov" for 0x4012fb>, <DisassemblerInsn "test" for 0x401300>, <DisassemblerInsn "cmovne" for 0x401304>, <DisassemblerInsn "imul" for 0x401307>, <DisassemblerInsn "imul" for 0x40130a>, <DisassemblerInsn "cmp" for 0x40130d>, <DisassemblerInsn "jg" for 0x40130f>]'}, {'block_Idx': 380, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40226b>]'}, {'block_Idx': 59, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e58>, <DisassemblerInsn "movsxd" for 0x400e5f>, <DisassemblerInsn "lea" for 0x400e62>, <DisassemblerInsn "shl" for 0x400e69>, <DisassemblerInsn "add" for 0x400e6d>, <DisassemblerInsn "mov" for 0x400e70>, <DisassemblerInsn "jmp" for 0x400e78>]'}, {'block_Idx': 188, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402dda>, <DisassemblerInsn "mov" for 0x402de2>, <DisassemblerInsn "mov" for 0x402dea>, <DisassemblerInsn "mov" for 0x402df1>, <DisassemblerInsn "mov" for 0x402df9>, <DisassemblerInsn "mov" for 0x402dfd>, <DisassemblerInsn "mov" for 0x402e02>, <DisassemblerInsn "mov" for 0x402e06>, <DisassemblerInsn "xor" for 0x402e0b>, <DisassemblerInsn "mov" for 0x402e0d>, <DisassemblerInsn "mov" for 0x402e11>, <DisassemblerInsn "mov" for 0x402e16>, <DisassemblerInsn "mov" for 0x402e1b>, <DisassemblerInsn "jmp" for 0x402e23>]'}, {'block_Idx': 206, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4027ef>, <DisassemblerInsn "mov" for 0x4027f7>, <DisassemblerInsn "mov" for 0x4027fe>, <DisassemblerInsn "mov" for 0x402806>, <DisassemblerInsn "mov" for 0x40280e>, <DisassemblerInsn "mov" for 0x402816>, <DisassemblerInsn "mov" for 0x40281e>, <DisassemblerInsn "add" for 0x402825>, <DisassemblerInsn "movsxd" for 0x402829>, <DisassemblerInsn "cmp" for 0x40282c>, <DisassemblerInsn "mov" for 0x40282f>, <DisassemblerInsn "mov" for 0x402836>, <DisassemblerInsn "mov" for 0x40283e>, <DisassemblerInsn "mov" for 0x402846>, <DisassemblerInsn "jl" for 0x40284e>]'}, {'block_Idx': 130, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40138e>, <DisassemblerInsn "sub" for 0x401395>, <DisassemblerInsn "je" for 0x401398>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018f5>, <DisassemblerInsn "test" for 0x4018fc>, <DisassemblerInsn "je" for 0x4018fe>]'}, {'block_Idx': 252, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401bbc>, <DisassemblerInsn "mov" for 0x401bc4>, <DisassemblerInsn "mov" for 0x401bcb>, <DisassemblerInsn "mov" for 0x401bd2>, <DisassemblerInsn "mov" for 0x401bda>, <DisassemblerInsn "shr" for 0x401be2>, <DisassemblerInsn "mov" for 0x401be6>, <DisassemblerInsn "add" for 0x401be9>, <DisassemblerInsn "mov" for 0x401bed>, <DisassemblerInsn "add" for 0x401bef>, <DisassemblerInsn "mov" for 0x401bf2>, <DisassemblerInsn "shl" for 0x401bf9>, <DisassemblerInsn "mov" for 0x401bfc>, <DisassemblerInsn "mov" for 0x401c03>, <DisassemblerInsn "sar" for 0x401c0b>, <DisassemblerInsn "movsxd" for 0x401c0f>, <DisassemblerInsn "mov" for 0x401c12>, <DisassemblerInsn "ror" for 0x401c16>, <DisassemblerInsn "ror" for 0x401c1a>, <DisassemblerInsn "ror" for 0x401c1d>, <DisassemblerInsn "shl" for 0x401c21>, <DisassemblerInsn "mov" for 0x401c23>, <DisassemblerInsn "mov" for 0x401c2a>, <DisassemblerInsn "xor" for 0x401c2d>, <DisassemblerInsn "sub" for 0x401c2f>, <DisassemblerInsn "shr" for 0x401c32>, <DisassemblerInsn "mov" for 0x401c34>, <DisassemblerInsn "add" for 0x401c3b>, <DisassemblerInsn "mov" for 0x401c3d>, <DisassemblerInsn "or" for 0x401c3f>, <DisassemblerInsn "mov" for 0x401c41>, <DisassemblerInsn "mov" for 0x401c48>, <DisassemblerInsn "mov" for 0x401c50>, <DisassemblerInsn "mov" for 0x401c58>, <DisassemblerInsn "mov" for 0x401c5f>, <DisassemblerInsn "mov" for 0x401c66>, <DisassemblerInsn "sub" for 0x401c6b>, <DisassemblerInsn "mov" for 0x401c6d>, <DisassemblerInsn "shl" for 0x401c74>, <DisassemblerInsn "mov" for 0x401c76>, <DisassemblerInsn "sar" for 0x401c7d>, <DisassemblerInsn "mov" for 0x401c7f>, <DisassemblerInsn "mov" for 0x401c87>, <DisassemblerInsn "mov" for 0x401c8a>, <DisassemblerInsn "add" for 0x401c8d>, <DisassemblerInsn "mov" for 0x401c91>, <DisassemblerInsn "movsxd" for 0x401c99>, <DisassemblerInsn "cmp" for 0x401c9c>, <DisassemblerInsn "jge" for 0x401c9f>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d36>, <DisassemblerInsn "mov" for 0x400d3d>, <DisassemblerInsn "mov" for 0x400d45>, <DisassemblerInsn "add" for 0x400d48>, <DisassemblerInsn "xor" for 0x400d4b>, <DisassemblerInsn "cmp" for 0x400d4d>, <DisassemblerInsn "mov" for 0x400d4f>, <DisassemblerInsn "mov" for 0x400d51>, <DisassemblerInsn "mov" for 0x400d58>, <DisassemblerInsn "mov" for 0x400d5f>, <DisassemblerInsn "je" for 0x400d66>]'}, {'block_Idx': 303, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x401f3b>, <DisassemblerInsn "jl" for 0x401f3e>]'}, {'block_Idx': 144, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401553>, <DisassemblerInsn "mov" for 0x40155a>, <DisassemblerInsn "mov" for 0x401561>, <DisassemblerInsn "mov" for 0x401569>, <DisassemblerInsn "mov" for 0x401571>, <DisassemblerInsn "mov" for 0x401579>, <DisassemblerInsn "mov" for 0x401581>, <DisassemblerInsn "mov" for 0x401589>, <DisassemblerInsn "mov" for 0x401591>, <DisassemblerInsn "add" for 0x401594>, <DisassemblerInsn "mov" for 0x401598>, <DisassemblerInsn "mov" for 0x4015a0>, <DisassemblerInsn "mov" for 0x4015a4>, <DisassemblerInsn "mov" for 0x4015a8>, <DisassemblerInsn "mov" for 0x4015ab>, <DisassemblerInsn "add" for 0x4015ae>, <DisassemblerInsn "mov" for 0x4015b2>, <DisassemblerInsn "mov" for 0x4015ba>, <DisassemblerInsn "mov" for 0x4015bd>, <DisassemblerInsn "cmp" for 0x4015bf>, <DisassemblerInsn "mov" for 0x4015c2>, <DisassemblerInsn "mov" for 0x4015c9>, <DisassemblerInsn "mov" for 0x4015d0>, <DisassemblerInsn "jle" for 0x4015d7>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402fce>, <DisassemblerInsn "mov" for 0x402fd6>, <DisassemblerInsn "mov" for 0x402fdd>, <DisassemblerInsn "mov" for 0x402fe1>, <DisassemblerInsn "sub" for 0x402fe5>, <DisassemblerInsn "xor" for 0x402fe7>, <DisassemblerInsn "lea" for 0x402fe9>, <DisassemblerInsn "mov" for 0x402ff0>, <DisassemblerInsn "call" for 0x402ff2>]'}, {'block_Idx': 261, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c48>, <DisassemblerInsn "mov" for 0x401c50>, <DisassemblerInsn "mov" for 0x401c58>, <DisassemblerInsn "mov" for 0x401c5f>, <DisassemblerInsn "mov" for 0x401c66>, <DisassemblerInsn "sub" for 0x401c6b>, <DisassemblerInsn "mov" for 0x401c6d>, <DisassemblerInsn "shl" for 0x401c74>, <DisassemblerInsn "mov" for 0x401c76>, <DisassemblerInsn "sar" for 0x401c7d>, <DisassemblerInsn "mov" for 0x401c7f>, <DisassemblerInsn "mov" for 0x401c87>, <DisassemblerInsn "mov" for 0x401c8a>, <DisassemblerInsn "add" for 0x401c8d>, <DisassemblerInsn "mov" for 0x401c91>, <DisassemblerInsn "movsxd" for 0x401c99>, <DisassemblerInsn "cmp" for 0x401c9c>, <DisassemblerInsn "jge" for 0x401c9f>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b54>, <DisassemblerInsn "mov" for 0x400b5c>, <DisassemblerInsn "mov" for 0x400b63>, <DisassemblerInsn "add" for 0x400b65>, <DisassemblerInsn "mov" for 0x400b67>, <DisassemblerInsn "mov" for 0x400b69>, <DisassemblerInsn "mov" for 0x400b70>, <DisassemblerInsn "shr" for 0x400b75>, <DisassemblerInsn "mov" for 0x400b77>, <DisassemblerInsn "and" for 0x400b7e>, <DisassemblerInsn "cmp" for 0x400b80>, <DisassemblerInsn "jne" for 0x400b83>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40068d>, <DisassemblerInsn "mov" for 0x400695>, <DisassemblerInsn "mov" for 0x40069d>, <DisassemblerInsn "mov" for 0x4006a5>, <DisassemblerInsn "mov" for 0x4006a8>, <DisassemblerInsn "mov" for 0x4006b0>, <DisassemblerInsn "mov" for 0x4006b7>, <DisassemblerInsn "mov" for 0x4006b9>, <DisassemblerInsn "mov" for 0x4006bb>, <DisassemblerInsn "mov" for 0x4006bd>, <DisassemblerInsn "mov" for 0x4006c4>, <DisassemblerInsn "mov" for 0x4006cb>, <DisassemblerInsn "mov" for 0x4006d2>, <DisassemblerInsn "mov" for 0x4006d9>, <DisassemblerInsn "mov" for 0x4006e0>, <DisassemblerInsn "mov" for 0x4006e7>, <DisassemblerInsn "mov" for 0x4006ee>, <DisassemblerInsn "mov" for 0x4006f5>, <DisassemblerInsn "mov" for 0x4006fc>, <DisassemblerInsn "add" for 0x4006fe>, <DisassemblerInsn "add" for 0x400700>, <DisassemblerInsn "cmp" for 0x400702>, <DisassemblerInsn "mov" for 0x400704>, <DisassemblerInsn "mov" for 0x40070b>, <DisassemblerInsn "jbe" for 0x400712>]'}, {'block_Idx': 217, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d51>, <DisassemblerInsn "mov" for 0x402d59>, <DisassemblerInsn "mov" for 0x402d60>, <DisassemblerInsn "mov" for 0x402d68>, <DisassemblerInsn "add" for 0x402d70>, <DisassemblerInsn "movsxd" for 0x402d74>, <DisassemblerInsn "cmp" for 0x402d77>, <DisassemblerInsn "mov" for 0x402d7a>, <DisassemblerInsn "mov" for 0x402d7c>, <DisassemblerInsn "mov" for 0x402d83>, <DisassemblerInsn "mov" for 0x402d8b>, <DisassemblerInsn "mov" for 0x402d93>, <DisassemblerInsn "mov" for 0x402d9b>, <DisassemblerInsn "jl" for 0x402da2>]'}, {'block_Idx': 145, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40152c>, <DisassemblerInsn "mov" for 0x401533>, <DisassemblerInsn "mov" for 0x40153b>, <DisassemblerInsn "xor" for 0x40153e>, <DisassemblerInsn "lea" for 0x401540>, <DisassemblerInsn "mov" for 0x401547>, <DisassemblerInsn "call" for 0x401549>]'}, {'block_Idx': 146, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401448>, <DisassemblerInsn "mov" for 0x40144f>, <DisassemblerInsn "mov" for 0x401457>, <DisassemblerInsn "sar" for 0x401459>, <DisassemblerInsn "movsxd" for 0x40145c>, <DisassemblerInsn "mov" for 0x40145f>, <DisassemblerInsn "ror" for 0x401462>, <DisassemblerInsn "ror" for 0x401466>, <DisassemblerInsn "ror" for 0x401469>, <DisassemblerInsn "and" for 0x40146d>, <DisassemblerInsn "shl" for 0x401470>, <DisassemblerInsn "mov" for 0x401472>, <DisassemblerInsn "shr" for 0x401479>, <DisassemblerInsn "add" for 0x40147c>, <DisassemblerInsn "imul" for 0x40147f>, <DisassemblerInsn "mov" for 0x401482>, <DisassemblerInsn "mov" for 0x401489>, <DisassemblerInsn "jmp" for 0x401490>]'}, {'block_Idx': 113, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b2d>, <DisassemblerInsn "call" for 0x400b35>]'}, {'block_Idx': 80, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401116>, <DisassemblerInsn "mov" for 0x40111e>, <DisassemblerInsn "mov" for 0x401126>, <DisassemblerInsn "cmp" for 0x40112d>, <DisassemblerInsn "jge" for 0x401131>]'}, {'block_Idx': 193, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4029be>, <DisassemblerInsn "mov" for 0x4029c6>, <DisassemblerInsn "mov" for 0x4029ce>, <DisassemblerInsn "mov" for 0x4029d6>, <DisassemblerInsn "mov" for 0x4029de>, <DisassemblerInsn "mov" for 0x4029e6>, <DisassemblerInsn "mov" for 0x4029ee>, <DisassemblerInsn "mov" for 0x4029f6>, <DisassemblerInsn "mov" for 0x4029fe>, <DisassemblerInsn "mov" for 0x402a06>, <DisassemblerInsn "mov" for 0x402a0e>, <DisassemblerInsn "mov" for 0x402a16>, <DisassemblerInsn "mov" for 0x402a1e>, <DisassemblerInsn "mov" for 0x402a21>, <DisassemblerInsn "mov" for 0x402a28>, <DisassemblerInsn "mov" for 0x402a2b>, <DisassemblerInsn "mov" for 0x402a32>, <DisassemblerInsn "mov" for 0x402a34>, <DisassemblerInsn "mov" for 0x402a36>, <DisassemblerInsn "shl" for 0x402a3d>, <DisassemblerInsn "mov" for 0x402a3f>, <DisassemblerInsn "cmp" for 0x402a46>, <DisassemblerInsn "je" for 0x402a49>]'}, {'block_Idx': 240, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d37>, <DisassemblerInsn "mov" for 0x401d3e>, <DisassemblerInsn "mov" for 0x401d45>, <DisassemblerInsn "mov" for 0x401d4c>, <DisassemblerInsn "mov" for 0x401d4e>, <DisassemblerInsn "xor" for 0x401d56>, <DisassemblerInsn "mov" for 0x401d58>, <DisassemblerInsn "mov" for 0x401d5f>, <DisassemblerInsn "mov" for 0x401d66>, <DisassemblerInsn "mov" for 0x401d6e>, <DisassemblerInsn "mov" for 0x401d76>, <DisassemblerInsn "mov" for 0x401d7d>, <DisassemblerInsn "mov" for 0x401d84>, <DisassemblerInsn "mov" for 0x401d8c>, <DisassemblerInsn "mov" for 0x401d94>, <DisassemblerInsn "mov" for 0x401d9b>, <DisassemblerInsn "mov" for 0x401da2>, <DisassemblerInsn "sar" for 0x401da4>, <DisassemblerInsn "movsxd" for 0x401da7>, <DisassemblerInsn "mov" for 0x401daa>, <DisassemblerInsn "ror" for 0x401dad>, <DisassemblerInsn "ror" for 0x401db1>, <DisassemblerInsn "ror" for 0x401db4>, <DisassemblerInsn "and" for 0x401db8>, <DisassemblerInsn "mov" for 0x401dbb>, <DisassemblerInsn "shl" for 0x401dc2>, <DisassemblerInsn "mov" for 0x401dc4>, <DisassemblerInsn "cmp" for 0x401dcb>, <DisassemblerInsn "jge" for 0x401dce>]'}, {'block_Idx': 177, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402db9>, <DisassemblerInsn "mov" for 0x402dc1>, <DisassemblerInsn "mov" for 0x402dc3>, <DisassemblerInsn "cmp" for 0x402dca>, <DisassemblerInsn "mov" for 0x402dcd>, <DisassemblerInsn "jle" for 0x402dd4>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40051c>, <DisassemblerInsn "mov" for 0x400524>, <DisassemblerInsn "mov" for 0x40052b>, <DisassemblerInsn "mov" for 0x400532>, <DisassemblerInsn "add" for 0x400535>, <DisassemblerInsn "mov" for 0x40053c>, <DisassemblerInsn "mov" for 0x400544>, <DisassemblerInsn "mov" for 0x40054a>, <DisassemblerInsn "cmp" for 0x400551>, <DisassemblerInsn "jb" for 0x400554>]'}, {'block_Idx': 224, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40241e>, <DisassemblerInsn "cmp" for 0x402425>, <DisassemblerInsn "je" for 0x402428>]'}, {'block_Idx': 112, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40123f>, <DisassemblerInsn "mov" for 0x401246>, <DisassemblerInsn "movsxd" for 0x40124d>, <DisassemblerInsn "lea" for 0x401250>, <DisassemblerInsn "mov" for 0x401257>, <DisassemblerInsn "mov" for 0x40125a>, <DisassemblerInsn "mov" for 0x401261>, <DisassemblerInsn "mov" for 0x401268>, <DisassemblerInsn "mov" for 0x401270>, <DisassemblerInsn "mov" for 0x401277>, <DisassemblerInsn "mov" for 0x40127e>, <DisassemblerInsn "mov" for 0x401285>, <DisassemblerInsn "mov" for 0x40128c>, <DisassemblerInsn "mov" for 0x40128e>, <DisassemblerInsn "cmp" for 0x401295>, <DisassemblerInsn "jle" for 0x401297>]'}, {'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018a8>, <DisassemblerInsn "mov" for 0x4018af>, <DisassemblerInsn "mov" for 0x4018b6>, <DisassemblerInsn "mov" for 0x4018bd>, <DisassemblerInsn "mov" for 0x4018c4>, <DisassemblerInsn "mov" for 0x4018cb>, <DisassemblerInsn "cmp" for 0x4018d2>, <DisassemblerInsn "jle" for 0x4018d5>]'}, {'block_Idx': 64, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f96>, <DisassemblerInsn "mov" for 0x400f9e>, <DisassemblerInsn "mov" for 0x400fa6>, <DisassemblerInsn "ror" for 0x400fa9>, <DisassemblerInsn "ror" for 0x400fad>, <DisassemblerInsn "ror" for 0x400fb0>, <DisassemblerInsn "shr" for 0x400fb4>, <DisassemblerInsn "mov" for 0x400fb7>, <DisassemblerInsn "mov" for 0x400fbe>, <DisassemblerInsn "mov" for 0x400fc4>, <DisassemblerInsn "xor" for 0x400fc6>, <DisassemblerInsn "shr" for 0x400fcc>, <DisassemblerInsn "cmp" for 0x400fcf>, <DisassemblerInsn "cmovb" for 0x400fd5>, <DisassemblerInsn "mov" for 0x400fd8>, <DisassemblerInsn "xor" for 0x400fdd>, <DisassemblerInsn "cmp" for 0x400fdf>, <DisassemblerInsn "cmovb" for 0x400fe5>, <DisassemblerInsn "mov" for 0x400fe8>, <DisassemblerInsn "and" for 0x400fea>, <DisassemblerInsn "mov" for 0x400ff0>, <DisassemblerInsn "shr" for 0x400ff2>, <DisassemblerInsn "mov" for 0x400ff5>, <DisassemblerInsn "or" for 0x400ff7>, <DisassemblerInsn "cmp" for 0x400ffa>, <DisassemblerInsn "cmove" for 0x400ffd>, <DisassemblerInsn "cmp" for 0x401000>, <DisassemblerInsn "cmove" for 0x401003>, <DisassemblerInsn "mov" for 0x401006>, <DisassemblerInsn "mov" for 0x401008>, <DisassemblerInsn "mov" for 0x40100a>, <DisassemblerInsn "movzx" for 0x401011>, <DisassemblerInsn "add" for 0x401015>, <DisassemblerInsn "mov" for 0x401017>, <DisassemblerInsn "sub" for 0x40101c>, <DisassemblerInsn "mov" for 0x40101e>, <DisassemblerInsn "cmp" for 0x401025>, <DisassemblerInsn "je" for 0x401028>]'}, {'block_Idx': 82, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400f91>]'}, {'block_Idx': 119, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401352>, <DisassemblerInsn "mov" for 0x401359>, <DisassemblerInsn "movsxd" for 0x401360>, <DisassemblerInsn "lea" for 0x401363>, <DisassemblerInsn "mov" for 0x40136a>, <DisassemblerInsn "mov" for 0x40136d>, <DisassemblerInsn "mov" for 0x401374>, <DisassemblerInsn "jmp" for 0x40137b>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400556>, <DisassemblerInsn "mov" for 0x40055d>, <DisassemblerInsn "mov" for 0x400565>, <DisassemblerInsn "cmp" for 0x40056c>, <DisassemblerInsn "mov" for 0x400572>, <DisassemblerInsn "je" for 0x400579>]'}, {'block_Idx': 163, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402918>, <DisassemblerInsn "cmp" for 0x40291f>, <DisassemblerInsn "jne" for 0x402922>]'}, {'block_Idx': 75, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e9d>]'}, {'block_Idx': 167, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f73>, <DisassemblerInsn "mov" for 0x402f7b>, <DisassemblerInsn "mov" for 0x402f83>, <DisassemblerInsn "mov" for 0x402f8b>, <DisassemblerInsn "imul" for 0x402f92>, <DisassemblerInsn "mov" for 0x402f95>, <DisassemblerInsn "mov" for 0x402f9a>, <DisassemblerInsn "cmp" for 0x402f9f>, <DisassemblerInsn "cmove" for 0x402fa2>, <DisassemblerInsn "imul" for 0x402fa5>, <DisassemblerInsn "mov" for 0x402fa8>, <DisassemblerInsn "mov" for 0x402faa>, <DisassemblerInsn "mov" for 0x402fb1>, <DisassemblerInsn "mov" for 0x402fb9>, <DisassemblerInsn "add" for 0x402fbb>, <DisassemblerInsn "mov" for 0x402fbe>, <DisassemblerInsn "cdq" for 0x402fc3>, <DisassemblerInsn "idiv" for 0x402fc4>, <DisassemblerInsn "mov" for 0x402fc6>, <DisassemblerInsn "cmp" for 0x402fca>, <DisassemblerInsn "jle" for 0x402fcc>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4005d7>, <DisassemblerInsn "mov" for 0x4005de>, <DisassemblerInsn "mov" for 0x4005e6>, <DisassemblerInsn "add" for 0x4005e9>, <DisassemblerInsn "mov" for 0x4005f0>, <DisassemblerInsn "mov" for 0x4005f8>, <DisassemblerInsn "mov" for 0x4005fe>, <DisassemblerInsn "xor" for 0x400605>, <DisassemblerInsn "mov" for 0x400608>, <DisassemblerInsn "cmp" for 0x40060d>, <DisassemblerInsn "mov" for 0x40060f>, <DisassemblerInsn "ja" for 0x400616>]'}, {'block_Idx': 232, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401914>, <DisassemblerInsn "cmp" for 0x40191c>, <DisassemblerInsn "jle" for 0x40191f>]'}, {'block_Idx': 370, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4020d6>, <DisassemblerInsn "mov" for 0x4020dd>, <DisassemblerInsn "mov" for 0x4020e4>, <DisassemblerInsn "mov" for 0x4020eb>, <DisassemblerInsn "mov" for 0x4020f2>, <DisassemblerInsn "mov" for 0x4020f4>, <DisassemblerInsn "mov" for 0x4020fc>, <DisassemblerInsn "mov" for 0x402101>, <DisassemblerInsn "mov" for 0x402109>, <DisassemblerInsn "mov" for 0x402110>, <DisassemblerInsn "mov" for 0x402117>, <DisassemblerInsn "jmp" for 0x40211e>]'}, {'block_Idx': 225, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ab9>, <DisassemblerInsn "mov" for 0x401ac1>, <DisassemblerInsn "mov" for 0x401ac9>, <DisassemblerInsn "mov" for 0x401ace>, <DisassemblerInsn "xor" for 0x401ad6>, <DisassemblerInsn "mov" for 0x401ad8>, <DisassemblerInsn "mov" for 0x401ae0>, <DisassemblerInsn "mov" for 0x401ae8>, <DisassemblerInsn "mov" for 0x401af0>, <DisassemblerInsn "mov" for 0x401af8>, <DisassemblerInsn "mov" for 0x401aff>, <DisassemblerInsn "add" for 0x401b02>, <DisassemblerInsn "mov" for 0x401b06>, <DisassemblerInsn "movsxd" for 0x401b0e>, <DisassemblerInsn "cmp" for 0x401b11>, <DisassemblerInsn "mov" for 0x401b14>, <DisassemblerInsn "jl" for 0x401b1c>]'}, {'block_Idx': 156, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4025cb>, <DisassemblerInsn "lea" for 0x4025d3>, <DisassemblerInsn "movsxd" for 0x4025da>, <DisassemblerInsn "add" for 0x4025de>, <DisassemblerInsn "jmp" for 0x4025e1>]'}, {'block_Idx': 139, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401520>, <DisassemblerInsn "cmp" for 0x401527>, <DisassemblerInsn "je" for 0x40152a>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4004c9>, <DisassemblerInsn "mov" for 0x4004d1>, <DisassemblerInsn "mov" for 0x4004d9>, <DisassemblerInsn "mov" for 0x4004e0>, <DisassemblerInsn "mov" for 0x4004e3>, <DisassemblerInsn "mov" for 0x4004eb>, <DisassemblerInsn "mov" for 0x4004f2>, <DisassemblerInsn "xor" for 0x4004f4>, <DisassemblerInsn "cmp" for 0x4004f6>, <DisassemblerInsn "mov" for 0x4004f9>, <DisassemblerInsn "mov" for 0x400500>, <DisassemblerInsn "mov" for 0x400507>, <DisassemblerInsn "mov" for 0x40050e>, <DisassemblerInsn "je" for 0x400516>]'}], 'cfg_block_detailed_info': [{'block_Idx': 427, 'blockInsts': ['<mov~~eax, dword ptr [rbp - 0xa4]>', '<mov~~rsp, rbp>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 53, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x588]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x400e7a>']}, {'block_Idx': 39, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x680]>', '<mov~~rax, qword ptr [rsp + 0x6a0]>', '<mov~~dword ptr [rcx], 0>', '<mov~~ecx, dword ptr [rax]>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x660], ecx>', '<mov~~dword ptr [rsp + 0x664], eax>', '<mov~~eax, dword ptr [rsp + 0x68c]>', '<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<mov~~rsi, qword ptr [rsp + 0x6c8]>', '<mov~~ecx, dword ptr [rsp + 0x660]>', '<mov~~edx, dword ptr [rsp + 0x664]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<add~~ecx, edx>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500020>']}, {'block_Idx': 134, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x500]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014b6>']}, {'block_Idx': 179, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~edx, dword ptr [rsp + 0x484]>', '<mov~~dword ptr [rsp + 0x468], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x46c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x470], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x480], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x47c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x480]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401738>']}, {'block_Idx': 147, 'blockInsts': ['<jmp~~0x401492>']}, {'block_Idx': 241, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x550]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2353]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 282, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x40253e>']}, {'block_Idx': 318, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x390]>', '<mov~~rcx, qword ptr [rsp + 0x398]>', '<mov~~edx, eax>', '<add~~edx, -1>', '<mov~~edx, edx>', '<mov~~ecx, dword ptr [rcx + rdx*4]>', '<mov~~dword ptr [rsp + 0x340], ecx>', '<cmp~~eax, 1>', '<je~~0x402172>']}, {'block_Idx': 40, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rax]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x610], rcx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<jmp~~0x400968>']}, {'block_Idx': 195, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x1a8]>', '<mov~~edx, dword ptr [rsp + 0x1b8]>', '<mov~~rsi, qword ptr [rsp + 0x1a0]>', '<mov~~ecx, dword ptr [rsp + 0x1bc]>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 2>', '<mov~~word ptr [rsi], di>', '<mov~~dword ptr [rsp + 0x18c], edx>', '<mov~~qword ptr [rsp + 0x190], rcx>', '<mov~~qword ptr [rsp + 0x198], rax>', '<mov~~rdx, qword ptr [rsp + 0x1b0]>', '<mov~~esi, dword ptr [rsp + 0x18c]>', '<mov~~rax, qword ptr [rsp + 0x190]>', '<mov~~rcx, qword ptr [rsp + 0x198]>', '<mov~~qword ptr [rsp + 0x178], rcx>', '<mov~~qword ptr [rsp + 0x180], rax>', '<mov~~dword ptr [rsp + 0x188], esi>', '<add~~rdx, 1>', '<movsxd~~rdi, esi>', '<cmp~~rdx, rdi>', '<mov~~dword ptr [rsp + 0x1cc], esi>', '<mov~~qword ptr [rsp + 0x1d0], rdx>', '<mov~~qword ptr [rsp + 0x1d8], rcx>', '<mov~~qword ptr [rsp + 0x1e0], rax>', '<jl~~0x4026f0>']}, {'block_Idx': 382, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x340]>', '<mov~~ecx, dword ptr [rsp + 0x33c]>', '<mov~~edx, dword ptr [rsp + 0x334]>', '<mov~~esi, dword ptr [rsp + 0x32c]>', '<mov~~edi, dword ptr [rsp + 0x394]>', '<mov~~edi, edi>', '<mov~~qword ptr [rsp + 0x308], rdi>', '<mov~~edi, 4>', '<mov~~qword ptr [rsp + 0x310], rdi>', '<mov~~dword ptr [rsp + 0x31c], esi>', '<mov~~dword ptr [rsp + 0x320], edx>', '<mov~~dword ptr [rsp + 0x324], ecx>', '<mov~~dword ptr [rsp + 0x328], eax>', '<jmp~~0x4022f8>']}, {'block_Idx': 328, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x390]>', '<mov~~ecx, dword ptr [rsp + 0x340]>', '<mov~~rdx, qword ptr [rsp + 0x398]>', '<mov~~esi, eax>', '<add~~esi, -2>', '<mov~~esi, esi>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~dword ptr [rsp + 0x338], edx>', '<sub~~ecx, edx>', '<mov~~dword ptr [rsp + 0x33c], ecx>', '<cmp~~eax, 2>', '<jbe~~0x402123>']}, {'block_Idx': 152, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x548]>', '<mov~~edx, dword ptr [rsp + 0x580]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<add~~rax, 0x44>', '<mov~~qword ptr [rsp + 0x498], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x4a0], edx>', '<mov~~dword ptr [rsp + 0x4a4], ecx>', '<mov~~qword ptr [rsp + 0x4a8], rax>', '<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~esi, dword ptr [rsp + 0x4a0]>', '<mov~~edx, dword ptr [rsp + 0x4a4]>', '<mov~~rax, qword ptr [rsp + 0x4a8]>', '<mov~~qword ptr [rsp + 0x488], rax>', '<mov~~dword ptr [rsp + 0x490], edx>', '<mov~~dword ptr [rsp + 0x494], esi>', '<mov~~dword ptr [rcx], edx>', '<cmp~~rax, 0>', '<jne~~0x40166f>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x560]>', '<mov~~rax, qword ptr [rsp + 0x568]>', '<mov~~rsi, qword ptr [rsp + 0x60]>', '<mov~~rdx, qword ptr [rsp + 0x58]>', '<mov~~r8d, dword ptr [rsp + 0x6c]>', '<mov~~rdi, qword ptr [rsp + 0x70]>', '<mov~~r9, qword ptr [rsp + 0x78]>', '<mov~~r10, qword ptr [rsp + 0x80]>', '<mov~~qword ptr [rsp + 0x30], r10>', '<mov~~qword ptr [rsp + 0x38], r9>', '<mov~~qword ptr [rsp + 0x40], rdi>', '<mov~~dword ptr [rsp + 0x48], r8d>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~eax, dword ptr [rax]>', '<mov~~edi, esi>', '<sar~~edi, 1>', '<sub~~edx, edi>', '<mov~~dword ptr [rsp + 0x4c], edx>', '<add~~edx, esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x50], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x54], edx>', '<cmp~~eax, 0>', '<je~~0x402ef2>']}, {'block_Idx': 57, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~rax, qword ptr [rsp + 0x5a0]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rsi, qword ptr [rsp + 0x578]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x548], esi>', '<cmp~~esi, 0x10>', '<setg~~r8b>', '<mov~~byte ptr [rsp + 0x54f], r8b>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x550], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r9d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r9d>', '<mov~~r9d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r9d, r11d>', '<and~~r8b, 1>', '<movzx~~r8d, r8b>', '<mov~~dword ptr [rdi + 0x58], r10d>', '<sub~~r9d, esi>', '<mov~~r10, rdi>', '<mov~~qword ptr [rsp + 0x558], r10>', '<mov~~r10, rdx>', '<add~~r10, 0x48>', '<mov~~qword ptr [rsp + 0x560], r10>', '<mov~~dword ptr [rdx + 0x48], r9d>', '<mov~~r9, rdx>', '<add~~r9, 0x4c>', '<mov~~qword ptr [rsp + 0x568], r9>', '<mov~~dword ptr [rdx + 0x4c], r8d>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x570], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x400f96>']}, {'block_Idx': 220, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~edi, dword ptr [rsp + 0x430]>', '<mov~~esi, dword ptr [rsp + 0x42c]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~r9d, dword ptr [rsp + 0x40c]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x3fc], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x408]>', '<mov~~dword ptr [rsp + 0x400], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3fc]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x400]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x404], eax>', '<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~esi, dword ptr [rsp + 0x42c]>', '<mov~~edx, dword ptr [rsp + 0x404]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3f4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3f4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3f8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x40241e>']}, {'block_Idx': 357, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x394]>', '<cmp~~eax, 3>', '<jle~~0x40241e>']}, {'block_Idx': 234, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x450]>', '<cmp~~eax, 0x1f>', '<jle~~0x4023fe>']}, {'block_Idx': 103, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x598]>', '<sub~~eax, 7>', '<je~~0x4011ec>']}, {'block_Idx': 355, 'blockInsts': ['<jmp~~0x4021ae>']}, {'block_Idx': 99, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rsp + 0x520]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x508], ecx>', '<mov~~dword ptr [rsp + 0x50c], eax>', '<jmp~~0x401268>']}, {'block_Idx': 142, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x5f8]>', '<mov~~dword ptr [rax], 1>', '<mov~~eax, dword ptr [rsp + 0x5ec]>', '<cmp~~eax, 0>', '<jle~~0x400b69>']}, {'block_Idx': 233, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, qword ptr [rsp + 0x488]>', '<mov~~rsi, qword ptr [rsp + 0x4b0]>', '<mov~~eax, dword ptr [rsp + 0x450]>', '<and~~eax, 0xfffffff7>', '<mov~~dword ptr [rsp + 0x390], eax>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x394], esi>', '<mov~~rcx, qword ptr [rcx + rdx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x398], rcx>', '<cmp~~eax, 0>', '<je~~0x401f46>']}, {'block_Idx': 165, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x234]>', '<cmp~~eax, 2>', '<jne~~0x402bf7>']}, {'block_Idx': 250, 'blockInsts': ['<push~~rbp>', '<mov~~rbp, rsp>', '<sub~~rsp, 0x1f0>', '<mov~~dword ptr [rbp - 0x30], edx>', '<mov~~dword ptr [rbp - 0x2c], esi>', '<mov~~qword ptr [rbp - 0x28], rdi>', '<mov~~eax, edx>', '<mov~~qword ptr [rbp - 0x20], rax>', '<lea~~rcx, [rax*4 + 0xf]>', '<and~~rcx, 0xfffffffffffffff0>', '<mov~~rax, rsp>', '<sub~~rax, rcx>', '<mov~~qword ptr [rbp - 0x18], rax>', '<mov~~rsp, rax>', '<movsxd~~rax, esi>', '<mov~~rax, qword ptr [rdi + rax*8 + 0x58]>', '<mov~~qword ptr [rbp - 0x10], rax>', '<cmp~~edx, 0>', '<setg~~al>', '<mov~~byte ptr [rbp - 1], al>', '<test~~al, 1>', '<jne~~0x40329a>']}, {'block_Idx': 148, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x58]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x694]>', '<add~~rsp, 0x708>', '<ret~~>']}, {'block_Idx': 93, 'blockInsts': ['<jmp~~0x40115d>']}, {'block_Idx': 32, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x694], eax>', '<jmp~~0x40308a>']}, {'block_Idx': 202, 'blockInsts': ['<jmp~~0x40253e>']}, {'block_Idx': 348, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x164]>', '<add~~rsp, 0x198>', '<ret~~>']}, {'block_Idx': 181, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x550]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3003]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 235, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x240]>', '<mov~~rdx, qword ptr [rsp + 0x4b8]>', '<mov~~rcx, qword ptr [rsp + 0x570]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x4a0], edx>', '<mov~~dword ptr [rsp + 0x4a4], ecx>', '<mov~~qword ptr [rsp + 0x4a8], rax>', '<jmp~~0x401617>']}, {'block_Idx': 262, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3a8]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x418], edx>', '<mov~~dword ptr [rsp + 0x41c], ecx>', '<mov~~qword ptr [rsp + 0x420], rax>', '<jmp~~0x401b23>']}, {'block_Idx': 171, 'blockInsts': ['<jmp~~0x40253e>']}, {'block_Idx': 65, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x558]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x370f]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 226, 'blockInsts': ['<jmp~~0x401914>']}, {'block_Idx': 248, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~edi, dword ptr [rsp + 0x36c]>', '<mov~~esi, dword ptr [rsp + 0x368]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~r9d, dword ptr [rsp + 0x374]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x354], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x370]>', '<mov~~dword ptr [rsp + 0x358], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x354]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x358]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x35c], eax>', '<mov~~rax, qword ptr [rsp + 0x360]>', '<mov~~rdx, qword ptr [rsp + 0x398]>', '<mov~~edi, dword ptr [rsp + 0x368]>', '<mov~~esi, dword ptr [rsp + 0x35c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x344], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x344]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x378]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x348], rax>', '<cmp~~rax, rcx>', '<je~~0x401f1d>']}, {'block_Idx': 244, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x260]>', '<mov~~rdx, qword ptr [rsp + 0x258]>', '<mov~~ecx, dword ptr [rsp + 0x428]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~dword ptr [rsp + 0x24c], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x250], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x260], rax>', '<jl~~0x40245e>']}, {'block_Idx': 115, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<cmp~~eax, 0xc>', '<jge~~0x401380>']}, {'block_Idx': 68, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5c4]>', '<mov~~rax, qword ptr [rsp + 0x5b8]>', '<mov~~edx, dword ptr [rsp + 0x5c8]>', '<mov~~dword ptr [rsp + 0x5b4], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x402faa>']}, {'block_Idx': 255, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x360]>', '<mov~~rdx, qword ptr [rsp + 0x398]>', '<mov~~edi, dword ptr [rsp + 0x368]>', '<mov~~esi, dword ptr [rsp + 0x35c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x344], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x344]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x378]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x348], rax>', '<cmp~~rax, rcx>', '<je~~0x401f1d>']}, {'block_Idx': 391, 'blockInsts': ['<jmp~~0x40226d>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x628]>', '<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x18], eax>', '<cmp~~eax, ecx>', '<jle~~0x403021>']}, {'block_Idx': 26, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x648]>', '<mov~~rdi, qword ptr [rsp + 0x640]>', '<mov~~r9, qword ptr [rsp + 0x638]>', '<mov~~r11d, dword ptr [rsp + 0x5f4]>', '<mov~~rdx, qword ptr [rsp + 0x5d0]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x402faa>']}, {'block_Idx': 203, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x118]>', '<mov~~edx, dword ptr [rsp + 0x12c]>', '<mov~~rsi, qword ptr [rsp + 0x110]>', '<mov~~ecx, dword ptr [rsp + 0x138]>', '<mov~~r8d, dword ptr [rsp + 0x134]>', '<mov~~edi, dword ptr [rsp + 0x130]>', '<mov~~r9d, dword ptr [rsp + 0x13c]>', '<mov~~word ptr [rsi], r9w>', '<sub~~edi, r8d>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0xfc], edx>', '<mov~~qword ptr [rsp + 0x100], rcx>', '<mov~~qword ptr [rsp + 0x108], rax>', '<mov~~rsi, qword ptr [rsp + 0x120]>', '<mov~~eax, dword ptr [rsp + 0xfc]>', '<mov~~rcx, qword ptr [rsp + 0x100]>', '<mov~~rdx, qword ptr [rsp + 0x108]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x154], edi>', '<mov~~qword ptr [rsp + 0x158], rsi>', '<mov~~qword ptr [rsp + 0x160], rdx>', '<mov~~qword ptr [rsp + 0x168], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x4029be>']}, {'block_Idx': 237, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rcx, qword ptr [rsp + 0x488]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x258], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x260], rax>', '<mov~~rax, qword ptr [rsp + 0x260]>', '<mov~~rdx, qword ptr [rsp + 0x258]>', '<mov~~ecx, dword ptr [rsp + 0x428]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~dword ptr [rsp + 0x24c], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x250], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x260], rax>', '<jl~~0x40245e>']}, {'block_Idx': 114, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~eax, dword ptr [rax + 8]>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014b6>']}, {'block_Idx': 204, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x4b0]>', '<mov~~rsi, qword ptr [rsp + 0x118]>', '<mov~~rax, qword ptr [rsp + 0x560]>', '<mov~~ecx, dword ptr [rsp + 0x134]>', '<mov~~edi, dword ptr [rsp + 0x130]>', '<mov~~r8d, dword ptr [rsp + 0x13c]>', '<mov~~dword ptr [rsi], r8d>', '<sub~~edi, ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0x110]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0xfc], edx>', '<mov~~qword ptr [rsp + 0x100], rcx>', '<mov~~qword ptr [rsp + 0x108], rax>', '<jmp~~0x402b14>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x178]>', '<mov~~rcx, qword ptr [rsp + 0x180]>', '<mov~~edx, dword ptr [rsp + 0x188]>', '<mov~~rsi, qword ptr [rsp + 0x4b0]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x1ec], esi>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x1f0], esi>', '<mov~~dword ptr [rsp + 0x1f4], edx>', '<mov~~qword ptr [rsp + 0x1f8], rcx>', '<mov~~qword ptr [rsp + 0x200], rax>', '<mov~~rsi, qword ptr [rsp + 0x1c0]>', '<mov~~eax, dword ptr [rsp + 0x1ec]>', '<mov~~r8d, dword ptr [rsp + 0x1f0]>', '<mov~~edi, dword ptr [rsp + 0x1f4]>', '<mov~~rcx, qword ptr [rsp + 0x1f8]>', '<mov~~rdx, qword ptr [rsp + 0x200]>', '<add~~rsi, 1>', '<movsxd~~r9, eax>', '<cmp~~rsi, r9>', '<mov~~r9d, eax>', '<mov~~dword ptr [rsp + 0x20c], r9d>', '<mov~~dword ptr [rsp + 0x210], r8d>', '<mov~~dword ptr [rsp + 0x214], edi>', '<mov~~qword ptr [rsp + 0x218], rsi>', '<mov~~qword ptr [rsp + 0x220], rdx>', '<mov~~qword ptr [rsp + 0x228], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402661>']}, {'block_Idx': 0, 'blockInsts': ['<sub~~rsp, 0x708>', '<mov~~qword ptr [rsp + 0x6c0], rdx>', '<mov~~qword ptr [rsp + 0x6c8], rcx>', '<mov~~dword ptr [rsp + 0x6d4], r8d>', '<mov~~rax, qword ptr [rdi + 0xa0]>', '<mov~~qword ptr [rsp + 0x6d8], rax>', '<mov~~rcx, rsi>', '<mov~~qword ptr [rsp + 0x6e0], rcx>', '<mov~~qword ptr [rsp + 0x6e8], rsi>', '<mov~~ecx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x6f4], ecx>', '<mov~~dword ptr [rdx], 0>', '<mov~~rcx, rax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x6f8], rcx>', '<mov~~eax, dword ptr [rax + 4]>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x704], eax>', '<jne~~0x40051c>']}, {'block_Idx': 106, 'blockInsts': ['<mov~~r8d, dword ptr [rsp + 0x504]>', '<mov~~ecx, dword ptr [rsp + 0x4fc]>', '<mov~~rdi, qword ptr [rsp + 0x558]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3429]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 381, 'blockInsts': ['<mov~~r9d, dword ptr [rsp + 0x304]>', '<mov~~eax, dword ptr [rsp + 0x300]>', '<mov~~edx, dword ptr [rsp + 0x2fc]>', '<mov~~rsi, qword ptr [rsp + 0x2f0]>', '<mov~~rdi, qword ptr [rsp + 0x2e8]>', '<mov~~r8, qword ptr [rsp + 0x398]>', '<add~~edx, dword ptr [r8 + rsi*4]>', '<mov~~dword ptr [rsp + 0x284], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x288], ecx>', '<mov~~eax, ecx>', '<add~~eax, r9d>', '<mov~~dword ptr [rsp + 0x28c], eax>', '<mov~~dword ptr [r8 + rsi*4], eax>', '<add~~rsi, 1>', '<mov~~qword ptr [rsp + 0x290], rsi>', '<cmp~~rsi, rdi>', '<mov~~qword ptr [rsp + 0x2f0], rsi>', '<mov~~dword ptr [rsp + 0x2fc], edx>', '<mov~~dword ptr [rsp + 0x300], ecx>', '<mov~~dword ptr [rsp + 0x304], eax>', '<je~~0x40241e>']}, {'block_Idx': 214, 'blockInsts': ['<jmp~~0x402f73>']}, {'block_Idx': 221, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x450]>', '<sub~~eax, 1>', '<jne~~0x401cdc>']}, {'block_Idx': 175, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0xf8], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x402f73>']}, {'block_Idx': 218, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x40]>', '<mov~~eax, dword ptr [rsp + 0x1c]>', '<mov~~rcx, qword ptr [rsp + 0x20]>', '<mov~~rdx, qword ptr [rsp + 0x28]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x6c], edi>', '<mov~~qword ptr [rsp + 0x70], rsi>', '<mov~~qword ptr [rsp + 0x78], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402e44>']}, {'block_Idx': 135, 'blockInsts': ['<jmp~~0x40139c>']}, {'block_Idx': 425, 'blockInsts': ['<jmp~~0x40241e>']}, {'block_Idx': 158, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x490]>', '<mov~~ecx, dword ptr [rsp + 0x494]>', '<cmp~~ecx, 2>', '<mov~~dword ptr [rsp + 0x484], eax>', '<je~~0x40168e>']}, {'block_Idx': 197, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x560]>', '<mov~~rax, qword ptr [rsp + 0x568]>', '<mov~~rdx, qword ptr [rsp + 0xd0]>', '<mov~~rsi, qword ptr [rsp + 0xc8]>', '<mov~~r8d, dword ptr [rsp + 0xdc]>', '<mov~~rdi, qword ptr [rsp + 0xe0]>', '<mov~~r9, qword ptr [rsp + 0xe8]>', '<mov~~r10, qword ptr [rsp + 0xf0]>', '<mov~~qword ptr [rsp + 0xa0], r10>', '<mov~~qword ptr [rsp + 0xa8], r9>', '<mov~~qword ptr [rsp + 0xb0], rdi>', '<mov~~dword ptr [rsp + 0xb8], r8d>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~dword ptr [rsp + 0xbc], edx>', '<mov~~eax, dword ptr [rax]>', '<add~~edx, esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0xc0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0xc4], edx>', '<cmp~~eax, 0>', '<je~~0x402cf7>']}, {'block_Idx': 368, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x2cc]>', '<mov~~rcx, qword ptr [rsp + 0x2c0]>', '<mov~~rdx, qword ptr [rsp + 0x2b8]>', '<mov~~rsi, qword ptr [rsp + 0x398]>', '<add~~eax, dword ptr [rsi + rcx*4]>', '<mov~~dword ptr [rsp + 0x2ac], eax>', '<mov~~dword ptr [rsi + rcx*4], eax>', '<add~~rcx, 1>', '<mov~~qword ptr [rsp + 0x2b0], rcx>', '<cmp~~rcx, rdx>', '<mov~~qword ptr [rsp + 0x2c0], rcx>', '<mov~~dword ptr [rsp + 0x2cc], eax>', '<je~~0x40241e>']}, {'block_Idx': 173, 'blockInsts': ['<lea~~rdi, [rip + 0x1c37]>', '<lea~~rsi, [rip + 0x1bc8]>', '<mov~~edx, 0x2ba>', '<lea~~rcx, [rip + 0x1c35]>', '<call~~0x500050>']}, {'block_Idx': 311, 'blockInsts': ['<jmp~~0x401f6d>']}, {'block_Idx': 55, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5cc]>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x5b8], rcx>', '<mov~~ecx, eax>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x5c4], ecx>', '<mov~~dword ptr [rsp + 0x5c8], eax>', '<mov~~ecx, dword ptr [rsp + 0x5c4]>', '<mov~~rax, qword ptr [rsp + 0x5b8]>', '<mov~~edx, dword ptr [rsp + 0x5c8]>', '<mov~~dword ptr [rsp + 0x5b4], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x402faa>']}, {'block_Idx': 207, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0xa8]>', '<mov~~edx, dword ptr [rsp + 0xb8]>', '<mov~~rsi, qword ptr [rsp + 0xa0]>', '<mov~~edi, dword ptr [rsp + 0xbc]>', '<mov~~ecx, dword ptr [rsp + 0xc0]>', '<mov~~r8d, dword ptr [rsp + 0xc4]>', '<mov~~word ptr [rsi], r8w>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0x8c], edx>', '<mov~~qword ptr [rsp + 0x90], rcx>', '<mov~~qword ptr [rsp + 0x98], rax>', '<mov~~rsi, qword ptr [rsp + 0xb0]>', '<mov~~eax, dword ptr [rsp + 0x8c]>', '<mov~~rcx, qword ptr [rsp + 0x90]>', '<mov~~rdx, qword ptr [rsp + 0x98]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0xdc], edi>', '<mov~~qword ptr [rsp + 0xe0], rsi>', '<mov~~qword ptr [rsp + 0xe8], rdx>', '<mov~~qword ptr [rsp + 0xf0], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402c16>']}, {'block_Idx': 231, 'blockInsts': ['<jmp~~0x40241e>']}, {'block_Idx': 201, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x434]>', '<mov~~edx, dword ptr [rsp + 0x440]>', '<mov~~rsi, qword ptr [rsp + 0x498]>', '<mov~~ecx, dword ptr [rsp + 0x468]>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsi], ecx>', '<mov~~dword ptr [rsp + 0x45c], edx>', '<mov~~dword ptr [rsp + 0x460], ecx>', '<mov~~dword ptr [rsp + 0x464], eax>', '<mov~~ecx, dword ptr [rsp + 0x45c]>', '<mov~~eax, dword ptr [rsp + 0x460]>', '<mov~~edx, dword ptr [rsp + 0x464]>', '<mov~~dword ptr [rsp + 0x428], edx>', '<mov~~dword ptr [rsp + 0x42c], eax>', '<mov~~dword ptr [rsp + 0x430], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x4018f5>']}, {'block_Idx': 191, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x458]>', '<mov~~edi, dword ptr [rsp + 0x454]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~dword ptr [rsp + 0x434], eax>', '<mov~~esi, edi>', '<sar~~esi, 3>', '<mov~~dword ptr [rsp + 0x438], esi>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x43c], ecx>', '<movzx~~esi, sil>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x440], edi>', '<mov~~dword ptr [rdx], edi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x440]>', '<mov~~dword ptr [rsp + 0x444], edx>', '<and~~edx, esi>', '<mov~~dword ptr [rsp + 0x448], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x44c], eax>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x454], ecx>', '<mov~~dword ptr [rsp + 0x458], eax>', '<je~~0x4017df>']}, {'block_Idx': 243, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~esi, dword ptr [rsp + 0x4a0]>', '<mov~~edx, dword ptr [rsp + 0x4a4]>', '<mov~~rax, qword ptr [rsp + 0x4a8]>', '<mov~~qword ptr [rsp + 0x488], rax>', '<mov~~dword ptr [rsp + 0x490], edx>', '<mov~~dword ptr [rsp + 0x494], esi>', '<mov~~dword ptr [rcx], edx>', '<cmp~~rax, 0>', '<jne~~0x40166f>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x62c]>', '<mov~~rcx, qword ptr [rsp + 8]>', '<mov~~esi, dword ptr [rsp + 0x18]>', '<mov~~edx, dword ptr [rsp + 0x14]>', '<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<mov~~r8d, esi>', '<add~~r8d, dword ptr [rdi + 0xa4]>', '<mov~~dword ptr [rdi + 0xa4], r8d>', '<sub~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x694], eax>', '<mov~~eax, dword ptr [rsp + 0x694]>', '<add~~rsp, 0x708>', '<ret~~>']}, {'block_Idx': 129, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x4d8], rcx>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x4d4], eax>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x4d8]>', '<movsxd~~rcx, eax>', '<xor~~esi, esi>', '<call~~0x500040>']}, {'block_Idx': 393, 'blockInsts': ['<jmp~~0x40253e>']}, {'block_Idx': 247, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x36c]>', '<mov~~edx, dword ptr [rsp + 0x368]>', '<mov~~eax, dword ptr [rsp + 0x374]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x35c], eax>', '<jmp~~0x401e93>']}, {'block_Idx': 54, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5ac]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~r8d, dword ptr [rsp + 0x58c]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3865]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 239, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<mov~~rax, qword ptr [rsp + 0x488]>', '<mov~~esi, eax>', '<xor~~edx, edx>', '<call~~0x4039ef>']}, {'block_Idx': 110, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<cmp~~eax, 0>', '<jne~~0x401346>']}, {'block_Idx': 34, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5e0]>', '<cmp~~eax, 0>', '<jne~~0x400b48>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x688]>', '<mov~~ecx, dword ptr [rsp + 0x6ac]>', '<mov~~esi, dword ptr [rsp + 0x690]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, rdx>', '<add~~rdi, 0xa8>', '<mov~~qword ptr [rsp + 0x668], rdi>', '<mov~~edx, dword ptr [rdx + 0xa8]>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x674], edx>', '<mov~~dword ptr [rsp + 0x678], ecx>', '<mov~~dword ptr [rsp + 0x67c], eax>', '<jae~~0x4006d2>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x668]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~edx, dword ptr [rsp + 0x690]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<call~~0x500010>']}, {'block_Idx': 92, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x558]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3539]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x620], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x624], eax>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x400bb2>']}, {'block_Idx': 215, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x120]>', '<mov~~eax, dword ptr [rsp + 0xfc]>', '<mov~~rcx, qword ptr [rsp + 0x100]>', '<mov~~rdx, qword ptr [rsp + 0x108]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x154], edi>', '<mov~~qword ptr [rsp + 0x158], rsi>', '<mov~~qword ptr [rsp + 0x160], rdx>', '<mov~~qword ptr [rsp + 0x168], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x4029be>']}, {'block_Idx': 108, 'blockInsts': ['<jmp~~0x40123f>']}, {'block_Idx': 61, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rsp + 0x5b4]>', '<add~~eax, 8>', '<mov~~dword ptr [rsp + 0x5b0], eax>', '<mov~~dword ptr [rcx], eax>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~edx, dword ptr [rsp + 0x628]>', '<mov~~ecx, eax>', '<mov~~eax, dword ptr [rsp + 0x5b0]>', '<add~~ecx, 2>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x5c8], eax>', '<jl~~0x400c3d>']}, {'block_Idx': 228, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x4f0]>', '<mov~~rax, qword ptr [rsp + 0x488]>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x240], rax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x248], ecx>', '<movsxd~~rcx, ecx>', '<cmp~~rax, rcx>', '<jge~~0x40250c>']}, {'block_Idx': 42, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5ec]>', '<cmp~~eax, 0>', '<jle~~0x400b69>']}, {'block_Idx': 151, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~edx, dword ptr [rsp + 0x4c4]>', '<mov~~eax, dword ptr [rsp + 0x4c8]>', '<mov~~esi, dword ptr [rsp + 0x4cc]>', '<mov~~dword ptr [rsp + 0x234], edx>', '<mov~~edi, esi>', '<neg~~edi>', '<and~~edi, 7>', '<mov~~edx, esi>', '<mov~~esi, edi>', '<lea~~edx, [rdx + rsi + 0x10]>', '<mov~~dword ptr [rcx], edx>', '<mov~~ecx, eax>', '<mov~~qword ptr [rsp + 0x238], rcx>', '<sub~~eax, 3>', '<ja~~0x4025e3>']}, {'block_Idx': 72, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x558]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3575]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 212, 'blockInsts': ['<jmp~~0x401902>']}, {'block_Idx': 182, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6e0]>', '<mov~~rcx, qword ptr [rsp + 0x6e8]>', '<mov~~esi, dword ptr [rsp + 0x174]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x140], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x148], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0x154], esi>', '<mov~~qword ptr [rsp + 0x158], rdx>', '<mov~~qword ptr [rsp + 0x160], rcx>', '<mov~~qword ptr [rsp + 0x168], rax>', '<jmp~~0x4029be>']}, {'block_Idx': 211, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x42c]>', '<mov~~ecx, dword ptr [rsp + 0x430]>', '<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x408], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x40c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x4019ee>']}, {'block_Idx': 88, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x528]>', '<mov~~rdx, qword ptr [rsp + 0x530]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~dword ptr [rsp + 0x514], eax>', '<mov~~qword ptr [rsp + 0x518], rdx>', '<mov~~qword ptr [rsp + 0x520], rcx>', '<cmp~~eax, 1>', '<jle~~0x401116>']}, {'block_Idx': 257, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x348]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x380], edx>', '<mov~~dword ptr [rsp + 0x384], ecx>', '<mov~~qword ptr [rsp + 0x388], rax>', '<jmp~~0x401d6e>']}, {'block_Idx': 208, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x4b0]>', '<mov~~rsi, qword ptr [rsp + 0xa8]>', '<mov~~edi, dword ptr [rsp + 0xbc]>', '<mov~~rax, qword ptr [rsp + 0x560]>', '<mov~~ecx, dword ptr [rsp + 0xc4]>', '<mov~~dword ptr [rsi], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0xa0]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x8c], edx>', '<mov~~qword ptr [rsp + 0x90], rcx>', '<mov~~qword ptr [rsp + 0x98], rax>', '<jmp~~0x402d51>']}, {'block_Idx': 245, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x418]>', '<mov~~eax, dword ptr [rsp + 0x41c]>', '<mov~~rsi, qword ptr [rsp + 0x420]>', '<mov~~qword ptr [rsp + 0x3c0], rsi>', '<mov~~dword ptr [rsp + 0x3c8], eax>', '<mov~~dword ptr [rsp + 0x3cc], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x3d0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x3d4], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401bbc>']}, {'block_Idx': 50, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x608]>', '<mov~~eax, dword ptr [rsp + 0x5e8]>', '<mov~~rcx, qword ptr [rsp + 0x600]>', '<mov~~rdi, qword ptr [rcx]>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x5d0]>', '<cdqe~~>', '<add~~rdx, rax>', '<call~~0x400110>']}, {'block_Idx': 38, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, qword ptr [rsp + 0x680]>', '<mov~~rdi, qword ptr [rsp + 0x6a0]>', '<mov~~rsi, qword ptr [rsp + 0x6f8]>', '<mov~~eax, dword ptr [rsp + 0x68c]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x6b0], esi>', '<mov~~dword ptr [rsp + 0x6b4], edx>', '<mov~~qword ptr [rsp + 0x6b8], rcx>', '<mov~~dword ptr [rsp + 0x694], eax>', '<jne~~0x40308a>']}, {'block_Idx': 1, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6d4]>', '<mov~~rax, qword ptr [rsp + 0x6f8]>', '<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<mov~~edx, 4>', '<cmp~~ecx, 4>', '<cmovg~~edx, ecx>', '<mov~~dword ptr [rax], edx>', '<mov~~rdi, qword ptr [rsi + 0x98]>', '<add~~rsi, 0xa8>', '<call~~0x500010>']}, {'block_Idx': 185, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x560]>', '<mov~~rsi, qword ptr [rsp + 0x1c0]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rax, qword ptr [rsp + 0x568]>', '<mov~~r8d, dword ptr [rsp + 0x1cc]>', '<mov~~rdi, qword ptr [rsp + 0x1d0]>', '<mov~~r9, qword ptr [rsp + 0x1d8]>', '<mov~~r10, qword ptr [rsp + 0x1e0]>', '<mov~~qword ptr [rsp + 0x1a0], r10>', '<mov~~qword ptr [rsp + 0x1a8], r9>', '<mov~~qword ptr [rsp + 0x1b0], rdi>', '<mov~~dword ptr [rsp + 0x1b8], r8d>', '<mov~~eax, dword ptr [rax]>', '<mov~~rdx, qword ptr [rdx + rdi*8 + 0x58]>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~ecx, dword ptr [rcx]>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x1bc], edx>', '<cmp~~eax, 0>', '<je~~0x4027ad>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x1a0]>', '<mov~~rdx, qword ptr [rsp + 0x4f0]>', '<mov~~rsi, qword ptr [rsp + 0x1a8]>', '<mov~~edi, dword ptr [rsp + 0x1bc]>', '<mov~~rax, rsi>', '<add~~rax, 4>', '<mov~~dword ptr [rsi], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x18c], edx>', '<mov~~qword ptr [rsp + 0x190], rcx>', '<mov~~qword ptr [rsp + 0x198], rax>', '<jmp~~0x4027ef>']}, {'block_Idx': 227, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x450]>', '<add~~eax, -8>', '<cmp~~eax, 5>', '<jae~~0x4023c3>']}, {'block_Idx': 43, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rsp + 0x5a8]>', '<mov~~edx, dword ptr [rsp + 0x590]>', '<mov~~esi, dword ptr [rsp + 0x594]>', '<mov~~dword ptr [rsp + 0x580], esi>', '<mov~~dword ptr [rsp + 0x584], edx>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x588], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x400e49>']}, {'block_Idx': 356, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x340]>', '<mov~~ecx, dword ptr [rsp + 0x33c]>', '<mov~~edx, dword ptr [rsp + 0x394]>', '<mov~~edx, edx>', '<mov~~qword ptr [rsp + 0x2d0], rdx>', '<mov~~edx, 2>', '<mov~~qword ptr [rsp + 0x2d8], rdx>', '<mov~~dword ptr [rsp + 0x2e0], ecx>', '<mov~~dword ptr [rsp + 0x2e4], eax>', '<jmp~~0x402200>']}, {'block_Idx': 157, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jmp~~0x402f73>']}, {'block_Idx': 194, 'blockInsts': ['<jmp~~0x402f73>']}, {'block_Idx': 47, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rsp + 0x628]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x5cc], eax>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<add~~eax, 2>', '<cmp~~eax, ecx>', '<jge~~0x402faa>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~ecx, dword ptr [rsp + 0x5ac]>', '<add~~ecx, -8>', '<sub~~ecx, 3>', '<setb~~cl>', '<mov~~eax, dword ptr [rax + 0xc]>', '<mov~~edx, eax>', '<sub~~edx, 2>', '<sete~~dl>', '<and~~cl, dl>', '<test~~cl, 1>', '<mov~~dword ptr [rsp + 0x58c], eax>', '<jne~~0x400da1>']}, {'block_Idx': 267, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x380]>', '<mov~~eax, dword ptr [rsp + 0x384]>', '<mov~~rsi, qword ptr [rsp + 0x388]>', '<mov~~qword ptr [rsp + 0x360], rsi>', '<mov~~dword ptr [rsp + 0x368], eax>', '<mov~~dword ptr [rsp + 0x36c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x370], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x374], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401e07>']}, {'block_Idx': 120, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<sub~~eax, 0xc>', '<je~~0x4013b1>']}, {'block_Idx': 58, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x588]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x37e4]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 210, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x4b0]>', '<mov~~rsi, qword ptr [rsp + 0x38]>', '<mov~~edi, dword ptr [rsp + 0x4c]>', '<mov~~rax, qword ptr [rsp + 0x560]>', '<mov~~ecx, dword ptr [rsp + 0x54]>', '<mov~~dword ptr [rsi], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0x30]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x1c], edx>', '<mov~~qword ptr [rsp + 0x20], rcx>', '<mov~~qword ptr [rsp + 0x28], rax>', '<jmp~~0x402f31>']}, {'block_Idx': 89, 'blockInsts': ['<jmp~~0x401133>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6e0]>', '<mov~~rdx, qword ptr [rsp + 0x6e8]>', '<mov~~edi, dword ptr [rsp + 0x234]>', '<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~eax, dword ptr [rax]>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<mov~~r8d, eax>', '<mov~~dword ptr [rsp + 0x20c], r8d>', '<mov~~r8d, edi>', '<mov~~dword ptr [rsp + 0x210], r8d>', '<mov~~dword ptr [rsp + 0x214], edi>', '<mov~~qword ptr [rsp + 0x218], rsi>', '<mov~~qword ptr [rsp + 0x220], rdx>', '<mov~~qword ptr [rsp + 0x228], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x402f73>']}, {'block_Idx': 424, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x40253e>']}, {'block_Idx': 340, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x340]>', '<mov~~ecx, dword ptr [rsp + 0x394]>', '<mov~~ecx, ecx>', '<mov~~qword ptr [rsp + 0x2b8], rcx>', '<mov~~ecx, 1>', '<mov~~qword ptr [rsp + 0x2c0], rcx>', '<mov~~dword ptr [rsp + 0x2cc], eax>', '<mov~~eax, dword ptr [rsp + 0x2cc]>', '<mov~~rcx, qword ptr [rsp + 0x2c0]>', '<mov~~rdx, qword ptr [rsp + 0x2b8]>', '<mov~~rsi, qword ptr [rsp + 0x398]>', '<add~~eax, dword ptr [rsi + rcx*4]>', '<mov~~dword ptr [rsp + 0x2ac], eax>', '<mov~~dword ptr [rsi + rcx*4], eax>', '<add~~rcx, 1>', '<mov~~qword ptr [rsp + 0x2b0], rcx>', '<cmp~~rcx, rdx>', '<mov~~qword ptr [rsp + 0x2c0], rcx>', '<mov~~dword ptr [rsp + 0x2cc], eax>', '<je~~0x40241e>']}, {'block_Idx': 33, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x5dc]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<jne~~0x402faa>']}, {'block_Idx': 81, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x518]>', '<mov~~rdi, qword ptr [rsp + 0x650]>', '<mov~~rdx, qword ptr [rsp + 0x520]>', '<mov~~rsi, qword ptr [rsp + 0x630]>', '<mov~~eax, dword ptr [rsp + 0x514]>', '<add~~eax, -1>', '<mov~~r8, rdx>', '<shr~~r8, 3>', '<mov~~esi, dword ptr [rsi + r8]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xf8>', '<add~~rdx, 8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rdi], r8d>', '<add~~esi, -0x80>', '<shl~~rcx, 6>', '<movsxd~~rdi, esi>', '<add~~rcx, rdi>', '<cmp~~esi, 0x40>', '<mov~~qword ptr [rsp + 0x528], rdx>', '<mov~~qword ptr [rsp + 0x530], rcx>', '<mov~~dword ptr [rsp + 0x53c], eax>', '<jb~~0x401067>']}, {'block_Idx': 69, 'blockInsts': ['<jmp~~0x402faa>']}, {'block_Idx': 251, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x3cc]>', '<mov~~edx, dword ptr [rsp + 0x3c8]>', '<mov~~eax, dword ptr [rsp + 0x3d4]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x3bc], eax>', '<jmp~~0x401c48>']}, {'block_Idx': 291, 'blockInsts': ['<jmp~~0x40241e>']}, {'block_Idx': 238, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x42c]>', '<mov~~edx, dword ptr [rsp + 0x430]>', '<mov~~rsi, qword ptr [rsp + 0x488]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<add~~rax, 0x58>', '<shl~~rsi, 3>', '<add~~rax, rsi>', '<mov~~qword ptr [rsp + 0x410], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x418], edx>', '<mov~~dword ptr [rsp + 0x41c], ecx>', '<mov~~qword ptr [rsp + 0x420], rax>', '<jmp~~0x401b23>']}, {'block_Idx': 170, 'blockInsts': ['<jmp~~0x4016a9>']}, {'block_Idx': 219, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x430]>', '<mov~~edx, dword ptr [rsp + 0x42c]>', '<mov~~eax, dword ptr [rsp + 0x40c]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x404], eax>', '<jmp~~0x401a7a>']}, {'block_Idx': 125, 'blockInsts': ['<jmp~~0x40138e>']}, {'block_Idx': 358, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x390]>', '<mov~~edx, dword ptr [rsp + 0x338]>', '<mov~~edi, dword ptr [rsp + 0x334]>', '<mov~~rsi, qword ptr [rsp + 0x398]>', '<mov~~ecx, dword ptr [rsp + 0x330]>', '<shl~~ecx, 1>', '<mov~~r8d, eax>', '<add~~r8d, -4>', '<mov~~r8d, r8d>', '<mov~~esi, dword ptr [rsi + r8*4]>', '<add~~ecx, edi>', '<add~~edx, esi>', '<sub~~ecx, edx>', '<mov~~dword ptr [rsp + 0x32c], ecx>', '<cmp~~eax, 4>', '<jne~~0x40239c>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x18]>', '<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, rcx>', '<add~~rdx, 0xa0>', '<mov~~qword ptr [rsp + 8], rdx>', '<mov~~ecx, dword ptr [rcx + 0xa0]>', '<mov~~dword ptr [rsp + 0x14], ecx>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x694], eax>', '<je~~0x40308a>']}, {'block_Idx': 327, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x394]>', '<cmp~~eax, 1>', '<jle~~0x40241e>']}, {'block_Idx': 223, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~esi, dword ptr [rsp + 0x42c]>', '<mov~~edx, dword ptr [rsp + 0x404]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3f4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3f4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3f8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x40241e>']}, {'block_Idx': 392, 'blockInsts': ['<mov~~r10d, dword ptr [rsp + 0x328]>', '<mov~~eax, dword ptr [rsp + 0x324]>', '<mov~~ecx, dword ptr [rsp + 0x320]>', '<mov~~esi, dword ptr [rsp + 0x31c]>', '<mov~~rdi, qword ptr [rsp + 0x310]>', '<mov~~r8, qword ptr [rsp + 0x308]>', '<mov~~r9, qword ptr [rsp + 0x398]>', '<add~~esi, dword ptr [r9 + rdi*4]>', '<mov~~dword ptr [rsp + 0x268], esi>', '<mov~~edx, esi>', '<add~~edx, ecx>', '<mov~~dword ptr [rsp + 0x26c], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x270], ecx>', '<mov~~eax, ecx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x274], eax>', '<mov~~dword ptr [r9 + rdi*4], eax>', '<add~~rdi, 1>', '<mov~~qword ptr [rsp + 0x278], rdi>', '<cmp~~rdi, r8>', '<mov~~qword ptr [rsp + 0x310], rdi>', '<mov~~dword ptr [rsp + 0x31c], esi>', '<mov~~dword ptr [rsp + 0x320], edx>', '<mov~~dword ptr [rsp + 0x324], ecx>', '<mov~~dword ptr [rsp + 0x328], eax>', '<je~~0x40241e>']}, {'block_Idx': 45, 'blockInsts': ['<jmp~~0x400dc0>']}, {'block_Idx': 96, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x598]>', '<sub~~eax, 6>', '<je~~0x401199>']}, {'block_Idx': 242, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<mov~~rax, qword ptr [rsp + 0x488]>', '<mov~~edx, dword ptr [rsp + 0x450]>', '<and~~edx, 0xffffffdf>', '<add~~edx, 1>', '<mov~~esi, eax>', '<call~~0x40323c>']}, {'block_Idx': 184, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x1c0]>', '<mov~~eax, dword ptr [rsp + 0x1ec]>', '<mov~~r8d, dword ptr [rsp + 0x1f0]>', '<mov~~edi, dword ptr [rsp + 0x1f4]>', '<mov~~rcx, qword ptr [rsp + 0x1f8]>', '<mov~~rdx, qword ptr [rsp + 0x200]>', '<add~~rsi, 1>', '<movsxd~~r9, eax>', '<cmp~~rsi, r9>', '<mov~~r9d, eax>', '<mov~~dword ptr [rsp + 0x20c], r9d>', '<mov~~dword ptr [rsp + 0x210], r8d>', '<mov~~dword ptr [rsp + 0x214], edi>', '<mov~~qword ptr [rsp + 0x218], rsi>', '<mov~~qword ptr [rsp + 0x220], rdx>', '<mov~~qword ptr [rsp + 0x228], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402661>']}, {'block_Idx': 174, 'blockInsts': ['<mov~~edi, dword ptr [rsp + 0x20c]>', '<mov~~esi, dword ptr [rsp + 0x210]>', '<mov~~edx, dword ptr [rsp + 0x214]>', '<mov~~r8, qword ptr [rsp + 0x218]>', '<mov~~rax, qword ptr [rsp + 0x220]>', '<mov~~rcx, qword ptr [rsp + 0x228]>', '<mov~~qword ptr [rsp + 0x1c0], r8>', '<xor~~r8d, r8d>', '<cmp~~edx, 0>', '<mov~~r9d, esi>', '<mov~~dword ptr [rsp + 0x1cc], r9d>', '<mov~~qword ptr [rsp + 0x1d0], r8>', '<mov~~r8, rax>', '<mov~~qword ptr [rsp + 0x1d8], r8>', '<mov~~r8, rcx>', '<mov~~qword ptr [rsp + 0x1e0], r8>', '<mov~~dword ptr [rsp + 0x1ec], edi>', '<mov~~dword ptr [rsp + 0x1f0], esi>', '<mov~~dword ptr [rsp + 0x1f4], edx>', '<mov~~qword ptr [rsp + 0x1f8], rcx>', '<mov~~qword ptr [rsp + 0x200], rax>', '<jle~~0x40289c>']}, {'block_Idx': 107, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rsp + 0x520]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x508], ecx>', '<mov~~dword ptr [rsp + 0x50c], eax>', '<jmp~~0x401268>']}, {'block_Idx': 86, 'blockInsts': ['<jmp~~0x40253e>']}, {'block_Idx': 229, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x4024a8>']}, {'block_Idx': 19, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x620]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400ccd>']}, {'block_Idx': 400, 'blockInsts': ['<jmp~~0x4022f8>']}, {'block_Idx': 209, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x38]>', '<mov~~edx, dword ptr [rsp + 0x48]>', '<mov~~rsi, qword ptr [rsp + 0x30]>', '<mov~~edi, dword ptr [rsp + 0x4c]>', '<mov~~ecx, dword ptr [rsp + 0x50]>', '<mov~~r8d, dword ptr [rsp + 0x54]>', '<mov~~word ptr [rsi], r8w>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0x1c], edx>', '<mov~~qword ptr [rsp + 0x20], rcx>', '<mov~~qword ptr [rsp + 0x28], rax>', '<mov~~rsi, qword ptr [rsp + 0x40]>', '<mov~~eax, dword ptr [rsp + 0x1c]>', '<mov~~rcx, qword ptr [rsp + 0x20]>', '<mov~~rdx, qword ptr [rsp + 0x28]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x6c], edi>', '<mov~~qword ptr [rsp + 0x70], rsi>', '<mov~~qword ptr [rsp + 0x78], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402e44>']}, {'block_Idx': 200, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x550]>', '<mov~~rdi, qword ptr [rax]>', '<lea~~rsi, [rip + 0x2e60]>', '<xor~~edx, edx>', '<call~~0x500048>']}, {'block_Idx': 256, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x390]>', '<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<mov~~rax, qword ptr [rsp + 0x488]>', '<mov~~esi, eax>', '<call~~0x4039ef>']}, {'block_Idx': 341, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x394]>', '<cmp~~eax, 2>', '<jle~~0x40241e>']}, {'block_Idx': 137, 'blockInsts': ['<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 180, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x650]>', '<mov~~edx, dword ptr [rsp + 0x46c]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x47c]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x450], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 7>', '<mov~~dword ptr [rsi], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~edx, 8>', '<mov~~dword ptr [rsi], edx>', '<mov~~edi, 0x80>', '<shr~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x468]>', '<and~~edi, eax>', '<xor~~eax, eax>', '<mov~~esi, 1>', '<cmp~~edi, 0>', '<mov~~edi, edx>', '<mov~~dword ptr [rsp + 0x454], edi>', '<mov~~dword ptr [rsp + 0x458], esi>', '<mov~~dword ptr [rsp + 0x45c], edx>', '<mov~~dword ptr [rsp + 0x460], ecx>', '<mov~~dword ptr [rsp + 0x464], eax>', '<je~~0x4018a8>']}, {'block_Idx': 154, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x59c]>', '<mov~~rdi, qword ptr [rsp + 0x558]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x324b]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 27, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~edx, dword ptr [rsp + 0x624]>', '<mov~~esi, edx>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x598], esi>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x59c], edx>', '<mov~~rdx, rax>', '<add~~rdx, 3>', '<mov~~qword ptr [rsp + 0x5a0], rdx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x5a8], eax>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x5ac], eax>', '<mov~~dword ptr [rcx], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x400d6e>']}, {'block_Idx': 186, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6e0]>', '<mov~~rcx, qword ptr [rsp + 0x6e8]>', '<mov~~esi, dword ptr [rsp + 0xf8]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0xc8], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0xd0], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0xdc], esi>', '<mov~~qword ptr [rsp + 0xe0], rdx>', '<mov~~qword ptr [rsp + 0xe8], rcx>', '<mov~~qword ptr [rsp + 0xf0], rax>', '<jmp~~0x402c16>']}, {'block_Idx': 216, 'blockInsts': ['<jmp~~0x402f73>']}, {'block_Idx': 52, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x578], rax>', '<jmp~~0x400ea2>']}, {'block_Idx': 56, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x18], rdi>', '<mov~~qword ptr [rsp + 0x20], rsi>', '<mov~~qword ptr [rsp + 0x28], rdx>', '<mov~~eax, dword ptr [rdx + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<mov~~dword ptr [rsp + 0x34], eax>', '<mov~~dword ptr [rsi], eax>', '<cmp~~eax, 0x10>', '<jge~~0x400166>']}, {'block_Idx': 28, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x39d1]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x65c]>', '<mov~~ecx, dword ptr [rsp + 0x658]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rdx + 0x98]>', '<mov~~ecx, ecx>', '<mov~~rsi, rdi>', '<add~~rsi, rcx>', '<mov~~eax, eax>', '<mov~~edx, eax>', '<call~~0x500018>']}, {'block_Idx': 169, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~eax, dword ptr [rsp + 0x490]>', '<add~~eax, 1>', '<mov~~dword ptr [rcx], eax>', '<mov~~dword ptr [rsp + 0x484], eax>', '<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~edx, dword ptr [rsp + 0x484]>', '<mov~~dword ptr [rsp + 0x468], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x46c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x470], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x480], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x47c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x480]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401738>']}, {'block_Idx': 178, 'blockInsts': ['<lea~~rdi, [rip + 0x17b1]>', '<lea~~rsi, [rip + 0x1742]>', '<mov~~edx, 0x2be>', '<lea~~rcx, [rip + 0x17af]>', '<call~~0x500050>']}, {'block_Idx': 49, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x650]>', '<mov~~rax, qword ptr [rsp + 0x610]>', '<mov~~edx, dword ptr [rsp + 0x61c]>', '<mov~~qword ptr [rsp + 0x5d0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x5e4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x5dc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x5e0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x5e8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x5ec], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x5f4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400ad0>']}, {'block_Idx': 230, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3e8]>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~rdx, qword ptr [rsp + 0x3e0]>', '<mov~~esi, dword ptr [rsp + 0x3f8]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3d8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3e8], rax>', '<jl~~0x401ae0>']}, {'block_Idx': 168, 'blockInsts': ['<jmp~~0x4016a9>']}, {'block_Idx': 25, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5ec]>', '<cmp~~eax, 0>', '<je~~0x400b69>']}, {'block_Idx': 18, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~dword ptr [rdx], 0x20>', '<mov~~rdx, rax>', '<add~~rdx, 0x54>', '<mov~~qword ptr [rsp + 0x5f8], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x20>', '<mov~~qword ptr [rsp + 0x600], rdx>', '<mov~~qword ptr [rsp + 0x608], rax>', '<mov~~eax, 0x20>', '<mov~~qword ptr [rsp + 0x610], rcx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<mov~~rdi, qword ptr [rsp + 0x650]>', '<mov~~rax, qword ptr [rsp + 0x610]>', '<mov~~edx, dword ptr [rsp + 0x61c]>', '<mov~~qword ptr [rsp + 0x5d0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x5e4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x5dc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x5e0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x5e8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x5ec], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x5f4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400ad0>']}, {'block_Idx': 46, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5ac]>', '<add~~eax, -7>', '<mov~~ecx, 2>', '<mov~~dword ptr [rsp + 0x590], ecx>', '<mov~~dword ptr [rsp + 0x594], eax>', '<jmp~~0x400df0>']}, {'block_Idx': 73, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x544]>', '<mov~~edx, dword ptr [rsp + 0x540]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~edx, 0x28>', '<mov~~qword ptr [rsp + 0x528], rdx>', '<mov~~qword ptr [rsp + 0x530], rcx>', '<mov~~dword ptr [rsp + 0x53c], eax>', '<mov~~rcx, qword ptr [rsp + 0x528]>', '<mov~~rdx, qword ptr [rsp + 0x530]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~dword ptr [rsp + 0x514], eax>', '<mov~~qword ptr [rsp + 0x518], rdx>', '<mov~~qword ptr [rsp + 0x520], rcx>', '<cmp~~eax, 1>', '<jle~~0x401116>']}, {'block_Idx': 87, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x598]>', '<test~~eax, eax>', '<je~~0x40117c>']}, {'block_Idx': 342, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x390]>', '<mov~~rcx, qword ptr [rsp + 0x398]>', '<mov~~esi, dword ptr [rsp + 0x338]>', '<mov~~edx, dword ptr [rsp + 0x33c]>', '<sub~~edx, esi>', '<mov~~esi, eax>', '<add~~esi, -3>', '<mov~~esi, esi>', '<mov~~ecx, dword ptr [rcx + rsi*4]>', '<mov~~dword ptr [rsp + 0x330], ecx>', '<add~~ecx, edx>', '<mov~~dword ptr [rsp + 0x334], ecx>', '<cmp~~eax, 3>', '<je~~0x4020c6>']}, {'block_Idx': 15, 'blockInsts': ['<mov~~edi, dword ptr [rsp + 0x68c]>', '<mov~~esi, dword ptr [rsp + 0x674]>', '<mov~~ecx, dword ptr [rsp + 0x678]>', '<mov~~eax, dword ptr [rsp + 0x67c]>', '<mov~~dword ptr [rsp + 0x658], eax>', '<mov~~dword ptr [rsp + 0x65c], ecx>', '<mov~~edx, eax>', '<add~~edx, edi>', '<add~~edx, ecx>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x660], ecx>', '<mov~~dword ptr [rsp + 0x664], eax>', '<jbe~~0x40076a>']}, {'block_Idx': 140, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<sub~~eax, 0xe>', '<je~~0x401448>']}, {'block_Idx': 116, 'blockInsts': ['<jmp~~0x40253e>']}, {'block_Idx': 172, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x174], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x402f73>']}, {'block_Idx': 372, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x390]>', '<mov~~rax, qword ptr [rsp + 0x550]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x23c3]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 371, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x394]>', '<cmp~~eax, 4>', '<jle~~0x40241e>']}, {'block_Idx': 76, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2073]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 236, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x248]>', '<mov~~rcx, qword ptr [rsp + 0x4b8]>', '<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x4c4], edx>', '<mov~~dword ptr [rsp + 0x4c8], ecx>', '<mov~~dword ptr [rsp + 0x4cc], eax>', '<jmp~~0x402587>']}, {'block_Idx': 160, 'blockInsts': ['<jmp~~0x40253e>']}, {'block_Idx': 369, 'blockInsts': ['<mov~~r8d, dword ptr [rsp + 0x2e4]>', '<mov~~ecx, dword ptr [rsp + 0x2e0]>', '<mov~~rdx, qword ptr [rsp + 0x2d8]>', '<mov~~rsi, qword ptr [rsp + 0x2d0]>', '<mov~~rdi, qword ptr [rsp + 0x398]>', '<add~~ecx, dword ptr [rdi + rdx*4]>', '<mov~~dword ptr [rsp + 0x298], ecx>', '<mov~~eax, ecx>', '<add~~eax, r8d>', '<mov~~dword ptr [rsp + 0x29c], eax>', '<mov~~dword ptr [rdi + rdx*4], eax>', '<add~~rdx, 1>', '<mov~~qword ptr [rsp + 0x2a0], rdx>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x2d8], rdx>', '<mov~~dword ptr [rsp + 0x2e0], ecx>', '<mov~~dword ptr [rsp + 0x2e4], eax>', '<je~~0x40241e>']}, {'block_Idx': 176, 'blockInsts': ['<lea~~rdi, [rip + 0x19df]>', '<lea~~rsi, [rip + 0x1970]>', '<mov~~edx, 0x2bc>', '<lea~~rcx, [rip + 0x19dd]>', '<call~~0x500050>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~esi, dword ptr [rsp + 0x6b0]>', '<mov~~eax, dword ptr [rsp + 0x6b4]>', '<mov~~rdx, qword ptr [rsp + 0x6b8]>', '<mov~~dword ptr [rsp + 0x628], eax>', '<mov~~dword ptr [rsp + 0x62c], esi>', '<mov~~edi, eax>', '<shl~~edi, 3>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x630], rdx>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<cmovl~~edi, esi>', '<xor~~r8d, r8d>', '<cmp~~eax, 0>', '<mov~~esi, eax>', '<cmovl~~esi, r8d>', '<mov~~r8, rcx>', '<add~~r8, 0x28>', '<mov~~qword ptr [rsp + 0x638], r8>', '<mov~~qword ptr [rcx + 0x28], rdx>', '<mov~~r8, rcx>', '<add~~r8, 0x3c>', '<mov~~qword ptr [rsp + 0x640], r8>', '<mov~~dword ptr [rcx + 0x3c], edi>', '<mov~~esi, esi>', '<add~~rdx, rsi>', '<mov~~rsi, rcx>', '<add~~rsi, 0x30>', '<mov~~qword ptr [rsp + 0x648], rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x650], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<cmp~~eax, 0x18>', '<jl~~0x402faa>']}, {'block_Idx': 67, 'blockInsts': ['<jmp~~0x40253e>']}, {'block_Idx': 124, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x500]>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014b6>']}, {'block_Idx': 166, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x234]>', '<cmp~~eax, 2>', '<jne~~0x402e25>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68c]>', '<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<mov~~rsi, qword ptr [rsp + 0x6c8]>', '<mov~~ecx, dword ptr [rsp + 0x660]>', '<mov~~edx, dword ptr [rsp + 0x664]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<add~~ecx, edx>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500020>']}, {'block_Idx': 445, 'blockInsts': ['<mov~~rax, qword ptr [rbp - 0x10]>', '<mov~~ecx, dword ptr [rbp - 0xac]>', '<mov~~edx, dword ptr [rbp - 0x1c8]>', '<sar~~edx, cl>', '<mov~~ecx, dword ptr [rbp - 0x1c4]>', '<movsxd~~rcx, ecx>', '<add~~edx, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rax + rcx*4], edx>', '<xor~~eax, eax>', '<mov~~dword ptr [rbp - 0xa4], eax>', '<mov~~eax, dword ptr [rbp - 0xa4]>', '<mov~~rsp, rbp>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 102, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~edx, dword ptr [rsp + 0x508]>', '<mov~~eax, dword ptr [rsp + 0x50c]>', '<mov~~dword ptr [rsp + 0x4fc], eax>', '<mov~~dword ptr [rsp + 0x500], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x504], ecx>', '<cmp~~eax, ecx>', '<jle~~0x4012c5>']}, {'block_Idx': 159, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x490]>', '<mov~~ecx, dword ptr [rsp + 0x494]>', '<or~~ecx, 2>', '<sub~~ecx, 3>', '<mov~~dword ptr [rsp + 0x484], eax>', '<je~~0x40168e>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6d4]>', '<mov~~esi, dword ptr [rsp + 0x6ac]>', '<mov~~ecx, dword ptr [rsp + 0x69c]>', '<xor~~edx, edx>', '<sub~~ecx, esi>', '<cmovb~~ecx, edx>', '<cmp~~ecx, eax>', '<cmovb~~eax, ecx>', '<mov~~dword ptr [rsp + 0x698], eax>', '<mov~~eax, dword ptr [rsp + 0x6ac]>', '<mov~~edx, dword ptr [rsp + 0x698]>', '<mov~~dword ptr [rsp + 0x68c], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x690], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x694], eax>', '<jb~~0x40308a>']}, {'block_Idx': 222, 'blockInsts': ['<jmp~~0x40253e>']}, {'block_Idx': 44, 'blockInsts': ['<jmp~~0x400dc0>']}, {'block_Idx': 313, 'blockInsts': ['<sub~~rsp, 0x198>', '<mov~~dword ptr [rsp + 0x168], edx>', '<mov~~dword ptr [rsp + 0x16c], esi>', '<mov~~qword ptr [rsp + 0x170], rdi>', '<mov~~rax, rdi>', '<add~~rax, 0x38>', '<mov~~qword ptr [rsp + 0x178], rax>', '<mov~~ecx, dword ptr [rdi + 0x38]>', '<mov~~dword ptr [rsp + 0x18c], ecx>', '<mov~~rax, qword ptr [rdi + 0x28]>', '<mov~~qword ptr [rsp + 0x180], rax>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x18c]>', '<shr~~eax, 0xfe>', '<mov~~dword ptr [rsp + 0x190], eax>', '<add~~ecx, 2>', '<mov~~dword ptr [rsp + 0x194], ecx>', '<mov~~dword ptr [rdi + 0x38], ecx>', '<cmp~~eax, 1>', '<jle~~0x403aa3>']}, {'block_Idx': 100, 'blockInsts': ['<jmp~~0x40116b>']}, {'block_Idx': 258, 'blockInsts': ['<jmp~~0x40253e>']}, {'block_Idx': 118, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rsp + 0x4e8]>', '<mov~~edx, dword ptr [rsp + 0x4ec]>', '<mov~~dword ptr [rsp + 0x4d0], edx>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500038>']}, {'block_Idx': 41, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x5f8]>', '<cmp~~dword ptr [rax], 0>', '<jne~~0x400b48>']}, {'block_Idx': 90, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x694], eax>', '<jmp~~0x40308a>']}, {'block_Idx': 9, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6ac]>', '<mov~~edx, dword ptr [rsp + 0x698]>', '<mov~~dword ptr [rsp + 0x68c], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x690], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x694], eax>', '<jb~~0x40308a>']}, {'block_Idx': 98, 'blockInsts': ['<jmp~~0x40253e>']}, {'block_Idx': 105, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6f4]>', '<mov~~edx, dword ptr [rsp + 0x4fc]>', '<mov~~esi, dword ptr [rsp + 0x584]>', '<mov~~r8b, byte ptr [rsp + 0x54f]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<add~~rax, 0xc>', '<mov~~qword ptr [rsp + 0x4f0], rax>', '<mov~~eax, 2>', '<mov~~edi, 4>', '<test~~r8b, 1>', '<cmovne~~eax, edi>', '<imul~~eax, esi>', '<imul~~eax, edx>', '<cmp~~eax, ecx>', '<jg~~0x40253e>']}, {'block_Idx': 380, 'blockInsts': ['<jmp~~0x402200>']}, {'block_Idx': 59, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x588]>', '<movsxd~~rcx, eax>', '<lea~~rax, [rip + 0x3a37]>', '<shl~~rcx, 2>', '<add~~rax, rcx>', '<mov~~qword ptr [rsp + 0x578], rax>', '<jmp~~0x400ea2>']}, {'block_Idx': 188, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6e0]>', '<mov~~rcx, qword ptr [rsp + 0x6e8]>', '<mov~~esi, dword ptr [rsp + 0x88]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x58], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x60], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0x6c], esi>', '<mov~~qword ptr [rsp + 0x70], rdx>', '<mov~~qword ptr [rsp + 0x78], rcx>', '<mov~~qword ptr [rsp + 0x80], rax>', '<jmp~~0x402e44>']}, {'block_Idx': 206, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x1b0]>', '<mov~~esi, dword ptr [rsp + 0x18c]>', '<mov~~rax, qword ptr [rsp + 0x190]>', '<mov~~rcx, qword ptr [rsp + 0x198]>', '<mov~~qword ptr [rsp + 0x178], rcx>', '<mov~~qword ptr [rsp + 0x180], rax>', '<mov~~dword ptr [rsp + 0x188], esi>', '<add~~rdx, 1>', '<movsxd~~rdi, esi>', '<cmp~~rdx, rdi>', '<mov~~dword ptr [rsp + 0x1cc], esi>', '<mov~~qword ptr [rsp + 0x1d0], rdx>', '<mov~~qword ptr [rsp + 0x1d8], rcx>', '<mov~~qword ptr [rsp + 0x1e0], rax>', '<jl~~0x4026f0>']}, {'block_Idx': 130, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<sub~~eax, 0xd>', '<je~~0x401401>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x450]>', '<test~~eax, eax>', '<je~~0x401973>']}, {'block_Idx': 252, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~edi, dword ptr [rsp + 0x3cc]>', '<mov~~esi, dword ptr [rsp + 0x3c8]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~r9d, dword ptr [rsp + 0x3d4]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x3b4], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x3d0]>', '<mov~~dword ptr [rsp + 0x3b8], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3b4]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3b8]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x3bc], eax>', '<mov~~rax, qword ptr [rsp + 0x3c0]>', '<mov~~rdx, qword ptr [rsp + 0x410]>', '<mov~~edi, dword ptr [rsp + 0x3c8]>', '<mov~~esi, dword ptr [rsp + 0x3bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x3a4], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x3a4]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3a8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x40241e>']}, {'block_Idx': 35, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x5ac]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~edx, ecx>', '<mov~~dword ptr [rsp + 0x58c], edx>', '<mov~~dword ptr [rsp + 0x590], ecx>', '<mov~~dword ptr [rsp + 0x594], eax>', '<je~~0x400df0>']}, {'block_Idx': 303, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x40253e>']}, {'block_Idx': 144, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x4d4]>', '<mov~~ecx, dword ptr [rsp + 0x580]>', '<mov~~rdx, qword ptr [rsp + 0x4f0]>', '<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rsp + 0x570]>', '<mov~~r8d, dword ptr [rsp + 0x548]>', '<mov~~r9d, dword ptr [rsp + 0x4d0]>', '<mov~~r10d, dword ptr [rsp + 0x4fc]>', '<mov~~r11, rsi>', '<add~~r11, 0x40>', '<mov~~qword ptr [rsp + 0x4b0], r11>', '<mov~~dword ptr [rsi + 0x40], r10d>', '<mov~~dword ptr [rsi + 8], r9d>', '<mov~~dword ptr [rdi], r8d>', '<mov~~rdi, rsi>', '<add~~rdi, 0x50>', '<mov~~qword ptr [rsp + 0x4b8], rdi>', '<mov~~dword ptr [rsi + 0x50], ecx>', '<mov~~edx, dword ptr [rdx]>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x4c4], edx>', '<mov~~dword ptr [rsp + 0x4c8], ecx>', '<mov~~dword ptr [rsp + 0x4cc], eax>', '<jle~~0x402587>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~eax, dword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x18]>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<sub~~ecx, eax>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x164b]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 261, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3c0]>', '<mov~~rdx, qword ptr [rsp + 0x410]>', '<mov~~edi, dword ptr [rsp + 0x3c8]>', '<mov~~esi, dword ptr [rsp + 0x3bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x3a4], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x3a4]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3a8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x40241e>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~edx, dword ptr [rsp + 0x5f0]>', '<mov~~ecx, dword ptr [rax]>', '<add~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x5dc]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<jne~~0x402faa>']}, {'block_Idx': 29, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<mov~~rcx, qword ptr [rsp + 0x6a0]>', '<mov~~rdx, qword ptr [rsp + 0x668]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x680]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x674], edx>', '<mov~~dword ptr [rsp + 0x678], ecx>', '<mov~~dword ptr [rsp + 0x67c], eax>', '<mov~~edi, dword ptr [rsp + 0x68c]>', '<mov~~esi, dword ptr [rsp + 0x674]>', '<mov~~ecx, dword ptr [rsp + 0x678]>', '<mov~~eax, dword ptr [rsp + 0x67c]>', '<mov~~dword ptr [rsp + 0x658], eax>', '<mov~~dword ptr [rsp + 0x65c], ecx>', '<mov~~edx, eax>', '<add~~edx, edi>', '<add~~edx, ecx>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x660], ecx>', '<mov~~dword ptr [rsp + 0x664], eax>', '<jbe~~0x40076a>']}, {'block_Idx': 217, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0xb0]>', '<mov~~eax, dword ptr [rsp + 0x8c]>', '<mov~~rcx, qword ptr [rsp + 0x90]>', '<mov~~rdx, qword ptr [rsp + 0x98]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0xdc], edi>', '<mov~~qword ptr [rsp + 0xe0], rsi>', '<mov~~qword ptr [rsp + 0xe8], rdx>', '<mov~~qword ptr [rsp + 0xf0], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402c16>']}, {'block_Idx': 145, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x4e4]>', '<mov~~rax, qword ptr [rsp + 0x550]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x31cb]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 146, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x500]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014b6>']}, {'block_Idx': 113, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<call~~0x4030b5>']}, {'block_Idx': 80, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~rcx, qword ptr [rsp + 0x520]>', '<mov~~dword ptr [rsp + 0x510], ecx>', '<cmp~~rax, 0>', '<jge~~0x401150>']}, {'block_Idx': 193, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x560]>', '<mov~~rax, qword ptr [rsp + 0x568]>', '<mov~~rsi, qword ptr [rsp + 0x148]>', '<mov~~rdx, qword ptr [rsp + 0x140]>', '<mov~~r8d, dword ptr [rsp + 0x154]>', '<mov~~rdi, qword ptr [rsp + 0x158]>', '<mov~~r9, qword ptr [rsp + 0x160]>', '<mov~~r10, qword ptr [rsp + 0x168]>', '<mov~~qword ptr [rsp + 0x110], r10>', '<mov~~qword ptr [rsp + 0x118], r9>', '<mov~~qword ptr [rsp + 0x120], rdi>', '<mov~~dword ptr [rsp + 0x12c], r8d>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~dword ptr [rsp + 0x130], edx>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~dword ptr [rsp + 0x134], esi>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x138], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x13c], edx>', '<cmp~~eax, 0>', '<je~~0x402aaf>']}, {'block_Idx': 240, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x42c]>', '<mov~~edx, dword ptr [rsp + 0x430]>', '<mov~~eax, dword ptr [rsp + 0x390]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x378], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x380], edx>', '<mov~~dword ptr [rsp + 0x384], ecx>', '<mov~~qword ptr [rsp + 0x388], rax>', '<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x380]>', '<mov~~eax, dword ptr [rsp + 0x384]>', '<mov~~rsi, qword ptr [rsp + 0x388]>', '<mov~~qword ptr [rsp + 0x360], rsi>', '<mov~~dword ptr [rsp + 0x368], eax>', '<mov~~dword ptr [rsp + 0x36c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x370], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x374], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401e07>']}, {'block_Idx': 177, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x88], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x402f73>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~ecx, dword ptr [rsp + 0x704]>', '<mov~~dword ptr [rsp + 0x69c], ecx>', '<mov~~rcx, rax>', '<add~~rcx, 0xa0>', '<mov~~qword ptr [rsp + 0x6a0], rcx>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x6ac], eax>', '<cmp~~eax, 4>', '<jb~~0x40057b>']}, {'block_Idx': 224, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x428]>', '<cmp~~eax, 0>', '<je~~0x4024a8>']}, {'block_Idx': 112, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x510]>', '<mov~~eax, dword ptr [rsp + 0x598]>', '<movsxd~~rdx, eax>', '<lea~~rax, [rip + 0x3199]>', '<mov~~eax, dword ptr [rax + rdx*4]>', '<mov~~dword ptr [rsp + 0x508], ecx>', '<mov~~dword ptr [rsp + 0x50c], eax>', '<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~edx, dword ptr [rsp + 0x508]>', '<mov~~eax, dword ptr [rsp + 0x50c]>', '<mov~~dword ptr [rsp + 0x4fc], eax>', '<mov~~dword ptr [rsp + 0x500], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x504], ecx>', '<cmp~~eax, ecx>', '<jle~~0x4012c5>']}, {'block_Idx': 190, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x45c]>', '<mov~~eax, dword ptr [rsp + 0x460]>', '<mov~~edx, dword ptr [rsp + 0x464]>', '<mov~~dword ptr [rsp + 0x428], edx>', '<mov~~dword ptr [rsp + 0x42c], eax>', '<mov~~dword ptr [rsp + 0x430], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x4018f5>']}, {'block_Idx': 64, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x540], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~ecx, edi>', '<shr~~ecx, 8>', '<mov~~eax, edx>', '<or~~eax, 8>', '<cmp~~esi, 0>', '<cmove~~ecx, edi>', '<cmp~~esi, 0>', '<cmove~~eax, edx>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, qword ptr [rip + 0xff01f]>', '<movzx~~ecx, byte ptr [rcx + rdx]>', '<add~~eax, ecx>', '<mov~~ecx, 7>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsp + 0x544], ecx>', '<cmp~~eax, 6>', '<je~~0x401133>']}, {'block_Idx': 82, 'blockInsts': ['<jmp~~0x40253e>']}, {'block_Idx': 119, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~eax, dword ptr [rsp + 0x59c]>', '<movsxd~~rdx, eax>', '<lea~~rax, [rip + 0x30c6]>', '<mov~~eax, dword ptr [rax + rdx*4]>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014b6>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6d4]>', '<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<cmp~~dword ptr [rcx], 0x43614c66>', '<mov~~dword ptr [rsp + 0x698], eax>', '<je~~0x4005a3>']}, {'block_Idx': 163, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x234]>', '<cmp~~eax, 2>', '<jne~~0x40299f>']}, {'block_Idx': 75, 'blockInsts': ['<jmp~~0x40253e>']}, {'block_Idx': 167, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6c0]>', '<mov~~rdi, qword ptr [rsp + 0x568]>', '<mov~~rdx, qword ptr [rsp + 0x4f0]>', '<mov~~ecx, dword ptr [rsp + 0x230]>', '<imul~~ecx, dword ptr [rdx]>', '<mov~~edx, 4>', '<mov~~esi, 2>', '<cmp~~dword ptr [rdi], 0>', '<cmove~~edx, esi>', '<imul~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x628]>', '<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x18], eax>', '<cmp~~eax, ecx>', '<jle~~0x403021>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x690]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, rax>', '<add~~rdx, 0xa4>', '<mov~~qword ptr [rsp + 0x680], rdx>', '<mov~~edx, dword ptr [rax + 0xa4]>', '<mov~~dword ptr [rsp + 0x688], edx>', '<xor~~edx, 0xffffffff>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x694], eax>', '<ja~~0x40308a>']}, {'block_Idx': 232, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x40241e>']}, {'block_Idx': 370, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x340]>', '<mov~~ecx, dword ptr [rsp + 0x33c]>', '<mov~~edx, dword ptr [rsp + 0x334]>', '<mov~~esi, dword ptr [rsp + 0x394]>', '<mov~~esi, esi>', '<mov~~qword ptr [rsp + 0x2e8], rsi>', '<mov~~esi, 3>', '<mov~~qword ptr [rsp + 0x2f0], rsi>', '<mov~~dword ptr [rsp + 0x2fc], edx>', '<mov~~dword ptr [rsp + 0x300], ecx>', '<mov~~dword ptr [rsp + 0x304], eax>', '<jmp~~0x40226d>']}, {'block_Idx': 225, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rcx, qword ptr [rsp + 0x488]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x3e0], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x3e8], rax>', '<mov~~rax, qword ptr [rsp + 0x3e8]>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~rdx, qword ptr [rsp + 0x3e0]>', '<mov~~esi, dword ptr [rsp + 0x3f8]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3d8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3e8], rax>', '<jl~~0x401ae0>']}, {'block_Idx': 156, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x238]>', '<lea~~rcx, [rip + 0x1e06]>', '<movsxd~~rax, dword ptr [rcx + rax*4]>', '<add~~rax, rcx>', '<jmp~~rax>']}, {'block_Idx': 139, 'blockInsts': ['<mov~~dword ptr [rsp + 0x4e4], eax>', '<cmp~~eax, 0>', '<je~~0x401553>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, qword ptr [rsp + 0x6f8]>', '<mov~~ecx, dword ptr [rsp + 0x6d4]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x6c8]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~esi, dword ptr [rdx]>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x704], esi>', '<mov~~dword ptr [rsp + 0x6b0], edx>', '<mov~~dword ptr [rsp + 0x6b4], ecx>', '<mov~~qword ptr [rsp + 0x6b8], rax>', '<je~~0x400817>']}], 'cfg_edge_info': [(247, 255), (226, 232), (229, 228), (18, 26), (229, 237), (159, 169), (191, 201), (11, 14), (251, 261), (140, 146), (203, 193), (41, 42), (232, 238), (25, 34), (125, 130), (165, 175), (144, 152), (233, 239), (106, 116), (177, 167), (55, 61), (96, 99), (89, 72), (228, 236), (210, 218), (328, 341), (232, 224), (172, 182), (113, 142), (372, 393), (224, 229), (50, 113), (225, 230), (348, 282), (235, 243), (88, 81), (29, 22), (139, 144), (180, 191), (191, 191), (40, 49), (169, 181), (369, 224), (25, 33), (282, 76), (252, 224), (424, 425), (87, 93), (218, 167), (371, 382), (228, 235), (380, 369), (10, 12), (184, 174), (224, 228), (51, 40), (217, 216), (142, 33), (179, 180), (142, 51), (88, 80), (28, 47), (6, 10), (29, 21), (168, 179), (180, 190), (58, 75), (172, 167), (169, 180), (242, 250), (221, 227), (160, 76), (87, 92), (227, 233), (65, 82), (201, 199), (120, 125), (39, 38), (51, 12), (234, 241), (445, 424), (217, 197), (124, 118), (43, 53), (57, 64), (209, 198), (356, 369), (220, 225), (236, 151), (261, 262), (175, 186), (35, 44), (193, 203), (164, 167), (156, 163), (135, 140), (243, 158), (27, 36), (120, 124), (258, 76), (427, 424), (50, 56), (182, 193), (146, 118), (32, 7), (194, 167), (75, 76), (355, 368), (212, 221), (171, 76), (424, 76), (19, 27), (239, 313), (175, 167), (223, 225), (86, 76), (318, 328), (27, 35), (340, 355), (197, 208), (42, 33), (119, 118), (219, 223), (211, 219), (112, 106), (303, 311), (116, 76), (105, 76), (115, 120), (16, 7), (174, 184), (18, 25), (156, 166), (67, 76), (400, 392), (41, 50), (255, 257), (215, 193), (144, 151), (340, 224), (216, 167), (68, 12), (93, 96), (49, 26), (237, 244), (318, 327), (358, 372), (203, 214), (112, 105), (152, 159), (34, 42), (107, 102), (177, 188), (218, 198), (8, 7), (118, 129), (207, 216), (199, 212), (73, 81), (255, 256), (44, 54), (244, 228), (381, 224), (114, 118), (38, 7), (348, 303), (357, 370), (36, 46), (49, 25), (47, 55), (59, 57), (99, 102), (188, 198), (358, 371), (8, 11), (262, 245), (369, 380), (129, 139), (100, 103), (151, 157), (33, 40), (81, 89), (22, 39), (195, 205), (206, 205), (166, 178), (198, 210), (207, 197), (0, 2), (199, 211), (391, 381), (221, 226), (167, 17), (240, 248), (54, 67), (73, 80), (103, 108), (90, 7), (17, 32), (36, 45), (158, 169), (76, 90), (256, 313), (21, 38), (148, 142), (80, 87), (242, 424), (33, 12), (140, 147), (110, 115), (342, 358), (43, 52), (165, 176), (392, 224), (198, 209), (147, 154), (220, 224), (61, 69), (328, 342), (102, 106), (327, 224), (214, 167), (55, 12), (154, 171), (35, 43), (103, 107), (202, 76), (139, 145), (256, 303), (42, 51), (357, 224), (341, 356), (205, 194), (2, 5), (231, 224), (110, 114), (342, 357), (47, 12), (195, 185), (206, 185), (157, 167), (327, 340), (261, 224), (80, 72), (61, 68), (190, 200), (10, 13), (102, 105), (223, 224), (108, 112), (164, 174), (9, 8), (291, 224), (208, 217), (425, 224), (179, 181), (368, 355), (6, 2), (98, 76), (197, 207), (238, 245), (257, 267), (381, 391), (2, 4), (115, 119), (13, 19), (204, 215), (382, 392), (64, 73), (72, 86), (46, 43), (156, 165), (245, 252), (68, 61), (248, 257), (227, 234), (201, 200), (163, 173), (200, 222), (190, 199), (368, 224), (311, 318), (303, 76), (234, 242), (282, 291), (267, 248), (196, 206), (53, 59), (341, 224), (185, 196), (145, 160), (5, 9), (69, 12), (9, 7), (57, 65), (130, 135), (186, 197), (230, 231), (82, 76), (205, 174), (241, 258), (370, 381), (12, 17), (371, 224), (152, 158), (34, 41), (13, 18), (215, 214), (16, 23), (105, 110), (64, 72), (137, 142), (193, 204), (5, 4), (156, 164), (209, 167), (245, 251), (248, 256), (243, 159), (134, 118), (163, 172), (4, 8), (52, 57), (392, 400), (267, 247), (53, 58), (45, 54), (15, 22), (185, 195), (130, 134), (159, 170), (170, 179), (11, 15), (230, 230), (19, 28), (92, 98), (151, 156), (12, 16), (81, 88), (1, 6), (233, 240), (181, 202), (252, 262), (38, 10), (166, 177), (237, 228), (96, 100), (393, 76), (0, 1), (167, 16), (239, 282), (240, 247), (4, 7), (211, 220), (225, 231), (244, 244), (14, 29), (222, 76), (26, 12), (174, 185), (158, 168)], 'cdg_edge_info': [(18, 26), (229, 237), (102, 7), (369, 369), (159, 169), (180, 201), (11, 14), (140, 146), (203, 193), (41, 42), (53, 7), (64, 7), (232, 238), (25, 34), (165, 175), (103, 102), (144, 152), (233, 239), (228, 151), (166, 167), (358, 90), (18, 12), (55, 61), (96, 99), (357, 381), (228, 236), (80, 90), (328, 341), (221, 224), (172, 182), (224, 229), (110, 118), (240, 255), (190, 7), (282, 90), (225, 230), (358, 76), (87, 98), (328, 224), (88, 81), (36, 43), (96, 103), (29, 22), (139, 144), (180, 191), (191, 191), (140, 118), (80, 76), (169, 181), (221, 228), (190, 222), (358, 224), (81, 86), (25, 33), (282, 76), (424, 425), (424, 7), (87, 93), (371, 382), (228, 235), (220, 231), (10, 12), (81, 72), (221, 232), (51, 40), (51, 49), (142, 33), (179, 180), (142, 51), (88, 80), (140, 90), (6, 10), (120, 130), (120, 139), (180, 190), (201, 222), (105, 7), (261, 245), (169, 180), (102, 90), (221, 227), (64, 90), (87, 92), (35, 54), (53, 90), (227, 233), (179, 202), (120, 125), (201, 199), (102, 76), (51, 12), (234, 241), (217, 197), (223, 231), (53, 76), (64, 76), (43, 53), (87, 96), (190, 90), (57, 64), (342, 224), (209, 198), (57, 82), (120, 129), (220, 225), (234, 7), (261, 262), (175, 186), (64, 80), (35, 44), (193, 203), (156, 163), (190, 76), (233, 303), (243, 158), (81, 7), (424, 90), (27, 36), (120, 124), (112, 116), (53, 57), (267, 255), (115, 139), (53, 75), (156, 167), (424, 76), (179, 7), (19, 27), (255, 267), (35, 7), (169, 7), (201, 76), (105, 90), (223, 225), (424, 224), (318, 328), (27, 35), (197, 208), (42, 33), (211, 219), (112, 106), (303, 311), (105, 76), (115, 120), (16, 7), (115, 129), (424, 228), (156, 166), (18, 25), (193, 215), (177, 198), (140, 154), (41, 50), (211, 223), (255, 257), (215, 193), (318, 224), (328, 228), (233, 256), (234, 90), (49, 26), (237, 244), (185, 206), (130, 118), (318, 327), (358, 372), (19, 12), (282, 224), (201, 7), (151, 167), (358, 228), (167, 32), (81, 90), (112, 105), (152, 159), (34, 42), (57, 7), (234, 76), (49, 12), (96, 102), (177, 188), (218, 198), (8, 7), (29, 39), (199, 212), (282, 228), (199, 221), (81, 76), (87, 7), (140, 171), (179, 90), (73, 81), (232, 245), (392, 392), (110, 139), (38, 7), (357, 370), (36, 46), (49, 25), (35, 90), (47, 55), (158, 179), (169, 90), (358, 371), (8, 11), (228, 243), (140, 139), (151, 157), (179, 76), (169, 202), (33, 40), (81, 89), (33, 49), (35, 67), (35, 76), (169, 76), (198, 210), (207, 197), (139, 151), (0, 2), (139, 160), (199, 211), (167, 17), (139, 7), (240, 248), (172, 193), (102, 116), (110, 129), (43, 57), (103, 108), (36, 45), (158, 169), (342, 228), (36, 54), (303, 7), (140, 129), (80, 87), (33, 12), (140, 147), (110, 115), (234, 258), (342, 358), (201, 90), (165, 167), (43, 52), (103, 112), (198, 209), (198, 218), (57, 90), (328, 342), (102, 106), (35, 43), (103, 107), (87, 90), (57, 76), (139, 145), (197, 217), (42, 51), (80, 86), (341, 356), (2, 5), (110, 114), (342, 357), (87, 76), (195, 185), (206, 185), (112, 7), (248, 267), (120, 118), (327, 340), (340, 368), (80, 72), (371, 392), (61, 68), (190, 200), (10, 13), (12, 32), (341, 369), (102, 105), (36, 7), (139, 90), (164, 174), (9, 8), (179, 181), (6, 2), (197, 207), (2, 4), (115, 119), (303, 90), (318, 228), (13, 19), (64, 73), (139, 76), (175, 197), (156, 165), (245, 252), (245, 261), (68, 61), (248, 257), (227, 234), (130, 140), (368, 368), (201, 200), (190, 199), (303, 76), (234, 242), (282, 291), (267, 248), (53, 59), (185, 196), (64, 86), (233, 282), (5, 9), (174, 205), (9, 7), (57, 65), (130, 135), (8, 38), (19, 47), (205, 174), (381, 381), (12, 17), (358, 7), (152, 158), (303, 318), (252, 245), (115, 118), (34, 41), (13, 18), (16, 23), (105, 110), (64, 72), (193, 204), (5, 4), (156, 164), (80, 7), (245, 251), (140, 76), (243, 159), (130, 139), (358, 393), (282, 7), (11, 29), (112, 90), (163, 172), (4, 8), (267, 247), (53, 58), (185, 195), (159, 170), (130, 134), (0, 6), (36, 90), (159, 179), (230, 230), (19, 28), (199, 224), (112, 76), (151, 156), (12, 7), (163, 167), (81, 88), (12, 16), (233, 240), (252, 262), (38, 10), (166, 177), (96, 100), (36, 67), (36, 76), (130, 129), (0, 1), (167, 7), (199, 228), (167, 16), (240, 247), (4, 7), (211, 220), (140, 7), (244, 244), (174, 185), (158, 168)], 'ddg_edge_info': [(247, 255), (229, 237), (0, 5), (233, 356), (368, 172), (180, 201), (11, 14), (251, 261), (39, 81), (224, 243), (243, 256), (369, 252), (146, 180), (177, 167), (392, 241), (64, 146), (233, 369), (191, 223), (57, 372), (224, 220), (243, 233), (244, 198), (255, 244), (369, 229), (27, 120), (224, 256), (229, 191), (144, 232), (1, 103), (29, 22), (180, 191), (6, 38), (191, 200), (38, 107), (129, 145), (381, 180), (224, 233), (244, 211), (318, 17), (129, 230), (57, 241), (229, 204), (1, 80), (191, 177), (255, 198), (228, 244), (0, 237), (224, 210), (244, 188), (27, 110), (381, 193), (237, 185), (229, 181), (129, 243), (1, 57), (13, 68), (179, 180), (5, 27), (210, 167), (28, 47), (255, 175), (368, 381), (318, 151), (230, 267), (255, 211), (201, 240), (27, 87), (368, 237), (224, 223), (392, 185), (129, 220), (1, 34), (9, 11), (228, 198), (144, 235), (6, 5), (191, 167), (43, 152), (255, 188), (27, 64), (39, 38), (224, 200), (142, 167), (261, 267), (112, 144), (57, 208), (217, 197), (392, 198), (124, 118), (129, 233), (142, 23), (57, 64), (372, 76), (209, 198), (228, 211), (224, 177), (238, 261), (318, 370), (230, 257), (236, 151), (369, 186), (261, 244), (39, 51), (57, 185), (392, 175), (129, 210), (318, 262), (164, 167), (228, 188), (191, 157), (38, 64), (27, 54), (39, 28), (182, 193), (247, 179), (112, 134), (57, 198), (318, 239), (392, 188), (223, 230), (129, 223), (81, 146), (49, 50), (9, 14), (261, 198), (224, 167), (243, 180), (39, 41), (224, 23), (129, 200), (175, 167), (369, 261), (1, 14), (230, 368), (10, 99), (261, 211), (205, 167), (39, 18), (191, 232), (10, 220), (224, 180), (57, 152), (318, 193), (129, 177), (381, 392), (112, 124), (318, 229), (381, 248), (49, 40), (229, 236), (1, 112), (261, 188), (207, 217), (0, 4), (224, 157), (230, 237), (381, 369), (191, 245), (318, 206), (215, 193), (1, 4), (381, 225), (185, 206), (318, 327), (369, 372), (179, 248), (99, 139), (233, 368), (0, 17), (129, 167), (369, 228), (27, 119), (224, 255), (244, 233), (208, 167), (129, 23), (230, 191), (88, 107), (118, 129), (105, 196), (255, 220), (129, 144), (233, 381), (191, 235), (318, 196), (10, 43), (2, 39), (369, 241), (26, 167), (39, 106), (59, 57), (158, 179), (144, 244), (1, 115), (8, 11), (261, 191), (99, 129), (233, 358), (255, 233), (129, 157), (224, 245), (244, 223), (381, 228), (230, 181), (1, 92), (207, 197), (237, 76), (167, 17), (244, 200), (2, 29), (28, 167), (54, 76), (381, 205), (0, 105), (39, 96), (392, 220), (229, 193), (129, 255), (235, 236), (228, 233), (211, 180), (318, 392), (318, 163), (255, 223), (381, 182), (39, 73), (224, 235), (129, 232), (392, 233), (9, 23), (198, 218), (191, 179), (10, 167), (255, 200), (369, 185), (0, 239), (39, 50), (10, 252), (243, 225), (10, 23), (368, 262), (106, 76), (318, 261), (129, 245), (1, 59), (57, 76), (255, 177), (228, 223), (139, 145), (38, 99), (318, 382), (244, 167), (369, 198), (381, 172), (224, 225), (57, 197), (318, 238), (195, 167), (1, 36), (228, 200), (369, 175), (201, 219), (261, 233), (39, 40), (244, 180), (10, 13), (2, 9), (129, 199), (368, 252), (146, 139), (112, 146), (57, 210), (318, 251), (392, 200), (129, 235), (142, 25), (1, 49), (228, 177), (10, 134), (255, 167), (27, 43), (39, 17), (224, 179), (105, 228), (318, 372), (244, 157), (369, 188), (368, 229), (39, 53), (191, 267), (318, 228), (392, 177), (382, 392), (1, 26), (28, 16), (224, 156), (43, 144), (243, 169), (230, 236), (255, 180), (261, 223), (0, 39), (191, 244), (318, 205), (146, 129), (57, 200), (318, 241), (229, 392), (1, 39), (228, 167), (144, 204), (185, 205), (5, 9), (229, 248), (255, 157), (1, 124), (261, 200), (64, 180), (224, 169), (129, 166), (261, 236), (0, 52), (191, 257), (229, 369), (318, 218), (392, 167), (1, 16), (27, 154), (381, 237), (209, 167), (228, 180), (18, 41), (243, 159), (229, 261), (27, 46), (0, 29), (57, 154), (318, 195), (129, 179), (224, 267), (244, 245), (196, 205), (76, 23), (228, 157), (185, 195), (237, 242), (1, 114), (0, 6), (233, 357), (159, 179), (224, 159), (129, 156), (57, 167), (243, 257), (318, 208), (392, 157), (10, 55), (1, 6), (39, 118), (38, 10), (261, 167), (191, 368), (8, 23), (233, 370), (368, 186), (167, 16), (57, 144), (318, 185), (129, 169), (255, 245), (73, 88), (224, 257), (229, 372), (244, 235), (38, 23), (229, 228), (230, 193), (261, 180), (191, 201), (191, 237), (151, 164), (224, 234), (318, 198), (244, 248), (392, 232), (229, 205), (129, 267), (1, 81), (261, 157), (0, 238), (228, 245), (0, 9), (244, 369), (318, 175), (129, 159), (255, 235), (369, 220), (240, 255), (18, 142), (368, 261), (224, 247), (244, 225), (196, 185), (237, 186), (229, 182), (129, 244), (392, 245), (90, 23), (88, 99), (107, 112), (10, 179), (58, 76), (369, 197), (243, 237), (369, 233), (180, 303), (129, 257), (81, 180), (144, 236), (28, 61), (228, 235), (224, 201), (318, 165), (255, 225), (224, 237), (245, 180), (229, 172), (129, 234), (392, 235), (237, 32), (368, 372), (233, 327), (191, 181), (261, 245), (172, 167), (368, 228), (39, 52), (129, 211), (64, 81), (43, 58), (229, 185), (35, 54), (228, 369), (129, 247), (10, 146), (9, 38), (228, 225), (224, 191), (369, 200), (368, 241), (39, 65), (318, 240), (129, 224), (1, 38), (13, 49), (230, 392), (49, 51), (243, 181), (230, 248), (369, 177), (261, 235), (224, 204), (244, 182), (2, 11), (129, 201), (230, 369), (1, 51), (243, 158), (39, 19), (224, 181), (230, 261), (261, 248), (146, 118), (10, 257), (318, 230), (229, 381), (1, 28), (39, 140), (261, 369), (0, 185), (38, 68), (224, 158), (369, 167), (201, 211), (261, 225), (233, 392), (318, 207), (129, 191), (255, 267), (1, 5), (252, 261), (244, 257), (318, 243), (381, 262), (318, 328), (27, 35), (154, 76), (0, 18), (368, 185), (119, 118), (0, 54), (318, 220), (129, 204), (1, 18), (39, 130), (230, 372), (228, 182), (318, 341), (230, 228), (228, 267), (233, 382), (180, 227), (368, 198), (191, 236), (151, 163), (318, 197), (129, 181), (255, 257), (39, 107), (0, 152), (381, 252), (237, 244), (392, 267), (230, 205), (107, 134), (0, 8), (368, 175), (244, 368), (318, 174), (129, 158), (112, 105), (224, 17), (10, 57), (318, 210), (381, 229), (39, 120), (392, 244), (230, 182), (152, 262), (228, 257), (179, 252), (233, 372), (368, 188), (244, 381), (49, 142), (369, 232), (240, 267), (244, 237), (129, 256), (392, 257), (229, 230), (255, 368), (1, 106), (107, 124), (261, 182), (188, 198), (10, 191), (237, 90), (318, 164), (38, 146), (151, 166), (224, 236), (10, 47), (369, 245), (39, 110), (230, 172), (191, 180), (29, 38), (244, 191), (318, 177), (255, 237), (39, 87), (237, 188), (392, 211), (228, 368), (129, 17), (230, 185), (36, 54), (76, 90), (1, 96), (261, 172), (144, 261), (191, 193), (203, 167), (261, 257), (39, 64), (392, 368), (243, 239), (229, 197), (228, 381), (142, 49), (1, 73), (198, 209), (105, 167), (255, 191), (228, 237), (201, 220), (224, 203), (244, 181), (27, 103), (381, 186), (180, 282), (318, 252), (318, 23), (35, 43), (129, 236), (142, 26), (1, 50), (105, 144), (341, 356), (39, 54), (1, 27), (230, 381), (28, 17), (261, 368), (228, 191), (157, 167), (255, 181), (340, 368), (220, 223), (27, 57), (224, 193), (236, 167), (0, 76), (318, 242), (392, 191), (229, 164), (142, 16), (1, 40), (381, 261), (144, 205), (261, 381), (257, 267), (201, 223), (261, 237), (368, 220), (224, 206), (112, 114), (217, 167), (318, 219), (129, 203), (1, 17), (64, 73), (318, 255), (228, 181), (318, 340), (229, 262), (368, 197), (129, 180), (368, 233), (318, 232), (392, 181), (196, 206), (39, 142), (185, 196), (191, 392), (186, 197), (35, 144), (381, 372), (39, 34), (191, 248), (10, 236), (224, 16), (318, 209), (129, 193), (39, 119), (144, 172), (16, 23), (0, 164), (191, 369), (5, 13), (237, 256), (229, 252), (107, 146), (233, 371), (11, 29), (191, 225), (57, 145), (318, 186), (191, 261), (57, 181), (244, 236), (369, 267), (14, 39), (381, 241), (237, 233), (1, 105), (220, 180), (261, 181), (328, 356), (368, 200), (151, 165), (318, 199), (369, 244), (233, 240), (1, 118), (0, 10), (368, 177), (255, 236), (180, 242), (27, 112), (224, 248), (369, 257), (14, 29), (129, 16), (200, 76), (191, 372), (10, 180), (0, 23), (191, 228), (243, 238), (204, 167), (39, 99), (224, 261), (392, 223), (0, 144), (1, 72), (229, 232), (230, 197), (228, 236), (368, 167), (191, 205), (210, 218), (318, 166), (369, 211), (381, 185), (39, 76), (224, 238), (10, 49), (39, 112), (392, 236), (233, 328), (191, 182), (369, 368), (0, 242), (40, 49), (224, 215), (243, 228), (318, 179), (244, 193), (10, 26), (27, 115), (381, 198), (224, 251), (43, 59), (229, 186), (129, 248), (207, 167), (9, 39), (233, 341), (5, 68), (318, 156), (381, 175), (224, 228), (51, 40), (129, 225), (10, 124), (129, 261), (237, 23), (142, 51), (195, 206), (88, 80), (233, 318), (6, 10), (191, 172), (57, 92), (255, 193), (39, 43), (224, 205), (381, 188), (13, 27), (72, 76), (129, 238), (1, 52), (5, 22), (9, 29), (191, 185), (224, 182), (230, 262), (369, 191), (368, 232), (224, 218), (392, 180), (129, 215), (1, 29), (5, 179), (318, 267), (142, 41), (1, 65), (0, 186), (228, 193), (224, 195), (36, 144), (261, 262), (368, 245), (318, 244), (392, 193), (129, 228), (39, 154), (17, 23), (27, 36), (39, 10), (224, 172), (230, 252), (369, 181), (39, 46), (10, 248), (318, 221), (129, 205), (1, 19), (267, 255), (220, 179), (39, 167), (191, 381), (57, 72), (318, 342), (230, 229), (1, 140), (0, 32), (39, 23), (244, 392), (224, 185), (129, 182), (57, 193), (318, 234), (10, 81), (229, 241), (228, 196), (261, 193), (118, 144), (197, 208), (261, 229), (112, 106), (318, 211), (129, 195), (1, 9), (244, 261), (38, 13), (193, 215), (38, 49), (255, 392), (1, 130), (0, 22), (39, 13), (38, 134), (318, 188), (255, 248), (129, 172), (112, 119), (144, 151), (318, 224), (39, 134), (255, 369), (1, 107), (230, 232), (0, 35), (328, 358), (80, 107), (318, 201), (255, 261), (381, 220), (144, 164), (229, 208), (228, 392), (218, 198), (229, 244), (1, 120), (29, 39), (228, 248), (99, 134), (244, 372), (38, 124), (369, 223), (381, 197), (39, 88), (244, 228), (10, 61), (381, 233), (114, 118), (39, 124), (38, 16), (357, 370), (237, 225), (392, 248), (49, 25), (230, 186), (55, 68), (179, 220), (233, 340), (129, 139), (228, 261), (201, 244), (180, 221), (224, 227), (392, 369), (318, 191), (244, 205), (369, 236), (57, 235), (244, 241), (392, 225), (229, 198), (142, 50), (195, 205), (152, 243), (198, 210), (392, 261), (255, 372), (1, 110), (0, 2), (99, 124), (129, 152), (255, 228), (172, 193), (224, 240), (10, 51), (229, 175), (129, 237), (64, 107), (17, 32), (229, 211), (1, 87), (261, 392), (5, 57), (6, 22), (255, 205), (224, 217), (134, 180), (342, 358), (381, 200), (368, 267), (229, 188), (228, 372), (142, 40), (1, 64), (144, 229), (255, 182), (191, 197), (244, 172), (318, 158), (381, 177), (368, 244), (224, 230), (129, 227), (142, 17), (1, 41), (392, 228), (228, 205), (38, 81), (197, 217), (369, 180), (201, 224), (228, 241), (107, 180), (224, 207), (10, 247), (244, 185), (10, 18), (0, 90), (368, 257), (237, 182), (318, 256), (392, 205), (129, 240), (195, 185), (1, 54), (255, 172), (369, 157), (327, 340), (369, 193), (381, 167), (39, 58), (145, 76), (318, 233), (392, 182), (129, 217), (164, 174), (251, 179), (9, 8), (208, 217), (261, 372), (0, 188), (6, 2), (238, 245), (197, 207), (230, 241), (209, 218), (255, 185), (261, 228), (368, 211), (118, 179), (39, 35), (224, 197), (252, 179), (244, 175), (2, 4), (1, 8), (13, 19), (175, 197), (228, 172), (5, 14), (10, 129), (245, 261), (261, 205), (224, 174), (261, 241), (0, 57), (381, 157), (191, 262), (318, 223), (392, 172), (129, 207), (49, 34), (228, 185), (224, 151), (1, 142), (8, 38), (205, 174), (39, 25), (5, 112), (318, 200), (81, 107), (318, 236), (193, 204), (39, 146), (245, 251), (255, 381), (1, 119), (0, 11), (224, 164), (318, 357), (230, 244), (328, 370), (52, 57), (191, 252), (243, 262), (129, 197), (1, 11), (267, 247), (381, 232), (229, 220), (208, 197), (228, 175), (99, 146), (368, 191), (191, 229), (151, 156), (129, 174), (369, 235), (224, 262), (381, 245), (124, 180), (229, 233), (230, 198), (261, 185), (181, 76), (0, 1), (18, 49), (369, 392), (318, 167), (129, 151), (180, 233), (211, 220), (224, 239), (392, 381), (318, 203), (369, 248), (27, 139), (185, 167), (392, 237), (229, 210), (230, 175), (230, 211), (179, 245), (0, 14), (368, 181), (57, 139), (203, 193), (318, 180), (10, 27), (129, 164), (215, 167), (369, 225), (241, 76), (224, 252), (381, 235), (229, 223), (230, 188), (1, 99), (261, 175), (233, 342), (318, 157), (0, 256), (80, 99), (172, 182), (224, 229), (243, 242), (10, 40), (196, 167), (342, 370), (27, 129), (0, 112), (39, 103), (225, 230), (229, 200), (129, 262), (235, 243), (1, 76), (88, 81), (0, 233), (57, 129), (10, 17), (80, 112), (39, 80), (224, 242), (244, 220), (229, 177), (129, 239), (1, 53), (218, 167), (191, 186), (371, 382), (57, 106), (39, 57), (224, 219), (244, 197), (129, 252), (10, 151), (224, 196), (369, 205), (27, 96), (224, 232), (57, 204), (318, 245), (318, 16), (129, 229), (229, 167), (1, 43), (144, 208), (64, 99), (5, 49), (6, 14), (255, 197), (369, 182), (368, 223), (224, 209), (2, 16), (129, 206), (43, 53), (229, 180), (129, 242), (356, 369), (228, 220), (224, 186), (368, 236), (10, 262), (318, 235), (229, 157), (129, 219), (175, 186), (193, 203), (10, 118), (237, 17), (28, 23), (248, 255), (228, 197), (5, 39), (318, 356), (224, 163), (369, 172), (1, 154), (224, 199), (244, 177), (49, 167), (129, 196), (1, 10), (144, 175), (318, 248), (392, 197), (244, 262), (1, 46), (381, 267), (0, 167), (230, 220), (318, 369), (1, 167), (134, 139), (328, 382), (318, 225), (129, 209), (1, 23), (381, 244), (38, 27), (43, 105), (358, 382), (230, 233), (261, 220), (179, 267), (0, 36), (39, 27), (219, 223), (191, 241), (211, 219), (203, 215), (129, 186), (255, 262), (152, 169), (244, 252), (57, 17), (61, 167), (381, 257), (177, 198), (229, 245), (107, 139), (261, 197), (368, 180), (224, 166), (134, 129), (129, 163), (180, 245), (204, 193), (244, 229), (318, 215), (1, 13), (233, 256), (49, 26), (99, 112), (368, 157), (230, 223), (369, 381), (1, 134), (228, 262), (368, 193), (167, 23), (10, 219), (255, 252), (369, 237), (81, 99), (381, 211), (177, 188), (237, 239), (392, 262), (229, 235), (230, 200), (107, 129), (180, 199), (318, 169), (255, 229), (381, 368), (4, 9), (224, 241), (342, 382), (14, 22), (39, 115), (230, 177), (1, 88), (47, 55), (179, 211), (152, 257), (210, 198), (57, 105), (262, 245), (228, 252), (0, 16), (318, 182), (39, 92), (244, 232), (22, 39), (129, 251), (206, 205), (144, 230), (392, 252), (229, 225), (28, 55), (228, 229), (261, 177), (92, 76), (191, 198), (318, 159), (169, 179), (2, 38), (248, 179), (0, 114), (39, 105), (392, 229), (230, 167), (179, 201), (64, 134), (191, 175), (28, 68), (191, 211), (224, 208), (244, 186), (318, 172), (255, 232), (381, 191), (224, 244), (318, 257), (129, 241), (65, 76), (230, 180), (180, 179), (191, 188), (201, 238), (328, 342), (261, 252), (368, 235), (39, 59), (224, 221), (129, 218), (152, 201), (124, 139), (230, 157), (237, 16), (1, 68), (179, 191), (144, 233), (5, 38), (64, 124), (0, 225), (255, 186), (368, 392), (228, 232), (6, 39), (39, 36), (252, 180), (224, 198), (381, 181), (368, 248), (39, 72), (318, 247), (206, 185), (144, 210), (248, 267), (368, 369), (51, 167), (224, 175), (318, 368), (61, 68), (0, 58), (99, 180), (368, 225), (39, 49), (224, 211), (10, 251), (129, 208), (1, 22), (124, 129), (10, 107), (142, 34), (1, 58), (228, 186), (144, 223), (229, 267), (8, 39), (39, 26), (224, 188), (318, 381), (243, 201), (129, 185), (180, 267), (32, 23), (318, 237), (392, 186), (204, 215), (129, 221), (1, 35), (46, 43), (245, 252), (68, 61), (224, 165), (318, 358), (230, 245), (261, 232), (129, 198), (267, 248), (233, 255), (144, 177), (174, 205), (57, 65), (229, 257), (8, 29), (39, 16), (318, 371), (370, 381), (129, 175), (252, 245), (318, 227), (81, 134), (1, 25), (237, 238), (0, 182), (261, 186), (18, 50), (230, 235), (1, 146), (134, 118), (0, 38), (180, 234), (368, 205), (318, 204), (129, 188), (1, 2), (27, 140), (381, 223), (39, 114), (180, 211), (368, 182), (191, 220), (318, 181), (129, 165), (255, 241), (81, 88), (318, 217), (229, 368), (10, 64), (369, 262), (81, 124), (381, 236), (244, 267), (237, 228), (219, 179), (230, 225), (0, 28), (191, 233), (392, 372), (27, 130), (144, 157), (174, 185)]}]}
{'flac_decode_frame': [{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 190, 'instruction': 'movl\t%eax, %edi'}, {'instIndex': 191, 'instruction': 'shll\t$3, %edi'}, {'instIndex': 221, 'instruction': 'cmpl\t$0x18, %eax'}, {'instIndex': 222, 'instruction': 'jl\t.LBB4_167'}, {'instIndex': 238, 'instruction': ''}, {'instIndex': 239, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 281, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 282, 'instruction': ''}, {'instIndex': 292, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 293, 'instruction': 'movl\t0x5e4(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 304, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 305, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 306, 'instruction': 'movq\t0x640(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 466, 'instruction': 'movq\t%rdx, 0x5a0(%rsp)                # 8-byte Spill'}, {'instIndex': 519, 'instruction': 'movq\t0x650(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 604, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 667, 'instruction': 'movq\t0x520(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 668, 'instruction': 'movq\t0x630(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 669, 'instruction': 'movl\t0x514(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 720, 'instruction': 'jmp\t.LBB4_131'}, {'instIndex': 721, 'instruction': 'movq\t0x650(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 737, 'instruction': 'movl\t%eax, 0x50c(%rsp)                # 4-byte Spill'}, {'instIndex': 738, 'instruction': 'jmp\t.LBB4_53'}, {'instIndex': 827, 'instruction': 'jmp\t.LBB4_64'}, {'instIndex': 845, 'instruction': 'movl\t%eax, 0x4ec(%rsp)                # 4-byte Spill'}, {'instIndex': 862, 'instruction': 'movl\t%ecx, 0x4e8(%rsp)                # 4-byte Spill'}, {'instIndex': 1016, 'instruction': 'jmp\t.LBB4_131'}, {'instIndex': 1017, 'instruction': 'movq\t0x650(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 1018, 'instruction': 'movl\t0x46c(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1136, 'instruction': 'movl\t0x430(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 1141, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1142, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1143, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1151, 'instruction': 'movl\t0x430(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1152, 'instruction': 'movl\t0x42c(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1167, 'instruction': 'movq\t0x470(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1172, 'instruction': 'addl\t$0x10, %r8d'}, {'instIndex': 1173, 'instruction': 'movl\t%esi, %ecx'}, {'instIndex': 1229, 'instruction': 'movl\t0x41c(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1234, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1235, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1236, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1244, 'instruction': 'movl\t%edx, 0x3d4(%rsp)                 # 4-byte Spill'}, {'instIndex': 1245, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1260, 'instruction': 'movq\t0x650(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 1265, 'instruction': 'shrl\t$0xf0, %r9d'}, {'instIndex': 1266, 'instruction': ''}, {'instIndex': 1344, 'instruction': 'movq\t%rax, 0x388(%rsp)                 # 8-byte Spill'}, {'instIndex': 1349, 'instruction': 'movq\t%rsi, 0x360(%rsp)                 # 8-byte Spill'}, {'instIndex': 1350, 'instruction': 'movl\t%eax, 0x368(%rsp)                 # 4-byte Spill'}, {'instIndex': 1351, 'instruction': 'movl\t%ecx, 0x36c(%rsp)                 # 4-byte Spill'}, {'instIndex': 1359, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1360, 'instruction': 'movl\t%ecx, 0x370(%rsp)                 # 4-byte Spill'}, {'instIndex': 1375, 'instruction': 'movl\t%edx, (%rcx)'}, {'instIndex': 1380, 'instruction': 'movl\t0x368(%rsp), %esi                 # 4-byte Reload'}, {'instIndex': 1381, 'instruction': 'movq\t0x470(%rsp), %rax                # 8-byte Reload'}]}]}
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218---a/libavcodec/flacdec.c
The case of compiler gcc with optimization no.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_before/no/flacdec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_before/no/flacdec.o
Binary file does not exist.
{'flac_decode_frame': []}
The case of compiler gcc with optimization O0.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_before/O0/flacdec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_before/O0/flacdec.o
Binary file does not exist.
{'flac_decode_frame': []}
The case of compiler gcc with optimization O1.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_before/O1/flacdec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_before/O1/flacdec.o
Binary file does not exist.
{'flac_decode_frame': []}
The case of compiler gcc with optimization O2.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_before/O2/flacdec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_before/O2/flacdec.o
Binary file does not exist.
{'flac_decode_frame': []}
The case of compiler gcc with optimization O3.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_before/O3/flacdec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_before/O3/flacdec.o
Binary file does not exist.
{'flac_decode_frame': []}
The case of compiler gcc with optimization Os.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_before/Os/flacdec_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/gcc_before/Os/flacdec.o
Binary file does not exist.
{'flac_decode_frame': []}
The case of compiler clang with optimization no.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/no/flacdec.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/no/flacdec.s---flac_decode_frame---before
function id: 10
function flag: True
There are 641 instructions for function: flac_decode_frame in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '639', 'end': 649}, 'before': {'start': '639', 'end': 644}}}]
[{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 193, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 194, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 195, 'instruction': 'movq\t0x80(%rsp), %rsi'}, {'instIndex': 196, 'instruction': 'movl\t0x7c(%rsp), %edx'}, {'instIndex': 197, 'instruction': 'shll\t$3, %edx'}, {'instIndex': 198, 'instruction': 'callq\tinit_get_bits'}, {'instIndex': 199, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 200, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 201, 'instruction': 'movl\t$0x20, %esi'}, {'instIndex': 202, 'instruction': 'callq\tshow_bits_long'}, {'instIndex': 203, 'instruction': 'cmpl\t$0x664c6143, %eax               # imm = 0x0x298C0x17ff'}, {'instIndex': 204, 'instruction': 'jne\t.LBB10_33'}, {'instIndex': 205, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 206, 'instruction': 'callq\tmetadata_parse'}, {'instIndex': 207, 'instruction': 'cmpl\t$0, %eax'}, {'instIndex': 208, 'instruction': 'je\t.LBB10_32'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/no/flacdec.o
Unpatched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/no/flacdec.o---before
The extraction of function: flac_decode_frame
Analyzing the binaries to generate subCFGs from patched function ...
It has 578 nodes and 1006 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 641 instructions in binary file.
[4197033, 4197062, 4197081, 4197088, 4197098]
The execution time of patched subCFG information extraction via angr: 0:00:03.274468
{'flac_decode_frame': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 30, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aef>, <DisassemblerInsn "mov" for 0x400af4>, <DisassemblerInsn "xor" for 0x400af8>, <DisassemblerInsn "lea" for 0x400afa>, <DisassemblerInsn "mov" for 0x400b01>, <DisassemblerInsn "call" for 0x400b03>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aa9>, <DisassemblerInsn "add" for 0x400aae>, <DisassemblerInsn "mov" for 0x400ab2>, <DisassemblerInsn "mov" for 0x400aba>, <DisassemblerInsn "shl" for 0x400abe>, <DisassemblerInsn "call" for 0x400ac1>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400ad9>, <DisassemblerInsn "jne" for 0x400ade>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007f0>, <DisassemblerInsn "mov" for 0x4007f3>, <DisassemblerInsn "mov" for 0x4007f8>, <DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ae0>, <DisassemblerInsn "call" for 0x400ae5>]'}, {'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ac6>, <DisassemblerInsn "add" for 0x400acb>, <DisassemblerInsn "mov" for 0x400acf>, <DisassemblerInsn "call" for 0x400ad4>]'}, {'block_Idx': 56, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400aa7>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400b18>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b1d>, <DisassemblerInsn "add" for 0x400b22>, <DisassemblerInsn "mov" for 0x400b26>, <DisassemblerInsn "call" for 0x400b2b>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400aea>, <DisassemblerInsn "je" for 0x400aed>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}], 'cfg_block_detailed_info': [{'block_Idx': 30, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x23fe]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<mov~~edx, dword ptr [rsp + 0x7c]>', '<shl~~edx, 3>', '<call~~0x4002e0>']}, {'block_Idx': 12, 'blockInsts': ['<cmp~~eax, 0x664c6143>', '<jne~~0x400b1d>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<call~~0x4013f0>']}, {'block_Idx': 9, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x20>', '<call~~0x401380>']}, {'block_Idx': 56, 'blockInsts': ['<jmp~~0x400aa9>']}, {'block_Idx': 29, 'blockInsts': ['<jmp~~0x40110e>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x401570>']}, {'block_Idx': 23, 'blockInsts': ['<cmp~~eax, 0>', '<je~~0x400b18>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}], 'cfg_edge_info': [(12, 17), (7, 5), (12, 16), (9, 12), (23, 29), (5, 9), (56, 5), (2, 5), (23, 30), (16, 23)]}]}
{'flac_decode_frame': [4197033, 4197062, 4197081, 4197088, 4197098]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/no/flacdec.o---before
The extraction of function: flac_decode_frame
[4197033, 4197062, 4197081, 4197088, 4197098]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 830 nodes and 1243 edges in CFGEmulated.
It has 830 nodes and 1471 edges in CDG.
It has 11189 nodes and 25265 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4197033, 4197062, 4197081, 4197088, 4197098]
{4197894, 4196366, 4197391, 4198418, 4196380, 4196404, 4197437, 4196926, 4197459, 4197974, 4197990, 4197479, 4198506, 4197995, 4196459, 4197487, 4198006, 4198008, 4196474, 4197505, 4197513, 4197008, 4197015, 4198039, 4197531, 4198047, 4197542, 4197031, 4197033, 4198065, 4197062, 4198598, 4198614, 4198616, 4197081, 4196570, 4197598, 4197088, 4196578, 4198118, 4197098, 4196586, 4197103, 4196096, 4196615, 4197128, 4198670, 4197144, 4197656, 4198684, 4197149, 4197674, 4196654, 4197168, 4198194, 4198709, 4197690, 4196670, 4197695, 4197192, 4197706, 4197708, 4198742, 4196700, 4197217, 4197739, 4197231, 4197747, 4198785, 4198274, 4197765, 4196744, 4197256, 4198799, 4198290, 4198295, 4196759, 4197275, 4196257, 4198306, 4198308, 4196268, 4197292, 4197300, 4197302, 4196279, 4197818, 4196798, 4196287, 4198339, 4198856, 4197323, 4198347, 4197328, 4198867, 4198365, 4197347, 4196336, 4197361, 4197366, 4196854, 4196351}
[216, 105, 208, 206, 223, 526, 188, 224, 575, 6, 36, 214, 83, 127, 62, 35, 106, 150, 155, 69, 204, 33, 160, 65, 71, 156, 104, 199, 164, 115, 553, 176, 52, 145, 17, 51, 41, 174, 68, 124, 205, 26, 163, 21, 203, 177, 10, 1, 175, 4, 525, 123, 561, 89, 196, 45, 92, 192, 215, 197, 27, 195, 130, 19, 29, 16, 194, 61, 8, 171, 162, 72, 118, 2, 529, 99, 341, 161, 189, 90, 193, 173, 116, 186, 56, 148, 560, 210, 57, 40, 3, 23, 220, 558, 209, 34, 25, 5, 527, 111, 172, 184, 22, 198, 219, 12, 114, 100, 121, 11, 30, 96, 182, 170, 207, 200, 0, 225, 543, 126, 218, 217, 211, 151, 24, 84, 18, 81]
The execution time of patched slicing information extraction via angr: 0:06:09.040646
{'flac_decode_frame': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 216, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f82>, <DisassemblerInsn "add" for 0x400f86>, <DisassemblerInsn "mov" for 0x400f89>, <DisassemblerInsn "jmp" for 0x400f8d>]'}, {'block_Idx': 105, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400bb4>]'}, {'block_Idx': 208, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400dba>, <DisassemblerInsn "mov" for 0x400dbe>, <DisassemblerInsn "mov" for 0x400dc3>, <DisassemblerInsn "shl" for 0x400dc6>, <DisassemblerInsn "mov" for 0x400dc8>, <DisassemblerInsn "mov" for 0x400dca>, <DisassemblerInsn "mov" for 0x400dcf>, <DisassemblerInsn "add" for 0x400dd2>, <DisassemblerInsn "mov" for 0x400dd6>, <DisassemblerInsn "mov" for 0x400ddb>, <DisassemblerInsn "mov" for 0x400ddd>, <DisassemblerInsn "sub" for 0x400de1>, <DisassemblerInsn "mov" for 0x400de5>, <DisassemblerInsn "mov" for 0x400dea>, <DisassemblerInsn "shl" for 0x400ded>, <DisassemblerInsn "mov" for 0x400def>, <DisassemblerInsn "mov" for 0x400df1>, <DisassemblerInsn "mov" for 0x400df6>, <DisassemblerInsn "add" for 0x400df9>, <DisassemblerInsn "mov" for 0x400dfd>, <DisassemblerInsn "mov" for 0x400e02>, <DisassemblerInsn "jmp" for 0x400e04>]'}, {'block_Idx': 206, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ee6>, <DisassemblerInsn "add" for 0x400eea>, <DisassemblerInsn "mov" for 0x400eee>, <DisassemblerInsn "mov" for 0x400ef3>, <DisassemblerInsn "shl" for 0x400ef6>, <DisassemblerInsn "mov" for 0x400ef8>, <DisassemblerInsn "mov" for 0x400efa>, <DisassemblerInsn "mov" for 0x400eff>, <DisassemblerInsn "add" for 0x400f02>, <DisassemblerInsn "mov" for 0x400f06>, <DisassemblerInsn "mov" for 0x400f0b>, <DisassemblerInsn "mov" for 0x400f0d>, <DisassemblerInsn "mov" for 0x400f11>, <DisassemblerInsn "mov" for 0x400f16>, <DisassemblerInsn "shl" for 0x400f19>, <DisassemblerInsn "mov" for 0x400f1b>, <DisassemblerInsn "mov" for 0x400f1d>, <DisassemblerInsn "mov" for 0x400f22>, <DisassemblerInsn "add" for 0x400f25>, <DisassemblerInsn "mov" for 0x400f29>, <DisassemblerInsn "mov" for 0x400f2e>, <DisassemblerInsn "jmp" for 0x400f30>]'}, {'block_Idx': 223, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fcb>, <DisassemblerInsn "mov" for 0x400fcf>, <DisassemblerInsn "cmp" for 0x400fd4>, <DisassemblerInsn "jge" for 0x400fd7>]'}, {'block_Idx': 526, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400b18>]'}, {'block_Idx': 188, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c9b>, <DisassemblerInsn "cmp" for 0x400ca0>, <DisassemblerInsn "je" for 0x400ca4>]'}, {'block_Idx': 224, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e9f>, <DisassemblerInsn "mov" for 0x400ea3>, <DisassemblerInsn "cmp" for 0x400ea8>, <DisassemblerInsn "jge" for 0x400eab>]'}, {'block_Idx': 575, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400360>, <DisassemblerInsn "mov" for 0x400365>, <DisassemblerInsn "mov" for 0x400369>, <DisassemblerInsn "mov" for 0x40036e>, <DisassemblerInsn "mov" for 0x400371>, <DisassemblerInsn "mov" for 0x400375>, <DisassemblerInsn "mov" for 0x40037d>, <DisassemblerInsn "mov" for 0x400382>, <DisassemblerInsn "mov" for 0x400385>, <DisassemblerInsn "sar" for 0x400389>, <DisassemblerInsn "movsxd" for 0x40038c>, <DisassemblerInsn "mov" for 0x40038f>, <DisassemblerInsn "mov" for 0x400392>, <DisassemblerInsn "mov" for 0x400396>, <DisassemblerInsn "ror" for 0x40039a>, <DisassemblerInsn "ror" for 0x40039e>, <DisassemblerInsn "ror" for 0x4003a1>, <DisassemblerInsn "mov" for 0x4003a5>, <DisassemblerInsn "mov" for 0x4003a9>, <DisassemblerInsn "mov" for 0x4003ad>, <DisassemblerInsn "and" for 0x4003b1>, <DisassemblerInsn "shl" for 0x4003b4>, <DisassemblerInsn "mov" for 0x4003b6>, <DisassemblerInsn "mov" for 0x4003ba>, <DisassemblerInsn "add" for 0x4003be>, <DisassemblerInsn "mov" for 0x4003c2>, <DisassemblerInsn "mov" for 0x4003c6>, <DisassemblerInsn "mov" for 0x4003ca>, <DisassemblerInsn "mov" for 0x4003cf>, <DisassemblerInsn "ret" for 0x4003d2>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40080e>, <DisassemblerInsn "cmp" for 0x400813>, <DisassemblerInsn "jb" for 0x40081a>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "mov" for 0x4009a2>, <DisassemblerInsn "add" for 0x4009a7>, <DisassemblerInsn "add" for 0x4009ad>, <DisassemblerInsn "mov" for 0x4009b1>, <DisassemblerInsn "cmp" for 0x4009b6>, <DisassemblerInsn "jbe" for 0x4009bc>]'}, {'block_Idx': 214, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010c6>, <DisassemblerInsn "add" for 0x4010ca>, <DisassemblerInsn "mov" for 0x4010cd>, <DisassemblerInsn "jmp" for 0x4010d1>]'}, {'block_Idx': 83, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bd0>, <DisassemblerInsn "add" for 0x400bd5>, <DisassemblerInsn "mov" for 0x400bd9>, <DisassemblerInsn "call" for 0x400bde>]'}, {'block_Idx': 127, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40118f>, <DisassemblerInsn "mov" for 0x401193>, <DisassemblerInsn "add" for 0x401198>, <DisassemblerInsn "mov" for 0x40119e>, <DisassemblerInsn "mov" for 0x4011a4>, <DisassemblerInsn "mov" for 0x4011a8>, <DisassemblerInsn "mov" for 0x4011ad>, <DisassemblerInsn "sub" for 0x4011b3>, <DisassemblerInsn "mov" for 0x4011b5>, <DisassemblerInsn "mov" for 0x4011bb>, <DisassemblerInsn "mov" for 0x4011bf>, <DisassemblerInsn "jmp" for 0x4011c6>]'}, {'block_Idx': 62, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a97>, <DisassemblerInsn "mov" for 0x400a9b>, <DisassemblerInsn "jmp" for 0x400aa2>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40095c>, <DisassemblerInsn "mov" for 0x400961>, <DisassemblerInsn "mov" for 0x400968>, <DisassemblerInsn "add" for 0x40096d>, <DisassemblerInsn "mov" for 0x400974>, <DisassemblerInsn "mov" for 0x400979>, <DisassemblerInsn "add" for 0x40097f>, <DisassemblerInsn "call" for 0x400983>]'}, {'block_Idx': 106, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bb6>, <DisassemblerInsn "add" for 0x400bbb>, <DisassemblerInsn "mov" for 0x400bbf>, <DisassemblerInsn "call" for 0x400bc4>]'}, {'block_Idx': 150, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bf6>, <DisassemblerInsn "mov" for 0x400bfb>, <DisassemblerInsn "xor" for 0x400bff>, <DisassemblerInsn "lea" for 0x400c01>, <DisassemblerInsn "mov" for 0x400c08>, <DisassemblerInsn "call" for 0x400c0a>]'}, {'block_Idx': 155, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c53>, <DisassemblerInsn "lea" for 0x400c57>, <DisassemblerInsn "movsxd" for 0x400c5e>, <DisassemblerInsn "add" for 0x400c62>, <DisassemblerInsn "jmp" for 0x400c65>]'}, {'block_Idx': 69, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b1d>, <DisassemblerInsn "add" for 0x400b22>, <DisassemblerInsn "mov" for 0x400b26>, <DisassemblerInsn "call" for 0x400b2b>]'}, {'block_Idx': 204, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401012>, <DisassemblerInsn "sar" for 0x401016>, <DisassemblerInsn "mov" for 0x401018>, <DisassemblerInsn "sub" for 0x40101c>, <DisassemblerInsn "mov" for 0x40101e>, <DisassemblerInsn "add" for 0x401022>, <DisassemblerInsn "mov" for 0x401026>, <DisassemblerInsn "mov" for 0x40102b>, <DisassemblerInsn "shl" for 0x40102e>, <DisassemblerInsn "mov" for 0x401030>, <DisassemblerInsn "mov" for 0x401032>, <DisassemblerInsn "mov" for 0x401037>, <DisassemblerInsn "add" for 0x40103a>, <DisassemblerInsn "mov" for 0x40103e>, <DisassemblerInsn "mov" for 0x401043>, <DisassemblerInsn "mov" for 0x401045>, <DisassemblerInsn "mov" for 0x401049>, <DisassemblerInsn "mov" for 0x40104e>, <DisassemblerInsn "shl" for 0x401051>, <DisassemblerInsn "mov" for 0x401053>, <DisassemblerInsn "mov" for 0x401055>, <DisassemblerInsn "mov" for 0x40105a>, <DisassemblerInsn "add" for 0x40105d>, <DisassemblerInsn "mov" for 0x401061>, <DisassemblerInsn "mov" for 0x401066>, <DisassemblerInsn "jmp" for 0x401068>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008e2>, <DisassemblerInsn "mov" for 0x4008e6>, <DisassemblerInsn "mov" for 0x4008ea>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f2>, <DisassemblerInsn "mov" for 0x4008f7>, <DisassemblerInsn "add" for 0x4008fd>, <DisassemblerInsn "cmp" for 0x400901>, <DisassemblerInsn "jb" for 0x400905>]'}, {'block_Idx': 160, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c0f>, <DisassemblerInsn "mov" for 0x400c14>, <DisassemblerInsn "mov" for 0x400c1e>, <DisassemblerInsn "mov" for 0x400c23>, <DisassemblerInsn "mov" for 0x400c2d>, <DisassemblerInsn "jmp" for 0x400c38>]'}, {'block_Idx': 65, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400ad9>, <DisassemblerInsn "jne" for 0x400ade>]'}, {'block_Idx': 71, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013d5>, <DisassemblerInsn "mov" for 0x4013d9>, <DisassemblerInsn "add" for 0x4013dd>, <DisassemblerInsn "ret" for 0x4013e1>]'}, {'block_Idx': 156, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010d8>, <DisassemblerInsn "mov" for 0x4010dd>, <DisassemblerInsn "mov" for 0x4010e0>, <DisassemblerInsn "imul" for 0x4010e5>, <DisassemblerInsn "mov" for 0x4010e9>, <DisassemblerInsn "mov" for 0x4010ee>, <DisassemblerInsn "mov" for 0x4010f1>, <DisassemblerInsn "mov" for 0x4010f6>, <DisassemblerInsn "cmp" for 0x4010fb>, <DisassemblerInsn "cmovne" for 0x4010fe>, <DisassemblerInsn "imul" for 0x401101>, <DisassemblerInsn "mov" for 0x401104>, <DisassemblerInsn "mov" for 0x40110c>, <DisassemblerInsn "mov" for 0x40110e>, <DisassemblerInsn "add" for 0x401113>, <DisassemblerInsn "call" for 0x401117>]'}, {'block_Idx': 104, 'blockInsts': '[<DisassemblerInsn "sub" for 0x401570>, <DisassemblerInsn "mov" for 0x401574>, <DisassemblerInsn "mov" for 0x401579>, <DisassemblerInsn "mov" for 0x40157d>, <DisassemblerInsn "mov" for 0x401582>, <DisassemblerInsn "mov" for 0x401585>, <DisassemblerInsn "mov" for 0x401589>, <DisassemblerInsn "mov" for 0x401591>, <DisassemblerInsn "mov" for 0x401596>, <DisassemblerInsn "mov" for 0x401599>, <DisassemblerInsn "sar" for 0x40159d>, <DisassemblerInsn "movsxd" for 0x4015a0>, <DisassemblerInsn "mov" for 0x4015a3>, <DisassemblerInsn "mov" for 0x4015a6>, <DisassemblerInsn "mov" for 0x4015aa>, <DisassemblerInsn "ror" for 0x4015ae>, <DisassemblerInsn "ror" for 0x4015b2>, <DisassemblerInsn "ror" for 0x4015b5>, <DisassemblerInsn "mov" for 0x4015b9>, <DisassemblerInsn "mov" for 0x4015bd>, <DisassemblerInsn "mov" for 0x4015c1>, <DisassemblerInsn "and" for 0x4015c5>, <DisassemblerInsn "shl" for 0x4015c8>, <DisassemblerInsn "mov" for 0x4015ca>, <DisassemblerInsn "mov" for 0x4015ce>, <DisassemblerInsn "mov" for 0x4015d2>, <DisassemblerInsn "movsx" for 0x4015d6>, <DisassemblerInsn "call" for 0x4015d9>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ca6>, <DisassemblerInsn "movsxd" for 0x400cab>, <DisassemblerInsn "mov" for 0x400cb0>, <DisassemblerInsn "movsxd" for 0x400cb5>, <DisassemblerInsn "mov" for 0x400cba>, <DisassemblerInsn "mov" for 0x400cbd>, <DisassemblerInsn "mov" for 0x400cc2>, <DisassemblerInsn "shl" for 0x400cc5>, <DisassemblerInsn "mov" for 0x400cc7>, <DisassemblerInsn "mov" for 0x400cc9>, <DisassemblerInsn "mov" for 0x400cce>, <DisassemblerInsn "add" for 0x400cd1>, <DisassemblerInsn "mov" for 0x400cd5>, <DisassemblerInsn "mov" for 0x400cda>, <DisassemblerInsn "jmp" for 0x400cdc>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c67>, <DisassemblerInsn "mov" for 0x400c6f>, <DisassemblerInsn "mov" for 0x400c73>, <DisassemblerInsn "cmp" for 0x400c78>, <DisassemblerInsn "jge" for 0x400c7b>]'}, {'block_Idx': 115, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40110e>, <DisassemblerInsn "add" for 0x401113>, <DisassemblerInsn "call" for 0x401117>]'}, {'block_Idx': 553, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015f0>, <DisassemblerInsn "mov" for 0x4015f5>, <DisassemblerInsn "mov" for 0x4015fa>, <DisassemblerInsn "ret" for 0x4015fd>]'}, {'block_Idx': 176, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c81>, <DisassemblerInsn "mov" for 0x400c89>, <DisassemblerInsn "mov" for 0x400c8d>, <DisassemblerInsn "cmp" for 0x400c92>, <DisassemblerInsn "jge" for 0x400c95>]'}, {'block_Idx': 52, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009f6>, <DisassemblerInsn "mov" for 0x4009fb>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "mov" for 0x400a0a>, <DisassemblerInsn "mov" for 0x400a11>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "mov" for 0x400a1c>, <DisassemblerInsn "add" for 0x400a21>, <DisassemblerInsn "mov" for 0x400a27>, <DisassemblerInsn "add" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a2c>, <DisassemblerInsn "movsxd" for 0x400a34>, <DisassemblerInsn "call" for 0x400a39>]'}, {'block_Idx': 145, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b3d>, <DisassemblerInsn "add" for 0x401b41>, <DisassemblerInsn "ret" for 0x401b45>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40085d>, <DisassemblerInsn "mov" for 0x400862>, <DisassemblerInsn "mov" for 0x400865>, <DisassemblerInsn "jmp" for 0x400869>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a3e>, <DisassemblerInsn "mov" for 0x400a43>, <DisassemblerInsn "mov" for 0x400a4a>, <DisassemblerInsn "mov" for 0x400a4f>, <DisassemblerInsn "add" for 0x400a55>, <DisassemblerInsn "mov" for 0x400a58>, <DisassemblerInsn "mov" for 0x400a60>, <DisassemblerInsn "mov" for 0x400a65>, <DisassemblerInsn "add" for 0x400a6b>, <DisassemblerInsn "mov" for 0x400a6f>, <DisassemblerInsn "mov" for 0x400a73>, <DisassemblerInsn "mov" for 0x400a77>, <DisassemblerInsn "mov" for 0x400a7c>, <DisassemblerInsn "mov" for 0x400a82>, <DisassemblerInsn "mov" for 0x400a86>, <DisassemblerInsn "cmp" for 0x400a8b>, <DisassemblerInsn "jge" for 0x400a8e>]'}, {'block_Idx': 41, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009be>, <DisassemblerInsn "mov" for 0x4009c3>, <DisassemblerInsn "mov" for 0x4009ca>, <DisassemblerInsn "mov" for 0x4009cf>, <DisassemblerInsn "mov" for 0x4009d6>, <DisassemblerInsn "mov" for 0x4009db>, <DisassemblerInsn "add" for 0x4009e1>, <DisassemblerInsn "mov" for 0x4009e4>, <DisassemblerInsn "mov" for 0x4009e9>, <DisassemblerInsn "mov" for 0x4009ef>, <DisassemblerInsn "call" for 0x4009f1>]'}, {'block_Idx': 174, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d4a>]'}, {'block_Idx': 68, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ae0>, <DisassemblerInsn "call" for 0x400ae5>]'}, {'block_Idx': 124, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401135>, <DisassemblerInsn "mov" for 0x40113a>, <DisassemblerInsn "mov" for 0x40113e>, <DisassemblerInsn "sub" for 0x401142>, <DisassemblerInsn "xor" for 0x401146>, <DisassemblerInsn "lea" for 0x401148>, <DisassemblerInsn "mov" for 0x40114f>, <DisassemblerInsn "call" for 0x401151>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f32>, <DisassemblerInsn "add" for 0x400f36>, <DisassemblerInsn "mov" for 0x400f3a>, <DisassemblerInsn "mov" for 0x400f3f>, <DisassemblerInsn "shl" for 0x400f42>, <DisassemblerInsn "mov" for 0x400f44>, <DisassemblerInsn "mov" for 0x400f47>, <DisassemblerInsn "mov" for 0x400f4c>, <DisassemblerInsn "add" for 0x400f4f>, <DisassemblerInsn "mov" for 0x400f53>, <DisassemblerInsn "mov" for 0x400f58>, <DisassemblerInsn "mov" for 0x400f5b>, <DisassemblerInsn "mov" for 0x400f5f>, <DisassemblerInsn "mov" for 0x400f64>, <DisassemblerInsn "shl" for 0x400f67>, <DisassemblerInsn "mov" for 0x400f69>, <DisassemblerInsn "mov" for 0x400f6c>, <DisassemblerInsn "mov" for 0x400f71>, <DisassemblerInsn "add" for 0x400f74>, <DisassemblerInsn "mov" for 0x400f78>, <DisassemblerInsn "mov" for 0x400f7d>, <DisassemblerInsn "jmp" for 0x400f80>]'}, {'block_Idx': 26, 'blockInsts': '[<DisassemblerInsn "sub" for 0x401380>, <DisassemblerInsn "mov" for 0x401384>, <DisassemblerInsn "mov" for 0x401389>, <DisassemblerInsn "cmp" for 0x40138d>, <DisassemblerInsn "jg" for 0x401392>]'}, {'block_Idx': 163, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d3f>, <DisassemblerInsn "cmp" for 0x400d44>, <DisassemblerInsn "jne" for 0x400d48>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008da>, <DisassemblerInsn "mov" for 0x4008de>, <DisassemblerInsn "mov" for 0x4008e2>, <DisassemblerInsn "mov" for 0x4008e6>, <DisassemblerInsn "mov" for 0x4008ea>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f2>, <DisassemblerInsn "mov" for 0x4008f7>, <DisassemblerInsn "add" for 0x4008fd>, <DisassemblerInsn "cmp" for 0x400901>, <DisassemblerInsn "jb" for 0x400905>]'}, {'block_Idx': 203, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40106a>, <DisassemblerInsn "sar" for 0x40106e>, <DisassemblerInsn "mov" for 0x401070>, <DisassemblerInsn "sub" for 0x401074>, <DisassemblerInsn "mov" for 0x401076>, <DisassemblerInsn "add" for 0x40107a>, <DisassemblerInsn "mov" for 0x40107e>, <DisassemblerInsn "mov" for 0x401083>, <DisassemblerInsn "shl" for 0x401086>, <DisassemblerInsn "mov" for 0x401088>, <DisassemblerInsn "mov" for 0x40108b>, <DisassemblerInsn "mov" for 0x401090>, <DisassemblerInsn "add" for 0x401093>, <DisassemblerInsn "mov" for 0x401097>, <DisassemblerInsn "mov" for 0x40109c>, <DisassemblerInsn "mov" for 0x40109f>, <DisassemblerInsn "mov" for 0x4010a3>, <DisassemblerInsn "mov" for 0x4010a8>, <DisassemblerInsn "shl" for 0x4010ab>, <DisassemblerInsn "mov" for 0x4010ad>, <DisassemblerInsn "mov" for 0x4010b0>, <DisassemblerInsn "mov" for 0x4010b5>, <DisassemblerInsn "add" for 0x4010b8>, <DisassemblerInsn "mov" for 0x4010bc>, <DisassemblerInsn "mov" for 0x4010c1>, <DisassemblerInsn "jmp" for 0x4010c4>]'}, {'block_Idx': 177, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d3a>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400834>, <DisassemblerInsn "mov" for 0x400838>, <DisassemblerInsn "mov" for 0x40083c>, <DisassemblerInsn "mov" for 0x400841>, <DisassemblerInsn "mov" for 0x400844>, <DisassemblerInsn "mov" for 0x400848>, <DisassemblerInsn "mov" for 0x40084d>, <DisassemblerInsn "mov" for 0x400853>, <DisassemblerInsn "cmp" for 0x400858>, <DisassemblerInsn "jbe" for 0x40085b>]'}, {'block_Idx': 1, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007a1>, <DisassemblerInsn "cmp" for 0x4007a6>, <DisassemblerInsn "jle" for 0x4007aa>]'}, {'block_Idx': 175, 'blockInsts': '[<DisassemblerInsn "lea" for 0x400d4c>, <DisassemblerInsn "lea" for 0x400d53>, <DisassemblerInsn "mov" for 0x400d5a>, <DisassemblerInsn "lea" for 0x400d5f>, <DisassemblerInsn "call" for 0x400d66>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007ac>, <DisassemblerInsn "mov" for 0x4007b1>, <DisassemblerInsn "jmp" for 0x4007b5>]'}, {'block_Idx': 525, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400aea>, <DisassemblerInsn "je" for 0x400aed>]'}, {'block_Idx': 123, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401181>, <DisassemblerInsn "cmp" for 0x401186>, <DisassemblerInsn "je" for 0x40118d>]'}, {'block_Idx': 561, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400323>, <DisassemblerInsn "mov" for 0x400328>, <DisassemblerInsn "mov" for 0x40032d>, <DisassemblerInsn "mov" for 0x400330>, <DisassemblerInsn "mov" for 0x400334>, <DisassemblerInsn "mov" for 0x400339>, <DisassemblerInsn "mov" for 0x40033c>, <DisassemblerInsn "movsxd" for 0x400341>, <DisassemblerInsn "add" for 0x400346>, <DisassemblerInsn "mov" for 0x400349>, <DisassemblerInsn "mov" for 0x40034e>, <DisassemblerInsn "mov" for 0x400352>, <DisassemblerInsn "mov" for 0x400357>, <DisassemblerInsn "ret" for 0x40035e>]'}, {'block_Idx': 89, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400be3>, <DisassemblerInsn "mov" for 0x400be8>, <DisassemblerInsn "call" for 0x400bec>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d85>, <DisassemblerInsn "mov" for 0x400d8a>, <DisassemblerInsn "movsxd" for 0x400d8e>, <DisassemblerInsn "mov" for 0x400d93>, <DisassemblerInsn "mov" for 0x400d96>, <DisassemblerInsn "mov" for 0x400d9a>, <DisassemblerInsn "mov" for 0x400d9f>, <DisassemblerInsn "movsxd" for 0x400da3>, <DisassemblerInsn "mov" for 0x400da8>, <DisassemblerInsn "mov" for 0x400dab>, <DisassemblerInsn "mov" for 0x400daf>, <DisassemblerInsn "cmp" for 0x400db4>, <DisassemblerInsn "je" for 0x400db8>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400988>, <DisassemblerInsn "mov" for 0x40098b>, <DisassemblerInsn "mov" for 0x400990>, <DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "mov" for 0x4009a2>, <DisassemblerInsn "add" for 0x4009a7>, <DisassemblerInsn "add" for 0x4009ad>, <DisassemblerInsn "mov" for 0x4009b1>, <DisassemblerInsn "cmp" for 0x4009b6>, <DisassemblerInsn "jbe" for 0x4009bc>]'}, {'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "sub" for 0x401600>, <DisassemblerInsn "mov" for 0x401604>, <DisassemblerInsn "mov" for 0x401609>, <DisassemblerInsn "mov" for 0x40160d>, <DisassemblerInsn "add" for 0x401612>, <DisassemblerInsn "mov" for 0x401616>, <DisassemblerInsn "call" for 0x40161b>]'}, {'block_Idx': 192, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fdd>, <DisassemblerInsn "mov" for 0x400fe2>, <DisassemblerInsn "movsxd" for 0x400fe6>, <DisassemblerInsn "mov" for 0x400feb>, <DisassemblerInsn "mov" for 0x400fee>, <DisassemblerInsn "mov" for 0x400ff2>, <DisassemblerInsn "mov" for 0x400ff7>, <DisassemblerInsn "movsxd" for 0x400ffb>, <DisassemblerInsn "mov" for 0x401000>, <DisassemblerInsn "mov" for 0x401003>, <DisassemblerInsn "mov" for 0x401007>, <DisassemblerInsn "cmp" for 0x40100c>, <DisassemblerInsn "je" for 0x401010>]'}, {'block_Idx': 215, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4010c4>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e66>]'}, {'block_Idx': 27, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008bb>, <DisassemblerInsn "mov" for 0x4008c0>, <DisassemblerInsn "mov" for 0x4008c6>, <DisassemblerInsn "mov" for 0x4008ca>, <DisassemblerInsn "mov" for 0x4008ce>, <DisassemblerInsn "sub" for 0x4008d2>, <DisassemblerInsn "mov" for 0x4008d4>, <DisassemblerInsn "jmp" for 0x4008d8>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400f92>]'}, {'block_Idx': 130, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401156>, <DisassemblerInsn "mov" for 0x40115b>, <DisassemblerInsn "mov" for 0x401165>, <DisassemblerInsn "mov" for 0x40116a>, <DisassemblerInsn "mov" for 0x401174>, <DisassemblerInsn "jmp" for 0x40117f>]'}, {'block_Idx': 19, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ac6>, <DisassemblerInsn "add" for 0x400acb>, <DisassemblerInsn "mov" for 0x400acf>, <DisassemblerInsn "call" for 0x400ad4>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011d3>, <DisassemblerInsn "add" for 0x4011da>, <DisassemblerInsn "ret" for 0x4011e1>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40086b>, <DisassemblerInsn "mov" for 0x400870>, <DisassemblerInsn "mov" for 0x400876>, <DisassemblerInsn "mov" for 0x40087a>, <DisassemblerInsn "mov" for 0x40087e>, <DisassemblerInsn "mov" for 0x400882>, <DisassemblerInsn "sub" for 0x400886>, <DisassemblerInsn "cmp" for 0x400888>, <DisassemblerInsn "jbe" for 0x40088a>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400eb1>, <DisassemblerInsn "mov" for 0x400eb6>, <DisassemblerInsn "movsxd" for 0x400eba>, <DisassemblerInsn "mov" for 0x400ebf>, <DisassemblerInsn "mov" for 0x400ec2>, <DisassemblerInsn "mov" for 0x400ec6>, <DisassemblerInsn "mov" for 0x400ecb>, <DisassemblerInsn "movsxd" for 0x400ecf>, <DisassemblerInsn "mov" for 0x400ed4>, <DisassemblerInsn "mov" for 0x400ed7>, <DisassemblerInsn "mov" for 0x400edb>, <DisassemblerInsn "cmp" for 0x400ee0>, <DisassemblerInsn "je" for 0x400ee4>]'}, {'block_Idx': 61, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013d9>, <DisassemblerInsn "add" for 0x4013dd>, <DisassemblerInsn "ret" for 0x4013e1>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007bf>, <DisassemblerInsn "mov" for 0x4007c3>, <DisassemblerInsn "mov" for 0x4007c8>, <DisassemblerInsn "mov" for 0x4007cb>, <DisassemblerInsn "mov" for 0x4007d0>, <DisassemblerInsn "mov" for 0x4007d7>, <DisassemblerInsn "add" for 0x4007dc>, <DisassemblerInsn "mov" for 0x4007e3>, <DisassemblerInsn "mov" for 0x4007e8>, <DisassemblerInsn "call" for 0x4007eb>]'}, {'block_Idx': 171, 'blockInsts': '[<DisassemblerInsn "lea" for 0x400fa4>, <DisassemblerInsn "lea" for 0x400fab>, <DisassemblerInsn "mov" for 0x400fb2>, <DisassemblerInsn "lea" for 0x400fb7>, <DisassemblerInsn "call" for 0x400fbe>]'}, {'block_Idx': 162, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e6b>, <DisassemblerInsn "cmp" for 0x400e70>, <DisassemblerInsn "jne" for 0x400e74>]'}, {'block_Idx': 72, 'blockInsts': '[<DisassemblerInsn "sub" for 0x4013f0>, <DisassemblerInsn "mov" for 0x4013f4>, <DisassemblerInsn "mov" for 0x4013f9>, <DisassemblerInsn "add" for 0x4013fe>, <DisassemblerInsn "mov" for 0x401402>, <DisassemblerInsn "call" for 0x401407>]'}, {'block_Idx': 118, 'blockInsts': '[<DisassemblerInsn "and" for 0x400b9b>, <DisassemblerInsn "cmp" for 0x400ba0>, <DisassemblerInsn "setne" for 0x400ba5>, <DisassemblerInsn "mov" for 0x400ba8>, <DisassemblerInsn "mov" for 0x400bac>, <DisassemblerInsn "test" for 0x400bb0>, <DisassemblerInsn "jne" for 0x400bb2>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}, {'block_Idx': 529, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b08>, <DisassemblerInsn "jmp" for 0x400b13>]'}, {'block_Idx': 99, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b88>, <DisassemblerInsn "add" for 0x400b8d>, <DisassemblerInsn "mov" for 0x400b91>, <DisassemblerInsn "call" for 0x400b96>]'}, {'block_Idx': 341, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b35>, <DisassemblerInsn "mov" for 0x401b3d>, <DisassemblerInsn "add" for 0x401b41>, <DisassemblerInsn "ret" for 0x401b45>]'}, {'block_Idx': 161, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f97>, <DisassemblerInsn "cmp" for 0x400f9c>, <DisassemblerInsn "jne" for 0x400fa0>]'}, {'block_Idx': 189, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d28>]'}, {'block_Idx': 90, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b61>, <DisassemblerInsn "add" for 0x400b66>, <DisassemblerInsn "call" for 0x400b6a>]'}, {'block_Idx': 193, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4010d6>]'}, {'block_Idx': 173, 'blockInsts': '[<DisassemblerInsn "lea" for 0x400e78>, <DisassemblerInsn "lea" for 0x400e7f>, <DisassemblerInsn "mov" for 0x400e86>, <DisassemblerInsn "lea" for 0x400e8b>, <DisassemblerInsn "call" for 0x400e92>]'}, {'block_Idx': 116, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400bc9>]'}, {'block_Idx': 186, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d6b>, <DisassemblerInsn "mov" for 0x400d73>, <DisassemblerInsn "mov" for 0x400d77>, <DisassemblerInsn "cmp" for 0x400d7c>, <DisassemblerInsn "jge" for 0x400d7f>]'}, {'block_Idx': 56, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400a90>, <DisassemblerInsn "je" for 0x400a95>]'}, {'block_Idx': 148, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400bf1>, <DisassemblerInsn "jge" for 0x400bf4>]'}, {'block_Idx': 560, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40030a>, <DisassemblerInsn "mov" for 0x400312>, <DisassemblerInsn "mov" for 0x40031a>, <DisassemblerInsn "mov" for 0x400323>, <DisassemblerInsn "mov" for 0x400328>, <DisassemblerInsn "mov" for 0x40032d>, <DisassemblerInsn "mov" for 0x400330>, <DisassemblerInsn "mov" for 0x400334>, <DisassemblerInsn "mov" for 0x400339>, <DisassemblerInsn "mov" for 0x40033c>, <DisassemblerInsn "movsxd" for 0x400341>, <DisassemblerInsn "add" for 0x400346>, <DisassemblerInsn "mov" for 0x400349>, <DisassemblerInsn "mov" for 0x40034e>, <DisassemblerInsn "mov" for 0x400352>, <DisassemblerInsn "mov" for 0x400357>, <DisassemblerInsn "ret" for 0x40035e>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d16>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400aa7>]'}, {'block_Idx': 40, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "mov" for 0x400a0a>, <DisassemblerInsn "mov" for 0x400a11>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "mov" for 0x400a1c>, <DisassemblerInsn "add" for 0x400a21>, <DisassemblerInsn "mov" for 0x400a27>, <DisassemblerInsn "add" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a2c>, <DisassemblerInsn "movsxd" for 0x400a34>, <DisassemblerInsn "call" for 0x400a39>]'}, {'block_Idx': 3, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007b7>, <DisassemblerInsn "mov" for 0x4007bb>, <DisassemblerInsn "mov" for 0x4007bf>, <DisassemblerInsn "mov" for 0x4007c3>, <DisassemblerInsn "mov" for 0x4007c8>, <DisassemblerInsn "mov" for 0x4007cb>, <DisassemblerInsn "mov" for 0x4007d0>, <DisassemblerInsn "mov" for 0x4007d7>, <DisassemblerInsn "add" for 0x4007dc>, <DisassemblerInsn "mov" for 0x4007e3>, <DisassemblerInsn "mov" for 0x4007e8>, <DisassemblerInsn "call" for 0x4007eb>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40087a>, <DisassemblerInsn "mov" for 0x40087e>, <DisassemblerInsn "mov" for 0x400882>, <DisassemblerInsn "sub" for 0x400886>, <DisassemblerInsn "cmp" for 0x400888>, <DisassemblerInsn "jbe" for 0x40088a>]'}, {'block_Idx': 220, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c89>, <DisassemblerInsn "mov" for 0x400c8d>, <DisassemblerInsn "cmp" for 0x400c92>, <DisassemblerInsn "jge" for 0x400c95>]'}, {'block_Idx': 558, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4002e0>, <DisassemblerInsn "mov" for 0x4002e5>, <DisassemblerInsn "mov" for 0x4002ea>, <DisassemblerInsn "mov" for 0x4002ee>, <DisassemblerInsn "add" for 0x4002f2>, <DisassemblerInsn "sar" for 0x4002f5>, <DisassemblerInsn "mov" for 0x4002f8>, <DisassemblerInsn "cmp" for 0x4002fc>, <DisassemblerInsn "jl" for 0x400301>]'}, {'block_Idx': 209, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d18>, <DisassemblerInsn "add" for 0x400d1c>, <DisassemblerInsn "mov" for 0x400d1f>, <DisassemblerInsn "jmp" for 0x400d23>]'}, {'block_Idx': 34, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008ca>, <DisassemblerInsn "mov" for 0x4008ce>, <DisassemblerInsn "sub" for 0x4008d2>, <DisassemblerInsn "mov" for 0x4008d4>, <DisassemblerInsn "jmp" for 0x4008d8>]'}, {'block_Idx': 25, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400907>, <DisassemblerInsn "mov" for 0x40090c>, <DisassemblerInsn "mov" for 0x400912>, <DisassemblerInsn "add" for 0x400917>, <DisassemblerInsn "add" for 0x40091d>, <DisassemblerInsn "mov" for 0x400921>, <DisassemblerInsn "cmp" for 0x400926>, <DisassemblerInsn "jae" for 0x40092c>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aa9>, <DisassemblerInsn "add" for 0x400aae>, <DisassemblerInsn "mov" for 0x400ab2>, <DisassemblerInsn "mov" for 0x400aba>, <DisassemblerInsn "shl" for 0x400abe>, <DisassemblerInsn "call" for 0x400ac1>]'}, {'block_Idx': 527, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aef>, <DisassemblerInsn "mov" for 0x400af4>, <DisassemblerInsn "xor" for 0x400af8>, <DisassemblerInsn "lea" for 0x400afa>, <DisassemblerInsn "mov" for 0x400b01>, <DisassemblerInsn "call" for 0x400b03>]'}, {'block_Idx': 111, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400bcb>]'}, {'block_Idx': 172, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e76>]'}, {'block_Idx': 184, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e97>, <DisassemblerInsn "mov" for 0x400e9f>, <DisassemblerInsn "mov" for 0x400ea3>, <DisassemblerInsn "cmp" for 0x400ea8>, <DisassemblerInsn "jge" for 0x400eab>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40088c>, <DisassemblerInsn "mov" for 0x400891>, <DisassemblerInsn "mov" for 0x400894>, <DisassemblerInsn "mov" for 0x400898>, <DisassemblerInsn "mov" for 0x40089d>, <DisassemblerInsn "mov" for 0x4008a3>, <DisassemblerInsn "cmp" for 0x4008a8>, <DisassemblerInsn "jbe" for 0x4008ab>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cde>, <DisassemblerInsn "movsxd" for 0x400ce3>, <DisassemblerInsn "mov" for 0x400ce8>, <DisassemblerInsn "movsxd" for 0x400ced>, <DisassemblerInsn "mov" for 0x400cf2>, <DisassemblerInsn "mov" for 0x400cf5>, <DisassemblerInsn "mov" for 0x400cfa>, <DisassemblerInsn "shl" for 0x400cfd>, <DisassemblerInsn "mov" for 0x400cff>, <DisassemblerInsn "mov" for 0x400d02>, <DisassemblerInsn "mov" for 0x400d07>, <DisassemblerInsn "add" for 0x400d0a>, <DisassemblerInsn "mov" for 0x400d0e>, <DisassemblerInsn "mov" for 0x400d13>, <DisassemblerInsn "jmp" for 0x400d16>]'}, {'block_Idx': 219, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e54>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007f0>, <DisassemblerInsn "mov" for 0x4007f3>, <DisassemblerInsn "mov" for 0x4007f8>, <DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}, {'block_Idx': 114, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015de>, <DisassemblerInsn "mov" for 0x4015e2>, <DisassemblerInsn "add" for 0x4015e6>, <DisassemblerInsn "ret" for 0x4015ea>]'}, {'block_Idx': 100, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bac>, <DisassemblerInsn "test" for 0x400bb0>, <DisassemblerInsn "jne" for 0x400bb2>]'}, {'block_Idx': 121, 'blockInsts': '[<DisassemblerInsn "add" for 0x40111c>, <DisassemblerInsn "mov" for 0x40111f>, <DisassemblerInsn "cdq" for 0x401124>, <DisassemblerInsn "idiv" for 0x401125>, <DisassemblerInsn "mov" for 0x401127>, <DisassemblerInsn "mov" for 0x40112b>, <DisassemblerInsn "cmp" for 0x40112f>, <DisassemblerInsn "jle" for 0x401133>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40081c>, <DisassemblerInsn "mov" for 0x400821>, <DisassemblerInsn "cmp" for 0x400828>, <DisassemblerInsn "je" for 0x40082e>]'}, {'block_Idx': 30, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40093e>, <DisassemblerInsn "mov" for 0x400943>, <DisassemblerInsn "mov" for 0x400949>, <DisassemblerInsn "mov" for 0x40094e>, <DisassemblerInsn "add" for 0x400954>, <DisassemblerInsn "cmp" for 0x400958>, <DisassemblerInsn "jae" for 0x40095a>]'}, {'block_Idx': 96, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b6f>, <DisassemblerInsn "cdq" for 0x400b74>, <DisassemblerInsn "idiv" for 0x400b75>, <DisassemblerInsn "mov" for 0x400b77>, <DisassemblerInsn "add" for 0x400b79>, <DisassemblerInsn "xor" for 0x400b7c>, <DisassemblerInsn "cmp" for 0x400b7e>, <DisassemblerInsn "mov" for 0x400b82>, <DisassemblerInsn "jge" for 0x400b86>]'}, {'block_Idx': 182, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fc3>, <DisassemblerInsn "mov" for 0x400fcb>, <DisassemblerInsn "mov" for 0x400fcf>, <DisassemblerInsn "cmp" for 0x400fd4>, <DisassemblerInsn "jge" for 0x400fd7>]'}, {'block_Idx': 170, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400fa2>]'}, {'block_Idx': 207, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e06>, <DisassemblerInsn "mov" for 0x400e0a>, <DisassemblerInsn "mov" for 0x400e0f>, <DisassemblerInsn "shl" for 0x400e12>, <DisassemblerInsn "mov" for 0x400e14>, <DisassemblerInsn "mov" for 0x400e17>, <DisassemblerInsn "mov" for 0x400e1c>, <DisassemblerInsn "add" for 0x400e1f>, <DisassemblerInsn "mov" for 0x400e23>, <DisassemblerInsn "mov" for 0x400e28>, <DisassemblerInsn "mov" for 0x400e2b>, <DisassemblerInsn "sub" for 0x400e2f>, <DisassemblerInsn "mov" for 0x400e33>, <DisassemblerInsn "mov" for 0x400e38>, <DisassemblerInsn "shl" for 0x400e3b>, <DisassemblerInsn "mov" for 0x400e3d>, <DisassemblerInsn "mov" for 0x400e40>, <DisassemblerInsn "mov" for 0x400e45>, <DisassemblerInsn "add" for 0x400e48>, <DisassemblerInsn "mov" for 0x400e4c>, <DisassemblerInsn "mov" for 0x400e51>, <DisassemblerInsn "jmp" for 0x400e54>]'}, {'block_Idx': 200, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d2a>, <DisassemblerInsn "add" for 0x400d2e>, <DisassemblerInsn "mov" for 0x400d31>, <DisassemblerInsn "jmp" for 0x400d35>]'}, {'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "sub" for 0x400700>, <DisassemblerInsn "mov" for 0x400707>, <DisassemblerInsn "mov" for 0x40070f>, <DisassemblerInsn "mov" for 0x400717>, <DisassemblerInsn "mov" for 0x40071f>, <DisassemblerInsn "mov" for 0x400727>, <DisassemblerInsn "mov" for 0x40072c>, <DisassemblerInsn "mov" for 0x400734>, <DisassemblerInsn "mov" for 0x40073b>, <DisassemblerInsn "mov" for 0x400740>, <DisassemblerInsn "mov" for 0x400748>, <DisassemblerInsn "mov" for 0x400750>, <DisassemblerInsn "mov" for 0x400758>, <DisassemblerInsn "mov" for 0x400760>, <DisassemblerInsn "mov" for 0x400768>, <DisassemblerInsn "mov" for 0x40076d>, <DisassemblerInsn "mov" for 0x400775>, <DisassemblerInsn "mov" for 0x40077a>, <DisassemblerInsn "mov" for 0x400782>, <DisassemblerInsn "mov" for 0x400784>, <DisassemblerInsn "mov" for 0x400788>, <DisassemblerInsn "mov" for 0x400790>, <DisassemblerInsn "mov" for 0x400796>, <DisassemblerInsn "cmp" for 0x40079b>, <DisassemblerInsn "jne" for 0x40079f>]'}, {'block_Idx': 225, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d73>, <DisassemblerInsn "mov" for 0x400d77>, <DisassemblerInsn "cmp" for 0x400d7c>, <DisassemblerInsn "jge" for 0x400d7f>]'}, {'block_Idx': 543, 'blockInsts': '[<DisassemblerInsn "xor" for 0x401568>, <DisassemblerInsn "add" for 0x40156a>, <DisassemblerInsn "ret" for 0x40156e>]'}, {'block_Idx': 126, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011c8>, <DisassemblerInsn "mov" for 0x4011cc>, <DisassemblerInsn "mov" for 0x4011d3>, <DisassemblerInsn "add" for 0x4011da>, <DisassemblerInsn "ret" for 0x4011e1>]'}, {'block_Idx': 218, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e56>, <DisassemblerInsn "add" for 0x400e5a>, <DisassemblerInsn "mov" for 0x400e5d>, <DisassemblerInsn "jmp" for 0x400e61>]'}, {'block_Idx': 217, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400f80>]'}, {'block_Idx': 211, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c6f>, <DisassemblerInsn "mov" for 0x400c73>, <DisassemblerInsn "cmp" for 0x400c78>, <DisassemblerInsn "jge" for 0x400c7b>]'}, {'block_Idx': 151, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c3d>, <DisassemblerInsn "mov" for 0x400c42>, <DisassemblerInsn "mov" for 0x400c45>, <DisassemblerInsn "sub" for 0x400c49>, <DisassemblerInsn "ja" for 0x400c4d>]'}, {'block_Idx': 24, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40092e>, <DisassemblerInsn "jmp" for 0x400939>]'}, {'block_Idx': 84, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b48>, <DisassemblerInsn "mov" for 0x400b4d>, <DisassemblerInsn "xor" for 0x400b51>, <DisassemblerInsn "lea" for 0x400b53>, <DisassemblerInsn "mov" for 0x400b5a>, <DisassemblerInsn "call" for 0x400b5c>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008ea>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f2>, <DisassemblerInsn "mov" for 0x4008f7>, <DisassemblerInsn "add" for 0x4008fd>, <DisassemblerInsn "cmp" for 0x400901>, <DisassemblerInsn "jb" for 0x400905>]'}, {'block_Idx': 81, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b30>, <DisassemblerInsn "mov" for 0x400b34>, <DisassemblerInsn "and" for 0x400b38>, <DisassemblerInsn "cmp" for 0x400b3d>, <DisassemblerInsn "je" for 0x400b42>]'}], 'cfg_block_detailed_info': [{'block_Idx': 216, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400e9f>']}, {'block_Idx': 105, 'blockInsts': ['<jmp~~0x400bcb>']}, {'block_Idx': 208, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x40]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<mov~~eax, dword ptr [rsp + 0x40]>', '<sub~~eax, dword ptr [rsp + 0x3c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x400e54>']}, {'block_Idx': 206, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x38]>', '<add~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<mov~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x400f80>']}, {'block_Idx': 223, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x4010d6>']}, {'block_Idx': 526, 'blockInsts': ['<jmp~~0x40110e>']}, {'block_Idx': 188, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x400cde>']}, {'block_Idx': 224, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400f92>']}, {'block_Idx': 575, 'blockInsts': ['<mov~~qword ptr [rsp - 0x10], rdi>', '<mov~~dword ptr [rsp - 0x14], esi>', '<mov~~rax, qword ptr [rsp - 0x10]>', '<mov~~eax, dword ptr [rax + 0x10]>', '<mov~~dword ptr [rsp - 0x18], eax>', '<mov~~dword ptr [rsp - 0x1c], 0>', '<mov~~rax, qword ptr [rsp - 0x10]>', '<mov~~rax, qword ptr [rax]>', '<mov~~ecx, dword ptr [rsp - 0x18]>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<mov~~dword ptr [rsp - 4], eax>', '<mov~~eax, dword ptr [rsp - 4]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp - 4], eax>', '<mov~~eax, dword ptr [rsp - 4]>', '<mov~~ecx, dword ptr [rsp - 0x18]>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~dword ptr [rsp - 0x1c], eax>', '<mov~~eax, dword ptr [rsp - 0x14]>', '<add~~eax, dword ptr [rsp - 0x18]>', '<mov~~dword ptr [rsp - 0x18], eax>', '<mov~~ecx, dword ptr [rsp - 0x18]>', '<mov~~rax, qword ptr [rsp - 0x10]>', '<mov~~dword ptr [rax + 0x10], ecx>', '<ret~~>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xa0], 4>', '<jb~~0x400834>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xa8]>', '<jbe~~0x400a05>']}, {'block_Idx': 214, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400fcb>']}, {'block_Idx': 83, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x400360>']}, {'block_Idx': 127, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5c]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<add~~ecx, dword ptr [rax + 0xa4]>', '<mov~~dword ptr [rax + 0xa4], ecx>', '<mov~~edx, dword ptr [rsp + 0x5c]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rax + 0xa0]>', '<sub~~ecx, edx>', '<mov~~dword ptr [rax + 0xa0], ecx>', '<mov~~eax, dword ptr [rsp + 0x60]>', '<mov~~dword ptr [rsp + 0xa4], eax>', '<jmp~~0x4011d3>']}, {'block_Idx': 62, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x60]>', '<mov~~dword ptr [rsp + 0xa4], eax>', '<jmp~~0x4011d3>']}, {'block_Idx': 35, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rsi, qword ptr [rsp + 0x70]>', '<add~~rsi, 0xa8>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~edx, dword ptr [rax + 0xa0]>', '<add~~edx, dword ptr [rsp + 0x7c]>', '<call~~0x500010>']}, {'block_Idx': 106, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 8>', '<call~~0x400360>']}, {'block_Idx': 150, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x231e]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 155, 'blockInsts': ['<mov~~rax, qword ptr [rsp]>', '<lea~~rcx, [rip + 0x2092]>', '<movsxd~~rax, dword ptr [rcx + rax*4]>', '<add~~rax, rcx>', '<jmp~~rax>']}, {'block_Idx': 69, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x401570>']}, {'block_Idx': 204, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x2c]>', '<sar~~ecx, 1>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x30], eax>', '<add~~eax, dword ptr [rsp + 0x2c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x4010c4>']}, {'block_Idx': 33, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x10]>', '<mov~~dword ptr [rsp + 0x7c], eax>', '<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x60], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jb~~0x40092e>']}, {'block_Idx': 160, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011d3>']}, {'block_Idx': 65, 'blockInsts': ['<cmp~~eax, 0x664c6143>', '<jne~~0x400b1d>']}, {'block_Idx': 71, 'blockInsts': ['<mov~~dword ptr [rsp + 0x34], eax>', '<mov~~eax, dword ptr [rsp + 0x34]>', '<add~~rsp, 0x38>', '<ret~~>']}, {'block_Idx': 156, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rax + 0x40]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<imul~~ecx, dword ptr [rax + 0xc]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~esi, dword ptr [rax + 0x4c]>', '<mov~~eax, 2>', '<mov~~edx, 4>', '<cmp~~esi, 0>', '<cmovne~~eax, edx>', '<imul~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x88]>', '<mov~~dword ptr [rax], ecx>', '<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<call~~0x4015f0>']}, {'block_Idx': 104, 'blockInsts': ['<sub~~rsp, 0x28>', '<mov~~qword ptr [rsp + 0x18], rdi>', '<mov~~dword ptr [rsp + 0x14], esi>', '<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~eax, dword ptr [rax + 0x10]>', '<mov~~dword ptr [rsp + 0xc], eax>', '<mov~~dword ptr [rsp + 8], 0>', '<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~rax, qword ptr [rax]>', '<mov~~ecx, dword ptr [rsp + 0xc]>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<mov~~dword ptr [rsp + 0x24], eax>', '<mov~~eax, dword ptr [rsp + 0x24]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x24], eax>', '<mov~~eax, dword ptr [rsp + 0x24]>', '<mov~~ecx, dword ptr [rsp + 0xc]>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~dword ptr [rsp + 8], eax>', '<mov~~edi, dword ptr [rsp + 8]>', '<mov~~eax, dword ptr [rsp + 0x14]>', '<movsx~~esi, al>', '<call~~0x401230>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x64]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x400d16>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~dword ptr [rsp + 0x64], 0>', '<mov~~eax, dword ptr [rsp + 0x64]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400d3a>']}, {'block_Idx': 115, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<call~~0x4015f0>']}, {'block_Idx': 553, 'blockInsts': ['<mov~~qword ptr [rsp - 8], rdi>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~eax, dword ptr [rax + 0x10]>', '<ret~~>']}, {'block_Idx': 176, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xc]>', '<jge~~0x400d28>']}, {'block_Idx': 52, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<mov~~eax, eax>', '<add~~rdi, rax>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<movsxd~~rdx, dword ptr [rsp + 0x7c]>', '<call~~0x500020>']}, {'block_Idx': 145, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x54]>', '<add~~rsp, 0x58>', '<ret~~>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 4]>', '<mov~~dword ptr [rsp + 0x1c], eax>', '<jmp~~0x40087a>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x98]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0xa4]>', '<add~~rax, rcx>', '<mov~~qword ptr [rsp + 0x80], rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x7c], eax>', '<mov~~ecx, dword ptr [rsp + 0x7c]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa0], ecx>', '<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 4]>', '<jge~~0x400aa7>']}, {'block_Idx': 41, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rsi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<add~~rsi, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~edx, eax>', '<call~~0x500018>']}, {'block_Idx': 174, 'blockInsts': ['<jmp~~0x400d6b>']}, {'block_Idx': 68, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<call~~0x4013f0>']}, {'block_Idx': 124, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<mov~~ecx, dword ptr [rsp + 0x5c]>', '<sub~~ecx, dword ptr [rsp + 0x7c]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x1e4c]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x38]>', '<add~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<mov~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x400f82>']}, {'block_Idx': 26, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x28], rdi>', '<mov~~dword ptr [rsp + 0x24], esi>', '<cmp~~dword ptr [rsp + 0x24], 0x11>', '<jg~~0x4013a8>']}, {'block_Idx': 163, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x400d4c>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x10], eax>', '<mov~~eax, dword ptr [rsp + 0x10]>', '<mov~~dword ptr [rsp + 0x7c], eax>', '<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x60], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jb~~0x40092e>']}, {'block_Idx': 203, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x2c]>', '<sar~~ecx, 1>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x30], eax>', '<add~~eax, dword ptr [rsp + 0x2c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x4010c6>']}, {'block_Idx': 177, 'blockInsts': ['<jmp~~0x4010d8>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x20], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 4]>', '<mov~~dword ptr [rsp + 0x24], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 4]>', '<jbe~~0x40086b>']}, {'block_Idx': 1, 'blockInsts': ['<mov~~eax, 4>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jle~~0x4007b7>']}, {'block_Idx': 175, 'blockInsts': ['<lea~~rdi, [rip + 0x21ea]>', '<lea~~rsi, [rip + 0x216b]>', '<mov~~edx, 0x2b5>', '<lea~~rcx, [rip + 0x21e8]>', '<call~~0x500028>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~eax, 4>', '<mov~~dword ptr [rsp + 0x28], eax>', '<jmp~~0x4007bf>']}, {'block_Idx': 525, 'blockInsts': ['<cmp~~eax, 0>', '<je~~0x400b18>']}, {'block_Idx': 123, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xa0], 0>', '<je~~0x4011c8>']}, {'block_Idx': 561, 'blockInsts': ['<mov~~rcx, qword ptr [rsp - 0x10]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax], rcx>', '<mov~~ecx, dword ptr [rsp - 0x14]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x14], ecx>', '<mov~~rcx, qword ptr [rsp - 0x10]>', '<movsxd~~rax, dword ptr [rsp - 0x18]>', '<add~~rcx, rax>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax + 8], rcx>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x10], 0>', '<ret~~>']}, {'block_Idx': 89, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<mov~~esi, dword ptr [rsp + 0x44]>', '<call~~0x401600>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x40], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x60]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x3c], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x400e06>']}, {'block_Idx': 45, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xa8]>', '<jbe~~0x400a05>']}, {'block_Idx': 92, 'blockInsts': ['<sub~~rsp, 0x58>', '<mov~~qword ptr [rsp + 0x48], rdi>', '<mov~~dword ptr [rsp + 0x44], esi>', '<mov~~rdi, qword ptr [rsp + 0x48]>', '<add~~rdi, 0x28>', '<mov~~esi, 4>', '<call~~0x4003e0>']}, {'block_Idx': 192, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x30], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x60]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x2c], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x40106a>']}, {'block_Idx': 215, 'blockInsts': ['<jmp~~0x4010c6>']}, {'block_Idx': 197, 'blockInsts': ['<jmp~~0x4010d8>']}, {'block_Idx': 27, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x14], eax>', '<mov~~eax, dword ptr [rsp + 0x18]>', '<mov~~ecx, dword ptr [rsp + 0x14]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x10], eax>', '<jmp~~0x4008e2>']}, {'block_Idx': 195, 'blockInsts': ['<jmp~~0x4010d8>']}, {'block_Idx': 130, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011d3>']}, {'block_Idx': 19, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x20>', '<call~~0x401380>']}, {'block_Idx': 29, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0xa4]>', '<add~~rsp, 0xa8>', '<ret~~>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x1c], eax>', '<mov~~eax, dword ptr [rsp + 0x20]>', '<mov~~ecx, dword ptr [rsp + 0x24]>', '<mov~~edx, dword ptr [rsp + 0x1c]>', '<sub~~ecx, edx>', '<cmp~~eax, ecx>', '<jbe~~0x4008da>']}, {'block_Idx': 194, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x38], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x60]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x34], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x400f32>']}, {'block_Idx': 61, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x34]>', '<add~~rsp, 0x38>', '<ret~~>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x28]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 4], ecx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rsi, qword ptr [rsp + 0x70]>', '<add~~rsi, 0xa8>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~edx, dword ptr [rax + 4]>', '<call~~0x500010>']}, {'block_Idx': 171, 'blockInsts': ['<lea~~rdi, [rip + 0x1f92]>', '<lea~~rsi, [rip + 0x1f13]>', '<mov~~edx, 0x2b9>', '<lea~~rcx, [rip + 0x1f90]>', '<call~~0x500028>']}, {'block_Idx': 162, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x400e78>']}, {'block_Idx': 72, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x30], rdi>', '<mov~~rdi, qword ptr [rsp + 0x30]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x20>', '<call~~0x400500>']}, {'block_Idx': 118, 'blockInsts': ['<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<setne~~al>', '<mov~~byte ptr [rsp + 0xf], al>', '<mov~~al, byte ptr [rsp + 0xf]>', '<test~~al, 1>', '<jne~~0x400bb6>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}, {'block_Idx': 529, 'blockInsts': ['<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011d3>']}, {'block_Idx': 99, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x401570>']}, {'block_Idx': 341, 'blockInsts': ['<mov~~dword ptr [rsp + 0x54], 0>', '<mov~~eax, dword ptr [rsp + 0x54]>', '<add~~rsp, 0x58>', '<ret~~>']}, {'block_Idx': 161, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x400fa4>']}, {'block_Idx': 189, 'blockInsts': ['<jmp~~0x400d2a>']}, {'block_Idx': 90, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<call~~0x4015f0>']}, {'block_Idx': 193, 'blockInsts': ['<jmp~~0x4010d8>']}, {'block_Idx': 173, 'blockInsts': ['<lea~~rdi, [rip + 0x20be]>', '<lea~~rsi, [rip + 0x203f]>', '<mov~~edx, 0x2b7>', '<lea~~rcx, [rip + 0x20bc]>', '<call~~0x500028>']}, {'block_Idx': 116, 'blockInsts': ['<jmp~~0x400b61>']}, {'block_Idx': 186, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400e66>']}, {'block_Idx': 56, 'blockInsts': ['<cmp~~dword ptr [rsp + 0x60], 0>', '<je~~0x400aa7>']}, {'block_Idx': 148, 'blockInsts': ['<cmp~~eax, 0>', '<jge~~0x400c3d>']}, {'block_Idx': 560, 'blockInsts': ['<mov~~dword ptr [rsp - 0x14], 0>', '<mov~~dword ptr [rsp - 0x18], 0>', '<mov~~qword ptr [rsp - 0x10], 0>', '<mov~~rcx, qword ptr [rsp - 0x10]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax], rcx>', '<mov~~ecx, dword ptr [rsp - 0x14]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x14], ecx>', '<mov~~rcx, qword ptr [rsp - 0x10]>', '<movsxd~~rax, dword ptr [rsp - 0x18]>', '<add~~rcx, rax>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax + 8], rcx>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x10], 0>', '<ret~~>']}, {'block_Idx': 210, 'blockInsts': ['<jmp~~0x400d18>']}, {'block_Idx': 57, 'blockInsts': ['<jmp~~0x400aa9>']}, {'block_Idx': 40, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<mov~~eax, eax>', '<add~~rdi, rax>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<movsxd~~rdx, dword ptr [rsp + 0x7c]>', '<call~~0x500020>']}, {'block_Idx': 3, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x28], eax>', '<mov~~ecx, dword ptr [rsp + 0x28]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 4], ecx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rsi, qword ptr [rsp + 0x70]>', '<add~~rsi, 0xa8>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~edx, dword ptr [rax + 4]>', '<call~~0x500010>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x20]>', '<mov~~ecx, dword ptr [rsp + 0x24]>', '<mov~~edx, dword ptr [rsp + 0x1c]>', '<sub~~ecx, edx>', '<cmp~~eax, ecx>', '<jbe~~0x4008da>']}, {'block_Idx': 220, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xc]>', '<jge~~0x400d28>']}, {'block_Idx': 558, 'blockInsts': ['<mov~~qword ptr [rsp - 8], rdi>', '<mov~~qword ptr [rsp - 0x10], rsi>', '<mov~~dword ptr [rsp - 0x14], edx>', '<mov~~eax, dword ptr [rsp - 0x14]>', '<add~~eax, 7>', '<sar~~eax, 3>', '<mov~~dword ptr [rsp - 0x18], eax>', '<cmp~~dword ptr [rsp - 0x18], 0>', '<jl~~0x40030a>']}, {'block_Idx': 209, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400c89>']}, {'block_Idx': 34, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x18]>', '<mov~~ecx, dword ptr [rsp + 0x14]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x10], eax>', '<jmp~~0x4008e2>']}, {'block_Idx': 25, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xa4]>', '<jae~~0x40093e>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<mov~~edx, dword ptr [rsp + 0x7c]>', '<shl~~edx, 3>', '<call~~0x4002e0>']}, {'block_Idx': 527, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x23fe]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 111, 'blockInsts': ['<jmp~~0x40110e>']}, {'block_Idx': 172, 'blockInsts': ['<jmp~~0x400e97>']}, {'block_Idx': 184, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400f92>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 4]>', '<mov~~dword ptr [rsp + 0x18], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 4]>', '<jbe~~0x4008bb>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x64]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x400d18>']}, {'block_Idx': 219, 'blockInsts': ['<jmp~~0x400e56>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}, {'block_Idx': 114, 'blockInsts': ['<mov~~dword ptr [rsp + 0x10], eax>', '<mov~~eax, dword ptr [rsp + 0x10]>', '<add~~rsp, 0x28>', '<ret~~>']}, {'block_Idx': 100, 'blockInsts': ['<mov~~al, byte ptr [rsp + 0xf]>', '<test~~al, 1>', '<jne~~0x400bb6>']}, {'block_Idx': 121, 'blockInsts': ['<add~~eax, 7>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~dword ptr [rsp + 0x5c], eax>', '<mov~~eax, dword ptr [rsp + 0x5c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jle~~0x401181>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x98]>', '<cmp~~dword ptr [rax], 0x43614c66>', '<je~~0x4008ea>']}, {'block_Idx': 30, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa8]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0xa0]>', '<add~~ecx, dword ptr [rsp + 0x7c]>', '<cmp~~eax, ecx>', '<jae~~0x400997>']}, {'block_Idx': 96, 'blockInsts': ['<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~ecx, eax>', '<add~~ecx, 2>', '<xor~~eax, eax>', '<cmp~~ecx, dword ptr [rsp + 0x7c]>', '<mov~~byte ptr [rsp + 0xf], al>', '<jge~~0x400bac>']}, {'block_Idx': 182, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x4010d6>']}, {'block_Idx': 170, 'blockInsts': ['<jmp~~0x400fc3>']}, {'block_Idx': 207, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x40]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<mov~~eax, dword ptr [rsp + 0x40]>', '<sub~~eax, dword ptr [rsp + 0x3c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x400e56>']}, {'block_Idx': 200, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x64]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x64], eax>', '<jmp~~0x400c6f>']}, {'block_Idx': 0, 'blockInsts': ['<sub~~rsp, 0xa8>', '<mov~~qword ptr [rsp + 0x98], rdi>', '<mov~~qword ptr [rsp + 0x90], rsi>', '<mov~~qword ptr [rsp + 0x88], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~dword ptr [rsp + 0x7c], r8d>', '<mov~~rax, qword ptr [rsp + 0x98]>', '<mov~~rax, qword ptr [rax + 0xa0]>', '<mov~~qword ptr [rsp + 0x70], rax>', '<mov~~dword ptr [rsp + 0x6c], 0>', '<mov~~dword ptr [rsp + 0x64], 0>', '<mov~~dword ptr [rsp + 0x60], 0>', '<mov~~dword ptr [rsp + 0x5c], 0>', '<mov~~rax, qword ptr [rsp + 0x90]>', '<mov~~qword ptr [rsp + 0x50], rax>', '<mov~~rax, qword ptr [rsp + 0x90]>', '<mov~~qword ptr [rsp + 0x48], rax>', '<mov~~rax, qword ptr [rsp + 0x88]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x44], eax>', '<mov~~rax, qword ptr [rsp + 0x88]>', '<mov~~dword ptr [rax], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<jne~~0x4007ff>']}, {'block_Idx': 225, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400e66>']}, {'block_Idx': 543, 'blockInsts': ['<xor~~eax, eax>', '<add~~rsp, 0x38>', '<ret~~>']}, {'block_Idx': 126, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5c]>', '<mov~~dword ptr [rsp + 0xa4], eax>', '<mov~~eax, dword ptr [rsp + 0xa4]>', '<add~~rsp, 0xa8>', '<ret~~>']}, {'block_Idx': 218, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400d73>']}, {'block_Idx': 217, 'blockInsts': ['<jmp~~0x400f82>']}, {'block_Idx': 211, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x64]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400d3a>']}, {'block_Idx': 151, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0x50]>', '<mov~~qword ptr [rsp], rax>', '<sub~~rax, 3>', '<ja~~0x4010d8>']}, {'block_Idx': 24, 'blockInsts': ['<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011d3>']}, {'block_Idx': 84, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x23b5]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 18, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x60], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jb~~0x40092e>']}, {'block_Idx': 81, 'blockInsts': ['<mov~~dword ptr [rsp + 0x6c], eax>', '<mov~~eax, dword ptr [rsp + 0x6c]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400bd0>']}], 'cfg_edge_info': [(206, 217), (543, 525), (194, 206), (224, 195), (99, 118), (207, 218), (5, 19), (177, 156), (114, 118), (148, 150), (115, 553), (69, 104), (6, 11), (151, 155), (214, 223), (114, 81), (16, 22), (52, 51), (118, 106), (188, 198), (164, 176), (5, 558), (17, 23), (208, 219), (106, 116), (204, 215), (96, 99), (192, 204), (105, 111), (99, 104), (553, 121), (162, 172), (68, 525), (51, 57), (182, 193), (210, 209), (69, 81), (529, 29), (83, 89), (100, 105), (115, 121), (33, 24), (36, 41), (197, 156), (56, 62), (560, 19), (21, 25), (23, 22), (0, 2), (526, 115), (106, 575), (211, 176), (156, 121), (220, 188), (1, 3), (68, 72), (155, 162), (123, 127), (71, 65), (172, 184), (189, 200), (30, 36), (184, 195), (81, 84), (225, 196), (90, 96), (12, 6), (163, 175), (3, 12), (121, 123), (160, 29), (525, 527), (155, 164), (186, 197), (10, 17), (156, 553), (27, 33), (561, 19), (116, 90), (90, 553), (196, 208), (25, 24), (16, 21), (56, 57), (118, 105), (209, 220), (193, 156), (61, 65), (527, 529), (40, 51), (176, 189), (161, 170), (2, 6), (45, 41), (170, 182), (215, 214), (11, 18), (195, 156), (51, 56), (188, 199), (84, 90), (182, 192), (223, 193), (89, 92), (36, 40), (341, 148), (198, 209), (145, 148), (162, 173), (575, 89), (194, 205), (18, 25), (21, 24), (23, 21), (4, 8), (217, 216), (224, 194), (205, 216), (123, 126), (65, 69), (19, 26), (83, 575), (30, 35), (6, 10), (174, 186), (219, 218), (12, 5), (163, 174), (124, 130), (19, 65), (525, 526), (1, 4), (10, 16), (196, 207), (148, 151), (225, 197), (151, 156), (192, 203), (41, 52), (35, 45), (62, 29), (150, 160), (164, 177), (121, 124), (8, 12), (176, 188), (216, 224), (2, 5), (45, 40), (57, 5), (130, 29), (24, 29), (96, 100), (203, 214), (223, 192), (0, 1), (34, 33), (199, 210), (161, 171), (11, 10), (127, 29), (155, 161), (100, 106), (111, 115), (33, 25), (200, 211), (184, 194), (81, 83), (25, 30), (18, 24), (89, 148), (65, 68), (211, 177), (218, 225), (220, 189), (553, 96), (155, 163), (186, 196)], 'cdg_edge_info': [(194, 206), (56, 19), (163, 121), (0, 5), (162, 195), (155, 156), (148, 150), (6, 11), (220, 209), (33, 29), (123, 29), (151, 155), (118, 106), (186, 225), (81, 96), (184, 216), (81, 105), (164, 176), (188, 198), (1, 8), (118, 90), (155, 121), (96, 99), (192, 204), (220, 220), (186, 218), (56, 5), (81, 89), (16, 33), (162, 172), (525, 29), (100, 96), (36, 41), (33, 24), (161, 182), (162, 156), (25, 29), (56, 62), (21, 25), (0, 2), (211, 176), (220, 188), (121, 130), (123, 127), (1, 3), (223, 214), (81, 121), (155, 162), (223, 223), (30, 36), (36, 52), (161, 193), (81, 84), (225, 196), (30, 45), (81, 148), (12, 6), (163, 175), (162, 121), (23, 33), (121, 123), (525, 527), (155, 164), (65, 81), (224, 224), (118, 96), (25, 24), (16, 21), (56, 57), (196, 208), (21, 29), (225, 225), (163, 186), (161, 170), (525, 529), (2, 6), (45, 41), (11, 18), (12, 65), (51, 56), (188, 199), (12, 19), (225, 218), (182, 192), (25, 65), (25, 19), (45, 52), (176, 209), (121, 29), (162, 173), (194, 205), (18, 25), (21, 24), (23, 21), (224, 194), (161, 156), (81, 111), (123, 126), (65, 69), (10, 23), (164, 200), (525, 115), (30, 35), (163, 156), (6, 10), (12, 5), (163, 174), (25, 51), (56, 29), (184, 224), (525, 526), (1, 4), (25, 5), (10, 16), (161, 121), (196, 207), (148, 151), (164, 211), (148, 160), (151, 156), (56, 65), (192, 203), (18, 29), (121, 124), (81, 115), (176, 188), (224, 216), (163, 197), (211, 200), (155, 177), (96, 100), (81, 90), (151, 121), (223, 192), (96, 118), (0, 1), (0, 65), (161, 171), (11, 10), (182, 214), (0, 19), (155, 161), (100, 106), (525, 121), (33, 25), (211, 211), (184, 194), (81, 83), (25, 30), (18, 24), (176, 220), (162, 184), (25, 57), (100, 90), (65, 68), (0, 12), (148, 29), (155, 163), (186, 196), (182, 223)], 'ddg_edge_info': [(12, 123), (81, 204), (205, 127), (0, 5), (68, 130), (0, 23), (151, 155), (151, 164), (52, 51), (151, 173), (33, 56), (184, 216), (83, 124), (25, 52), (19, 130), (0, 126), (83, 151), (83, 160), (176, 199), (69, 225), (12, 127), (81, 199), (81, 208), (151, 123), (6, 52), (69, 90), (69, 99), (208, 123), (69, 211), (69, 220), (81, 194), (81, 203), (207, 208), (203, 156), (12, 198), (52, 5), (151, 127), (12, 207), (12, 225), (19, 84), (203, 192), (0, 89), (208, 127), (83, 123), (68, 223), (52, 126), (12, 90), (84, 106), (69, 206), (12, 99), (176, 198), (84, 124), (69, 224), (81, 198), (81, 207), (19, 223), (68, 106), (6, 33), (12, 211), (68, 124), (121, 127), (6, 51), (69, 89), (12, 220), (205, 206), (205, 224), (19, 106), (151, 225), (194, 205), (35, 41), (83, 127), (69, 192), (214, 192), (164, 200), (0, 205), (198, 211), (68, 83), (6, 10), (12, 188), (12, 206), (69, 84), (527, 126), (19, 83), (68, 204), (151, 220), (35, 45), (84, 96), (69, 196), (81, 161), (69, 205), (216, 224), (198, 188), (19, 204), (81, 188), (68, 69), (203, 123), (0, 200), (83, 225), (12, 192), (8, 51), (204, 124), (0, 56), (19, 69), (83, 90), (151, 206), (83, 99), (68, 199), (68, 208), (151, 224), (198, 156), (81, 156), (19, 199), (164, 199), (12, 160), (19, 208), (83, 211), (186, 196), (203, 127), (209, 198), (83, 220), (12, 196), (11, 51), (0, 51), (12, 25), (68, 194), (12, 52), (68, 203), (81, 151), (207, 156), (19, 194), (19, 203), (83, 206), (0, 199), (83, 224), (186, 218), (8, 41), (204, 123), (19, 68), (151, 196), (83, 89), (151, 205), (68, 198), (69, 163), (151, 214), (68, 207), (151, 223), (207, 124), (19, 162), (124, 126), (81, 155), (208, 196), (83, 192), (12, 150), (19, 198), (0, 203), (30, 45), (8, 45), (0, 41), (12, 6), (11, 41), (12, 24), (151, 182), (206, 127), (12, 33), (83, 84), (198, 123), (151, 200), (204, 203), (151, 209), (196, 208), (151, 218), (199, 124), (81, 150), (127, 126), (83, 196), (83, 205), (12, 163), (0, 45), (12, 10), (68, 161), (12, 19), (33, 51), (182, 192), (151, 186), (68, 188), (198, 127), (151, 204), (69, 162), (45, 52), (207, 123), (19, 161), (84, 156), (118, 121), (96, 121), (0, 4), (8, 35), (12, 5), (151, 163), (68, 156), (69, 130), (12, 23), (25, 51), (184, 224), (196, 207), (83, 150), (19, 156), (216, 194), (199, 123), (12, 126), (81, 225), (8, 12), (0, 8), (8, 21), (8, 30), (0, 35), (11, 35), (68, 151), (68, 160), (151, 176), (203, 223), (19, 124), (45, 51), (19, 151), (19, 160), (83, 163), (206, 224), (12, 130), (176, 220), (198, 220), (81, 211), (160, 126), (81, 220), (0, 3), (8, 16), (0, 12), (207, 225), (218, 225), (0, 21), (12, 224), (204, 156), (151, 162), (151, 171), (33, 45), (25, 41), (204, 192), (0, 124), (12, 89), (156, 124), (84, 123), (69, 223), (214, 223), (118, 106), (81, 206), (199, 198), (81, 224), (96, 124), (8, 11), (6, 41), (151, 130), (68, 123), (121, 126), (0, 16), (200, 199), (69, 106), (203, 204), (192, 204), (69, 124), (25, 45), (3, 8), (19, 123), (12, 84), (206, 205), (83, 162), (84, 127), (81, 192), (205, 124), (199, 211), (12, 205), (6, 45), (69, 83), (68, 127), (12, 223), (33, 35), (81, 84), (19, 127), (83, 130), (0, 123), (69, 204), (12, 106), (118, 96), (81, 196), (81, 205), (199, 188), (209, 220), (527, 529), (33, 30), (84, 90), (68, 225), (12, 83), (84, 99), (69, 199), (69, 208), (199, 156), (164, 198), (19, 207), (176, 209), (19, 225), (68, 90), (218, 196), (68, 99), (6, 35), (151, 124), (204, 127), (12, 204), (21, 33), (10, 23), (19, 90), (12, 51), (19, 99), (208, 124), (68, 211), (12, 69), (68, 220), (124, 130), (69, 194), (35, 52), (69, 203), (0, 198), (19, 211), (164, 211), (0, 207), (19, 220), (83, 223), (6, 30), (69, 68), (12, 199), (12, 208), (121, 124), (150, 160), (205, 194), (83, 106), (68, 206), (68, 224), (69, 198), (81, 163), (69, 207), (206, 194), (19, 188), (198, 199), (19, 206), (0, 211), (19, 224), (6, 16), (68, 89), (6, 25), (12, 194), (12, 203), (51, 5), (12, 41), (19, 89), (151, 199), (182, 214), (68, 192), (151, 208), (182, 223), (12, 68), (207, 127), (194, 206), (33, 127), (19, 192), (83, 204), (12, 162), (68, 84), (186, 225), (83, 69), (0, 62), (151, 194), (12, 45), (151, 203), (68, 196), (69, 161), (68, 205), (69, 188), (199, 127), (81, 162), (51, 121), (19, 196), (83, 199), (19, 205), (83, 208), (203, 124), (8, 25), (118, 156), (0, 30), (8, 52), (151, 198), (69, 156), (151, 207), (151, 216), (62, 126), (208, 207), (83, 194), (130, 126), (83, 203), (208, 225), (12, 161), (24, 126), (209, 199), (205, 156), (0, 25), (68, 150), (11, 52), (0, 52), (151, 175), (83, 68), (52, 62), (151, 184), (12, 35), (69, 151), (69, 160), (45, 41), (151, 211), (206, 156), (19, 150), (204, 223), (16, 23), (83, 198), (8, 6), (12, 156), (83, 207), (0, 11), (8, 24), (199, 220), (150, 126), (8, 33), (151, 161), (4, 8), (68, 163), (12, 21), (206, 124), (12, 30), (151, 188), (33, 62), (156, 123), (19, 163), (12, 124), (51, 124), (12, 151), (81, 223), (8, 10), (0, 6), (0, 24), (200, 198), (0, 33), (151, 156), (192, 203), (529, 126), (12, 16), (69, 123), (41, 52), (151, 192), (198, 124), (69, 150), (208, 156), (0, 127), (156, 127), (83, 161), (207, 196), (83, 188), (96, 118), (205, 123), (8, 5), (0, 1), (0, 10), (8, 23), (0, 19), (33, 25), (200, 211), (184, 194), (12, 11), (81, 83), (68, 162), (69, 127), (52, 56), (33, 52), (206, 123), (8, 126), (83, 156), (51, 96), (84, 130)]}]}
{'flac_decode_frame': [{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 193, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 194, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 195, 'instruction': 'movq\t0x80(%rsp), %rsi'}, {'instIndex': 196, 'instruction': 'movl\t0x7c(%rsp), %edx'}, {'instIndex': 197, 'instruction': 'shll\t$3, %edx'}, {'instIndex': 198, 'instruction': 'callq\tinit_get_bits'}, {'instIndex': 199, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 200, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 201, 'instruction': 'movl\t$0x20, %esi'}, {'instIndex': 202, 'instruction': 'callq\tshow_bits_long'}, {'instIndex': 203, 'instruction': 'cmpl\t$0x664c6143, %eax               # imm = 0x0x298C0x17ff'}, {'instIndex': 204, 'instruction': 'jne\t.LBB10_33'}, {'instIndex': 205, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 206, 'instruction': 'callq\tmetadata_parse'}, {'instIndex': 207, 'instruction': 'cmpl\t$0, %eax'}, {'instIndex': 208, 'instruction': 'je\t.LBB10_32'}]}]}
The case of compiler clang with optimization O0.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O0/flacdec.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O0/flacdec.s---flac_decode_frame---before
function id: 10
function flag: True
There are 641 instructions for function: flac_decode_frame in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '639', 'end': 649}, 'before': {'start': '639', 'end': 644}}}]
[{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 193, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 194, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 195, 'instruction': 'movq\t0x80(%rsp), %rsi'}, {'instIndex': 196, 'instruction': 'movl\t0x7c(%rsp), %edx'}, {'instIndex': 197, 'instruction': 'shll\t$3, %edx'}, {'instIndex': 198, 'instruction': 'callq\tinit_get_bits'}, {'instIndex': 199, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 200, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 201, 'instruction': 'movl\t$0x20, %esi'}, {'instIndex': 202, 'instruction': 'callq\tshow_bits_long'}, {'instIndex': 203, 'instruction': 'cmpl\t$0x664c6143, %eax               # imm = 0x0x298C0x17ff'}, {'instIndex': 204, 'instruction': 'jne\t.LBB10_33'}, {'instIndex': 205, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 206, 'instruction': 'callq\tmetadata_parse'}, {'instIndex': 207, 'instruction': 'cmpl\t$0, %eax'}, {'instIndex': 208, 'instruction': 'je\t.LBB10_32'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O0/flacdec.o
Unpatched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O0/flacdec.o---before
The extraction of function: flac_decode_frame
Analyzing the binaries to generate subCFGs from patched function ...
It has 578 nodes and 1006 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 641 instructions in binary file.
[4197033, 4197062, 4197081, 4197088, 4197098]
The execution time of patched subCFG information extraction via angr: 0:00:03.542400
{'flac_decode_frame': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 30, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aef>, <DisassemblerInsn "mov" for 0x400af4>, <DisassemblerInsn "xor" for 0x400af8>, <DisassemblerInsn "lea" for 0x400afa>, <DisassemblerInsn "mov" for 0x400b01>, <DisassemblerInsn "call" for 0x400b03>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aa9>, <DisassemblerInsn "add" for 0x400aae>, <DisassemblerInsn "mov" for 0x400ab2>, <DisassemblerInsn "mov" for 0x400aba>, <DisassemblerInsn "shl" for 0x400abe>, <DisassemblerInsn "call" for 0x400ac1>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400ad9>, <DisassemblerInsn "jne" for 0x400ade>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007f0>, <DisassemblerInsn "mov" for 0x4007f3>, <DisassemblerInsn "mov" for 0x4007f8>, <DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ae0>, <DisassemblerInsn "call" for 0x400ae5>]'}, {'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ac6>, <DisassemblerInsn "add" for 0x400acb>, <DisassemblerInsn "mov" for 0x400acf>, <DisassemblerInsn "call" for 0x400ad4>]'}, {'block_Idx': 56, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400aa7>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400b18>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b1d>, <DisassemblerInsn "add" for 0x400b22>, <DisassemblerInsn "mov" for 0x400b26>, <DisassemblerInsn "call" for 0x400b2b>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400aea>, <DisassemblerInsn "je" for 0x400aed>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}], 'cfg_block_detailed_info': [{'block_Idx': 30, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x23fe]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<mov~~edx, dword ptr [rsp + 0x7c]>', '<shl~~edx, 3>', '<call~~0x4002e0>']}, {'block_Idx': 12, 'blockInsts': ['<cmp~~eax, 0x664c6143>', '<jne~~0x400b1d>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<call~~0x4013f0>']}, {'block_Idx': 9, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x20>', '<call~~0x401380>']}, {'block_Idx': 56, 'blockInsts': ['<jmp~~0x400aa9>']}, {'block_Idx': 29, 'blockInsts': ['<jmp~~0x40110e>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x401570>']}, {'block_Idx': 23, 'blockInsts': ['<cmp~~eax, 0>', '<je~~0x400b18>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}], 'cfg_edge_info': [(12, 17), (7, 5), (12, 16), (9, 12), (23, 29), (5, 9), (56, 5), (2, 5), (23, 30), (16, 23)]}]}
{'flac_decode_frame': [4197033, 4197062, 4197081, 4197088, 4197098]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O0/flacdec.o---before
The extraction of function: flac_decode_frame
[4197033, 4197062, 4197081, 4197088, 4197098]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 830 nodes and 1243 edges in CFGEmulated.
It has 830 nodes and 1471 edges in CDG.
It has 11189 nodes and 25265 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4197033, 4197062, 4197081, 4197088, 4197098]
{4197894, 4196366, 4197391, 4198418, 4196380, 4196404, 4197437, 4196926, 4197459, 4197974, 4197990, 4197479, 4198506, 4197995, 4196459, 4197487, 4198006, 4198008, 4196474, 4197505, 4197513, 4197008, 4197015, 4198039, 4197531, 4198047, 4197542, 4197031, 4197033, 4198065, 4197062, 4198598, 4198614, 4198616, 4197081, 4196570, 4197598, 4197088, 4196578, 4198118, 4197098, 4196586, 4197103, 4196096, 4196615, 4197128, 4198670, 4197144, 4197656, 4198684, 4197149, 4197674, 4196654, 4197168, 4198194, 4198709, 4197690, 4196670, 4197695, 4197192, 4197706, 4197708, 4198742, 4196700, 4197217, 4197739, 4197231, 4197747, 4198785, 4198274, 4197765, 4196744, 4197256, 4198799, 4198290, 4198295, 4196759, 4197275, 4196257, 4198306, 4198308, 4196268, 4197292, 4197300, 4197302, 4196279, 4197818, 4196798, 4196287, 4198339, 4198856, 4197323, 4198347, 4197328, 4198867, 4198365, 4197347, 4196336, 4197361, 4197366, 4196854, 4196351}
[216, 105, 208, 206, 223, 526, 188, 224, 575, 6, 36, 214, 83, 127, 62, 35, 106, 150, 155, 69, 204, 33, 160, 65, 71, 156, 104, 199, 164, 115, 553, 176, 52, 145, 17, 51, 41, 174, 68, 124, 205, 26, 163, 21, 203, 177, 10, 1, 175, 4, 525, 123, 561, 89, 196, 45, 92, 192, 215, 197, 27, 195, 130, 19, 29, 16, 194, 61, 8, 171, 162, 72, 118, 2, 529, 99, 341, 161, 189, 90, 193, 173, 116, 186, 56, 148, 560, 210, 57, 40, 3, 23, 220, 558, 209, 34, 25, 5, 527, 111, 172, 184, 22, 198, 219, 12, 114, 100, 121, 11, 30, 96, 182, 170, 207, 200, 0, 225, 543, 126, 218, 217, 211, 151, 24, 84, 18, 81]
The execution time of patched slicing information extraction via angr: 0:06:12.085479
{'flac_decode_frame': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 216, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f82>, <DisassemblerInsn "add" for 0x400f86>, <DisassemblerInsn "mov" for 0x400f89>, <DisassemblerInsn "jmp" for 0x400f8d>]'}, {'block_Idx': 105, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400bb4>]'}, {'block_Idx': 208, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400dba>, <DisassemblerInsn "mov" for 0x400dbe>, <DisassemblerInsn "mov" for 0x400dc3>, <DisassemblerInsn "shl" for 0x400dc6>, <DisassemblerInsn "mov" for 0x400dc8>, <DisassemblerInsn "mov" for 0x400dca>, <DisassemblerInsn "mov" for 0x400dcf>, <DisassemblerInsn "add" for 0x400dd2>, <DisassemblerInsn "mov" for 0x400dd6>, <DisassemblerInsn "mov" for 0x400ddb>, <DisassemblerInsn "mov" for 0x400ddd>, <DisassemblerInsn "sub" for 0x400de1>, <DisassemblerInsn "mov" for 0x400de5>, <DisassemblerInsn "mov" for 0x400dea>, <DisassemblerInsn "shl" for 0x400ded>, <DisassemblerInsn "mov" for 0x400def>, <DisassemblerInsn "mov" for 0x400df1>, <DisassemblerInsn "mov" for 0x400df6>, <DisassemblerInsn "add" for 0x400df9>, <DisassemblerInsn "mov" for 0x400dfd>, <DisassemblerInsn "mov" for 0x400e02>, <DisassemblerInsn "jmp" for 0x400e04>]'}, {'block_Idx': 206, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ee6>, <DisassemblerInsn "add" for 0x400eea>, <DisassemblerInsn "mov" for 0x400eee>, <DisassemblerInsn "mov" for 0x400ef3>, <DisassemblerInsn "shl" for 0x400ef6>, <DisassemblerInsn "mov" for 0x400ef8>, <DisassemblerInsn "mov" for 0x400efa>, <DisassemblerInsn "mov" for 0x400eff>, <DisassemblerInsn "add" for 0x400f02>, <DisassemblerInsn "mov" for 0x400f06>, <DisassemblerInsn "mov" for 0x400f0b>, <DisassemblerInsn "mov" for 0x400f0d>, <DisassemblerInsn "mov" for 0x400f11>, <DisassemblerInsn "mov" for 0x400f16>, <DisassemblerInsn "shl" for 0x400f19>, <DisassemblerInsn "mov" for 0x400f1b>, <DisassemblerInsn "mov" for 0x400f1d>, <DisassemblerInsn "mov" for 0x400f22>, <DisassemblerInsn "add" for 0x400f25>, <DisassemblerInsn "mov" for 0x400f29>, <DisassemblerInsn "mov" for 0x400f2e>, <DisassemblerInsn "jmp" for 0x400f30>]'}, {'block_Idx': 223, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fcb>, <DisassemblerInsn "mov" for 0x400fcf>, <DisassemblerInsn "cmp" for 0x400fd4>, <DisassemblerInsn "jge" for 0x400fd7>]'}, {'block_Idx': 526, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400b18>]'}, {'block_Idx': 188, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c9b>, <DisassemblerInsn "cmp" for 0x400ca0>, <DisassemblerInsn "je" for 0x400ca4>]'}, {'block_Idx': 224, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e9f>, <DisassemblerInsn "mov" for 0x400ea3>, <DisassemblerInsn "cmp" for 0x400ea8>, <DisassemblerInsn "jge" for 0x400eab>]'}, {'block_Idx': 575, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400360>, <DisassemblerInsn "mov" for 0x400365>, <DisassemblerInsn "mov" for 0x400369>, <DisassemblerInsn "mov" for 0x40036e>, <DisassemblerInsn "mov" for 0x400371>, <DisassemblerInsn "mov" for 0x400375>, <DisassemblerInsn "mov" for 0x40037d>, <DisassemblerInsn "mov" for 0x400382>, <DisassemblerInsn "mov" for 0x400385>, <DisassemblerInsn "sar" for 0x400389>, <DisassemblerInsn "movsxd" for 0x40038c>, <DisassemblerInsn "mov" for 0x40038f>, <DisassemblerInsn "mov" for 0x400392>, <DisassemblerInsn "mov" for 0x400396>, <DisassemblerInsn "ror" for 0x40039a>, <DisassemblerInsn "ror" for 0x40039e>, <DisassemblerInsn "ror" for 0x4003a1>, <DisassemblerInsn "mov" for 0x4003a5>, <DisassemblerInsn "mov" for 0x4003a9>, <DisassemblerInsn "mov" for 0x4003ad>, <DisassemblerInsn "and" for 0x4003b1>, <DisassemblerInsn "shl" for 0x4003b4>, <DisassemblerInsn "mov" for 0x4003b6>, <DisassemblerInsn "mov" for 0x4003ba>, <DisassemblerInsn "add" for 0x4003be>, <DisassemblerInsn "mov" for 0x4003c2>, <DisassemblerInsn "mov" for 0x4003c6>, <DisassemblerInsn "mov" for 0x4003ca>, <DisassemblerInsn "mov" for 0x4003cf>, <DisassemblerInsn "ret" for 0x4003d2>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40080e>, <DisassemblerInsn "cmp" for 0x400813>, <DisassemblerInsn "jb" for 0x40081a>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "mov" for 0x4009a2>, <DisassemblerInsn "add" for 0x4009a7>, <DisassemblerInsn "add" for 0x4009ad>, <DisassemblerInsn "mov" for 0x4009b1>, <DisassemblerInsn "cmp" for 0x4009b6>, <DisassemblerInsn "jbe" for 0x4009bc>]'}, {'block_Idx': 214, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010c6>, <DisassemblerInsn "add" for 0x4010ca>, <DisassemblerInsn "mov" for 0x4010cd>, <DisassemblerInsn "jmp" for 0x4010d1>]'}, {'block_Idx': 83, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bd0>, <DisassemblerInsn "add" for 0x400bd5>, <DisassemblerInsn "mov" for 0x400bd9>, <DisassemblerInsn "call" for 0x400bde>]'}, {'block_Idx': 127, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40118f>, <DisassemblerInsn "mov" for 0x401193>, <DisassemblerInsn "add" for 0x401198>, <DisassemblerInsn "mov" for 0x40119e>, <DisassemblerInsn "mov" for 0x4011a4>, <DisassemblerInsn "mov" for 0x4011a8>, <DisassemblerInsn "mov" for 0x4011ad>, <DisassemblerInsn "sub" for 0x4011b3>, <DisassemblerInsn "mov" for 0x4011b5>, <DisassemblerInsn "mov" for 0x4011bb>, <DisassemblerInsn "mov" for 0x4011bf>, <DisassemblerInsn "jmp" for 0x4011c6>]'}, {'block_Idx': 62, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a97>, <DisassemblerInsn "mov" for 0x400a9b>, <DisassemblerInsn "jmp" for 0x400aa2>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40095c>, <DisassemblerInsn "mov" for 0x400961>, <DisassemblerInsn "mov" for 0x400968>, <DisassemblerInsn "add" for 0x40096d>, <DisassemblerInsn "mov" for 0x400974>, <DisassemblerInsn "mov" for 0x400979>, <DisassemblerInsn "add" for 0x40097f>, <DisassemblerInsn "call" for 0x400983>]'}, {'block_Idx': 106, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bb6>, <DisassemblerInsn "add" for 0x400bbb>, <DisassemblerInsn "mov" for 0x400bbf>, <DisassemblerInsn "call" for 0x400bc4>]'}, {'block_Idx': 150, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bf6>, <DisassemblerInsn "mov" for 0x400bfb>, <DisassemblerInsn "xor" for 0x400bff>, <DisassemblerInsn "lea" for 0x400c01>, <DisassemblerInsn "mov" for 0x400c08>, <DisassemblerInsn "call" for 0x400c0a>]'}, {'block_Idx': 155, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c53>, <DisassemblerInsn "lea" for 0x400c57>, <DisassemblerInsn "movsxd" for 0x400c5e>, <DisassemblerInsn "add" for 0x400c62>, <DisassemblerInsn "jmp" for 0x400c65>]'}, {'block_Idx': 69, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b1d>, <DisassemblerInsn "add" for 0x400b22>, <DisassemblerInsn "mov" for 0x400b26>, <DisassemblerInsn "call" for 0x400b2b>]'}, {'block_Idx': 204, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401012>, <DisassemblerInsn "sar" for 0x401016>, <DisassemblerInsn "mov" for 0x401018>, <DisassemblerInsn "sub" for 0x40101c>, <DisassemblerInsn "mov" for 0x40101e>, <DisassemblerInsn "add" for 0x401022>, <DisassemblerInsn "mov" for 0x401026>, <DisassemblerInsn "mov" for 0x40102b>, <DisassemblerInsn "shl" for 0x40102e>, <DisassemblerInsn "mov" for 0x401030>, <DisassemblerInsn "mov" for 0x401032>, <DisassemblerInsn "mov" for 0x401037>, <DisassemblerInsn "add" for 0x40103a>, <DisassemblerInsn "mov" for 0x40103e>, <DisassemblerInsn "mov" for 0x401043>, <DisassemblerInsn "mov" for 0x401045>, <DisassemblerInsn "mov" for 0x401049>, <DisassemblerInsn "mov" for 0x40104e>, <DisassemblerInsn "shl" for 0x401051>, <DisassemblerInsn "mov" for 0x401053>, <DisassemblerInsn "mov" for 0x401055>, <DisassemblerInsn "mov" for 0x40105a>, <DisassemblerInsn "add" for 0x40105d>, <DisassemblerInsn "mov" for 0x401061>, <DisassemblerInsn "mov" for 0x401066>, <DisassemblerInsn "jmp" for 0x401068>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008e2>, <DisassemblerInsn "mov" for 0x4008e6>, <DisassemblerInsn "mov" for 0x4008ea>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f2>, <DisassemblerInsn "mov" for 0x4008f7>, <DisassemblerInsn "add" for 0x4008fd>, <DisassemblerInsn "cmp" for 0x400901>, <DisassemblerInsn "jb" for 0x400905>]'}, {'block_Idx': 160, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c0f>, <DisassemblerInsn "mov" for 0x400c14>, <DisassemblerInsn "mov" for 0x400c1e>, <DisassemblerInsn "mov" for 0x400c23>, <DisassemblerInsn "mov" for 0x400c2d>, <DisassemblerInsn "jmp" for 0x400c38>]'}, {'block_Idx': 65, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400ad9>, <DisassemblerInsn "jne" for 0x400ade>]'}, {'block_Idx': 71, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013d5>, <DisassemblerInsn "mov" for 0x4013d9>, <DisassemblerInsn "add" for 0x4013dd>, <DisassemblerInsn "ret" for 0x4013e1>]'}, {'block_Idx': 156, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010d8>, <DisassemblerInsn "mov" for 0x4010dd>, <DisassemblerInsn "mov" for 0x4010e0>, <DisassemblerInsn "imul" for 0x4010e5>, <DisassemblerInsn "mov" for 0x4010e9>, <DisassemblerInsn "mov" for 0x4010ee>, <DisassemblerInsn "mov" for 0x4010f1>, <DisassemblerInsn "mov" for 0x4010f6>, <DisassemblerInsn "cmp" for 0x4010fb>, <DisassemblerInsn "cmovne" for 0x4010fe>, <DisassemblerInsn "imul" for 0x401101>, <DisassemblerInsn "mov" for 0x401104>, <DisassemblerInsn "mov" for 0x40110c>, <DisassemblerInsn "mov" for 0x40110e>, <DisassemblerInsn "add" for 0x401113>, <DisassemblerInsn "call" for 0x401117>]'}, {'block_Idx': 104, 'blockInsts': '[<DisassemblerInsn "sub" for 0x401570>, <DisassemblerInsn "mov" for 0x401574>, <DisassemblerInsn "mov" for 0x401579>, <DisassemblerInsn "mov" for 0x40157d>, <DisassemblerInsn "mov" for 0x401582>, <DisassemblerInsn "mov" for 0x401585>, <DisassemblerInsn "mov" for 0x401589>, <DisassemblerInsn "mov" for 0x401591>, <DisassemblerInsn "mov" for 0x401596>, <DisassemblerInsn "mov" for 0x401599>, <DisassemblerInsn "sar" for 0x40159d>, <DisassemblerInsn "movsxd" for 0x4015a0>, <DisassemblerInsn "mov" for 0x4015a3>, <DisassemblerInsn "mov" for 0x4015a6>, <DisassemblerInsn "mov" for 0x4015aa>, <DisassemblerInsn "ror" for 0x4015ae>, <DisassemblerInsn "ror" for 0x4015b2>, <DisassemblerInsn "ror" for 0x4015b5>, <DisassemblerInsn "mov" for 0x4015b9>, <DisassemblerInsn "mov" for 0x4015bd>, <DisassemblerInsn "mov" for 0x4015c1>, <DisassemblerInsn "and" for 0x4015c5>, <DisassemblerInsn "shl" for 0x4015c8>, <DisassemblerInsn "mov" for 0x4015ca>, <DisassemblerInsn "mov" for 0x4015ce>, <DisassemblerInsn "mov" for 0x4015d2>, <DisassemblerInsn "movsx" for 0x4015d6>, <DisassemblerInsn "call" for 0x4015d9>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ca6>, <DisassemblerInsn "movsxd" for 0x400cab>, <DisassemblerInsn "mov" for 0x400cb0>, <DisassemblerInsn "movsxd" for 0x400cb5>, <DisassemblerInsn "mov" for 0x400cba>, <DisassemblerInsn "mov" for 0x400cbd>, <DisassemblerInsn "mov" for 0x400cc2>, <DisassemblerInsn "shl" for 0x400cc5>, <DisassemblerInsn "mov" for 0x400cc7>, <DisassemblerInsn "mov" for 0x400cc9>, <DisassemblerInsn "mov" for 0x400cce>, <DisassemblerInsn "add" for 0x400cd1>, <DisassemblerInsn "mov" for 0x400cd5>, <DisassemblerInsn "mov" for 0x400cda>, <DisassemblerInsn "jmp" for 0x400cdc>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c67>, <DisassemblerInsn "mov" for 0x400c6f>, <DisassemblerInsn "mov" for 0x400c73>, <DisassemblerInsn "cmp" for 0x400c78>, <DisassemblerInsn "jge" for 0x400c7b>]'}, {'block_Idx': 115, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40110e>, <DisassemblerInsn "add" for 0x401113>, <DisassemblerInsn "call" for 0x401117>]'}, {'block_Idx': 553, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015f0>, <DisassemblerInsn "mov" for 0x4015f5>, <DisassemblerInsn "mov" for 0x4015fa>, <DisassemblerInsn "ret" for 0x4015fd>]'}, {'block_Idx': 176, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c81>, <DisassemblerInsn "mov" for 0x400c89>, <DisassemblerInsn "mov" for 0x400c8d>, <DisassemblerInsn "cmp" for 0x400c92>, <DisassemblerInsn "jge" for 0x400c95>]'}, {'block_Idx': 52, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009f6>, <DisassemblerInsn "mov" for 0x4009fb>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "mov" for 0x400a0a>, <DisassemblerInsn "mov" for 0x400a11>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "mov" for 0x400a1c>, <DisassemblerInsn "add" for 0x400a21>, <DisassemblerInsn "mov" for 0x400a27>, <DisassemblerInsn "add" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a2c>, <DisassemblerInsn "movsxd" for 0x400a34>, <DisassemblerInsn "call" for 0x400a39>]'}, {'block_Idx': 145, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b3d>, <DisassemblerInsn "add" for 0x401b41>, <DisassemblerInsn "ret" for 0x401b45>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40085d>, <DisassemblerInsn "mov" for 0x400862>, <DisassemblerInsn "mov" for 0x400865>, <DisassemblerInsn "jmp" for 0x400869>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a3e>, <DisassemblerInsn "mov" for 0x400a43>, <DisassemblerInsn "mov" for 0x400a4a>, <DisassemblerInsn "mov" for 0x400a4f>, <DisassemblerInsn "add" for 0x400a55>, <DisassemblerInsn "mov" for 0x400a58>, <DisassemblerInsn "mov" for 0x400a60>, <DisassemblerInsn "mov" for 0x400a65>, <DisassemblerInsn "add" for 0x400a6b>, <DisassemblerInsn "mov" for 0x400a6f>, <DisassemblerInsn "mov" for 0x400a73>, <DisassemblerInsn "mov" for 0x400a77>, <DisassemblerInsn "mov" for 0x400a7c>, <DisassemblerInsn "mov" for 0x400a82>, <DisassemblerInsn "mov" for 0x400a86>, <DisassemblerInsn "cmp" for 0x400a8b>, <DisassemblerInsn "jge" for 0x400a8e>]'}, {'block_Idx': 41, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009be>, <DisassemblerInsn "mov" for 0x4009c3>, <DisassemblerInsn "mov" for 0x4009ca>, <DisassemblerInsn "mov" for 0x4009cf>, <DisassemblerInsn "mov" for 0x4009d6>, <DisassemblerInsn "mov" for 0x4009db>, <DisassemblerInsn "add" for 0x4009e1>, <DisassemblerInsn "mov" for 0x4009e4>, <DisassemblerInsn "mov" for 0x4009e9>, <DisassemblerInsn "mov" for 0x4009ef>, <DisassemblerInsn "call" for 0x4009f1>]'}, {'block_Idx': 174, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d4a>]'}, {'block_Idx': 68, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ae0>, <DisassemblerInsn "call" for 0x400ae5>]'}, {'block_Idx': 124, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401135>, <DisassemblerInsn "mov" for 0x40113a>, <DisassemblerInsn "mov" for 0x40113e>, <DisassemblerInsn "sub" for 0x401142>, <DisassemblerInsn "xor" for 0x401146>, <DisassemblerInsn "lea" for 0x401148>, <DisassemblerInsn "mov" for 0x40114f>, <DisassemblerInsn "call" for 0x401151>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f32>, <DisassemblerInsn "add" for 0x400f36>, <DisassemblerInsn "mov" for 0x400f3a>, <DisassemblerInsn "mov" for 0x400f3f>, <DisassemblerInsn "shl" for 0x400f42>, <DisassemblerInsn "mov" for 0x400f44>, <DisassemblerInsn "mov" for 0x400f47>, <DisassemblerInsn "mov" for 0x400f4c>, <DisassemblerInsn "add" for 0x400f4f>, <DisassemblerInsn "mov" for 0x400f53>, <DisassemblerInsn "mov" for 0x400f58>, <DisassemblerInsn "mov" for 0x400f5b>, <DisassemblerInsn "mov" for 0x400f5f>, <DisassemblerInsn "mov" for 0x400f64>, <DisassemblerInsn "shl" for 0x400f67>, <DisassemblerInsn "mov" for 0x400f69>, <DisassemblerInsn "mov" for 0x400f6c>, <DisassemblerInsn "mov" for 0x400f71>, <DisassemblerInsn "add" for 0x400f74>, <DisassemblerInsn "mov" for 0x400f78>, <DisassemblerInsn "mov" for 0x400f7d>, <DisassemblerInsn "jmp" for 0x400f80>]'}, {'block_Idx': 26, 'blockInsts': '[<DisassemblerInsn "sub" for 0x401380>, <DisassemblerInsn "mov" for 0x401384>, <DisassemblerInsn "mov" for 0x401389>, <DisassemblerInsn "cmp" for 0x40138d>, <DisassemblerInsn "jg" for 0x401392>]'}, {'block_Idx': 163, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d3f>, <DisassemblerInsn "cmp" for 0x400d44>, <DisassemblerInsn "jne" for 0x400d48>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008da>, <DisassemblerInsn "mov" for 0x4008de>, <DisassemblerInsn "mov" for 0x4008e2>, <DisassemblerInsn "mov" for 0x4008e6>, <DisassemblerInsn "mov" for 0x4008ea>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f2>, <DisassemblerInsn "mov" for 0x4008f7>, <DisassemblerInsn "add" for 0x4008fd>, <DisassemblerInsn "cmp" for 0x400901>, <DisassemblerInsn "jb" for 0x400905>]'}, {'block_Idx': 203, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40106a>, <DisassemblerInsn "sar" for 0x40106e>, <DisassemblerInsn "mov" for 0x401070>, <DisassemblerInsn "sub" for 0x401074>, <DisassemblerInsn "mov" for 0x401076>, <DisassemblerInsn "add" for 0x40107a>, <DisassemblerInsn "mov" for 0x40107e>, <DisassemblerInsn "mov" for 0x401083>, <DisassemblerInsn "shl" for 0x401086>, <DisassemblerInsn "mov" for 0x401088>, <DisassemblerInsn "mov" for 0x40108b>, <DisassemblerInsn "mov" for 0x401090>, <DisassemblerInsn "add" for 0x401093>, <DisassemblerInsn "mov" for 0x401097>, <DisassemblerInsn "mov" for 0x40109c>, <DisassemblerInsn "mov" for 0x40109f>, <DisassemblerInsn "mov" for 0x4010a3>, <DisassemblerInsn "mov" for 0x4010a8>, <DisassemblerInsn "shl" for 0x4010ab>, <DisassemblerInsn "mov" for 0x4010ad>, <DisassemblerInsn "mov" for 0x4010b0>, <DisassemblerInsn "mov" for 0x4010b5>, <DisassemblerInsn "add" for 0x4010b8>, <DisassemblerInsn "mov" for 0x4010bc>, <DisassemblerInsn "mov" for 0x4010c1>, <DisassemblerInsn "jmp" for 0x4010c4>]'}, {'block_Idx': 177, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d3a>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400834>, <DisassemblerInsn "mov" for 0x400838>, <DisassemblerInsn "mov" for 0x40083c>, <DisassemblerInsn "mov" for 0x400841>, <DisassemblerInsn "mov" for 0x400844>, <DisassemblerInsn "mov" for 0x400848>, <DisassemblerInsn "mov" for 0x40084d>, <DisassemblerInsn "mov" for 0x400853>, <DisassemblerInsn "cmp" for 0x400858>, <DisassemblerInsn "jbe" for 0x40085b>]'}, {'block_Idx': 1, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007a1>, <DisassemblerInsn "cmp" for 0x4007a6>, <DisassemblerInsn "jle" for 0x4007aa>]'}, {'block_Idx': 175, 'blockInsts': '[<DisassemblerInsn "lea" for 0x400d4c>, <DisassemblerInsn "lea" for 0x400d53>, <DisassemblerInsn "mov" for 0x400d5a>, <DisassemblerInsn "lea" for 0x400d5f>, <DisassemblerInsn "call" for 0x400d66>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007ac>, <DisassemblerInsn "mov" for 0x4007b1>, <DisassemblerInsn "jmp" for 0x4007b5>]'}, {'block_Idx': 525, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400aea>, <DisassemblerInsn "je" for 0x400aed>]'}, {'block_Idx': 123, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401181>, <DisassemblerInsn "cmp" for 0x401186>, <DisassemblerInsn "je" for 0x40118d>]'}, {'block_Idx': 561, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400323>, <DisassemblerInsn "mov" for 0x400328>, <DisassemblerInsn "mov" for 0x40032d>, <DisassemblerInsn "mov" for 0x400330>, <DisassemblerInsn "mov" for 0x400334>, <DisassemblerInsn "mov" for 0x400339>, <DisassemblerInsn "mov" for 0x40033c>, <DisassemblerInsn "movsxd" for 0x400341>, <DisassemblerInsn "add" for 0x400346>, <DisassemblerInsn "mov" for 0x400349>, <DisassemblerInsn "mov" for 0x40034e>, <DisassemblerInsn "mov" for 0x400352>, <DisassemblerInsn "mov" for 0x400357>, <DisassemblerInsn "ret" for 0x40035e>]'}, {'block_Idx': 89, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400be3>, <DisassemblerInsn "mov" for 0x400be8>, <DisassemblerInsn "call" for 0x400bec>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d85>, <DisassemblerInsn "mov" for 0x400d8a>, <DisassemblerInsn "movsxd" for 0x400d8e>, <DisassemblerInsn "mov" for 0x400d93>, <DisassemblerInsn "mov" for 0x400d96>, <DisassemblerInsn "mov" for 0x400d9a>, <DisassemblerInsn "mov" for 0x400d9f>, <DisassemblerInsn "movsxd" for 0x400da3>, <DisassemblerInsn "mov" for 0x400da8>, <DisassemblerInsn "mov" for 0x400dab>, <DisassemblerInsn "mov" for 0x400daf>, <DisassemblerInsn "cmp" for 0x400db4>, <DisassemblerInsn "je" for 0x400db8>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400988>, <DisassemblerInsn "mov" for 0x40098b>, <DisassemblerInsn "mov" for 0x400990>, <DisassemblerInsn "mov" for 0x400997>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "mov" for 0x4009a2>, <DisassemblerInsn "add" for 0x4009a7>, <DisassemblerInsn "add" for 0x4009ad>, <DisassemblerInsn "mov" for 0x4009b1>, <DisassemblerInsn "cmp" for 0x4009b6>, <DisassemblerInsn "jbe" for 0x4009bc>]'}, {'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "sub" for 0x401600>, <DisassemblerInsn "mov" for 0x401604>, <DisassemblerInsn "mov" for 0x401609>, <DisassemblerInsn "mov" for 0x40160d>, <DisassemblerInsn "add" for 0x401612>, <DisassemblerInsn "mov" for 0x401616>, <DisassemblerInsn "call" for 0x40161b>]'}, {'block_Idx': 192, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fdd>, <DisassemblerInsn "mov" for 0x400fe2>, <DisassemblerInsn "movsxd" for 0x400fe6>, <DisassemblerInsn "mov" for 0x400feb>, <DisassemblerInsn "mov" for 0x400fee>, <DisassemblerInsn "mov" for 0x400ff2>, <DisassemblerInsn "mov" for 0x400ff7>, <DisassemblerInsn "movsxd" for 0x400ffb>, <DisassemblerInsn "mov" for 0x401000>, <DisassemblerInsn "mov" for 0x401003>, <DisassemblerInsn "mov" for 0x401007>, <DisassemblerInsn "cmp" for 0x40100c>, <DisassemblerInsn "je" for 0x401010>]'}, {'block_Idx': 215, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4010c4>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e66>]'}, {'block_Idx': 27, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008bb>, <DisassemblerInsn "mov" for 0x4008c0>, <DisassemblerInsn "mov" for 0x4008c6>, <DisassemblerInsn "mov" for 0x4008ca>, <DisassemblerInsn "mov" for 0x4008ce>, <DisassemblerInsn "sub" for 0x4008d2>, <DisassemblerInsn "mov" for 0x4008d4>, <DisassemblerInsn "jmp" for 0x4008d8>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400f92>]'}, {'block_Idx': 130, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401156>, <DisassemblerInsn "mov" for 0x40115b>, <DisassemblerInsn "mov" for 0x401165>, <DisassemblerInsn "mov" for 0x40116a>, <DisassemblerInsn "mov" for 0x401174>, <DisassemblerInsn "jmp" for 0x40117f>]'}, {'block_Idx': 19, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ac6>, <DisassemblerInsn "add" for 0x400acb>, <DisassemblerInsn "mov" for 0x400acf>, <DisassemblerInsn "call" for 0x400ad4>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011d3>, <DisassemblerInsn "add" for 0x4011da>, <DisassemblerInsn "ret" for 0x4011e1>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40086b>, <DisassemblerInsn "mov" for 0x400870>, <DisassemblerInsn "mov" for 0x400876>, <DisassemblerInsn "mov" for 0x40087a>, <DisassemblerInsn "mov" for 0x40087e>, <DisassemblerInsn "mov" for 0x400882>, <DisassemblerInsn "sub" for 0x400886>, <DisassemblerInsn "cmp" for 0x400888>, <DisassemblerInsn "jbe" for 0x40088a>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400eb1>, <DisassemblerInsn "mov" for 0x400eb6>, <DisassemblerInsn "movsxd" for 0x400eba>, <DisassemblerInsn "mov" for 0x400ebf>, <DisassemblerInsn "mov" for 0x400ec2>, <DisassemblerInsn "mov" for 0x400ec6>, <DisassemblerInsn "mov" for 0x400ecb>, <DisassemblerInsn "movsxd" for 0x400ecf>, <DisassemblerInsn "mov" for 0x400ed4>, <DisassemblerInsn "mov" for 0x400ed7>, <DisassemblerInsn "mov" for 0x400edb>, <DisassemblerInsn "cmp" for 0x400ee0>, <DisassemblerInsn "je" for 0x400ee4>]'}, {'block_Idx': 61, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013d9>, <DisassemblerInsn "add" for 0x4013dd>, <DisassemblerInsn "ret" for 0x4013e1>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007bf>, <DisassemblerInsn "mov" for 0x4007c3>, <DisassemblerInsn "mov" for 0x4007c8>, <DisassemblerInsn "mov" for 0x4007cb>, <DisassemblerInsn "mov" for 0x4007d0>, <DisassemblerInsn "mov" for 0x4007d7>, <DisassemblerInsn "add" for 0x4007dc>, <DisassemblerInsn "mov" for 0x4007e3>, <DisassemblerInsn "mov" for 0x4007e8>, <DisassemblerInsn "call" for 0x4007eb>]'}, {'block_Idx': 171, 'blockInsts': '[<DisassemblerInsn "lea" for 0x400fa4>, <DisassemblerInsn "lea" for 0x400fab>, <DisassemblerInsn "mov" for 0x400fb2>, <DisassemblerInsn "lea" for 0x400fb7>, <DisassemblerInsn "call" for 0x400fbe>]'}, {'block_Idx': 162, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e6b>, <DisassemblerInsn "cmp" for 0x400e70>, <DisassemblerInsn "jne" for 0x400e74>]'}, {'block_Idx': 72, 'blockInsts': '[<DisassemblerInsn "sub" for 0x4013f0>, <DisassemblerInsn "mov" for 0x4013f4>, <DisassemblerInsn "mov" for 0x4013f9>, <DisassemblerInsn "add" for 0x4013fe>, <DisassemblerInsn "mov" for 0x401402>, <DisassemblerInsn "call" for 0x401407>]'}, {'block_Idx': 118, 'blockInsts': '[<DisassemblerInsn "and" for 0x400b9b>, <DisassemblerInsn "cmp" for 0x400ba0>, <DisassemblerInsn "setne" for 0x400ba5>, <DisassemblerInsn "mov" for 0x400ba8>, <DisassemblerInsn "mov" for 0x400bac>, <DisassemblerInsn "test" for 0x400bb0>, <DisassemblerInsn "jne" for 0x400bb2>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}, {'block_Idx': 529, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b08>, <DisassemblerInsn "jmp" for 0x400b13>]'}, {'block_Idx': 99, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b88>, <DisassemblerInsn "add" for 0x400b8d>, <DisassemblerInsn "mov" for 0x400b91>, <DisassemblerInsn "call" for 0x400b96>]'}, {'block_Idx': 341, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b35>, <DisassemblerInsn "mov" for 0x401b3d>, <DisassemblerInsn "add" for 0x401b41>, <DisassemblerInsn "ret" for 0x401b45>]'}, {'block_Idx': 161, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f97>, <DisassemblerInsn "cmp" for 0x400f9c>, <DisassemblerInsn "jne" for 0x400fa0>]'}, {'block_Idx': 189, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d28>]'}, {'block_Idx': 90, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b61>, <DisassemblerInsn "add" for 0x400b66>, <DisassemblerInsn "call" for 0x400b6a>]'}, {'block_Idx': 193, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4010d6>]'}, {'block_Idx': 173, 'blockInsts': '[<DisassemblerInsn "lea" for 0x400e78>, <DisassemblerInsn "lea" for 0x400e7f>, <DisassemblerInsn "mov" for 0x400e86>, <DisassemblerInsn "lea" for 0x400e8b>, <DisassemblerInsn "call" for 0x400e92>]'}, {'block_Idx': 116, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400bc9>]'}, {'block_Idx': 186, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d6b>, <DisassemblerInsn "mov" for 0x400d73>, <DisassemblerInsn "mov" for 0x400d77>, <DisassemblerInsn "cmp" for 0x400d7c>, <DisassemblerInsn "jge" for 0x400d7f>]'}, {'block_Idx': 56, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400a90>, <DisassemblerInsn "je" for 0x400a95>]'}, {'block_Idx': 148, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x400bf1>, <DisassemblerInsn "jge" for 0x400bf4>]'}, {'block_Idx': 560, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40030a>, <DisassemblerInsn "mov" for 0x400312>, <DisassemblerInsn "mov" for 0x40031a>, <DisassemblerInsn "mov" for 0x400323>, <DisassemblerInsn "mov" for 0x400328>, <DisassemblerInsn "mov" for 0x40032d>, <DisassemblerInsn "mov" for 0x400330>, <DisassemblerInsn "mov" for 0x400334>, <DisassemblerInsn "mov" for 0x400339>, <DisassemblerInsn "mov" for 0x40033c>, <DisassemblerInsn "movsxd" for 0x400341>, <DisassemblerInsn "add" for 0x400346>, <DisassemblerInsn "mov" for 0x400349>, <DisassemblerInsn "mov" for 0x40034e>, <DisassemblerInsn "mov" for 0x400352>, <DisassemblerInsn "mov" for 0x400357>, <DisassemblerInsn "ret" for 0x40035e>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d16>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400aa7>]'}, {'block_Idx': 40, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "mov" for 0x400a0a>, <DisassemblerInsn "mov" for 0x400a11>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "mov" for 0x400a1c>, <DisassemblerInsn "add" for 0x400a21>, <DisassemblerInsn "mov" for 0x400a27>, <DisassemblerInsn "add" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a2c>, <DisassemblerInsn "movsxd" for 0x400a34>, <DisassemblerInsn "call" for 0x400a39>]'}, {'block_Idx': 3, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007b7>, <DisassemblerInsn "mov" for 0x4007bb>, <DisassemblerInsn "mov" for 0x4007bf>, <DisassemblerInsn "mov" for 0x4007c3>, <DisassemblerInsn "mov" for 0x4007c8>, <DisassemblerInsn "mov" for 0x4007cb>, <DisassemblerInsn "mov" for 0x4007d0>, <DisassemblerInsn "mov" for 0x4007d7>, <DisassemblerInsn "add" for 0x4007dc>, <DisassemblerInsn "mov" for 0x4007e3>, <DisassemblerInsn "mov" for 0x4007e8>, <DisassemblerInsn "call" for 0x4007eb>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40087a>, <DisassemblerInsn "mov" for 0x40087e>, <DisassemblerInsn "mov" for 0x400882>, <DisassemblerInsn "sub" for 0x400886>, <DisassemblerInsn "cmp" for 0x400888>, <DisassemblerInsn "jbe" for 0x40088a>]'}, {'block_Idx': 220, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c89>, <DisassemblerInsn "mov" for 0x400c8d>, <DisassemblerInsn "cmp" for 0x400c92>, <DisassemblerInsn "jge" for 0x400c95>]'}, {'block_Idx': 558, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4002e0>, <DisassemblerInsn "mov" for 0x4002e5>, <DisassemblerInsn "mov" for 0x4002ea>, <DisassemblerInsn "mov" for 0x4002ee>, <DisassemblerInsn "add" for 0x4002f2>, <DisassemblerInsn "sar" for 0x4002f5>, <DisassemblerInsn "mov" for 0x4002f8>, <DisassemblerInsn "cmp" for 0x4002fc>, <DisassemblerInsn "jl" for 0x400301>]'}, {'block_Idx': 209, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d18>, <DisassemblerInsn "add" for 0x400d1c>, <DisassemblerInsn "mov" for 0x400d1f>, <DisassemblerInsn "jmp" for 0x400d23>]'}, {'block_Idx': 34, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008ca>, <DisassemblerInsn "mov" for 0x4008ce>, <DisassemblerInsn "sub" for 0x4008d2>, <DisassemblerInsn "mov" for 0x4008d4>, <DisassemblerInsn "jmp" for 0x4008d8>]'}, {'block_Idx': 25, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400907>, <DisassemblerInsn "mov" for 0x40090c>, <DisassemblerInsn "mov" for 0x400912>, <DisassemblerInsn "add" for 0x400917>, <DisassemblerInsn "add" for 0x40091d>, <DisassemblerInsn "mov" for 0x400921>, <DisassemblerInsn "cmp" for 0x400926>, <DisassemblerInsn "jae" for 0x40092c>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aa9>, <DisassemblerInsn "add" for 0x400aae>, <DisassemblerInsn "mov" for 0x400ab2>, <DisassemblerInsn "mov" for 0x400aba>, <DisassemblerInsn "shl" for 0x400abe>, <DisassemblerInsn "call" for 0x400ac1>]'}, {'block_Idx': 527, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400aef>, <DisassemblerInsn "mov" for 0x400af4>, <DisassemblerInsn "xor" for 0x400af8>, <DisassemblerInsn "lea" for 0x400afa>, <DisassemblerInsn "mov" for 0x400b01>, <DisassemblerInsn "call" for 0x400b03>]'}, {'block_Idx': 111, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400bcb>]'}, {'block_Idx': 172, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e76>]'}, {'block_Idx': 184, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e97>, <DisassemblerInsn "mov" for 0x400e9f>, <DisassemblerInsn "mov" for 0x400ea3>, <DisassemblerInsn "cmp" for 0x400ea8>, <DisassemblerInsn "jge" for 0x400eab>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40088c>, <DisassemblerInsn "mov" for 0x400891>, <DisassemblerInsn "mov" for 0x400894>, <DisassemblerInsn "mov" for 0x400898>, <DisassemblerInsn "mov" for 0x40089d>, <DisassemblerInsn "mov" for 0x4008a3>, <DisassemblerInsn "cmp" for 0x4008a8>, <DisassemblerInsn "jbe" for 0x4008ab>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cde>, <DisassemblerInsn "movsxd" for 0x400ce3>, <DisassemblerInsn "mov" for 0x400ce8>, <DisassemblerInsn "movsxd" for 0x400ced>, <DisassemblerInsn "mov" for 0x400cf2>, <DisassemblerInsn "mov" for 0x400cf5>, <DisassemblerInsn "mov" for 0x400cfa>, <DisassemblerInsn "shl" for 0x400cfd>, <DisassemblerInsn "mov" for 0x400cff>, <DisassemblerInsn "mov" for 0x400d02>, <DisassemblerInsn "mov" for 0x400d07>, <DisassemblerInsn "add" for 0x400d0a>, <DisassemblerInsn "mov" for 0x400d0e>, <DisassemblerInsn "mov" for 0x400d13>, <DisassemblerInsn "jmp" for 0x400d16>]'}, {'block_Idx': 219, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e54>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007f0>, <DisassemblerInsn "mov" for 0x4007f3>, <DisassemblerInsn "mov" for 0x4007f8>, <DisassemblerInsn "mov" for 0x4007ff>, <DisassemblerInsn "cmp" for 0x400804>, <DisassemblerInsn "je" for 0x400808>]'}, {'block_Idx': 114, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015de>, <DisassemblerInsn "mov" for 0x4015e2>, <DisassemblerInsn "add" for 0x4015e6>, <DisassemblerInsn "ret" for 0x4015ea>]'}, {'block_Idx': 100, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bac>, <DisassemblerInsn "test" for 0x400bb0>, <DisassemblerInsn "jne" for 0x400bb2>]'}, {'block_Idx': 121, 'blockInsts': '[<DisassemblerInsn "add" for 0x40111c>, <DisassemblerInsn "mov" for 0x40111f>, <DisassemblerInsn "cdq" for 0x401124>, <DisassemblerInsn "idiv" for 0x401125>, <DisassemblerInsn "mov" for 0x401127>, <DisassemblerInsn "mov" for 0x40112b>, <DisassemblerInsn "cmp" for 0x40112f>, <DisassemblerInsn "jle" for 0x401133>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40081c>, <DisassemblerInsn "mov" for 0x400821>, <DisassemblerInsn "cmp" for 0x400828>, <DisassemblerInsn "je" for 0x40082e>]'}, {'block_Idx': 30, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40093e>, <DisassemblerInsn "mov" for 0x400943>, <DisassemblerInsn "mov" for 0x400949>, <DisassemblerInsn "mov" for 0x40094e>, <DisassemblerInsn "add" for 0x400954>, <DisassemblerInsn "cmp" for 0x400958>, <DisassemblerInsn "jae" for 0x40095a>]'}, {'block_Idx': 96, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b6f>, <DisassemblerInsn "cdq" for 0x400b74>, <DisassemblerInsn "idiv" for 0x400b75>, <DisassemblerInsn "mov" for 0x400b77>, <DisassemblerInsn "add" for 0x400b79>, <DisassemblerInsn "xor" for 0x400b7c>, <DisassemblerInsn "cmp" for 0x400b7e>, <DisassemblerInsn "mov" for 0x400b82>, <DisassemblerInsn "jge" for 0x400b86>]'}, {'block_Idx': 182, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fc3>, <DisassemblerInsn "mov" for 0x400fcb>, <DisassemblerInsn "mov" for 0x400fcf>, <DisassemblerInsn "cmp" for 0x400fd4>, <DisassemblerInsn "jge" for 0x400fd7>]'}, {'block_Idx': 170, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400fa2>]'}, {'block_Idx': 207, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e06>, <DisassemblerInsn "mov" for 0x400e0a>, <DisassemblerInsn "mov" for 0x400e0f>, <DisassemblerInsn "shl" for 0x400e12>, <DisassemblerInsn "mov" for 0x400e14>, <DisassemblerInsn "mov" for 0x400e17>, <DisassemblerInsn "mov" for 0x400e1c>, <DisassemblerInsn "add" for 0x400e1f>, <DisassemblerInsn "mov" for 0x400e23>, <DisassemblerInsn "mov" for 0x400e28>, <DisassemblerInsn "mov" for 0x400e2b>, <DisassemblerInsn "sub" for 0x400e2f>, <DisassemblerInsn "mov" for 0x400e33>, <DisassemblerInsn "mov" for 0x400e38>, <DisassemblerInsn "shl" for 0x400e3b>, <DisassemblerInsn "mov" for 0x400e3d>, <DisassemblerInsn "mov" for 0x400e40>, <DisassemblerInsn "mov" for 0x400e45>, <DisassemblerInsn "add" for 0x400e48>, <DisassemblerInsn "mov" for 0x400e4c>, <DisassemblerInsn "mov" for 0x400e51>, <DisassemblerInsn "jmp" for 0x400e54>]'}, {'block_Idx': 200, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d2a>, <DisassemblerInsn "add" for 0x400d2e>, <DisassemblerInsn "mov" for 0x400d31>, <DisassemblerInsn "jmp" for 0x400d35>]'}, {'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "sub" for 0x400700>, <DisassemblerInsn "mov" for 0x400707>, <DisassemblerInsn "mov" for 0x40070f>, <DisassemblerInsn "mov" for 0x400717>, <DisassemblerInsn "mov" for 0x40071f>, <DisassemblerInsn "mov" for 0x400727>, <DisassemblerInsn "mov" for 0x40072c>, <DisassemblerInsn "mov" for 0x400734>, <DisassemblerInsn "mov" for 0x40073b>, <DisassemblerInsn "mov" for 0x400740>, <DisassemblerInsn "mov" for 0x400748>, <DisassemblerInsn "mov" for 0x400750>, <DisassemblerInsn "mov" for 0x400758>, <DisassemblerInsn "mov" for 0x400760>, <DisassemblerInsn "mov" for 0x400768>, <DisassemblerInsn "mov" for 0x40076d>, <DisassemblerInsn "mov" for 0x400775>, <DisassemblerInsn "mov" for 0x40077a>, <DisassemblerInsn "mov" for 0x400782>, <DisassemblerInsn "mov" for 0x400784>, <DisassemblerInsn "mov" for 0x400788>, <DisassemblerInsn "mov" for 0x400790>, <DisassemblerInsn "mov" for 0x400796>, <DisassemblerInsn "cmp" for 0x40079b>, <DisassemblerInsn "jne" for 0x40079f>]'}, {'block_Idx': 225, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d73>, <DisassemblerInsn "mov" for 0x400d77>, <DisassemblerInsn "cmp" for 0x400d7c>, <DisassemblerInsn "jge" for 0x400d7f>]'}, {'block_Idx': 543, 'blockInsts': '[<DisassemblerInsn "xor" for 0x401568>, <DisassemblerInsn "add" for 0x40156a>, <DisassemblerInsn "ret" for 0x40156e>]'}, {'block_Idx': 126, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011c8>, <DisassemblerInsn "mov" for 0x4011cc>, <DisassemblerInsn "mov" for 0x4011d3>, <DisassemblerInsn "add" for 0x4011da>, <DisassemblerInsn "ret" for 0x4011e1>]'}, {'block_Idx': 218, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e56>, <DisassemblerInsn "add" for 0x400e5a>, <DisassemblerInsn "mov" for 0x400e5d>, <DisassemblerInsn "jmp" for 0x400e61>]'}, {'block_Idx': 217, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400f80>]'}, {'block_Idx': 211, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c6f>, <DisassemblerInsn "mov" for 0x400c73>, <DisassemblerInsn "cmp" for 0x400c78>, <DisassemblerInsn "jge" for 0x400c7b>]'}, {'block_Idx': 151, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c3d>, <DisassemblerInsn "mov" for 0x400c42>, <DisassemblerInsn "mov" for 0x400c45>, <DisassemblerInsn "sub" for 0x400c49>, <DisassemblerInsn "ja" for 0x400c4d>]'}, {'block_Idx': 24, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40092e>, <DisassemblerInsn "jmp" for 0x400939>]'}, {'block_Idx': 84, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b48>, <DisassemblerInsn "mov" for 0x400b4d>, <DisassemblerInsn "xor" for 0x400b51>, <DisassemblerInsn "lea" for 0x400b53>, <DisassemblerInsn "mov" for 0x400b5a>, <DisassemblerInsn "call" for 0x400b5c>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008ea>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f2>, <DisassemblerInsn "mov" for 0x4008f7>, <DisassemblerInsn "add" for 0x4008fd>, <DisassemblerInsn "cmp" for 0x400901>, <DisassemblerInsn "jb" for 0x400905>]'}, {'block_Idx': 81, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b30>, <DisassemblerInsn "mov" for 0x400b34>, <DisassemblerInsn "and" for 0x400b38>, <DisassemblerInsn "cmp" for 0x400b3d>, <DisassemblerInsn "je" for 0x400b42>]'}], 'cfg_block_detailed_info': [{'block_Idx': 216, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400e9f>']}, {'block_Idx': 105, 'blockInsts': ['<jmp~~0x400bcb>']}, {'block_Idx': 208, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x40]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<mov~~eax, dword ptr [rsp + 0x40]>', '<sub~~eax, dword ptr [rsp + 0x3c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x400e54>']}, {'block_Idx': 206, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x38]>', '<add~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<mov~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x400f80>']}, {'block_Idx': 223, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x4010d6>']}, {'block_Idx': 526, 'blockInsts': ['<jmp~~0x40110e>']}, {'block_Idx': 188, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x400cde>']}, {'block_Idx': 224, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400f92>']}, {'block_Idx': 575, 'blockInsts': ['<mov~~qword ptr [rsp - 0x10], rdi>', '<mov~~dword ptr [rsp - 0x14], esi>', '<mov~~rax, qword ptr [rsp - 0x10]>', '<mov~~eax, dword ptr [rax + 0x10]>', '<mov~~dword ptr [rsp - 0x18], eax>', '<mov~~dword ptr [rsp - 0x1c], 0>', '<mov~~rax, qword ptr [rsp - 0x10]>', '<mov~~rax, qword ptr [rax]>', '<mov~~ecx, dword ptr [rsp - 0x18]>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<mov~~dword ptr [rsp - 4], eax>', '<mov~~eax, dword ptr [rsp - 4]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp - 4], eax>', '<mov~~eax, dword ptr [rsp - 4]>', '<mov~~ecx, dword ptr [rsp - 0x18]>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~dword ptr [rsp - 0x1c], eax>', '<mov~~eax, dword ptr [rsp - 0x14]>', '<add~~eax, dword ptr [rsp - 0x18]>', '<mov~~dword ptr [rsp - 0x18], eax>', '<mov~~ecx, dword ptr [rsp - 0x18]>', '<mov~~rax, qword ptr [rsp - 0x10]>', '<mov~~dword ptr [rax + 0x10], ecx>', '<ret~~>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xa0], 4>', '<jb~~0x400834>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xa8]>', '<jbe~~0x400a05>']}, {'block_Idx': 214, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400fcb>']}, {'block_Idx': 83, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x400360>']}, {'block_Idx': 127, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5c]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<add~~ecx, dword ptr [rax + 0xa4]>', '<mov~~dword ptr [rax + 0xa4], ecx>', '<mov~~edx, dword ptr [rsp + 0x5c]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rax + 0xa0]>', '<sub~~ecx, edx>', '<mov~~dword ptr [rax + 0xa0], ecx>', '<mov~~eax, dword ptr [rsp + 0x60]>', '<mov~~dword ptr [rsp + 0xa4], eax>', '<jmp~~0x4011d3>']}, {'block_Idx': 62, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x60]>', '<mov~~dword ptr [rsp + 0xa4], eax>', '<jmp~~0x4011d3>']}, {'block_Idx': 35, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rsi, qword ptr [rsp + 0x70]>', '<add~~rsi, 0xa8>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~edx, dword ptr [rax + 0xa0]>', '<add~~edx, dword ptr [rsp + 0x7c]>', '<call~~0x500010>']}, {'block_Idx': 106, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 8>', '<call~~0x400360>']}, {'block_Idx': 150, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x231e]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 155, 'blockInsts': ['<mov~~rax, qword ptr [rsp]>', '<lea~~rcx, [rip + 0x2092]>', '<movsxd~~rax, dword ptr [rcx + rax*4]>', '<add~~rax, rcx>', '<jmp~~rax>']}, {'block_Idx': 69, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x401570>']}, {'block_Idx': 204, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x2c]>', '<sar~~ecx, 1>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x30], eax>', '<add~~eax, dword ptr [rsp + 0x2c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x4010c4>']}, {'block_Idx': 33, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x10]>', '<mov~~dword ptr [rsp + 0x7c], eax>', '<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x60], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jb~~0x40092e>']}, {'block_Idx': 160, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011d3>']}, {'block_Idx': 65, 'blockInsts': ['<cmp~~eax, 0x664c6143>', '<jne~~0x400b1d>']}, {'block_Idx': 71, 'blockInsts': ['<mov~~dword ptr [rsp + 0x34], eax>', '<mov~~eax, dword ptr [rsp + 0x34]>', '<add~~rsp, 0x38>', '<ret~~>']}, {'block_Idx': 156, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rax + 0x40]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<imul~~ecx, dword ptr [rax + 0xc]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~esi, dword ptr [rax + 0x4c]>', '<mov~~eax, 2>', '<mov~~edx, 4>', '<cmp~~esi, 0>', '<cmovne~~eax, edx>', '<imul~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x88]>', '<mov~~dword ptr [rax], ecx>', '<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<call~~0x4015f0>']}, {'block_Idx': 104, 'blockInsts': ['<sub~~rsp, 0x28>', '<mov~~qword ptr [rsp + 0x18], rdi>', '<mov~~dword ptr [rsp + 0x14], esi>', '<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~eax, dword ptr [rax + 0x10]>', '<mov~~dword ptr [rsp + 0xc], eax>', '<mov~~dword ptr [rsp + 8], 0>', '<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~rax, qword ptr [rax]>', '<mov~~ecx, dword ptr [rsp + 0xc]>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<mov~~dword ptr [rsp + 0x24], eax>', '<mov~~eax, dword ptr [rsp + 0x24]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x24], eax>', '<mov~~eax, dword ptr [rsp + 0x24]>', '<mov~~ecx, dword ptr [rsp + 0xc]>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~dword ptr [rsp + 8], eax>', '<mov~~edi, dword ptr [rsp + 8]>', '<mov~~eax, dword ptr [rsp + 0x14]>', '<movsx~~esi, al>', '<call~~0x401230>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x64]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~ecx, eax>', '<mov~~rax, qword ptr [rsp + 0x48]>', '<mov~~rdx, rax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~dword ptr [rax], ecx>', '<jmp~~0x400d16>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~dword ptr [rsp + 0x64], 0>', '<mov~~eax, dword ptr [rsp + 0x64]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400d3a>']}, {'block_Idx': 115, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<call~~0x4015f0>']}, {'block_Idx': 553, 'blockInsts': ['<mov~~qword ptr [rsp - 8], rdi>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~eax, dword ptr [rax + 0x10]>', '<ret~~>']}, {'block_Idx': 176, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xc]>', '<jge~~0x400d28>']}, {'block_Idx': 52, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<mov~~eax, eax>', '<add~~rdi, rax>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<movsxd~~rdx, dword ptr [rsp + 0x7c]>', '<call~~0x500020>']}, {'block_Idx': 145, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x54]>', '<add~~rsp, 0x58>', '<ret~~>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 4]>', '<mov~~dword ptr [rsp + 0x1c], eax>', '<jmp~~0x40087a>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x98]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0xa4]>', '<add~~rax, rcx>', '<mov~~qword ptr [rsp + 0x80], rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x7c], eax>', '<mov~~ecx, dword ptr [rsp + 0x7c]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa0], ecx>', '<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 4]>', '<jge~~0x400aa7>']}, {'block_Idx': 41, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rsi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<add~~rsi, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~edx, eax>', '<call~~0x500018>']}, {'block_Idx': 174, 'blockInsts': ['<jmp~~0x400d6b>']}, {'block_Idx': 68, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<call~~0x4013f0>']}, {'block_Idx': 124, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<mov~~ecx, dword ptr [rsp + 0x5c]>', '<sub~~ecx, dword ptr [rsp + 0x7c]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x1e4c]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x38]>', '<add~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<mov~~eax, dword ptr [rsp + 0x34]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x400f82>']}, {'block_Idx': 26, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x28], rdi>', '<mov~~dword ptr [rsp + 0x24], esi>', '<cmp~~dword ptr [rsp + 0x24], 0x11>', '<jg~~0x4013a8>']}, {'block_Idx': 163, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x400d4c>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x10], eax>', '<mov~~eax, dword ptr [rsp + 0x10]>', '<mov~~dword ptr [rsp + 0x7c], eax>', '<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x60], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jb~~0x40092e>']}, {'block_Idx': 203, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x2c]>', '<sar~~ecx, 1>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x30], eax>', '<add~~eax, dword ptr [rsp + 0x2c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<mov~~eax, dword ptr [rsp + 0x30]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x4010c6>']}, {'block_Idx': 177, 'blockInsts': ['<jmp~~0x4010d8>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x20], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 4]>', '<mov~~dword ptr [rsp + 0x24], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 4]>', '<jbe~~0x40086b>']}, {'block_Idx': 1, 'blockInsts': ['<mov~~eax, 4>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jle~~0x4007b7>']}, {'block_Idx': 175, 'blockInsts': ['<lea~~rdi, [rip + 0x21ea]>', '<lea~~rsi, [rip + 0x216b]>', '<mov~~edx, 0x2b5>', '<lea~~rcx, [rip + 0x21e8]>', '<call~~0x500028>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~eax, 4>', '<mov~~dword ptr [rsp + 0x28], eax>', '<jmp~~0x4007bf>']}, {'block_Idx': 525, 'blockInsts': ['<cmp~~eax, 0>', '<je~~0x400b18>']}, {'block_Idx': 123, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xa0], 0>', '<je~~0x4011c8>']}, {'block_Idx': 561, 'blockInsts': ['<mov~~rcx, qword ptr [rsp - 0x10]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax], rcx>', '<mov~~ecx, dword ptr [rsp - 0x14]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x14], ecx>', '<mov~~rcx, qword ptr [rsp - 0x10]>', '<movsxd~~rax, dword ptr [rsp - 0x18]>', '<add~~rcx, rax>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax + 8], rcx>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x10], 0>', '<ret~~>']}, {'block_Idx': 89, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<mov~~esi, dword ptr [rsp + 0x44]>', '<call~~0x401600>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x40], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x60]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x3c], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x400e06>']}, {'block_Idx': 45, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xa8]>', '<jbe~~0x400a05>']}, {'block_Idx': 92, 'blockInsts': ['<sub~~rsp, 0x58>', '<mov~~qword ptr [rsp + 0x48], rdi>', '<mov~~dword ptr [rsp + 0x44], esi>', '<mov~~rdi, qword ptr [rsp + 0x48]>', '<add~~rdi, 0x28>', '<mov~~esi, 4>', '<call~~0x4003e0>']}, {'block_Idx': 192, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x30], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x60]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x2c], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x40106a>']}, {'block_Idx': 215, 'blockInsts': ['<jmp~~0x4010c6>']}, {'block_Idx': 197, 'blockInsts': ['<jmp~~0x4010d8>']}, {'block_Idx': 27, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x14], eax>', '<mov~~eax, dword ptr [rsp + 0x18]>', '<mov~~ecx, dword ptr [rsp + 0x14]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x10], eax>', '<jmp~~0x4008e2>']}, {'block_Idx': 195, 'blockInsts': ['<jmp~~0x4010d8>']}, {'block_Idx': 130, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011d3>']}, {'block_Idx': 19, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x20>', '<call~~0x401380>']}, {'block_Idx': 29, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0xa4]>', '<add~~rsp, 0xa8>', '<ret~~>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x1c], eax>', '<mov~~eax, dword ptr [rsp + 0x20]>', '<mov~~ecx, dword ptr [rsp + 0x24]>', '<mov~~edx, dword ptr [rsp + 0x1c]>', '<sub~~ecx, edx>', '<cmp~~eax, ecx>', '<jbe~~0x4008da>']}, {'block_Idx': 194, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x38], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x60]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x34], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0x4c], 0>', '<je~~0x400f32>']}, {'block_Idx': 61, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x34]>', '<add~~rsp, 0x38>', '<ret~~>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x28]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 4], ecx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rsi, qword ptr [rsp + 0x70]>', '<add~~rsi, 0xa8>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~edx, dword ptr [rax + 4]>', '<call~~0x500010>']}, {'block_Idx': 171, 'blockInsts': ['<lea~~rdi, [rip + 0x1f92]>', '<lea~~rsi, [rip + 0x1f13]>', '<mov~~edx, 0x2b9>', '<lea~~rcx, [rip + 0x1f90]>', '<call~~0x500028>']}, {'block_Idx': 162, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x400e78>']}, {'block_Idx': 72, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x30], rdi>', '<mov~~rdi, qword ptr [rsp + 0x30]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x20>', '<call~~0x400500>']}, {'block_Idx': 118, 'blockInsts': ['<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<setne~~al>', '<mov~~byte ptr [rsp + 0xf], al>', '<mov~~al, byte ptr [rsp + 0xf]>', '<test~~al, 1>', '<jne~~0x400bb6>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}, {'block_Idx': 529, 'blockInsts': ['<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011d3>']}, {'block_Idx': 99, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~esi, 0x10>', '<call~~0x401570>']}, {'block_Idx': 341, 'blockInsts': ['<mov~~dword ptr [rsp + 0x54], 0>', '<mov~~eax, dword ptr [rsp + 0x54]>', '<add~~rsp, 0x58>', '<ret~~>']}, {'block_Idx': 161, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x400fa4>']}, {'block_Idx': 189, 'blockInsts': ['<jmp~~0x400d2a>']}, {'block_Idx': 90, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<call~~0x4015f0>']}, {'block_Idx': 193, 'blockInsts': ['<jmp~~0x4010d8>']}, {'block_Idx': 173, 'blockInsts': ['<lea~~rdi, [rip + 0x20be]>', '<lea~~rsi, [rip + 0x203f]>', '<mov~~edx, 0x2b7>', '<lea~~rcx, [rip + 0x20bc]>', '<call~~0x500028>']}, {'block_Idx': 116, 'blockInsts': ['<jmp~~0x400b61>']}, {'block_Idx': 186, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400e66>']}, {'block_Idx': 56, 'blockInsts': ['<cmp~~dword ptr [rsp + 0x60], 0>', '<je~~0x400aa7>']}, {'block_Idx': 148, 'blockInsts': ['<cmp~~eax, 0>', '<jge~~0x400c3d>']}, {'block_Idx': 560, 'blockInsts': ['<mov~~dword ptr [rsp - 0x14], 0>', '<mov~~dword ptr [rsp - 0x18], 0>', '<mov~~qword ptr [rsp - 0x10], 0>', '<mov~~rcx, qword ptr [rsp - 0x10]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax], rcx>', '<mov~~ecx, dword ptr [rsp - 0x14]>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x14], ecx>', '<mov~~rcx, qword ptr [rsp - 0x10]>', '<movsxd~~rax, dword ptr [rsp - 0x18]>', '<add~~rcx, rax>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~qword ptr [rax + 8], rcx>', '<mov~~rax, qword ptr [rsp - 8]>', '<mov~~dword ptr [rax + 0x10], 0>', '<ret~~>']}, {'block_Idx': 210, 'blockInsts': ['<jmp~~0x400d18>']}, {'block_Idx': 57, 'blockInsts': ['<jmp~~0x400aa9>']}, {'block_Idx': 40, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<mov~~eax, eax>', '<add~~rdi, rax>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<movsxd~~rdx, dword ptr [rsp + 0x7c]>', '<call~~0x500020>']}, {'block_Idx': 3, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x28], eax>', '<mov~~ecx, dword ptr [rsp + 0x28]>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~dword ptr [rax + 4], ecx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<mov~~rsi, qword ptr [rsp + 0x70]>', '<add~~rsi, 0xa8>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~edx, dword ptr [rax + 4]>', '<call~~0x500010>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x20]>', '<mov~~ecx, dword ptr [rsp + 0x24]>', '<mov~~edx, dword ptr [rsp + 0x1c]>', '<sub~~ecx, edx>', '<cmp~~eax, ecx>', '<jbe~~0x4008da>']}, {'block_Idx': 220, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xc]>', '<jge~~0x400d28>']}, {'block_Idx': 558, 'blockInsts': ['<mov~~qword ptr [rsp - 8], rdi>', '<mov~~qword ptr [rsp - 0x10], rsi>', '<mov~~dword ptr [rsp - 0x14], edx>', '<mov~~eax, dword ptr [rsp - 0x14]>', '<add~~eax, 7>', '<sar~~eax, 3>', '<mov~~dword ptr [rsp - 0x18], eax>', '<cmp~~dword ptr [rsp - 0x18], 0>', '<jl~~0x40030a>']}, {'block_Idx': 209, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400c89>']}, {'block_Idx': 34, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x18]>', '<mov~~ecx, dword ptr [rsp + 0x14]>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x10], eax>', '<jmp~~0x4008e2>']}, {'block_Idx': 25, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<add~~eax, dword ptr [rcx + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0xa4]>', '<jae~~0x40093e>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x70]>', '<add~~rdi, 0x28>', '<mov~~rsi, qword ptr [rsp + 0x80]>', '<mov~~edx, dword ptr [rsp + 0x7c]>', '<shl~~edx, 3>', '<call~~0x4002e0>']}, {'block_Idx': 527, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x23fe]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 111, 'blockInsts': ['<jmp~~0x40110e>']}, {'block_Idx': 172, 'blockInsts': ['<jmp~~0x400e97>']}, {'block_Idx': 184, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400f92>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 4]>', '<mov~~dword ptr [rsp + 0x18], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 4]>', '<jbe~~0x4008bb>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<movsxd~~rcx, dword ptr [rsp + 0x68]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<movsxd~~rcx, dword ptr [rsp + 0x64]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x400d18>']}, {'block_Idx': 219, 'blockInsts': ['<jmp~~0x400e56>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<je~~0x400aa9>']}, {'block_Idx': 114, 'blockInsts': ['<mov~~dword ptr [rsp + 0x10], eax>', '<mov~~eax, dword ptr [rsp + 0x10]>', '<add~~rsp, 0x28>', '<ret~~>']}, {'block_Idx': 100, 'blockInsts': ['<mov~~al, byte ptr [rsp + 0xf]>', '<test~~al, 1>', '<jne~~0x400bb6>']}, {'block_Idx': 121, 'blockInsts': ['<add~~eax, 7>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~dword ptr [rsp + 0x5c], eax>', '<mov~~eax, dword ptr [rsp + 0x5c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jle~~0x401181>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rax, qword ptr [rax + 0x98]>', '<cmp~~dword ptr [rax], 0x43614c66>', '<je~~0x4008ea>']}, {'block_Idx': 30, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa8]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0xa0]>', '<add~~ecx, dword ptr [rsp + 0x7c]>', '<cmp~~eax, ecx>', '<jae~~0x400997>']}, {'block_Idx': 96, 'blockInsts': ['<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~ecx, eax>', '<add~~ecx, 2>', '<xor~~eax, eax>', '<cmp~~ecx, dword ptr [rsp + 0x7c]>', '<mov~~byte ptr [rsp + 0xf], al>', '<jge~~0x400bac>']}, {'block_Idx': 182, 'blockInsts': ['<mov~~dword ptr [rsp + 0x68], 0>', '<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x4010d6>']}, {'block_Idx': 170, 'blockInsts': ['<jmp~~0x400fc3>']}, {'block_Idx': 207, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x40]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<mov~~eax, dword ptr [rsp + 0x40]>', '<sub~~eax, dword ptr [rsp + 0x3c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx + 0x48]>', '<shl~~eax, cl>', '<mov~~cx, ax>', '<mov~~rax, qword ptr [rsp + 0x50]>', '<mov~~rdx, rax>', '<add~~rdx, 2>', '<mov~~qword ptr [rsp + 0x50], rdx>', '<mov~~word ptr [rax], cx>', '<jmp~~0x400e56>']}, {'block_Idx': 200, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x64]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x64], eax>', '<jmp~~0x400c6f>']}, {'block_Idx': 0, 'blockInsts': ['<sub~~rsp, 0xa8>', '<mov~~qword ptr [rsp + 0x98], rdi>', '<mov~~qword ptr [rsp + 0x90], rsi>', '<mov~~qword ptr [rsp + 0x88], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~dword ptr [rsp + 0x7c], r8d>', '<mov~~rax, qword ptr [rsp + 0x98]>', '<mov~~rax, qword ptr [rax + 0xa0]>', '<mov~~qword ptr [rsp + 0x70], rax>', '<mov~~dword ptr [rsp + 0x6c], 0>', '<mov~~dword ptr [rsp + 0x64], 0>', '<mov~~dword ptr [rsp + 0x60], 0>', '<mov~~dword ptr [rsp + 0x5c], 0>', '<mov~~rax, qword ptr [rsp + 0x90]>', '<mov~~qword ptr [rsp + 0x50], rax>', '<mov~~rax, qword ptr [rsp + 0x90]>', '<mov~~qword ptr [rsp + 0x48], rax>', '<mov~~rax, qword ptr [rsp + 0x88]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x44], eax>', '<mov~~rax, qword ptr [rsp + 0x88]>', '<mov~~dword ptr [rax], 0>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<cmp~~dword ptr [rax + 4], 0>', '<jne~~0x4007ff>']}, {'block_Idx': 225, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400e66>']}, {'block_Idx': 543, 'blockInsts': ['<xor~~eax, eax>', '<add~~rsp, 0x38>', '<ret~~>']}, {'block_Idx': 126, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5c]>', '<mov~~dword ptr [rsp + 0xa4], eax>', '<mov~~eax, dword ptr [rsp + 0xa4]>', '<add~~rsp, 0xa8>', '<ret~~>']}, {'block_Idx': 218, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68]>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x68], eax>', '<jmp~~0x400d73>']}, {'block_Idx': 217, 'blockInsts': ['<jmp~~0x400f82>']}, {'block_Idx': 211, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x64]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<cmp~~eax, dword ptr [rcx + 0x40]>', '<jge~~0x400d3a>']}, {'block_Idx': 151, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0x50]>', '<mov~~qword ptr [rsp], rax>', '<sub~~rax, 3>', '<ja~~0x4010d8>']}, {'block_Idx': 24, 'blockInsts': ['<mov~~dword ptr [rsp + 0xa4], 0xffffffff>', '<jmp~~0x4011d3>']}, {'block_Idx': 84, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x23b5]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 18, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7c]>', '<mov~~dword ptr [rsp + 0x60], eax>', '<mov~~rax, qword ptr [rsp + 0x70]>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<add~~eax, dword ptr [rsp + 0x7c]>', '<cmp~~eax, dword ptr [rsp + 0x7c]>', '<jb~~0x40092e>']}, {'block_Idx': 81, 'blockInsts': ['<mov~~dword ptr [rsp + 0x6c], eax>', '<mov~~eax, dword ptr [rsp + 0x6c]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400bd0>']}], 'cfg_edge_info': [(206, 217), (543, 525), (194, 206), (224, 195), (99, 118), (207, 218), (5, 19), (177, 156), (114, 118), (148, 150), (115, 553), (69, 104), (6, 11), (151, 155), (214, 223), (114, 81), (16, 22), (52, 51), (118, 106), (188, 198), (164, 176), (5, 558), (17, 23), (208, 219), (106, 116), (204, 215), (96, 99), (192, 204), (105, 111), (99, 104), (553, 121), (162, 172), (68, 525), (51, 57), (182, 193), (210, 209), (69, 81), (529, 29), (83, 89), (100, 105), (115, 121), (33, 24), (36, 41), (197, 156), (56, 62), (560, 19), (21, 25), (23, 22), (0, 2), (526, 115), (106, 575), (211, 176), (156, 121), (220, 188), (1, 3), (68, 72), (155, 162), (123, 127), (71, 65), (172, 184), (189, 200), (30, 36), (184, 195), (81, 84), (225, 196), (90, 96), (12, 6), (163, 175), (3, 12), (121, 123), (160, 29), (525, 527), (155, 164), (186, 197), (10, 17), (156, 553), (27, 33), (561, 19), (116, 90), (90, 553), (196, 208), (25, 24), (16, 21), (56, 57), (118, 105), (209, 220), (193, 156), (61, 65), (527, 529), (40, 51), (176, 189), (161, 170), (2, 6), (45, 41), (170, 182), (215, 214), (11, 18), (195, 156), (51, 56), (188, 199), (84, 90), (182, 192), (223, 193), (89, 92), (36, 40), (341, 148), (198, 209), (145, 148), (162, 173), (575, 89), (194, 205), (18, 25), (21, 24), (23, 21), (4, 8), (217, 216), (224, 194), (205, 216), (123, 126), (65, 69), (19, 26), (83, 575), (30, 35), (6, 10), (174, 186), (219, 218), (12, 5), (163, 174), (124, 130), (19, 65), (525, 526), (1, 4), (10, 16), (196, 207), (148, 151), (225, 197), (151, 156), (192, 203), (41, 52), (35, 45), (62, 29), (150, 160), (164, 177), (121, 124), (8, 12), (176, 188), (216, 224), (2, 5), (45, 40), (57, 5), (130, 29), (24, 29), (96, 100), (203, 214), (223, 192), (0, 1), (34, 33), (199, 210), (161, 171), (11, 10), (127, 29), (155, 161), (100, 106), (111, 115), (33, 25), (200, 211), (184, 194), (81, 83), (25, 30), (18, 24), (89, 148), (65, 68), (211, 177), (218, 225), (220, 189), (553, 96), (155, 163), (186, 196)], 'cdg_edge_info': [(194, 206), (56, 19), (163, 121), (0, 5), (162, 195), (155, 156), (148, 150), (6, 11), (220, 209), (33, 29), (123, 29), (151, 155), (118, 106), (186, 225), (81, 96), (184, 216), (81, 105), (164, 176), (188, 198), (1, 8), (118, 90), (155, 121), (96, 99), (192, 204), (220, 220), (186, 218), (56, 5), (81, 89), (16, 33), (162, 172), (525, 29), (100, 96), (36, 41), (33, 24), (161, 182), (162, 156), (25, 29), (56, 62), (21, 25), (0, 2), (211, 176), (220, 188), (121, 130), (123, 127), (1, 3), (223, 214), (81, 121), (155, 162), (223, 223), (30, 36), (36, 52), (161, 193), (81, 84), (225, 196), (30, 45), (81, 148), (12, 6), (163, 175), (162, 121), (23, 33), (121, 123), (525, 527), (155, 164), (65, 81), (224, 224), (118, 96), (25, 24), (16, 21), (56, 57), (196, 208), (21, 29), (225, 225), (163, 186), (161, 170), (525, 529), (2, 6), (45, 41), (11, 18), (12, 65), (51, 56), (188, 199), (12, 19), (225, 218), (182, 192), (25, 65), (25, 19), (45, 52), (176, 209), (121, 29), (162, 173), (194, 205), (18, 25), (21, 24), (23, 21), (224, 194), (161, 156), (81, 111), (123, 126), (65, 69), (10, 23), (164, 200), (525, 115), (30, 35), (163, 156), (6, 10), (12, 5), (163, 174), (25, 51), (56, 29), (184, 224), (525, 526), (1, 4), (25, 5), (10, 16), (161, 121), (196, 207), (148, 151), (164, 211), (148, 160), (151, 156), (56, 65), (192, 203), (18, 29), (121, 124), (81, 115), (176, 188), (224, 216), (163, 197), (211, 200), (155, 177), (96, 100), (81, 90), (151, 121), (223, 192), (96, 118), (0, 1), (0, 65), (161, 171), (11, 10), (182, 214), (0, 19), (155, 161), (100, 106), (525, 121), (33, 25), (211, 211), (184, 194), (81, 83), (25, 30), (18, 24), (176, 220), (162, 184), (25, 57), (100, 90), (65, 68), (0, 12), (148, 29), (155, 163), (186, 196), (182, 223)], 'ddg_edge_info': [(12, 123), (81, 204), (205, 127), (0, 5), (68, 130), (0, 23), (151, 155), (151, 164), (52, 51), (151, 173), (33, 56), (184, 216), (83, 124), (25, 52), (19, 130), (0, 126), (83, 151), (83, 160), (176, 199), (69, 225), (12, 127), (81, 199), (81, 208), (151, 123), (6, 52), (69, 90), (69, 99), (208, 123), (69, 211), (69, 220), (81, 194), (81, 203), (207, 208), (203, 156), (12, 198), (52, 5), (151, 127), (12, 207), (12, 225), (19, 84), (203, 192), (0, 89), (208, 127), (83, 123), (68, 223), (52, 126), (12, 90), (84, 106), (69, 206), (12, 99), (176, 198), (84, 124), (69, 224), (81, 198), (81, 207), (19, 223), (68, 106), (6, 33), (12, 211), (68, 124), (121, 127), (6, 51), (69, 89), (12, 220), (205, 206), (205, 224), (19, 106), (151, 225), (194, 205), (35, 41), (83, 127), (69, 192), (214, 192), (164, 200), (0, 205), (198, 211), (68, 83), (6, 10), (12, 188), (12, 206), (69, 84), (527, 126), (19, 83), (68, 204), (151, 220), (35, 45), (84, 96), (69, 196), (81, 161), (69, 205), (216, 224), (198, 188), (19, 204), (81, 188), (68, 69), (203, 123), (0, 200), (83, 225), (12, 192), (8, 51), (204, 124), (0, 56), (19, 69), (83, 90), (151, 206), (83, 99), (68, 199), (68, 208), (151, 224), (198, 156), (81, 156), (19, 199), (164, 199), (12, 160), (19, 208), (83, 211), (186, 196), (203, 127), (209, 198), (83, 220), (12, 196), (11, 51), (0, 51), (12, 25), (68, 194), (12, 52), (68, 203), (81, 151), (207, 156), (19, 194), (19, 203), (83, 206), (0, 199), (83, 224), (186, 218), (8, 41), (204, 123), (19, 68), (151, 196), (83, 89), (151, 205), (68, 198), (69, 163), (151, 214), (68, 207), (151, 223), (207, 124), (19, 162), (124, 126), (81, 155), (208, 196), (83, 192), (12, 150), (19, 198), (0, 203), (30, 45), (8, 45), (0, 41), (12, 6), (11, 41), (12, 24), (151, 182), (206, 127), (12, 33), (83, 84), (198, 123), (151, 200), (204, 203), (151, 209), (196, 208), (151, 218), (199, 124), (81, 150), (127, 126), (83, 196), (83, 205), (12, 163), (0, 45), (12, 10), (68, 161), (12, 19), (33, 51), (182, 192), (151, 186), (68, 188), (198, 127), (151, 204), (69, 162), (45, 52), (207, 123), (19, 161), (84, 156), (118, 121), (96, 121), (0, 4), (8, 35), (12, 5), (151, 163), (68, 156), (69, 130), (12, 23), (25, 51), (184, 224), (196, 207), (83, 150), (19, 156), (216, 194), (199, 123), (12, 126), (81, 225), (8, 12), (0, 8), (8, 21), (8, 30), (0, 35), (11, 35), (68, 151), (68, 160), (151, 176), (203, 223), (19, 124), (45, 51), (19, 151), (19, 160), (83, 163), (206, 224), (12, 130), (176, 220), (198, 220), (81, 211), (160, 126), (81, 220), (0, 3), (8, 16), (0, 12), (207, 225), (218, 225), (0, 21), (12, 224), (204, 156), (151, 162), (151, 171), (33, 45), (25, 41), (204, 192), (0, 124), (12, 89), (156, 124), (84, 123), (69, 223), (214, 223), (118, 106), (81, 206), (199, 198), (81, 224), (96, 124), (8, 11), (6, 41), (151, 130), (68, 123), (121, 126), (0, 16), (200, 199), (69, 106), (203, 204), (192, 204), (69, 124), (25, 45), (3, 8), (19, 123), (12, 84), (206, 205), (83, 162), (84, 127), (81, 192), (205, 124), (199, 211), (12, 205), (6, 45), (69, 83), (68, 127), (12, 223), (33, 35), (81, 84), (19, 127), (83, 130), (0, 123), (69, 204), (12, 106), (118, 96), (81, 196), (81, 205), (199, 188), (209, 220), (527, 529), (33, 30), (84, 90), (68, 225), (12, 83), (84, 99), (69, 199), (69, 208), (199, 156), (164, 198), (19, 207), (176, 209), (19, 225), (68, 90), (218, 196), (68, 99), (6, 35), (151, 124), (204, 127), (12, 204), (21, 33), (10, 23), (19, 90), (12, 51), (19, 99), (208, 124), (68, 211), (12, 69), (68, 220), (124, 130), (69, 194), (35, 52), (69, 203), (0, 198), (19, 211), (164, 211), (0, 207), (19, 220), (83, 223), (6, 30), (69, 68), (12, 199), (12, 208), (121, 124), (150, 160), (205, 194), (83, 106), (68, 206), (68, 224), (69, 198), (81, 163), (69, 207), (206, 194), (19, 188), (198, 199), (19, 206), (0, 211), (19, 224), (6, 16), (68, 89), (6, 25), (12, 194), (12, 203), (51, 5), (12, 41), (19, 89), (151, 199), (182, 214), (68, 192), (151, 208), (182, 223), (12, 68), (207, 127), (194, 206), (33, 127), (19, 192), (83, 204), (12, 162), (68, 84), (186, 225), (83, 69), (0, 62), (151, 194), (12, 45), (151, 203), (68, 196), (69, 161), (68, 205), (69, 188), (199, 127), (81, 162), (51, 121), (19, 196), (83, 199), (19, 205), (83, 208), (203, 124), (8, 25), (118, 156), (0, 30), (8, 52), (151, 198), (69, 156), (151, 207), (151, 216), (62, 126), (208, 207), (83, 194), (130, 126), (83, 203), (208, 225), (12, 161), (24, 126), (209, 199), (205, 156), (0, 25), (68, 150), (11, 52), (0, 52), (151, 175), (83, 68), (52, 62), (151, 184), (12, 35), (69, 151), (69, 160), (45, 41), (151, 211), (206, 156), (19, 150), (204, 223), (16, 23), (83, 198), (8, 6), (12, 156), (83, 207), (0, 11), (8, 24), (199, 220), (150, 126), (8, 33), (151, 161), (4, 8), (68, 163), (12, 21), (206, 124), (12, 30), (151, 188), (33, 62), (156, 123), (19, 163), (12, 124), (51, 124), (12, 151), (81, 223), (8, 10), (0, 6), (0, 24), (200, 198), (0, 33), (151, 156), (192, 203), (529, 126), (12, 16), (69, 123), (41, 52), (151, 192), (198, 124), (69, 150), (208, 156), (0, 127), (156, 127), (83, 161), (207, 196), (83, 188), (96, 118), (205, 123), (8, 5), (0, 1), (0, 10), (8, 23), (0, 19), (33, 25), (200, 211), (184, 194), (12, 11), (81, 83), (68, 162), (69, 127), (52, 56), (33, 52), (206, 123), (8, 126), (83, 156), (51, 96), (84, 130)]}]}
{'flac_decode_frame': [{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 193, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 194, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 195, 'instruction': 'movq\t0x80(%rsp), %rsi'}, {'instIndex': 196, 'instruction': 'movl\t0x7c(%rsp), %edx'}, {'instIndex': 197, 'instruction': 'shll\t$3, %edx'}, {'instIndex': 198, 'instruction': 'callq\tinit_get_bits'}, {'instIndex': 199, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 200, 'instruction': 'addq\t$0x28, %rdi'}, {'instIndex': 201, 'instruction': 'movl\t$0x20, %esi'}, {'instIndex': 202, 'instruction': 'callq\tshow_bits_long'}, {'instIndex': 203, 'instruction': 'cmpl\t$0x664c6143, %eax               # imm = 0x0x298C0x17ff'}, {'instIndex': 204, 'instruction': 'jne\t.LBB10_33'}, {'instIndex': 205, 'instruction': 'movq\t0x70(%rsp), %rdi'}, {'instIndex': 206, 'instruction': 'callq\tmetadata_parse'}, {'instIndex': 207, 'instruction': 'cmpl\t$0, %eax'}, {'instIndex': 208, 'instruction': 'je\t.LBB10_32'}]}]}
The case of compiler clang with optimization O1.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O1/flacdec.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O1/flacdec.s---flac_decode_frame---before
function id: 4
function flag: True
There are 2164 instructions for function: flac_decode_frame in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '639', 'end': 649}, 'before': {'start': '639', 'end': 644}}}]
[{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 167, 'instruction': 'movl\t%edx, %esi'}, {'instIndex': 168, 'instruction': 'shll\t$3, %esi'}, {'instIndex': 205, 'instruction': ''}, {'instIndex': 206, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 256, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 257, 'instruction': ''}, {'instIndex': 258, 'instruction': 'movl\t%esi, 0x568(%rsp)                # 4-byte Spill'}, {'instIndex': 268, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 269, 'instruction': 'movl\t0x56c(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 270, 'instruction': 'shrl\t$0xf0, %esi'}, {'instIndex': 281, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 282, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 283, 'instruction': 'movq\t0x590(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 442, 'instruction': 'movl\t%esi, 0x52c(%rsp)                # 4-byte Spill'}, {'instIndex': 449, 'instruction': 'movl\t%edx, 0x530(%rsp)                # 4-byte Spill'}, {'instIndex': 491, 'instruction': 'movl\t0x50c(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 569, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 637, 'instruction': 'sarl\t$3, %edi'}, {'instIndex': 638, 'instruction': 'movslq\t%edi, %rdi'}, {'instIndex': 698, 'instruction': 'movl\t%edx, %ecx'}, {'instIndex': 699, 'instruction': 'sarl\t$3, %ecx'}, {'instIndex': 718, 'instruction': 'movl\t(%rcx), %edx'}, {'instIndex': 719, 'instruction': 'movl\t%edx, %ecx'}, {'instIndex': 801, 'instruction': 'movq\t0x520(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 802, 'instruction': 'movl\t(%rcx), %edx'}, {'instIndex': 821, 'instruction': 'movq\t0x510(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 822, 'instruction': 'movq\t0x520(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 840, 'instruction': 'jmp\t.LBB4_65'}, {'instIndex': 841, 'instruction': 'movq\t0x510(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 980, 'instruction': 'jmp\t.LBB4_136'}, {'instIndex': 981, 'instruction': 'movq\t0x510(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 982, 'instruction': 'movl\t0x43c(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1088, 'instruction': 'movl\t(%rcx), %ecx'}, {'instIndex': 1093, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1094, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1095, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1103, 'instruction': 'movl\t0x410(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1104, 'instruction': 'movl\t0x3ec(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1105, 'instruction': 'movl\t0x3f4(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1120, 'instruction': 'movl\t0x3f4(%rsp), %r9d                # 4-byte Reload'}, {'instIndex': 1125, 'instruction': 'movl\t%r8d, (%rdx)'}, {'instIndex': 1126, 'instruction': 'movl\t%edi, %ecx'}, {'instIndex': 1184, 'instruction': 'movq\t%rsi, 0x3a8(%rsp)                 # 8-byte Spill'}, {'instIndex': 1189, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1190, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1191, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1199, 'instruction': 'movl\t%edx, 0x3bc(%rsp)                 # 4-byte Spill'}, {'instIndex': 1200, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1201, 'instruction': 'jge\t.LBB4_91'}, {'instIndex': 1216, 'instruction': 'movl\t0x3b0(%rsp), %edi                 # 4-byte Reload'}, {'instIndex': 1221, 'instruction': ''}, {'instIndex': 1222, 'instruction': 'movl\t%esi, %r8d'}, {'instIndex': 1294, 'instruction': 'movq\t0x510(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 1299, 'instruction': 'movl\t%eax, 0x360(%rsp)                 # 4-byte Spill'}, {'instIndex': 1300, 'instruction': 'movl\t(%rcx), %ecx'}, {'instIndex': 1301, 'instruction': 'movl\t%ecx, 0x364(%rsp)                 # 4-byte Spill'}, {'instIndex': 1309, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1310, 'instruction': 'movl\t%ecx, 0x368(%rsp)                 # 4-byte Spill'}, {'instIndex': 1311, 'instruction': 'shll\t%cl, %edx'}, {'instIndex': 1326, 'instruction': 'movl\t%eax, 0x354(%rsp)                 # 4-byte Spill'}, {'instIndex': 1331, 'instruction': 'movq\t0x440(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1332, 'instruction': 'movl\t0x36c(%rsp), %r9d                 # 4-byte Reload'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O1/flacdec.o
Unpatched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O1/flacdec.o---before
The extraction of function: flac_decode_frame
Analyzing the binaries to generate subCFGs from patched function ...
It has 380 nodes and 662 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 2137 instructions in binary file.
[4196439, 4196627, 4196727, 4197566, 4197849, 4198230, 4198488, 4198767, 4198842, 4199223, 4199304, 4199376, 4200017, 4200548, 4200603, 4201019, 4201074, 4201550, 4201605]
The execution time of patched subCFG information extraction via angr: 0:00:04.287762
{'flac_decode_frame': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 63, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ffd>, <DisassemblerInsn "mov" for 0x401004>, <DisassemblerInsn "mov" for 0x40100b>, <DisassemblerInsn "mov" for 0x401010>, <DisassemblerInsn "shr" for 0x401012>, <DisassemblerInsn "mov" for 0x401014>, <DisassemblerInsn "and" for 0x401016>, <DisassemblerInsn "mov" for 0x401018>, <DisassemblerInsn "mov" for 0x40101a>, <DisassemblerInsn "mov" for 0x401022>, <DisassemblerInsn "mov" for 0x401029>, <DisassemblerInsn "mov" for 0x401031>, <DisassemblerInsn "mov" for 0x401038>, <DisassemblerInsn "mov" for 0x40103f>, <DisassemblerInsn "cmp" for 0x401047>, <DisassemblerInsn "mov" for 0x40104a>, <DisassemblerInsn "jle" for 0x401052>]'}, {'block_Idx': 77, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40113e>, <DisassemblerInsn "sub" for 0x401145>, <DisassemblerInsn "je" for 0x401148>]'}, {'block_Idx': 97, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401388>, <DisassemblerInsn "mov" for 0x401390>, <DisassemblerInsn "mov" for 0x401398>, <DisassemblerInsn "mov" for 0x40139a>, <DisassemblerInsn "sar" for 0x40139c>, <DisassemblerInsn "movsxd" for 0x40139f>, <DisassemblerInsn "mov" for 0x4013a2>, <DisassemblerInsn "ror" for 0x4013a5>, <DisassemblerInsn "ror" for 0x4013a9>, <DisassemblerInsn "ror" for 0x4013ac>, <DisassemblerInsn "mov" for 0x4013b0>, <DisassemblerInsn "and" for 0x4013b2>, <DisassemblerInsn "shl" for 0x4013b5>, <DisassemblerInsn "mov" for 0x4013b7>, <DisassemblerInsn "shr" for 0x4013bf>, <DisassemblerInsn "add" for 0x4013c2>, <DisassemblerInsn "mov" for 0x4013c5>, <DisassemblerInsn "mov" for 0x4013c7>, <DisassemblerInsn "jmp" for 0x4013ce>]'}, {'block_Idx': 130, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401772>, <DisassemblerInsn "mov" for 0x40177a>, <DisassemblerInsn "mov" for 0x401781>, <DisassemblerInsn "mov" for 0x401788>, <DisassemblerInsn "mov" for 0x40178a>, <DisassemblerInsn "cmp" for 0x401791>, <DisassemblerInsn "jle" for 0x401794>]'}, {'block_Idx': 94, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401314>, <DisassemblerInsn "sub" for 0x40131b>, <DisassemblerInsn "je" for 0x40131e>]'}, {'block_Idx': 20, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d5b>, <DisassemblerInsn "mov" for 0x400d62>, <DisassemblerInsn "mov" for 0x400d6a>, <DisassemblerInsn "add" for 0x400d6d>, <DisassemblerInsn "xor" for 0x400d70>, <DisassemblerInsn "cmp" for 0x400d72>, <DisassemblerInsn "mov" for 0x400d74>, <DisassemblerInsn "je" for 0x400d7b>]'}, {'block_Idx': 24, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400977>, <DisassemblerInsn "mov" for 0x40097f>, <DisassemblerInsn "mov" for 0x400987>, <DisassemblerInsn "mov" for 0x400989>, <DisassemblerInsn "mov" for 0x40098c>, <DisassemblerInsn "mov" for 0x400994>, <DisassemblerInsn "sar" for 0x400996>, <DisassemblerInsn "movsxd" for 0x400999>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "mov" for 0x40099f>, <DisassemblerInsn "and" for 0x4009a1>, <DisassemblerInsn "mov" for 0x4009a4>, <DisassemblerInsn "movzx" for 0x4009ab>, <DisassemblerInsn "mov" for 0x4009ae>, <DisassemblerInsn "mov" for 0x4009b5>, <DisassemblerInsn "add" for 0x4009b7>, <DisassemblerInsn "mov" for 0x4009ba>, <DisassemblerInsn "mov" for 0x4009bc>, <DisassemblerInsn "sar" for 0x4009be>, <DisassemblerInsn "movsxd" for 0x4009c1>, <DisassemblerInsn "mov" for 0x4009c4>, <DisassemblerInsn "ror" for 0x4009c7>, <DisassemblerInsn "ror" for 0x4009cb>, <DisassemblerInsn "ror" for 0x4009ce>, <DisassemblerInsn "and" for 0x4009d2>, <DisassemblerInsn "shl" for 0x4009d5>, <DisassemblerInsn "mov" for 0x4009d7>, <DisassemblerInsn "shr" for 0x4009de>, <DisassemblerInsn "mov" for 0x4009e1>, <DisassemblerInsn "mov" for 0x4009e8>, <DisassemblerInsn "add" for 0x4009ea>, <DisassemblerInsn "mov" for 0x4009ed>, <DisassemblerInsn "sar" for 0x4009ef>, <DisassemblerInsn "movsxd" for 0x4009f2>, <DisassemblerInsn "mov" for 0x4009f5>, <DisassemblerInsn "ror" for 0x4009f8>, <DisassemblerInsn "ror" for 0x4009fc>, <DisassemblerInsn "ror" for 0x4009ff>, <DisassemblerInsn "shl" for 0x400a03>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "shr" for 0x400a0c>, <DisassemblerInsn "mov" for 0x400a0f>, <DisassemblerInsn "add" for 0x400a12>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "shl" for 0x400a19>, <DisassemblerInsn "sar" for 0x400a1c>, <DisassemblerInsn "movsxd" for 0x400a20>, <DisassemblerInsn "mov" for 0x400a23>, <DisassemblerInsn "ror" for 0x400a27>, <DisassemblerInsn "ror" for 0x400a2b>, <DisassemblerInsn "ror" for 0x400a2e>, <DisassemblerInsn "shl" for 0x400a32>, <DisassemblerInsn "mov" for 0x400a34>, <DisassemblerInsn "shr" for 0x400a3c>, <DisassemblerInsn "add" for 0x400a3f>, <DisassemblerInsn "mov" for 0x400a42>, <DisassemblerInsn "mov" for 0x400a49>, <DisassemblerInsn "or" for 0x400a4b>, <DisassemblerInsn "mov" for 0x400a4d>, <DisassemblerInsn "shl" for 0x400a54>, <DisassemblerInsn "mov" for 0x400a57>, <DisassemblerInsn "add" for 0x400a5e>, <DisassemblerInsn "mov" for 0x400a60>, <DisassemblerInsn "mov" for 0x400a62>, <DisassemblerInsn "cmp" for 0x400a69>, <DisassemblerInsn "jle" for 0x400a6b>]'}, {'block_Idx': 55, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007e5>, <DisassemblerInsn "mov" for 0x4007ed>, <DisassemblerInsn "mov" for 0x4007f5>, <DisassemblerInsn "mov" for 0x4007fd>, <DisassemblerInsn "mov" for 0x400805>, <DisassemblerInsn "mov" for 0x40080c>, <DisassemblerInsn "mov" for 0x400813>, <DisassemblerInsn "add" for 0x400815>, <DisassemblerInsn "mov" for 0x400818>, <DisassemblerInsn "add" for 0x40081a>, <DisassemblerInsn "mov" for 0x40081c>, <DisassemblerInsn "cmp" for 0x40081e>, <DisassemblerInsn "setl" for 0x400820>, <DisassemblerInsn "cmp" for 0x400824>, <DisassemblerInsn "setne" for 0x400827>, <DisassemblerInsn "and" for 0x40082b>, <DisassemblerInsn "test" for 0x40082e>, <DisassemblerInsn "mov" for 0x400832>, <DisassemblerInsn "mov" for 0x400834>, <DisassemblerInsn "mov" for 0x40083b>, <DisassemblerInsn "mov" for 0x400842>, <DisassemblerInsn "mov" for 0x40084a>, <DisassemblerInsn "jne" for 0x400851>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ba3>, <DisassemblerInsn "and" for 0x400baa>, <DisassemblerInsn "cmp" for 0x400baf>, <DisassemblerInsn "je" for 0x400bb4>]'}, {'block_Idx': 87, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401442>, <DisassemblerInsn "mov" for 0x40144a>, <DisassemblerInsn "mov" for 0x401451>, <DisassemblerInsn "mov" for 0x401458>, <DisassemblerInsn "add" for 0x40145a>, <DisassemblerInsn "mov" for 0x40145d>, <DisassemblerInsn "xor" for 0x40145f>, <DisassemblerInsn "call" for 0x401461>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cbe>, <DisassemblerInsn "mov" for 0x400cc6>, <DisassemblerInsn "mov" for 0x400cce>, <DisassemblerInsn "mov" for 0x400cd4>, <DisassemblerInsn "add" for 0x400cd7>, <DisassemblerInsn "mov" for 0x400cdb>, <DisassemblerInsn "mov" for 0x400ce3>, <DisassemblerInsn "add" for 0x400ce6>, <DisassemblerInsn "mov" for 0x400cea>, <DisassemblerInsn "mov" for 0x400cf2>, <DisassemblerInsn "mov" for 0x400cf6>, <DisassemblerInsn "mov" for 0x400cfe>, <DisassemblerInsn "mov" for 0x400d01>, <DisassemblerInsn "ror" for 0x400d03>, <DisassemblerInsn "ror" for 0x400d07>, <DisassemblerInsn "ror" for 0x400d0a>, <DisassemblerInsn "shr" for 0x400d0e>, <DisassemblerInsn "mov" for 0x400d11>, <DisassemblerInsn "ror" for 0x400d18>, <DisassemblerInsn "ror" for 0x400d1c>, <DisassemblerInsn "ror" for 0x400d1f>, <DisassemblerInsn "shl" for 0x400d23>, <DisassemblerInsn "shr" for 0x400d26>, <DisassemblerInsn "mov" for 0x400d29>, <DisassemblerInsn "mov" for 0x400d30>, <DisassemblerInsn "mov" for 0x400d37>, <DisassemblerInsn "ror" for 0x400d3a>, <DisassemblerInsn "ror" for 0x400d3e>, <DisassemblerInsn "ror" for 0x400d41>, <DisassemblerInsn "shr" for 0x400d45>, <DisassemblerInsn "mov" for 0x400d48>, <DisassemblerInsn "mov" for 0x400d4f>, <DisassemblerInsn "cmp" for 0x400d56>, <DisassemblerInsn "jge" for 0x400d59>]'}, {'block_Idx': 111, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015bc>, <DisassemblerInsn "mov" for 0x4015c4>, <DisassemblerInsn "add" for 0x4015cb>, <DisassemblerInsn "mov" for 0x4015ce>, <DisassemblerInsn "mov" for 0x4015d0>, <DisassemblerInsn "mov" for 0x4015d8>, <DisassemblerInsn "mov" for 0x4015e0>, <DisassemblerInsn "mov" for 0x4015e2>, <DisassemblerInsn "mov" for 0x4015e9>, <DisassemblerInsn "mov" for 0x4015ec>, <DisassemblerInsn "mov" for 0x4015f4>, <DisassemblerInsn "sar" for 0x4015f6>, <DisassemblerInsn "movsxd" for 0x4015f9>, <DisassemblerInsn "mov" for 0x4015fc>, <DisassemblerInsn "mov" for 0x401600>, <DisassemblerInsn "and" for 0x401602>, <DisassemblerInsn "movzx" for 0x401605>, <DisassemblerInsn "mov" for 0x401609>, <DisassemblerInsn "add" for 0x401610>, <DisassemblerInsn "mov" for 0x401613>, <DisassemblerInsn "mov" for 0x40161a>, <DisassemblerInsn "mov" for 0x40161c>, <DisassemblerInsn "shr" for 0x401621>, <DisassemblerInsn "mov" for 0x401623>, <DisassemblerInsn "and" for 0x40162a>, <DisassemblerInsn "cmp" for 0x40162c>, <DisassemblerInsn "je" for 0x40162f>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d14>, <DisassemblerInsn "mov" for 0x401d1c>, <DisassemblerInsn "mov" for 0x401d24>, <DisassemblerInsn "mov" for 0x401d2b>, <DisassemblerInsn "mov" for 0x401d32>, <DisassemblerInsn "sub" for 0x401d37>, <DisassemblerInsn "mov" for 0x401d39>, <DisassemblerInsn "shl" for 0x401d40>, <DisassemblerInsn "mov" for 0x401d42>, <DisassemblerInsn "sar" for 0x401d49>, <DisassemblerInsn "mov" for 0x401d4b>, <DisassemblerInsn "mov" for 0x401d53>, <DisassemblerInsn "add" for 0x401d56>, <DisassemblerInsn "cmp" for 0x401d5a>, <DisassemblerInsn "mov" for 0x401d5d>, <DisassemblerInsn "jne" for 0x401d65>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ae5>, <DisassemblerInsn "cmp" for 0x400aec>, <DisassemblerInsn "je" for 0x400aef>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401be6>, <DisassemblerInsn "mov" for 0x401bee>, <DisassemblerInsn "mov" for 0x401bf6>, <DisassemblerInsn "mov" for 0x401bfe>, <DisassemblerInsn "mov" for 0x401c06>, <DisassemblerInsn "mov" for 0x401c0e>, <DisassemblerInsn "mov" for 0x401c10>, <DisassemblerInsn "mov" for 0x401c17>, <DisassemblerInsn "mov" for 0x401c19>, <DisassemblerInsn "mov" for 0x401c20>, <DisassemblerInsn "sar" for 0x401c22>, <DisassemblerInsn "movsxd" for 0x401c25>, <DisassemblerInsn "mov" for 0x401c28>, <DisassemblerInsn "ror" for 0x401c2b>, <DisassemblerInsn "ror" for 0x401c2f>, <DisassemblerInsn "ror" for 0x401c32>, <DisassemblerInsn "and" for 0x401c36>, <DisassemblerInsn "mov" for 0x401c39>, <DisassemblerInsn "shl" for 0x401c40>, <DisassemblerInsn "mov" for 0x401c42>, <DisassemblerInsn "cmp" for 0x401c49>, <DisassemblerInsn "jge" for 0x401c4c>]'}, {'block_Idx': 189, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c85>, <DisassemblerInsn "mov" for 0x401c8d>, <DisassemblerInsn "mov" for 0x401c94>, <DisassemblerInsn "mov" for 0x401c9b>, <DisassemblerInsn "mov" for 0x401ca3>, <DisassemblerInsn "shr" for 0x401cab>, <DisassemblerInsn "mov" for 0x401caf>, <DisassemblerInsn "add" for 0x401cb2>, <DisassemblerInsn "mov" for 0x401cb6>, <DisassemblerInsn "mov" for 0x401cb9>, <DisassemblerInsn "add" for 0x401cbb>, <DisassemblerInsn "mov" for 0x401cbe>, <DisassemblerInsn "shl" for 0x401cc5>, <DisassemblerInsn "mov" for 0x401cc8>, <DisassemblerInsn "mov" for 0x401ccf>, <DisassemblerInsn "sar" for 0x401cd7>, <DisassemblerInsn "movsxd" for 0x401cdb>, <DisassemblerInsn "mov" for 0x401cde>, <DisassemblerInsn "ror" for 0x401ce2>, <DisassemblerInsn "ror" for 0x401ce6>, <DisassemblerInsn "ror" for 0x401ce9>, <DisassemblerInsn "shl" for 0x401ced>, <DisassemblerInsn "mov" for 0x401cef>, <DisassemblerInsn "mov" for 0x401cf6>, <DisassemblerInsn "xor" for 0x401cf9>, <DisassemblerInsn "sub" for 0x401cfb>, <DisassemblerInsn "shr" for 0x401cfe>, <DisassemblerInsn "mov" for 0x401d00>, <DisassemblerInsn "add" for 0x401d07>, <DisassemblerInsn "mov" for 0x401d09>, <DisassemblerInsn "or" for 0x401d0b>, <DisassemblerInsn "mov" for 0x401d0d>, <DisassemblerInsn "mov" for 0x401d14>, <DisassemblerInsn "mov" for 0x401d1c>, <DisassemblerInsn "mov" for 0x401d24>, <DisassemblerInsn "mov" for 0x401d2b>, <DisassemblerInsn "mov" for 0x401d32>, <DisassemblerInsn "sub" for 0x401d37>, <DisassemblerInsn "mov" for 0x401d39>, <DisassemblerInsn "shl" for 0x401d40>, <DisassemblerInsn "mov" for 0x401d42>, <DisassemblerInsn "sar" for 0x401d49>, <DisassemblerInsn "mov" for 0x401d4b>, <DisassemblerInsn "mov" for 0x401d53>, <DisassemblerInsn "add" for 0x401d56>, <DisassemblerInsn "cmp" for 0x401d5a>, <DisassemblerInsn "mov" for 0x401d5d>, <DisassemblerInsn "jne" for 0x401d65>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40059e>, <DisassemblerInsn "mov" for 0x4005a6>, <DisassemblerInsn "mov" for 0x4005ad>, <DisassemblerInsn "mov" for 0x4005b5>, <DisassemblerInsn "mov" for 0x4005b7>, <DisassemblerInsn "xor" for 0x4005be>, <DisassemblerInsn "cmp" for 0x4005c0>, <DisassemblerInsn "mov" for 0x4005c3>, <DisassemblerInsn "mov" for 0x4005ca>, <DisassemblerInsn "mov" for 0x4005d1>, <DisassemblerInsn "je" for 0x4005d9>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b01>, <DisassemblerInsn "mov" for 0x401b09>, <DisassemblerInsn "mov" for 0x401b11>, <DisassemblerInsn "mov" for 0x401b18>, <DisassemblerInsn "mov" for 0x401b1f>, <DisassemblerInsn "sub" for 0x401b24>, <DisassemblerInsn "mov" for 0x401b26>, <DisassemblerInsn "shl" for 0x401b2d>, <DisassemblerInsn "mov" for 0x401b2f>, <DisassemblerInsn "sar" for 0x401b36>, <DisassemblerInsn "mov" for 0x401b38>, <DisassemblerInsn "mov" for 0x401b40>, <DisassemblerInsn "mov" for 0x401b43>, <DisassemblerInsn "add" for 0x401b46>, <DisassemblerInsn "movsxd" for 0x401b4a>, <DisassemblerInsn "cmp" for 0x401b4d>, <DisassemblerInsn "mov" for 0x401b50>, <DisassemblerInsn "jl" for 0x401b58>]'}, {'block_Idx': 131, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016da>, <DisassemblerInsn "mov" for 0x4016e1>, <DisassemblerInsn "mov" for 0x4016e9>, <DisassemblerInsn "mov" for 0x4016f1>, <DisassemblerInsn "mov" for 0x4016f8>, <DisassemblerInsn "mov" for 0x4016fa>, <DisassemblerInsn "sar" for 0x4016fc>, <DisassemblerInsn "mov" for 0x4016ff>, <DisassemblerInsn "movsxd" for 0x401706>, <DisassemblerInsn "mov" for 0x401709>, <DisassemblerInsn "mov" for 0x40170c>, <DisassemblerInsn "and" for 0x40170e>, <DisassemblerInsn "mov" for 0x401711>, <DisassemblerInsn "movzx" for 0x401718>, <DisassemblerInsn "add" for 0x40171b>, <DisassemblerInsn "mov" for 0x40171e>, <DisassemblerInsn "mov" for 0x401725>, <DisassemblerInsn "mov" for 0x401727>, <DisassemblerInsn "shr" for 0x40172c>, <DisassemblerInsn "mov" for 0x40172e>, <DisassemblerInsn "mov" for 0x401735>, <DisassemblerInsn "and" for 0x401737>, <DisassemblerInsn "mov" for 0x401739>, <DisassemblerInsn "add" for 0x401740>, <DisassemblerInsn "mov" for 0x401743>, <DisassemblerInsn "cmp" for 0x40174a>, <DisassemblerInsn "mov" for 0x40174d>, <DisassemblerInsn "je" for 0x401754>]'}, {'block_Idx': 188, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c4e>, <DisassemblerInsn "mov" for 0x401c55>, <DisassemblerInsn "mov" for 0x401c5c>, <DisassemblerInsn "mov" for 0x401c63>, <DisassemblerInsn "xor" for 0x401c66>, <DisassemblerInsn "sub" for 0x401c68>, <DisassemblerInsn "shr" for 0x401c6b>, <DisassemblerInsn "mov" for 0x401c6d>, <DisassemblerInsn "add" for 0x401c75>, <DisassemblerInsn "mov" for 0x401c77>, <DisassemblerInsn "mov" for 0x401c79>, <DisassemblerInsn "jmp" for 0x401c80>]'}, {'block_Idx': 58, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f56>, <DisassemblerInsn "mov" for 0x400f5e>, <DisassemblerInsn "mov" for 0x400f66>, <DisassemblerInsn "ror" for 0x400f69>, <DisassemblerInsn "ror" for 0x400f6d>, <DisassemblerInsn "ror" for 0x400f70>, <DisassemblerInsn "shr" for 0x400f74>, <DisassemblerInsn "mov" for 0x400f77>, <DisassemblerInsn "mov" for 0x400f7e>, <DisassemblerInsn "mov" for 0x400f84>, <DisassemblerInsn "xor" for 0x400f86>, <DisassemblerInsn "shr" for 0x400f8c>, <DisassemblerInsn "cmp" for 0x400f8f>, <DisassemblerInsn "cmovb" for 0x400f95>, <DisassemblerInsn "mov" for 0x400f98>, <DisassemblerInsn "xor" for 0x400f9d>, <DisassemblerInsn "cmp" for 0x400f9f>, <DisassemblerInsn "cmovb" for 0x400fa5>, <DisassemblerInsn "mov" for 0x400fa8>, <DisassemblerInsn "and" for 0x400faa>, <DisassemblerInsn "mov" for 0x400fb0>, <DisassemblerInsn "shr" for 0x400fb2>, <DisassemblerInsn "mov" for 0x400fb5>, <DisassemblerInsn "or" for 0x400fb7>, <DisassemblerInsn "cmp" for 0x400fba>, <DisassemblerInsn "cmove" for 0x400fbd>, <DisassemblerInsn "cmp" for 0x400fc0>, <DisassemblerInsn "cmove" for 0x400fc3>, <DisassemblerInsn "mov" for 0x400fc6>, <DisassemblerInsn "mov" for 0x400fc8>, <DisassemblerInsn "mov" for 0x400fca>, <DisassemblerInsn "movzx" for 0x400fd1>, <DisassemblerInsn "add" for 0x400fd5>, <DisassemblerInsn "mov" for 0x400fd7>, <DisassemblerInsn "sub" for 0x400fdc>, <DisassemblerInsn "mov" for 0x400fde>, <DisassemblerInsn "mov" for 0x400fe5>, <DisassemblerInsn "cmp" for 0x400fec>, <DisassemblerInsn "mov" for 0x400fef>, <DisassemblerInsn "je" for 0x400ff7>]'}, {'block_Idx': 76, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401220>, <DisassemblerInsn "mov" for 0x401228>, <DisassemblerInsn "mov" for 0x40122f>, <DisassemblerInsn "mov" for 0x401236>, <DisassemblerInsn "mov" for 0x401238>, <DisassemblerInsn "cmp" for 0x40123f>, <DisassemblerInsn "jle" for 0x401241>]'}, {'block_Idx': 67, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401058>, <DisassemblerInsn "mov" for 0x401060>, <DisassemblerInsn "mov" for 0x401068>, <DisassemblerInsn "mov" for 0x401070>, <DisassemblerInsn "add" for 0x401077>, <DisassemblerInsn "mov" for 0x40107a>, <DisassemblerInsn "mov" for 0x401081>, <DisassemblerInsn "mov" for 0x401083>, <DisassemblerInsn "sar" for 0x401085>, <DisassemblerInsn "movsxd" for 0x401088>, <DisassemblerInsn "mov" for 0x40108b>, <DisassemblerInsn "ror" for 0x40108e>, <DisassemblerInsn "ror" for 0x401092>, <DisassemblerInsn "ror" for 0x401095>, <DisassemblerInsn "mov" for 0x401099>, <DisassemblerInsn "and" for 0x40109b>, <DisassemblerInsn "shl" for 0x40109e>, <DisassemblerInsn "mov" for 0x4010a0>, <DisassemblerInsn "shr" for 0x4010a7>, <DisassemblerInsn "add" for 0x4010aa>, <DisassemblerInsn "mov" for 0x4010ad>, <DisassemblerInsn "add" for 0x4010af>, <DisassemblerInsn "cmp" for 0x4010b2>, <DisassemblerInsn "setb" for 0x4010b5>, <DisassemblerInsn "mov" for 0x4010b9>, <DisassemblerInsn "shl" for 0x4010bc>, <DisassemblerInsn "movsxd" for 0x4010c0>, <DisassemblerInsn "add" for 0x4010c3>, <DisassemblerInsn "cmp" for 0x4010c6>, <DisassemblerInsn "cmovb" for 0x4010c9>, <DisassemblerInsn "mov" for 0x4010cd>, <DisassemblerInsn "test" for 0x4010d4>, <DisassemblerInsn "mov" for 0x4010d8>, <DisassemblerInsn "mov" for 0x4010e0>, <DisassemblerInsn "mov" for 0x4010e7>, <DisassemblerInsn "jne" for 0x4010ef>]'}, {'block_Idx': 119, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401651>, <DisassemblerInsn "mov" for 0x401659>, <DisassemblerInsn "mov" for 0x401660>, <DisassemblerInsn "mov" for 0x401668>, <DisassemblerInsn "mov" for 0x40166f>, <DisassemblerInsn "sar" for 0x401671>, <DisassemblerInsn "movsxd" for 0x401674>, <DisassemblerInsn "mov" for 0x401677>, <DisassemblerInsn "ror" for 0x40167a>, <DisassemblerInsn "ror" for 0x40167e>, <DisassemblerInsn "ror" for 0x401681>, <DisassemblerInsn "and" for 0x401685>, <DisassemblerInsn "shl" for 0x401688>, <DisassemblerInsn "mov" for 0x40168a>, <DisassemblerInsn "shr" for 0x40168c>, <DisassemblerInsn "mov" for 0x40168f>, <DisassemblerInsn "mov" for 0x401696>, <DisassemblerInsn "add" for 0x401698>, <DisassemblerInsn "mov" for 0x40169b>, <DisassemblerInsn "mov" for 0x40169d>, <DisassemblerInsn "sar" for 0x40169f>, <DisassemblerInsn "movsxd" for 0x4016a2>, <DisassemblerInsn "mov" for 0x4016a5>, <DisassemblerInsn "and" for 0x4016a8>, <DisassemblerInsn "movzx" for 0x4016ab>, <DisassemblerInsn "add" for 0x4016ae>, <DisassemblerInsn "mov" for 0x4016b1>, <DisassemblerInsn "mov" for 0x4016b3>, <DisassemblerInsn "shr" for 0x4016b8>, <DisassemblerInsn "and" for 0x4016ba>, <DisassemblerInsn "xor" for 0x4016bc>, <DisassemblerInsn "mov" for 0x4016be>, <DisassemblerInsn "cmp" for 0x4016c3>, <DisassemblerInsn "mov" for 0x4016c6>, <DisassemblerInsn "mov" for 0x4016cd>, <DisassemblerInsn "je" for 0x4016d4>]'}, {'block_Idx': 157, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401864>, <DisassemblerInsn "mov" for 0x40186b>, <DisassemblerInsn "mov" for 0x401872>, <DisassemblerInsn "mov" for 0x401879>, <DisassemblerInsn "xor" for 0x40187c>, <DisassemblerInsn "sub" for 0x40187e>, <DisassemblerInsn "shr" for 0x401881>, <DisassemblerInsn "mov" for 0x401883>, <DisassemblerInsn "add" for 0x40188b>, <DisassemblerInsn "mov" for 0x40188d>, <DisassemblerInsn "mov" for 0x40188f>, <DisassemblerInsn "jmp" for 0x401896>]'}, {'block_Idx': 41, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e33>, <DisassemblerInsn "and" for 0x400e3a>, <DisassemblerInsn "cmp" for 0x400e3d>, <DisassemblerInsn "je" for 0x400e40>]'}, {'block_Idx': 91, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401337>, <DisassemblerInsn "mov" for 0x40133f>, <DisassemblerInsn "mov" for 0x401347>, <DisassemblerInsn "mov" for 0x401349>, <DisassemblerInsn "sar" for 0x40134b>, <DisassemblerInsn "movsxd" for 0x40134e>, <DisassemblerInsn "mov" for 0x401351>, <DisassemblerInsn "ror" for 0x401354>, <DisassemblerInsn "ror" for 0x401358>, <DisassemblerInsn "ror" for 0x40135b>, <DisassemblerInsn "mov" for 0x40135f>, <DisassemblerInsn "and" for 0x401361>, <DisassemblerInsn "shl" for 0x401364>, <DisassemblerInsn "mov" for 0x401366>, <DisassemblerInsn "shr" for 0x40136e>, <DisassemblerInsn "add" for 0x401371>, <DisassemblerInsn "mov" for 0x401374>, <DisassemblerInsn "imul" for 0x401376>, <DisassemblerInsn "mov" for 0x40137c>, <DisassemblerInsn "jmp" for 0x401383>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b7e>, <DisassemblerInsn "mov" for 0x400b85>, <DisassemblerInsn "shr" for 0x400b8a>, <DisassemblerInsn "mov" for 0x400b8c>, <DisassemblerInsn "and" for 0x400b93>, <DisassemblerInsn "cmp" for 0x400b95>, <DisassemblerInsn "je" for 0x400b98>]'}, {'block_Idx': 158, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40189b>, <DisassemblerInsn "mov" for 0x4018a3>, <DisassemblerInsn "mov" for 0x4018aa>, <DisassemblerInsn "mov" for 0x4018b1>, <DisassemblerInsn "mov" for 0x4018b9>, <DisassemblerInsn "shr" for 0x4018c1>, <DisassemblerInsn "mov" for 0x4018c5>, <DisassemblerInsn "add" for 0x4018c8>, <DisassemblerInsn "mov" for 0x4018cc>, <DisassemblerInsn "mov" for 0x4018cf>, <DisassemblerInsn "add" for 0x4018d1>, <DisassemblerInsn "mov" for 0x4018d4>, <DisassemblerInsn "shl" for 0x4018db>, <DisassemblerInsn "mov" for 0x4018de>, <DisassemblerInsn "mov" for 0x4018e5>, <DisassemblerInsn "sar" for 0x4018ed>, <DisassemblerInsn "movsxd" for 0x4018f1>, <DisassemblerInsn "mov" for 0x4018f4>, <DisassemblerInsn "ror" for 0x4018f8>, <DisassemblerInsn "ror" for 0x4018fc>, <DisassemblerInsn "ror" for 0x4018ff>, <DisassemblerInsn "shl" for 0x401903>, <DisassemblerInsn "mov" for 0x401905>, <DisassemblerInsn "mov" for 0x40190c>, <DisassemblerInsn "xor" for 0x40190f>, <DisassemblerInsn "sub" for 0x401911>, <DisassemblerInsn "shr" for 0x401914>, <DisassemblerInsn "mov" for 0x401916>, <DisassemblerInsn "add" for 0x40191d>, <DisassemblerInsn "mov" for 0x40191f>, <DisassemblerInsn "or" for 0x401921>, <DisassemblerInsn "mov" for 0x401923>, <DisassemblerInsn "mov" for 0x40192a>, <DisassemblerInsn "mov" for 0x401932>, <DisassemblerInsn "mov" for 0x401939>, <DisassemblerInsn "mov" for 0x401940>, <DisassemblerInsn "sub" for 0x401945>, <DisassemblerInsn "mov" for 0x401947>, <DisassemblerInsn "shl" for 0x40194e>, <DisassemblerInsn "mov" for 0x401950>, <DisassemblerInsn "sar" for 0x401957>, <DisassemblerInsn "mov" for 0x401959>, <DisassemblerInsn "cmp" for 0x401960>, <DisassemblerInsn "jle" for 0x401963>]'}, {'block_Idx': 73, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401130>, <DisassemblerInsn "sub" for 0x401137>, <DisassemblerInsn "je" for 0x40113a>]'}, {'block_Idx': 167, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022d4>, <DisassemblerInsn "cmp" for 0x4022db>, <DisassemblerInsn "je" for 0x4022de>]'}, {'block_Idx': 30, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400dd9>, <DisassemblerInsn "mov" for 0x400de1>, <DisassemblerInsn "mov" for 0x400de9>, <DisassemblerInsn "mov" for 0x400df0>, <DisassemblerInsn "mov" for 0x400df7>, <DisassemblerInsn "ror" for 0x400dfa>, <DisassemblerInsn "ror" for 0x400dfe>, <DisassemblerInsn "ror" for 0x400e01>, <DisassemblerInsn "shl" for 0x400e05>, <DisassemblerInsn "shr" for 0x400e08>, <DisassemblerInsn "mov" for 0x400e0b>, <DisassemblerInsn "mov" for 0x400e12>, <DisassemblerInsn "cmp" for 0x400e18>, <DisassemblerInsn "jne" for 0x400e1b>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d7d>, <DisassemblerInsn "add" for 0x400d84>, <DisassemblerInsn "cmp" for 0x400d87>, <DisassemblerInsn "jae" for 0x400d8a>]'}, {'block_Idx': 145, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401816>, <DisassemblerInsn "mov" for 0x40181d>, <DisassemblerInsn "mov" for 0x401825>, <DisassemblerInsn "mov" for 0x40182d>, <DisassemblerInsn "mov" for 0x40182f>, <DisassemblerInsn "mov" for 0x401836>, <DisassemblerInsn "sar" for 0x401838>, <DisassemblerInsn "movsxd" for 0x40183b>, <DisassemblerInsn "mov" for 0x40183e>, <DisassemblerInsn "ror" for 0x401841>, <DisassemblerInsn "ror" for 0x401845>, <DisassemblerInsn "ror" for 0x401848>, <DisassemblerInsn "and" for 0x40184c>, <DisassemblerInsn "mov" for 0x40184f>, <DisassemblerInsn "shl" for 0x401856>, <DisassemblerInsn "mov" for 0x401858>, <DisassemblerInsn "cmp" for 0x40185f>, <DisassemblerInsn "jge" for 0x401862>]'}, {'block_Idx': 186, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019d3>, <DisassemblerInsn "mov" for 0x4019db>, <DisassemblerInsn "mov" for 0x4019e3>, <DisassemblerInsn "mov" for 0x4019eb>, <DisassemblerInsn "mov" for 0x4019f3>, <DisassemblerInsn "mov" for 0x4019fb>, <DisassemblerInsn "mov" for 0x4019fd>, <DisassemblerInsn "mov" for 0x401a04>, <DisassemblerInsn "mov" for 0x401a06>, <DisassemblerInsn "mov" for 0x401a0d>, <DisassemblerInsn "sar" for 0x401a0f>, <DisassemblerInsn "movsxd" for 0x401a12>, <DisassemblerInsn "mov" for 0x401a15>, <DisassemblerInsn "ror" for 0x401a18>, <DisassemblerInsn "ror" for 0x401a1c>, <DisassemblerInsn "ror" for 0x401a1f>, <DisassemblerInsn "and" for 0x401a23>, <DisassemblerInsn "mov" for 0x401a26>, <DisassemblerInsn "shl" for 0x401a2d>, <DisassemblerInsn "mov" for 0x401a2f>, <DisassemblerInsn "cmp" for 0x401a36>, <DisassemblerInsn "jge" for 0x401a39>]'}, {'block_Idx': 89, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401306>, <DisassemblerInsn "sub" for 0x40130d>, <DisassemblerInsn "je" for 0x401310>]'}, {'block_Idx': 62, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010f5>, <DisassemblerInsn "cmp" for 0x4010fd>, <DisassemblerInsn "jge" for 0x401101>]'}, {'block_Idx': 187, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d6b>, <DisassemblerInsn "mov" for 0x401d72>, <DisassemblerInsn "mov" for 0x401d7a>, <DisassemblerInsn "mov" for 0x401d82>, <DisassemblerInsn "call" for 0x401d84>]'}, {'block_Idx': 80, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011ba>, <DisassemblerInsn "mov" for 0x4011c2>, <DisassemblerInsn "mov" for 0x4011ca>, <DisassemblerInsn "mov" for 0x4011cc>, <DisassemblerInsn "sar" for 0x4011ce>, <DisassemblerInsn "movsxd" for 0x4011d1>, <DisassemblerInsn "mov" for 0x4011d4>, <DisassemblerInsn "ror" for 0x4011d7>, <DisassemblerInsn "ror" for 0x4011db>, <DisassemblerInsn "ror" for 0x4011de>, <DisassemblerInsn "mov" for 0x4011e2>, <DisassemblerInsn "and" for 0x4011e4>, <DisassemblerInsn "shl" for 0x4011e7>, <DisassemblerInsn "mov" for 0x4011e9>, <DisassemblerInsn "shr" for 0x4011f1>, <DisassemblerInsn "add" for 0x4011f4>, <DisassemblerInsn "mov" for 0x4011f7>, <DisassemblerInsn "add" for 0x4011f9>, <DisassemblerInsn "mov" for 0x4011fc>, <DisassemblerInsn "jmp" for 0x401203>]'}, {'block_Idx': 102, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401322>, <DisassemblerInsn "sub" for 0x401329>, <DisassemblerInsn "je" for 0x40132c>]'}, {'block_Idx': 193, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a72>, <DisassemblerInsn "mov" for 0x401a7a>, <DisassemblerInsn "mov" for 0x401a81>, <DisassemblerInsn "mov" for 0x401a88>, <DisassemblerInsn "mov" for 0x401a90>, <DisassemblerInsn "shr" for 0x401a98>, <DisassemblerInsn "mov" for 0x401a9c>, <DisassemblerInsn "add" for 0x401a9f>, <DisassemblerInsn "mov" for 0x401aa3>, <DisassemblerInsn "mov" for 0x401aa6>, <DisassemblerInsn "add" for 0x401aa8>, <DisassemblerInsn "mov" for 0x401aab>, <DisassemblerInsn "shl" for 0x401ab2>, <DisassemblerInsn "mov" for 0x401ab5>, <DisassemblerInsn "mov" for 0x401abc>, <DisassemblerInsn "sar" for 0x401ac4>, <DisassemblerInsn "movsxd" for 0x401ac8>, <DisassemblerInsn "mov" for 0x401acb>, <DisassemblerInsn "ror" for 0x401acf>, <DisassemblerInsn "ror" for 0x401ad3>, <DisassemblerInsn "ror" for 0x401ad6>, <DisassemblerInsn "shl" for 0x401ada>, <DisassemblerInsn "mov" for 0x401adc>, <DisassemblerInsn "mov" for 0x401ae3>, <DisassemblerInsn "xor" for 0x401ae6>, <DisassemblerInsn "sub" for 0x401ae8>, <DisassemblerInsn "shr" for 0x401aeb>, <DisassemblerInsn "mov" for 0x401aed>, <DisassemblerInsn "add" for 0x401af4>, <DisassemblerInsn "mov" for 0x401af6>, <DisassemblerInsn "or" for 0x401af8>, <DisassemblerInsn "mov" for 0x401afa>, <DisassemblerInsn "mov" for 0x401b01>, <DisassemblerInsn "mov" for 0x401b09>, <DisassemblerInsn "mov" for 0x401b11>, <DisassemblerInsn "mov" for 0x401b18>, <DisassemblerInsn "mov" for 0x401b1f>, <DisassemblerInsn "sub" for 0x401b24>, <DisassemblerInsn "mov" for 0x401b26>, <DisassemblerInsn "shl" for 0x401b2d>, <DisassemblerInsn "mov" for 0x401b2f>, <DisassemblerInsn "sar" for 0x401b36>, <DisassemblerInsn "mov" for 0x401b38>, <DisassemblerInsn "mov" for 0x401b40>, <DisassemblerInsn "mov" for 0x401b43>, <DisassemblerInsn "add" for 0x401b46>, <DisassemblerInsn "movsxd" for 0x401b4a>, <DisassemblerInsn "cmp" for 0x401b4d>, <DisassemblerInsn "mov" for 0x401b50>, <DisassemblerInsn "jl" for 0x401b58>]'}, {'block_Idx': 71, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401029>, <DisassemblerInsn "mov" for 0x401031>, <DisassemblerInsn "mov" for 0x401038>, <DisassemblerInsn "mov" for 0x40103f>, <DisassemblerInsn "cmp" for 0x401047>, <DisassemblerInsn "mov" for 0x40104a>, <DisassemblerInsn "jle" for 0x401052>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401b5e>]'}, {'block_Idx': 192, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a3b>, <DisassemblerInsn "mov" for 0x401a42>, <DisassemblerInsn "mov" for 0x401a49>, <DisassemblerInsn "mov" for 0x401a50>, <DisassemblerInsn "xor" for 0x401a53>, <DisassemblerInsn "sub" for 0x401a55>, <DisassemblerInsn "shr" for 0x401a58>, <DisassemblerInsn "mov" for 0x401a5a>, <DisassemblerInsn "add" for 0x401a62>, <DisassemblerInsn "mov" for 0x401a64>, <DisassemblerInsn "mov" for 0x401a66>, <DisassemblerInsn "jmp" for 0x401a6d>]'}, {'block_Idx': 40, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e1d>, <DisassemblerInsn "add" for 0x400e25>, <DisassemblerInsn "mov" for 0x400e29>, <DisassemblerInsn "jmp" for 0x400e31>]'}, {'block_Idx': 107, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013d0>, <DisassemblerInsn "mov" for 0x4013d8>, <DisassemblerInsn "mov" for 0x4013e0>, <DisassemblerInsn "mov" for 0x4013e2>, <DisassemblerInsn "sar" for 0x4013e4>, <DisassemblerInsn "movsxd" for 0x4013e7>, <DisassemblerInsn "mov" for 0x4013ea>, <DisassemblerInsn "ror" for 0x4013ed>, <DisassemblerInsn "ror" for 0x4013f1>, <DisassemblerInsn "ror" for 0x4013f4>, <DisassemblerInsn "mov" for 0x4013f8>, <DisassemblerInsn "and" for 0x4013fa>, <DisassemblerInsn "shl" for 0x4013fd>, <DisassemblerInsn "mov" for 0x4013ff>, <DisassemblerInsn "shr" for 0x401407>, <DisassemblerInsn "add" for 0x40140a>, <DisassemblerInsn "mov" for 0x40140d>, <DisassemblerInsn "imul" for 0x40140f>, <DisassemblerInsn "mov" for 0x401412>, <DisassemblerInsn "jmp" for 0x401419>]'}, {'block_Idx': 74, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40116f>, <DisassemblerInsn "mov" for 0x401177>, <DisassemblerInsn "mov" for 0x40117f>, <DisassemblerInsn "mov" for 0x401181>, <DisassemblerInsn "sar" for 0x401183>, <DisassemblerInsn "movsxd" for 0x401186>, <DisassemblerInsn "mov" for 0x401189>, <DisassemblerInsn "ror" for 0x40118c>, <DisassemblerInsn "ror" for 0x401190>, <DisassemblerInsn "ror" for 0x401193>, <DisassemblerInsn "mov" for 0x401197>, <DisassemblerInsn "and" for 0x401199>, <DisassemblerInsn "shl" for 0x40119c>, <DisassemblerInsn "mov" for 0x40119e>, <DisassemblerInsn "shr" for 0x4011a6>, <DisassemblerInsn "add" for 0x4011a9>, <DisassemblerInsn "mov" for 0x4011ac>, <DisassemblerInsn "add" for 0x4011ae>, <DisassemblerInsn "mov" for 0x4011b1>, <DisassemblerInsn "jmp" for 0x4011b8>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400913>, <DisassemblerInsn "mov" for 0x40091b>, <DisassemblerInsn "add" for 0x40091e>, <DisassemblerInsn "mov" for 0x400922>, <DisassemblerInsn "mov" for 0x40092a>, <DisassemblerInsn "add" for 0x40092d>, <DisassemblerInsn "mov" for 0x400930>, <DisassemblerInsn "mov" for 0x400933>, <DisassemblerInsn "add" for 0x400936>, <DisassemblerInsn "mov" for 0x40093a>, <DisassemblerInsn "mov" for 0x400942>, <DisassemblerInsn "add" for 0x400945>, <DisassemblerInsn "mov" for 0x400949>, <DisassemblerInsn "mov" for 0x400951>, <DisassemblerInsn "add" for 0x400954>, <DisassemblerInsn "mov" for 0x400958>, <DisassemblerInsn "mov" for 0x400960>, <DisassemblerInsn "add" for 0x400963>, <DisassemblerInsn "mov" for 0x400967>, <DisassemblerInsn "mov" for 0x40096f>, <DisassemblerInsn "mov" for 0x400977>, <DisassemblerInsn "mov" for 0x40097f>, <DisassemblerInsn "mov" for 0x400987>, <DisassemblerInsn "mov" for 0x400989>, <DisassemblerInsn "mov" for 0x40098c>, <DisassemblerInsn "mov" for 0x400994>, <DisassemblerInsn "sar" for 0x400996>, <DisassemblerInsn "movsxd" for 0x400999>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "mov" for 0x40099f>, <DisassemblerInsn "and" for 0x4009a1>, <DisassemblerInsn "mov" for 0x4009a4>, <DisassemblerInsn "movzx" for 0x4009ab>, <DisassemblerInsn "mov" for 0x4009ae>, <DisassemblerInsn "mov" for 0x4009b5>, <DisassemblerInsn "add" for 0x4009b7>, <DisassemblerInsn "mov" for 0x4009ba>, <DisassemblerInsn "mov" for 0x4009bc>, <DisassemblerInsn "sar" for 0x4009be>, <DisassemblerInsn "movsxd" for 0x4009c1>, <DisassemblerInsn "mov" for 0x4009c4>, <DisassemblerInsn "ror" for 0x4009c7>, <DisassemblerInsn "ror" for 0x4009cb>, <DisassemblerInsn "ror" for 0x4009ce>, <DisassemblerInsn "and" for 0x4009d2>, <DisassemblerInsn "shl" for 0x4009d5>, <DisassemblerInsn "mov" for 0x4009d7>, <DisassemblerInsn "shr" for 0x4009de>, <DisassemblerInsn "mov" for 0x4009e1>, <DisassemblerInsn "mov" for 0x4009e8>, <DisassemblerInsn "add" for 0x4009ea>, <DisassemblerInsn "mov" for 0x4009ed>, <DisassemblerInsn "sar" for 0x4009ef>, <DisassemblerInsn "movsxd" for 0x4009f2>, <DisassemblerInsn "mov" for 0x4009f5>, <DisassemblerInsn "ror" for 0x4009f8>, <DisassemblerInsn "ror" for 0x4009fc>, <DisassemblerInsn "ror" for 0x4009ff>, <DisassemblerInsn "shl" for 0x400a03>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "shr" for 0x400a0c>, <DisassemblerInsn "mov" for 0x400a0f>, <DisassemblerInsn "add" for 0x400a12>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "shl" for 0x400a19>, <DisassemblerInsn "sar" for 0x400a1c>, <DisassemblerInsn "movsxd" for 0x400a20>, <DisassemblerInsn "mov" for 0x400a23>, <DisassemblerInsn "ror" for 0x400a27>, <DisassemblerInsn "ror" for 0x400a2b>, <DisassemblerInsn "ror" for 0x400a2e>, <DisassemblerInsn "shl" for 0x400a32>, <DisassemblerInsn "mov" for 0x400a34>, <DisassemblerInsn "shr" for 0x400a3c>, <DisassemblerInsn "add" for 0x400a3f>, <DisassemblerInsn "mov" for 0x400a42>, <DisassemblerInsn "mov" for 0x400a49>, <DisassemblerInsn "or" for 0x400a4b>, <DisassemblerInsn "mov" for 0x400a4d>, <DisassemblerInsn "shl" for 0x400a54>, <DisassemblerInsn "mov" for 0x400a57>, <DisassemblerInsn "add" for 0x400a5e>, <DisassemblerInsn "mov" for 0x400a60>, <DisassemblerInsn "mov" for 0x400a62>, <DisassemblerInsn "cmp" for 0x400a69>, <DisassemblerInsn "jle" for 0x400a6b>]'}, {'block_Idx': 49, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e8c>, <DisassemblerInsn "mov" for 0x400e94>, <DisassemblerInsn "mov" for 0x400e9c>, <DisassemblerInsn "mov" for 0x400ea4>, <DisassemblerInsn "mov" for 0x400eac>, <DisassemblerInsn "mov" for 0x400eae>, <DisassemblerInsn "cmp" for 0x400eb5>, <DisassemblerInsn "setg" for 0x400eb8>, <DisassemblerInsn "mov" for 0x400ebc>, <DisassemblerInsn "mov" for 0x400ec0>, <DisassemblerInsn "mov" for 0x400ec6>, <DisassemblerInsn "cmp" for 0x400ecc>, <DisassemblerInsn "cmovg" for 0x400ecf>, <DisassemblerInsn "mov" for 0x400ed3>, <DisassemblerInsn "mov" for 0x400ed9>, <DisassemblerInsn "cmp" for 0x400edf>, <DisassemblerInsn "cmovg" for 0x400ee2>, <DisassemblerInsn "and" for 0x400ee6>, <DisassemblerInsn "movzx" for 0x400eea>, <DisassemblerInsn "mov" for 0x400eee>, <DisassemblerInsn "sub" for 0x400ef2>, <DisassemblerInsn "mov" for 0x400ef5>, <DisassemblerInsn "mov" for 0x400ef9>, <DisassemblerInsn "mov" for 0x400efc>, <DisassemblerInsn "add" for 0x400eff>, <DisassemblerInsn "mov" for 0x400f03>, <DisassemblerInsn "mov" for 0x400f0b>, <DisassemblerInsn "mov" for 0x400f0f>, <DisassemblerInsn "mov" for 0x400f15>, <DisassemblerInsn "add" for 0x400f18>, <DisassemblerInsn "mov" for 0x400f1c>, <DisassemblerInsn "mov" for 0x400f24>, <DisassemblerInsn "mov" for 0x400f27>, <DisassemblerInsn "mov" for 0x400f2a>, <DisassemblerInsn "and" for 0x400f30>, <DisassemblerInsn "cmp" for 0x400f32>, <DisassemblerInsn "je" for 0x400f34>]'}, {'block_Idx': 37, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b69>, <DisassemblerInsn "mov" for 0x400b71>, <DisassemblerInsn "mov" for 0x400b78>, <DisassemblerInsn "add" for 0x400b7a>, <DisassemblerInsn "mov" for 0x400b7c>, <DisassemblerInsn "mov" for 0x400b7e>, <DisassemblerInsn "mov" for 0x400b85>, <DisassemblerInsn "shr" for 0x400b8a>, <DisassemblerInsn "mov" for 0x400b8c>, <DisassemblerInsn "and" for 0x400b93>, <DisassemblerInsn "cmp" for 0x400b95>, <DisassemblerInsn "je" for 0x400b98>]'}, {'block_Idx': 166, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40192a>, <DisassemblerInsn "mov" for 0x401932>, <DisassemblerInsn "mov" for 0x401939>, <DisassemblerInsn "mov" for 0x401940>, <DisassemblerInsn "sub" for 0x401945>, <DisassemblerInsn "mov" for 0x401947>, <DisassemblerInsn "shl" for 0x40194e>, <DisassemblerInsn "mov" for 0x401950>, <DisassemblerInsn "sar" for 0x401957>, <DisassemblerInsn "mov" for 0x401959>, <DisassemblerInsn "cmp" for 0x401960>, <DisassemblerInsn "jle" for 0x401963>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400857>, <DisassemblerInsn "mov" for 0x40085f>, <DisassemblerInsn "mov" for 0x400866>, <DisassemblerInsn "mov" for 0x40086d>, <DisassemblerInsn "mov" for 0x400875>, <DisassemblerInsn "mov" for 0x40087c>, <DisassemblerInsn "mov" for 0x400883>, <DisassemblerInsn "shl" for 0x400885>, <DisassemblerInsn "xor" for 0x400888>, <DisassemblerInsn "cmp" for 0x40088a>, <DisassemblerInsn "cmovl" for 0x40088d>, <DisassemblerInsn "xor" for 0x400891>, <DisassemblerInsn "cmp" for 0x400893>, <DisassemblerInsn "cmovl" for 0x400896>, <DisassemblerInsn "xor" for 0x400899>, <DisassemblerInsn "cmp" for 0x40089b>, <DisassemblerInsn "cmovl" for 0x40089e>, <DisassemblerInsn "mov" for 0x4008a1>, <DisassemblerInsn "add" for 0x4008a4>, <DisassemblerInsn "mov" for 0x4008a8>, <DisassemblerInsn "mov" for 0x4008b0>, <DisassemblerInsn "mov" for 0x4008b4>, <DisassemblerInsn "mov" for 0x4008b7>, <DisassemblerInsn "mov" for 0x4008b9>, <DisassemblerInsn "mov" for 0x4008bb>, <DisassemblerInsn "add" for 0x4008be>, <DisassemblerInsn "mov" for 0x4008c1>, <DisassemblerInsn "mov" for 0x4008c5>, <DisassemblerInsn "add" for 0x4008c8>, <DisassemblerInsn "mov" for 0x4008cc>, <DisassemblerInsn "mov" for 0x4008d4>, <DisassemblerInsn "mov" for 0x4008db>, <DisassemblerInsn "ror" for 0x4008dd>, <DisassemblerInsn "ror" for 0x4008e1>, <DisassemblerInsn "ror" for 0x4008e4>, <DisassemblerInsn "shr" for 0x4008e8>, <DisassemblerInsn "mov" for 0x4008eb>, <DisassemblerInsn "shl" for 0x4008f2>, <DisassemblerInsn "mov" for 0x4008f5>, <DisassemblerInsn "ror" for 0x4008f8>, <DisassemblerInsn "ror" for 0x4008fc>, <DisassemblerInsn "ror" for 0x4008ff>, <DisassemblerInsn "shr" for 0x400903>, <DisassemblerInsn "or" for 0x400906>, <DisassemblerInsn "cmp" for 0x400908>, <DisassemblerInsn "jne" for 0x40090d>]'}, {'block_Idx': 182, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401bcb>, <DisassemblerInsn "mov" for 0x401bd2>, <DisassemblerInsn "mov" for 0x401bd4>, <DisassemblerInsn "xor" for 0x401bdc>, <DisassemblerInsn "mov" for 0x401bde>, <DisassemblerInsn "mov" for 0x401be6>, <DisassemblerInsn "mov" for 0x401bee>, <DisassemblerInsn "mov" for 0x401bf6>, <DisassemblerInsn "mov" for 0x401bfe>, <DisassemblerInsn "mov" for 0x401c06>, <DisassemblerInsn "mov" for 0x401c0e>, <DisassemblerInsn "mov" for 0x401c10>, <DisassemblerInsn "mov" for 0x401c17>, <DisassemblerInsn "mov" for 0x401c19>, <DisassemblerInsn "mov" for 0x401c20>, <DisassemblerInsn "sar" for 0x401c22>, <DisassemblerInsn "movsxd" for 0x401c25>, <DisassemblerInsn "mov" for 0x401c28>, <DisassemblerInsn "ror" for 0x401c2b>, <DisassemblerInsn "ror" for 0x401c2f>, <DisassemblerInsn "ror" for 0x401c32>, <DisassemblerInsn "and" for 0x401c36>, <DisassemblerInsn "mov" for 0x401c39>, <DisassemblerInsn "shl" for 0x401c40>, <DisassemblerInsn "mov" for 0x401c42>, <DisassemblerInsn "cmp" for 0x401c49>, <DisassemblerInsn "jge" for 0x401c4c>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a6d>, <DisassemblerInsn "mov" for 0x400a75>, <DisassemblerInsn "mov" for 0x400a7d>, <DisassemblerInsn "mov" for 0x400a85>, <DisassemblerInsn "mov" for 0x400a8d>, <DisassemblerInsn "mov" for 0x400a95>, <DisassemblerInsn "mov" for 0x400a9d>, <DisassemblerInsn "add" for 0x400aa0>, <DisassemblerInsn "sar" for 0x400aa3>, <DisassemblerInsn "xor" for 0x400aa6>, <DisassemblerInsn "cmp" for 0x400aa9>, <DisassemblerInsn "cmovl" for 0x400aad>, <DisassemblerInsn "xor" for 0x400ab1>, <DisassemblerInsn "cmp" for 0x400ab4>, <DisassemblerInsn "mov" for 0x400ab8>, <DisassemblerInsn "cmovl" for 0x400abb>, <DisassemblerInsn "xor" for 0x400abf>, <DisassemblerInsn "cmp" for 0x400ac2>, <DisassemblerInsn "cmovl" for 0x400ac6>, <DisassemblerInsn "mov" for 0x400aca>, <DisassemblerInsn "mov" for 0x400acd>, <DisassemblerInsn "movsxd" for 0x400ad0>, <DisassemblerInsn "add" for 0x400ad3>, <DisassemblerInsn "mov" for 0x400ad6>, <DisassemblerInsn "mov" for 0x400ada>, <DisassemblerInsn "jmp" for 0x400ae0>]'}, {'block_Idx': 168, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401969>, <DisassemblerInsn "mov" for 0x401971>, <DisassemblerInsn "mov" for 0x401979>, <DisassemblerInsn "mov" for 0x40197e>, <DisassemblerInsn "xor" for 0x401986>, <DisassemblerInsn "mov" for 0x401988>, <DisassemblerInsn "mov" for 0x401990>, <DisassemblerInsn "mov" for 0x401998>, <DisassemblerInsn "mov" for 0x4019a0>, <DisassemblerInsn "mov" for 0x4019a8>, <DisassemblerInsn "mov" for 0x4019af>, <DisassemblerInsn "add" for 0x4019b2>, <DisassemblerInsn "mov" for 0x4019b6>, <DisassemblerInsn "movsxd" for 0x4019be>, <DisassemblerInsn "cmp" for 0x4019c1>, <DisassemblerInsn "mov" for 0x4019c4>, <DisassemblerInsn "jl" for 0x4019cc>]'}, {'block_Idx': 42, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d9a>, <DisassemblerInsn "add" for 0x400da1>, <DisassemblerInsn "mov" for 0x400da4>, <DisassemblerInsn "jmp" for 0x400dab>]'}, {'block_Idx': 3, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40058c>, <DisassemblerInsn "mov" for 0x40058f>, <DisassemblerInsn "mov" for 0x400597>, <DisassemblerInsn "mov" for 0x40059e>, <DisassemblerInsn "mov" for 0x4005a6>, <DisassemblerInsn "mov" for 0x4005ad>, <DisassemblerInsn "mov" for 0x4005b5>, <DisassemblerInsn "mov" for 0x4005b7>, <DisassemblerInsn "xor" for 0x4005be>, <DisassemblerInsn "cmp" for 0x4005c0>, <DisassemblerInsn "mov" for 0x4005c3>, <DisassemblerInsn "mov" for 0x4005ca>, <DisassemblerInsn "mov" for 0x4005d1>, <DisassemblerInsn "je" for 0x4005d9>]'}, {'block_Idx': 121, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015d0>, <DisassemblerInsn "mov" for 0x4015d8>, <DisassemblerInsn "mov" for 0x4015e0>, <DisassemblerInsn "mov" for 0x4015e2>, <DisassemblerInsn "mov" for 0x4015e9>, <DisassemblerInsn "mov" for 0x4015ec>, <DisassemblerInsn "mov" for 0x4015f4>, <DisassemblerInsn "sar" for 0x4015f6>, <DisassemblerInsn "movsxd" for 0x4015f9>, <DisassemblerInsn "mov" for 0x4015fc>, <DisassemblerInsn "mov" for 0x401600>, <DisassemblerInsn "and" for 0x401602>, <DisassemblerInsn "movzx" for 0x401605>, <DisassemblerInsn "mov" for 0x401609>, <DisassemblerInsn "add" for 0x401610>, <DisassemblerInsn "mov" for 0x401613>, <DisassemblerInsn "mov" for 0x40161a>, <DisassemblerInsn "mov" for 0x40161c>, <DisassemblerInsn "shr" for 0x401621>, <DisassemblerInsn "mov" for 0x401623>, <DisassemblerInsn "and" for 0x40162a>, <DisassemblerInsn "cmp" for 0x40162c>, <DisassemblerInsn "je" for 0x40162f>]'}], 'cfg_block_detailed_info': [{'block_Idx': 63, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x4d4]>', '<mov~~edx, dword ptr [rsp + 0x4d0]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~qword ptr [rsp + 0x4c0], rcx>', '<mov~~dword ptr [rsp + 0x4cc], eax>', '<mov~~rax, qword ptr [rsp + 0x4c0]>', '<mov~~ecx, dword ptr [rsp + 0x4cc]>', '<mov~~dword ptr [rsp + 0x4b4], ecx>', '<mov~~qword ptr [rsp + 0x4b8], rax>', '<cmp~~ecx, 1>', '<mov~~qword ptr [rsp + 0x4d8], rax>', '<jle~~0x4010f5>']}, {'block_Idx': 77, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x52c]>', '<sub~~eax, 7>', '<je~~0x4011ba>']}, {'block_Idx': 97, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x520]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<shr~~eax, 0xf0>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x494], eax>', '<jmp~~0x401442>']}, {'block_Idx': 130, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x460]>', '<mov~~ecx, dword ptr [rsp + 0x438]>', '<mov~~dword ptr [rsp + 0x40c], ecx>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x410], eax>', '<cmp~~eax, 0x20>', '<jle~~0x4017b4>']}, {'block_Idx': 94, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x530]>', '<sub~~eax, 0xd>', '<je~~0x401388>']}, {'block_Idx': 20, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x534]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x50c], eax>', '<je~~0x400dd9>']}, {'block_Idx': 24, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x580]>', '<mov~~rax, qword ptr [rsp + 0x588]>', '<mov~~edx, dword ptr [rdi]>', '<mov~~rax, qword ptr [rax]>', '<mov~~qword ptr [rsp + 0x558], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x56c], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x564], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~dword ptr [rdi], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x56c]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x568], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<mov~~dword ptr [rdi], esi>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x56c]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<mov~~dword ptr [rdi], r8d>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x590]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x570], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x574], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x578], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x57c], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400ae5>']}, {'block_Idx': 55, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rdx, qword ptr [rsp + 0x5e0]>', '<mov~~rdi, qword ptr [rsp + 0x5f8]>', '<mov~~rsi, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rsp + 0x5e8]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x608], esi>', '<mov~~dword ptr [rsp + 0x60c], edx>', '<mov~~qword ptr [rsp + 0x610], rcx>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<jne~~0x402db6>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5cc]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400cbe>']}, {'block_Idx': 87, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x510]>', '<mov~~ecx, dword ptr [rsp + 0x494]>', '<mov~~dword ptr [rsp + 0x484], ecx>', '<mov~~ecx, dword ptr [rax]>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500038>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x5c0]>', '<mov~~dword ptr [rax], 0x10>', '<mov~~rax, rcx>', '<add~~rax, 0x38>', '<mov~~qword ptr [rsp + 0x510], rax>', '<mov~~rax, rcx>', '<add~~rax, 0x28>', '<mov~~qword ptr [rsp + 0x518], rax>', '<mov~~rax, qword ptr [rcx + 0x28]>', '<mov~~qword ptr [rsp + 0x520], rax>', '<mov~~edx, dword ptr [rax + 2]>', '<mov~~esi, edx>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x52c], esi>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x530], edx>', '<mov~~dword ptr [rcx + 0x38], 0x18>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x534], eax>', '<mov~~dword ptr [rcx + 0x38], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x400d7d>']}, {'block_Idx': 111, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x460]>', '<mov~~ecx, dword ptr [rsp + 0x458]>', '<add~~ecx, 1>', '<mov~~dword ptr [rax], ecx>', '<mov~~rax, qword ptr [rsp + 0x510]>', '<mov~~rcx, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x43c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x440], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x44c], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x448], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x44c]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401651>']}, {'block_Idx': 195, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x358]>', '<mov~~rdx, qword ptr [rsp + 0x388]>', '<mov~~edi, dword ptr [rsp + 0x360]>', '<mov~~esi, dword ptr [rsp + 0x354]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x348], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x348]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x370]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x378], rax>', '<jne~~0x401be6>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x574]>', '<cmp~~eax, 0>', '<je~~0x400b7e>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x440]>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x460]>', '<mov~~rsi, qword ptr [rsp + 0x378]>', '<mov~~qword ptr [rsp + 0x358], rsi>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x360], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x364], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x368], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x36c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401c85>']}, {'block_Idx': 189, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x510]>', '<mov~~edi, dword ptr [rsp + 0x360]>', '<mov~~esi, dword ptr [rsp + 0x364]>', '<mov~~rax, qword ptr [rsp + 0x440]>', '<mov~~r9d, dword ptr [rsp + 0x36c]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, esi>', '<add~~r8d, 0x10>', '<mov~~dword ptr [rdx], r8d>', '<mov~~ecx, edi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x34c], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x368]>', '<mov~~dword ptr [rsp + 0x350], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x34c]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x350]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x354], eax>', '<mov~~rax, qword ptr [rsp + 0x358]>', '<mov~~rdx, qword ptr [rsp + 0x388]>', '<mov~~edi, dword ptr [rsp + 0x360]>', '<mov~~esi, dword ptr [rsp + 0x354]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x348], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x348]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x370]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x378], rax>', '<jne~~0x401be6>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~ecx, dword ptr [rsp + 0x62c]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~esi, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x604], esi>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x608], edx>', '<mov~~dword ptr [rsp + 0x60c], ecx>', '<mov~~qword ptr [rsp + 0x610], rax>', '<je~~0x400857>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3a8]>', '<mov~~rdx, qword ptr [rsp + 0x3f8]>', '<mov~~edi, dword ptr [rsp + 0x3b0]>', '<mov~~esi, dword ptr [rsp + 0x3a4]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x398], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x398]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x400], rax>', '<jl~~0x4019d3>']}, {'block_Idx': 131, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x434]>', '<mov~~rsi, qword ptr [rsp + 0x510]>', '<mov~~rcx, qword ptr [rsp + 0x440]>', '<mov~~dword ptr [rsp + 0x414], eax>', '<mov~~edi, dword ptr [rsi]>', '<mov~~edx, edi>', '<sar~~edx, 3>', '<mov~~dword ptr [rsp + 0x418], edx>', '<movsxd~~rdx, edx>', '<mov~~dl, byte ptr [rcx + rdx]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x41c], ecx>', '<movzx~~edx, dl>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x420], edi>', '<mov~~dword ptr [rsi], edi>', '<mov~~esi, 0x80>', '<shr~~esi, cl>', '<mov~~dword ptr [rsp + 0x424], esi>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~dword ptr [rsp + 0x428], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x42c], eax>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x434], eax>', '<je~~0x4016da>']}, {'block_Idx': 188, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x360]>', '<mov~~edx, dword ptr [rsp + 0x364]>', '<mov~~eax, dword ptr [rsp + 0x36c]>', '<mov~~dil, sil>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x354], eax>', '<jmp~~0x401d14>']}, {'block_Idx': 58, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x510]>', '<mov~~rcx, qword ptr [rsp + 0x520]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x4d0], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~eax, edi>', '<shr~~eax, 8>', '<mov~~ecx, edx>', '<or~~ecx, 8>', '<cmp~~esi, 0>', '<cmove~~eax, edi>', '<cmp~~esi, 0>', '<cmove~~ecx, edx>', '<mov~~eax, eax>', '<mov~~edx, eax>', '<mov~~rax, qword ptr [rip + 0xff05f]>', '<movzx~~eax, byte ptr [rax + rdx]>', '<add~~ecx, eax>', '<mov~~eax, 7>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x4d4], eax>', '<mov~~rax, -1>', '<cmp~~ecx, 6>', '<mov~~qword ptr [rsp + 0x4d8], rax>', '<je~~0x4010f5>']}, {'block_Idx': 76, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~eax, dword ptr [rsp + 0x4ac]>', '<mov~~dword ptr [rsp + 0x4a4], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x4a8], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401272>']}, {'block_Idx': 67, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x4b8]>', '<mov~~rax, qword ptr [rsp + 0x510]>', '<mov~~rcx, qword ptr [rsp + 0x520]>', '<mov~~esi, dword ptr [rsp + 0x4b4]>', '<add~~esi, -1>', '<mov~~dword ptr [rsp + 0x4b0], esi>', '<mov~~esi, dword ptr [rax]>', '<mov~~edi, esi>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rcx + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<mov~~ecx, esi>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x4b0]>', '<shr~~edi, 0xf8>', '<add~~esi, 8>', '<mov~~dword ptr [rax], esi>', '<add~~edi, -0x80>', '<cmp~~edi, 0x40>', '<setb~~sil>', '<mov~~rax, rdx>', '<shl~~rax, 6>', '<movsxd~~r8, edi>', '<add~~rax, r8>', '<cmp~~edi, 0x40>', '<cmovb~~rdx, rax>', '<mov~~rax, -1>', '<test~~sil, 1>', '<mov~~qword ptr [rsp + 0x4c0], rdx>', '<mov~~dword ptr [rsp + 0x4cc], ecx>', '<mov~~qword ptr [rsp + 0x4d8], rax>', '<jne~~0x401029>']}, {'block_Idx': 119, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x510]>', '<mov~~esi, dword ptr [rsp + 0x43c]>', '<mov~~rax, qword ptr [rsp + 0x440]>', '<mov~~ecx, dword ptr [rsp + 0x448]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x430], ecx>', '<mov~~ecx, esi>', '<add~~ecx, 7>', '<mov~~dword ptr [rdx], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~esi, 8>', '<mov~~dword ptr [rdx], esi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<and~~edx, eax>', '<xor~~eax, eax>', '<mov~~ecx, 1>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x434], ecx>', '<mov~~dword ptr [rsp + 0x438], eax>', '<je~~0x401772>']}, {'block_Idx': 157, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x410]>', '<mov~~edx, dword ptr [rsp + 0x3ec]>', '<mov~~eax, dword ptr [rsp + 0x3f4]>', '<mov~~dil, sil>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x3e8], eax>', '<jmp~~0x40192a>']}, {'block_Idx': 41, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x508]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x400e64>']}, {'block_Idx': 91, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x520]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<shr~~eax, 0xf8>', '<add~~edx, 8>', '<mov~~dword ptr [rcx], edx>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x494], eax>', '<jmp~~0x401442>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x56c]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x400977>']}, {'block_Idx': 158, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x510]>', '<mov~~edi, dword ptr [rsp + 0x410]>', '<mov~~esi, dword ptr [rsp + 0x3ec]>', '<mov~~rax, qword ptr [rsp + 0x440]>', '<mov~~r9d, dword ptr [rsp + 0x3f4]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, esi>', '<add~~r8d, 0x10>', '<mov~~dword ptr [rdx], r8d>', '<mov~~ecx, edi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x3e0], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x3f0]>', '<mov~~dword ptr [rsp + 0x3e4], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3e0]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3e4]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x3e8], eax>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~esi, dword ptr [rsp + 0x410]>', '<mov~~edx, dword ptr [rsp + 0x3e8]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3d8], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3d8]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3dc], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x4022d4>']}, {'block_Idx': 73, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x52c]>', '<sub~~eax, 6>', '<je~~0x40116f>']}, {'block_Idx': 167, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x40c]>', '<cmp~~eax, 0>', '<je~~0x40235e>']}, {'block_Idx': 30, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x520]>', '<mov~~edx, dword ptr [rsp + 0x50c]>', '<mov~~dword ptr [rsp + 0x504], edx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x508], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x400e33>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x534]>', '<add~~eax, -8>', '<cmp~~eax, 3>', '<jae~~0x400dad>']}, {'block_Idx': 145, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x410]>', '<mov~~rdx, qword ptr [rsp + 0x440]>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x3ec], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x3f0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x3f4], edx>', '<cmp~~eax, 0x12>', '<jge~~0x40189b>']}, {'block_Idx': 186, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x440]>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x460]>', '<mov~~rsi, qword ptr [rsp + 0x400]>', '<mov~~qword ptr [rsp + 0x3a8], rsi>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x3b0], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x3b4], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x3b8], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x3bc], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401a72>']}, {'block_Idx': 89, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x530]>', '<sub~~eax, 0xc>', '<je~~0x401337>']}, {'block_Idx': 62, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4d8]>', '<cmp~~rax, 0>', '<jge~~0x401123>']}, {'block_Idx': 187, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x380]>', '<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x450]>', '<mov~~esi, eax>', '<call~~0x403720>']}, {'block_Idx': 80, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x520]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<shr~~eax, 0xf0>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x4ac], eax>', '<jmp~~0x401220>']}, {'block_Idx': 102, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x530]>', '<sub~~eax, 0xe>', '<je~~0x4013d0>']}, {'block_Idx': 193, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x510]>', '<mov~~edi, dword ptr [rsp + 0x3b0]>', '<mov~~esi, dword ptr [rsp + 0x3b4]>', '<mov~~rax, qword ptr [rsp + 0x440]>', '<mov~~r9d, dword ptr [rsp + 0x3bc]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, esi>', '<add~~r8d, 0x10>', '<mov~~dword ptr [rdx], r8d>', '<mov~~ecx, edi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x39c], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x3b8]>', '<mov~~dword ptr [rsp + 0x3a0], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x39c]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3a0]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x3a4], eax>', '<mov~~rax, qword ptr [rsp + 0x3a8]>', '<mov~~rdx, qword ptr [rsp + 0x3f8]>', '<mov~~edi, dword ptr [rsp + 0x3b0]>', '<mov~~esi, dword ptr [rsp + 0x3a4]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x398], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x398]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x400], rax>', '<jl~~0x4019d3>']}, {'block_Idx': 71, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4c0]>', '<mov~~ecx, dword ptr [rsp + 0x4cc]>', '<mov~~dword ptr [rsp + 0x4b4], ecx>', '<mov~~qword ptr [rsp + 0x4b8], rax>', '<cmp~~ecx, 1>', '<mov~~qword ptr [rsp + 0x4d8], rax>', '<jle~~0x4010f5>']}, {'block_Idx': 199, 'blockInsts': ['<jmp~~0x4022d4>']}, {'block_Idx': 192, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x3b0]>', '<mov~~edx, dword ptr [rsp + 0x3b4]>', '<mov~~eax, dword ptr [rsp + 0x3bc]>', '<mov~~dil, sil>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x3a4], eax>', '<jmp~~0x401b01>']}, {'block_Idx': 40, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x4f8], rax>', '<jmp~~0x400e8c>']}, {'block_Idx': 107, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x520]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<shr~~eax, 0xf0>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x494], eax>', '<jmp~~0x401442>']}, {'block_Idx': 74, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x520]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<shr~~eax, 0xf8>', '<add~~edx, 8>', '<mov~~dword ptr [rcx], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x4ac], eax>', '<jmp~~0x401220>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, rax>', '<add~~rcx, 0x38>', '<mov~~qword ptr [rsp + 0x580], rcx>', '<mov~~ecx, dword ptr [rax + 0x38]>', '<add~~ecx, 0x20>', '<mov~~dword ptr [rax + 0x38], ecx>', '<mov~~rcx, rax>', '<add~~rcx, 0x28>', '<mov~~qword ptr [rsp + 0x588], rcx>', '<mov~~rcx, rax>', '<add~~rcx, 0x3c>', '<mov~~qword ptr [rsp + 0x590], rcx>', '<mov~~rcx, rax>', '<add~~rcx, 0x54>', '<mov~~qword ptr [rsp + 0x598], rcx>', '<mov~~rcx, rax>', '<add~~rcx, 0x20>', '<mov~~qword ptr [rsp + 0x5a0], rcx>', '<mov~~qword ptr [rsp + 0x5a8], rax>', '<mov~~rdi, qword ptr [rsp + 0x580]>', '<mov~~rax, qword ptr [rsp + 0x588]>', '<mov~~edx, dword ptr [rdi]>', '<mov~~rax, qword ptr [rax]>', '<mov~~qword ptr [rsp + 0x558], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x56c], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x564], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~dword ptr [rdi], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x56c]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x568], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<mov~~dword ptr [rdi], esi>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x56c]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<mov~~dword ptr [rdi], r8d>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x590]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x570], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x574], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x578], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x57c], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400ae5>']}, {'block_Idx': 49, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x520]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rsp + 0x4f8]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x4e4], esi>', '<cmp~~esi, 0x10>', '<setg~~dil>', '<mov~~r9, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r8d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r8d>', '<mov~~r8d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r8d, r11d>', '<and~~dil, 1>', '<movzx~~edi, dil>', '<mov~~dword ptr [r9 + 0x58], r10d>', '<sub~~r8d, esi>', '<mov~~dword ptr [rdx + 0x48], r8d>', '<mov~~dword ptr [rdx + 0x4c], edi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x4e8], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x4f0], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax + 3]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x400f56>']}, {'block_Idx': 37, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x580]>', '<mov~~edx, dword ptr [rsp + 0x578]>', '<mov~~ecx, dword ptr [rax]>', '<add~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x56c]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x400977>']}, {'block_Idx': 166, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~esi, dword ptr [rsp + 0x410]>', '<mov~~edx, dword ptr [rsp + 0x3e8]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3d8], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3d8]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3dc], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x4022d4>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~esi, dword ptr [rsp + 0x608]>', '<mov~~edx, dword ptr [rsp + 0x60c]>', '<mov~~rax, qword ptr [rsp + 0x610]>', '<mov~~dword ptr [rsp + 0x5b0], edx>', '<mov~~dword ptr [rsp + 0x5b4], esi>', '<mov~~esi, edx>', '<shl~~esi, 3>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~rax, rdi>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~esi, edi>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~edx, edi>', '<mov~~rdi, rcx>', '<add~~rdi, 0x28>', '<mov~~qword ptr [rsp + 0x5b8], rdi>', '<mov~~qword ptr [rcx + 0x28], rax>', '<mov~~dword ptr [rcx + 0x3c], esi>', '<mov~~edx, edx>', '<mov~~esi, edx>', '<mov~~rdx, rax>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x5c0], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x5cc], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x400ba3>']}, {'block_Idx': 182, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x380]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x370], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x378], rax>', '<mov~~rdx, qword ptr [rsp + 0x440]>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x460]>', '<mov~~rsi, qword ptr [rsp + 0x378]>', '<mov~~qword ptr [rsp + 0x358], rsi>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x360], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x364], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x368], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x36c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401c85>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x580]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rdi, qword ptr [rsp + 0x590]>', '<mov~~r9, qword ptr [rsp + 0x588]>', '<mov~~r11d, dword ptr [rsp + 0x57c]>', '<mov~~rdx, qword ptr [rsp + 0x558]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x402cd6>']}, {'block_Idx': 168, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, qword ptr [rsp + 0x450]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x3c8], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x3d0], rax>', '<mov~~rax, qword ptr [rsp + 0x3d0]>', '<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~rdx, qword ptr [rsp + 0x3c8]>', '<mov~~esi, dword ptr [rsp + 0x3dc]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3c0], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3d0], rax>', '<jl~~0x401990>']}, {'block_Idx': 42, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x534]>', '<add~~eax, -7>', '<mov~~dword ptr [rsp + 0x50c], eax>', '<jmp~~0x400dd9>']}, {'block_Idx': 3, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~ecx, dword ptr [rsp + 0x62c]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~esi, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x604], esi>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x608], edx>', '<mov~~dword ptr [rsp + 0x60c], ecx>', '<mov~~qword ptr [rsp + 0x610], rax>', '<je~~0x400857>']}, {'block_Idx': 121, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x510]>', '<mov~~rcx, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x43c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x440], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x44c], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x448], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x44c]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401651>']}], 'cfg_edge_info': [(67, 62), (3, 4), (119, 130), (58, 62), (67, 71), (4, 6), (145, 158), (97, 87), (182, 189), (196, 188), (37, 24), (17, 24), (74, 76), (24, 11), (186, 192), (94, 97), (158, 167), (6, 11), (63, 67), (111, 119), (102, 107), (55, 4), (73, 74), (145, 157), (188, 195), (12, 21), (77, 80), (158, 168), (182, 188), (80, 76), (89, 91), (2, 4), (189, 187), (49, 58), (24, 10), (107, 87), (71, 67), (189, 196), (7, 12), (6, 10), (192, 198), (119, 131), (30, 41), (193, 199), (58, 63), (4, 7), (20, 30), (12, 20), (121, 119), (196, 189), (91, 87), (186, 193), (42, 30), (157, 166), (193, 186), (30, 40)]}]}
{'flac_decode_frame': [4196439, 4196627, 4196727, 4197566, 4197849, 4198230, 4198488, 4198767, 4198842, 4199223, 4199304, 4199376, 4200017, 4200548, 4200603, 4201019, 4201074, 4201550, 4201605]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O1/flacdec.o---before
The extraction of function: flac_decode_frame
[4196439, 4196627, 4196727, 4197566, 4197849, 4198230, 4198488, 4198767, 4198842, 4199223, 4199304, 4199376, 4200017, 4200548, 4200603, 4201019, 4201074, 4201550, 4201605]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 406 nodes and 654 edges in CFGEmulated.
It has 406 nodes and 675 edges in CDG.
It has 17209 nodes and 42788 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4196439, 4196627, 4196727, 4197566, 4197849, 4198230, 4198488, 4198767, 4198842, 4199223, 4199304, 4199376, 4200017, 4200548, 4200603, 4201019, 4201074, 4201550, 4201605]
{4197377, 4198917, 4203528, 4204040, 4195851, 4200470, 4204566, 4202006, 4199451, 4202524, 4197917, 4198944, 4198441, 4203561, 4205611, 4197422, 4195888, 4199985, 4202546, 4197939, 4201019, 4199485, 4197954, 4199490, 4198979, 4205122, 4200012, 4201550, 4204112, 4200017, 4203090, 4196439, 4198488, 4195928, 4202079, 4200548, 4197988, 4199526, 4202596, 4196973, 4199021, 4205677, 4201074, 4199026, 4197492, 4203129, 4204666, 4201605, 4203141, 4198023, 4198028, 4195980, 4203670, 4200603, 4204189, 4205215, 4199584, 4202144, 4205737, 4203177, 4199596, 4204207, 4203698, 4203188, 4202678, 4199095, 4197566, 4199107, 4204743, 4202184, 4199630, 4204240, 4196051, 4199635, 4203220, 4205782, 4204761, 4200154, 4199130, 4203743, 4203232, 4202208, 4197093, 4199142, 4205292, 4203245, 4195568, 4197109, 4198645, 4202230, 4205818, 4204794, 4196092, 4205310, 4201217, 4197121, 4198659, 4199174, 4197134, 4199186, 4196627, 4199188, 4201748, 4203284, 4198686, 4196127, 4199200, 4205343, 4199202, 4205859, 4198691, 4202787, 4200746, 4203818, 4198702, 4198704, 4199218, 4198198, 4199223, 4198716, 4199741, 4198718, 4204358, 4198730, 4205901, 4197199, 4198735, 4198225, 4195669, 4198230, 4200278, 4202328, 4197723, 4199771, 4197213, 4203358, 4201310, 4201315, 4204389, 4197225, 4200809, 4198762, 4196202, 4201835, 4202350, 4198767, 4204912, 4200306, 4201334, 4196727, 4197757, 4197246, 4205950, 4205443, 4203398, 4199304, 4201865, 4203912, 4195724, 4197772, 4204943, 4200848, 4201874, 4200342, 4196248, 4197786, 4199837, 4195742, 4197278, 4201887, 4205474, 4197283, 4199849, 4203434, 4199851, 4197805, 4202926, 4200367, 4200372, 4206006, 4198842, 4197306, 4199868, 4199866, 4201917, 4200383, 4200385, 4202433, 4201414, 4204486, 4203974, 4201419, 4200910, 4199376, 4199888, 4200915, 4197844, 4200403, 4197334, 4201943, 4202455, 4197849, 4195807, 4200420, 4196325, 4201446, 4203504, 4205554, 4205044, 4198397}
[360, 341, 317, 172, 61, 303, 155, 47, 35, 232, 358, 216, 129, 142, 193, 359, 177, 379, 38, 87, 147, 145, 81, 138, 21, 225, 325, 340, 1, 158, 14, 18, 137, 208, 349, 5, 378, 83, 82, 181, 43, 30, 45, 287, 277, 218, 350, 224, 71, 93, 280, 74, 11, 91, 66, 103, 203, 144, 310, 65, 80, 339, 109, 149, 72, 53, 237, 0, 300, 121, 24, 42, 231, 161, 194, 249, 48, 213, 107, 89, 236, 229, 9, 245, 205, 230, 253, 173, 222, 117, 25, 153, 62, 97, 209, 189, 12, 64, 178, 8, 214, 175, 191, 95, 36, 26, 160, 134, 242, 198, 54, 348, 241, 217, 68, 168, 302, 394, 211, 10, 197, 29, 4, 184, 286, 212, 56, 179, 361, 7, 15, 226, 19, 116, 170, 246, 96, 337, 186, 118, 32, 124, 34, 221, 31, 159, 113, 195, 207, 139, 154, 157, 202, 174, 326, 240, 381, 328, 169, 2, 188, 190, 67, 309, 104, 204, 112, 163, 200, 282, 6, 22, 102, 294, 223, 33, 123, 228, 115, 52, 111, 99, 293, 27, 140, 55, 347, 162, 17, 166, 244, 215, 128, 164, 100, 196, 210, 250, 234, 16, 165, 219, 79, 39, 133, 120, 88, 295, 227, 192, 327, 152, 238, 49, 167, 20, 28, 248, 151, 13, 182, 50, 220, 206, 235, 41, 338, 51, 105, 171, 176, 233, 37, 201, 254, 239, 316]
The execution time of patched slicing information extraction via angr: 0:02:49.768256
{'flac_decode_frame': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 360, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4021a9>]'}, {'block_Idx': 341, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402274>]'}, {'block_Idx': 317, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402252>, <DisassemblerInsn "mov" for 0x402259>, <DisassemblerInsn "mov" for 0x402261>, <DisassemblerInsn "xor" for 0x402264>, <DisassemblerInsn "lea" for 0x402266>, <DisassemblerInsn "mov" for 0x40226d>, <DisassemblerInsn "call" for 0x40226f>]'}, {'block_Idx': 172, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402afe>, <DisassemblerInsn "mov" for 0x402b06>, <DisassemblerInsn "add" for 0x402b09>, <DisassemblerInsn "mov" for 0x402b0d>, <DisassemblerInsn "cmp" for 0x402b15>, <DisassemblerInsn "jle" for 0x402b19>]'}, {'block_Idx': 61, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f56>, <DisassemblerInsn "mov" for 0x400f5e>, <DisassemblerInsn "mov" for 0x400f66>, <DisassemblerInsn "ror" for 0x400f69>, <DisassemblerInsn "ror" for 0x400f6d>, <DisassemblerInsn "ror" for 0x400f70>, <DisassemblerInsn "shr" for 0x400f74>, <DisassemblerInsn "mov" for 0x400f77>, <DisassemblerInsn "mov" for 0x400f7e>, <DisassemblerInsn "mov" for 0x400f84>, <DisassemblerInsn "xor" for 0x400f86>, <DisassemblerInsn "shr" for 0x400f8c>, <DisassemblerInsn "cmp" for 0x400f8f>, <DisassemblerInsn "cmovb" for 0x400f95>, <DisassemblerInsn "mov" for 0x400f98>, <DisassemblerInsn "xor" for 0x400f9d>, <DisassemblerInsn "cmp" for 0x400f9f>, <DisassemblerInsn "cmovb" for 0x400fa5>, <DisassemblerInsn "mov" for 0x400fa8>, <DisassemblerInsn "and" for 0x400faa>, <DisassemblerInsn "mov" for 0x400fb0>, <DisassemblerInsn "shr" for 0x400fb2>, <DisassemblerInsn "mov" for 0x400fb5>, <DisassemblerInsn "or" for 0x400fb7>, <DisassemblerInsn "cmp" for 0x400fba>, <DisassemblerInsn "cmove" for 0x400fbd>, <DisassemblerInsn "cmp" for 0x400fc0>, <DisassemblerInsn "cmove" for 0x400fc3>, <DisassemblerInsn "mov" for 0x400fc6>, <DisassemblerInsn "mov" for 0x400fc8>, <DisassemblerInsn "mov" for 0x400fca>, <DisassemblerInsn "movzx" for 0x400fd1>, <DisassemblerInsn "add" for 0x400fd5>, <DisassemblerInsn "mov" for 0x400fd7>, <DisassemblerInsn "sub" for 0x400fdc>, <DisassemblerInsn "mov" for 0x400fde>, <DisassemblerInsn "mov" for 0x400fe5>, <DisassemblerInsn "cmp" for 0x400fec>, <DisassemblerInsn "mov" for 0x400fef>, <DisassemblerInsn "je" for 0x400ff7>]'}, {'block_Idx': 303, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e16>, <DisassemblerInsn "mov" for 0x401e1e>, <DisassemblerInsn "mov" for 0x401e25>, <DisassemblerInsn "mov" for 0x401e2c>, <DisassemblerInsn "add" for 0x401e2e>, <DisassemblerInsn "mov" for 0x401e31>, <DisassemblerInsn "sub" for 0x401e33>, <DisassemblerInsn "add" for 0x401e36>, <DisassemblerInsn "mov" for 0x401e39>, <DisassemblerInsn "add" for 0x401e3b>, <DisassemblerInsn "mov" for 0x401e3e>, <DisassemblerInsn "mov" for 0x401e45>, <DisassemblerInsn "mov" for 0x401e4c>, <DisassemblerInsn "mov" for 0x401e53>, <DisassemblerInsn "cmp" for 0x401e5a>, <DisassemblerInsn "jle" for 0x401e5d>]'}, {'block_Idx': 155, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4014ce>]'}, {'block_Idx': 47, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007a6>, <DisassemblerInsn "mov" for 0x4007ad>, <DisassemblerInsn "mov" for 0x4007b5>, <DisassemblerInsn "mov" for 0x4007bd>, <DisassemblerInsn "mov" for 0x4007c5>, <DisassemblerInsn "mov" for 0x4007cd>, <DisassemblerInsn "mov" for 0x4007d4>, <DisassemblerInsn "add" for 0x4007d6>, <DisassemblerInsn "mov" for 0x4007d8>, <DisassemblerInsn "add" for 0x4007da>, <DisassemblerInsn "movsxd" for 0x4007dd>, <DisassemblerInsn "call" for 0x4007e0>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4006fc>, <DisassemblerInsn "mov" for 0x400704>, <DisassemblerInsn "mov" for 0x40070b>, <DisassemblerInsn "mov" for 0x400713>, <DisassemblerInsn "call" for 0x40071a>]'}, {'block_Idx': 232, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022ed>, <DisassemblerInsn "mov" for 0x4022f5>, <DisassemblerInsn "mov" for 0x4022fd>, <DisassemblerInsn "mov" for 0x402302>, <DisassemblerInsn "xor" for 0x40230a>, <DisassemblerInsn "mov" for 0x40230c>, <DisassemblerInsn "mov" for 0x402314>, <DisassemblerInsn "mov" for 0x40231c>, <DisassemblerInsn "mov" for 0x402324>, <DisassemblerInsn "mov" for 0x40232b>, <DisassemblerInsn "shl" for 0x40232e>, <DisassemblerInsn "mov" for 0x402330>, <DisassemblerInsn "mov" for 0x402338>, <DisassemblerInsn "mov" for 0x40233f>, <DisassemblerInsn "add" for 0x402342>, <DisassemblerInsn "mov" for 0x402346>, <DisassemblerInsn "movsxd" for 0x40234e>, <DisassemblerInsn "cmp" for 0x402351>, <DisassemblerInsn "mov" for 0x402354>, <DisassemblerInsn "jl" for 0x40235c>]'}, {'block_Idx': 358, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40224d>]'}, {'block_Idx': 216, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40287a>, <DisassemblerInsn "mov" for 0x402882>, <DisassemblerInsn "mov" for 0x40288a>, <DisassemblerInsn "mov" for 0x402892>, <DisassemblerInsn "add" for 0x40289a>, <DisassemblerInsn "movsxd" for 0x40289e>, <DisassemblerInsn "cmp" for 0x4028a1>, <DisassemblerInsn "mov" for 0x4028a4>, <DisassemblerInsn "mov" for 0x4028ac>, <DisassemblerInsn "mov" for 0x4028b4>, <DisassemblerInsn "jl" for 0x4028bc>]'}, {'block_Idx': 129, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401320>]'}, {'block_Idx': 142, 'blockInsts': '[<DisassemblerInsn "add" for 0x402f20>, <DisassemblerInsn "ret" for 0x402f24>]'}, {'block_Idx': 193, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40252a>, <DisassemblerInsn "mov" for 0x402532>, <DisassemblerInsn "mov" for 0x40253a>, <DisassemblerInsn "mov" for 0x402542>, <DisassemblerInsn "mov" for 0x40254a>, <DisassemblerInsn "mov" for 0x402552>, <DisassemblerInsn "mov" for 0x40255a>, <DisassemblerInsn "mov" for 0x402562>, <DisassemblerInsn "mov" for 0x40256a>, <DisassemblerInsn "mov" for 0x402572>, <DisassemblerInsn "mov" for 0x402574>, <DisassemblerInsn "mov" for 0x402579>, <DisassemblerInsn "mov" for 0x40257c>, <DisassemblerInsn "cmp" for 0x402583>, <DisassemblerInsn "je" for 0x402586>]'}, {'block_Idx': 359, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402121>]'}, {'block_Idx': 177, 'blockInsts': '[<DisassemblerInsn "lea" for 0x402970>, <DisassemblerInsn "lea" for 0x402977>, <DisassemblerInsn "mov" for 0x40297e>, <DisassemblerInsn "lea" for 0x402983>, <DisassemblerInsn "call" for 0x40298a>]'}, {'block_Idx': 379, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4022b2>]'}, {'block_Idx': 38, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b69>, <DisassemblerInsn "mov" for 0x400b71>, <DisassemblerInsn "mov" for 0x400b78>, <DisassemblerInsn "add" for 0x400b7a>, <DisassemblerInsn "mov" for 0x400b7c>, <DisassemblerInsn "mov" for 0x400b7e>, <DisassemblerInsn "mov" for 0x400b85>, <DisassemblerInsn "shr" for 0x400b8a>, <DisassemblerInsn "mov" for 0x400b8c>, <DisassemblerInsn "and" for 0x400b93>, <DisassemblerInsn "cmp" for 0x400b95>, <DisassemblerInsn "je" for 0x400b98>]'}, {'block_Idx': 87, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40114f>, <DisassemblerInsn "mov" for 0x401157>, <DisassemblerInsn "xor" for 0x40115a>, <DisassemblerInsn "lea" for 0x40115c>, <DisassemblerInsn "mov" for 0x401163>, <DisassemblerInsn "call" for 0x401165>]'}, {'block_Idx': 147, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40141b>, <DisassemblerInsn "mov" for 0x401422>, <DisassemblerInsn "mov" for 0x40142a>, <DisassemblerInsn "xor" for 0x40142d>, <DisassemblerInsn "lea" for 0x40142f>, <DisassemblerInsn "mov" for 0x401436>, <DisassemblerInsn "call" for 0x401438>]'}, {'block_Idx': 145, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40153d>, <DisassemblerInsn "add" for 0x401545>, <DisassemblerInsn "mov" for 0x401549>, <DisassemblerInsn "xor" for 0x401551>, <DisassemblerInsn "mov" for 0x401553>, <DisassemblerInsn "mov" for 0x40155b>, <DisassemblerInsn "mov" for 0x401563>, <DisassemblerInsn "mov" for 0x40156b>, <DisassemblerInsn "mov" for 0x401573>, <DisassemblerInsn "mov" for 0x40157b>, <DisassemblerInsn "mov" for 0x401583>, <DisassemblerInsn "mov" for 0x401585>, <DisassemblerInsn "mov" for 0x40158c>, <DisassemblerInsn "mov" for 0x40158e>, <DisassemblerInsn "mov" for 0x401590>, <DisassemblerInsn "cmp" for 0x401597>, <DisassemblerInsn "jne" for 0x40159b>]'}, {'block_Idx': 81, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401058>, <DisassemblerInsn "mov" for 0x401060>, <DisassemblerInsn "mov" for 0x401068>, <DisassemblerInsn "mov" for 0x401070>, <DisassemblerInsn "add" for 0x401077>, <DisassemblerInsn "mov" for 0x40107a>, <DisassemblerInsn "mov" for 0x401081>, <DisassemblerInsn "mov" for 0x401083>, <DisassemblerInsn "sar" for 0x401085>, <DisassemblerInsn "movsxd" for 0x401088>, <DisassemblerInsn "mov" for 0x40108b>, <DisassemblerInsn "ror" for 0x40108e>, <DisassemblerInsn "ror" for 0x401092>, <DisassemblerInsn "ror" for 0x401095>, <DisassemblerInsn "mov" for 0x401099>, <DisassemblerInsn "and" for 0x40109b>, <DisassemblerInsn "shl" for 0x40109e>, <DisassemblerInsn "mov" for 0x4010a0>, <DisassemblerInsn "shr" for 0x4010a7>, <DisassemblerInsn "add" for 0x4010aa>, <DisassemblerInsn "mov" for 0x4010ad>, <DisassemblerInsn "add" for 0x4010af>, <DisassemblerInsn "cmp" for 0x4010b2>, <DisassemblerInsn "setb" for 0x4010b5>, <DisassemblerInsn "mov" for 0x4010b9>, <DisassemblerInsn "shl" for 0x4010bc>, <DisassemblerInsn "movsxd" for 0x4010c0>, <DisassemblerInsn "add" for 0x4010c3>, <DisassemblerInsn "cmp" for 0x4010c6>, <DisassemblerInsn "cmovb" for 0x4010c9>, <DisassemblerInsn "mov" for 0x4010cd>, <DisassemblerInsn "test" for 0x4010d4>, <DisassemblerInsn "mov" for 0x4010d8>, <DisassemblerInsn "mov" for 0x4010e0>, <DisassemblerInsn "mov" for 0x4010e7>, <DisassemblerInsn "jne" for 0x4010ef>]'}, {'block_Idx': 138, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014ac>, <DisassemblerInsn "mov" for 0x4014b3>, <DisassemblerInsn "mov" for 0x4014bb>, <DisassemblerInsn "xor" for 0x4014be>, <DisassemblerInsn "lea" for 0x4014c0>, <DisassemblerInsn "mov" for 0x4014c7>, <DisassemblerInsn "call" for 0x4014c9>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d5b>, <DisassemblerInsn "mov" for 0x400d62>, <DisassemblerInsn "mov" for 0x400d6a>, <DisassemblerInsn "add" for 0x400d6d>, <DisassemblerInsn "xor" for 0x400d70>, <DisassemblerInsn "cmp" for 0x400d72>, <DisassemblerInsn "mov" for 0x400d74>, <DisassemblerInsn "je" for 0x400d7b>]'}, {'block_Idx': 225, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022e0>, <DisassemblerInsn "cmp" for 0x4022e8>, <DisassemblerInsn "jle" for 0x4022eb>]'}, {'block_Idx': 325, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ee0>, <DisassemblerInsn "mov" for 0x401ee7>, <DisassemblerInsn "cmp" for 0x401eee>, <DisassemblerInsn "jle" for 0x401ef0>]'}, {'block_Idx': 340, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402032>, <DisassemblerInsn "mov" for 0x402039>, <DisassemblerInsn "mov" for 0x402040>, <DisassemblerInsn "movsxd" for 0x402047>, <DisassemblerInsn "movsxd" for 0x40204a>, <DisassemblerInsn "mov" for 0x40204d>, <DisassemblerInsn "mov" for 0x402055>, <DisassemblerInsn "mov" for 0x40205d>, <DisassemblerInsn "mov" for 0x402064>, <DisassemblerInsn "mov" for 0x40206b>, <DisassemblerInsn "mov" for 0x402073>, <DisassemblerInsn "mov" for 0x40207b>, <DisassemblerInsn "add" for 0x402083>, <DisassemblerInsn "mov" for 0x402086>, <DisassemblerInsn "mov" for 0x40208d>, <DisassemblerInsn "add" for 0x402090>, <DisassemblerInsn "mov" for 0x402094>, <DisassemblerInsn "cmp" for 0x40209c>, <DisassemblerInsn "mov" for 0x40209f>, <DisassemblerInsn "mov" for 0x4020a7>, <DisassemblerInsn "je" for 0x4020ae>]'}, {'block_Idx': 1, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400555>, <DisassemblerInsn "mov" for 0x40055d>, <DisassemblerInsn "mov" for 0x400565>, <DisassemblerInsn "mov" for 0x40056c>, <DisassemblerInsn "cmp" for 0x400571>, <DisassemblerInsn "cmovg" for 0x400574>, <DisassemblerInsn "mov" for 0x400577>, <DisassemblerInsn "mov" for 0x400579>, <DisassemblerInsn "add" for 0x400580>, <DisassemblerInsn "call" for 0x400587>]'}, {'block_Idx': 158, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023f0>, <DisassemblerInsn "lea" for 0x4023f8>, <DisassemblerInsn "movsxd" for 0x4023ff>, <DisassemblerInsn "add" for 0x402403>, <DisassemblerInsn "jmp" for 0x402406>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bba>, <DisassemblerInsn "mov" for 0x400bc2>, <DisassemblerInsn "xor" for 0x400bc6>, <DisassemblerInsn "lea" for 0x400bc8>, <DisassemblerInsn "mov" for 0x400bcf>, <DisassemblerInsn "call" for 0x400bd1>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b7e>, <DisassemblerInsn "mov" for 0x400b85>, <DisassemblerInsn "shr" for 0x400b8a>, <DisassemblerInsn "mov" for 0x400b8c>, <DisassemblerInsn "and" for 0x400b93>, <DisassemblerInsn "cmp" for 0x400b95>, <DisassemblerInsn "je" for 0x400b98>]'}, {'block_Idx': 137, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014d3>, <DisassemblerInsn "mov" for 0x4014db>, <DisassemblerInsn "mov" for 0x4014e3>, <DisassemblerInsn "mov" for 0x4014ea>, <DisassemblerInsn "mov" for 0x4014f2>, <DisassemblerInsn "mov" for 0x4014f9>, <DisassemblerInsn "mov" for 0x401501>, <DisassemblerInsn "mov" for 0x401509>, <DisassemblerInsn "add" for 0x40150c>, <DisassemblerInsn "mov" for 0x401510>, <DisassemblerInsn "mov" for 0x401518>, <DisassemblerInsn "mov" for 0x40151c>, <DisassemblerInsn "mov" for 0x401520>, <DisassemblerInsn "mov" for 0x401522>, <DisassemblerInsn "add" for 0x401525>, <DisassemblerInsn "mov" for 0x401529>, <DisassemblerInsn "mov" for 0x401531>, <DisassemblerInsn "cmp" for 0x401534>, <DisassemblerInsn "jle" for 0x401537>]'}, {'block_Idx': 208, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4029f4>, <DisassemblerInsn "mov" for 0x4029fc>, <DisassemblerInsn "mov" for 0x402a03>, <DisassemblerInsn "mov" for 0x402a0b>, <DisassemblerInsn "mov" for 0x402a12>, <DisassemblerInsn "shl" for 0x402a14>, <DisassemblerInsn "mov" for 0x402a16>, <DisassemblerInsn "mov" for 0x402a18>, <DisassemblerInsn "mov" for 0x402a1a>, <DisassemblerInsn "shl" for 0x402a1c>, <DisassemblerInsn "mov" for 0x402a1e>, <DisassemblerInsn "mov" for 0x402a26>, <DisassemblerInsn "add" for 0x402a29>, <DisassemblerInsn "mov" for 0x402a2d>, <DisassemblerInsn "mov" for 0x402a30>, <DisassemblerInsn "mov" for 0x402a38>, <DisassemblerInsn "jmp" for 0x402a40>]'}, {'block_Idx': 349, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402123>, <DisassemblerInsn "mov" for 0x40212b>, <DisassemblerInsn "mov" for 0x402132>, <DisassemblerInsn "mov" for 0x402139>, <DisassemblerInsn "mov" for 0x402141>, <DisassemblerInsn "mov" for 0x402149>, <DisassemblerInsn "add" for 0x402151>, <DisassemblerInsn "mov" for 0x402155>, <DisassemblerInsn "mov" for 0x40215c>, <DisassemblerInsn "add" for 0x40215e>, <DisassemblerInsn "mov" for 0x402160>, <DisassemblerInsn "mov" for 0x402167>, <DisassemblerInsn "add" for 0x402169>, <DisassemblerInsn "mov" for 0x40216c>, <DisassemblerInsn "mov" for 0x402173>, <DisassemblerInsn "add" for 0x402177>, <DisassemblerInsn "mov" for 0x40217b>, <DisassemblerInsn "cmp" for 0x402183>, <DisassemblerInsn "mov" for 0x402186>, <DisassemblerInsn "mov" for 0x40218e>, <DisassemblerInsn "mov" for 0x402195>, <DisassemblerInsn "mov" for 0x40219c>, <DisassemblerInsn "je" for 0x4021a3>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4005df>, <DisassemblerInsn "mov" for 0x4005e7>, <DisassemblerInsn "add" for 0x4005ea>, <DisassemblerInsn "mov" for 0x4005f1>, <DisassemblerInsn "mov" for 0x4005f9>, <DisassemblerInsn "mov" for 0x4005ff>, <DisassemblerInsn "cmp" for 0x400606>, <DisassemblerInsn "jb" for 0x400609>]'}, {'block_Idx': 378, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x4022a9>, <DisassemblerInsn "jl" for 0x4022ac>]'}, {'block_Idx': 83, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024b2>, <DisassemblerInsn "mov" for 0x4024ba>, <DisassemblerInsn "mov" for 0x4024c4>, <DisassemblerInsn "mov" for 0x4024ce>, <DisassemblerInsn "mov" for 0x4024d3>, <DisassemblerInsn "jmp" for 0x4024da>]'}, {'block_Idx': 82, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400f51>]'}, {'block_Idx': 181, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024df>, <DisassemblerInsn "mov" for 0x4024e7>, <DisassemblerInsn "mov" for 0x4024ef>, <DisassemblerInsn "mov" for 0x4024f7>, <DisassemblerInsn "mov" for 0x4024ff>, <DisassemblerInsn "xor" for 0x402507>, <DisassemblerInsn "cmp" for 0x402509>, <DisassemblerInsn "mov" for 0x40250c>, <DisassemblerInsn "mov" for 0x402514>, <DisassemblerInsn "mov" for 0x40251c>, <DisassemblerInsn "jle" for 0x402524>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d9a>, <DisassemblerInsn "add" for 0x400da1>, <DisassemblerInsn "mov" for 0x400da4>, <DisassemblerInsn "jmp" for 0x400dab>]'}, {'block_Idx': 30, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402cfa>, <DisassemblerInsn "mov" for 0x402d02>, <DisassemblerInsn "mov" for 0x402d09>, <DisassemblerInsn "mov" for 0x402d0d>, <DisassemblerInsn "sub" for 0x402d11>, <DisassemblerInsn "xor" for 0x402d13>, <DisassemblerInsn "lea" for 0x402d15>, <DisassemblerInsn "mov" for 0x402d1c>, <DisassemblerInsn "call" for 0x402d1e>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c01>, <DisassemblerInsn "mov" for 0x400c08>, <DisassemblerInsn "mov" for 0x400c10>, <DisassemblerInsn "mov" for 0x400c13>, <DisassemblerInsn "mov" for 0x400c1b>, <DisassemblerInsn "and" for 0x400c1d>, <DisassemblerInsn "mov" for 0x400c20>, <DisassemblerInsn "mov" for 0x400c27>, <DisassemblerInsn "mov" for 0x400c2e>, <DisassemblerInsn "mov" for 0x400c35>, <DisassemblerInsn "mov" for 0x400c3d>, <DisassemblerInsn "mov" for 0x400c44>, <DisassemblerInsn "sar" for 0x400c4b>, <DisassemblerInsn "movsxd" for 0x400c4e>, <DisassemblerInsn "mov" for 0x400c51>, <DisassemblerInsn "ror" for 0x400c54>, <DisassemblerInsn "ror" for 0x400c58>, <DisassemblerInsn "ror" for 0x400c5b>, <DisassemblerInsn "shl" for 0x400c5f>, <DisassemblerInsn "shr" for 0x400c61>, <DisassemblerInsn "and" for 0x400c64>, <DisassemblerInsn "cmp" for 0x400c69>, <DisassemblerInsn "je" for 0x400c6e>]'}, {'block_Idx': 287, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d9f>, <DisassemblerInsn "mov" for 0x401da7>, <DisassemblerInsn "add" for 0x401dae>, <DisassemblerInsn "mov" for 0x401db1>, <DisassemblerInsn "mov" for 0x401db3>, <DisassemblerInsn "mov" for 0x401db6>, <DisassemblerInsn "mov" for 0x401dbd>, <DisassemblerInsn "mov" for 0x401dc4>, <DisassemblerInsn "mov" for 0x401dcb>, <DisassemblerInsn "cmp" for 0x401dd2>, <DisassemblerInsn "jle" for 0x401dd5>]'}, {'block_Idx': 277, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x401d89>, <DisassemblerInsn "jl" for 0x401d8c>]'}, {'block_Idx': 218, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402a9f>, <DisassemblerInsn "mov" for 0x402aa7>, <DisassemblerInsn "mov" for 0x402aaf>, <DisassemblerInsn "mov" for 0x402ab7>, <DisassemblerInsn "add" for 0x402abf>, <DisassemblerInsn "movsxd" for 0x402ac3>, <DisassemblerInsn "cmp" for 0x402ac6>, <DisassemblerInsn "mov" for 0x402ac9>, <DisassemblerInsn "mov" for 0x402ad1>, <DisassemblerInsn "mov" for 0x402ad9>, <DisassemblerInsn "jl" for 0x402ae1>]'}, {'block_Idx': 350, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4020b4>]'}, {'block_Idx': 224, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40235e>, <DisassemblerInsn "mov" for 0x402366>, <DisassemblerInsn "add" for 0x40236e>, <DisassemblerInsn "movsxd" for 0x402372>, <DisassemblerInsn "cmp" for 0x402375>, <DisassemblerInsn "mov" for 0x402378>, <DisassemblerInsn "jl" for 0x402380>]'}, {'block_Idx': 71, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010f5>, <DisassemblerInsn "cmp" for 0x4010fd>, <DisassemblerInsn "jge" for 0x401101>]'}, {'block_Idx': 93, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401130>, <DisassemblerInsn "sub" for 0x401137>, <DisassemblerInsn "je" for 0x40113a>]'}, {'block_Idx': 280, 'blockInsts': '[<DisassemblerInsn "sub" for 0x403720>, <DisassemblerInsn "mov" for 0x403727>, <DisassemblerInsn "mov" for 0x40372e>, <DisassemblerInsn "mov" for 0x403735>, <DisassemblerInsn "mov" for 0x40373d>, <DisassemblerInsn "add" for 0x403740>, <DisassemblerInsn "mov" for 0x403744>, <DisassemblerInsn "mov" for 0x40374c>, <DisassemblerInsn "mov" for 0x40374f>, <DisassemblerInsn "mov" for 0x403756>, <DisassemblerInsn "mov" for 0x40375a>, <DisassemblerInsn "mov" for 0x403762>, <DisassemblerInsn "sar" for 0x403764>, <DisassemblerInsn "movsxd" for 0x403767>, <DisassemblerInsn "mov" for 0x40376a>, <DisassemblerInsn "ror" for 0x40376d>, <DisassemblerInsn "ror" for 0x403771>, <DisassemblerInsn "ror" for 0x403774>, <DisassemblerInsn "and" for 0x403778>, <DisassemblerInsn "shl" for 0x40377b>, <DisassemblerInsn "mov" for 0x40377d>, <DisassemblerInsn "shr" for 0x403784>, <DisassemblerInsn "mov" for 0x403787>, <DisassemblerInsn "add" for 0x40378e>, <DisassemblerInsn "mov" for 0x403791>, <DisassemblerInsn "mov" for 0x403798>, <DisassemblerInsn "cmp" for 0x40379b>, <DisassemblerInsn "jle" for 0x40379e>]'}, {'block_Idx': 74, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e87>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ae5>, <DisassemblerInsn "cmp" for 0x400aec>, <DisassemblerInsn "je" for 0x400aef>]'}, {'block_Idx': 91, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40111e>]'}, {'block_Idx': 66, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400cb9>]'}, {'block_Idx': 103, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401243>, <DisassemblerInsn "mov" for 0x40124b>, <DisassemblerInsn "mov" for 0x401252>, <DisassemblerInsn "mov" for 0x40125a>, <DisassemblerInsn "xor" for 0x40125d>, <DisassemblerInsn "lea" for 0x40125f>, <DisassemblerInsn "mov" for 0x401266>, <DisassemblerInsn "call" for 0x401268>]'}, {'block_Idx': 203, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c2b>, <DisassemblerInsn "mov" for 0x402c30>, <DisassemblerInsn "mov" for 0x402c35>, <DisassemblerInsn "mov" for 0x402c39>, <DisassemblerInsn "mov" for 0x402c3d>, <DisassemblerInsn "mov" for 0x402c42>, <DisassemblerInsn "mov" for 0x402c44>, <DisassemblerInsn "shl" for 0x402c48>, <DisassemblerInsn "mov" for 0x402c4a>, <DisassemblerInsn "mov" for 0x402c4e>, <DisassemblerInsn "shl" for 0x402c51>, <DisassemblerInsn "mov" for 0x402c53>, <DisassemblerInsn "mov" for 0x402c55>, <DisassemblerInsn "mov" for 0x402c58>, <DisassemblerInsn "add" for 0x402c5b>, <DisassemblerInsn "mov" for 0x402c5f>, <DisassemblerInsn "mov" for 0x402c63>, <DisassemblerInsn "mov" for 0x402c68>, <DisassemblerInsn "mov" for 0x402c6d>, <DisassemblerInsn "mov" for 0x402c75>, <DisassemblerInsn "mov" for 0x402c7a>, <DisassemblerInsn "mov" for 0x402c7f>, <DisassemblerInsn "add" for 0x402c84>, <DisassemblerInsn "movsxd" for 0x402c88>, <DisassemblerInsn "cmp" for 0x402c8b>, <DisassemblerInsn "mov" for 0x402c8e>, <DisassemblerInsn "mov" for 0x402c93>, <DisassemblerInsn "mov" for 0x402c9b>, <DisassemblerInsn "jl" for 0x402ca3>]'}, {'block_Idx': 144, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402386>, <DisassemblerInsn "mov" for 0x40238e>, <DisassemblerInsn "mov" for 0x402390>, <DisassemblerInsn "xor" for 0x402397>, <DisassemblerInsn "sub" for 0x402399>, <DisassemblerInsn "and" for 0x40239b>, <DisassemblerInsn "mov" for 0x40239e>, <DisassemblerInsn "cmp" for 0x4023a5>, <DisassemblerInsn "je" for 0x4023a8>]'}, {'block_Idx': 310, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e5f>, <DisassemblerInsn "mov" for 0x401e66>, <DisassemblerInsn "mov" for 0x401e6e>, <DisassemblerInsn "mov" for 0x401e75>, <DisassemblerInsn "add" for 0x401e77>, <DisassemblerInsn "mov" for 0x401e7a>, <DisassemblerInsn "mov" for 0x401e7c>, <DisassemblerInsn "mov" for 0x401e7f>, <DisassemblerInsn "add" for 0x401e81>, <DisassemblerInsn "mov" for 0x401e84>, <DisassemblerInsn "mov" for 0x401e86>, <DisassemblerInsn "shl" for 0x401e89>, <DisassemblerInsn "add" for 0x401e8b>, <DisassemblerInsn "mov" for 0x401e8e>, <DisassemblerInsn "mov" for 0x401e90>, <DisassemblerInsn "add" for 0x401e93>, <DisassemblerInsn "add" for 0x401e95>, <DisassemblerInsn "sub" for 0x401e97>, <DisassemblerInsn "mov" for 0x401e99>, <DisassemblerInsn "mov" for 0x401ea0>, <DisassemblerInsn "mov" for 0x401ea7>, <DisassemblerInsn "mov" for 0x401eae>, <DisassemblerInsn "mov" for 0x401eb5>, <DisassemblerInsn "mov" for 0x401eb7>, <DisassemblerInsn "sub" for 0x401ebf>, <DisassemblerInsn "ja" for 0x401ec2>]'}, {'block_Idx': 65, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c2e>, <DisassemblerInsn "mov" for 0x400c35>, <DisassemblerInsn "mov" for 0x400c3d>, <DisassemblerInsn "mov" for 0x400c44>, <DisassemblerInsn "sar" for 0x400c4b>, <DisassemblerInsn "movsxd" for 0x400c4e>, <DisassemblerInsn "mov" for 0x400c51>, <DisassemblerInsn "ror" for 0x400c54>, <DisassemblerInsn "ror" for 0x400c58>, <DisassemblerInsn "ror" for 0x400c5b>, <DisassemblerInsn "shl" for 0x400c5f>, <DisassemblerInsn "shr" for 0x400c61>, <DisassemblerInsn "and" for 0x400c64>, <DisassemblerInsn "cmp" for 0x400c69>, <DisassemblerInsn "je" for 0x400c6e>]'}, {'block_Idx': 80, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401123>, <DisassemblerInsn "test" for 0x40112a>, <DisassemblerInsn "je" for 0x40112c>]'}, {'block_Idx': 339, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f6e>, <DisassemblerInsn "mov" for 0x401f75>, <DisassemblerInsn "mov" for 0x401f7c>, <DisassemblerInsn "mov" for 0x401f83>, <DisassemblerInsn "mov" for 0x401f8a>, <DisassemblerInsn "movsxd" for 0x401f91>, <DisassemblerInsn "movsxd" for 0x401f94>, <DisassemblerInsn "mov" for 0x401f97>, <DisassemblerInsn "mov" for 0x401f9f>, <DisassemblerInsn "mov" for 0x401fa7>, <DisassemblerInsn "mov" for 0x401fae>, <DisassemblerInsn "mov" for 0x401fb5>, <DisassemblerInsn "jmp" for 0x401fbc>]'}, {'block_Idx': 109, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401205>, <DisassemblerInsn "movsxd" for 0x40120c>, <DisassemblerInsn "lea" for 0x40120f>, <DisassemblerInsn "mov" for 0x401216>, <DisassemblerInsn "mov" for 0x401219>, <DisassemblerInsn "mov" for 0x401220>, <DisassemblerInsn "mov" for 0x401228>, <DisassemblerInsn "mov" for 0x40122f>, <DisassemblerInsn "mov" for 0x401236>, <DisassemblerInsn "mov" for 0x401238>, <DisassemblerInsn "cmp" for 0x40123f>, <DisassemblerInsn "jle" for 0x401241>]'}, {'block_Idx': 149, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b4f>, <DisassemblerInsn "mov" for 0x400b57>, <DisassemblerInsn "mov" for 0x400b5d>, <DisassemblerInsn "cmp" for 0x400b64>, <DisassemblerInsn "jle" for 0x400b67>]'}, {'block_Idx': 72, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ffd>, <DisassemblerInsn "mov" for 0x401004>, <DisassemblerInsn "mov" for 0x40100b>, <DisassemblerInsn "mov" for 0x401010>, <DisassemblerInsn "shr" for 0x401012>, <DisassemblerInsn "mov" for 0x401014>, <DisassemblerInsn "and" for 0x401016>, <DisassemblerInsn "mov" for 0x401018>, <DisassemblerInsn "mov" for 0x40101a>, <DisassemblerInsn "mov" for 0x401022>, <DisassemblerInsn "mov" for 0x401029>, <DisassemblerInsn "mov" for 0x401031>, <DisassemblerInsn "mov" for 0x401038>, <DisassemblerInsn "mov" for 0x40103f>, <DisassemblerInsn "cmp" for 0x401047>, <DisassemblerInsn "mov" for 0x40104a>, <DisassemblerInsn "jle" for 0x401052>]'}, {'block_Idx': 53, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e42>, <DisassemblerInsn "movsxd" for 0x400e49>, <DisassemblerInsn "lea" for 0x400e4c>, <DisassemblerInsn "shl" for 0x400e53>, <DisassemblerInsn "add" for 0x400e57>, <DisassemblerInsn "mov" for 0x400e5a>, <DisassemblerInsn "jmp" for 0x400e62>]'}, {'block_Idx': 237, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402285>, <DisassemblerInsn "mov" for 0x40228d>, <DisassemblerInsn "mov" for 0x402295>, <DisassemblerInsn "and" for 0x40229c>, <DisassemblerInsn "add" for 0x40229f>, <DisassemblerInsn "mov" for 0x4022a2>, <DisassemblerInsn "call" for 0x4022a4>]'}, {'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "sub" for 0x4004f0>, <DisassemblerInsn "mov" for 0x4004f7>, <DisassemblerInsn "mov" for 0x4004ff>, <DisassemblerInsn "mov" for 0x400507>, <DisassemblerInsn "mov" for 0x40050f>, <DisassemblerInsn "mov" for 0x400516>, <DisassemblerInsn "mov" for 0x40051e>, <DisassemblerInsn "mov" for 0x400521>, <DisassemblerInsn "mov" for 0x400529>, <DisassemblerInsn "mov" for 0x400531>, <DisassemblerInsn "mov" for 0x400533>, <DisassemblerInsn "mov" for 0x40053a>, <DisassemblerInsn "mov" for 0x400540>, <DisassemblerInsn "add" for 0x400543>, <DisassemblerInsn "mov" for 0x400547>, <DisassemblerInsn "cmp" for 0x40054f>, <DisassemblerInsn "jne" for 0x400553>]'}, {'block_Idx': 300, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403fe5>, <DisassemblerInsn "add" for 0x403fec>, <DisassemblerInsn "ret" for 0x403ff3>]'}, {'block_Idx': 121, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401312>]'}, {'block_Idx': 24, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4006d3>, <DisassemblerInsn "mov" for 0x4006db>, <DisassemblerInsn "mov" for 0x4006e2>, <DisassemblerInsn "add" for 0x4006e5>, <DisassemblerInsn "mov" for 0x4006ec>, <DisassemblerInsn "cmp" for 0x4006f4>, <DisassemblerInsn "jae" for 0x4006fa>]'}, {'block_Idx': 42, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e33>, <DisassemblerInsn "and" for 0x400e3a>, <DisassemblerInsn "cmp" for 0x400e3d>, <DisassemblerInsn "je" for 0x400e40>]'}, {'block_Idx': 231, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40155b>, <DisassemblerInsn "mov" for 0x401563>, <DisassemblerInsn "mov" for 0x40156b>, <DisassemblerInsn "mov" for 0x401573>, <DisassemblerInsn "mov" for 0x40157b>, <DisassemblerInsn "mov" for 0x401583>, <DisassemblerInsn "mov" for 0x401585>, <DisassemblerInsn "mov" for 0x40158c>, <DisassemblerInsn "mov" for 0x40158e>, <DisassemblerInsn "mov" for 0x401590>, <DisassemblerInsn "cmp" for 0x401597>, <DisassemblerInsn "jne" for 0x40159b>]'}, {'block_Idx': 161, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4015a9>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ba2>, <DisassemblerInsn "mov" for 0x402ba7>, <DisassemblerInsn "mov" for 0x402bac>, <DisassemblerInsn "mov" for 0x402bb1>, <DisassemblerInsn "mov" for 0x402bb6>, <DisassemblerInsn "mov" for 0x402bbe>, <DisassemblerInsn "mov" for 0x402bc6>, <DisassemblerInsn "mov" for 0x402bcb>, <DisassemblerInsn "mov" for 0x402bd0>, <DisassemblerInsn "mov" for 0x402bd5>, <DisassemblerInsn "mov" for 0x402bd8>, <DisassemblerInsn "mov" for 0x402bdb>, <DisassemblerInsn "mov" for 0x402bdd>, <DisassemblerInsn "sar" for 0x402bdf>, <DisassemblerInsn "sub" for 0x402be1>, <DisassemblerInsn "mov" for 0x402be3>, <DisassemblerInsn "add" for 0x402be7>, <DisassemblerInsn "mov" for 0x402be9>, <DisassemblerInsn "cmp" for 0x402bed>, <DisassemblerInsn "je" for 0x402bf0>]'}, {'block_Idx': 249, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401be6>, <DisassemblerInsn "mov" for 0x401bee>, <DisassemblerInsn "mov" for 0x401bf6>, <DisassemblerInsn "mov" for 0x401bfe>, <DisassemblerInsn "mov" for 0x401c06>, <DisassemblerInsn "mov" for 0x401c0e>, <DisassemblerInsn "mov" for 0x401c10>, <DisassemblerInsn "mov" for 0x401c17>, <DisassemblerInsn "mov" for 0x401c19>, <DisassemblerInsn "mov" for 0x401c20>, <DisassemblerInsn "sar" for 0x401c22>, <DisassemblerInsn "movsxd" for 0x401c25>, <DisassemblerInsn "mov" for 0x401c28>, <DisassemblerInsn "ror" for 0x401c2b>, <DisassemblerInsn "ror" for 0x401c2f>, <DisassemblerInsn "ror" for 0x401c32>, <DisassemblerInsn "and" for 0x401c36>, <DisassemblerInsn "mov" for 0x401c39>, <DisassemblerInsn "shl" for 0x401c40>, <DisassemblerInsn "mov" for 0x401c42>, <DisassemblerInsn "cmp" for 0x401c49>, <DisassemblerInsn "jge" for 0x401c4c>]'}, {'block_Idx': 48, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40076a>, <DisassemblerInsn "mov" for 0x400771>, <DisassemblerInsn "mov" for 0x400778>, <DisassemblerInsn "mov" for 0x400780>, <DisassemblerInsn "mov" for 0x400787>, <DisassemblerInsn "mov" for 0x400789>, <DisassemblerInsn "add" for 0x40078c>, <DisassemblerInsn "mov" for 0x40078f>, <DisassemblerInsn "mov" for 0x400791>, <DisassemblerInsn "call" for 0x400793>]'}, {'block_Idx': 213, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402608>, <DisassemblerInsn "mov" for 0x402610>, <DisassemblerInsn "mov" for 0x402618>, <DisassemblerInsn "mov" for 0x402620>, <DisassemblerInsn "add" for 0x402628>, <DisassemblerInsn "movsxd" for 0x40262c>, <DisassemblerInsn "cmp" for 0x40262f>, <DisassemblerInsn "mov" for 0x402632>, <DisassemblerInsn "mov" for 0x40263a>, <DisassemblerInsn "mov" for 0x402642>, <DisassemblerInsn "jl" for 0x40264a>]'}, {'block_Idx': 107, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012b7>, <DisassemblerInsn "cmp" for 0x4012be>, <DisassemblerInsn "jne" for 0x4012c1>]'}, {'block_Idx': 89, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401029>, <DisassemblerInsn "mov" for 0x401031>, <DisassemblerInsn "mov" for 0x401038>, <DisassemblerInsn "mov" for 0x40103f>, <DisassemblerInsn "cmp" for 0x401047>, <DisassemblerInsn "mov" for 0x40104a>, <DisassemblerInsn "jle" for 0x401052>]'}, {'block_Idx': 236, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022b4>, <DisassemblerInsn "mov" for 0x4022bc>, <DisassemblerInsn "xor" for 0x4022bf>, <DisassemblerInsn "lea" for 0x4022c1>, <DisassemblerInsn "mov" for 0x4022c8>, <DisassemblerInsn "call" for 0x4022ca>]'}, {'block_Idx': 229, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b76>, <DisassemblerInsn "mov" for 0x401b7e>, <DisassemblerInsn "mov" for 0x401b86>, <DisassemblerInsn "mov" for 0x401b8e>, <DisassemblerInsn "and" for 0x401b95>, <DisassemblerInsn "mov" for 0x401b98>, <DisassemblerInsn "mov" for 0x401b9f>, <DisassemblerInsn "mov" for 0x401ba1>, <DisassemblerInsn "mov" for 0x401ba8>, <DisassemblerInsn "mov" for 0x401bad>, <DisassemblerInsn "cmp" for 0x401bb5>, <DisassemblerInsn "setg" for 0x401bb8>, <DisassemblerInsn "mov" for 0x401bbb>, <DisassemblerInsn "test" for 0x401bc2>, <DisassemblerInsn "jne" for 0x401bc4>]'}, {'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400630>, <DisassemblerInsn "mov" for 0x400637>, <DisassemblerInsn "mov" for 0x40063e>, <DisassemblerInsn "xor" for 0x400645>, <DisassemblerInsn "sub" for 0x400647>, <DisassemblerInsn "cmovb" for 0x400649>, <DisassemblerInsn "cmp" for 0x40064c>, <DisassemblerInsn "cmovb" for 0x40064e>, <DisassemblerInsn "mov" for 0x400651>, <DisassemblerInsn "mov" for 0x400658>, <DisassemblerInsn "mov" for 0x40065f>, <DisassemblerInsn "mov" for 0x400666>, <DisassemblerInsn "mov" for 0x40066d>, <DisassemblerInsn "add" for 0x40066f>, <DisassemblerInsn "mov" for 0x400671>, <DisassemblerInsn "mov" for 0x400678>, <DisassemblerInsn "cmp" for 0x40067d>, <DisassemblerInsn "mov" for 0x40067f>, <DisassemblerInsn "jb" for 0x400686>]'}, {'block_Idx': 245, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a3b>, <DisassemblerInsn "mov" for 0x401a42>, <DisassemblerInsn "mov" for 0x401a49>, <DisassemblerInsn "mov" for 0x401a50>, <DisassemblerInsn "xor" for 0x401a53>, <DisassemblerInsn "sub" for 0x401a55>, <DisassemblerInsn "shr" for 0x401a58>, <DisassemblerInsn "mov" for 0x401a5a>, <DisassemblerInsn "add" for 0x401a62>, <DisassemblerInsn "mov" for 0x401a64>, <DisassemblerInsn "mov" for 0x401a66>, <DisassemblerInsn "jmp" for 0x401a6d>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402816>, <DisassemblerInsn "mov" for 0x40281e>, <DisassemblerInsn "mov" for 0x402826>, <DisassemblerInsn "mov" for 0x40282d>, <DisassemblerInsn "mov" for 0x402834>, <DisassemblerInsn "mov" for 0x40283c>, <DisassemblerInsn "mov" for 0x40283e>, <DisassemblerInsn "mov" for 0x402845>, <DisassemblerInsn "shl" for 0x402848>, <DisassemblerInsn "mov" for 0x40284b>, <DisassemblerInsn "mov" for 0x402852>, <DisassemblerInsn "sub" for 0x402856>, <DisassemblerInsn "shl" for 0x402858>, <DisassemblerInsn "mov" for 0x40285a>, <DisassemblerInsn "mov" for 0x40285c>, <DisassemblerInsn "mov" for 0x40285f>, <DisassemblerInsn "add" for 0x402862>, <DisassemblerInsn "mov" for 0x402866>, <DisassemblerInsn "mov" for 0x40286a>, <DisassemblerInsn "mov" for 0x402872>, <DisassemblerInsn "mov" for 0x40287a>, <DisassemblerInsn "mov" for 0x402882>, <DisassemblerInsn "mov" for 0x40288a>, <DisassemblerInsn "mov" for 0x402892>, <DisassemblerInsn "add" for 0x40289a>, <DisassemblerInsn "movsxd" for 0x40289e>, <DisassemblerInsn "cmp" for 0x4028a1>, <DisassemblerInsn "mov" for 0x4028a4>, <DisassemblerInsn "mov" for 0x4028ac>, <DisassemblerInsn "mov" for 0x4028b4>, <DisassemblerInsn "jl" for 0x4028bc>]'}, {'block_Idx': 230, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402279>, <DisassemblerInsn "cmp" for 0x402280>, <DisassemblerInsn "jle" for 0x402283>]'}, {'block_Idx': 253, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b01>, <DisassemblerInsn "mov" for 0x401b09>, <DisassemblerInsn "mov" for 0x401b11>, <DisassemblerInsn "mov" for 0x401b18>, <DisassemblerInsn "mov" for 0x401b1f>, <DisassemblerInsn "sub" for 0x401b24>, <DisassemblerInsn "mov" for 0x401b26>, <DisassemblerInsn "shl" for 0x401b2d>, <DisassemblerInsn "mov" for 0x401b2f>, <DisassemblerInsn "sar" for 0x401b36>, <DisassemblerInsn "mov" for 0x401b38>, <DisassemblerInsn "mov" for 0x401b40>, <DisassemblerInsn "mov" for 0x401b43>, <DisassemblerInsn "add" for 0x401b46>, <DisassemblerInsn "movsxd" for 0x401b4a>, <DisassemblerInsn "cmp" for 0x401b4d>, <DisassemblerInsn "mov" for 0x401b50>, <DisassemblerInsn "jl" for 0x401b58>]'}, {'block_Idx': 173, 'blockInsts': '[<DisassemblerInsn "lea" for 0x402b83>, <DisassemblerInsn "lea" for 0x402b8a>, <DisassemblerInsn "mov" for 0x402b91>, <DisassemblerInsn "lea" for 0x402b96>, <DisassemblerInsn "call" for 0x402b9d>]'}, {'block_Idx': 222, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4017d1>]'}, {'block_Idx': 117, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401306>, <DisassemblerInsn "sub" for 0x40130d>, <DisassemblerInsn "je" for 0x401310>]'}, {'block_Idx': 25, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400977>, <DisassemblerInsn "mov" for 0x40097f>, <DisassemblerInsn "mov" for 0x400987>, <DisassemblerInsn "mov" for 0x400989>, <DisassemblerInsn "mov" for 0x40098c>, <DisassemblerInsn "mov" for 0x400994>, <DisassemblerInsn "sar" for 0x400996>, <DisassemblerInsn "movsxd" for 0x400999>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "mov" for 0x40099f>, <DisassemblerInsn "and" for 0x4009a1>, <DisassemblerInsn "mov" for 0x4009a4>, <DisassemblerInsn "movzx" for 0x4009ab>, <DisassemblerInsn "mov" for 0x4009ae>, <DisassemblerInsn "mov" for 0x4009b5>, <DisassemblerInsn "add" for 0x4009b7>, <DisassemblerInsn "mov" for 0x4009ba>, <DisassemblerInsn "mov" for 0x4009bc>, <DisassemblerInsn "sar" for 0x4009be>, <DisassemblerInsn "movsxd" for 0x4009c1>, <DisassemblerInsn "mov" for 0x4009c4>, <DisassemblerInsn "ror" for 0x4009c7>, <DisassemblerInsn "ror" for 0x4009cb>, <DisassemblerInsn "ror" for 0x4009ce>, <DisassemblerInsn "and" for 0x4009d2>, <DisassemblerInsn "shl" for 0x4009d5>, <DisassemblerInsn "mov" for 0x4009d7>, <DisassemblerInsn "shr" for 0x4009de>, <DisassemblerInsn "mov" for 0x4009e1>, <DisassemblerInsn "mov" for 0x4009e8>, <DisassemblerInsn "add" for 0x4009ea>, <DisassemblerInsn "mov" for 0x4009ed>, <DisassemblerInsn "sar" for 0x4009ef>, <DisassemblerInsn "movsxd" for 0x4009f2>, <DisassemblerInsn "mov" for 0x4009f5>, <DisassemblerInsn "ror" for 0x4009f8>, <DisassemblerInsn "ror" for 0x4009fc>, <DisassemblerInsn "ror" for 0x4009ff>, <DisassemblerInsn "shl" for 0x400a03>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "shr" for 0x400a0c>, <DisassemblerInsn "mov" for 0x400a0f>, <DisassemblerInsn "add" for 0x400a12>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "shl" for 0x400a19>, <DisassemblerInsn "sar" for 0x400a1c>, <DisassemblerInsn "movsxd" for 0x400a20>, <DisassemblerInsn "mov" for 0x400a23>, <DisassemblerInsn "ror" for 0x400a27>, <DisassemblerInsn "ror" for 0x400a2b>, <DisassemblerInsn "ror" for 0x400a2e>, <DisassemblerInsn "shl" for 0x400a32>, <DisassemblerInsn "mov" for 0x400a34>, <DisassemblerInsn "shr" for 0x400a3c>, <DisassemblerInsn "add" for 0x400a3f>, <DisassemblerInsn "mov" for 0x400a42>, <DisassemblerInsn "mov" for 0x400a49>, <DisassemblerInsn "or" for 0x400a4b>, <DisassemblerInsn "mov" for 0x400a4d>, <DisassemblerInsn "shl" for 0x400a54>, <DisassemblerInsn "mov" for 0x400a57>, <DisassemblerInsn "add" for 0x400a5e>, <DisassemblerInsn "mov" for 0x400a60>, <DisassemblerInsn "mov" for 0x400a62>, <DisassemblerInsn "cmp" for 0x400a69>, <DisassemblerInsn "jle" for 0x400a6b>]'}, {'block_Idx': 153, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40159d>, <DisassemblerInsn "cmp" for 0x4015a4>, <DisassemblerInsn "je" for 0x4015a7>]'}, {'block_Idx': 62, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f36>, <DisassemblerInsn "mov" for 0x400f3e>, <DisassemblerInsn "xor" for 0x400f41>, <DisassemblerInsn "lea" for 0x400f43>, <DisassemblerInsn "mov" for 0x400f4a>, <DisassemblerInsn "call" for 0x400f4c>]'}, {'block_Idx': 97, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40113c>]'}, {'block_Idx': 209, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401864>, <DisassemblerInsn "mov" for 0x40186b>, <DisassemblerInsn "mov" for 0x401872>, <DisassemblerInsn "mov" for 0x401879>, <DisassemblerInsn "xor" for 0x40187c>, <DisassemblerInsn "sub" for 0x40187e>, <DisassemblerInsn "shr" for 0x401881>, <DisassemblerInsn "mov" for 0x401883>, <DisassemblerInsn "add" for 0x40188b>, <DisassemblerInsn "mov" for 0x40188d>, <DisassemblerInsn "mov" for 0x40188f>, <DisassemblerInsn "jmp" for 0x401896>]'}, {'block_Idx': 189, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401796>, <DisassemblerInsn "mov" for 0x40179e>, <DisassemblerInsn "lea" for 0x4017a1>, <DisassemblerInsn "xor" for 0x4017a8>, <DisassemblerInsn "call" for 0x4017aa>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a6d>, <DisassemblerInsn "mov" for 0x400a75>, <DisassemblerInsn "mov" for 0x400a7d>, <DisassemblerInsn "mov" for 0x400a85>, <DisassemblerInsn "mov" for 0x400a8d>, <DisassemblerInsn "mov" for 0x400a95>, <DisassemblerInsn "mov" for 0x400a9d>, <DisassemblerInsn "add" for 0x400aa0>, <DisassemblerInsn "sar" for 0x400aa3>, <DisassemblerInsn "xor" for 0x400aa6>, <DisassemblerInsn "cmp" for 0x400aa9>, <DisassemblerInsn "cmovl" for 0x400aad>, <DisassemblerInsn "xor" for 0x400ab1>, <DisassemblerInsn "cmp" for 0x400ab4>, <DisassemblerInsn "mov" for 0x400ab8>, <DisassemblerInsn "cmovl" for 0x400abb>, <DisassemblerInsn "xor" for 0x400abf>, <DisassemblerInsn "cmp" for 0x400ac2>, <DisassemblerInsn "cmovl" for 0x400ac6>, <DisassemblerInsn "mov" for 0x400aca>, <DisassemblerInsn "mov" for 0x400acd>, <DisassemblerInsn "movsxd" for 0x400ad0>, <DisassemblerInsn "add" for 0x400ad3>, <DisassemblerInsn "mov" for 0x400ad6>, <DisassemblerInsn "mov" for 0x400ada>, <DisassemblerInsn "jmp" for 0x400ae0>]'}, {'block_Idx': 64, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402496>, <DisassemblerInsn "mov" for 0x40249e>, <DisassemblerInsn "xor" for 0x4024a2>, <DisassemblerInsn "lea" for 0x4024a4>, <DisassemblerInsn "mov" for 0x4024ab>, <DisassemblerInsn "call" for 0x4024ad>]'}, {'block_Idx': 178, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401772>, <DisassemblerInsn "mov" for 0x40177a>, <DisassemblerInsn "mov" for 0x401781>, <DisassemblerInsn "mov" for 0x401788>, <DisassemblerInsn "mov" for 0x40178a>, <DisassemblerInsn "cmp" for 0x401791>, <DisassemblerInsn "jle" for 0x401794>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ba3>, <DisassemblerInsn "and" for 0x400baa>, <DisassemblerInsn "cmp" for 0x400baf>, <DisassemblerInsn "je" for 0x400bb4>]'}, {'block_Idx': 214, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c6d>, <DisassemblerInsn "mov" for 0x402c75>, <DisassemblerInsn "mov" for 0x402c7a>, <DisassemblerInsn "mov" for 0x402c7f>, <DisassemblerInsn "add" for 0x402c84>, <DisassemblerInsn "movsxd" for 0x402c88>, <DisassemblerInsn "cmp" for 0x402c8b>, <DisassemblerInsn "mov" for 0x402c8e>, <DisassemblerInsn "mov" for 0x402c93>, <DisassemblerInsn "mov" for 0x402c9b>, <DisassemblerInsn "jl" for 0x402ca3>]'}, {'block_Idx': 175, 'blockInsts': '[<DisassemblerInsn "lea" for 0x402746>, <DisassemblerInsn "lea" for 0x40274d>, <DisassemblerInsn "mov" for 0x402754>, <DisassemblerInsn "lea" for 0x402759>, <DisassemblerInsn "call" for 0x402760>]'}, {'block_Idx': 191, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40164c>]'}, {'block_Idx': 95, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40116a>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400731>, <DisassemblerInsn "mov" for 0x400739>, <DisassemblerInsn "mov" for 0x400740>, <DisassemblerInsn "mov" for 0x400748>, <DisassemblerInsn "mov" for 0x400750>, <DisassemblerInsn "mov" for 0x400752>, <DisassemblerInsn "mov" for 0x400759>, <DisassemblerInsn "mov" for 0x40075b>, <DisassemblerInsn "add" for 0x400762>, <DisassemblerInsn "add" for 0x400764>, <DisassemblerInsn "cmp" for 0x400766>, <DisassemblerInsn "jbe" for 0x400768>]'}, {'block_Idx': 26, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400b9e>]'}, {'block_Idx': 160, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015bc>, <DisassemblerInsn "mov" for 0x4015c4>, <DisassemblerInsn "add" for 0x4015cb>, <DisassemblerInsn "mov" for 0x4015ce>, <DisassemblerInsn "mov" for 0x4015d0>, <DisassemblerInsn "mov" for 0x4015d8>, <DisassemblerInsn "mov" for 0x4015e0>, <DisassemblerInsn "mov" for 0x4015e2>, <DisassemblerInsn "mov" for 0x4015e9>, <DisassemblerInsn "mov" for 0x4015ec>, <DisassemblerInsn "mov" for 0x4015f4>, <DisassemblerInsn "sar" for 0x4015f6>, <DisassemblerInsn "movsxd" for 0x4015f9>, <DisassemblerInsn "mov" for 0x4015fc>, <DisassemblerInsn "mov" for 0x401600>, <DisassemblerInsn "and" for 0x401602>, <DisassemblerInsn "movzx" for 0x401605>, <DisassemblerInsn "mov" for 0x401609>, <DisassemblerInsn "add" for 0x401610>, <DisassemblerInsn "mov" for 0x401613>, <DisassemblerInsn "mov" for 0x40161a>, <DisassemblerInsn "mov" for 0x40161c>, <DisassemblerInsn "shr" for 0x401621>, <DisassemblerInsn "mov" for 0x401623>, <DisassemblerInsn "and" for 0x40162a>, <DisassemblerInsn "cmp" for 0x40162c>, <DisassemblerInsn "je" for 0x40162f>]'}, {'block_Idx': 134, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401322>, <DisassemblerInsn "sub" for 0x401329>, <DisassemblerInsn "je" for 0x40132c>]'}, {'block_Idx': 242, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c85>, <DisassemblerInsn "mov" for 0x401c8d>, <DisassemblerInsn "mov" for 0x401c94>, <DisassemblerInsn "mov" for 0x401c9b>, <DisassemblerInsn "mov" for 0x401ca3>, <DisassemblerInsn "shr" for 0x401cab>, <DisassemblerInsn "mov" for 0x401caf>, <DisassemblerInsn "add" for 0x401cb2>, <DisassemblerInsn "mov" for 0x401cb6>, <DisassemblerInsn "mov" for 0x401cb9>, <DisassemblerInsn "add" for 0x401cbb>, <DisassemblerInsn "mov" for 0x401cbe>, <DisassemblerInsn "shl" for 0x401cc5>, <DisassemblerInsn "mov" for 0x401cc8>, <DisassemblerInsn "mov" for 0x401ccf>, <DisassemblerInsn "sar" for 0x401cd7>, <DisassemblerInsn "movsxd" for 0x401cdb>, <DisassemblerInsn "mov" for 0x401cde>, <DisassemblerInsn "ror" for 0x401ce2>, <DisassemblerInsn "ror" for 0x401ce6>, <DisassemblerInsn "ror" for 0x401ce9>, <DisassemblerInsn "shl" for 0x401ced>, <DisassemblerInsn "mov" for 0x401cef>, <DisassemblerInsn "mov" for 0x401cf6>, <DisassemblerInsn "xor" for 0x401cf9>, <DisassemblerInsn "sub" for 0x401cfb>, <DisassemblerInsn "shr" for 0x401cfe>, <DisassemblerInsn "mov" for 0x401d00>, <DisassemblerInsn "add" for 0x401d07>, <DisassemblerInsn "mov" for 0x401d09>, <DisassemblerInsn "or" for 0x401d0b>, <DisassemblerInsn "mov" for 0x401d0d>, <DisassemblerInsn "mov" for 0x401d14>, <DisassemblerInsn "mov" for 0x401d1c>, <DisassemblerInsn "mov" for 0x401d24>, <DisassemblerInsn "mov" for 0x401d2b>, <DisassemblerInsn "mov" for 0x401d32>, <DisassemblerInsn "sub" for 0x401d37>, <DisassemblerInsn "mov" for 0x401d39>, <DisassemblerInsn "shl" for 0x401d40>, <DisassemblerInsn "mov" for 0x401d42>, <DisassemblerInsn "sar" for 0x401d49>, <DisassemblerInsn "mov" for 0x401d4b>, <DisassemblerInsn "mov" for 0x401d53>, <DisassemblerInsn "add" for 0x401d56>, <DisassemblerInsn "cmp" for 0x401d5a>, <DisassemblerInsn "mov" for 0x401d5d>, <DisassemblerInsn "jne" for 0x401d65>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4017bf>]'}, {'block_Idx': 54, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400dd4>]'}, {'block_Idx': 348, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4020b6>, <DisassemblerInsn "mov" for 0x4020be>, <DisassemblerInsn "mov" for 0x4020c5>, <DisassemblerInsn "mov" for 0x4020cd>, <DisassemblerInsn "mov" for 0x4020d5>, <DisassemblerInsn "add" for 0x4020dd>, <DisassemblerInsn "mov" for 0x4020e0>, <DisassemblerInsn "mov" for 0x4020e7>, <DisassemblerInsn "add" for 0x4020e9>, <DisassemblerInsn "mov" for 0x4020ec>, <DisassemblerInsn "mov" for 0x4020f3>, <DisassemblerInsn "add" for 0x4020f6>, <DisassemblerInsn "mov" for 0x4020fa>, <DisassemblerInsn "cmp" for 0x402102>, <DisassemblerInsn "mov" for 0x402105>, <DisassemblerInsn "mov" for 0x40210d>, <DisassemblerInsn "mov" for 0x402114>, <DisassemblerInsn "je" for 0x40211b>]'}, {'block_Idx': 241, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c4e>, <DisassemblerInsn "mov" for 0x401c55>, <DisassemblerInsn "mov" for 0x401c5c>, <DisassemblerInsn "mov" for 0x401c63>, <DisassemblerInsn "xor" for 0x401c66>, <DisassemblerInsn "sub" for 0x401c68>, <DisassemblerInsn "shr" for 0x401c6b>, <DisassemblerInsn "mov" for 0x401c6d>, <DisassemblerInsn "add" for 0x401c75>, <DisassemblerInsn "mov" for 0x401c77>, <DisassemblerInsn "mov" for 0x401c79>, <DisassemblerInsn "jmp" for 0x401c80>]'}, {'block_Idx': 217, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402ae7>]'}, {'block_Idx': 68, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400798>, <DisassemblerInsn "mov" for 0x4007a0>, <DisassemblerInsn "mov" for 0x4007a6>, <DisassemblerInsn "mov" for 0x4007ad>, <DisassemblerInsn "mov" for 0x4007b5>, <DisassemblerInsn "mov" for 0x4007bd>, <DisassemblerInsn "mov" for 0x4007c5>, <DisassemblerInsn "mov" for 0x4007cd>, <DisassemblerInsn "mov" for 0x4007d4>, <DisassemblerInsn "add" for 0x4007d6>, <DisassemblerInsn "mov" for 0x4007d8>, <DisassemblerInsn "add" for 0x4007da>, <DisassemblerInsn "movsxd" for 0x4007dd>, <DisassemblerInsn "call" for 0x4007e0>]'}, {'block_Idx': 168, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401651>, <DisassemblerInsn "mov" for 0x401659>, <DisassemblerInsn "mov" for 0x401660>, <DisassemblerInsn "mov" for 0x401668>, <DisassemblerInsn "mov" for 0x40166f>, <DisassemblerInsn "sar" for 0x401671>, <DisassemblerInsn "movsxd" for 0x401674>, <DisassemblerInsn "mov" for 0x401677>, <DisassemblerInsn "ror" for 0x40167a>, <DisassemblerInsn "ror" for 0x40167e>, <DisassemblerInsn "ror" for 0x401681>, <DisassemblerInsn "and" for 0x401685>, <DisassemblerInsn "shl" for 0x401688>, <DisassemblerInsn "mov" for 0x40168a>, <DisassemblerInsn "shr" for 0x40168c>, <DisassemblerInsn "mov" for 0x40168f>, <DisassemblerInsn "mov" for 0x401696>, <DisassemblerInsn "add" for 0x401698>, <DisassemblerInsn "mov" for 0x40169b>, <DisassemblerInsn "mov" for 0x40169d>, <DisassemblerInsn "sar" for 0x40169f>, <DisassemblerInsn "movsxd" for 0x4016a2>, <DisassemblerInsn "mov" for 0x4016a5>, <DisassemblerInsn "and" for 0x4016a8>, <DisassemblerInsn "movzx" for 0x4016ab>, <DisassemblerInsn "add" for 0x4016ae>, <DisassemblerInsn "mov" for 0x4016b1>, <DisassemblerInsn "mov" for 0x4016b3>, <DisassemblerInsn "shr" for 0x4016b8>, <DisassemblerInsn "and" for 0x4016ba>, <DisassemblerInsn "xor" for 0x4016bc>, <DisassemblerInsn "mov" for 0x4016be>, <DisassemblerInsn "cmp" for 0x4016c3>, <DisassemblerInsn "mov" for 0x4016c6>, <DisassemblerInsn "mov" for 0x4016cd>, <DisassemblerInsn "je" for 0x4016d4>]'}, {'block_Idx': 302, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e45>, <DisassemblerInsn "mov" for 0x401e4c>, <DisassemblerInsn "mov" for 0x401e53>, <DisassemblerInsn "cmp" for 0x401e5a>, <DisassemblerInsn "jle" for 0x401e5d>]'}, {'block_Idx': 394, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4036e6>, <DisassemblerInsn "mov" for 0x4036ea>, <DisassemblerInsn "mov" for 0x4036f0>, <DisassemblerInsn "sar" for 0x4036f6>, <DisassemblerInsn "mov" for 0x4036f8>, <DisassemblerInsn "movsxd" for 0x4036fe>, <DisassemblerInsn "add" for 0x403701>, <DisassemblerInsn "mov" for 0x403704>, <DisassemblerInsn "xor" for 0x403707>, <DisassemblerInsn "mov" for 0x403709>, <DisassemblerInsn "mov" for 0x40370f>, <DisassemblerInsn "mov" for 0x403715>, <DisassemblerInsn "pop" for 0x403718>, <DisassemblerInsn "ret" for 0x403719>]'}, {'block_Idx': 211, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017c1>, <DisassemblerInsn "sub" for 0x4017c8>, <DisassemblerInsn "jne" for 0x4017cb>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40060b>, <DisassemblerInsn "mov" for 0x400612>, <DisassemblerInsn "mov" for 0x40061a>, <DisassemblerInsn "cmp" for 0x400621>, <DisassemblerInsn "mov" for 0x400627>, <DisassemblerInsn "je" for 0x40062e>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401816>, <DisassemblerInsn "mov" for 0x40181d>, <DisassemblerInsn "mov" for 0x401825>, <DisassemblerInsn "mov" for 0x40182d>, <DisassemblerInsn "mov" for 0x40182f>, <DisassemblerInsn "mov" for 0x401836>, <DisassemblerInsn "sar" for 0x401838>, <DisassemblerInsn "movsxd" for 0x40183b>, <DisassemblerInsn "mov" for 0x40183e>, <DisassemblerInsn "ror" for 0x401841>, <DisassemblerInsn "ror" for 0x401845>, <DisassemblerInsn "ror" for 0x401848>, <DisassemblerInsn "and" for 0x40184c>, <DisassemblerInsn "mov" for 0x40184f>, <DisassemblerInsn "shl" for 0x401856>, <DisassemblerInsn "mov" for 0x401858>, <DisassemblerInsn "cmp" for 0x40185f>, <DisassemblerInsn "jge" for 0x401862>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d4d>, <DisassemblerInsn "mov" for 0x402d51>, <DisassemblerInsn "mov" for 0x402d59>, <DisassemblerInsn "add" for 0x402d5c>, <DisassemblerInsn "mov" for 0x402d63>, <DisassemblerInsn "mov" for 0x402d68>, <DisassemblerInsn "mov" for 0x402d6e>, <DisassemblerInsn "cmp" for 0x402d72>, <DisassemblerInsn "mov" for 0x402d75>, <DisassemblerInsn "je" for 0x402d7c>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400857>, <DisassemblerInsn "mov" for 0x40085f>, <DisassemblerInsn "mov" for 0x400866>, <DisassemblerInsn "mov" for 0x40086d>, <DisassemblerInsn "mov" for 0x400875>, <DisassemblerInsn "mov" for 0x40087c>, <DisassemblerInsn "mov" for 0x400883>, <DisassemblerInsn "shl" for 0x400885>, <DisassemblerInsn "xor" for 0x400888>, <DisassemblerInsn "cmp" for 0x40088a>, <DisassemblerInsn "cmovl" for 0x40088d>, <DisassemblerInsn "xor" for 0x400891>, <DisassemblerInsn "cmp" for 0x400893>, <DisassemblerInsn "cmovl" for 0x400896>, <DisassemblerInsn "xor" for 0x400899>, <DisassemblerInsn "cmp" for 0x40089b>, <DisassemblerInsn "cmovl" for 0x40089e>, <DisassemblerInsn "mov" for 0x4008a1>, <DisassemblerInsn "add" for 0x4008a4>, <DisassemblerInsn "mov" for 0x4008a8>, <DisassemblerInsn "mov" for 0x4008b0>, <DisassemblerInsn "mov" for 0x4008b4>, <DisassemblerInsn "mov" for 0x4008b7>, <DisassemblerInsn "mov" for 0x4008b9>, <DisassemblerInsn "mov" for 0x4008bb>, <DisassemblerInsn "add" for 0x4008be>, <DisassemblerInsn "mov" for 0x4008c1>, <DisassemblerInsn "mov" for 0x4008c5>, <DisassemblerInsn "add" for 0x4008c8>, <DisassemblerInsn "mov" for 0x4008cc>, <DisassemblerInsn "mov" for 0x4008d4>, <DisassemblerInsn "mov" for 0x4008db>, <DisassemblerInsn "ror" for 0x4008dd>, <DisassemblerInsn "ror" for 0x4008e1>, <DisassemblerInsn "ror" for 0x4008e4>, <DisassemblerInsn "shr" for 0x4008e8>, <DisassemblerInsn "mov" for 0x4008eb>, <DisassemblerInsn "shl" for 0x4008f2>, <DisassemblerInsn "mov" for 0x4008f5>, <DisassemblerInsn "ror" for 0x4008f8>, <DisassemblerInsn "ror" for 0x4008fc>, <DisassemblerInsn "ror" for 0x4008ff>, <DisassemblerInsn "shr" for 0x400903>, <DisassemblerInsn "or" for 0x400906>, <DisassemblerInsn "cmp" for 0x400908>, <DisassemblerInsn "jne" for 0x40090d>]'}, {'block_Idx': 184, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4026d0>, <DisassemblerInsn "mov" for 0x4026d8>, <DisassemblerInsn "mov" for 0x4026e0>, <DisassemblerInsn "mov" for 0x4026e8>, <DisassemblerInsn "mov" for 0x4026ec>, <DisassemblerInsn "mov" for 0x4026f4>, <DisassemblerInsn "mov" for 0x4026f8>, <DisassemblerInsn "mov" for 0x402700>, <DisassemblerInsn "add" for 0x402703>, <DisassemblerInsn "mov" for 0x402707>, <DisassemblerInsn "mov" for 0x40270f>, <DisassemblerInsn "add" for 0x402712>, <DisassemblerInsn "mov" for 0x402716>, <DisassemblerInsn "add" for 0x40271e>, <DisassemblerInsn "mov" for 0x402722>, <DisassemblerInsn "xor" for 0x40272a>, <DisassemblerInsn "mov" for 0x40272c>, <DisassemblerInsn "mov" for 0x402734>, <DisassemblerInsn "mov" for 0x40273c>, <DisassemblerInsn "jmp" for 0x402744>]'}, {'block_Idx': 286, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401d9d>]'}, {'block_Idx': 212, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4017af>]'}, {'block_Idx': 56, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40071f>, <DisassemblerInsn "mov" for 0x400722>, <DisassemblerInsn "mov" for 0x40072a>, <DisassemblerInsn "mov" for 0x400731>, <DisassemblerInsn "mov" for 0x400739>, <DisassemblerInsn "mov" for 0x400740>, <DisassemblerInsn "mov" for 0x400748>, <DisassemblerInsn "mov" for 0x400750>, <DisassemblerInsn "mov" for 0x400752>, <DisassemblerInsn "mov" for 0x400759>, <DisassemblerInsn "mov" for 0x40075b>, <DisassemblerInsn "add" for 0x400762>, <DisassemblerInsn "add" for 0x400764>, <DisassemblerInsn "cmp" for 0x400766>, <DisassemblerInsn "jbe" for 0x400768>]'}, {'block_Idx': 179, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016da>, <DisassemblerInsn "mov" for 0x4016e1>, <DisassemblerInsn "mov" for 0x4016e9>, <DisassemblerInsn "mov" for 0x4016f1>, <DisassemblerInsn "mov" for 0x4016f8>, <DisassemblerInsn "mov" for 0x4016fa>, <DisassemblerInsn "sar" for 0x4016fc>, <DisassemblerInsn "mov" for 0x4016ff>, <DisassemblerInsn "movsxd" for 0x401706>, <DisassemblerInsn "mov" for 0x401709>, <DisassemblerInsn "mov" for 0x40170c>, <DisassemblerInsn "and" for 0x40170e>, <DisassemblerInsn "mov" for 0x401711>, <DisassemblerInsn "movzx" for 0x401718>, <DisassemblerInsn "add" for 0x40171b>, <DisassemblerInsn "mov" for 0x40171e>, <DisassemblerInsn "mov" for 0x401725>, <DisassemblerInsn "mov" for 0x401727>, <DisassemblerInsn "shr" for 0x40172c>, <DisassemblerInsn "mov" for 0x40172e>, <DisassemblerInsn "mov" for 0x401735>, <DisassemblerInsn "and" for 0x401737>, <DisassemblerInsn "mov" for 0x401739>, <DisassemblerInsn "add" for 0x401740>, <DisassemblerInsn "mov" for 0x401743>, <DisassemblerInsn "cmp" for 0x40174a>, <DisassemblerInsn "mov" for 0x40174d>, <DisassemblerInsn "je" for 0x401754>]'}, {'block_Idx': 361, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402064>, <DisassemblerInsn "mov" for 0x40206b>, <DisassemblerInsn "mov" for 0x402073>, <DisassemblerInsn "mov" for 0x40207b>, <DisassemblerInsn "add" for 0x402083>, <DisassemblerInsn "mov" for 0x402086>, <DisassemblerInsn "mov" for 0x40208d>, <DisassemblerInsn "add" for 0x402090>, <DisassemblerInsn "mov" for 0x402094>, <DisassemblerInsn "cmp" for 0x40209c>, <DisassemblerInsn "mov" for 0x40209f>, <DisassemblerInsn "mov" for 0x4020a7>, <DisassemblerInsn "je" for 0x4020ae>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400913>, <DisassemblerInsn "mov" for 0x40091b>, <DisassemblerInsn "add" for 0x40091e>, <DisassemblerInsn "mov" for 0x400922>, <DisassemblerInsn "mov" for 0x40092a>, <DisassemblerInsn "add" for 0x40092d>, <DisassemblerInsn "mov" for 0x400930>, <DisassemblerInsn "mov" for 0x400933>, <DisassemblerInsn "add" for 0x400936>, <DisassemblerInsn "mov" for 0x40093a>, <DisassemblerInsn "mov" for 0x400942>, <DisassemblerInsn "add" for 0x400945>, <DisassemblerInsn "mov" for 0x400949>, <DisassemblerInsn "mov" for 0x400951>, <DisassemblerInsn "add" for 0x400954>, <DisassemblerInsn "mov" for 0x400958>, <DisassemblerInsn "mov" for 0x400960>, <DisassemblerInsn "add" for 0x400963>, <DisassemblerInsn "mov" for 0x400967>, <DisassemblerInsn "mov" for 0x40096f>, <DisassemblerInsn "mov" for 0x400977>, <DisassemblerInsn "mov" for 0x40097f>, <DisassemblerInsn "mov" for 0x400987>, <DisassemblerInsn "mov" for 0x400989>, <DisassemblerInsn "mov" for 0x40098c>, <DisassemblerInsn "mov" for 0x400994>, <DisassemblerInsn "sar" for 0x400996>, <DisassemblerInsn "movsxd" for 0x400999>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "mov" for 0x40099f>, <DisassemblerInsn "and" for 0x4009a1>, <DisassemblerInsn "mov" for 0x4009a4>, <DisassemblerInsn "movzx" for 0x4009ab>, <DisassemblerInsn "mov" for 0x4009ae>, <DisassemblerInsn "mov" for 0x4009b5>, <DisassemblerInsn "add" for 0x4009b7>, <DisassemblerInsn "mov" for 0x4009ba>, <DisassemblerInsn "mov" for 0x4009bc>, <DisassemblerInsn "sar" for 0x4009be>, <DisassemblerInsn "movsxd" for 0x4009c1>, <DisassemblerInsn "mov" for 0x4009c4>, <DisassemblerInsn "ror" for 0x4009c7>, <DisassemblerInsn "ror" for 0x4009cb>, <DisassemblerInsn "ror" for 0x4009ce>, <DisassemblerInsn "and" for 0x4009d2>, <DisassemblerInsn "shl" for 0x4009d5>, <DisassemblerInsn "mov" for 0x4009d7>, <DisassemblerInsn "shr" for 0x4009de>, <DisassemblerInsn "mov" for 0x4009e1>, <DisassemblerInsn "mov" for 0x4009e8>, <DisassemblerInsn "add" for 0x4009ea>, <DisassemblerInsn "mov" for 0x4009ed>, <DisassemblerInsn "sar" for 0x4009ef>, <DisassemblerInsn "movsxd" for 0x4009f2>, <DisassemblerInsn "mov" for 0x4009f5>, <DisassemblerInsn "ror" for 0x4009f8>, <DisassemblerInsn "ror" for 0x4009fc>, <DisassemblerInsn "ror" for 0x4009ff>, <DisassemblerInsn "shl" for 0x400a03>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "shr" for 0x400a0c>, <DisassemblerInsn "mov" for 0x400a0f>, <DisassemblerInsn "add" for 0x400a12>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "shl" for 0x400a19>, <DisassemblerInsn "sar" for 0x400a1c>, <DisassemblerInsn "movsxd" for 0x400a20>, <DisassemblerInsn "mov" for 0x400a23>, <DisassemblerInsn "ror" for 0x400a27>, <DisassemblerInsn "ror" for 0x400a2b>, <DisassemblerInsn "ror" for 0x400a2e>, <DisassemblerInsn "shl" for 0x400a32>, <DisassemblerInsn "mov" for 0x400a34>, <DisassemblerInsn "shr" for 0x400a3c>, <DisassemblerInsn "add" for 0x400a3f>, <DisassemblerInsn "mov" for 0x400a42>, <DisassemblerInsn "mov" for 0x400a49>, <DisassemblerInsn "or" for 0x400a4b>, <DisassemblerInsn "mov" for 0x400a4d>, <DisassemblerInsn "shl" for 0x400a54>, <DisassemblerInsn "mov" for 0x400a57>, <DisassemblerInsn "add" for 0x400a5e>, <DisassemblerInsn "mov" for 0x400a60>, <DisassemblerInsn "mov" for 0x400a62>, <DisassemblerInsn "cmp" for 0x400a69>, <DisassemblerInsn "jle" for 0x400a6b>]'}, {'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402db6>, <DisassemblerInsn "add" for 0x402dbd>, <DisassemblerInsn "ret" for 0x402dc4>]'}, {'block_Idx': 226, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401990>, <DisassemblerInsn "mov" for 0x401998>, <DisassemblerInsn "mov" for 0x4019a0>, <DisassemblerInsn "mov" for 0x4019a8>, <DisassemblerInsn "mov" for 0x4019af>, <DisassemblerInsn "add" for 0x4019b2>, <DisassemblerInsn "mov" for 0x4019b6>, <DisassemblerInsn "movsxd" for 0x4019be>, <DisassemblerInsn "cmp" for 0x4019c1>, <DisassemblerInsn "mov" for 0x4019c4>, <DisassemblerInsn "jl" for 0x4019cc>]'}, {'block_Idx': 19, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400af5>, <DisassemblerInsn "cmp" for 0x400afc>, <DisassemblerInsn "jne" for 0x400aff>]'}, {'block_Idx': 116, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012e6>, <DisassemblerInsn "movsxd" for 0x4012ed>, <DisassemblerInsn "lea" for 0x4012f0>, <DisassemblerInsn "mov" for 0x4012f7>, <DisassemblerInsn "mov" for 0x4012fa>, <DisassemblerInsn "jmp" for 0x401301>]'}, {'block_Idx': 170, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015d0>, <DisassemblerInsn "mov" for 0x4015d8>, <DisassemblerInsn "mov" for 0x4015e0>, <DisassemblerInsn "mov" for 0x4015e2>, <DisassemblerInsn "mov" for 0x4015e9>, <DisassemblerInsn "mov" for 0x4015ec>, <DisassemblerInsn "mov" for 0x4015f4>, <DisassemblerInsn "sar" for 0x4015f6>, <DisassemblerInsn "movsxd" for 0x4015f9>, <DisassemblerInsn "mov" for 0x4015fc>, <DisassemblerInsn "mov" for 0x401600>, <DisassemblerInsn "and" for 0x401602>, <DisassemblerInsn "movzx" for 0x401605>, <DisassemblerInsn "mov" for 0x401609>, <DisassemblerInsn "add" for 0x401610>, <DisassemblerInsn "mov" for 0x401613>, <DisassemblerInsn "mov" for 0x40161a>, <DisassemblerInsn "mov" for 0x40161c>, <DisassemblerInsn "shr" for 0x401621>, <DisassemblerInsn "mov" for 0x401623>, <DisassemblerInsn "and" for 0x40162a>, <DisassemblerInsn "cmp" for 0x40162c>, <DisassemblerInsn "je" for 0x40162f>]'}, {'block_Idx': 246, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a72>, <DisassemblerInsn "mov" for 0x401a7a>, <DisassemblerInsn "mov" for 0x401a81>, <DisassemblerInsn "mov" for 0x401a88>, <DisassemblerInsn "mov" for 0x401a90>, <DisassemblerInsn "shr" for 0x401a98>, <DisassemblerInsn "mov" for 0x401a9c>, <DisassemblerInsn "add" for 0x401a9f>, <DisassemblerInsn "mov" for 0x401aa3>, <DisassemblerInsn "mov" for 0x401aa6>, <DisassemblerInsn "add" for 0x401aa8>, <DisassemblerInsn "mov" for 0x401aab>, <DisassemblerInsn "shl" for 0x401ab2>, <DisassemblerInsn "mov" for 0x401ab5>, <DisassemblerInsn "mov" for 0x401abc>, <DisassemblerInsn "sar" for 0x401ac4>, <DisassemblerInsn "movsxd" for 0x401ac8>, <DisassemblerInsn "mov" for 0x401acb>, <DisassemblerInsn "ror" for 0x401acf>, <DisassemblerInsn "ror" for 0x401ad3>, <DisassemblerInsn "ror" for 0x401ad6>, <DisassemblerInsn "shl" for 0x401ada>, <DisassemblerInsn "mov" for 0x401adc>, <DisassemblerInsn "mov" for 0x401ae3>, <DisassemblerInsn "xor" for 0x401ae6>, <DisassemblerInsn "sub" for 0x401ae8>, <DisassemblerInsn "shr" for 0x401aeb>, <DisassemblerInsn "mov" for 0x401aed>, <DisassemblerInsn "add" for 0x401af4>, <DisassemblerInsn "mov" for 0x401af6>, <DisassemblerInsn "or" for 0x401af8>, <DisassemblerInsn "mov" for 0x401afa>, <DisassemblerInsn "mov" for 0x401b01>, <DisassemblerInsn "mov" for 0x401b09>, <DisassemblerInsn "mov" for 0x401b11>, <DisassemblerInsn "mov" for 0x401b18>, <DisassemblerInsn "mov" for 0x401b1f>, <DisassemblerInsn "sub" for 0x401b24>, <DisassemblerInsn "mov" for 0x401b26>, <DisassemblerInsn "shl" for 0x401b2d>, <DisassemblerInsn "mov" for 0x401b2f>, <DisassemblerInsn "sar" for 0x401b36>, <DisassemblerInsn "mov" for 0x401b38>, <DisassemblerInsn "mov" for 0x401b40>, <DisassemblerInsn "mov" for 0x401b43>, <DisassemblerInsn "add" for 0x401b46>, <DisassemblerInsn "movsxd" for 0x401b4a>, <DisassemblerInsn "cmp" for 0x401b4d>, <DisassemblerInsn "mov" for 0x401b50>, <DisassemblerInsn "jl" for 0x401b58>]'}, {'block_Idx': 96, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40116f>, <DisassemblerInsn "mov" for 0x401177>, <DisassemblerInsn "mov" for 0x40117f>, <DisassemblerInsn "mov" for 0x401181>, <DisassemblerInsn "sar" for 0x401183>, <DisassemblerInsn "movsxd" for 0x401186>, <DisassemblerInsn "mov" for 0x401189>, <DisassemblerInsn "ror" for 0x40118c>, <DisassemblerInsn "ror" for 0x401190>, <DisassemblerInsn "ror" for 0x401193>, <DisassemblerInsn "mov" for 0x401197>, <DisassemblerInsn "and" for 0x401199>, <DisassemblerInsn "shl" for 0x40119c>, <DisassemblerInsn "mov" for 0x40119e>, <DisassemblerInsn "shr" for 0x4011a6>, <DisassemblerInsn "add" for 0x4011a9>, <DisassemblerInsn "mov" for 0x4011ac>, <DisassemblerInsn "add" for 0x4011ae>, <DisassemblerInsn "mov" for 0x4011b1>, <DisassemblerInsn "jmp" for 0x4011b8>]'}, {'block_Idx': 337, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ef6>, <DisassemblerInsn "mov" for 0x401efd>, <DisassemblerInsn "mov" for 0x401f04>, <DisassemblerInsn "mov" for 0x401f0b>, <DisassemblerInsn "mov" for 0x401f12>, <DisassemblerInsn "mov" for 0x401f1a>, <DisassemblerInsn "movsxd" for 0x401f21>, <DisassemblerInsn "movsxd" for 0x401f24>, <DisassemblerInsn "mov" for 0x401f27>, <DisassemblerInsn "mov" for 0x401f2f>, <DisassemblerInsn "mov" for 0x401f37>, <DisassemblerInsn "mov" for 0x401f3e>, <DisassemblerInsn "mov" for 0x401f45>, <DisassemblerInsn "mov" for 0x401f4c>, <DisassemblerInsn "jmp" for 0x401f53>]'}, {'block_Idx': 186, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4028fa>, <DisassemblerInsn "mov" for 0x402902>, <DisassemblerInsn "mov" for 0x40290a>, <DisassemblerInsn "mov" for 0x402912>, <DisassemblerInsn "mov" for 0x402916>, <DisassemblerInsn "mov" for 0x40291e>, <DisassemblerInsn "mov" for 0x402922>, <DisassemblerInsn "mov" for 0x40292a>, <DisassemblerInsn "add" for 0x40292d>, <DisassemblerInsn "mov" for 0x402931>, <DisassemblerInsn "mov" for 0x402939>, <DisassemblerInsn "add" for 0x40293c>, <DisassemblerInsn "mov" for 0x402940>, <DisassemblerInsn "add" for 0x402948>, <DisassemblerInsn "mov" for 0x40294c>, <DisassemblerInsn "xor" for 0x402954>, <DisassemblerInsn "mov" for 0x402956>, <DisassemblerInsn "mov" for 0x40295e>, <DisassemblerInsn "mov" for 0x402966>, <DisassemblerInsn "jmp" for 0x40296e>]'}, {'block_Idx': 118, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b42>, <DisassemblerInsn "call" for 0x400b4a>]'}, {'block_Idx': 32, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d8c>, <DisassemblerInsn "cmp" for 0x400d94>, <DisassemblerInsn "jne" for 0x400d98>]'}, {'block_Idx': 124, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401314>, <DisassemblerInsn "sub" for 0x40131b>, <DisassemblerInsn "je" for 0x40131e>]'}, {'block_Idx': 34, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bd6>, <DisassemblerInsn "mov" for 0x400bde>, <DisassemblerInsn "mov" for 0x400be5>, <DisassemblerInsn "mov" for 0x400be7>, <DisassemblerInsn "mov" for 0x400bee>, <DisassemblerInsn "cdq" for 0x400bf3>, <DisassemblerInsn "idiv" for 0x400bf4>, <DisassemblerInsn "add" for 0x400bf6>, <DisassemblerInsn "cmp" for 0x400bf9>, <DisassemblerInsn "jge" for 0x400bfb>]'}, {'block_Idx': 221, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401969>, <DisassemblerInsn "mov" for 0x401971>, <DisassemblerInsn "mov" for 0x401979>, <DisassemblerInsn "mov" for 0x40197e>, <DisassemblerInsn "xor" for 0x401986>, <DisassemblerInsn "mov" for 0x401988>, <DisassemblerInsn "mov" for 0x401990>, <DisassemblerInsn "mov" for 0x401998>, <DisassemblerInsn "mov" for 0x4019a0>, <DisassemblerInsn "mov" for 0x4019a8>, <DisassemblerInsn "mov" for 0x4019af>, <DisassemblerInsn "add" for 0x4019b2>, <DisassemblerInsn "mov" for 0x4019b6>, <DisassemblerInsn "movsxd" for 0x4019be>, <DisassemblerInsn "cmp" for 0x4019c1>, <DisassemblerInsn "mov" for 0x4019c4>, <DisassemblerInsn "jl" for 0x4019cc>]'}, {'block_Idx': 31, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400dd9>, <DisassemblerInsn "mov" for 0x400de1>, <DisassemblerInsn "mov" for 0x400de9>, <DisassemblerInsn "mov" for 0x400df0>, <DisassemblerInsn "mov" for 0x400df7>, <DisassemblerInsn "ror" for 0x400dfa>, <DisassemblerInsn "ror" for 0x400dfe>, <DisassemblerInsn "ror" for 0x400e01>, <DisassemblerInsn "shl" for 0x400e05>, <DisassemblerInsn "shr" for 0x400e08>, <DisassemblerInsn "mov" for 0x400e0b>, <DisassemblerInsn "mov" for 0x400e12>, <DisassemblerInsn "cmp" for 0x400e18>, <DisassemblerInsn "jne" for 0x400e1b>]'}, {'block_Idx': 159, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ca9>, <DisassemblerInsn "mov" for 0x402cb1>, <DisassemblerInsn "mov" for 0x402cb9>, <DisassemblerInsn "imul" for 0x402cbc>, <DisassemblerInsn "mov" for 0x402cc0>, <DisassemblerInsn "mov" for 0x402cc5>, <DisassemblerInsn "cmp" for 0x402cca>, <DisassemblerInsn "cmove" for 0x402cce>, <DisassemblerInsn "imul" for 0x402cd1>, <DisassemblerInsn "mov" for 0x402cd4>, <DisassemblerInsn "mov" for 0x402cd6>, <DisassemblerInsn "mov" for 0x402cdd>, <DisassemblerInsn "mov" for 0x402ce5>, <DisassemblerInsn "add" for 0x402ce7>, <DisassemblerInsn "mov" for 0x402cea>, <DisassemblerInsn "cdq" for 0x402cef>, <DisassemblerInsn "idiv" for 0x402cf0>, <DisassemblerInsn "mov" for 0x402cf2>, <DisassemblerInsn "cmp" for 0x402cf6>, <DisassemblerInsn "jle" for 0x402cf8>]'}, {'block_Idx': 113, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40126d>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402765>, <DisassemblerInsn "mov" for 0x40276d>, <DisassemblerInsn "mov" for 0x402775>, <DisassemblerInsn "mov" for 0x40277d>, <DisassemblerInsn "mov" for 0x402785>, <DisassemblerInsn "mov" for 0x40278d>, <DisassemblerInsn "mov" for 0x402795>, <DisassemblerInsn "mov" for 0x40279d>, <DisassemblerInsn "mov" for 0x4027a5>, <DisassemblerInsn "mov" for 0x4027ad>, <DisassemblerInsn "mov" for 0x4027b0>, <DisassemblerInsn "mov" for 0x4027b7>, <DisassemblerInsn "mov" for 0x4027ba>, <DisassemblerInsn "cmp" for 0x4027c1>, <DisassemblerInsn "je" for 0x4027c4>]'}, {'block_Idx': 207, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402a42>, <DisassemblerInsn "mov" for 0x402a4a>, <DisassemblerInsn "mov" for 0x402a52>, <DisassemblerInsn "mov" for 0x402a59>, <DisassemblerInsn "mov" for 0x402a60>, <DisassemblerInsn "mov" for 0x402a68>, <DisassemblerInsn "mov" for 0x402a6a>, <DisassemblerInsn "shl" for 0x402a71>, <DisassemblerInsn "mov" for 0x402a73>, <DisassemblerInsn "mov" for 0x402a7a>, <DisassemblerInsn "shl" for 0x402a7d>, <DisassemblerInsn "mov" for 0x402a7f>, <DisassemblerInsn "mov" for 0x402a81>, <DisassemblerInsn "mov" for 0x402a84>, <DisassemblerInsn "add" for 0x402a87>, <DisassemblerInsn "mov" for 0x402a8b>, <DisassemblerInsn "mov" for 0x402a8f>, <DisassemblerInsn "mov" for 0x402a97>, <DisassemblerInsn "mov" for 0x402a9f>, <DisassemblerInsn "mov" for 0x402aa7>, <DisassemblerInsn "mov" for 0x402aaf>, <DisassemblerInsn "mov" for 0x402ab7>, <DisassemblerInsn "add" for 0x402abf>, <DisassemblerInsn "movsxd" for 0x402ac3>, <DisassemblerInsn "cmp" for 0x402ac6>, <DisassemblerInsn "mov" for 0x402ac9>, <DisassemblerInsn "mov" for 0x402ad1>, <DisassemblerInsn "mov" for 0x402ad9>, <DisassemblerInsn "jl" for 0x402ae1>]'}, {'block_Idx': 139, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013d0>, <DisassemblerInsn "mov" for 0x4013d8>, <DisassemblerInsn "mov" for 0x4013e0>, <DisassemblerInsn "mov" for 0x4013e2>, <DisassemblerInsn "sar" for 0x4013e4>, <DisassemblerInsn "movsxd" for 0x4013e7>, <DisassemblerInsn "mov" for 0x4013ea>, <DisassemblerInsn "ror" for 0x4013ed>, <DisassemblerInsn "ror" for 0x4013f1>, <DisassemblerInsn "ror" for 0x4013f4>, <DisassemblerInsn "mov" for 0x4013f8>, <DisassemblerInsn "and" for 0x4013fa>, <DisassemblerInsn "shl" for 0x4013fd>, <DisassemblerInsn "mov" for 0x4013ff>, <DisassemblerInsn "shr" for 0x401407>, <DisassemblerInsn "add" for 0x40140a>, <DisassemblerInsn "mov" for 0x40140d>, <DisassemblerInsn "imul" for 0x40140f>, <DisassemblerInsn "mov" for 0x401412>, <DisassemblerInsn "jmp" for 0x401419>]'}, {'block_Idx': 154, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015ab>, <DisassemblerInsn "or" for 0x4015b2>, <DisassemblerInsn "sub" for 0x4015b5>, <DisassemblerInsn "je" for 0x4015b8>]'}, {'block_Idx': 157, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f11>, <DisassemblerInsn "mov" for 0x402f14>, <DisassemblerInsn "mov" for 0x402f19>, <DisassemblerInsn "add" for 0x402f20>, <DisassemblerInsn "ret" for 0x402f24>]'}, {'block_Idx': 202, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402588>, <DisassemblerInsn "mov" for 0x402590>, <DisassemblerInsn "mov" for 0x402597>, <DisassemblerInsn "mov" for 0x40259f>, <DisassemblerInsn "shl" for 0x4025a1>, <DisassemblerInsn "mov" for 0x4025a3>, <DisassemblerInsn "mov" for 0x4025ab>, <DisassemblerInsn "add" for 0x4025ae>, <DisassemblerInsn "mov" for 0x4025b2>, <DisassemblerInsn "mov" for 0x4025b4>, <DisassemblerInsn "mov" for 0x4025bc>, <DisassemblerInsn "jmp" for 0x4025c4>]'}, {'block_Idx': 174, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4026af>, <DisassemblerInsn "mov" for 0x4026b7>, <DisassemblerInsn "add" for 0x4026ba>, <DisassemblerInsn "mov" for 0x4026be>, <DisassemblerInsn "cmp" for 0x4026c6>, <DisassemblerInsn "jle" for 0x4026ca>]'}, {'block_Idx': 326, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fc1>, <DisassemblerInsn "mov" for 0x401fc8>, <DisassemblerInsn "cmp" for 0x401fcf>, <DisassemblerInsn "jle" for 0x401fd1>]'}, {'block_Idx': 240, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d6b>, <DisassemblerInsn "mov" for 0x401d72>, <DisassemblerInsn "mov" for 0x401d7a>, <DisassemblerInsn "mov" for 0x401d82>, <DisassemblerInsn "call" for 0x401d84>]'}, {'block_Idx': 381, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40370f>, <DisassemblerInsn "mov" for 0x403715>, <DisassemblerInsn "pop" for 0x403718>, <DisassemblerInsn "ret" for 0x403719>]'}, {'block_Idx': 328, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40201c>, <DisassemblerInsn "mov" for 0x402023>, <DisassemblerInsn "cmp" for 0x40202a>, <DisassemblerInsn "jle" for 0x40202c>]'}, {'block_Idx': 169, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401631>, <DisassemblerInsn "mov" for 0x401639>, <DisassemblerInsn "xor" for 0x40163c>, <DisassemblerInsn "lea" for 0x40163e>, <DisassemblerInsn "mov" for 0x401645>, <DisassemblerInsn "call" for 0x401647>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40059e>, <DisassemblerInsn "mov" for 0x4005a6>, <DisassemblerInsn "mov" for 0x4005ad>, <DisassemblerInsn "mov" for 0x4005b5>, <DisassemblerInsn "mov" for 0x4005b7>, <DisassemblerInsn "xor" for 0x4005be>, <DisassemblerInsn "cmp" for 0x4005c0>, <DisassemblerInsn "mov" for 0x4005c3>, <DisassemblerInsn "mov" for 0x4005ca>, <DisassemblerInsn "mov" for 0x4005d1>, <DisassemblerInsn "je" for 0x4005d9>]'}, {'block_Idx': 188, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017b4>, <DisassemblerInsn "test" for 0x4017bb>, <DisassemblerInsn "je" for 0x4017bd>]'}, {'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401756>, <DisassemblerInsn "mov" for 0x40175d>, <DisassemblerInsn "mov" for 0x401765>, <DisassemblerInsn "sub" for 0x401767>, <DisassemblerInsn "mov" for 0x401769>, <DisassemblerInsn "mov" for 0x40176b>, <DisassemblerInsn "mov" for 0x401772>, <DisassemblerInsn "mov" for 0x40177a>, <DisassemblerInsn "mov" for 0x401781>, <DisassemblerInsn "mov" for 0x401788>, <DisassemblerInsn "mov" for 0x40178a>, <DisassemblerInsn "cmp" for 0x401791>, <DisassemblerInsn "jle" for 0x401794>]'}, {'block_Idx': 67, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007e5>, <DisassemblerInsn "mov" for 0x4007ed>, <DisassemblerInsn "mov" for 0x4007f5>, <DisassemblerInsn "mov" for 0x4007fd>, <DisassemblerInsn "mov" for 0x400805>, <DisassemblerInsn "mov" for 0x40080c>, <DisassemblerInsn "mov" for 0x400813>, <DisassemblerInsn "add" for 0x400815>, <DisassemblerInsn "mov" for 0x400818>, <DisassemblerInsn "add" for 0x40081a>, <DisassemblerInsn "mov" for 0x40081c>, <DisassemblerInsn "cmp" for 0x40081e>, <DisassemblerInsn "setl" for 0x400820>, <DisassemblerInsn "cmp" for 0x400824>, <DisassemblerInsn "setne" for 0x400827>, <DisassemblerInsn "and" for 0x40082b>, <DisassemblerInsn "test" for 0x40082e>, <DisassemblerInsn "mov" for 0x400832>, <DisassemblerInsn "mov" for 0x400834>, <DisassemblerInsn "mov" for 0x40083b>, <DisassemblerInsn "mov" for 0x400842>, <DisassemblerInsn "mov" for 0x40084a>, <DisassemblerInsn "jne" for 0x400851>]'}, {'block_Idx': 309, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ea0>, <DisassemblerInsn "mov" for 0x401ea7>, <DisassemblerInsn "mov" for 0x401eae>, <DisassemblerInsn "mov" for 0x401eb5>, <DisassemblerInsn "mov" for 0x401eb7>, <DisassemblerInsn "sub" for 0x401ebf>, <DisassemblerInsn "ja" for 0x401ec2>]'}, {'block_Idx': 104, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011ba>, <DisassemblerInsn "mov" for 0x4011c2>, <DisassemblerInsn "mov" for 0x4011ca>, <DisassemblerInsn "mov" for 0x4011cc>, <DisassemblerInsn "sar" for 0x4011ce>, <DisassemblerInsn "movsxd" for 0x4011d1>, <DisassemblerInsn "mov" for 0x4011d4>, <DisassemblerInsn "ror" for 0x4011d7>, <DisassemblerInsn "ror" for 0x4011db>, <DisassemblerInsn "ror" for 0x4011de>, <DisassemblerInsn "mov" for 0x4011e2>, <DisassemblerInsn "and" for 0x4011e4>, <DisassemblerInsn "shl" for 0x4011e7>, <DisassemblerInsn "mov" for 0x4011e9>, <DisassemblerInsn "shr" for 0x4011f1>, <DisassemblerInsn "add" for 0x4011f4>, <DisassemblerInsn "mov" for 0x4011f7>, <DisassemblerInsn "add" for 0x4011f9>, <DisassemblerInsn "mov" for 0x4011fc>, <DisassemblerInsn "jmp" for 0x401203>]'}, {'block_Idx': 204, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402bf2>, <DisassemblerInsn "mov" for 0x402bf7>, <DisassemblerInsn "mov" for 0x402bfb>, <DisassemblerInsn "mov" for 0x402c00>, <DisassemblerInsn "mov" for 0x402c04>, <DisassemblerInsn "shl" for 0x402c06>, <DisassemblerInsn "mov" for 0x402c08>, <DisassemblerInsn "mov" for 0x402c0a>, <DisassemblerInsn "mov" for 0x402c0c>, <DisassemblerInsn "shl" for 0x402c0e>, <DisassemblerInsn "mov" for 0x402c10>, <DisassemblerInsn "mov" for 0x402c15>, <DisassemblerInsn "add" for 0x402c18>, <DisassemblerInsn "mov" for 0x402c1c>, <DisassemblerInsn "mov" for 0x402c1f>, <DisassemblerInsn "mov" for 0x402c24>, <DisassemblerInsn "jmp" for 0x402c29>]'}, {'block_Idx': 112, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012da>, <DisassemblerInsn "cmp" for 0x4012e1>, <DisassemblerInsn "jge" for 0x4012e4>]'}, {'block_Idx': 163, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40143d>]'}, {'block_Idx': 200, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402698>]'}, {'block_Idx': 282, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d92>, <DisassemblerInsn "test" for 0x401d99>, <DisassemblerInsn "jne" for 0x401d9b>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40058c>, <DisassemblerInsn "mov" for 0x40058f>, <DisassemblerInsn "mov" for 0x400597>, <DisassemblerInsn "mov" for 0x40059e>, <DisassemblerInsn "mov" for 0x4005a6>, <DisassemblerInsn "mov" for 0x4005ad>, <DisassemblerInsn "mov" for 0x4005b5>, <DisassemblerInsn "mov" for 0x4005b7>, <DisassemblerInsn "xor" for 0x4005be>, <DisassemblerInsn "cmp" for 0x4005c0>, <DisassemblerInsn "mov" for 0x4005c3>, <DisassemblerInsn "mov" for 0x4005ca>, <DisassemblerInsn "mov" for 0x4005d1>, <DisassemblerInsn "je" for 0x4005d9>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d7d>, <DisassemblerInsn "add" for 0x400d84>, <DisassemblerInsn "cmp" for 0x400d87>, <DisassemblerInsn "jae" for 0x400d8a>]'}, {'block_Idx': 102, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401272>, <DisassemblerInsn "mov" for 0x401279>, <DisassemblerInsn "mov" for 0x401281>, <DisassemblerInsn "mov" for 0x401288>, <DisassemblerInsn "add" for 0x40128b>, <DisassemblerInsn "mov" for 0x40128f>, <DisassemblerInsn "imul" for 0x401297>, <DisassemblerInsn "mov" for 0x40129b>, <DisassemblerInsn "mov" for 0x4012a0>, <DisassemblerInsn "cmp" for 0x4012a5>, <DisassemblerInsn "cmove" for 0x4012a9>, <DisassemblerInsn "imul" for 0x4012ac>, <DisassemblerInsn "cmp" for 0x4012af>, <DisassemblerInsn "jg" for 0x4012b1>]'}, {'block_Idx': 294, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401dfc>, <DisassemblerInsn "mov" for 0x401e03>, <DisassemblerInsn "mov" for 0x401e0a>, <DisassemblerInsn "cmp" for 0x401e11>, <DisassemblerInsn "jle" for 0x401e14>]'}, {'block_Idx': 223, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b63>, <DisassemblerInsn "add" for 0x401b6a>, <DisassemblerInsn "cmp" for 0x401b6d>, <DisassemblerInsn "jae" for 0x401b70>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400dad>, <DisassemblerInsn "mov" for 0x400db4>, <DisassemblerInsn "mov" for 0x400dbc>, <DisassemblerInsn "mov" for 0x400dc0>, <DisassemblerInsn "xor" for 0x400dc4>, <DisassemblerInsn "lea" for 0x400dc6>, <DisassemblerInsn "mov" for 0x400dcd>, <DisassemblerInsn "call" for 0x400dcf>]'}, {'block_Idx': 123, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401466>, <DisassemblerInsn "mov" for 0x40146e>, <DisassemblerInsn "mov" for 0x401471>, <DisassemblerInsn "mov" for 0x401479>, <DisassemblerInsn "mov" for 0x40147c>, <DisassemblerInsn "mov" for 0x401484>, <DisassemblerInsn "mov" for 0x401486>, <DisassemblerInsn "cdq" for 0x40148b>, <DisassemblerInsn "idiv" for 0x40148c>, <DisassemblerInsn "mov" for 0x40148e>, <DisassemblerInsn "movsxd" for 0x401496>, <DisassemblerInsn "xor" for 0x401499>, <DisassemblerInsn "call" for 0x40149b>]'}, {'block_Idx': 228, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017d3>, <DisassemblerInsn "cmp" for 0x4017db>, <DisassemblerInsn "jle" for 0x4017de>]'}, {'block_Idx': 115, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401442>, <DisassemblerInsn "mov" for 0x40144a>, <DisassemblerInsn "mov" for 0x401451>, <DisassemblerInsn "mov" for 0x401458>, <DisassemblerInsn "add" for 0x40145a>, <DisassemblerInsn "mov" for 0x40145d>, <DisassemblerInsn "xor" for 0x40145f>, <DisassemblerInsn "call" for 0x401461>]'}, {'block_Idx': 52, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e64>, <DisassemblerInsn "mov" for 0x400e6b>, <DisassemblerInsn "mov" for 0x400e73>, <DisassemblerInsn "xor" for 0x400e77>, <DisassemblerInsn "lea" for 0x400e79>, <DisassemblerInsn "mov" for 0x400e80>, <DisassemblerInsn "call" for 0x400e82>]'}, {'block_Idx': 111, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012c3>, <DisassemblerInsn "mov" for 0x4012cb>, <DisassemblerInsn "mov" for 0x4012ce>, <DisassemblerInsn "jmp" for 0x4012d5>]'}, {'block_Idx': 99, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401220>, <DisassemblerInsn "mov" for 0x401228>, <DisassemblerInsn "mov" for 0x40122f>, <DisassemblerInsn "mov" for 0x401236>, <DisassemblerInsn "mov" for 0x401238>, <DisassemblerInsn "cmp" for 0x40123f>, <DisassemblerInsn "jle" for 0x401241>]'}, {'block_Idx': 293, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401dbd>, <DisassemblerInsn "mov" for 0x401dc4>, <DisassemblerInsn "mov" for 0x401dcb>, <DisassemblerInsn "cmp" for 0x401dd2>, <DisassemblerInsn "jle" for 0x401dd5>]'}, {'block_Idx': 27, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b01>, <DisassemblerInsn "cmp" for 0x400b09>, <DisassemblerInsn "jne" for 0x400b0c>]'}, {'block_Idx': 140, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401332>]'}, {'block_Idx': 55, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c74>, <DisassemblerInsn "mov" for 0x400c7c>, <DisassemblerInsn "add" for 0x400c83>, <DisassemblerInsn "mov" for 0x400c86>, <DisassemblerInsn "mov" for 0x400c8d>, <DisassemblerInsn "mov" for 0x400c8f>, <DisassemblerInsn "cdq" for 0x400c94>, <DisassemblerInsn "idiv" for 0x400c95>, <DisassemblerInsn "mov" for 0x400c97>, <DisassemblerInsn "mov" for 0x400c9e>, <DisassemblerInsn "mov" for 0x400ca0>, <DisassemblerInsn "add" for 0x400ca7>, <DisassemblerInsn "cmp" for 0x400caa>, <DisassemblerInsn "mov" for 0x400cac>, <DisassemblerInsn "jl" for 0x400cb3>]'}, {'block_Idx': 347, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4021ae>, <DisassemblerInsn "mov" for 0x4021b6>, <DisassemblerInsn "mov" for 0x4021bd>, <DisassemblerInsn "mov" for 0x4021c4>, <DisassemblerInsn "mov" for 0x4021cb>, <DisassemblerInsn "mov" for 0x4021d3>, <DisassemblerInsn "mov" for 0x4021db>, <DisassemblerInsn "add" for 0x4021e3>, <DisassemblerInsn "mov" for 0x4021e7>, <DisassemblerInsn "mov" for 0x4021ee>, <DisassemblerInsn "add" for 0x4021f0>, <DisassemblerInsn "mov" for 0x4021f2>, <DisassemblerInsn "mov" for 0x4021f9>, <DisassemblerInsn "add" for 0x4021fb>, <DisassemblerInsn "mov" for 0x4021fd>, <DisassemblerInsn "mov" for 0x402204>, <DisassemblerInsn "add" for 0x402206>, <DisassemblerInsn "mov" for 0x402209>, <DisassemblerInsn "mov" for 0x402210>, <DisassemblerInsn "add" for 0x402214>, <DisassemblerInsn "mov" for 0x402218>, <DisassemblerInsn "cmp" for 0x402220>, <DisassemblerInsn "mov" for 0x402223>, <DisassemblerInsn "mov" for 0x40222b>, <DisassemblerInsn "mov" for 0x402232>, <DisassemblerInsn "mov" for 0x402239>, <DisassemblerInsn "mov" for 0x402240>, <DisassemblerInsn "je" for 0x402247>]'}, {'block_Idx': 162, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4015ba>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400658>, <DisassemblerInsn "mov" for 0x40065f>, <DisassemblerInsn "mov" for 0x400666>, <DisassemblerInsn "mov" for 0x40066d>, <DisassemblerInsn "add" for 0x40066f>, <DisassemblerInsn "mov" for 0x400671>, <DisassemblerInsn "mov" for 0x400678>, <DisassemblerInsn "cmp" for 0x40067d>, <DisassemblerInsn "mov" for 0x40067f>, <DisassemblerInsn "jb" for 0x400686>]'}, {'block_Idx': 166, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40269d>, <DisassemblerInsn "cmp" for 0x4026a5>, <DisassemblerInsn "jne" for 0x4026a9>]'}, {'block_Idx': 244, 'blockInsts': '[<DisassemblerInsn "push" for 0x402f30>, <DisassemblerInsn "mov" for 0x402f31>, <DisassemblerInsn "sub" for 0x402f34>, <DisassemblerInsn "mov" for 0x402f3b>, <DisassemblerInsn "mov" for 0x402f3e>, <DisassemblerInsn "mov" for 0x402f41>, <DisassemblerInsn "mov" for 0x402f45>, <DisassemblerInsn "lea" for 0x402f47>, <DisassemblerInsn "and" for 0x402f4f>, <DisassemblerInsn "mov" for 0x402f53>, <DisassemblerInsn "sub" for 0x402f56>, <DisassemblerInsn "mov" for 0x402f59>, <DisassemblerInsn "mov" for 0x402f5d>, <DisassemblerInsn "movsxd" for 0x402f60>, <DisassemblerInsn "mov" for 0x402f63>, <DisassemblerInsn "mov" for 0x402f68>, <DisassemblerInsn "cmp" for 0x402f6c>, <DisassemblerInsn "jle" for 0x402f6f>]'}, {'block_Idx': 215, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4028c2>]'}, {'block_Idx': 128, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401388>, <DisassemblerInsn "mov" for 0x401390>, <DisassemblerInsn "mov" for 0x401398>, <DisassemblerInsn "mov" for 0x40139a>, <DisassemblerInsn "sar" for 0x40139c>, <DisassemblerInsn "movsxd" for 0x40139f>, <DisassemblerInsn "mov" for 0x4013a2>, <DisassemblerInsn "ror" for 0x4013a5>, <DisassemblerInsn "ror" for 0x4013a9>, <DisassemblerInsn "ror" for 0x4013ac>, <DisassemblerInsn "mov" for 0x4013b0>, <DisassemblerInsn "and" for 0x4013b2>, <DisassemblerInsn "shl" for 0x4013b5>, <DisassemblerInsn "mov" for 0x4013b7>, <DisassemblerInsn "shr" for 0x4013bf>, <DisassemblerInsn "add" for 0x4013c2>, <DisassemblerInsn "mov" for 0x4013c5>, <DisassemblerInsn "mov" for 0x4013c7>, <DisassemblerInsn "jmp" for 0x4013ce>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402408>, <DisassemblerInsn "mov" for 0x402410>, <DisassemblerInsn "add" for 0x402413>, <DisassemblerInsn "mov" for 0x402417>, <DisassemblerInsn "cmp" for 0x40241f>, <DisassemblerInsn "jle" for 0x402423>]'}, {'block_Idx': 100, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40113e>, <DisassemblerInsn "sub" for 0x401145>, <DisassemblerInsn "je" for 0x401148>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40298f>, <DisassemblerInsn "mov" for 0x402997>, <DisassemblerInsn "mov" for 0x40299f>, <DisassemblerInsn "mov" for 0x4029a7>, <DisassemblerInsn "mov" for 0x4029af>, <DisassemblerInsn "mov" for 0x4029b7>, <DisassemblerInsn "mov" for 0x4029bf>, <DisassemblerInsn "mov" for 0x4029c7>, <DisassemblerInsn "mov" for 0x4029cf>, <DisassemblerInsn "mov" for 0x4029d7>, <DisassemblerInsn "mov" for 0x4029da>, <DisassemblerInsn "mov" for 0x4029dd>, <DisassemblerInsn "mov" for 0x4029e4>, <DisassemblerInsn "add" for 0x4029e6>, <DisassemblerInsn "mov" for 0x4029e8>, <DisassemblerInsn "cmp" for 0x4029ef>, <DisassemblerInsn "je" for 0x4029f2>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40189b>, <DisassemblerInsn "mov" for 0x4018a3>, <DisassemblerInsn "mov" for 0x4018aa>, <DisassemblerInsn "mov" for 0x4018b1>, <DisassemblerInsn "mov" for 0x4018b9>, <DisassemblerInsn "shr" for 0x4018c1>, <DisassemblerInsn "mov" for 0x4018c5>, <DisassemblerInsn "add" for 0x4018c8>, <DisassemblerInsn "mov" for 0x4018cc>, <DisassemblerInsn "mov" for 0x4018cf>, <DisassemblerInsn "add" for 0x4018d1>, <DisassemblerInsn "mov" for 0x4018d4>, <DisassemblerInsn "shl" for 0x4018db>, <DisassemblerInsn "mov" for 0x4018de>, <DisassemblerInsn "mov" for 0x4018e5>, <DisassemblerInsn "sar" for 0x4018ed>, <DisassemblerInsn "movsxd" for 0x4018f1>, <DisassemblerInsn "mov" for 0x4018f4>, <DisassemblerInsn "ror" for 0x4018f8>, <DisassemblerInsn "ror" for 0x4018fc>, <DisassemblerInsn "ror" for 0x4018ff>, <DisassemblerInsn "shl" for 0x401903>, <DisassemblerInsn "mov" for 0x401905>, <DisassemblerInsn "mov" for 0x40190c>, <DisassemblerInsn "xor" for 0x40190f>, <DisassemblerInsn "sub" for 0x401911>, <DisassemblerInsn "shr" for 0x401914>, <DisassemblerInsn "mov" for 0x401916>, <DisassemblerInsn "add" for 0x40191d>, <DisassemblerInsn "mov" for 0x40191f>, <DisassemblerInsn "or" for 0x401921>, <DisassemblerInsn "mov" for 0x401923>, <DisassemblerInsn "mov" for 0x40192a>, <DisassemblerInsn "mov" for 0x401932>, <DisassemblerInsn "mov" for 0x401939>, <DisassemblerInsn "mov" for 0x401940>, <DisassemblerInsn "sub" for 0x401945>, <DisassemblerInsn "mov" for 0x401947>, <DisassemblerInsn "shl" for 0x40194e>, <DisassemblerInsn "mov" for 0x401950>, <DisassemblerInsn "sar" for 0x401957>, <DisassemblerInsn "mov" for 0x401959>, <DisassemblerInsn "cmp" for 0x401960>, <DisassemblerInsn "jle" for 0x401963>]'}, {'block_Idx': 250, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4022cf>]'}, {'block_Idx': 234, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401bc6>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40068c>, <DisassemblerInsn "mov" for 0x400693>, <DisassemblerInsn "mov" for 0x40069a>, <DisassemblerInsn "mov" for 0x4006a2>, <DisassemblerInsn "add" for 0x4006a5>, <DisassemblerInsn "mov" for 0x4006ac>, <DisassemblerInsn "mov" for 0x4006b4>, <DisassemblerInsn "add" for 0x4006ba>, <DisassemblerInsn "xor" for 0x4006bc>, <DisassemblerInsn "mov" for 0x4006bf>, <DisassemblerInsn "cmp" for 0x4006c4>, <DisassemblerInsn "mov" for 0x4006c6>, <DisassemblerInsn "ja" for 0x4006cd>]'}, {'block_Idx': 165, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402aec>, <DisassemblerInsn "cmp" for 0x402af4>, <DisassemblerInsn "jne" for 0x402af8>]'}, {'block_Idx': 219, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40192a>, <DisassemblerInsn "mov" for 0x401932>, <DisassemblerInsn "mov" for 0x401939>, <DisassemblerInsn "mov" for 0x401940>, <DisassemblerInsn "sub" for 0x401945>, <DisassemblerInsn "mov" for 0x401947>, <DisassemblerInsn "shl" for 0x40194e>, <DisassemblerInsn "mov" for 0x401950>, <DisassemblerInsn "sar" for 0x401957>, <DisassemblerInsn "mov" for 0x401959>, <DisassemblerInsn "cmp" for 0x401960>, <DisassemblerInsn "jle" for 0x401963>]'}, {'block_Idx': 79, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401103>, <DisassemblerInsn "mov" for 0x40110b>, <DisassemblerInsn "xor" for 0x40110e>, <DisassemblerInsn "lea" for 0x401110>, <DisassemblerInsn "mov" for 0x401117>, <DisassemblerInsn "call" for 0x401119>]'}, {'block_Idx': 39, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d7e>, <DisassemblerInsn "mov" for 0x402d85>, <DisassemblerInsn "mov" for 0x402d8a>, <DisassemblerInsn "mov" for 0x402d8e>, <DisassemblerInsn "mov" for 0x402d92>, <DisassemblerInsn "mov" for 0x402d9a>, <DisassemblerInsn "add" for 0x402d9d>, <DisassemblerInsn "mov" for 0x402da4>, <DisassemblerInsn "sub" for 0x402dab>, <DisassemblerInsn "mov" for 0x402dad>, <DisassemblerInsn "mov" for 0x402daf>, <DisassemblerInsn "mov" for 0x402db6>, <DisassemblerInsn "add" for 0x402dbd>, <DisassemblerInsn "ret" for 0x402dc4>]'}, {'block_Idx': 133, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014a0>, <DisassemblerInsn "cmp" for 0x4014a7>, <DisassemblerInsn "je" for 0x4014aa>]'}, {'block_Idx': 120, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401337>, <DisassemblerInsn "mov" for 0x40133f>, <DisassemblerInsn "mov" for 0x401347>, <DisassemblerInsn "mov" for 0x401349>, <DisassemblerInsn "sar" for 0x40134b>, <DisassemblerInsn "movsxd" for 0x40134e>, <DisassemblerInsn "mov" for 0x401351>, <DisassemblerInsn "ror" for 0x401354>, <DisassemblerInsn "ror" for 0x401358>, <DisassemblerInsn "ror" for 0x40135b>, <DisassemblerInsn "mov" for 0x40135f>, <DisassemblerInsn "and" for 0x401361>, <DisassemblerInsn "shl" for 0x401364>, <DisassemblerInsn "mov" for 0x401366>, <DisassemblerInsn "shr" for 0x40136e>, <DisassemblerInsn "add" for 0x401371>, <DisassemblerInsn "mov" for 0x401374>, <DisassemblerInsn "imul" for 0x401376>, <DisassemblerInsn "mov" for 0x40137c>, <DisassemblerInsn "jmp" for 0x401383>]'}, {'block_Idx': 88, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40112e>]'}, {'block_Idx': 295, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401dd7>, <DisassemblerInsn "mov" for 0x401ddf>, <DisassemblerInsn "mov" for 0x401de6>, <DisassemblerInsn "add" for 0x401ded>, <DisassemblerInsn "mov" for 0x401df0>, <DisassemblerInsn "sub" for 0x401df2>, <DisassemblerInsn "mov" for 0x401df5>, <DisassemblerInsn "mov" for 0x401dfc>, <DisassemblerInsn "mov" for 0x401e03>, <DisassemblerInsn "mov" for 0x401e0a>, <DisassemblerInsn "cmp" for 0x401e11>, <DisassemblerInsn "jle" for 0x401e14>]'}, {'block_Idx': 227, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4019ce>]'}, {'block_Idx': 192, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402650>, <DisassemblerInsn "mov" for 0x402658>, <DisassemblerInsn "mov" for 0x402660>, <DisassemblerInsn "mov" for 0x402668>, <DisassemblerInsn "add" for 0x402670>, <DisassemblerInsn "movsxd" for 0x402674>, <DisassemblerInsn "cmp" for 0x402677>, <DisassemblerInsn "mov" for 0x40267a>, <DisassemblerInsn "mov" for 0x402682>, <DisassemblerInsn "mov" for 0x40268a>, <DisassemblerInsn "jl" for 0x402692>]'}, {'block_Idx': 327, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f58>, <DisassemblerInsn "mov" for 0x401f5f>, <DisassemblerInsn "cmp" for 0x401f66>, <DisassemblerInsn "jle" for 0x401f68>]'}, {'block_Idx': 152, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023aa>, <DisassemblerInsn "mov" for 0x4023b2>, <DisassemblerInsn "mov" for 0x4023b9>, <DisassemblerInsn "add" for 0x4023c0>, <DisassemblerInsn "mov" for 0x4023c2>, <DisassemblerInsn "mov" for 0x4023c4>, <DisassemblerInsn "mov" for 0x4023cc>, <DisassemblerInsn "mov" for 0x4023d4>, <DisassemblerInsn "add" for 0x4023d6>, <DisassemblerInsn "mov" for 0x4023d9>, <DisassemblerInsn "mov" for 0x4023db>, <DisassemblerInsn "mov" for 0x4023de>, <DisassemblerInsn "sub" for 0x4023e6>, <DisassemblerInsn "ja" for 0x4023ea>]'}, {'block_Idx': 238, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402314>, <DisassemblerInsn "mov" for 0x40231c>, <DisassemblerInsn "mov" for 0x402324>, <DisassemblerInsn "mov" for 0x40232b>, <DisassemblerInsn "shl" for 0x40232e>, <DisassemblerInsn "mov" for 0x402330>, <DisassemblerInsn "mov" for 0x402338>, <DisassemblerInsn "mov" for 0x40233f>, <DisassemblerInsn "add" for 0x402342>, <DisassemblerInsn "mov" for 0x402346>, <DisassemblerInsn "movsxd" for 0x40234e>, <DisassemblerInsn "cmp" for 0x402351>, <DisassemblerInsn "mov" for 0x402354>, <DisassemblerInsn "jl" for 0x40235c>]'}, {'block_Idx': 49, 'blockInsts': '[<DisassemblerInsn "sub" for 0x400110>, <DisassemblerInsn "mov" for 0x400114>, <DisassemblerInsn "mov" for 0x400119>, <DisassemblerInsn "mov" for 0x40011e>, <DisassemblerInsn "mov" for 0x400123>, <DisassemblerInsn "ror" for 0x400126>, <DisassemblerInsn "ror" for 0x40012a>, <DisassemblerInsn "ror" for 0x40012d>, <DisassemblerInsn "shr" for 0x400131>, <DisassemblerInsn "mov" for 0x400134>, <DisassemblerInsn "mov" for 0x400138>, <DisassemblerInsn "cmp" for 0x40013a>, <DisassemblerInsn "jge" for 0x40013d>]'}, {'block_Idx': 167, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4028c7>, <DisassemblerInsn "cmp" for 0x4028cf>, <DisassemblerInsn "jne" for 0x4028d3>]'}, {'block_Idx': 20, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402cd6>, <DisassemblerInsn "mov" for 0x402cdd>, <DisassemblerInsn "mov" for 0x402ce5>, <DisassemblerInsn "add" for 0x402ce7>, <DisassemblerInsn "mov" for 0x402cea>, <DisassemblerInsn "cdq" for 0x402cef>, <DisassemblerInsn "idiv" for 0x402cf0>, <DisassemblerInsn "mov" for 0x402cf2>, <DisassemblerInsn "cmp" for 0x402cf6>, <DisassemblerInsn "jle" for 0x402cf8>]'}, {'block_Idx': 28, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b5d>, <DisassemblerInsn "cmp" for 0x400b64>, <DisassemblerInsn "jle" for 0x400b67>]'}, {'block_Idx': 248, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d14>, <DisassemblerInsn "mov" for 0x401d1c>, <DisassemblerInsn "mov" for 0x401d24>, <DisassemblerInsn "mov" for 0x401d2b>, <DisassemblerInsn "mov" for 0x401d32>, <DisassemblerInsn "sub" for 0x401d37>, <DisassemblerInsn "mov" for 0x401d39>, <DisassemblerInsn "shl" for 0x401d40>, <DisassemblerInsn "mov" for 0x401d42>, <DisassemblerInsn "sar" for 0x401d49>, <DisassemblerInsn "mov" for 0x401d4b>, <DisassemblerInsn "mov" for 0x401d53>, <DisassemblerInsn "add" for 0x401d56>, <DisassemblerInsn "cmp" for 0x401d5a>, <DisassemblerInsn "mov" for 0x401d5d>, <DisassemblerInsn "jne" for 0x401d65>]'}, {'block_Idx': 151, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023c4>, <DisassemblerInsn "mov" for 0x4023cc>, <DisassemblerInsn "mov" for 0x4023d4>, <DisassemblerInsn "add" for 0x4023d6>, <DisassemblerInsn "mov" for 0x4023d9>, <DisassemblerInsn "mov" for 0x4023db>, <DisassemblerInsn "mov" for 0x4023de>, <DisassemblerInsn "sub" for 0x4023e6>, <DisassemblerInsn "ja" for 0x4023ea>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cbe>, <DisassemblerInsn "mov" for 0x400cc6>, <DisassemblerInsn "mov" for 0x400cce>, <DisassemblerInsn "mov" for 0x400cd4>, <DisassemblerInsn "add" for 0x400cd7>, <DisassemblerInsn "mov" for 0x400cdb>, <DisassemblerInsn "mov" for 0x400ce3>, <DisassemblerInsn "add" for 0x400ce6>, <DisassemblerInsn "mov" for 0x400cea>, <DisassemblerInsn "mov" for 0x400cf2>, <DisassemblerInsn "mov" for 0x400cf6>, <DisassemblerInsn "mov" for 0x400cfe>, <DisassemblerInsn "mov" for 0x400d01>, <DisassemblerInsn "ror" for 0x400d03>, <DisassemblerInsn "ror" for 0x400d07>, <DisassemblerInsn "ror" for 0x400d0a>, <DisassemblerInsn "shr" for 0x400d0e>, <DisassemblerInsn "mov" for 0x400d11>, <DisassemblerInsn "ror" for 0x400d18>, <DisassemblerInsn "ror" for 0x400d1c>, <DisassemblerInsn "ror" for 0x400d1f>, <DisassemblerInsn "shl" for 0x400d23>, <DisassemblerInsn "shr" for 0x400d26>, <DisassemblerInsn "mov" for 0x400d29>, <DisassemblerInsn "mov" for 0x400d30>, <DisassemblerInsn "mov" for 0x400d37>, <DisassemblerInsn "ror" for 0x400d3a>, <DisassemblerInsn "ror" for 0x400d3e>, <DisassemblerInsn "ror" for 0x400d41>, <DisassemblerInsn "shr" for 0x400d45>, <DisassemblerInsn "mov" for 0x400d48>, <DisassemblerInsn "mov" for 0x400d4f>, <DisassemblerInsn "cmp" for 0x400d56>, <DisassemblerInsn "jge" for 0x400d59>]'}, {'block_Idx': 182, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b1f>, <DisassemblerInsn "mov" for 0x402b27>, <DisassemblerInsn "mov" for 0x402b2f>, <DisassemblerInsn "mov" for 0x402b37>, <DisassemblerInsn "mov" for 0x402b3b>, <DisassemblerInsn "mov" for 0x402b40>, <DisassemblerInsn "mov" for 0x402b44>, <DisassemblerInsn "mov" for 0x402b49>, <DisassemblerInsn "add" for 0x402b4c>, <DisassemblerInsn "mov" for 0x402b50>, <DisassemblerInsn "mov" for 0x402b55>, <DisassemblerInsn "add" for 0x402b58>, <DisassemblerInsn "mov" for 0x402b5c>, <DisassemblerInsn "add" for 0x402b61>, <DisassemblerInsn "mov" for 0x402b65>, <DisassemblerInsn "xor" for 0x402b6a>, <DisassemblerInsn "mov" for 0x402b6c>, <DisassemblerInsn "mov" for 0x402b71>, <DisassemblerInsn "mov" for 0x402b79>, <DisassemblerInsn "jmp" for 0x402b81>]'}, {'block_Idx': 50, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d23>, <DisassemblerInsn "mov" for 0x402d2b>, <DisassemblerInsn "mov" for 0x402d35>, <DisassemblerInsn "mov" for 0x402d3f>, <DisassemblerInsn "mov" for 0x402d44>, <DisassemblerInsn "jmp" for 0x402d4b>]'}, {'block_Idx': 220, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022d4>, <DisassemblerInsn "cmp" for 0x4022db>, <DisassemblerInsn "je" for 0x4022de>]'}, {'block_Idx': 206, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4027c6>, <DisassemblerInsn "mov" for 0x4027ce>, <DisassemblerInsn "mov" for 0x4027d6>, <DisassemblerInsn "mov" for 0x4027dd>, <DisassemblerInsn "mov" for 0x4027df>, <DisassemblerInsn "shl" for 0x4027e1>, <DisassemblerInsn "mov" for 0x4027e3>, <DisassemblerInsn "mov" for 0x4027ea>, <DisassemblerInsn "sub" for 0x4027ec>, <DisassemblerInsn "mov" for 0x4027ee>, <DisassemblerInsn "shl" for 0x4027f0>, <DisassemblerInsn "mov" for 0x4027f2>, <DisassemblerInsn "mov" for 0x4027fa>, <DisassemblerInsn "add" for 0x4027fd>, <DisassemblerInsn "mov" for 0x402801>, <DisassemblerInsn "mov" for 0x402804>, <DisassemblerInsn "mov" for 0x40280c>, <DisassemblerInsn "jmp" for 0x402814>]'}, {'block_Idx': 235, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401bcb>, <DisassemblerInsn "mov" for 0x401bd2>, <DisassemblerInsn "mov" for 0x401bd4>, <DisassemblerInsn "xor" for 0x401bdc>, <DisassemblerInsn "mov" for 0x401bde>, <DisassemblerInsn "mov" for 0x401be6>, <DisassemblerInsn "mov" for 0x401bee>, <DisassemblerInsn "mov" for 0x401bf6>, <DisassemblerInsn "mov" for 0x401bfe>, <DisassemblerInsn "mov" for 0x401c06>, <DisassemblerInsn "mov" for 0x401c0e>, <DisassemblerInsn "mov" for 0x401c10>, <DisassemblerInsn "mov" for 0x401c17>, <DisassemblerInsn "mov" for 0x401c19>, <DisassemblerInsn "mov" for 0x401c20>, <DisassemblerInsn "sar" for 0x401c22>, <DisassemblerInsn "movsxd" for 0x401c25>, <DisassemblerInsn "mov" for 0x401c28>, <DisassemblerInsn "ror" for 0x401c2b>, <DisassemblerInsn "ror" for 0x401c2f>, <DisassemblerInsn "ror" for 0x401c32>, <DisassemblerInsn "and" for 0x401c36>, <DisassemblerInsn "mov" for 0x401c39>, <DisassemblerInsn "shl" for 0x401c40>, <DisassemblerInsn "mov" for 0x401c42>, <DisassemblerInsn "cmp" for 0x401c49>, <DisassemblerInsn "jge" for 0x401c4c>]'}, {'block_Idx': 41, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e1d>, <DisassemblerInsn "add" for 0x400e25>, <DisassemblerInsn "mov" for 0x400e29>, <DisassemblerInsn "jmp" for 0x400e31>]'}, {'block_Idx': 338, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fd7>, <DisassemblerInsn "mov" for 0x401fde>, <DisassemblerInsn "mov" for 0x401fe5>, <DisassemblerInsn "mov" for 0x401fec>, <DisassemblerInsn "movsxd" for 0x401ff3>, <DisassemblerInsn "movsxd" for 0x401ff6>, <DisassemblerInsn "mov" for 0x401ff9>, <DisassemblerInsn "mov" for 0x402001>, <DisassemblerInsn "mov" for 0x402009>, <DisassemblerInsn "mov" for 0x402010>, <DisassemblerInsn "jmp" for 0x402017>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e8c>, <DisassemblerInsn "mov" for 0x400e94>, <DisassemblerInsn "mov" for 0x400e9c>, <DisassemblerInsn "mov" for 0x400ea4>, <DisassemblerInsn "mov" for 0x400eac>, <DisassemblerInsn "mov" for 0x400eae>, <DisassemblerInsn "cmp" for 0x400eb5>, <DisassemblerInsn "setg" for 0x400eb8>, <DisassemblerInsn "mov" for 0x400ebc>, <DisassemblerInsn "mov" for 0x400ec0>, <DisassemblerInsn "mov" for 0x400ec6>, <DisassemblerInsn "cmp" for 0x400ecc>, <DisassemblerInsn "cmovg" for 0x400ecf>, <DisassemblerInsn "mov" for 0x400ed3>, <DisassemblerInsn "mov" for 0x400ed9>, <DisassemblerInsn "cmp" for 0x400edf>, <DisassemblerInsn "cmovg" for 0x400ee2>, <DisassemblerInsn "and" for 0x400ee6>, <DisassemblerInsn "movzx" for 0x400eea>, <DisassemblerInsn "mov" for 0x400eee>, <DisassemblerInsn "sub" for 0x400ef2>, <DisassemblerInsn "mov" for 0x400ef5>, <DisassemblerInsn "mov" for 0x400ef9>, <DisassemblerInsn "mov" for 0x400efc>, <DisassemblerInsn "add" for 0x400eff>, <DisassemblerInsn "mov" for 0x400f03>, <DisassemblerInsn "mov" for 0x400f0b>, <DisassemblerInsn "mov" for 0x400f0f>, <DisassemblerInsn "mov" for 0x400f15>, <DisassemblerInsn "add" for 0x400f18>, <DisassemblerInsn "mov" for 0x400f1c>, <DisassemblerInsn "mov" for 0x400f24>, <DisassemblerInsn "mov" for 0x400f27>, <DisassemblerInsn "mov" for 0x400f2a>, <DisassemblerInsn "and" for 0x400f30>, <DisassemblerInsn "cmp" for 0x400f32>, <DisassemblerInsn "je" for 0x400f34>]'}, {'block_Idx': 105, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40114a>]'}, {'block_Idx': 171, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402429>, <DisassemblerInsn "mov" for 0x402431>, <DisassemblerInsn "mov" for 0x402439>, <DisassemblerInsn "mov" for 0x402441>, <DisassemblerInsn "add" for 0x402444>, <DisassemblerInsn "mov" for 0x402448>, <DisassemblerInsn "mov" for 0x402450>, <DisassemblerInsn "add" for 0x402453>, <DisassemblerInsn "mov" for 0x402457>, <DisassemblerInsn "mov" for 0x40245f>, <DisassemblerInsn "add" for 0x402462>, <DisassemblerInsn "mov" for 0x402466>, <DisassemblerInsn "add" for 0x40246e>, <DisassemblerInsn "mov" for 0x402472>, <DisassemblerInsn "xor" for 0x40247a>, <DisassemblerInsn "mov" for 0x40247c>, <DisassemblerInsn "mov" for 0x402484>, <DisassemblerInsn "mov" for 0x40248c>, <DisassemblerInsn "jmp" for 0x402494>]'}, {'block_Idx': 176, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4028d9>, <DisassemblerInsn "mov" for 0x4028e1>, <DisassemblerInsn "add" for 0x4028e4>, <DisassemblerInsn "mov" for 0x4028e8>, <DisassemblerInsn "cmp" for 0x4028f0>, <DisassemblerInsn "jle" for 0x4028f4>]'}, {'block_Idx': 233, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017e4>, <DisassemblerInsn "mov" for 0x4017ec>, <DisassemblerInsn "add" for 0x4017f4>, <DisassemblerInsn "shl" for 0x4017f8>, <DisassemblerInsn "add" for 0x4017fc>, <DisassemblerInsn "mov" for 0x4017ff>, <DisassemblerInsn "xor" for 0x401807>, <DisassemblerInsn "mov" for 0x401809>, <DisassemblerInsn "jmp" for 0x401811>]'}, {'block_Idx': 37, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b0e>, <DisassemblerInsn "mov" for 0x400b16>, <DisassemblerInsn "mov" for 0x400b1d>, <DisassemblerInsn "mov" for 0x400b25>, <DisassemblerInsn "mov" for 0x400b28>, <DisassemblerInsn "cdq" for 0x400b2d>, <DisassemblerInsn "idiv" for 0x400b2e>, <DisassemblerInsn "mov" for 0x400b30>, <DisassemblerInsn "cdqe" for 0x400b38>, <DisassemblerInsn "add" for 0x400b3a>, <DisassemblerInsn "call" for 0x400b3d>]'}, {'block_Idx': 201, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4025c6>, <DisassemblerInsn "mov" for 0x4025ce>, <DisassemblerInsn "mov" for 0x4025d6>, <DisassemblerInsn "mov" for 0x4025dd>, <DisassemblerInsn "mov" for 0x4025e5>, <DisassemblerInsn "shl" for 0x4025e7>, <DisassemblerInsn "mov" for 0x4025e9>, <DisassemblerInsn "mov" for 0x4025eb>, <DisassemblerInsn "mov" for 0x4025ee>, <DisassemblerInsn "add" for 0x4025f1>, <DisassemblerInsn "mov" for 0x4025f5>, <DisassemblerInsn "mov" for 0x4025f8>, <DisassemblerInsn "mov" for 0x402600>, <DisassemblerInsn "mov" for 0x402608>, <DisassemblerInsn "mov" for 0x402610>, <DisassemblerInsn "mov" for 0x402618>, <DisassemblerInsn "mov" for 0x402620>, <DisassemblerInsn "add" for 0x402628>, <DisassemblerInsn "movsxd" for 0x40262c>, <DisassemblerInsn "cmp" for 0x40262f>, <DisassemblerInsn "mov" for 0x402632>, <DisassemblerInsn "mov" for 0x40263a>, <DisassemblerInsn "mov" for 0x402642>, <DisassemblerInsn "jl" for 0x40264a>]'}, {'block_Idx': 254, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401b5e>]'}, {'block_Idx': 239, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019d3>, <DisassemblerInsn "mov" for 0x4019db>, <DisassemblerInsn "mov" for 0x4019e3>, <DisassemblerInsn "mov" for 0x4019eb>, <DisassemblerInsn "mov" for 0x4019f3>, <DisassemblerInsn "mov" for 0x4019fb>, <DisassemblerInsn "mov" for 0x4019fd>, <DisassemblerInsn "mov" for 0x401a04>, <DisassemblerInsn "mov" for 0x401a06>, <DisassemblerInsn "mov" for 0x401a0d>, <DisassemblerInsn "sar" for 0x401a0f>, <DisassemblerInsn "movsxd" for 0x401a12>, <DisassemblerInsn "mov" for 0x401a15>, <DisassemblerInsn "ror" for 0x401a18>, <DisassemblerInsn "ror" for 0x401a1c>, <DisassemblerInsn "ror" for 0x401a1f>, <DisassemblerInsn "and" for 0x401a23>, <DisassemblerInsn "mov" for 0x401a26>, <DisassemblerInsn "shl" for 0x401a2d>, <DisassemblerInsn "mov" for 0x401a2f>, <DisassemblerInsn "cmp" for 0x401a36>, <DisassemblerInsn "jge" for 0x401a39>]'}, {'block_Idx': 316, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ec8>, <DisassemblerInsn "lea" for 0x401ed0>, <DisassemblerInsn "movsxd" for 0x401ed7>, <DisassemblerInsn "add" for 0x401edb>, <DisassemblerInsn "jmp" for 0x401ede>]'}], 'cfg_block_detailed_info': [{'block_Idx': 360, 'blockInsts': ['<jmp~~0x402123>']}, {'block_Idx': 341, 'blockInsts': ['<jmp~~0x402496>']}, {'block_Idx': 317, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x380]>', '<mov~~rax, qword ptr [rsp + 0x4e8]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x214d]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 172, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, rax>', '<add~~rcx, 0x40>', '<mov~~qword ptr [rsp + 0x90], rcx>', '<cmp~~dword ptr [rax + 0x40], 0>', '<jle~~0x402ca9>']}, {'block_Idx': 61, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x510]>', '<mov~~rcx, qword ptr [rsp + 0x520]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x4d0], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~eax, edi>', '<shr~~eax, 8>', '<mov~~ecx, edx>', '<or~~ecx, 8>', '<cmp~~esi, 0>', '<cmove~~eax, edi>', '<cmp~~esi, 0>', '<cmove~~ecx, edx>', '<mov~~eax, eax>', '<mov~~edx, eax>', '<mov~~rax, qword ptr [rip + 0xff05f]>', '<movzx~~eax, byte ptr [rax + rdx]>', '<add~~ecx, eax>', '<mov~~eax, 7>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x4d4], eax>', '<mov~~rax, -1>', '<cmp~~ecx, 6>', '<mov~~qword ptr [rsp + 0x4d8], rax>', '<je~~0x4010f5>']}, {'block_Idx': 303, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x388]>', '<mov~~edx, dword ptr [rsp + 0x380]>', '<mov~~eax, dword ptr [rsp + 0x338]>', '<mov~~esi, edx>', '<add~~esi, -2>', '<mov~~esi, esi>', '<sub~~eax, dword ptr [rcx + rsi*4]>', '<add~~edx, -3>', '<mov~~edx, edx>', '<add~~eax, dword ptr [rcx + rdx*4]>', '<mov~~dword ptr [rsp + 0x334], eax>', '<mov~~eax, dword ptr [rsp + 0x380]>', '<mov~~ecx, dword ptr [rsp + 0x334]>', '<mov~~dword ptr [rsp + 0x330], ecx>', '<cmp~~eax, 3>', '<jle~~0x401ea0>']}, {'block_Idx': 155, 'blockInsts': ['<jmp~~0x402496>']}, {'block_Idx': 47, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5e8]>', '<mov~~rdx, qword ptr [rsp + 0x5f8]>', '<mov~~rcx, qword ptr [rsp + 0x5e0]>', '<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rsp + 0x620]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<mov~~ecx, dword ptr [rcx]>', '<add~~ecx, dword ptr [rdx]>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500020>']}, {'block_Idx': 35, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~edx, dword ptr [rsp + 0x5ec]>', '<mov~~rsi, qword ptr [rsp + 0x5d8]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<call~~0x500010>']}, {'block_Idx': 232, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, qword ptr [rsp + 0x450]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x248], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x250], rax>', '<mov~~rax, qword ptr [rsp + 0x250]>', '<mov~~rdx, qword ptr [rsp + 0x248]>', '<mov~~ecx, dword ptr [rsp + 0x40c]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~dword ptr [rsp + 0x23c], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x240], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x250], rax>', '<jl~~0x402314>']}, {'block_Idx': 358, 'blockInsts': ['<jmp~~0x4021ae>']}, {'block_Idx': 216, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x190]>', '<mov~~rdx, qword ptr [rsp + 0x140]>', '<mov~~rax, qword ptr [rsp + 0x120]>', '<mov~~rcx, qword ptr [rsp + 0x128]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x178], rdx>', '<mov~~qword ptr [rsp + 0x180], rcx>', '<mov~~qword ptr [rsp + 0x188], rax>', '<jl~~0x402765>']}, {'block_Idx': 129, 'blockInsts': ['<jmp~~0x401322>']}, {'block_Idx': 142, 'blockInsts': ['<add~~rsp, 0x48>', '<ret~~>']}, {'block_Idx': 193, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x1c8]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x1f0]>', '<mov~~rsi, qword ptr [rsp + 0x1d0]>', '<mov~~rdi, qword ptr [rsp + 0x1d8]>', '<mov~~r8, qword ptr [rsp + 0x1e0]>', '<mov~~qword ptr [rsp + 0x1a8], r8>', '<mov~~qword ptr [rsp + 0x1b0], rdi>', '<mov~~qword ptr [rsp + 0x1b8], rsi>', '<mov~~eax, dword ptr [rax]>', '<mov~~rcx, qword ptr [rcx + rsi*8 + 0x58]>', '<mov~~ecx, dword ptr [rcx + rdx*4]>', '<mov~~dword ptr [rsp + 0x1c4], ecx>', '<cmp~~eax, 0>', '<je~~0x4025c6>']}, {'block_Idx': 359, 'blockInsts': ['<jmp~~0x4020b6>']}, {'block_Idx': 177, 'blockInsts': ['<lea~~rdi, [rip + 0x18a6]>', '<lea~~rsi, [rip + 0x1837]>', '<mov~~edx, 0x2b7>', '<lea~~rcx, [rip + 0x18a4]>', '<call~~0x500050>']}, {'block_Idx': 379, 'blockInsts': ['<jmp~~0x4022d4>']}, {'block_Idx': 38, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x580]>', '<mov~~edx, dword ptr [rsp + 0x578]>', '<mov~~ecx, dword ptr [rax]>', '<add~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x56c]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x400977>']}, {'block_Idx': 87, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4e8]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x31a3]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 147, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x530]>', '<mov~~rax, qword ptr [rsp + 0x4e8]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2eff]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 145, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<add~~rax, 0x44>', '<mov~~qword ptr [rsp + 0x460], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x468], rax>', '<mov~~rcx, qword ptr [rsp + 0x478]>', '<mov~~rdx, qword ptr [rsp + 0x460]>', '<mov~~rsi, qword ptr [rsp + 0x4f0]>', '<mov~~rax, qword ptr [rsp + 0x468]>', '<mov~~qword ptr [rsp + 0x450], rax>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x458], esi>', '<mov~~dword ptr [rdx], esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x45c], ecx>', '<cmp~~rax, 0>', '<jne~~0x4015ab>']}, {'block_Idx': 81, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x4b8]>', '<mov~~rax, qword ptr [rsp + 0x510]>', '<mov~~rcx, qword ptr [rsp + 0x520]>', '<mov~~esi, dword ptr [rsp + 0x4b4]>', '<add~~esi, -1>', '<mov~~dword ptr [rsp + 0x4b0], esi>', '<mov~~esi, dword ptr [rax]>', '<mov~~edi, esi>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rcx + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<mov~~ecx, esi>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x4b0]>', '<shr~~edi, 0xf8>', '<add~~esi, 8>', '<mov~~dword ptr [rax], esi>', '<add~~edi, -0x80>', '<cmp~~edi, 0x40>', '<setb~~sil>', '<mov~~rax, rdx>', '<shl~~rax, 6>', '<movsxd~~r8, edi>', '<add~~rax, r8>', '<cmp~~edi, 0x40>', '<cmovb~~rdx, rax>', '<mov~~rax, -1>', '<test~~sil, 1>', '<mov~~qword ptr [rsp + 0x4c0], rdx>', '<mov~~dword ptr [rsp + 0x4cc], ecx>', '<mov~~qword ptr [rsp + 0x4d8], rax>', '<jne~~0x401029>']}, {'block_Idx': 138, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x490]>', '<mov~~rax, qword ptr [rsp + 0x4e8]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2e8b]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x534]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x50c], eax>', '<je~~0x400dd9>']}, {'block_Idx': 225, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x470]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x40235e>']}, {'block_Idx': 325, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x384]>', '<mov~~ecx, dword ptr [rsp + 0x380]>', '<cmp~~eax, ecx>', '<jle~~0x4022d4>']}, {'block_Idx': 340, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x340]>', '<mov~~edx, dword ptr [rsp + 0x384]>', '<mov~~ecx, dword ptr [rsp + 0x380]>', '<movsxd~~rcx, ecx>', '<movsxd~~rdx, edx>', '<mov~~qword ptr [rsp + 0x2a8], rdx>', '<mov~~qword ptr [rsp + 0x2b0], rcx>', '<mov~~dword ptr [rsp + 0x2bc], eax>', '<mov~~eax, dword ptr [rsp + 0x2bc]>', '<mov~~rcx, qword ptr [rsp + 0x2b0]>', '<mov~~rdx, qword ptr [rsp + 0x2a8]>', '<mov~~rsi, qword ptr [rsp + 0x388]>', '<add~~eax, dword ptr [rsi + rcx*4]>', '<mov~~dword ptr [rsp + 0x29c], eax>', '<mov~~dword ptr [rsi + rcx*4], eax>', '<add~~rcx, 1>', '<mov~~qword ptr [rsp + 0x2a0], rcx>', '<cmp~~rcx, rdx>', '<mov~~qword ptr [rsp + 0x2b0], rcx>', '<mov~~dword ptr [rsp + 0x2bc], eax>', '<je~~0x4022d4>']}, {'block_Idx': 1, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rsp + 0x62c]>', '<mov~~edx, 4>', '<cmp~~ecx, 4>', '<cmovg~~edx, ecx>', '<mov~~dword ptr [rax], edx>', '<mov~~rdi, qword ptr [rsi + 0x98]>', '<add~~rsi, 0xa8>', '<call~~0x500010>']}, {'block_Idx': 158, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x228]>', '<lea~~rcx, [rip + 0x1c15]>', '<movsxd~~rax, dword ptr [rcx + rax*4]>', '<add~~rax, rcx>', '<jmp~~rax>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3620]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 18, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x56c]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x400977>']}, {'block_Idx': 137, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x498]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~edx, dword ptr [rsp + 0x504]>', '<mov~~rsi, qword ptr [rsp + 0x4f0]>', '<mov~~edi, dword ptr [rsp + 0x4e4]>', '<mov~~r8d, dword ptr [rsp + 0x484]>', '<mov~~r9d, dword ptr [rsp + 0x4a4]>', '<mov~~r10, rcx>', '<add~~r10, 0x40>', '<mov~~qword ptr [rsp + 0x470], r10>', '<mov~~dword ptr [rcx + 0x40], r9d>', '<mov~~dword ptr [rcx + 8], r8d>', '<mov~~dword ptr [rsi], edi>', '<mov~~rsi, rcx>', '<add~~rsi, 0x50>', '<mov~~qword ptr [rsp + 0x478], rsi>', '<mov~~dword ptr [rcx + 0x50], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402386>']}, {'block_Idx': 208, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0xb8]>', '<mov~~esi, dword ptr [rsp + 0xc8]>', '<mov~~rax, qword ptr [rsp + 0xe8]>', '<mov~~edi, dword ptr [rsp + 0xcc]>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~dword ptr [rdx], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0xb0]>', '<mov~~rax, rdx>', '<add~~rax, 8>', '<mov~~dword ptr [rdx + 4], esi>', '<mov~~qword ptr [rsp + 0xa0], rcx>', '<mov~~qword ptr [rsp + 0xa8], rax>', '<jmp~~0x402a9f>']}, {'block_Idx': 349, 'blockInsts': ['<mov~~r9d, dword ptr [rsp + 0x2f4]>', '<mov~~eax, dword ptr [rsp + 0x2f0]>', '<mov~~edx, dword ptr [rsp + 0x2ec]>', '<mov~~rsi, qword ptr [rsp + 0x2e0]>', '<mov~~rdi, qword ptr [rsp + 0x2d8]>', '<mov~~r8, qword ptr [rsp + 0x388]>', '<add~~edx, dword ptr [r8 + rsi*4]>', '<mov~~dword ptr [rsp + 0x274], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x278], ecx>', '<mov~~eax, ecx>', '<add~~eax, r9d>', '<mov~~dword ptr [rsp + 0x27c], eax>', '<mov~~dword ptr [r8 + rsi*4], eax>', '<add~~rsi, 1>', '<mov~~qword ptr [rsp + 0x280], rsi>', '<cmp~~rsi, rdi>', '<mov~~qword ptr [rsp + 0x2e0], rsi>', '<mov~~dword ptr [rsp + 0x2ec], edx>', '<mov~~dword ptr [rsp + 0x2f0], ecx>', '<mov~~dword ptr [rsp + 0x2f4], eax>', '<je~~0x4022d4>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, rax>', '<add~~rcx, 0xa0>', '<mov~~qword ptr [rsp + 0x5f8], rcx>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x600], eax>', '<cmp~~eax, 4>', '<jb~~0x400630>']}, {'block_Idx': 378, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x402496>']}, {'block_Idx': 83, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<jmp~~0x402db6>']}, {'block_Idx': 82, 'blockInsts': ['<jmp~~0x402496>']}, {'block_Idx': 181, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x1e8]>', '<mov~~rdx, qword ptr [rsp + 0x208]>', '<mov~~rcx, qword ptr [rsp + 0x210]>', '<mov~~rax, qword ptr [rsp + 0x218]>', '<mov~~qword ptr [rsp + 0x1c8], rdx>', '<xor~~edx, edx>', '<cmp~~dword ptr [rsi], 0>', '<mov~~qword ptr [rsp + 0x1d0], rdx>', '<mov~~qword ptr [rsp + 0x1d8], rcx>', '<mov~~qword ptr [rsp + 0x1e0], rax>', '<jle~~0x402650>']}, {'block_Idx': 43, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x534]>', '<add~~eax, -7>', '<mov~~dword ptr [rsp + 0x50c], eax>', '<jmp~~0x400dd9>']}, {'block_Idx': 30, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~eax, dword ptr [rsp + 0x5b0]>', '<mov~~ecx, dword ptr [rsp + 0x18]>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<sub~~ecx, eax>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x155f]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 45, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x554]>', '<mov~~rcx, qword ptr [rsp + 0x5b8]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x540], rcx>', '<mov~~ecx, eax>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x54c], ecx>', '<mov~~dword ptr [rsp + 0x550], eax>', '<mov~~ecx, dword ptr [rsp + 0x54c]>', '<mov~~rax, qword ptr [rsp + 0x540]>', '<mov~~edx, dword ptr [rsp + 0x550]>', '<mov~~dword ptr [rsp + 0x53c], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x402cd6>']}, {'block_Idx': 287, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x388]>', '<mov~~ecx, dword ptr [rsp + 0x380]>', '<add~~ecx, -1>', '<mov~~ecx, ecx>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x344], eax>', '<mov~~eax, dword ptr [rsp + 0x380]>', '<mov~~ecx, dword ptr [rsp + 0x344]>', '<mov~~dword ptr [rsp + 0x340], ecx>', '<cmp~~eax, 1>', '<jle~~0x401dfc>']}, {'block_Idx': 277, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x402496>']}, {'block_Idx': 218, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x110]>', '<mov~~rdx, qword ptr [rsp + 0xc0]>', '<mov~~rax, qword ptr [rsp + 0xa0]>', '<mov~~rcx, qword ptr [rsp + 0xa8]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0xf8], rdx>', '<mov~~qword ptr [rsp + 0x100], rcx>', '<mov~~qword ptr [rsp + 0x108], rax>', '<jl~~0x40298f>']}, {'block_Idx': 350, 'blockInsts': ['<jmp~~0x402064>']}, {'block_Idx': 224, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~rax, qword ptr [rsp + 0x450]>', '<add~~rax, 1>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x468], rax>', '<jl~~0x40155b>']}, {'block_Idx': 71, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4d8]>', '<cmp~~rax, 0>', '<jge~~0x401123>']}, {'block_Idx': 93, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x52c]>', '<sub~~eax, 6>', '<je~~0x40116f>']}, {'block_Idx': 280, 'blockInsts': ['<sub~~rsp, 0x158>', '<mov~~dword ptr [rsp + 0x128], edx>', '<mov~~dword ptr [rsp + 0x12c], esi>', '<mov~~qword ptr [rsp + 0x130], rdi>', '<mov~~rax, rdi>', '<add~~rax, 0x38>', '<mov~~qword ptr [rsp + 0x138], rax>', '<mov~~ecx, dword ptr [rdi + 0x38]>', '<mov~~dword ptr [rsp + 0x14c], ecx>', '<mov~~rax, qword ptr [rdi + 0x28]>', '<mov~~qword ptr [rsp + 0x140], rax>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x14c]>', '<shr~~eax, 0xfe>', '<mov~~dword ptr [rsp + 0x150], eax>', '<add~~ecx, 2>', '<mov~~dword ptr [rsp + 0x154], ecx>', '<mov~~dword ptr [rdi + 0x38], ecx>', '<cmp~~eax, 1>', '<jle~~0x4037d4>']}, {'block_Idx': 74, 'blockInsts': ['<jmp~~0x402496>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x574]>', '<cmp~~eax, 0>', '<je~~0x400b7e>']}, {'block_Idx': 91, 'blockInsts': ['<jmp~~0x402496>']}, {'block_Idx': 66, 'blockInsts': ['<jmp~~0x402cd6>']}, {'block_Idx': 103, 'blockInsts': ['<mov~~r8d, dword ptr [rsp + 0x4a8]>', '<mov~~ecx, dword ptr [rsp + 0x4a4]>', '<mov~~rax, qword ptr [rsp + 0x4e8]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x30bc]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 203, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x38]>', '<mov~~rdx, qword ptr [rsp + 0x30]>', '<mov~~esi, dword ptr [rsp + 0x48]>', '<mov~~edi, dword ptr [rsp + 0x4c]>', '<mov~~rcx, qword ptr [rsp + 0x70]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x1c], ecx>', '<shl~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x1c]>', '<mov~~word ptr [rdx], di>', '<shl~~esi, cl>', '<mov~~ecx, esi>', '<mov~~si, cx>', '<mov~~rcx, rdx>', '<add~~rcx, 4>', '<mov~~word ptr [rdx + 2], si>', '<mov~~qword ptr [rsp + 0x20], rcx>', '<mov~~qword ptr [rsp + 0x28], rax>', '<mov~~rsi, qword ptr [rsp + 0x90]>', '<mov~~rdx, qword ptr [rsp + 0x40]>', '<mov~~rax, qword ptr [rsp + 0x20]>', '<mov~~rcx, qword ptr [rsp + 0x28]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x78], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~qword ptr [rsp + 0x88], rax>', '<jl~~0x402ba2>']}, {'block_Idx': 144, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x510]>', '<mov~~ecx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x234], ecx>', '<xor~~eax, eax>', '<sub~~eax, ecx>', '<and~~eax, 7>', '<mov~~dword ptr [rsp + 0x238], eax>', '<cmp~~eax, 0>', '<je~~0x4023c4>']}, {'block_Idx': 310, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x330]>', '<mov~~rdx, qword ptr [rsp + 0x388]>', '<mov~~edi, dword ptr [rsp + 0x380]>', '<mov~~ecx, edi>', '<add~~ecx, -2>', '<mov~~ecx, ecx>', '<mov~~ecx, dword ptr [rdx + rcx*4]>', '<mov~~esi, edi>', '<add~~esi, -3>', '<mov~~esi, esi>', '<mov~~esi, dword ptr [rdx + rsi*4]>', '<shl~~esi, 1>', '<add~~edi, -4>', '<mov~~edi, edi>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<add~~eax, esi>', '<add~~ecx, edx>', '<sub~~eax, ecx>', '<mov~~dword ptr [rsp + 0x32c], eax>', '<mov~~eax, dword ptr [rsp + 0x380]>', '<mov~~ecx, dword ptr [rsp + 0x32c]>', '<mov~~dword ptr [rsp + 0x31c], ecx>', '<mov~~ecx, eax>', '<mov~~qword ptr [rsp + 0x320], rcx>', '<sub~~eax, 4>', '<ja~~0x402252>']}, {'block_Idx': 65, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x54c]>', '<mov~~rax, qword ptr [rsp + 0x540]>', '<mov~~edx, dword ptr [rsp + 0x550]>', '<mov~~dword ptr [rsp + 0x53c], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x402cd6>']}, {'block_Idx': 80, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x52c]>', '<test~~eax, eax>', '<je~~0x40114f>']}, {'block_Idx': 339, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x340]>', '<mov~~ecx, dword ptr [rsp + 0x338]>', '<mov~~edx, dword ptr [rsp + 0x330]>', '<mov~~edi, dword ptr [rsp + 0x384]>', '<mov~~esi, dword ptr [rsp + 0x380]>', '<movsxd~~rsi, esi>', '<movsxd~~rdi, edi>', '<mov~~qword ptr [rsp + 0x2d8], rdi>', '<mov~~qword ptr [rsp + 0x2e0], rsi>', '<mov~~dword ptr [rsp + 0x2ec], edx>', '<mov~~dword ptr [rsp + 0x2f0], ecx>', '<mov~~dword ptr [rsp + 0x2f4], eax>', '<jmp~~0x402123>']}, {'block_Idx': 109, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x52c]>', '<movsxd~~rcx, eax>', '<lea~~rax, [rip + 0x2e1a]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x4ac], eax>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~eax, dword ptr [rsp + 0x4ac]>', '<mov~~dword ptr [rsp + 0x4a4], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x4a8], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401272>']}, {'block_Idx': 149, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x598]>', '<mov~~dword ptr [rax], 1>', '<mov~~eax, dword ptr [rsp + 0x574]>', '<cmp~~eax, 0>', '<jle~~0x400b7e>']}, {'block_Idx': 72, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x4d4]>', '<mov~~edx, dword ptr [rsp + 0x4d0]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~qword ptr [rsp + 0x4c0], rcx>', '<mov~~dword ptr [rsp + 0x4cc], eax>', '<mov~~rax, qword ptr [rsp + 0x4c0]>', '<mov~~ecx, dword ptr [rsp + 0x4cc]>', '<mov~~dword ptr [rsp + 0x4b4], ecx>', '<mov~~qword ptr [rsp + 0x4b8], rax>', '<cmp~~ecx, 1>', '<mov~~qword ptr [rsp + 0x4d8], rax>', '<jle~~0x4010f5>']}, {'block_Idx': 53, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x508]>', '<movsxd~~rcx, eax>', '<lea~~rax, [rip + 0x368d]>', '<shl~~rcx, 2>', '<add~~rax, rcx>', '<mov~~qword ptr [rsp + 0x4f8], rax>', '<jmp~~0x400e8c>']}, {'block_Idx': 237, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x450]>', '<mov~~edx, dword ptr [rsp + 0x430]>', '<and~~edx, 0xffffffdf>', '<add~~edx, 1>', '<mov~~esi, eax>', '<call~~0x402f30>']}, {'block_Idx': 0, 'blockInsts': ['<sub~~rsp, 0x658>', '<mov~~qword ptr [rsp + 0x618], rdx>', '<mov~~qword ptr [rsp + 0x620], rcx>', '<mov~~dword ptr [rsp + 0x62c], r8d>', '<mov~~rax, qword ptr [rdi + 0xa0]>', '<mov~~qword ptr [rsp + 0x630], rax>', '<mov~~rcx, rsi>', '<mov~~qword ptr [rsp + 0x638], rcx>', '<mov~~qword ptr [rsp + 0x640], rsi>', '<mov~~ecx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x64c], ecx>', '<mov~~dword ptr [rdx], 0>', '<mov~~rcx, rax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x650], rcx>', '<cmp~~dword ptr [rax + 4], 0>', '<jne~~0x40059e>']}, {'block_Idx': 300, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x124]>', '<add~~rsp, 0x158>', '<ret~~>']}, {'block_Idx': 121, 'blockInsts': ['<jmp~~0x401314>']}, {'block_Idx': 24, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~ecx, dword ptr [rsp + 0x5ec]>', '<mov~~rdx, rax>', '<add~~rdx, 0xa8>', '<mov~~qword ptr [rsp + 0x5d8], rdx>', '<cmp~~dword ptr [rax + 0xa8], ecx>', '<jae~~0x400731>']}, {'block_Idx': 42, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x508]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x400e64>']}, {'block_Idx': 231, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x478]>', '<mov~~rdx, qword ptr [rsp + 0x460]>', '<mov~~rsi, qword ptr [rsp + 0x4f0]>', '<mov~~rax, qword ptr [rsp + 0x468]>', '<mov~~qword ptr [rsp + 0x450], rax>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x458], esi>', '<mov~~dword ptr [rdx], esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x45c], ecx>', '<cmp~~rax, 0>', '<jne~~0x4015ab>']}, {'block_Idx': 161, 'blockInsts': ['<jmp~~0x4015d0>']}, {'block_Idx': 194, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x60]>', '<mov~~rdx, qword ptr [rsp + 0x58]>', '<mov~~rcx, qword ptr [rsp + 0x50]>', '<mov~~rsi, qword ptr [rsp + 0x78]>', '<mov~~rdi, qword ptr [rsp + 0x80]>', '<mov~~r8, qword ptr [rsp + 0x88]>', '<mov~~qword ptr [rsp + 0x30], r8>', '<mov~~qword ptr [rsp + 0x38], rdi>', '<mov~~qword ptr [rsp + 0x40], rsi>', '<mov~~ecx, dword ptr [rcx + rsi*4]>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~eax, dword ptr [rax]>', '<mov~~esi, edx>', '<sar~~esi, 1>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x48], ecx>', '<add~~ecx, edx>', '<mov~~dword ptr [rsp + 0x4c], ecx>', '<cmp~~eax, 0>', '<je~~0x402c2b>']}, {'block_Idx': 249, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x440]>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x460]>', '<mov~~rsi, qword ptr [rsp + 0x378]>', '<mov~~qword ptr [rsp + 0x358], rsi>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x360], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x364], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x368], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x36c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401c85>']}, {'block_Idx': 48, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5d4]>', '<mov~~ecx, dword ptr [rsp + 0x5d0]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rdi, qword ptr [rdx + 0x98]>', '<mov~~ecx, ecx>', '<mov~~rsi, rdi>', '<add~~rsi, rcx>', '<mov~~eax, eax>', '<mov~~edx, eax>', '<call~~0x500018>']}, {'block_Idx': 213, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x1e8]>', '<mov~~rdx, qword ptr [rsp + 0x1b8]>', '<mov~~rax, qword ptr [rsp + 0x198]>', '<mov~~rcx, qword ptr [rsp + 0x1a0]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x1d0], rdx>', '<mov~~qword ptr [rsp + 0x1d8], rcx>', '<mov~~qword ptr [rsp + 0x1e0], rax>', '<jl~~0x40252a>']}, {'block_Idx': 107, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x530]>', '<cmp~~eax, 0>', '<jne~~0x4012da>']}, {'block_Idx': 89, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4c0]>', '<mov~~ecx, dword ptr [rsp + 0x4cc]>', '<mov~~dword ptr [rsp + 0x4b4], ecx>', '<mov~~qword ptr [rsp + 0x4b8], rax>', '<cmp~~ecx, 1>', '<mov~~qword ptr [rsp + 0x4d8], rax>', '<jle~~0x4010f5>']}, {'block_Idx': 236, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4e8]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x20dd]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 229, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rdx, qword ptr [rsp + 0x450]>', '<mov~~rsi, qword ptr [rsp + 0x470]>', '<mov~~eax, dword ptr [rsp + 0x430]>', '<and~~eax, 0xfffffff7>', '<mov~~dword ptr [rsp + 0x380], eax>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x384], esi>', '<mov~~rcx, qword ptr [rcx + rdx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x388], rcx>', '<cmp~~eax, 0>', '<setg~~al>', '<mov~~byte ptr [rsp + 0x397], al>', '<test~~al, 1>', '<jne~~0x401bcb>']}, {'block_Idx': 9, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x62c]>', '<mov~~esi, dword ptr [rsp + 0x600]>', '<mov~~ecx, dword ptr [rsp + 0x604]>', '<xor~~edx, edx>', '<sub~~ecx, esi>', '<cmovb~~ecx, edx>', '<cmp~~ecx, eax>', '<cmovb~~eax, ecx>', '<mov~~dword ptr [rsp + 0x5f4], eax>', '<mov~~eax, dword ptr [rsp + 0x600]>', '<mov~~edx, dword ptr [rsp + 0x5f4]>', '<mov~~dword ptr [rsp + 0x5e8], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x5ec], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<jb~~0x402db6>']}, {'block_Idx': 245, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x3b0]>', '<mov~~edx, dword ptr [rsp + 0x3b4]>', '<mov~~eax, dword ptr [rsp + 0x3bc]>', '<mov~~dil, sil>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x3a4], eax>', '<jmp~~0x401b01>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x138]>', '<mov~~rdx, qword ptr [rsp + 0x130]>', '<mov~~edi, dword ptr [rsp + 0x14c]>', '<mov~~esi, dword ptr [rsp + 0x148]>', '<mov~~rcx, qword ptr [rsp + 0x170]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x11c], ecx>', '<mov~~r8d, esi>', '<shl~~r8d, cl>', '<mov~~ecx, dword ptr [rsp + 0x11c]>', '<mov~~word ptr [rdx], r8w>', '<sub~~esi, edi>', '<shl~~esi, cl>', '<mov~~ecx, esi>', '<mov~~si, cx>', '<mov~~rcx, rdx>', '<add~~rcx, 4>', '<mov~~word ptr [rdx + 2], si>', '<mov~~qword ptr [rsp + 0x120], rcx>', '<mov~~qword ptr [rsp + 0x128], rax>', '<mov~~rsi, qword ptr [rsp + 0x190]>', '<mov~~rdx, qword ptr [rsp + 0x140]>', '<mov~~rax, qword ptr [rsp + 0x120]>', '<mov~~rcx, qword ptr [rsp + 0x128]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x178], rdx>', '<mov~~qword ptr [rsp + 0x180], rcx>', '<mov~~qword ptr [rsp + 0x188], rax>', '<jl~~0x402765>']}, {'block_Idx': 230, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x430]>', '<cmp~~eax, 0x1f>', '<jle~~0x4022b4>']}, {'block_Idx': 253, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3a8]>', '<mov~~rdx, qword ptr [rsp + 0x3f8]>', '<mov~~edi, dword ptr [rsp + 0x3b0]>', '<mov~~esi, dword ptr [rsp + 0x3a4]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x398], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x398]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x400], rax>', '<jl~~0x4019d3>']}, {'block_Idx': 173, 'blockInsts': ['<lea~~rdi, [rip + 0x1693]>', '<lea~~rsi, [rip + 0x1624]>', '<mov~~edx, 0x2b9>', '<lea~~rcx, [rip + 0x1691]>', '<call~~0x500050>']}, {'block_Idx': 222, 'blockInsts': ['<jmp~~0x4017d3>']}, {'block_Idx': 117, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x530]>', '<sub~~eax, 0xc>', '<je~~0x401337>']}, {'block_Idx': 25, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x580]>', '<mov~~rax, qword ptr [rsp + 0x588]>', '<mov~~edx, dword ptr [rdi]>', '<mov~~rax, qword ptr [rax]>', '<mov~~qword ptr [rsp + 0x558], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x56c], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x564], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~dword ptr [rdi], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x56c]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x568], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<mov~~dword ptr [rdi], esi>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x56c]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<mov~~dword ptr [rdi], r8d>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x590]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x570], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x574], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x578], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x57c], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400ae5>']}, {'block_Idx': 153, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x45c]>', '<cmp~~eax, 2>', '<je~~0x4015bc>']}, {'block_Idx': 62, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4e8]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x338f]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 97, 'blockInsts': ['<jmp~~0x40113e>']}, {'block_Idx': 209, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x410]>', '<mov~~edx, dword ptr [rsp + 0x3ec]>', '<mov~~eax, dword ptr [rsp + 0x3f4]>', '<mov~~dil, sil>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x3e8], eax>', '<jmp~~0x40192a>']}, {'block_Idx': 189, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4e8]>', '<mov~~rdi, qword ptr [rax]>', '<lea~~rsi, [rip + 0x2be1]>', '<xor~~edx, edx>', '<call~~0x500048>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x580]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rdi, qword ptr [rsp + 0x590]>', '<mov~~r9, qword ptr [rsp + 0x588]>', '<mov~~r11d, dword ptr [rsp + 0x57c]>', '<mov~~rdx, qword ptr [rsp + 0x558]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x402cd6>']}, {'block_Idx': 64, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x1d5b]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 178, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x460]>', '<mov~~ecx, dword ptr [rsp + 0x438]>', '<mov~~dword ptr [rsp + 0x40c], ecx>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x410], eax>', '<cmp~~eax, 0x20>', '<jle~~0x4017b4>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5cc]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400cbe>']}, {'block_Idx': 214, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x90]>', '<mov~~rdx, qword ptr [rsp + 0x40]>', '<mov~~rax, qword ptr [rsp + 0x20]>', '<mov~~rcx, qword ptr [rsp + 0x28]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x78], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~qword ptr [rsp + 0x88], rax>', '<jl~~0x402ba2>']}, {'block_Idx': 175, 'blockInsts': ['<lea~~rdi, [rip + 0x1ad0]>', '<lea~~rsi, [rip + 0x1a61]>', '<mov~~edx, 0x2b5>', '<lea~~rcx, [rip + 0x1ace]>', '<call~~0x500050>']}, {'block_Idx': 191, 'blockInsts': ['<jmp~~0x402496>']}, {'block_Idx': 95, 'blockInsts': ['<jmp~~0x402496>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x5d8]>', '<mov~~esi, dword ptr [rsp + 0x5e8]>', '<mov~~rdx, qword ptr [rsp + 0x5f8]>', '<mov~~rax, qword ptr [rsp + 0x5e0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x5d0], eax>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x5d4], edx>', '<add~~eax, esi>', '<add~~eax, edx>', '<cmp~~eax, dword ptr [rcx]>', '<jbe~~0x4007a6>']}, {'block_Idx': 26, 'blockInsts': ['<jmp~~0x402cd6>']}, {'block_Idx': 160, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x460]>', '<mov~~ecx, dword ptr [rsp + 0x458]>', '<add~~ecx, 1>', '<mov~~dword ptr [rax], ecx>', '<mov~~rax, qword ptr [rsp + 0x510]>', '<mov~~rcx, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x43c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x440], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x44c], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x448], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x44c]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401651>']}, {'block_Idx': 134, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x530]>', '<sub~~eax, 0xe>', '<je~~0x4013d0>']}, {'block_Idx': 242, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x510]>', '<mov~~edi, dword ptr [rsp + 0x360]>', '<mov~~esi, dword ptr [rsp + 0x364]>', '<mov~~rax, qword ptr [rsp + 0x440]>', '<mov~~r9d, dword ptr [rsp + 0x36c]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, esi>', '<add~~r8d, 0x10>', '<mov~~dword ptr [rdx], r8d>', '<mov~~ecx, edi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x34c], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x368]>', '<mov~~dword ptr [rsp + 0x350], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x34c]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x350]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x354], eax>', '<mov~~rax, qword ptr [rsp + 0x358]>', '<mov~~rdx, qword ptr [rsp + 0x388]>', '<mov~~edi, dword ptr [rsp + 0x360]>', '<mov~~esi, dword ptr [rsp + 0x354]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x348], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x348]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x370]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x378], rax>', '<jne~~0x401be6>']}, {'block_Idx': 198, 'blockInsts': ['<jmp~~0x4017c1>']}, {'block_Idx': 54, 'blockInsts': ['<jmp~~0x402496>']}, {'block_Idx': 348, 'blockInsts': ['<mov~~r8d, dword ptr [rsp + 0x2d4]>', '<mov~~ecx, dword ptr [rsp + 0x2d0]>', '<mov~~rdx, qword ptr [rsp + 0x2c8]>', '<mov~~rsi, qword ptr [rsp + 0x2c0]>', '<mov~~rdi, qword ptr [rsp + 0x388]>', '<add~~ecx, dword ptr [rdi + rdx*4]>', '<mov~~dword ptr [rsp + 0x288], ecx>', '<mov~~eax, ecx>', '<add~~eax, r8d>', '<mov~~dword ptr [rsp + 0x28c], eax>', '<mov~~dword ptr [rdi + rdx*4], eax>', '<add~~rdx, 1>', '<mov~~qword ptr [rsp + 0x290], rdx>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x2c8], rdx>', '<mov~~dword ptr [rsp + 0x2d0], ecx>', '<mov~~dword ptr [rsp + 0x2d4], eax>', '<je~~0x4022d4>']}, {'block_Idx': 241, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x360]>', '<mov~~edx, dword ptr [rsp + 0x364]>', '<mov~~eax, dword ptr [rsp + 0x36c]>', '<mov~~dil, sil>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x354], eax>', '<jmp~~0x401d14>']}, {'block_Idx': 217, 'blockInsts': ['<jmp~~0x402ca9>']}, {'block_Idx': 68, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x5e0]>', '<mov~~dword ptr [rax], 0>', '<mov~~eax, dword ptr [rsp + 0x5e8]>', '<mov~~rdx, qword ptr [rsp + 0x5f8]>', '<mov~~rcx, qword ptr [rsp + 0x5e0]>', '<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rsp + 0x620]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<mov~~ecx, dword ptr [rcx]>', '<add~~ecx, dword ptr [rdx]>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500020>']}, {'block_Idx': 168, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x510]>', '<mov~~esi, dword ptr [rsp + 0x43c]>', '<mov~~rax, qword ptr [rsp + 0x440]>', '<mov~~ecx, dword ptr [rsp + 0x448]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x430], ecx>', '<mov~~ecx, esi>', '<add~~ecx, 7>', '<mov~~dword ptr [rdx], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~esi, 8>', '<mov~~dword ptr [rdx], esi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<and~~edx, eax>', '<xor~~eax, eax>', '<mov~~ecx, 1>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x434], ecx>', '<mov~~dword ptr [rsp + 0x438], eax>', '<je~~0x401772>']}, {'block_Idx': 302, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x380]>', '<mov~~ecx, dword ptr [rsp + 0x334]>', '<mov~~dword ptr [rsp + 0x330], ecx>', '<cmp~~eax, 3>', '<jle~~0x401ea0>']}, {'block_Idx': 394, 'blockInsts': ['<mov~~rax, qword ptr [rbp - 8]>', '<mov~~ecx, dword ptr [rbp - 0xa0]>', '<mov~~edx, dword ptr [rbp - 0x1d8]>', '<sar~~edx, cl>', '<mov~~ecx, dword ptr [rbp - 0x1d4]>', '<movsxd~~rcx, ecx>', '<add~~edx, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rax + rcx*4], edx>', '<xor~~eax, eax>', '<mov~~dword ptr [rbp - 0x9c], eax>', '<mov~~eax, dword ptr [rbp - 0x9c]>', '<mov~~rsp, rbp>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 211, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x430]>', '<sub~~eax, 1>', '<jne~~0x401b63>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x62c]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<cmp~~dword ptr [rcx], 0x43614c66>', '<mov~~dword ptr [rsp + 0x5f4], eax>', '<je~~0x400658>']}, {'block_Idx': 197, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x410]>', '<mov~~rdx, qword ptr [rsp + 0x440]>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x3ec], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x3f0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x3f4], edx>', '<cmp~~eax, 0x12>', '<jge~~0x40189b>']}, {'block_Idx': 29, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x18]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rdx, rcx>', '<add~~rdx, 0xa0>', '<mov~~qword ptr [rsp + 8], rdx>', '<mov~~ecx, dword ptr [rcx + 0xa0]>', '<mov~~dword ptr [rsp + 0x14], ecx>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<je~~0x402db6>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~esi, dword ptr [rsp + 0x608]>', '<mov~~edx, dword ptr [rsp + 0x60c]>', '<mov~~rax, qword ptr [rsp + 0x610]>', '<mov~~dword ptr [rsp + 0x5b0], edx>', '<mov~~dword ptr [rsp + 0x5b4], esi>', '<mov~~esi, edx>', '<shl~~esi, 3>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~rax, rdi>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~esi, edi>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~edx, edi>', '<mov~~rdi, rcx>', '<add~~rdi, 0x28>', '<mov~~qword ptr [rsp + 0x5b8], rdi>', '<mov~~qword ptr [rcx + 0x28], rax>', '<mov~~dword ptr [rcx + 0x3c], esi>', '<mov~~edx, edx>', '<mov~~esi, edx>', '<mov~~rdx, rax>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x5c0], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x5cc], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x400ba3>']}, {'block_Idx': 184, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x638]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x150], rsi>', '<mov~~rsi, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x158], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x4c>', '<mov~~qword ptr [rsp + 0x160], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x48>', '<mov~~qword ptr [rsp + 0x168], rsi>', '<add~~rdx, 0x48>', '<mov~~qword ptr [rsp + 0x170], rdx>', '<xor~~edx, edx>', '<mov~~qword ptr [rsp + 0x178], rdx>', '<mov~~qword ptr [rsp + 0x180], rcx>', '<mov~~qword ptr [rsp + 0x188], rax>', '<jmp~~0x402765>']}, {'block_Idx': 286, 'blockInsts': ['<jmp~~0x401dbd>']}, {'block_Idx': 212, 'blockInsts': ['<jmp~~0x402496>']}, {'block_Idx': 56, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rcx, qword ptr [rsp + 0x5d8]>', '<mov~~esi, dword ptr [rsp + 0x5e8]>', '<mov~~rdx, qword ptr [rsp + 0x5f8]>', '<mov~~rax, qword ptr [rsp + 0x5e0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x5d0], eax>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x5d4], edx>', '<add~~eax, esi>', '<add~~eax, edx>', '<cmp~~eax, dword ptr [rcx]>', '<jbe~~0x4007a6>']}, {'block_Idx': 179, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x434]>', '<mov~~rsi, qword ptr [rsp + 0x510]>', '<mov~~rcx, qword ptr [rsp + 0x440]>', '<mov~~dword ptr [rsp + 0x414], eax>', '<mov~~edi, dword ptr [rsi]>', '<mov~~edx, edi>', '<sar~~edx, 3>', '<mov~~dword ptr [rsp + 0x418], edx>', '<movsxd~~rdx, edx>', '<mov~~dl, byte ptr [rcx + rdx]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x41c], ecx>', '<movzx~~edx, dl>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x420], edi>', '<mov~~dword ptr [rsi], edi>', '<mov~~esi, 0x80>', '<shr~~esi, cl>', '<mov~~dword ptr [rsp + 0x424], esi>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~dword ptr [rsp + 0x428], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x42c], eax>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x434], eax>', '<je~~0x4016da>']}, {'block_Idx': 361, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x2bc]>', '<mov~~rcx, qword ptr [rsp + 0x2b0]>', '<mov~~rdx, qword ptr [rsp + 0x2a8]>', '<mov~~rsi, qword ptr [rsp + 0x388]>', '<add~~eax, dword ptr [rsi + rcx*4]>', '<mov~~dword ptr [rsp + 0x29c], eax>', '<mov~~dword ptr [rsi + rcx*4], eax>', '<add~~rcx, 1>', '<mov~~qword ptr [rsp + 0x2a0], rcx>', '<cmp~~rcx, rdx>', '<mov~~qword ptr [rsp + 0x2b0], rcx>', '<mov~~dword ptr [rsp + 0x2bc], eax>', '<je~~0x4022d4>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, rax>', '<add~~rcx, 0x38>', '<mov~~qword ptr [rsp + 0x580], rcx>', '<mov~~ecx, dword ptr [rax + 0x38]>', '<add~~ecx, 0x20>', '<mov~~dword ptr [rax + 0x38], ecx>', '<mov~~rcx, rax>', '<add~~rcx, 0x28>', '<mov~~qword ptr [rsp + 0x588], rcx>', '<mov~~rcx, rax>', '<add~~rcx, 0x3c>', '<mov~~qword ptr [rsp + 0x590], rcx>', '<mov~~rcx, rax>', '<add~~rcx, 0x54>', '<mov~~qword ptr [rsp + 0x598], rcx>', '<mov~~rcx, rax>', '<add~~rcx, 0x20>', '<mov~~qword ptr [rsp + 0x5a0], rcx>', '<mov~~qword ptr [rsp + 0x5a8], rax>', '<mov~~rdi, qword ptr [rsp + 0x580]>', '<mov~~rax, qword ptr [rsp + 0x588]>', '<mov~~edx, dword ptr [rdi]>', '<mov~~rax, qword ptr [rax]>', '<mov~~qword ptr [rsp + 0x558], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x56c], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x564], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~dword ptr [rdi], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x56c]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x568], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<mov~~dword ptr [rdi], esi>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x56c]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<mov~~dword ptr [rdi], r8d>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x590]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x570], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x574], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x578], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x57c], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400ae5>']}, {'block_Idx': 15, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5f0]>', '<add~~rsp, 0x658>', '<ret~~>']}, {'block_Idx': 226, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3d0]>', '<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~rdx, qword ptr [rsp + 0x3c8]>', '<mov~~esi, dword ptr [rsp + 0x3dc]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3c0], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3d0], rax>', '<jl~~0x401990>']}, {'block_Idx': 19, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x568]>', '<cmp~~eax, 0>', '<jne~~0x400b5d>']}, {'block_Idx': 116, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x530]>', '<movsxd~~rcx, eax>', '<lea~~rax, [rip + 0x2d79]>', '<mov~~eax, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rsp + 0x494], eax>', '<jmp~~0x401442>']}, {'block_Idx': 170, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x510]>', '<mov~~rcx, qword ptr [rsp + 0x518]>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x43c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x440], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x44c], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x448], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x44c]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401651>']}, {'block_Idx': 246, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x510]>', '<mov~~edi, dword ptr [rsp + 0x3b0]>', '<mov~~esi, dword ptr [rsp + 0x3b4]>', '<mov~~rax, qword ptr [rsp + 0x440]>', '<mov~~r9d, dword ptr [rsp + 0x3bc]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, esi>', '<add~~r8d, 0x10>', '<mov~~dword ptr [rdx], r8d>', '<mov~~ecx, edi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x39c], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x3b8]>', '<mov~~dword ptr [rsp + 0x3a0], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x39c]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3a0]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x3a4], eax>', '<mov~~rax, qword ptr [rsp + 0x3a8]>', '<mov~~rdx, qword ptr [rsp + 0x3f8]>', '<mov~~edi, dword ptr [rsp + 0x3b0]>', '<mov~~esi, dword ptr [rsp + 0x3a4]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x398], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x398]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x400], rax>', '<jl~~0x4019d3>']}, {'block_Idx': 96, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x520]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<shr~~eax, 0xf8>', '<add~~edx, 8>', '<mov~~dword ptr [rcx], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x4ac], eax>', '<jmp~~0x401220>']}, {'block_Idx': 337, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x340]>', '<mov~~ecx, dword ptr [rsp + 0x338]>', '<mov~~edx, dword ptr [rsp + 0x330]>', '<mov~~esi, dword ptr [rsp + 0x31c]>', '<mov~~r8d, dword ptr [rsp + 0x384]>', '<mov~~edi, dword ptr [rsp + 0x380]>', '<movsxd~~rdi, edi>', '<movsxd~~r8, r8d>', '<mov~~qword ptr [rsp + 0x2f8], r8>', '<mov~~qword ptr [rsp + 0x300], rdi>', '<mov~~dword ptr [rsp + 0x30c], esi>', '<mov~~dword ptr [rsp + 0x310], edx>', '<mov~~dword ptr [rsp + 0x314], ecx>', '<mov~~dword ptr [rsp + 0x318], eax>', '<jmp~~0x4021ae>']}, {'block_Idx': 186, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x638]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0xd0], rsi>', '<mov~~rsi, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0xd8], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x4c>', '<mov~~qword ptr [rsp + 0xe0], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x48>', '<mov~~qword ptr [rsp + 0xe8], rsi>', '<add~~rdx, 0x48>', '<mov~~qword ptr [rsp + 0xf0], rdx>', '<xor~~edx, edx>', '<mov~~qword ptr [rsp + 0xf8], rdx>', '<mov~~qword ptr [rsp + 0x100], rcx>', '<mov~~qword ptr [rsp + 0x108], rax>', '<jmp~~0x40298f>']}, {'block_Idx': 118, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x630]>', '<call~~0x402df0>']}, {'block_Idx': 32, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x400dad>']}, {'block_Idx': 124, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x530]>', '<sub~~eax, 0xd>', '<je~~0x401388>']}, {'block_Idx': 34, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x5c0]>', '<mov~~ecx, dword ptr [rsp + 0x5b0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x554], eax>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<add~~eax, 2>', '<cmp~~eax, ecx>', '<jge~~0x402cd6>']}, {'block_Idx': 221, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, qword ptr [rsp + 0x450]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x3c8], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x3d0], rax>', '<mov~~rax, qword ptr [rsp + 0x3d0]>', '<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~rdx, qword ptr [rsp + 0x3c8]>', '<mov~~esi, dword ptr [rsp + 0x3dc]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3c0], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3d0], rax>', '<jl~~0x401990>']}, {'block_Idx': 31, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x520]>', '<mov~~edx, dword ptr [rsp + 0x50c]>', '<mov~~dword ptr [rsp + 0x504], edx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x508], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x400e33>']}, {'block_Idx': 159, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x618]>', '<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~ecx, dword ptr [rdi + 0x40]>', '<imul~~ecx, dword ptr [rdi + 0xc]>', '<mov~~edx, 4>', '<mov~~esi, 2>', '<cmp~~dword ptr [rdi + 0x4c], 0>', '<cmove~~edx, esi>', '<imul~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x5b0]>', '<mov~~rax, qword ptr [rsp + 0x5c0]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x18], eax>', '<cmp~~eax, ecx>', '<jle~~0x402d4d>']}, {'block_Idx': 113, 'blockInsts': ['<jmp~~0x402496>']}, {'block_Idx': 195, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x160]>', '<mov~~rcx, qword ptr [rsp + 0x158]>', '<mov~~rsi, qword ptr [rsp + 0x150]>', '<mov~~rdx, qword ptr [rsp + 0x178]>', '<mov~~rdi, qword ptr [rsp + 0x180]>', '<mov~~r8, qword ptr [rsp + 0x188]>', '<mov~~qword ptr [rsp + 0x130], r8>', '<mov~~qword ptr [rsp + 0x138], rdi>', '<mov~~qword ptr [rsp + 0x140], rdx>', '<mov~~esi, dword ptr [rsi + rdx*4]>', '<mov~~dword ptr [rsp + 0x148], esi>', '<mov~~ecx, dword ptr [rcx + rdx*4]>', '<mov~~dword ptr [rsp + 0x14c], ecx>', '<cmp~~dword ptr [rax], 0>', '<je~~0x402816>']}, {'block_Idx': 207, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0xb8]>', '<mov~~rdx, qword ptr [rsp + 0xb0]>', '<mov~~esi, dword ptr [rsp + 0xc8]>', '<mov~~edi, dword ptr [rsp + 0xcc]>', '<mov~~rcx, qword ptr [rsp + 0xf0]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x9c], ecx>', '<shl~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x9c]>', '<mov~~word ptr [rdx], di>', '<shl~~esi, cl>', '<mov~~ecx, esi>', '<mov~~si, cx>', '<mov~~rcx, rdx>', '<add~~rcx, 4>', '<mov~~word ptr [rdx + 2], si>', '<mov~~qword ptr [rsp + 0xa0], rcx>', '<mov~~qword ptr [rsp + 0xa8], rax>', '<mov~~rsi, qword ptr [rsp + 0x110]>', '<mov~~rdx, qword ptr [rsp + 0xc0]>', '<mov~~rax, qword ptr [rsp + 0xa0]>', '<mov~~rcx, qword ptr [rsp + 0xa8]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0xf8], rdx>', '<mov~~qword ptr [rsp + 0x100], rcx>', '<mov~~qword ptr [rsp + 0x108], rax>', '<jl~~0x40298f>']}, {'block_Idx': 139, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x520]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<shr~~eax, 0xf0>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x494], eax>', '<jmp~~0x401442>']}, {'block_Idx': 154, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x45c]>', '<or~~eax, 2>', '<sub~~eax, 3>', '<je~~0x4015bc>']}, {'block_Idx': 157, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x38]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<add~~rsp, 0x48>', '<ret~~>']}, {'block_Idx': 202, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x1b0]>', '<mov~~esi, dword ptr [rsp + 0x1c4]>', '<mov~~rax, qword ptr [rsp + 0x1f8]>', '<mov~~ecx, dword ptr [rax]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x1a8]>', '<mov~~rax, rdx>', '<add~~rax, 4>', '<mov~~dword ptr [rdx], esi>', '<mov~~qword ptr [rsp + 0x198], rcx>', '<mov~~qword ptr [rsp + 0x1a0], rax>', '<jmp~~0x402608>']}, {'block_Idx': 174, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, rax>', '<add~~rcx, 0x40>', '<mov~~qword ptr [rsp + 0x190], rcx>', '<cmp~~dword ptr [rax + 0x40], 0>', '<jle~~0x402ca9>']}, {'block_Idx': 326, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x384]>', '<mov~~ecx, dword ptr [rsp + 0x380]>', '<cmp~~eax, ecx>', '<jle~~0x4022d4>']}, {'block_Idx': 240, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x380]>', '<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x450]>', '<mov~~esi, eax>', '<call~~0x403720>']}, {'block_Idx': 381, 'blockInsts': ['<mov~~eax, dword ptr [rbp - 0x9c]>', '<mov~~rsp, rbp>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 328, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x384]>', '<mov~~ecx, dword ptr [rsp + 0x380]>', '<cmp~~eax, ecx>', '<jle~~0x4022d4>']}, {'block_Idx': 169, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4e8]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2d2a]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~ecx, dword ptr [rsp + 0x62c]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~esi, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x604], esi>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x608], edx>', '<mov~~dword ptr [rsp + 0x60c], ecx>', '<mov~~qword ptr [rsp + 0x610], rax>', '<je~~0x400857>']}, {'block_Idx': 188, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x430]>', '<test~~eax, eax>', '<je~~0x401816>']}, {'block_Idx': 190, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x414]>', '<mov~~rcx, qword ptr [rsp + 0x460]>', '<mov~~edx, dword ptr [rcx]>', '<sub~~edx, eax>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x438], eax>', '<mov~~rax, qword ptr [rsp + 0x460]>', '<mov~~ecx, dword ptr [rsp + 0x438]>', '<mov~~dword ptr [rsp + 0x40c], ecx>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x410], eax>', '<cmp~~eax, 0x20>', '<jle~~0x4017b4>']}, {'block_Idx': 67, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rdx, qword ptr [rsp + 0x5e0]>', '<mov~~rdi, qword ptr [rsp + 0x5f8]>', '<mov~~rsi, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rsp + 0x5e8]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x608], esi>', '<mov~~dword ptr [rsp + 0x60c], edx>', '<mov~~qword ptr [rsp + 0x610], rcx>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<jne~~0x402db6>']}, {'block_Idx': 309, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x380]>', '<mov~~ecx, dword ptr [rsp + 0x32c]>', '<mov~~dword ptr [rsp + 0x31c], ecx>', '<mov~~ecx, eax>', '<mov~~qword ptr [rsp + 0x320], rcx>', '<sub~~eax, 4>', '<ja~~0x402252>']}, {'block_Idx': 104, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x520]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<shr~~eax, 0xf0>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x4ac], eax>', '<jmp~~0x401220>']}, {'block_Idx': 204, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x38]>', '<mov~~esi, dword ptr [rsp + 0x48]>', '<mov~~rax, qword ptr [rsp + 0x68]>', '<mov~~edi, dword ptr [rsp + 0x4c]>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~dword ptr [rdx], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x30]>', '<mov~~rax, rdx>', '<add~~rax, 8>', '<mov~~dword ptr [rdx + 4], esi>', '<mov~~qword ptr [rsp + 0x20], rcx>', '<mov~~qword ptr [rsp + 0x28], rax>', '<jmp~~0x402c6d>']}, {'block_Idx': 112, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x530]>', '<cmp~~eax, 0xc>', '<jge~~0x401306>']}, {'block_Idx': 163, 'blockInsts': ['<jmp~~0x402496>']}, {'block_Idx': 200, 'blockInsts': ['<jmp~~0x402ca9>']}, {'block_Idx': 282, 'blockInsts': ['<mov~~al, byte ptr [rsp + 0x397]>', '<test~~al, 1>', '<jne~~0x401d9f>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~ecx, dword ptr [rsp + 0x62c]>', '<mov~~rdx, qword ptr [rsp + 0x650]>', '<mov~~esi, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x604], esi>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x608], edx>', '<mov~~dword ptr [rsp + 0x60c], ecx>', '<mov~~qword ptr [rsp + 0x610], rax>', '<je~~0x400857>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x534]>', '<add~~eax, -8>', '<cmp~~eax, 3>', '<jae~~0x400dad>']}, {'block_Idx': 102, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x64c]>', '<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~eax, dword ptr [rsp + 0x4a4]>', '<mov~~rdx, rdi>', '<add~~rdx, 0xc>', '<mov~~qword ptr [rsp + 0x498], rdx>', '<imul~~eax, dword ptr [rdi + 0xc]>', '<mov~~edx, 4>', '<mov~~esi, 2>', '<cmp~~dword ptr [rdi + 0x4c], 0>', '<cmove~~edx, esi>', '<imul~~eax, edx>', '<cmp~~eax, ecx>', '<jg~~0x402496>']}, {'block_Idx': 294, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x380]>', '<mov~~ecx, dword ptr [rsp + 0x33c]>', '<mov~~dword ptr [rsp + 0x338], ecx>', '<cmp~~eax, 2>', '<jle~~0x401e45>']}, {'block_Idx': 223, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x430]>', '<add~~eax, -8>', '<cmp~~eax, 5>', '<jae~~0x402279>']}, {'block_Idx': 33, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x534]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<mov~~r8d, dword ptr [rax + 0xc]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x34bc]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 123, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x518]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x510]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x488], rcx>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x488]>', '<movsxd~~rcx, eax>', '<xor~~esi, esi>', '<call~~0x500040>']}, {'block_Idx': 228, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x470]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x4022d4>']}, {'block_Idx': 115, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x510]>', '<mov~~ecx, dword ptr [rsp + 0x494]>', '<mov~~dword ptr [rsp + 0x484], ecx>', '<mov~~ecx, dword ptr [rax]>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500038>']}, {'block_Idx': 52, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x508]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x343a]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 111, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~eax, dword ptr [rax + 8]>', '<mov~~dword ptr [rsp + 0x494], eax>', '<jmp~~0x401442>']}, {'block_Idx': 99, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~eax, dword ptr [rsp + 0x4ac]>', '<mov~~dword ptr [rsp + 0x4a4], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x4a8], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401272>']}, {'block_Idx': 293, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x380]>', '<mov~~ecx, dword ptr [rsp + 0x344]>', '<mov~~dword ptr [rsp + 0x340], ecx>', '<cmp~~eax, 1>', '<jle~~0x401dfc>']}, {'block_Idx': 27, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x598]>', '<cmp~~dword ptr [rax], 0>', '<jne~~0x400b5d>']}, {'block_Idx': 140, 'blockInsts': ['<jmp~~0x40141b>']}, {'block_Idx': 55, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x5c0]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<add~~eax, 8>', '<mov~~dword ptr [rsp + 0x538], eax>', '<mov~~dword ptr [rcx], eax>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~edx, dword ptr [rsp + 0x5b0]>', '<mov~~ecx, eax>', '<mov~~eax, dword ptr [rsp + 0x538]>', '<add~~ecx, 2>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x550], eax>', '<jl~~0x400c2e>']}, {'block_Idx': 347, 'blockInsts': ['<mov~~r10d, dword ptr [rsp + 0x318]>', '<mov~~eax, dword ptr [rsp + 0x314]>', '<mov~~ecx, dword ptr [rsp + 0x310]>', '<mov~~esi, dword ptr [rsp + 0x30c]>', '<mov~~rdi, qword ptr [rsp + 0x300]>', '<mov~~r8, qword ptr [rsp + 0x2f8]>', '<mov~~r9, qword ptr [rsp + 0x388]>', '<add~~esi, dword ptr [r9 + rdi*4]>', '<mov~~dword ptr [rsp + 0x258], esi>', '<mov~~edx, esi>', '<add~~edx, ecx>', '<mov~~dword ptr [rsp + 0x25c], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x260], ecx>', '<mov~~eax, ecx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x264], eax>', '<mov~~dword ptr [r9 + rdi*4], eax>', '<add~~rdi, 1>', '<mov~~qword ptr [rsp + 0x268], rdi>', '<cmp~~rdi, r8>', '<mov~~qword ptr [rsp + 0x300], rdi>', '<mov~~dword ptr [rsp + 0x30c], esi>', '<mov~~dword ptr [rsp + 0x310], edx>', '<mov~~dword ptr [rsp + 0x314], ecx>', '<mov~~dword ptr [rsp + 0x318], eax>', '<je~~0x4022d4>']}, {'block_Idx': 162, 'blockInsts': ['<jmp~~0x4015d0>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x600]>', '<mov~~edx, dword ptr [rsp + 0x5f4]>', '<mov~~dword ptr [rsp + 0x5e8], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x5ec], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<jb~~0x402db6>']}, {'block_Idx': 166, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x402746>']}, {'block_Idx': 244, 'blockInsts': ['<push~~rbp>', '<mov~~rbp, rsp>', '<sub~~rsp, 0x210>', '<mov~~dword ptr [rbp - 0x20], edx>', '<mov~~dword ptr [rbp - 0x1c], esi>', '<mov~~qword ptr [rbp - 0x18], rdi>', '<mov~~eax, edx>', '<lea~~rcx, [rax*4 + 0xf]>', '<and~~rcx, 0xfffffffffffffff0>', '<mov~~rax, rsp>', '<sub~~rax, rcx>', '<mov~~qword ptr [rbp - 0x10], rax>', '<mov~~rsp, rax>', '<movsxd~~rax, esi>', '<mov~~rax, qword ptr [rdi + rax*8 + 0x58]>', '<mov~~qword ptr [rbp - 8], rax>', '<cmp~~edx, 0>', '<jle~~0x4030cb>']}, {'block_Idx': 215, 'blockInsts': ['<jmp~~0x402ca9>']}, {'block_Idx': 128, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x520]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<shr~~eax, 0xf0>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x494], eax>', '<jmp~~0x401442>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, rax>', '<add~~rcx, 0x40>', '<mov~~qword ptr [rsp + 0x220], rcx>', '<cmp~~dword ptr [rax + 0x40], 0>', '<jle~~0x402ca9>']}, {'block_Idx': 100, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x52c]>', '<sub~~eax, 7>', '<je~~0x4011ba>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0xe0]>', '<mov~~rcx, qword ptr [rsp + 0xd8]>', '<mov~~rdx, qword ptr [rsp + 0xd0]>', '<mov~~rsi, qword ptr [rsp + 0xf8]>', '<mov~~rdi, qword ptr [rsp + 0x100]>', '<mov~~r8, qword ptr [rsp + 0x108]>', '<mov~~qword ptr [rsp + 0xb0], r8>', '<mov~~qword ptr [rsp + 0xb8], rdi>', '<mov~~qword ptr [rsp + 0xc0], rsi>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~ecx, dword ptr [rcx + rsi*4]>', '<mov~~dword ptr [rsp + 0xc8], ecx>', '<mov~~eax, dword ptr [rax]>', '<add~~ecx, edx>', '<mov~~dword ptr [rsp + 0xcc], ecx>', '<cmp~~eax, 0>', '<je~~0x402a42>']}, {'block_Idx': 210, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x510]>', '<mov~~edi, dword ptr [rsp + 0x410]>', '<mov~~esi, dword ptr [rsp + 0x3ec]>', '<mov~~rax, qword ptr [rsp + 0x440]>', '<mov~~r9d, dword ptr [rsp + 0x3f4]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, esi>', '<add~~r8d, 0x10>', '<mov~~dword ptr [rdx], r8d>', '<mov~~ecx, edi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x3e0], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x3f0]>', '<mov~~dword ptr [rsp + 0x3e4], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3e0]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3e4]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x3e8], eax>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~esi, dword ptr [rsp + 0x410]>', '<mov~~edx, dword ptr [rsp + 0x3e8]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3d8], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3d8]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3dc], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x4022d4>']}, {'block_Idx': 250, 'blockInsts': ['<jmp~~0x402496>']}, {'block_Idx': 234, 'blockInsts': ['<jmp~~0x401d6b>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x600]>', '<mov~~ecx, dword ptr [rsp + 0x5e8]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rsi, rdx>', '<add~~rsi, 0xa4>', '<mov~~qword ptr [rsp + 0x5e0], rsi>', '<mov~~edx, dword ptr [rdx + 0xa4]>', '<add~~ecx, eax>', '<xor~~edx, 0xffffffff>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<ja~~0x402db6>']}, {'block_Idx': 165, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x402b83>']}, {'block_Idx': 219, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~esi, dword ptr [rsp + 0x410]>', '<mov~~edx, dword ptr [rsp + 0x3e8]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3d8], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3d8]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3dc], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x4022d4>']}, {'block_Idx': 79, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4e8]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x31e2]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 39, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5b4]>', '<mov~~rcx, qword ptr [rsp + 8]>', '<mov~~esi, dword ptr [rsp + 0x18]>', '<mov~~edx, dword ptr [rsp + 0x14]>', '<mov~~rdi, qword ptr [rsp + 0x630]>', '<mov~~r8d, esi>', '<add~~r8d, dword ptr [rdi + 0xa4]>', '<mov~~dword ptr [rdi + 0xa4], r8d>', '<sub~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<mov~~eax, dword ptr [rsp + 0x5f0]>', '<add~~rsp, 0x658>', '<ret~~>']}, {'block_Idx': 133, 'blockInsts': ['<mov~~dword ptr [rsp + 0x490], eax>', '<cmp~~eax, 0>', '<je~~0x4014d3>']}, {'block_Idx': 120, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x520]>', '<mov~~edx, dword ptr [rcx]>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~eax, dword ptr [rax + rcx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<shr~~eax, 0xf8>', '<add~~edx, 8>', '<mov~~dword ptr [rcx], edx>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x494], eax>', '<jmp~~0x401442>']}, {'block_Idx': 88, 'blockInsts': ['<jmp~~0x401130>']}, {'block_Idx': 295, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x388]>', '<mov~~eax, dword ptr [rsp + 0x340]>', '<mov~~edx, dword ptr [rsp + 0x380]>', '<add~~edx, -2>', '<mov~~edx, edx>', '<sub~~eax, dword ptr [rcx + rdx*4]>', '<mov~~dword ptr [rsp + 0x33c], eax>', '<mov~~eax, dword ptr [rsp + 0x380]>', '<mov~~ecx, dword ptr [rsp + 0x33c]>', '<mov~~dword ptr [rsp + 0x338], ecx>', '<cmp~~eax, 2>', '<jle~~0x401e45>']}, {'block_Idx': 227, 'blockInsts': ['<jmp~~0x4022d4>']}, {'block_Idx': 192, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x220]>', '<mov~~rdx, qword ptr [rsp + 0x1c8]>', '<mov~~rax, qword ptr [rsp + 0x1e0]>', '<mov~~rcx, qword ptr [rsp + 0x1d8]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x208], rdx>', '<mov~~qword ptr [rsp + 0x210], rcx>', '<mov~~qword ptr [rsp + 0x218], rax>', '<jl~~0x4024df>']}, {'block_Idx': 327, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x384]>', '<mov~~ecx, dword ptr [rsp + 0x380]>', '<cmp~~eax, ecx>', '<jle~~0x4022d4>']}, {'block_Idx': 152, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x510]>', '<mov~~edx, dword ptr [rsp + 0x234]>', '<mov~~ecx, dword ptr [rsp + 0x238]>', '<add~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~edx, dword ptr [rcx]>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<mov~~eax, dword ptr [rax + 0x50]>', '<mov~~qword ptr [rsp + 0x228], rax>', '<sub~~rax, 3>', '<ja~~0x402ca9>']}, {'block_Idx': 238, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x250]>', '<mov~~rdx, qword ptr [rsp + 0x248]>', '<mov~~ecx, dword ptr [rsp + 0x40c]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~dword ptr [rsp + 0x23c], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x240], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x250], rax>', '<jl~~0x402314>']}, {'block_Idx': 49, 'blockInsts': ['<sub~~rsp, 0x28>', '<mov~~qword ptr [rsp + 8], rdi>', '<mov~~qword ptr [rsp + 0x10], rsi>', '<mov~~qword ptr [rsp + 0x18], rdx>', '<mov~~eax, dword ptr [rdx + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<mov~~dword ptr [rsp + 0x24], eax>', '<mov~~dword ptr [rsi], eax>', '<cmp~~eax, 0x10>', '<jge~~0x400166>']}, {'block_Idx': 167, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<cmp~~dword ptr [rax + 0xc], 2>', '<jne~~0x402970>']}, {'block_Idx': 20, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5b0]>', '<mov~~rax, qword ptr [rsp + 0x5c0]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x18], eax>', '<cmp~~eax, ecx>', '<jle~~0x402d4d>']}, {'block_Idx': 28, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x574]>', '<cmp~~eax, 0>', '<jle~~0x400b7e>']}, {'block_Idx': 248, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x358]>', '<mov~~rdx, qword ptr [rsp + 0x388]>', '<mov~~edi, dword ptr [rsp + 0x360]>', '<mov~~esi, dword ptr [rsp + 0x354]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x348], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x348]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x370]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x378], rax>', '<jne~~0x401be6>']}, {'block_Idx': 151, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~edx, dword ptr [rcx]>', '<add~~edx, 0x10>', '<mov~~dword ptr [rcx], edx>', '<mov~~eax, dword ptr [rax + 0x50]>', '<mov~~qword ptr [rsp + 0x228], rax>', '<sub~~rax, 3>', '<ja~~0x402ca9>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x5c0]>', '<mov~~dword ptr [rax], 0x10>', '<mov~~rax, rcx>', '<add~~rax, 0x38>', '<mov~~qword ptr [rsp + 0x510], rax>', '<mov~~rax, rcx>', '<add~~rax, 0x28>', '<mov~~qword ptr [rsp + 0x518], rax>', '<mov~~rax, qword ptr [rcx + 0x28]>', '<mov~~qword ptr [rsp + 0x520], rax>', '<mov~~edx, dword ptr [rax + 2]>', '<mov~~esi, edx>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x52c], esi>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x530], edx>', '<mov~~dword ptr [rcx + 0x38], 0x18>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x534], eax>', '<mov~~dword ptr [rcx + 0x38], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x400d7d>']}, {'block_Idx': 182, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x638]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x50], rsi>', '<mov~~rsi, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x58], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x4c>', '<mov~~qword ptr [rsp + 0x60], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x48>', '<mov~~qword ptr [rsp + 0x68], rsi>', '<add~~rdx, 0x48>', '<mov~~qword ptr [rsp + 0x70], rdx>', '<xor~~edx, edx>', '<mov~~qword ptr [rsp + 0x78], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~qword ptr [rsp + 0x88], rax>', '<jmp~~0x402ba2>']}, {'block_Idx': 50, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<jmp~~0x402db6>']}, {'block_Idx': 220, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x40c]>', '<cmp~~eax, 0>', '<je~~0x40235e>']}, {'block_Idx': 206, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x138]>', '<mov~~rax, qword ptr [rsp + 0x168]>', '<mov~~esi, dword ptr [rsp + 0x148]>', '<mov~~ecx, dword ptr [rax]>', '<mov~~edi, esi>', '<shl~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x14c]>', '<mov~~dword ptr [rdx], edi>', '<sub~~esi, ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x130]>', '<mov~~rax, rdx>', '<add~~rax, 8>', '<mov~~dword ptr [rdx + 4], esi>', '<mov~~qword ptr [rsp + 0x120], rcx>', '<mov~~qword ptr [rsp + 0x128], rax>', '<jmp~~0x40287a>']}, {'block_Idx': 235, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x380]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x370], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x378], rax>', '<mov~~rdx, qword ptr [rsp + 0x440]>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x460]>', '<mov~~rsi, qword ptr [rsp + 0x378]>', '<mov~~qword ptr [rsp + 0x358], rsi>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x360], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x364], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x368], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x36c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401c85>']}, {'block_Idx': 41, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x4f8], rax>', '<jmp~~0x400e8c>']}, {'block_Idx': 338, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x340]>', '<mov~~ecx, dword ptr [rsp + 0x338]>', '<mov~~esi, dword ptr [rsp + 0x384]>', '<mov~~edx, dword ptr [rsp + 0x380]>', '<movsxd~~rdx, edx>', '<movsxd~~rsi, esi>', '<mov~~qword ptr [rsp + 0x2c0], rsi>', '<mov~~qword ptr [rsp + 0x2c8], rdx>', '<mov~~dword ptr [rsp + 0x2d0], ecx>', '<mov~~dword ptr [rsp + 0x2d4], eax>', '<jmp~~0x4020b6>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x520]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rsi, qword ptr [rsp + 0x4f8]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x4e4], esi>', '<cmp~~esi, 0x10>', '<setg~~dil>', '<mov~~r9, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r8d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r8d>', '<mov~~r8d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r8d, r11d>', '<and~~dil, 1>', '<movzx~~edi, dil>', '<mov~~dword ptr [r9 + 0x58], r10d>', '<sub~~r8d, esi>', '<mov~~dword ptr [rdx + 0x48], r8d>', '<mov~~dword ptr [rdx + 0x4c], edi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x4e8], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x4f0], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax + 3]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x400f56>']}, {'block_Idx': 105, 'blockInsts': ['<jmp~~0x401205>']}, {'block_Idx': 171, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x638]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rdx, qword ptr [rsp + 0x630]>', '<mov~~rsi, rdx>', '<add~~rsi, 0xc>', '<mov~~qword ptr [rsp + 0x1e8], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x4c>', '<mov~~qword ptr [rsp + 0x1f0], rsi>', '<mov~~rsi, rdx>', '<add~~rsi, 0x48>', '<mov~~qword ptr [rsp + 0x1f8], rsi>', '<add~~rdx, 0x48>', '<mov~~qword ptr [rsp + 0x200], rdx>', '<xor~~edx, edx>', '<mov~~qword ptr [rsp + 0x208], rdx>', '<mov~~qword ptr [rsp + 0x210], rcx>', '<mov~~qword ptr [rsp + 0x218], rax>', '<jmp~~0x4024df>']}, {'block_Idx': 176, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x630]>', '<mov~~rcx, rax>', '<add~~rcx, 0x40>', '<mov~~qword ptr [rsp + 0x110], rcx>', '<cmp~~dword ptr [rax + 0x40], 0>', '<jle~~0x402ca9>']}, {'block_Idx': 233, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x450]>', '<mov~~rax, qword ptr [rsp + 0x630]>', '<add~~rax, 0x58>', '<shl~~rcx, 3>', '<add~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3f8], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x400], rax>', '<jmp~~0x4019d3>']}, {'block_Idx': 37, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x5a8]>', '<mov~~eax, dword ptr [rsp + 0x570]>', '<mov~~rcx, qword ptr [rsp + 0x5a0]>', '<mov~~rdi, qword ptr [rcx]>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x558]>', '<cdqe~~>', '<add~~rdx, rax>', '<call~~0x400110>']}, {'block_Idx': 201, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x1b0]>', '<mov~~rdx, qword ptr [rsp + 0x1a8]>', '<mov~~esi, dword ptr [rsp + 0x1c4]>', '<mov~~rcx, qword ptr [rsp + 0x200]>', '<mov~~ecx, dword ptr [rcx]>', '<shl~~esi, cl>', '<mov~~ecx, esi>', '<mov~~si, cx>', '<mov~~rcx, rdx>', '<add~~rcx, 2>', '<mov~~word ptr [rdx], si>', '<mov~~qword ptr [rsp + 0x198], rcx>', '<mov~~qword ptr [rsp + 0x1a0], rax>', '<mov~~rsi, qword ptr [rsp + 0x1e8]>', '<mov~~rdx, qword ptr [rsp + 0x1b8]>', '<mov~~rax, qword ptr [rsp + 0x198]>', '<mov~~rcx, qword ptr [rsp + 0x1a0]>', '<add~~rdx, 1>', '<movsxd~~rsi, dword ptr [rsi]>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x1d0], rdx>', '<mov~~qword ptr [rsp + 0x1d8], rcx>', '<mov~~qword ptr [rsp + 0x1e0], rax>', '<jl~~0x40252a>']}, {'block_Idx': 254, 'blockInsts': ['<jmp~~0x4022d4>']}, {'block_Idx': 239, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x440]>', '<mov~~rcx, qword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x460]>', '<mov~~rsi, qword ptr [rsp + 0x400]>', '<mov~~qword ptr [rsp + 0x3a8], rsi>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x3b0], eax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x3b4], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x3b8], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x3bc], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401a72>']}, {'block_Idx': 316, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x320]>', '<lea~~rcx, [rip + 0x2129]>', '<movsxd~~rax, dword ptr [rcx + rax*4]>', '<add~~rax, rcx>', '<jmp~~rax>']}], 'cfg_edge_info': [(137, 145), (317, 341), (55, 66), (18, 26), (170, 169), (169, 191), (232, 238), (41, 51), (162, 170), (295, 303), (181, 192), (144, 152), (233, 239), (328, 220), (7, 12), (36, 48), (96, 99), (226, 227), (287, 295), (239, 245), (100, 105), (25, 11), (232, 224), (172, 182), (151, 159), (347, 220), (159, 29), (133, 138), (22, 32), (158, 167), (26, 20), (206, 216), (55, 65), (107, 112), (61, 72), (10, 17), (62, 82), (302, 310), (7, 11), (117, 121), (287, 294), (327, 339), (99, 103), (21, 22), (21, 31), (328, 340), (339, 349), (205, 215), (66, 20), (54, 64), (154, 160), (124, 128), (361, 220), (235, 242), (195, 206), (316, 325), (28, 38), (198, 211), (168, 179), (200, 159), (61, 71), (221, 227), (361, 350), (43, 31), (202, 213), (24, 36), (302, 309), (65, 55), (216, 215), (17, 15), (338, 348), (117, 120), (6, 5), (197, 210), (37, 118), (42, 53), (203, 159), (309, 317), (190, 189), (142, 149), (182, 194), (253, 254), (95, 64), (13, 22), (72, 71), (194, 204), (394, 378), (163, 64), (378, 379), (179, 179), (9, 15), (109, 102), (235, 241), (139, 115), (128, 115), (186, 196), (228, 220), (168, 178), (241, 248), (220, 225), (134, 140), (20, 29), (242, 240), (242, 249), (293, 294), (214, 159), (105, 109), (24, 35), (145, 154), (316, 328), (120, 115), (6, 4), (238, 238), (326, 220), (197, 209), (160, 169), (71, 79), (42, 52), (30, 50), (190, 188), (12, 20), (205, 195), (31, 42), (112, 116), (234, 240), (52, 74), (13, 21), (223, 230), (164, 171), (28, 18), (50, 15), (238, 224), (138, 155), (201, 193), (249, 242), (19, 27), (118, 149), (155, 64), (134, 139), (253, 239), (348, 220), (56, 48), (196, 208), (93, 97), (216, 195), (176, 159), (145, 153), (193, 202), (89, 81), (208, 218), (341, 64), (167, 177), (8, 13), (224, 144), (348, 359), (11, 18), (79, 91), (222, 228), (217, 159), (340, 220), (123, 133), (174, 184), (137, 144), (248, 240), (18, 25), (245, 253), (248, 249), (170, 168), (207, 217), (218, 217), (201, 192), (340, 350), (249, 241), (82, 64), (230, 237), (381, 378), (211, 223), (45, 20), (34, 20), (295, 302), (240, 277), (144, 151), (53, 51), (56, 47), (196, 207), (93, 96), (166, 175), (226, 226), (193, 201), (38, 26), (89, 71), (237, 244), (167, 176), (83, 15), (100, 104), (151, 158), (133, 137), (303, 310), (152, 159), (65, 20), (158, 166), (300, 277), (107, 111), (229, 235), (347, 358), (29, 39), (210, 221), (310, 317), (192, 200), (191, 64), (33, 54), (165, 173), (74, 64), (51, 62), (225, 224), (166, 174), (88, 93), (99, 102), (188, 198), (80, 88), (81, 71), (81, 89), (103, 113), (195, 205), (158, 165), (0, 2), (129, 134), (210, 220), (231, 154), (192, 181), (221, 226), (102, 107), (184, 195), (224, 231), (165, 172), (51, 61), (67, 15), (225, 232), (174, 159), (29, 15), (188, 197), (228, 233), (309, 316), (80, 87), (161, 170), (140, 147), (215, 159), (316, 220), (327, 220), (32, 43), (194, 203), (87, 95), (158, 164), (358, 347), (218, 196), (220, 224), (239, 246), (231, 153), (153, 161), (25, 12), (149, 38), (154, 162), (246, 254), (294, 303), (214, 194), (176, 186), (68, 67), (316, 327), (160, 168), (209, 219), (349, 360), (121, 124), (10, 9), (31, 41), (2, 5), (32, 33), (223, 229), (64, 83), (35, 56), (157, 149), (213, 193), (153, 160), (67, 4), (349, 220), (124, 129), (5, 10), (179, 190), (316, 326), (189, 212), (102, 64), (91, 64), (172, 159), (379, 220), (2, 4), (282, 287), (16, 15), (246, 239), (16, 24), (286, 293), (17, 16), (277, 64), (178, 189), (230, 236), (213, 192), (211, 222), (149, 18), (237, 378), (254, 220), (115, 123), (45, 55), (72, 81), (116, 115), (38, 25), (5, 9), (227, 220), (9, 16), (109, 103), (113, 64), (360, 349), (219, 221), (171, 181), (20, 30), (303, 309), (282, 286), (152, 158), (240, 280), (293, 295), (204, 214), (326, 338), (164, 159), (229, 234), (27, 28), (178, 188), (27, 37), (250, 64), (310, 316), (71, 80), (4, 8), (112, 117), (34, 45), (236, 250), (325, 337), (359, 348), (97, 100), (337, 347), (19, 28), (325, 220), (203, 194), (219, 220), (378, 64), (104, 99), (181, 193), (1, 6), (14, 34), (212, 64), (207, 196), (277, 282), (47, 67), (147, 163), (350, 361), (0, 1), (8, 14), (11, 19), (48, 68), (111, 115), (4, 7), (159, 30), (22, 33), (37, 49)], 'cdg_edge_info': [(137, 145), (18, 26), (170, 169), (80, 95), (232, 238), (109, 15), (295, 303), (51, 64), (144, 152), (51, 82), (7, 12), (71, 15), (287, 295), (167, 159), (327, 349), (99, 113), (239, 245), (228, 254), (100, 105), (25, 11), (178, 15), (172, 182), (25, 20), (159, 29), (133, 138), (154, 170), (160, 64), (22, 32), (32, 64), (309, 220), (158, 167), (195, 216), (55, 65), (107, 112), (102, 15), (61, 72), (10, 17), (192, 192), (159, 15), (170, 15), (309, 224), (7, 11), (117, 121), (327, 339), (99, 103), (21, 22), (21, 31), (133, 83), (239, 253), (328, 340), (154, 160), (124, 128), (194, 214), (32, 54), (223, 277), (195, 206), (235, 242), (28, 38), (316, 325), (168, 179), (228, 239), (80, 93), (190, 212), (32, 31), (124, 123), (134, 15), (65, 55), (17, 15), (117, 120), (6, 5), (197, 210), (133, 64), (197, 219), (230, 15), (42, 53), (309, 317), (190, 189), (134, 163), (13, 22), (165, 159), (223, 240), (194, 204), (164, 181), (179, 179), (9, 15), (235, 241), (109, 102), (117, 115), (117, 124), (340, 361), (168, 178), (220, 225), (134, 140), (20, 29), (242, 249), (196, 218), (24, 35), (145, 154), (309, 15), (22, 83), (316, 328), (6, 4), (238, 238), (197, 209), (160, 169), (71, 79), (42, 52), (20, 15), (190, 188), (205, 195), (112, 116), (31, 42), (31, 51), (13, 21), (223, 230), (164, 171), (109, 83), (28, 18), (201, 193), (19, 27), (249, 242), (71, 83), (134, 139), (211, 224), (253, 239), (51, 15), (282, 293), (56, 48), (196, 208), (93, 97), (178, 83), (216, 195), (22, 64), (145, 153), (193, 202), (310, 220), (89, 81), (167, 177), (224, 144), (8, 13), (42, 15), (11, 18), (378, 220), (210, 227), (170, 191), (211, 228), (160, 15), (112, 115), (109, 64), (174, 184), (310, 224), (18, 25), (248, 249), (170, 168), (0, 4), (249, 241), (71, 64), (230, 237), (378, 224), (100, 109), (219, 227), (211, 223), (178, 64), (196, 207), (93, 96), (22, 54), (277, 15), (166, 175), (226, 226), (38, 26), (193, 201), (18, 20), (7, 20), (167, 176), (100, 104), (134, 115), (133, 137), (190, 15), (303, 310), (152, 159), (133, 155), (93, 100), (158, 166), (107, 111), (229, 235), (134, 83), (29, 39), (100, 99), (210, 221), (310, 317), (172, 194), (230, 83), (165, 173), (51, 62), (51, 71), (166, 174), (325, 347), (99, 102), (133, 15), (107, 115), (188, 198), (80, 88), (81, 89), (32, 83), (195, 205), (158, 165), (310, 15), (117, 133), (134, 64), (0, 2), (309, 83), (188, 211), (378, 15), (80, 83), (231, 154), (192, 181), (221, 226), (230, 64), (102, 107), (224, 231), (67, 15), (165, 172), (51, 61), (225, 232), (176, 196), (16, 67), (99, 83), (29, 15), (188, 197), (228, 233), (309, 316), (80, 87), (32, 43), (194, 203), (166, 159), (158, 164), (117, 123), (347, 347), (218, 196), (309, 64), (80, 64), (239, 246), (160, 191), (231, 153), (42, 74), (153, 161), (42, 83), (25, 12), (153, 170), (149, 38), (154, 162), (214, 194), (99, 64), (176, 186), (316, 327), (160, 168), (168, 190), (42, 51), (10, 9), (102, 83), (2, 5), (31, 41), (20, 50), (32, 15), (112, 133), (361, 361), (32, 33), (223, 229), (170, 83), (124, 134), (24, 56), (235, 248), (277, 83), (71, 91), (213, 193), (42, 64), (134, 147), (153, 160), (67, 4), (124, 129), (5, 10), (190, 83), (164, 192), (316, 326), (109, 113), (178, 212), (102, 64), (134, 133), (282, 287), (112, 123), (170, 64), (16, 15), (326, 348), (16, 24), (124, 115), (246, 239), (124, 133), (17, 16), (277, 64), (178, 189), (230, 236), (8, 34), (149, 18), (159, 50), (45, 55), (72, 81), (190, 64), (38, 25), (5, 9), (9, 16), (109, 103), (107, 133), (348, 348), (8, 20), (310, 83), (134, 123), (349, 349), (219, 221), (20, 30), (303, 309), (152, 158), (378, 83), (293, 295), (326, 338), (93, 99), (38, 20), (56, 68), (193, 213), (229, 234), (27, 28), (178, 188), (188, 220), (27, 37), (249, 248), (310, 316), (71, 80), (4, 8), (112, 117), (34, 45), (325, 337), (174, 195), (107, 123), (0, 6), (310, 64), (19, 28), (188, 224), (203, 194), (378, 64), (133, 144), (181, 193), (51, 83), (207, 196), (277, 282), (80, 15), (0, 1), (8, 14), (11, 19), (211, 220), (159, 30), (4, 7), (22, 15), (22, 33), (99, 15), (160, 83), (158, 159)], 'ddg_edge_info': [(226, 232), (123, 219), (197, 168), (238, 206), (287, 327), (207, 218), (0, 5), (6, 48), (137, 239), (231, 166), (83, 39), (68, 139), (282, 248), (348, 193), (349, 158), (13, 209), (225, 208), (295, 303), (102, 137), (123, 196), (361, 253), (137, 216), (68, 116), (282, 225), (348, 170), (6, 61), (232, 224), (25, 11), (10, 31), (248, 348), (0, 103), (133, 138), (225, 221), (226, 186), (123, 173), (68, 8), (248, 204), (1, 67), (123, 209), (238, 196), (68, 93), (1, 103), (282, 202), (287, 317), (207, 208), (51, 189), (137, 229), (109, 167), (55, 159), (232, 237), (347, 224), (238, 317), (316, 236), (248, 181), (0, 116), (123, 186), (1, 80), (282, 179), (253, 152), (137, 206), (190, 361), (109, 144), (0, 237), (21, 31), (160, 189), (220, 240), (239, 253), (347, 201), (170, 239), (229, 325), (316, 213), (248, 158), (0, 93), (226, 176), (248, 194), (67, 39), (282, 192), (137, 219), (160, 202), (316, 190), (43, 31), (361, 197), (232, 83), (123, 176), (65, 55), (282, 169), (137, 196), (197, 210), (316, 347), (68, 96), (160, 179), (220, 230), (225, 165), (190, 207), (182, 203), (316, 203), (202, 181), (0, 83), (13, 22), (137, 317), (226, 166), (123, 153), (282, 326), (349, 236), (5, 17), (51, 133), (109, 111), (282, 182), (139, 133), (220, 207), (347, 168), (51, 169), (190, 184), (13, 179), (224, 213), (170, 242), (4, 30), (190, 220), (231, 221), (109, 232), (282, 303), (149, 39), (349, 213), (1, 24), (87, 64), (282, 159), (253, 361), (220, 184), (145, 190), (137, 186), (160, 169), (0, 37), (347, 181), (224, 190), (190, 197), (316, 193), (348, 225), (349, 190), (232, 50), (303, 339), (61, 168), (1, 37), (51, 123), (282, 172), (220, 197), (232, 171), (347, 158), (224, 167), (229, 282), (190, 174), (349, 347), (316, 170), (348, 202), (0, 50), (225, 168), (204, 194), (282, 293), (149, 29), (348, 238), (349, 203), (1, 14), (225, 253), (248, 236), (0, 171), (220, 174), (137, 176), (224, 144), (238, 228), (123, 241), (160, 159), (287, 349), (0, 27), (253, 207), (220, 30), (111, 123), (238, 349), (104, 120), (123, 133), (361, 190), (226, 231), (123, 218), (238, 205), (68, 53), (248, 249), (1, 112), (0, 4), (13, 123), (253, 184), (190, 164), (109, 176), (348, 192), (184, 206), (231, 201), (349, 193), (1, 4), (361, 167), (53, 51), (226, 208), (295, 338), (68, 30), (220, 164), (13, 100), (123, 231), (238, 218), (348, 349), (282, 224), (287, 339), (0, 17), (253, 197), (109, 189), (248, 347), (348, 205), (349, 170), (361, 144), (68, 7), (248, 203), (226, 221), (51, 103), (123, 208), (238, 195), (248, 239), (1, 102), (253, 174), (68, 128), (109, 166), (282, 237), (348, 182), (238, 316), (229, 347), (0, 115), (238, 172), (248, 216), (1, 79), (220, 154), (123, 221), (238, 208), (1, 115), (282, 214), (348, 159), (0, 7), (231, 168), (109, 179), (160, 224), (347, 236), (317, 64), (248, 193), (0, 128), (348, 316), (128, 133), (253, 164), (137, 218), (160, 201), (348, 172), (347, 213), (229, 337), (190, 229), (316, 225), (123, 175), (282, 348), (248, 206), (361, 232), (13, 80), (282, 204), (220, 229), (137, 231), (347, 190), (231, 158), (109, 169), (160, 214), (316, 202), (226, 165), (282, 325), (316, 238), (226, 201), (123, 188), (235, 249), (282, 181), (128, 123), (218, 196), (137, 208), (21, 33), (220, 242), (347, 203), (229, 327), (190, 219), (202, 193), (149, 38), (225, 213), (4, 65), (123, 165), (238, 152), (16, 39), (282, 338), (248, 196), (81, 168), (5, 29), (109, 123), (282, 194), (160, 168), (220, 219), (232, 193), (137, 221), (224, 189), (190, 196), (248, 317), (160, 204), (316, 192), (0, 72), (224, 225), (225, 190), (190, 232), (231, 233), (349, 225), (24, 56), (190, 317), (68, 62), (282, 171), (0, 193), (220, 196), (253, 144), (160, 181), (316, 169), (220, 232), (13, 168), (213, 193), (253, 229), (347, 193), (224, 202), (225, 167), (10, 13), (190, 209), (109, 221), (316, 205), (349, 202), (226, 168), (4, 55), (349, 238), (226, 253), (164, 192), (282, 184), (160, 158), (220, 209), (347, 170), (224, 179), (225, 144), (190, 186), (316, 182), (0, 62), (232, 39), (246, 239), (361, 189), (137, 152), (68, 52), (220, 186), (123, 253), (1, 147), (316, 159), (287, 361), (0, 39), (253, 219), (224, 192), (219, 226), (349, 192), (361, 166), (4, 45), (238, 361), (231, 236), (123, 145), (295, 337), (68, 29), (1, 39), (361, 202), (5, 9), (137, 165), (123, 230), (229, 248), (109, 103), (96, 133), (1, 124), (224, 169), (238, 253), (190, 176), (316, 172), (282, 30), (0, 52), (348, 204), (253, 232), (232, 29), (104, 109), (231, 213), (10, 65), (109, 224), (349, 205), (1, 16), (326, 338), (361, 179), (56, 68), (68, 42), (248, 238), (220, 176), (13, 112), (51, 138), (348, 361), (0, 29), (231, 190), (109, 201), (349, 182), (68, 19), (220, 153), (31, 137), (123, 220), (238, 207), (96, 123), (287, 328), (0, 6), (253, 186), (224, 159), (190, 166), (231, 167), (282, 249), (0, 42), (348, 194), (349, 159), (111, 138), (51, 236), (231, 203), (109, 214), (349, 195), (1, 6), (13, 246), (361, 169), (238, 184), (68, 32), (248, 228), (220, 166), (207, 196), (123, 233), (349, 316), (128, 168), (282, 226), (0, 19), (205, 159), (111, 115), (137, 253), (248, 349), (160, 236), (348, 207), (349, 172), (64, 39), (10, 68), (282, 347), (248, 205), (123, 210), (238, 197), (1, 104), (253, 176), (109, 168), (282, 239), (14, 159), (160, 213), (348, 184), (232, 238), (347, 225), (229, 349), (160, 249), (181, 192), (0, 117), (233, 239), (238, 174), (248, 218), (1, 81), (7, 12), (287, 295), (123, 223), (68, 107), (282, 216), (21, 32), (0, 9), (253, 189), (220, 241), (347, 202), (231, 170), (229, 326), (109, 181), (168, 230), (61, 104), (316, 214), (25, 38), (347, 238), (138, 64), (282, 337), (248, 195), (208, 159), (226, 213), (17, 39), (160, 347), (55, 65), (282, 193), (25, 159), (253, 166), (229, 303), (68, 120), (248, 316), (282, 229), (109, 158), (61, 81), (160, 203), (348, 174), (225, 189), (229, 339), (10, 35), (190, 231), (248, 172), (0, 107), (226, 190), (123, 177), (238, 164), (248, 208), (169, 64), (1, 71), (137, 197), (316, 348), (282, 206), (220, 231), (347, 192), (224, 201), (190, 208), (160, 216), (316, 204), (225, 202), (226, 167), (123, 154), (282, 327), (194, 214), (1, 48), (123, 190), (25, 149), (220, 208), (347, 169), (229, 293), (316, 361), (168, 197), (61, 71), (160, 193), (282, 39), (347, 205), (224, 214), (225, 179), (226, 144), (10, 25), (190, 221), (348, 249), (123, 167), (1, 61), (282, 160), (361, 224), (51, 147), (50, 39), (68, 87), (282, 196), (160, 170), (220, 221), (347, 182), (182, 194), (316, 194), (225, 192), (31, 61), (123, 144), (282, 317), (194, 204), (293, 326), (1, 38), (361, 201), (68, 64), (109, 102), (128, 115), (282, 173), (224, 348), (6, 9), (232, 172), (347, 159), (96, 168), (349, 348), (1, 159), (282, 29), (13, 170), (253, 231), (0, 51), (224, 204), (225, 169), (149, 30), (248, 152), (348, 239), (0, 87), (349, 204), (293, 303), (232, 64), (24, 35), (238, 144), (56, 67), (68, 41), (1, 51), (0, 172), (361, 214), (347, 316), (51, 137), (238, 229), (109, 115), (220, 211), (13, 147), (347, 172), (224, 181), (30, 50), (170, 210), (349, 361), (316, 184), (348, 216), (0, 64), (4, 34), (231, 225), (109, 236), (220, 188), (12, 159), (13, 124), (137, 190), (224, 158), (190, 165), (1, 149), (0, 41), (253, 221), (225, 159), (190, 201), (231, 202), (109, 213), (348, 229), (349, 194), (1, 5), (13, 245), (361, 168), (295, 339), (216, 195), (68, 31), (220, 165), (137, 167), (123, 232), (238, 219), (287, 340), (186, 208), (231, 179), (109, 190), (168, 239), (316, 174), (348, 206), (52, 64), (10, 67), (349, 207), (0, 139), (361, 181), (137, 144), (282, 153), (232, 152), (123, 245), (238, 232), (109, 347), (249, 241), (1, 139), (282, 238), (0, 31), (231, 192), (229, 348), (109, 203), (248, 361), (348, 219), (81, 104), (349, 184), (33, 64), (361, 158), (196, 207), (68, 21), (0, 152), (193, 201), (239, 168), (229, 240), (248, 253), (1, 116), (0, 8), (231, 169), (168, 229), (160, 225), (348, 196), (25, 37), (229, 361), (303, 310), (190, 253), (61, 139), (316, 249), (238, 186), (348, 317), (1, 93), (220, 168), (13, 104), (253, 165), (123, 235), (282, 228), (0, 21), (253, 201), (220, 253), (347, 214), (231, 182), (229, 338), (109, 193), (160, 238), (349, 174), (225, 224), (226, 189), (282, 349), (68, 11), (248, 207), (13, 81), (226, 225), (7, 37), (282, 205), (137, 232), (231, 159), (109, 170), (282, 241), (348, 186), (81, 71), (232, 240), (224, 236), (225, 201), (316, 239), (248, 184), (67, 29), (226, 202), (123, 189), (238, 176), (347, 348), (109, 147), (68, 109), (282, 218), (0, 240), (160, 192), (145, 249), (192, 181), (347, 204), (231, 172), (229, 328), (160, 228), (316, 216), (0, 96), (224, 249), (225, 214), (226, 179), (51, 61), (123, 166), (282, 339), (248, 197), (14, 30), (349, 249), (123, 202), (238, 189), (160, 349), (1, 96), (282, 195), (120, 133), (287, 310), (253, 168), (347, 361), (6, 31), (160, 205), (282, 316), (316, 229), (248, 174), (0, 109), (293, 325), (194, 203), (226, 192), (123, 179), (238, 166), (361, 236), (139, 123), (224, 347), (109, 137), (282, 208), (160, 182), (220, 233), (239, 246), (225, 348), (347, 194), (224, 203), (190, 210), (61, 96), (316, 206), (225, 204), (226, 169), (293, 338), (349, 239), (214, 194), (361, 213), (13, 61), (120, 123), (220, 210), (5, 56), (232, 184), (229, 295), (160, 195), (347, 207), (224, 216), (225, 181), (231, 224), (316, 219), (248, 164), (349, 216), (1, 27), (226, 182), (64, 83), (123, 169), (35, 56), (160, 316), (0, 184), (137, 189), (68, 89), (160, 172), (220, 223), (347, 184), (224, 193), (225, 158), (10, 4), (149, 19), (316, 196), (361, 347), (348, 228), (205, 216), (225, 194), (226, 159), (104, 133), (231, 237), (349, 229), (361, 203), (137, 166), (9, 17), (316, 317), (282, 175), (186, 207), (232, 174), (137, 202), (224, 170), (30, 39), (0, 53), (224, 206), (232, 30), (190, 213), (231, 214), (109, 225), (349, 206), (1, 17), (68, 43), (282, 152), (0, 174), (220, 177), (137, 179), (238, 231), (68, 79), (220, 213), (0, 30), (347, 174), (109, 202), (316, 186), (348, 218), (104, 123), (109, 238), (81, 139), (1, 30), (349, 219), (361, 193), (145, 160), (282, 165), (220, 190), (232, 164), (231, 348), (190, 167), (348, 195), (0, 43), (4, 13), (231, 204), (248, 144), (348, 231), (349, 196), (1, 7), (293, 295), (361, 170), (68, 33), (248, 229), (0, 164), (220, 167), (193, 213), (137, 169), (238, 221), (190, 144), (349, 317), (1, 128), (160, 152), (13, 139), (231, 181), (109, 192), (348, 208), (347, 249), (14, 39), (220, 144), (226, 224), (123, 211), (13, 116), (109, 349), (170, 179), (282, 240), (0, 33), (253, 213), (231, 194), (109, 205), (61, 128), (349, 186), (181, 193), (225, 236), (282, 361), (248, 219), (13, 93), (123, 224), (0, 10), (253, 190), (139, 168), (109, 182), (282, 253), (347, 239), (159, 39), (14, 29), (147, 64), (233, 253), (225, 249), (226, 214), (123, 201), (248, 232), (160, 348), (253, 167), (109, 159), (282, 230), (120, 168), (232, 229), (347, 216), (231, 184), (229, 340), (81, 96), (316, 228), (349, 176), (172, 214), (225, 226), (144, 152), (238, 165), (68, 13), (1, 72), (123, 214), (238, 201), (109, 316), (160, 361), (316, 349), (282, 207), (0, 229), (348, 152), (239, 245), (225, 347), (229, 317), (109, 172), (68, 134), (226, 348), (347, 229), (224, 238), (225, 203), (159, 29), (282, 328), (248, 186), (293, 337), (225, 239), (226, 204), (195, 216), (68, 111), (282, 220), (61, 72), (160, 194), (348, 165), (220, 245), (347, 206), (316, 218), (225, 216), (226, 181), (123, 168), (1, 62), (361, 225), (282, 197), (253, 170), (5, 68), (137, 224), (68, 124), (168, 211), (160, 207), (316, 195), (25, 19), (347, 219), (224, 228), (225, 193), (226, 158), (316, 231), (248, 176), (0, 111), (349, 228), (293, 327), (226, 194), (4, 81), (104, 168), (123, 181), (238, 168), (35, 68), (195, 206), (282, 174), (361, 238), (224, 349), (6, 10), (137, 201), (17, 56), (109, 139), (168, 188), (0, 232), (282, 210), (160, 184), (220, 235), (347, 196), (224, 205), (225, 170), (103, 64), (316, 208), (282, 295), (225, 206), (231, 249), (123, 158), (248, 189), (293, 340), (1, 52), (347, 317), (338, 348), (16, 68), (109, 116), (232, 186), (137, 214), (224, 182), (203, 159), (190, 189), (160, 197), (224, 218), (31, 52), (190, 225), (51, 30), (248, 166), (348, 253), (293, 317), (349, 218), (1, 29), (361, 192), (72, 89), (123, 171), (282, 164), (0, 186), (361, 228), (139, 115), (220, 189), (186, 196), (231, 347), (160, 174), (241, 248), (220, 225), (347, 186), (224, 195), (190, 202), (242, 249), (361, 349), (231, 239), (196, 218), (349, 231), (1, 42), (361, 205), (224, 316), (137, 168), (282, 177), (120, 115), (220, 202), (6, 13), (232, 176), (224, 172), (229, 287), (205, 195), (31, 42), (171, 202), (4, 25), (231, 216), (349, 208), (1, 19), (81, 128), (206, 159), (361, 182), (282, 154), (0, 176), (220, 179), (13, 115), (137, 181), (123, 246), (109, 348), (249, 242), (160, 164), (201, 202), (316, 152), (0, 32), (310, 337), (190, 192), (231, 193), (109, 204), (149, 11), (0, 68), (361, 159), (231, 229), (123, 138), (10, 81), (56, 48), (196, 208), (68, 22), (349, 221), (1, 32), (361, 195), (193, 202), (226, 236), (137, 158), (89, 81), (208, 218), (1, 117), (220, 192), (13, 128), (4, 159), (232, 166), (109, 361), (229, 277), (316, 165), (348, 197), (253, 225), (361, 316), (231, 206), (1, 9), (13, 249), (361, 172), (248, 231), (282, 144), (0, 166), (7, 25), (220, 169), (226, 249), (123, 236), (170, 168), (96, 139), (201, 192), (0, 22), (253, 202), (109, 194), (160, 239), (68, 12), (123, 213), (89, 71), (1, 107), (7, 38), (253, 179), (224, 152), (190, 159), (231, 160), (282, 242), (0, 35), (349, 152), (226, 347), (347, 228), (203, 214), (231, 196), (10, 48), (109, 207), (7, 159), (0, 120), (13, 239), (225, 238), (226, 203), (68, 25), (248, 221), (220, 159), (347, 349), (226, 239), (231, 317), (123, 226), (238, 213), (1, 120), (282, 219), (29, 39), (348, 164), (0, 12), (253, 192), (109, 184), (160, 229), (349, 165), (51, 62), (282, 340), (316, 253), (226, 216), (123, 203), (238, 190), (201, 159), (253, 169), (5, 67), (282, 232), (160, 206), (6, 68), (347, 218), (203, 204), (61, 120), (7, 149), (225, 228), (226, 193), (238, 167), (195, 205), (123, 216), (109, 138), (68, 100), (282, 209), (253, 182), (225, 349), (347, 195), (137, 236), (109, 174), (168, 223), (160, 219), (316, 207), (347, 231), (225, 205), (226, 170), (10, 51), (293, 339), (51, 317), (226, 206), (123, 193), (16, 67), (1, 87), (282, 186), (253, 159), (224, 361), (137, 213), (17, 68), (160, 196), (348, 167), (232, 221), (347, 208), (225, 182), (170, 246), (204, 159), (190, 224), (248, 165), (0, 100), (225, 218), (123, 170), (248, 201), (160, 317), (349, 253), (1, 64), (109, 128), (0, 221), (348, 144), (220, 224), (6, 35), (137, 226), (224, 194), (231, 153), (242, 248), (316, 197), (361, 348), (225, 195), (231, 238), (109, 249), (1, 41), (361, 204), (137, 347), (238, 170), (68, 67), (282, 176), (220, 201), (225, 316), (137, 203), (123, 39), (68, 103), (168, 190), (160, 186), (220, 237), (226, 317), (224, 207), (225, 172), (171, 201), (190, 214), (123, 160), (207, 159), (17, 35), (68, 80), (282, 189), (220, 214), (224, 184), (0, 67), (170, 249), (231, 228), (123, 137), (109, 239), (282, 310), (202, 201), (248, 168), (1, 31), (361, 194), (282, 166), (179, 190), (232, 165), (190, 348), (231, 349), (347, 152), (137, 193), (123, 29), (160, 176), (316, 164), (253, 224), (224, 197), (190, 204), (231, 205), (109, 216), (282, 287), (348, 232), (0, 80), (1, 8), (349, 197), (0, 165), (361, 207), (137, 170), (220, 204), (347, 165), (224, 174), (190, 181), (231, 218), (109, 229), (115, 123), (1, 21), (361, 184), (38, 25), (208, 207), (220, 181), (13, 117), (123, 248), (190, 158), (160, 166), (253, 214), (225, 152), (171, 181), (190, 194), (231, 195), (109, 206), (204, 214), (220, 158), (226, 238), (231, 316), (123, 225), (96, 128), (201, 181), (220, 194), (0, 11), (224, 164), (310, 316), (316, 167), (349, 164), (38, 159), (231, 208), (109, 219), (81, 120), (1, 11), (34, 45), (361, 174), (325, 337), (68, 37), (253, 348), (7, 27), (220, 171), (13, 107), (123, 238), (238, 225), (337, 347), (282, 231), (316, 144), (348, 176), (253, 204), (0, 24), (6, 67), (109, 196), (347, 253), (68, 14), (0, 145), (226, 228), (238, 202), (109, 317), (1, 109), (0, 1), (253, 181), (13, 120), (145, 239), (210, 219), (160, 218), (348, 189), (226, 349), (51, 231), (4, 7), (159, 30), (224, 239), (13, 241), (361, 164), (226, 205), (51, 87), (123, 192), (238, 179), (68, 27), (361, 249), (253, 158), (123, 228), (17, 67), (68, 112), (282, 221), (0, 14), (220, 246), (253, 194), (348, 166), (225, 361), (109, 186), (160, 231), (41, 51), (349, 167), (51, 64), (68, 4), (226, 218), (123, 205), (238, 192), (137, 225), (231, 152), (160, 208), (348, 179), (349, 144), (246, 168), (232, 233), (224, 229), (190, 236), (316, 232), (0, 112), (293, 328), (246, 253), (13, 51), (226, 195), (123, 182), (238, 169), (16, 56), (248, 213), (206, 216), (361, 239), (68, 102), (282, 211), (0, 233), (287, 326), (220, 236), (226, 316), (347, 197), (137, 238), (231, 165), (10, 17), (62, 64), (160, 221), (0, 89), (225, 207), (226, 172), (190, 249), (123, 159), (248, 190), (1, 53), (361, 216), (123, 195), (238, 182), (1, 89), (282, 188), (327, 339), (287, 303), (68, 115), (348, 169), (328, 340), (220, 249), (339, 349), (205, 206), (224, 219), (225, 184), (31, 53), (171, 213), (248, 167), (0, 102), (123, 172), (238, 159), (361, 229), (137, 192), (190, 347), (282, 201), (168, 179), (201, 213), (220, 226), (137, 228), (224, 196), (190, 203), (0, 79), (224, 232), (225, 197), (190, 239), (231, 240), (202, 213), (349, 232), (1, 43), (361, 206), (137, 349), (224, 317), (17, 24), (287, 293), (220, 203), (347, 164), (231, 361), (137, 205), (316, 176), (220, 239), (0, 56), (253, 236), (225, 174), (190, 216), (109, 228), (13, 31), (231, 253), (1, 56), (361, 219), (137, 182), (102, 224), (109, 120), (160, 165), (340, 361), (220, 216), (13, 152), (224, 186), (190, 193), (316, 189), (149, 12), (348, 221), (253, 249), (226, 152), (4, 39), (248, 170), (1, 33), (361, 196), (137, 159), (282, 168), (220, 193), (6, 4), (232, 167), (137, 195), (197, 209), (316, 166), (361, 317), (225, 164), (171, 193), (190, 206), (231, 207), (109, 218), (149, 25), (1, 10), (13, 21), (137, 316), (104, 139), (123, 152), (208, 196), (14, 65), (0, 167), (253, 347), (220, 170), (5, 16), (137, 172), (123, 237), (238, 224), (68, 72), (201, 193), (220, 206), (253, 203), (347, 167), (224, 176), (109, 195), (316, 179), (253, 239), (204, 203), (109, 231), (361, 186), (282, 158), (174, 216), (347, 144), (79, 64), (149, 159), (253, 216), (220, 39), (231, 197), (109, 208), (160, 253), (348, 224), (349, 189), (14, 55), (220, 160), (13, 96), (245, 253), (238, 214), (0, 13), (253, 193), (224, 166), (231, 174), (68, 147), (348, 201), (349, 166), (226, 361), (189, 64), (1, 13), (0, 134), (361, 176), (123, 204), (68, 39), (220, 173), (13, 109), (123, 240), (1, 134), (282, 233), (287, 348), (253, 206), (220, 29), (348, 214), (349, 179), (225, 229), (238, 348), (14, 45), (0, 147), (238, 204), (229, 235), (96, 120), (1, 111), (287, 325), (231, 164), (282, 246), (347, 232), (184, 205), (0, 124), (226, 207), (123, 194), (238, 181), (248, 225), (109, 152), (282, 223), (287, 338), (348, 168), (220, 248), (253, 196), (0, 16), (168, 237), (316, 221), (349, 169), (81, 89), (225, 219), (226, 184), (238, 158), (248, 202), (0, 137), (253, 317), (206, 205), (123, 207), (238, 194), (145, 231), (231, 154), (229, 310), (109, 165), (282, 236), (348, 181), (221, 226), (13, 197), (184, 195), (225, 196), (224, 231), (190, 238), (248, 179), (225, 232), (226, 197), (137, 348), (51, 79), (123, 184), (225, 317), (137, 204), (68, 104), (282, 213), (348, 158), (220, 238), (224, 208), (13, 210), (226, 174), (35, 48), (248, 192), (206, 195), (361, 218), (137, 361), (123, 197), (68, 81), (282, 190), (347, 176), (231, 144), (68, 117), (25, 12), (224, 221), (225, 186), (190, 228), (316, 224), (248, 169), (0, 104), (13, 43), (123, 174), (1, 68), (282, 167), (361, 231), (137, 194), (190, 349), (123, 30), (209, 219), (282, 203), (220, 228), (347, 189), (190, 205), (316, 201), (0, 81), (226, 164), (4, 51), (109, 253), (248, 182), (361, 208), (236, 64), (235, 248), (68, 71), (220, 205), (137, 207), (347, 166), (190, 182), (160, 190), (253, 238), (225, 176), (190, 218), (231, 219), (149, 37), (248, 159), (202, 192), (293, 310), (1, 22), (67, 4), (13, 33), (45, 65), (123, 164), (361, 221), (220, 182), (137, 184), (210, 168), (123, 249), (238, 236), (160, 167), (220, 218), (347, 179), (190, 195), (0, 71), (104, 128), (231, 232), (303, 337), (115, 137), (349, 224), (1, 35), (190, 316), (17, 16), (68, 61), (282, 170), (160, 144), (220, 195), (224, 165), (238, 249), (190, 172), (316, 168), (0, 48), (213, 192), (253, 228), (225, 166), (182, 204), (149, 27), (348, 236), (349, 201), (1, 12), (116, 115), (68, 38), (253, 349), (220, 172), (137, 174), (123, 239), (287, 347), (0, 25), (253, 205), (13, 144), (232, 182), (231, 186), (68, 159), (109, 197), (316, 181), (202, 159), (348, 213), (0, 61), (361, 152), (152, 158), (4, 31), (238, 347), (349, 214), (1, 25), (31, 133), (226, 229), (238, 203), (68, 51), (0, 182), (232, 159), (238, 239), (249, 248), (282, 245), (316, 158), (348, 190), (253, 218), (0, 38), (4, 8), (13, 242), (361, 165), (248, 224), (0, 159), (137, 164), (123, 229), (238, 216), (348, 347), (287, 337), (13, 134), (253, 195), (224, 168), (170, 197), (137, 249), (231, 176), (203, 194), (68, 149), (160, 232), (348, 203), (349, 168), (224, 253), (14, 34), (253, 316), (31, 123), (226, 219), (123, 206), (238, 193), (176, 218), (96, 109), (1, 100), (220, 175), (253, 172), (123, 242), (190, 152), (109, 164), (282, 235), (48, 68), (253, 208), (347, 221), (231, 189), (168, 249), (349, 181), (225, 231), (226, 196), (248, 214), (0, 149), (220, 152)]}]}
{'flac_decode_frame': [{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 167, 'instruction': 'movl\t%edx, %esi'}, {'instIndex': 168, 'instruction': 'shll\t$3, %esi'}, {'instIndex': 205, 'instruction': ''}, {'instIndex': 206, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 256, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 257, 'instruction': ''}, {'instIndex': 258, 'instruction': 'movl\t%esi, 0x568(%rsp)                # 4-byte Spill'}, {'instIndex': 268, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 269, 'instruction': 'movl\t0x56c(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 270, 'instruction': 'shrl\t$0xf0, %esi'}, {'instIndex': 281, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 282, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 283, 'instruction': 'movq\t0x590(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 442, 'instruction': 'movl\t%esi, 0x52c(%rsp)                # 4-byte Spill'}, {'instIndex': 449, 'instruction': 'movl\t%edx, 0x530(%rsp)                # 4-byte Spill'}, {'instIndex': 491, 'instruction': 'movl\t0x50c(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 569, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 637, 'instruction': 'sarl\t$3, %edi'}, {'instIndex': 638, 'instruction': 'movslq\t%edi, %rdi'}, {'instIndex': 698, 'instruction': 'movl\t%edx, %ecx'}, {'instIndex': 699, 'instruction': 'sarl\t$3, %ecx'}, {'instIndex': 718, 'instruction': 'movl\t(%rcx), %edx'}, {'instIndex': 719, 'instruction': 'movl\t%edx, %ecx'}, {'instIndex': 801, 'instruction': 'movq\t0x520(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 802, 'instruction': 'movl\t(%rcx), %edx'}, {'instIndex': 821, 'instruction': 'movq\t0x510(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 822, 'instruction': 'movq\t0x520(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 840, 'instruction': 'jmp\t.LBB4_65'}, {'instIndex': 841, 'instruction': 'movq\t0x510(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 980, 'instruction': 'jmp\t.LBB4_136'}, {'instIndex': 981, 'instruction': 'movq\t0x510(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 982, 'instruction': 'movl\t0x43c(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1088, 'instruction': 'movl\t(%rcx), %ecx'}, {'instIndex': 1093, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1094, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1095, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1103, 'instruction': 'movl\t0x410(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1104, 'instruction': 'movl\t0x3ec(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1105, 'instruction': 'movl\t0x3f4(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1120, 'instruction': 'movl\t0x3f4(%rsp), %r9d                # 4-byte Reload'}, {'instIndex': 1125, 'instruction': 'movl\t%r8d, (%rdx)'}, {'instIndex': 1126, 'instruction': 'movl\t%edi, %ecx'}, {'instIndex': 1184, 'instruction': 'movq\t%rsi, 0x3a8(%rsp)                 # 8-byte Spill'}, {'instIndex': 1189, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1190, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1191, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1199, 'instruction': 'movl\t%edx, 0x3bc(%rsp)                 # 4-byte Spill'}, {'instIndex': 1200, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1201, 'instruction': 'jge\t.LBB4_91'}, {'instIndex': 1216, 'instruction': 'movl\t0x3b0(%rsp), %edi                 # 4-byte Reload'}, {'instIndex': 1221, 'instruction': ''}, {'instIndex': 1222, 'instruction': 'movl\t%esi, %r8d'}, {'instIndex': 1294, 'instruction': 'movq\t0x510(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 1299, 'instruction': 'movl\t%eax, 0x360(%rsp)                 # 4-byte Spill'}, {'instIndex': 1300, 'instruction': 'movl\t(%rcx), %ecx'}, {'instIndex': 1301, 'instruction': 'movl\t%ecx, 0x364(%rsp)                 # 4-byte Spill'}, {'instIndex': 1309, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1310, 'instruction': 'movl\t%ecx, 0x368(%rsp)                 # 4-byte Spill'}, {'instIndex': 1311, 'instruction': 'shll\t%cl, %edx'}, {'instIndex': 1326, 'instruction': 'movl\t%eax, 0x354(%rsp)                 # 4-byte Spill'}, {'instIndex': 1331, 'instruction': 'movq\t0x440(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1332, 'instruction': 'movl\t0x36c(%rsp), %r9d                 # 4-byte Reload'}]}]}
The case of compiler clang with optimization O2.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O2/flacdec.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O2/flacdec.s---flac_decode_frame---before
function id: 4
function flag: True
There are 2532 instructions for function: flac_decode_frame in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '639', 'end': 649}, 'before': {'start': '639', 'end': 644}}}]
[{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 191, 'instruction': 'movl\t%edx, %esi'}, {'instIndex': 192, 'instruction': 'shll\t$3, %esi'}, {'instIndex': 237, 'instruction': ''}, {'instIndex': 238, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 280, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 281, 'instruction': ''}, {'instIndex': 291, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 292, 'instruction': 'movl\t0x79c(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 303, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 304, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 305, 'instruction': 'movq\t0x7f0(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 465, 'instruction': 'movq\t%rdx, 0x758(%rsp)                # 8-byte Spill'}, {'instIndex': 518, 'instruction': 'movq\t0x800(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 603, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 666, 'instruction': 'movq\t0x6d8(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 667, 'instruction': 'movq\t0x7e0(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 668, 'instruction': 'movl\t0x6cc(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 719, 'instruction': 'jmp\t.LBB4_142'}, {'instIndex': 720, 'instruction': 'movq\t0x800(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 736, 'instruction': 'movl\t%eax, 0x6c4(%rsp)                # 4-byte Spill'}, {'instIndex': 737, 'instruction': 'jmp\t.LBB4_52'}, {'instIndex': 826, 'instruction': 'jmp\t.LBB4_63'}, {'instIndex': 844, 'instruction': 'movl\t%eax, 0x6a4(%rsp)                # 4-byte Spill'}, {'instIndex': 861, 'instruction': 'movl\t%ecx, 0x6a0(%rsp)                # 4-byte Spill'}, {'instIndex': 1015, 'instruction': 'jmp\t.LBB4_142'}, {'instIndex': 1016, 'instruction': 'movq\t0x800(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 1017, 'instruction': 'movl\t0x624(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1135, 'instruction': 'movl\t0x5e8(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 1140, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1141, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1142, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1150, 'instruction': 'movl\t0x5e8(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1151, 'instruction': 'movl\t0x5e4(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1166, 'instruction': 'movq\t0x628(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1171, 'instruction': 'addl\t$0x10, %r8d'}, {'instIndex': 1172, 'instruction': 'movl\t%esi, %ecx'}, {'instIndex': 1228, 'instruction': 'movl\t0x5d4(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1233, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1234, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1235, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1243, 'instruction': 'movl\t%edx, 0x58c(%rsp)                # 4-byte Spill'}, {'instIndex': 1244, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1259, 'instruction': 'movq\t0x800(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 1264, 'instruction': 'shrl\t$0xf0, %r9d'}, {'instIndex': 1265, 'instruction': ''}, {'instIndex': 1343, 'instruction': 'movq\t%rax, 0x540(%rsp)                # 8-byte Spill'}, {'instIndex': 1348, 'instruction': 'movq\t%rsi, 0x518(%rsp)                # 8-byte Spill'}, {'instIndex': 1349, 'instruction': 'movl\t%eax, 0x520(%rsp)                # 4-byte Spill'}, {'instIndex': 1350, 'instruction': 'movl\t%ecx, 0x524(%rsp)                # 4-byte Spill'}, {'instIndex': 1358, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1359, 'instruction': 'movl\t%ecx, 0x528(%rsp)                # 4-byte Spill'}, {'instIndex': 1374, 'instruction': 'movl\t%edx, (%rcx)'}, {'instIndex': 1379, 'instruction': 'movl\t0x520(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1380, 'instruction': 'movq\t0x628(%rsp), %rax                # 8-byte Reload'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O2/flacdec.o
Unpatched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O2/flacdec.o---before
The extraction of function: flac_decode_frame
Analyzing the binaries to generate subCFGs from patched function ...
It has 413 nodes and 711 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 2505 instructions in binary file.
[4196568, 4196801, 4196889, 4197758, 4198049, 4198471, 4198731, 4198986, 4199069, 4199522, 4199602, 4199673, 4200425, 4201064, 4201119, 4201526, 4201581, 4202113, 4202168]
The execution time of patched subCFG information extraction via angr: 0:00:04.154163
{'flac_decode_frame': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401462>, <DisassemblerInsn "mov" for 0x401469>, <DisassemblerInsn "mov" for 0x401471>, <DisassemblerInsn "sar" for 0x401473>, <DisassemblerInsn "movsxd" for 0x401476>, <DisassemblerInsn "mov" for 0x401479>, <DisassemblerInsn "ror" for 0x40147c>, <DisassemblerInsn "ror" for 0x401480>, <DisassemblerInsn "ror" for 0x401483>, <DisassemblerInsn "and" for 0x401487>, <DisassemblerInsn "shl" for 0x40148a>, <DisassemblerInsn "mov" for 0x40148c>, <DisassemblerInsn "shr" for 0x401493>, <DisassemblerInsn "add" for 0x401496>, <DisassemblerInsn "imul" for 0x401499>, <DisassemblerInsn "mov" for 0x40149f>, <DisassemblerInsn "mov" for 0x4014a6>, <DisassemblerInsn "jmp" for 0x4014ad>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f44>, <DisassemblerInsn "mov" for 0x401f4c>, <DisassemblerInsn "mov" for 0x401f54>, <DisassemblerInsn "mov" for 0x401f5b>, <DisassemblerInsn "mov" for 0x401f62>, <DisassemblerInsn "sub" for 0x401f67>, <DisassemblerInsn "mov" for 0x401f69>, <DisassemblerInsn "shl" for 0x401f70>, <DisassemblerInsn "mov" for 0x401f72>, <DisassemblerInsn "sar" for 0x401f79>, <DisassemblerInsn "mov" for 0x401f7b>, <DisassemblerInsn "mov" for 0x401f83>, <DisassemblerInsn "add" for 0x401f86>, <DisassemblerInsn "mov" for 0x401f8a>, <DisassemblerInsn "cmp" for 0x401f92>, <DisassemblerInsn "je" for 0x401f95>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e1f>, <DisassemblerInsn "mov" for 0x400e27>, <DisassemblerInsn "add" for 0x400e2e>, <DisassemblerInsn "sub" for 0x400e31>, <DisassemblerInsn "setb" for 0x400e34>, <DisassemblerInsn "mov" for 0x400e37>, <DisassemblerInsn "mov" for 0x400e3a>, <DisassemblerInsn "sub" for 0x400e3c>, <DisassemblerInsn "sete" for 0x400e3f>, <DisassemblerInsn "and" for 0x400e42>, <DisassemblerInsn "test" for 0x400e44>, <DisassemblerInsn "mov" for 0x400e47>, <DisassemblerInsn "jne" for 0x400e4e>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f97>, <DisassemblerInsn "mov" for 0x401f9f>, <DisassemblerInsn "mov" for 0x401fa7>, <DisassemblerInsn "mov" for 0x401faf>, <DisassemblerInsn "mov" for 0x401fb1>, <DisassemblerInsn "mov" for 0x401fb3>, <DisassemblerInsn "mov" for 0x401fba>, <DisassemblerInsn "mov" for 0x401fc1>, <DisassemblerInsn "jmp" for 0x401fc9>]'}, {'block_Idx': 62, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010df>, <DisassemblerInsn "mov" for 0x4010e6>, <DisassemblerInsn "mov" for 0x4010ed>, <DisassemblerInsn "mov" for 0x4010f2>, <DisassemblerInsn "shr" for 0x4010f4>, <DisassemblerInsn "mov" for 0x4010f6>, <DisassemblerInsn "and" for 0x4010f8>, <DisassemblerInsn "mov" for 0x4010fa>, <DisassemblerInsn "mov" for 0x4010fc>, <DisassemblerInsn "mov" for 0x401101>, <DisassemblerInsn "mov" for 0x401109>, <DisassemblerInsn "mov" for 0x401111>, <DisassemblerInsn "mov" for 0x401118>, <DisassemblerInsn "mov" for 0x401120>, <DisassemblerInsn "mov" for 0x401128>, <DisassemblerInsn "mov" for 0x40112f>, <DisassemblerInsn "mov" for 0x401136>, <DisassemblerInsn "mov" for 0x40113e>, <DisassemblerInsn "cmp" for 0x401146>, <DisassemblerInsn "jle" for 0x401149>]'}, {'block_Idx': 191, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401eb8>, <DisassemblerInsn "mov" for 0x401ec0>, <DisassemblerInsn "mov" for 0x401ec7>, <DisassemblerInsn "mov" for 0x401ece>, <DisassemblerInsn "mov" for 0x401ed6>, <DisassemblerInsn "shr" for 0x401ede>, <DisassemblerInsn "mov" for 0x401ee2>, <DisassemblerInsn "add" for 0x401ee5>, <DisassemblerInsn "mov" for 0x401ee9>, <DisassemblerInsn "add" for 0x401eeb>, <DisassemblerInsn "mov" for 0x401eee>, <DisassemblerInsn "shl" for 0x401ef5>, <DisassemblerInsn "mov" for 0x401ef8>, <DisassemblerInsn "mov" for 0x401eff>, <DisassemblerInsn "sar" for 0x401f07>, <DisassemblerInsn "movsxd" for 0x401f0b>, <DisassemblerInsn "mov" for 0x401f0e>, <DisassemblerInsn "ror" for 0x401f12>, <DisassemblerInsn "ror" for 0x401f16>, <DisassemblerInsn "ror" for 0x401f19>, <DisassemblerInsn "shl" for 0x401f1d>, <DisassemblerInsn "mov" for 0x401f1f>, <DisassemblerInsn "mov" for 0x401f26>, <DisassemblerInsn "xor" for 0x401f29>, <DisassemblerInsn "sub" for 0x401f2b>, <DisassemblerInsn "shr" for 0x401f2e>, <DisassemblerInsn "mov" for 0x401f30>, <DisassemblerInsn "add" for 0x401f37>, <DisassemblerInsn "mov" for 0x401f39>, <DisassemblerInsn "or" for 0x401f3b>, <DisassemblerInsn "mov" for 0x401f3d>, <DisassemblerInsn "mov" for 0x401f44>, <DisassemblerInsn "mov" for 0x401f4c>, <DisassemblerInsn "mov" for 0x401f54>, <DisassemblerInsn "mov" for 0x401f5b>, <DisassemblerInsn "mov" for 0x401f62>, <DisassemblerInsn "sub" for 0x401f67>, <DisassemblerInsn "mov" for 0x401f69>, <DisassemblerInsn "shl" for 0x401f70>, <DisassemblerInsn "mov" for 0x401f72>, <DisassemblerInsn "sar" for 0x401f79>, <DisassemblerInsn "mov" for 0x401f7b>, <DisassemblerInsn "mov" for 0x401f83>, <DisassemblerInsn "add" for 0x401f86>, <DisassemblerInsn "mov" for 0x401f8a>, <DisassemblerInsn "cmp" for 0x401f92>, <DisassemblerInsn "je" for 0x401f95>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b81>, <DisassemblerInsn "cmp" for 0x400b88>, <DisassemblerInsn "je" for 0x400b8b>]'}, {'block_Idx': 166, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b2b>, <DisassemblerInsn "mov" for 0x401b33>, <DisassemblerInsn "mov" for 0x401b3a>, <DisassemblerInsn "mov" for 0x401b41>, <DisassemblerInsn "sub" for 0x401b46>, <DisassemblerInsn "mov" for 0x401b48>, <DisassemblerInsn "shl" for 0x401b4f>, <DisassemblerInsn "mov" for 0x401b51>, <DisassemblerInsn "sar" for 0x401b58>, <DisassemblerInsn "mov" for 0x401b5a>, <DisassemblerInsn "cmp" for 0x401b61>, <DisassemblerInsn "jle" for 0x401b64>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c6d>, <DisassemblerInsn "mov" for 0x401c75>, <DisassemblerInsn "mov" for 0x401c7c>, <DisassemblerInsn "mov" for 0x401c83>, <DisassemblerInsn "mov" for 0x401c8b>, <DisassemblerInsn "shr" for 0x401c93>, <DisassemblerInsn "mov" for 0x401c97>, <DisassemblerInsn "add" for 0x401c9a>, <DisassemblerInsn "mov" for 0x401c9e>, <DisassemblerInsn "add" for 0x401ca0>, <DisassemblerInsn "mov" for 0x401ca3>, <DisassemblerInsn "shl" for 0x401caa>, <DisassemblerInsn "mov" for 0x401cad>, <DisassemblerInsn "mov" for 0x401cb4>, <DisassemblerInsn "sar" for 0x401cbc>, <DisassemblerInsn "movsxd" for 0x401cc0>, <DisassemblerInsn "mov" for 0x401cc3>, <DisassemblerInsn "ror" for 0x401cc7>, <DisassemblerInsn "ror" for 0x401ccb>, <DisassemblerInsn "ror" for 0x401cce>, <DisassemblerInsn "shl" for 0x401cd2>, <DisassemblerInsn "mov" for 0x401cd4>, <DisassemblerInsn "mov" for 0x401cdb>, <DisassemblerInsn "xor" for 0x401cde>, <DisassemblerInsn "sub" for 0x401ce0>, <DisassemblerInsn "shr" for 0x401ce3>, <DisassemblerInsn "mov" for 0x401ce5>, <DisassemblerInsn "add" for 0x401cec>, <DisassemblerInsn "mov" for 0x401cee>, <DisassemblerInsn "or" for 0x401cf0>, <DisassemblerInsn "mov" for 0x401cf2>, <DisassemblerInsn "mov" for 0x401cf9>, <DisassemblerInsn "mov" for 0x401d01>, <DisassemblerInsn "mov" for 0x401d09>, <DisassemblerInsn "mov" for 0x401d10>, <DisassemblerInsn "mov" for 0x401d17>, <DisassemblerInsn "sub" for 0x401d1c>, <DisassemblerInsn "mov" for 0x401d1e>, <DisassemblerInsn "shl" for 0x401d25>, <DisassemblerInsn "mov" for 0x401d27>, <DisassemblerInsn "sar" for 0x401d2e>, <DisassemblerInsn "mov" for 0x401d30>, <DisassemblerInsn "mov" for 0x401d38>, <DisassemblerInsn "mov" for 0x401d3b>, <DisassemblerInsn "add" for 0x401d3e>, <DisassemblerInsn "mov" for 0x401d42>, <DisassemblerInsn "movsxd" for 0x401d4a>, <DisassemblerInsn "cmp" for 0x401d4d>, <DisassemblerInsn "jge" for 0x401d50>]'}, {'block_Idx': 204, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e1f>, <DisassemblerInsn "mov" for 0x401e27>, <DisassemblerInsn "mov" for 0x401e2e>, <DisassemblerInsn "mov" for 0x401e35>, <DisassemblerInsn "mov" for 0x401e3d>, <DisassemblerInsn "mov" for 0x401e45>, <DisassemblerInsn "mov" for 0x401e4c>, <DisassemblerInsn "mov" for 0x401e53>, <DisassemblerInsn "sar" for 0x401e55>, <DisassemblerInsn "movsxd" for 0x401e58>, <DisassemblerInsn "mov" for 0x401e5b>, <DisassemblerInsn "ror" for 0x401e5e>, <DisassemblerInsn "ror" for 0x401e62>, <DisassemblerInsn "ror" for 0x401e65>, <DisassemblerInsn "and" for 0x401e69>, <DisassemblerInsn "mov" for 0x401e6c>, <DisassemblerInsn "shl" for 0x401e73>, <DisassemblerInsn "mov" for 0x401e75>, <DisassemblerInsn "cmp" for 0x401e7c>, <DisassemblerInsn "jge" for 0x401e7f>]'}, {'block_Idx': 202, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d56>, <DisassemblerInsn "mov" for 0x401d5e>, <DisassemblerInsn "mov" for 0x401d66>, <DisassemblerInsn "mov" for 0x401d6e>, <DisassemblerInsn "mov" for 0x401d70>, <DisassemblerInsn "mov" for 0x401d72>, <DisassemblerInsn "mov" for 0x401d79>, <DisassemblerInsn "mov" for 0x401d80>, <DisassemblerInsn "jmp" for 0x401d88>]'}, {'block_Idx': 98, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014b2>, <DisassemblerInsn "mov" for 0x4014b9>, <DisassemblerInsn "mov" for 0x4014c1>, <DisassemblerInsn "sar" for 0x4014c3>, <DisassemblerInsn "movsxd" for 0x4014c6>, <DisassemblerInsn "mov" for 0x4014c9>, <DisassemblerInsn "ror" for 0x4014cc>, <DisassemblerInsn "ror" for 0x4014d0>, <DisassemblerInsn "ror" for 0x4014d3>, <DisassemblerInsn "and" for 0x4014d7>, <DisassemblerInsn "shl" for 0x4014da>, <DisassemblerInsn "mov" for 0x4014dc>, <DisassemblerInsn "shr" for 0x4014e3>, <DisassemblerInsn "add" for 0x4014e6>, <DisassemblerInsn "mov" for 0x4014e9>, <DisassemblerInsn "mov" for 0x4014f0>, <DisassemblerInsn "jmp" for 0x4014f7>]'}, {'block_Idx': 163, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a68>, <DisassemblerInsn "mov" for 0x401a6f>, <DisassemblerInsn "mov" for 0x401a76>, <DisassemblerInsn "mov" for 0x401a7d>, <DisassemblerInsn "xor" for 0x401a80>, <DisassemblerInsn "sub" for 0x401a82>, <DisassemblerInsn "shr" for 0x401a85>, <DisassemblerInsn "mov" for 0x401a87>, <DisassemblerInsn "add" for 0x401a8f>, <DisassemblerInsn "mov" for 0x401a91>, <DisassemblerInsn "mov" for 0x401a93>, <DisassemblerInsn "jmp" for 0x401a9a>]'}, {'block_Idx': 188, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401bd4>, <DisassemblerInsn "mov" for 0x401bdc>, <DisassemblerInsn "mov" for 0x401be3>, <DisassemblerInsn "mov" for 0x401bea>, <DisassemblerInsn "mov" for 0x401bf2>, <DisassemblerInsn "mov" for 0x401bfa>, <DisassemblerInsn "mov" for 0x401c01>, <DisassemblerInsn "mov" for 0x401c08>, <DisassemblerInsn "sar" for 0x401c0a>, <DisassemblerInsn "movsxd" for 0x401c0d>, <DisassemblerInsn "mov" for 0x401c10>, <DisassemblerInsn "ror" for 0x401c13>, <DisassemblerInsn "ror" for 0x401c17>, <DisassemblerInsn "ror" for 0x401c1a>, <DisassemblerInsn "and" for 0x401c1e>, <DisassemblerInsn "mov" for 0x401c21>, <DisassemblerInsn "shl" for 0x401c28>, <DisassemblerInsn "mov" for 0x401c2a>, <DisassemblerInsn "cmp" for 0x401c31>, <DisassemblerInsn "jge" for 0x401c34>]'}, {'block_Idx': 67, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40114b>, <DisassemblerInsn "mov" for 0x401153>, <DisassemblerInsn "mov" for 0x40115b>, <DisassemblerInsn "mov" for 0x401163>, <DisassemblerInsn "mov" for 0x40116b>, <DisassemblerInsn "add" for 0x401172>, <DisassemblerInsn "mov" for 0x401175>, <DisassemblerInsn "shr" for 0x401178>, <DisassemblerInsn "mov" for 0x40117c>, <DisassemblerInsn "ror" for 0x401180>, <DisassemblerInsn "ror" for 0x401184>, <DisassemblerInsn "ror" for 0x401187>, <DisassemblerInsn "shr" for 0x40118b>, <DisassemblerInsn "add" for 0x40118e>, <DisassemblerInsn "mov" for 0x401192>, <DisassemblerInsn "mov" for 0x401195>, <DisassemblerInsn "add" for 0x401198>, <DisassemblerInsn "shl" for 0x40119b>, <DisassemblerInsn "movsxd" for 0x40119f>, <DisassemblerInsn "add" for 0x4011a2>, <DisassemblerInsn "cmp" for 0x4011a5>, <DisassemblerInsn "mov" for 0x4011a8>, <DisassemblerInsn "mov" for 0x4011b0>, <DisassemblerInsn "mov" for 0x4011b8>, <DisassemblerInsn "jb" for 0x4011bf>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fce>, <DisassemblerInsn "mov" for 0x401fd5>, <DisassemblerInsn "mov" for 0x401fdd>, <DisassemblerInsn "mov" for 0x401fe5>, <DisassemblerInsn "call" for 0x401fe7>]'}, {'block_Idx': 50, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f53>, <DisassemblerInsn "mov" for 0x400f5b>, <DisassemblerInsn "mov" for 0x400f63>, <DisassemblerInsn "mov" for 0x400f6b>, <DisassemblerInsn "mov" for 0x400f73>, <DisassemblerInsn "mov" for 0x400f75>, <DisassemblerInsn "cmp" for 0x400f7c>, <DisassemblerInsn "setg" for 0x400f7f>, <DisassemblerInsn "mov" for 0x400f83>, <DisassemblerInsn "mov" for 0x400f8b>, <DisassemblerInsn "add" for 0x400f8e>, <DisassemblerInsn "mov" for 0x400f92>, <DisassemblerInsn "mov" for 0x400f9a>, <DisassemblerInsn "mov" for 0x400f9e>, <DisassemblerInsn "mov" for 0x400fa4>, <DisassemblerInsn "cmp" for 0x400faa>, <DisassemblerInsn "cmovg" for 0x400fad>, <DisassemblerInsn "mov" for 0x400fb1>, <DisassemblerInsn "mov" for 0x400fb7>, <DisassemblerInsn "cmp" for 0x400fbd>, <DisassemblerInsn "cmovg" for 0x400fc0>, <DisassemblerInsn "and" for 0x400fc4>, <DisassemblerInsn "movzx" for 0x400fc8>, <DisassemblerInsn "mov" for 0x400fcc>, <DisassemblerInsn "sub" for 0x400fd0>, <DisassemblerInsn "mov" for 0x400fd3>, <DisassemblerInsn "mov" for 0x400fd6>, <DisassemblerInsn "mov" for 0x400fde>, <DisassemblerInsn "add" for 0x400fe1>, <DisassemblerInsn "mov" for 0x400fe5>, <DisassemblerInsn "mov" for 0x400fed>, <DisassemblerInsn "mov" for 0x400ff1>, <DisassemblerInsn "add" for 0x400ff4>, <DisassemblerInsn "mov" for 0x400ff8>, <DisassemblerInsn "mov" for 0x401000>, <DisassemblerInsn "mov" for 0x401004>, <DisassemblerInsn "mov" for 0x40100a>, <DisassemblerInsn "add" for 0x40100d>, <DisassemblerInsn "mov" for 0x401011>, <DisassemblerInsn "mov" for 0x401019>, <DisassemblerInsn "mov" for 0x40101c>, <DisassemblerInsn "mov" for 0x40101e>, <DisassemblerInsn "and" for 0x401024>, <DisassemblerInsn "cmp" for 0x401026>, <DisassemblerInsn "je" for 0x401028>]'}, {'block_Idx': 46, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400efa>, <DisassemblerInsn "and" for 0x400f01>, <DisassemblerInsn "cmp" for 0x400f04>, <DisassemblerInsn "je" for 0x400f07>]'}, {'block_Idx': 61, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011e4>, <DisassemblerInsn "xor" for 0x4011ec>, <DisassemblerInsn "lea" for 0x4011ee>, <DisassemblerInsn "mov" for 0x4011f5>, <DisassemblerInsn "call" for 0x4011f7>]'}, {'block_Idx': 108, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014f9>, <DisassemblerInsn "mov" for 0x401500>, <DisassemblerInsn "mov" for 0x401508>, <DisassemblerInsn "sar" for 0x40150a>, <DisassemblerInsn "movsxd" for 0x40150d>, <DisassemblerInsn "mov" for 0x401510>, <DisassemblerInsn "ror" for 0x401513>, <DisassemblerInsn "ror" for 0x401517>, <DisassemblerInsn "ror" for 0x40151a>, <DisassemblerInsn "and" for 0x40151e>, <DisassemblerInsn "shl" for 0x401521>, <DisassemblerInsn "mov" for 0x401523>, <DisassemblerInsn "shr" for 0x40152a>, <DisassemblerInsn "add" for 0x40152d>, <DisassemblerInsn "imul" for 0x401530>, <DisassemblerInsn "mov" for 0x401533>, <DisassemblerInsn "mov" for 0x40153a>, <DisassemblerInsn "jmp" for 0x401541>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c63>, <DisassemblerInsn "and" for 0x400c6a>, <DisassemblerInsn "cmp" for 0x400c6f>, <DisassemblerInsn "je" for 0x400c74>]'}, {'block_Idx': 74, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40120e>, <DisassemblerInsn "sub" for 0x401215>, <DisassemblerInsn "je" for 0x401218>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ee4>, <DisassemblerInsn "add" for 0x400eec>, <DisassemblerInsn "mov" for 0x400ef0>, <DisassemblerInsn "jmp" for 0x400ef8>]'}, {'block_Idx': 168, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b6a>, <DisassemblerInsn "mov" for 0x401b72>, <DisassemblerInsn "mov" for 0x401b7a>, <DisassemblerInsn "mov" for 0x401b7f>, <DisassemblerInsn "xor" for 0x401b87>, <DisassemblerInsn "mov" for 0x401b89>, <DisassemblerInsn "mov" for 0x401b91>, <DisassemblerInsn "mov" for 0x401b99>, <DisassemblerInsn "mov" for 0x401ba1>, <DisassemblerInsn "mov" for 0x401ba9>, <DisassemblerInsn "mov" for 0x401bb0>, <DisassemblerInsn "add" for 0x401bb3>, <DisassemblerInsn "mov" for 0x401bb7>, <DisassemblerInsn "movsxd" for 0x401bbf>, <DisassemblerInsn "cmp" for 0x401bc2>, <DisassemblerInsn "mov" for 0x401bc5>, <DisassemblerInsn "jl" for 0x401bcd>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ea1>, <DisassemblerInsn "mov" for 0x400ea9>, <DisassemblerInsn "mov" for 0x400eb0>, <DisassemblerInsn "mov" for 0x400eb7>, <DisassemblerInsn "mov" for 0x400ebe>, <DisassemblerInsn "mov" for 0x400ec5>, <DisassemblerInsn "shl" for 0x400ecc>, <DisassemblerInsn "shr" for 0x400ecf>, <DisassemblerInsn "mov" for 0x400ed2>, <DisassemblerInsn "mov" for 0x400ed9>, <DisassemblerInsn "cmp" for 0x400edf>, <DisassemblerInsn "jne" for 0x400ee2>]'}, {'block_Idx': 115, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40173f>, <DisassemblerInsn "mov" for 0x401747>, <DisassemblerInsn "add" for 0x40174e>, <DisassemblerInsn "mov" for 0x401751>, <DisassemblerInsn "mov" for 0x401753>, <DisassemblerInsn "mov" for 0x40175a>, <DisassemblerInsn "mov" for 0x401762>, <DisassemblerInsn "mov" for 0x40176a>, <DisassemblerInsn "mov" for 0x401771>, <DisassemblerInsn "mov" for 0x401778>, <DisassemblerInsn "mov" for 0x40177a>, <DisassemblerInsn "mov" for 0x401781>, <DisassemblerInsn "mov" for 0x401784>, <DisassemblerInsn "mov" for 0x40178c>, <DisassemblerInsn "sar" for 0x40178e>, <DisassemblerInsn "movsxd" for 0x401791>, <DisassemblerInsn "mov" for 0x401794>, <DisassemblerInsn "mov" for 0x401798>, <DisassemblerInsn "and" for 0x40179a>, <DisassemblerInsn "movzx" for 0x40179d>, <DisassemblerInsn "mov" for 0x4017a1>, <DisassemblerInsn "add" for 0x4017a8>, <DisassemblerInsn "mov" for 0x4017ab>, <DisassemblerInsn "mov" for 0x4017b2>, <DisassemblerInsn "mov" for 0x4017b4>, <DisassemblerInsn "shr" for 0x4017b9>, <DisassemblerInsn "mov" for 0x4017bb>, <DisassemblerInsn "and" for 0x4017c2>, <DisassemblerInsn "cmp" for 0x4017c4>, <DisassemblerInsn "je" for 0x4017c7>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401047>, <DisassemblerInsn "mov" for 0x40104f>, <DisassemblerInsn "mov" for 0x401057>, <DisassemblerInsn "ror" for 0x40105a>, <DisassemblerInsn "ror" for 0x40105e>, <DisassemblerInsn "ror" for 0x401061>, <DisassemblerInsn "shr" for 0x401065>, <DisassemblerInsn "mov" for 0x401068>, <DisassemblerInsn "mov" for 0x40106f>, <DisassemblerInsn "mov" for 0x401075>, <DisassemblerInsn "xor" for 0x401077>, <DisassemblerInsn "shr" for 0x40107d>, <DisassemblerInsn "cmp" for 0x401080>, <DisassemblerInsn "cmovb" for 0x401086>, <DisassemblerInsn "mov" for 0x401089>, <DisassemblerInsn "xor" for 0x40108e>, <DisassemblerInsn "cmp" for 0x401090>, <DisassemblerInsn "cmovb" for 0x401096>, <DisassemblerInsn "mov" for 0x401099>, <DisassemblerInsn "and" for 0x40109b>, <DisassemblerInsn "mov" for 0x4010a1>, <DisassemblerInsn "shr" for 0x4010a3>, <DisassemblerInsn "mov" for 0x4010a6>, <DisassemblerInsn "or" for 0x4010a8>, <DisassemblerInsn "cmp" for 0x4010ab>, <DisassemblerInsn "cmove" for 0x4010ae>, <DisassemblerInsn "cmp" for 0x4010b1>, <DisassemblerInsn "cmove" for 0x4010b4>, <DisassemblerInsn "mov" for 0x4010b7>, <DisassemblerInsn "mov" for 0x4010b9>, <DisassemblerInsn "mov" for 0x4010bb>, <DisassemblerInsn "movzx" for 0x4010c2>, <DisassemblerInsn "add" for 0x4010c6>, <DisassemblerInsn "mov" for 0x4010c8>, <DisassemblerInsn "sub" for 0x4010cd>, <DisassemblerInsn "mov" for 0x4010cf>, <DisassemblerInsn "cmp" for 0x4010d6>, <DisassemblerInsn "je" for 0x4010d9>]'}, {'block_Idx': 77, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401319>, <DisassemblerInsn "mov" for 0x401321>, <DisassemblerInsn "mov" for 0x401328>, <DisassemblerInsn "mov" for 0x40132f>, <DisassemblerInsn "mov" for 0x401336>, <DisassemblerInsn "mov" for 0x40133d>, <DisassemblerInsn "mov" for 0x40133f>, <DisassemblerInsn "cmp" for 0x401346>, <DisassemblerInsn "jle" for 0x401348>]'}, {'block_Idx': 69, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401118>, <DisassemblerInsn "mov" for 0x401120>, <DisassemblerInsn "mov" for 0x401128>, <DisassemblerInsn "mov" for 0x40112f>, <DisassemblerInsn "mov" for 0x401136>, <DisassemblerInsn "mov" for 0x40113e>, <DisassemblerInsn "cmp" for 0x401146>, <DisassemblerInsn "jle" for 0x401149>]'}, {'block_Idx': 136, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401890>, <DisassemblerInsn "mov" for 0x401897>, <DisassemblerInsn "mov" for 0x40189e>, <DisassemblerInsn "mov" for 0x4018a6>, <DisassemblerInsn "mov" for 0x4018ae>, <DisassemblerInsn "mov" for 0x4018b5>, <DisassemblerInsn "sar" for 0x4018b7>, <DisassemblerInsn "mov" for 0x4018ba>, <DisassemblerInsn "movsxd" for 0x4018c1>, <DisassemblerInsn "mov" for 0x4018c4>, <DisassemblerInsn "mov" for 0x4018c8>, <DisassemblerInsn "and" for 0x4018ca>, <DisassemblerInsn "mov" for 0x4018cd>, <DisassemblerInsn "movzx" for 0x4018d4>, <DisassemblerInsn "add" for 0x4018d8>, <DisassemblerInsn "mov" for 0x4018db>, <DisassemblerInsn "mov" for 0x4018e2>, <DisassemblerInsn "mov" for 0x4018e4>, <DisassemblerInsn "shr" for 0x4018e9>, <DisassemblerInsn "mov" for 0x4018eb>, <DisassemblerInsn "mov" for 0x4018f2>, <DisassemblerInsn "and" for 0x4018f9>, <DisassemblerInsn "mov" for 0x4018fb>, <DisassemblerInsn "add" for 0x401902>, <DisassemblerInsn "mov" for 0x401905>, <DisassemblerInsn "cmp" for 0x40190c>, <DisassemblerInsn "mov" for 0x40190f>, <DisassemblerInsn "mov" for 0x401916>, <DisassemblerInsn "je" for 0x40191d>]'}, {'block_Idx': 75, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40124a>, <DisassemblerInsn "mov" for 0x401252>, <DisassemblerInsn "mov" for 0x401259>, <DisassemblerInsn "mov" for 0x401261>, <DisassemblerInsn "shr" for 0x401269>, <DisassemblerInsn "and" for 0x40126d>, <DisassemblerInsn "mov" for 0x401274>, <DisassemblerInsn "ror" for 0x401277>, <DisassemblerInsn "ror" for 0x40127b>, <DisassemblerInsn "ror" for 0x40127e>, <DisassemblerInsn "shr" for 0x401282>, <DisassemblerInsn "add" for 0x401285>, <DisassemblerInsn "mov" for 0x401288>, <DisassemblerInsn "add" for 0x40128a>, <DisassemblerInsn "mov" for 0x40128d>, <DisassemblerInsn "mov" for 0x401294>, <DisassemblerInsn "jmp" for 0x40129b>]'}, {'block_Idx': 167, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b34>, <DisassemblerInsn "cmp" for 0x402b3b>, <DisassemblerInsn "je" for 0x402b3e>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e52>, <DisassemblerInsn "add" for 0x400e59>, <DisassemblerInsn "mov" for 0x400e5c>, <DisassemblerInsn "mov" for 0x400e61>, <DisassemblerInsn "mov" for 0x400e68>, <DisassemblerInsn "jmp" for 0x400e6f>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b0a>, <DisassemblerInsn "mov" for 0x400b12>, <DisassemblerInsn "mov" for 0x400b1a>, <DisassemblerInsn "mov" for 0x400b22>, <DisassemblerInsn "mov" for 0x400b2a>, <DisassemblerInsn "mov" for 0x400b32>, <DisassemblerInsn "mov" for 0x400b3a>, <DisassemblerInsn "add" for 0x400b3d>, <DisassemblerInsn "sar" for 0x400b40>, <DisassemblerInsn "xor" for 0x400b43>, <DisassemblerInsn "cmp" for 0x400b46>, <DisassemblerInsn "cmovl" for 0x400b4a>, <DisassemblerInsn "xor" for 0x400b4e>, <DisassemblerInsn "cmp" for 0x400b51>, <DisassemblerInsn "mov" for 0x400b55>, <DisassemblerInsn "cmovl" for 0x400b58>, <DisassemblerInsn "xor" for 0x400b5c>, <DisassemblerInsn "cmp" for 0x400b5f>, <DisassemblerInsn "cmovl" for 0x400b63>, <DisassemblerInsn "mov" for 0x400b67>, <DisassemblerInsn "mov" for 0x400b6a>, <DisassemblerInsn "movsxd" for 0x400b6d>, <DisassemblerInsn "add" for 0x400b70>, <DisassemblerInsn "mov" for 0x400b73>, <DisassemblerInsn "mov" for 0x400b76>, <DisassemblerInsn "jmp" for 0x400b7c>]'}, {'block_Idx': 103, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40144d>, <DisassemblerInsn "sub" for 0x401454>, <DisassemblerInsn "je" for 0x401457>]'}, {'block_Idx': 78, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40121c>, <DisassemblerInsn "sub" for 0x401223>, <DisassemblerInsn "je" for 0x401226>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a9f>, <DisassemblerInsn "mov" for 0x401aa7>, <DisassemblerInsn "mov" for 0x401aae>, <DisassemblerInsn "mov" for 0x401ab5>, <DisassemblerInsn "mov" for 0x401abd>, <DisassemblerInsn "shr" for 0x401ac5>, <DisassemblerInsn "mov" for 0x401ac9>, <DisassemblerInsn "add" for 0x401acc>, <DisassemblerInsn "mov" for 0x401ad0>, <DisassemblerInsn "add" for 0x401ad2>, <DisassemblerInsn "mov" for 0x401ad5>, <DisassemblerInsn "shl" for 0x401adc>, <DisassemblerInsn "mov" for 0x401adf>, <DisassemblerInsn "mov" for 0x401ae6>, <DisassemblerInsn "sar" for 0x401aee>, <DisassemblerInsn "movsxd" for 0x401af2>, <DisassemblerInsn "mov" for 0x401af5>, <DisassemblerInsn "ror" for 0x401af9>, <DisassemblerInsn "ror" for 0x401afd>, <DisassemblerInsn "ror" for 0x401b00>, <DisassemblerInsn "shl" for 0x401b04>, <DisassemblerInsn "mov" for 0x401b06>, <DisassemblerInsn "mov" for 0x401b0d>, <DisassemblerInsn "xor" for 0x401b10>, <DisassemblerInsn "sub" for 0x401b12>, <DisassemblerInsn "shr" for 0x401b15>, <DisassemblerInsn "mov" for 0x401b17>, <DisassemblerInsn "add" for 0x401b1e>, <DisassemblerInsn "mov" for 0x401b20>, <DisassemblerInsn "or" for 0x401b22>, <DisassemblerInsn "mov" for 0x401b24>, <DisassemblerInsn "mov" for 0x401b2b>, <DisassemblerInsn "mov" for 0x401b33>, <DisassemblerInsn "mov" for 0x401b3a>, <DisassemblerInsn "mov" for 0x401b41>, <DisassemblerInsn "sub" for 0x401b46>, <DisassemblerInsn "mov" for 0x401b48>, <DisassemblerInsn "shl" for 0x401b4f>, <DisassemblerInsn "mov" for 0x401b51>, <DisassemblerInsn "sar" for 0x401b58>, <DisassemblerInsn "mov" for 0x401b5a>, <DisassemblerInsn "cmp" for 0x401b61>, <DisassemblerInsn "jle" for 0x401b64>]'}, {'block_Idx': 135, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401959>, <DisassemblerInsn "mov" for 0x401960>, <DisassemblerInsn "mov" for 0x401967>, <DisassemblerInsn "mov" for 0x40196e>, <DisassemblerInsn "mov" for 0x401975>, <DisassemblerInsn "mov" for 0x40197c>, <DisassemblerInsn "cmp" for 0x401983>, <DisassemblerInsn "jle" for 0x401986>]'}, {'block_Idx': 201, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401cf9>, <DisassemblerInsn "mov" for 0x401d01>, <DisassemblerInsn "mov" for 0x401d09>, <DisassemblerInsn "mov" for 0x401d10>, <DisassemblerInsn "mov" for 0x401d17>, <DisassemblerInsn "sub" for 0x401d1c>, <DisassemblerInsn "mov" for 0x401d1e>, <DisassemblerInsn "shl" for 0x401d25>, <DisassemblerInsn "mov" for 0x401d27>, <DisassemblerInsn "sar" for 0x401d2e>, <DisassemblerInsn "mov" for 0x401d30>, <DisassemblerInsn "mov" for 0x401d38>, <DisassemblerInsn "mov" for 0x401d3b>, <DisassemblerInsn "add" for 0x401d3e>, <DisassemblerInsn "mov" for 0x401d42>, <DisassemblerInsn "movsxd" for 0x401d4a>, <DisassemblerInsn "cmp" for 0x401d4d>, <DisassemblerInsn "jge" for 0x401d50>]'}, {'block_Idx': 128, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40175a>, <DisassemblerInsn "mov" for 0x401762>, <DisassemblerInsn "mov" for 0x40176a>, <DisassemblerInsn "mov" for 0x401771>, <DisassemblerInsn "mov" for 0x401778>, <DisassemblerInsn "mov" for 0x40177a>, <DisassemblerInsn "mov" for 0x401781>, <DisassemblerInsn "mov" for 0x401784>, <DisassemblerInsn "mov" for 0x40178c>, <DisassemblerInsn "sar" for 0x40178e>, <DisassemblerInsn "movsxd" for 0x401791>, <DisassemblerInsn "mov" for 0x401794>, <DisassemblerInsn "mov" for 0x401798>, <DisassemblerInsn "and" for 0x40179a>, <DisassemblerInsn "movzx" for 0x40179d>, <DisassemblerInsn "mov" for 0x4017a1>, <DisassemblerInsn "add" for 0x4017a8>, <DisassemblerInsn "mov" for 0x4017ab>, <DisassemblerInsn "mov" for 0x4017b2>, <DisassemblerInsn "mov" for 0x4017b4>, <DisassemblerInsn "shr" for 0x4017b9>, <DisassemblerInsn "mov" for 0x4017bb>, <DisassemblerInsn "and" for 0x4017c2>, <DisassemblerInsn "cmp" for 0x4017c4>, <DisassemblerInsn "je" for 0x4017c7>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c36>, <DisassemblerInsn "mov" for 0x401c3d>, <DisassemblerInsn "mov" for 0x401c44>, <DisassemblerInsn "mov" for 0x401c4b>, <DisassemblerInsn "xor" for 0x401c4e>, <DisassemblerInsn "sub" for 0x401c50>, <DisassemblerInsn "shr" for 0x401c53>, <DisassemblerInsn "mov" for 0x401c55>, <DisassemblerInsn "add" for 0x401c5d>, <DisassemblerInsn "mov" for 0x401c5f>, <DisassemblerInsn "mov" for 0x401c61>, <DisassemblerInsn "jmp" for 0x401c68>]'}, {'block_Idx': 88, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401567>, <DisassemblerInsn "mov" for 0x40156f>, <DisassemblerInsn "mov" for 0x401576>, <DisassemblerInsn "mov" for 0x40157d>, <DisassemblerInsn "add" for 0x401584>, <DisassemblerInsn "mov" for 0x401587>, <DisassemblerInsn "xor" for 0x401589>, <DisassemblerInsn "call" for 0x40158b>]'}, {'block_Idx': 183, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401de8>, <DisassemblerInsn "mov" for 0x401def>, <DisassemblerInsn "mov" for 0x401df6>, <DisassemblerInsn "mov" for 0x401dfd>, <DisassemblerInsn "mov" for 0x401dff>, <DisassemblerInsn "xor" for 0x401e07>, <DisassemblerInsn "mov" for 0x401e09>, <DisassemblerInsn "mov" for 0x401e10>, <DisassemblerInsn "mov" for 0x401e17>, <DisassemblerInsn "mov" for 0x401e1f>, <DisassemblerInsn "mov" for 0x401e27>, <DisassemblerInsn "mov" for 0x401e2e>, <DisassemblerInsn "mov" for 0x401e35>, <DisassemblerInsn "mov" for 0x401e3d>, <DisassemblerInsn "mov" for 0x401e45>, <DisassemblerInsn "mov" for 0x401e4c>, <DisassemblerInsn "mov" for 0x401e53>, <DisassemblerInsn "sar" for 0x401e55>, <DisassemblerInsn "movsxd" for 0x401e58>, <DisassemblerInsn "mov" for 0x401e5b>, <DisassemblerInsn "ror" for 0x401e5e>, <DisassemblerInsn "ror" for 0x401e62>, <DisassemblerInsn "ror" for 0x401e65>, <DisassemblerInsn "and" for 0x401e69>, <DisassemblerInsn "mov" for 0x401e6c>, <DisassemblerInsn "shl" for 0x401e73>, <DisassemblerInsn "mov" for 0x401e75>, <DisassemblerInsn "cmp" for 0x401e7c>, <DisassemblerInsn "jge" for 0x401e7f>]'}, {'block_Idx': 155, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a24>, <DisassemblerInsn "mov" for 0x401a2b>, <DisassemblerInsn "mov" for 0x401a32>, <DisassemblerInsn "mov" for 0x401a3a>, <DisassemblerInsn "sar" for 0x401a3c>, <DisassemblerInsn "movsxd" for 0x401a3f>, <DisassemblerInsn "mov" for 0x401a42>, <DisassemblerInsn "ror" for 0x401a45>, <DisassemblerInsn "ror" for 0x401a49>, <DisassemblerInsn "ror" for 0x401a4c>, <DisassemblerInsn "and" for 0x401a50>, <DisassemblerInsn "mov" for 0x401a53>, <DisassemblerInsn "shl" for 0x401a5a>, <DisassemblerInsn "mov" for 0x401a5c>, <DisassemblerInsn "cmp" for 0x401a63>, <DisassemblerInsn "jge" for 0x401a66>]'}, {'block_Idx': 28, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c3a>, <DisassemblerInsn "mov" for 0x400c42>, <DisassemblerInsn "mov" for 0x400c4a>, <DisassemblerInsn "mov" for 0x400c4c>, <DisassemblerInsn "mov" for 0x400c4f>, <DisassemblerInsn "mov" for 0x400c57>, <DisassemblerInsn "jmp" for 0x400c5e>]'}, {'block_Idx': 38, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400866>, <DisassemblerInsn "mov" for 0x40086e>, <DisassemblerInsn "mov" for 0x400876>, <DisassemblerInsn "mov" for 0x40087e>, <DisassemblerInsn "mov" for 0x400886>, <DisassemblerInsn "mov" for 0x40088d>, <DisassemblerInsn "mov" for 0x400894>, <DisassemblerInsn "add" for 0x400896>, <DisassemblerInsn "mov" for 0x400899>, <DisassemblerInsn "add" for 0x40089b>, <DisassemblerInsn "mov" for 0x40089d>, <DisassemblerInsn "cmp" for 0x40089f>, <DisassemblerInsn "setl" for 0x4008a1>, <DisassemblerInsn "cmp" for 0x4008a5>, <DisassemblerInsn "setne" for 0x4008a8>, <DisassemblerInsn "and" for 0x4008ac>, <DisassemblerInsn "test" for 0x4008af>, <DisassemblerInsn "mov" for 0x4008b3>, <DisassemblerInsn "mov" for 0x4008b5>, <DisassemblerInsn "mov" for 0x4008bc>, <DisassemblerInsn "mov" for 0x4008c3>, <DisassemblerInsn "mov" for 0x4008cb>, <DisassemblerInsn "jne" for 0x4008d2>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008d8>, <DisassemblerInsn "mov" for 0x4008e0>, <DisassemblerInsn "mov" for 0x4008e7>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f6>, <DisassemblerInsn "mov" for 0x4008fd>, <DisassemblerInsn "mov" for 0x400904>, <DisassemblerInsn "shl" for 0x400906>, <DisassemblerInsn "xor" for 0x400909>, <DisassemblerInsn "cmp" for 0x40090b>, <DisassemblerInsn "cmovl" for 0x40090e>, <DisassemblerInsn "mov" for 0x400912>, <DisassemblerInsn "xor" for 0x40091a>, <DisassemblerInsn "cmp" for 0x40091c>, <DisassemblerInsn "cmovl" for 0x40091f>, <DisassemblerInsn "xor" for 0x400922>, <DisassemblerInsn "cmp" for 0x400924>, <DisassemblerInsn "cmovl" for 0x400927>, <DisassemblerInsn "mov" for 0x40092a>, <DisassemblerInsn "add" for 0x40092d>, <DisassemblerInsn "mov" for 0x400931>, <DisassemblerInsn "mov" for 0x400939>, <DisassemblerInsn "mov" for 0x40093d>, <DisassemblerInsn "add" for 0x400940>, <DisassemblerInsn "mov" for 0x400944>, <DisassemblerInsn "mov" for 0x40094c>, <DisassemblerInsn "mov" for 0x40094f>, <DisassemblerInsn "mov" for 0x400951>, <DisassemblerInsn "mov" for 0x400953>, <DisassemblerInsn "add" for 0x400956>, <DisassemblerInsn "mov" for 0x400959>, <DisassemblerInsn "add" for 0x40095c>, <DisassemblerInsn "mov" for 0x400960>, <DisassemblerInsn "mov" for 0x400968>, <DisassemblerInsn "mov" for 0x40096c>, <DisassemblerInsn "add" for 0x40096f>, <DisassemblerInsn "mov" for 0x400973>, <DisassemblerInsn "mov" for 0x40097b>, <DisassemblerInsn "mov" for 0x400982>, <DisassemblerInsn "ror" for 0x400984>, <DisassemblerInsn "ror" for 0x400988>, <DisassemblerInsn "ror" for 0x40098b>, <DisassemblerInsn "shr" for 0x40098f>, <DisassemblerInsn "mov" for 0x400992>, <DisassemblerInsn "shl" for 0x400999>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "ror" for 0x40099f>, <DisassemblerInsn "ror" for 0x4009a3>, <DisassemblerInsn "ror" for 0x4009a6>, <DisassemblerInsn "mov" for 0x4009aa>, <DisassemblerInsn "shr" for 0x4009b1>, <DisassemblerInsn "or" for 0x4009b4>, <DisassemblerInsn "cmp" for 0x4009b6>, <DisassemblerInsn "jne" for 0x4009bb>]'}, {'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d7e>, <DisassemblerInsn "mov" for 0x400d86>, <DisassemblerInsn "mov" for 0x400d8e>, <DisassemblerInsn "mov" for 0x400d95>, <DisassemblerInsn "shr" for 0x400d97>, <DisassemblerInsn "mov" for 0x400d9a>, <DisassemblerInsn "shl" for 0x400da1>, <DisassemblerInsn "shr" for 0x400da4>, <DisassemblerInsn "mov" for 0x400da7>, <DisassemblerInsn "mov" for 0x400dae>, <DisassemblerInsn "add" for 0x400db1>, <DisassemblerInsn "mov" for 0x400db5>, <DisassemblerInsn "mov" for 0x400dbd>, <DisassemblerInsn "ror" for 0x400dc0>, <DisassemblerInsn "ror" for 0x400dc4>, <DisassemblerInsn "ror" for 0x400dc7>, <DisassemblerInsn "mov" for 0x400dcb>, <DisassemblerInsn "shr" for 0x400dd2>, <DisassemblerInsn "mov" for 0x400dd5>, <DisassemblerInsn "mov" for 0x400ddc>, <DisassemblerInsn "cmp" for 0x400de2>, <DisassemblerInsn "jge" for 0x400de5>]'}, {'block_Idx': 40, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a19>, <DisassemblerInsn "mov" for 0x400a21>, <DisassemblerInsn "mov" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a30>, <DisassemblerInsn "mov" for 0x400a38>, <DisassemblerInsn "sar" for 0x400a3a>, <DisassemblerInsn "movsxd" for 0x400a3d>, <DisassemblerInsn "mov" for 0x400a40>, <DisassemblerInsn "mov" for 0x400a43>, <DisassemblerInsn "and" for 0x400a45>, <DisassemblerInsn "mov" for 0x400a48>, <DisassemblerInsn "movzx" for 0x400a4f>, <DisassemblerInsn "mov" for 0x400a52>, <DisassemblerInsn "mov" for 0x400a59>, <DisassemblerInsn "add" for 0x400a5b>, <DisassemblerInsn "mov" for 0x400a5e>, <DisassemblerInsn "sar" for 0x400a60>, <DisassemblerInsn "movsxd" for 0x400a63>, <DisassemblerInsn "mov" for 0x400a66>, <DisassemblerInsn "ror" for 0x400a69>, <DisassemblerInsn "ror" for 0x400a6d>, <DisassemblerInsn "ror" for 0x400a70>, <DisassemblerInsn "and" for 0x400a74>, <DisassemblerInsn "shl" for 0x400a77>, <DisassemblerInsn "mov" for 0x400a79>, <DisassemblerInsn "shr" for 0x400a80>, <DisassemblerInsn "mov" for 0x400a83>, <DisassemblerInsn "mov" for 0x400a8a>, <DisassemblerInsn "add" for 0x400a8c>, <DisassemblerInsn "sar" for 0x400a8f>, <DisassemblerInsn "movsxd" for 0x400a92>, <DisassemblerInsn "mov" for 0x400a95>, <DisassemblerInsn "ror" for 0x400a98>, <DisassemblerInsn "ror" for 0x400a9c>, <DisassemblerInsn "ror" for 0x400a9f>, <DisassemblerInsn "shl" for 0x400aa3>, <DisassemblerInsn "mov" for 0x400aa5>, <DisassemblerInsn "shr" for 0x400aac>, <DisassemblerInsn "mov" for 0x400aaf>, <DisassemblerInsn "add" for 0x400ab2>, <DisassemblerInsn "shl" for 0x400ab6>, <DisassemblerInsn "sar" for 0x400ab9>, <DisassemblerInsn "movsxd" for 0x400abd>, <DisassemblerInsn "mov" for 0x400ac0>, <DisassemblerInsn "ror" for 0x400ac4>, <DisassemblerInsn "ror" for 0x400ac8>, <DisassemblerInsn "ror" for 0x400acb>, <DisassemblerInsn "shl" for 0x400acf>, <DisassemblerInsn "mov" for 0x400ad1>, <DisassemblerInsn "shr" for 0x400ad9>, <DisassemblerInsn "add" for 0x400adc>, <DisassemblerInsn "mov" for 0x400adf>, <DisassemblerInsn "mov" for 0x400ae6>, <DisassemblerInsn "or" for 0x400ae8>, <DisassemblerInsn "mov" for 0x400aea>, <DisassemblerInsn "shl" for 0x400af1>, <DisassemblerInsn "mov" for 0x400af4>, <DisassemblerInsn "add" for 0x400afb>, <DisassemblerInsn "mov" for 0x400afd>, <DisassemblerInsn "mov" for 0x400aff>, <DisassemblerInsn "cmp" for 0x400b06>, <DisassemblerInsn "jle" for 0x400b08>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009c1>, <DisassemblerInsn "mov" for 0x4009c9>, <DisassemblerInsn "mov" for 0x4009d1>, <DisassemblerInsn "mov" for 0x4009d9>, <DisassemblerInsn "mov" for 0x4009df>, <DisassemblerInsn "add" for 0x4009e2>, <DisassemblerInsn "mov" for 0x4009e6>, <DisassemblerInsn "mov" for 0x4009ee>, <DisassemblerInsn "add" for 0x4009f1>, <DisassemblerInsn "mov" for 0x4009f5>, <DisassemblerInsn "mov" for 0x4009fd>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "mov" for 0x400a0a>, <DisassemblerInsn "mov" for 0x400a12>, <DisassemblerInsn "mov" for 0x400a19>, <DisassemblerInsn "mov" for 0x400a21>, <DisassemblerInsn "mov" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a30>, <DisassemblerInsn "mov" for 0x400a38>, <DisassemblerInsn "sar" for 0x400a3a>, <DisassemblerInsn "movsxd" for 0x400a3d>, <DisassemblerInsn "mov" for 0x400a40>, <DisassemblerInsn "mov" for 0x400a43>, <DisassemblerInsn "and" for 0x400a45>, <DisassemblerInsn "mov" for 0x400a48>, <DisassemblerInsn "movzx" for 0x400a4f>, <DisassemblerInsn "mov" for 0x400a52>, <DisassemblerInsn "mov" for 0x400a59>, <DisassemblerInsn "add" for 0x400a5b>, <DisassemblerInsn "mov" for 0x400a5e>, <DisassemblerInsn "sar" for 0x400a60>, <DisassemblerInsn "movsxd" for 0x400a63>, <DisassemblerInsn "mov" for 0x400a66>, <DisassemblerInsn "ror" for 0x400a69>, <DisassemblerInsn "ror" for 0x400a6d>, <DisassemblerInsn "ror" for 0x400a70>, <DisassemblerInsn "and" for 0x400a74>, <DisassemblerInsn "shl" for 0x400a77>, <DisassemblerInsn "mov" for 0x400a79>, <DisassemblerInsn "shr" for 0x400a80>, <DisassemblerInsn "mov" for 0x400a83>, <DisassemblerInsn "mov" for 0x400a8a>, <DisassemblerInsn "add" for 0x400a8c>, <DisassemblerInsn "sar" for 0x400a8f>, <DisassemblerInsn "movsxd" for 0x400a92>, <DisassemblerInsn "mov" for 0x400a95>, <DisassemblerInsn "ror" for 0x400a98>, <DisassemblerInsn "ror" for 0x400a9c>, <DisassemblerInsn "ror" for 0x400a9f>, <DisassemblerInsn "shl" for 0x400aa3>, <DisassemblerInsn "mov" for 0x400aa5>, <DisassemblerInsn "shr" for 0x400aac>, <DisassemblerInsn "mov" for 0x400aaf>, <DisassemblerInsn "add" for 0x400ab2>, <DisassemblerInsn "shl" for 0x400ab6>, <DisassemblerInsn "sar" for 0x400ab9>, <DisassemblerInsn "movsxd" for 0x400abd>, <DisassemblerInsn "mov" for 0x400ac0>, <DisassemblerInsn "ror" for 0x400ac4>, <DisassemblerInsn "ror" for 0x400ac8>, <DisassemblerInsn "ror" for 0x400acb>, <DisassemblerInsn "shl" for 0x400acf>, <DisassemblerInsn "mov" for 0x400ad1>, <DisassemblerInsn "shr" for 0x400ad9>, <DisassemblerInsn "add" for 0x400adc>, <DisassemblerInsn "mov" for 0x400adf>, <DisassemblerInsn "mov" for 0x400ae6>, <DisassemblerInsn "or" for 0x400ae8>, <DisassemblerInsn "mov" for 0x400aea>, <DisassemblerInsn "shl" for 0x400af1>, <DisassemblerInsn "mov" for 0x400af4>, <DisassemblerInsn "add" for 0x400afb>, <DisassemblerInsn "mov" for 0x400afd>, <DisassemblerInsn "mov" for 0x400aff>, <DisassemblerInsn "cmp" for 0x400b06>, <DisassemblerInsn "jle" for 0x400b08>]'}, {'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e81>, <DisassemblerInsn "mov" for 0x401e88>, <DisassemblerInsn "mov" for 0x401e8f>, <DisassemblerInsn "mov" for 0x401e96>, <DisassemblerInsn "xor" for 0x401e99>, <DisassemblerInsn "sub" for 0x401e9b>, <DisassemblerInsn "shr" for 0x401e9e>, <DisassemblerInsn "mov" for 0x401ea0>, <DisassemblerInsn "add" for 0x401ea8>, <DisassemblerInsn "mov" for 0x401eaa>, <DisassemblerInsn "mov" for 0x401eac>, <DisassemblerInsn "jmp" for 0x401eb3>]'}, {'block_Idx': 126, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017e9>, <DisassemblerInsn "mov" for 0x4017f1>, <DisassemblerInsn "mov" for 0x4017f8>, <DisassemblerInsn "mov" for 0x401800>, <DisassemblerInsn "mov" for 0x401807>, <DisassemblerInsn "sar" for 0x401809>, <DisassemblerInsn "movsxd" for 0x40180c>, <DisassemblerInsn "mov" for 0x40180f>, <DisassemblerInsn "ror" for 0x401812>, <DisassemblerInsn "ror" for 0x401816>, <DisassemblerInsn "ror" for 0x401819>, <DisassemblerInsn "and" for 0x40181d>, <DisassemblerInsn "shl" for 0x401820>, <DisassemblerInsn "mov" for 0x401822>, <DisassemblerInsn "shr" for 0x401824>, <DisassemblerInsn "mov" for 0x401827>, <DisassemblerInsn "mov" for 0x40182e>, <DisassemblerInsn "add" for 0x401830>, <DisassemblerInsn "mov" for 0x401833>, <DisassemblerInsn "mov" for 0x401835>, <DisassemblerInsn "sar" for 0x401837>, <DisassemblerInsn "movsxd" for 0x40183a>, <DisassemblerInsn "mov" for 0x40183d>, <DisassemblerInsn "and" for 0x401840>, <DisassemblerInsn "movzx" for 0x401843>, <DisassemblerInsn "add" for 0x401846>, <DisassemblerInsn "mov" for 0x401849>, <DisassemblerInsn "mov" for 0x40184b>, <DisassemblerInsn "shr" for 0x401850>, <DisassemblerInsn "mov" for 0x401852>, <DisassemblerInsn "and" for 0x401859>, <DisassemblerInsn "xor" for 0x40185b>, <DisassemblerInsn "mov" for 0x40185d>, <DisassemblerInsn "cmp" for 0x401862>, <DisassemblerInsn "mov" for 0x401865>, <DisassemblerInsn "mov" for 0x401867>, <DisassemblerInsn "mov" for 0x40186e>, <DisassemblerInsn "mov" for 0x401875>, <DisassemblerInsn "mov" for 0x40187c>, <DisassemblerInsn "mov" for 0x401883>, <DisassemblerInsn "je" for 0x40188a>]'}, {'block_Idx': 81, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40129d>, <DisassemblerInsn "mov" for 0x4012a5>, <DisassemblerInsn "mov" for 0x4012ac>, <DisassemblerInsn "mov" for 0x4012b4>, <DisassemblerInsn "shr" for 0x4012bc>, <DisassemblerInsn "and" for 0x4012c0>, <DisassemblerInsn "mov" for 0x4012c7>, <DisassemblerInsn "ror" for 0x4012ca>, <DisassemblerInsn "ror" for 0x4012ce>, <DisassemblerInsn "ror" for 0x4012d1>, <DisassemblerInsn "shr" for 0x4012d5>, <DisassemblerInsn "add" for 0x4012d8>, <DisassemblerInsn "mov" for 0x4012db>, <DisassemblerInsn "add" for 0x4012dd>, <DisassemblerInsn "mov" for 0x4012e0>, <DisassemblerInsn "mov" for 0x4012e7>, <DisassemblerInsn "jmp" for 0x4012ee>]'}, {'block_Idx': 95, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40143f>, <DisassemblerInsn "sub" for 0x401446>, <DisassemblerInsn "je" for 0x401449>]'}, {'block_Idx': 70, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4011c5>]'}, {'block_Idx': 3, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40058a>, <DisassemblerInsn "mov" for 0x400592>, <DisassemblerInsn "mov" for 0x40059a>, <DisassemblerInsn "mov" for 0x4005a1>, <DisassemblerInsn "mov" for 0x4005a4>, <DisassemblerInsn "mov" for 0x4005ac>, <DisassemblerInsn "mov" for 0x4005b3>, <DisassemblerInsn "xor" for 0x4005b5>, <DisassemblerInsn "cmp" for 0x4005b7>, <DisassemblerInsn "mov" for 0x4005ba>, <DisassemblerInsn "mov" for 0x4005c1>, <DisassemblerInsn "mov" for 0x4005c8>, <DisassemblerInsn "mov" for 0x4005cf>, <DisassemblerInsn "je" for 0x4005d7>]'}, {'block_Idx': 90, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401431>, <DisassemblerInsn "sub" for 0x401438>, <DisassemblerInsn "je" for 0x40143b>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400de7>, <DisassemblerInsn "mov" for 0x400dee>, <DisassemblerInsn "mov" for 0x400df6>, <DisassemblerInsn "add" for 0x400df9>, <DisassemblerInsn "xor" for 0x400dfc>, <DisassemblerInsn "cmp" for 0x400dfe>, <DisassemblerInsn "mov" for 0x400e00>, <DisassemblerInsn "mov" for 0x400e02>, <DisassemblerInsn "mov" for 0x400e09>, <DisassemblerInsn "mov" for 0x400e10>, <DisassemblerInsn "je" for 0x400e17>]'}], 'cfg_block_detailed_info': [{'block_Idx': 92, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~rax, qword ptr [rsp + 0x7e0]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401567>']}, {'block_Idx': 197, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~rdx, qword ptr [rsp + 0x550]>', '<mov~~edi, dword ptr [rsp + 0x520]>', '<mov~~esi, dword ptr [rsp + 0x514]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x4fc], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x4fc]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x530]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x500], rax>', '<cmp~~rax, rcx>', '<je~~0x401fce>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~ecx, dword ptr [rsp + 0x764]>', '<add~~ecx, -8>', '<sub~~ecx, 3>', '<setb~~cl>', '<mov~~eax, dword ptr [rax + 0xc]>', '<mov~~edx, eax>', '<sub~~edx, 2>', '<sete~~dl>', '<and~~cl, dl>', '<test~~cl, 1>', '<mov~~dword ptr [rsp + 0x744], eax>', '<jne~~0x400e52>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x500]>', '<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x538], edx>', '<mov~~dword ptr [rsp + 0x53c], ecx>', '<mov~~qword ptr [rsp + 0x540], rax>', '<jmp~~0x401e1f>']}, {'block_Idx': 62, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6fc]>', '<mov~~edx, dword ptr [rsp + 0x6f8]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~edx, 0x28>', '<mov~~qword ptr [rsp + 0x6e0], rdx>', '<mov~~qword ptr [rsp + 0x6e8], rcx>', '<mov~~dword ptr [rsp + 0x6f4], eax>', '<mov~~rcx, qword ptr [rsp + 0x6e0]>', '<mov~~rdx, qword ptr [rsp + 0x6e8]>', '<mov~~eax, dword ptr [rsp + 0x6f4]>', '<mov~~dword ptr [rsp + 0x6cc], eax>', '<mov~~qword ptr [rsp + 0x6d0], rdx>', '<mov~~qword ptr [rsp + 0x6d8], rcx>', '<cmp~~eax, 1>', '<jle~~0x4011c7>']}, {'block_Idx': 191, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~edi, dword ptr [rsp + 0x524]>', '<mov~~esi, dword ptr [rsp + 0x520]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~r9d, dword ptr [rsp + 0x52c]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x50c], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x528]>', '<mov~~dword ptr [rsp + 0x510], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x50c]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x510]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x514], eax>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~rdx, qword ptr [rsp + 0x550]>', '<mov~~edi, dword ptr [rsp + 0x520]>', '<mov~~esi, dword ptr [rsp + 0x514]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x4fc], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x4fc]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x530]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x500], rax>', '<cmp~~rax, rcx>', '<je~~0x401fce>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7a4]>', '<cmp~~eax, 0>', '<je~~0x400c1a>']}, {'block_Idx': 166, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~esi, dword ptr [rsp + 0x5e4]>', '<mov~~edx, dword ptr [rsp + 0x5bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x5ac], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x5ac]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x5b0], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402b34>']}, {'block_Idx': 195, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~edi, dword ptr [rsp + 0x584]>', '<mov~~esi, dword ptr [rsp + 0x580]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~r9d, dword ptr [rsp + 0x58c]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x56c], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x588]>', '<mov~~dword ptr [rsp + 0x570], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x56c]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x570]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x574], eax>', '<mov~~rax, qword ptr [rsp + 0x578]>', '<mov~~rdx, qword ptr [rsp + 0x5c8]>', '<mov~~edi, dword ptr [rsp + 0x580]>', '<mov~~esi, dword ptr [rsp + 0x574]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x55c], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x55c]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x560], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402b34>']}, {'block_Idx': 204, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x538]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~rsi, qword ptr [rsp + 0x540]>', '<mov~~qword ptr [rsp + 0x518], rsi>', '<mov~~dword ptr [rsp + 0x520], eax>', '<mov~~dword ptr [rsp + 0x524], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x528], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x52c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401eb8>']}, {'block_Idx': 202, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x560]>', '<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x5d0], edx>', '<mov~~dword ptr [rsp + 0x5d4], ecx>', '<mov~~qword ptr [rsp + 0x5d8], rax>', '<jmp~~0x401bd4>']}, {'block_Idx': 98, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~rax, qword ptr [rsp + 0x7e0]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401567>']}, {'block_Idx': 163, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x5e8]>', '<mov~~edx, dword ptr [rsp + 0x5e4]>', '<mov~~eax, dword ptr [rsp + 0x5c4]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x800]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x5bc], eax>', '<jmp~~0x401b2b>']}, {'block_Idx': 188, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x5d0]>', '<mov~~eax, dword ptr [rsp + 0x5d4]>', '<mov~~rsi, qword ptr [rsp + 0x5d8]>', '<mov~~qword ptr [rsp + 0x578], rsi>', '<mov~~dword ptr [rsp + 0x580], eax>', '<mov~~dword ptr [rsp + 0x584], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x588], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x58c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401c6d>']}, {'block_Idx': 67, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d0]>', '<mov~~rdi, qword ptr [rsp + 0x800]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rsi, qword ptr [rsp + 0x7e0]>', '<mov~~eax, dword ptr [rsp + 0x6cc]>', '<add~~eax, -1>', '<mov~~r8, rdx>', '<shr~~r8, 3>', '<mov~~esi, dword ptr [rsi + r8]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xf8>', '<add~~rdx, 8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rdi], r8d>', '<add~~esi, -0x80>', '<shl~~rcx, 6>', '<movsxd~~rdi, esi>', '<add~~rcx, rdi>', '<cmp~~esi, 0x40>', '<mov~~qword ptr [rsp + 0x6e0], rdx>', '<mov~~qword ptr [rsp + 0x6e8], rcx>', '<mov~~dword ptr [rsp + 0x6f4], eax>', '<jb~~0x401118>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x548]>', '<mov~~rdi, qword ptr [rsp + 0x890]>', '<mov~~rax, qword ptr [rsp + 0x640]>', '<mov~~esi, eax>', '<call~~0x4048c0>']}, {'block_Idx': 50, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x800]>', '<mov~~rax, qword ptr [rsp + 0x758]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rsi, qword ptr [rsp + 0x730]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x700], esi>', '<cmp~~esi, 0x10>', '<setg~~r8b>', '<mov~~byte ptr [rsp + 0x707], r8b>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x708], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r9d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r9d>', '<mov~~r9d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r9d, r11d>', '<and~~r8b, 1>', '<movzx~~r8d, r8b>', '<mov~~dword ptr [rdi + 0x58], r10d>', '<sub~~r9d, esi>', '<mov~~r10, rdi>', '<mov~~qword ptr [rsp + 0x710], r10>', '<mov~~r10, rdx>', '<add~~r10, 0x48>', '<mov~~qword ptr [rsp + 0x718], r10>', '<mov~~dword ptr [rdx + 0x48], r9d>', '<mov~~r9, rdx>', '<add~~r9, 0x4c>', '<mov~~qword ptr [rsp + 0x720], r9>', '<mov~~dword ptr [rdx + 0x4c], r8d>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x728], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x401047>']}, {'block_Idx': 46, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x740]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x400f2b>']}, {'block_Idx': 61, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x710]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4394]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 108, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~rax, qword ptr [rsp + 0x7e0]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401567>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x808]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400d7e>']}, {'block_Idx': 74, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x750]>', '<sub~~eax, 6>', '<je~~0x40124a>']}, {'block_Idx': 45, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x730], rax>', '<jmp~~0x400f53>']}, {'block_Idx': 168, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x598], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x5a0], rax>', '<mov~~rax, qword ptr [rsp + 0x5a0]>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rsp + 0x598]>', '<mov~~esi, dword ptr [rsp + 0x5b0]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x590], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x5a0], rax>', '<jl~~0x401b91>']}, {'block_Idx': 33, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x800]>', '<mov~~eax, dword ptr [rsp + 0x760]>', '<mov~~edx, dword ptr [rsp + 0x748]>', '<mov~~esi, dword ptr [rsp + 0x74c]>', '<mov~~dword ptr [rsp + 0x738], esi>', '<mov~~dword ptr [rsp + 0x73c], edx>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x740], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x400efa>']}, {'block_Idx': 115, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rsp + 0x648]>', '<add~~eax, 1>', '<mov~~dword ptr [rcx], eax>', '<mov~~dword ptr [rsp + 0x63c], eax>', '<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~edx, dword ptr [rsp + 0x63c]>', '<mov~~dword ptr [rsp + 0x620], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x624], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x628], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x638], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x634], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x638]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x4017e9>']}, {'block_Idx': 57, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rsp + 0x7e0]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x6f8], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~ecx, edi>', '<shr~~ecx, 8>', '<mov~~eax, edx>', '<or~~eax, 8>', '<cmp~~esi, 0>', '<cmove~~ecx, edi>', '<cmp~~esi, 0>', '<cmove~~eax, edx>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, qword ptr [rip + 0xfef6e]>', '<movzx~~ecx, byte ptr [rcx + rdx]>', '<add~~eax, ecx>', '<mov~~ecx, 7>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsp + 0x6fc], ecx>', '<cmp~~eax, 6>', '<je~~0x4011e4>']}, {'block_Idx': 77, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~edx, dword ptr [rsp + 0x6c0]>', '<mov~~eax, dword ptr [rsp + 0x6c4]>', '<mov~~dword ptr [rsp + 0x6b4], eax>', '<mov~~dword ptr [rsp + 0x6b8], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x6bc], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401376>']}, {'block_Idx': 69, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6e0]>', '<mov~~rdx, qword ptr [rsp + 0x6e8]>', '<mov~~eax, dword ptr [rsp + 0x6f4]>', '<mov~~dword ptr [rsp + 0x6cc], eax>', '<mov~~qword ptr [rsp + 0x6d0], rdx>', '<mov~~qword ptr [rsp + 0x6d8], rcx>', '<cmp~~eax, 1>', '<jle~~0x4011c7>']}, {'block_Idx': 136, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x610]>', '<mov~~edi, dword ptr [rsp + 0x60c]>', '<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rsp + 0x628]>', '<mov~~dword ptr [rsp + 0x5ec], eax>', '<mov~~esi, edi>', '<sar~~esi, 3>', '<mov~~dword ptr [rsp + 0x5f0], esi>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x5f4], ecx>', '<movzx~~esi, sil>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x5f8], edi>', '<mov~~dword ptr [rdx], edi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x5f8]>', '<mov~~dword ptr [rsp + 0x5fc], edx>', '<and~~edx, esi>', '<mov~~dword ptr [rsp + 0x600], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x604], eax>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x60c], ecx>', '<mov~~dword ptr [rsp + 0x610], eax>', '<je~~0x401890>']}, {'block_Idx': 75, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~ecx, dword ptr [rsp + 0x6c8]>', '<mov~~rax, qword ptr [rsp + 0x7e0]>', '<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x6c0], ecx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<jmp~~0x401319>']}, {'block_Idx': 167, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5e0]>', '<cmp~~eax, 0>', '<je~~0x402bbe>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x764]>', '<add~~eax, -7>', '<mov~~ecx, 2>', '<mov~~dword ptr [rsp + 0x748], ecx>', '<mov~~dword ptr [rsp + 0x74c], eax>', '<jmp~~0x400ea1>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rsp + 0x7f8]>', '<mov~~rdi, qword ptr [rsp + 0x7f0]>', '<mov~~r9, qword ptr [rsp + 0x7e8]>', '<mov~~r11d, dword ptr [rsp + 0x7ac]>', '<mov~~rdx, qword ptr [rsp + 0x788]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x4036c0>']}, {'block_Idx': 103, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<sub~~eax, 0xe>', '<je~~0x4014f9>']}, {'block_Idx': 78, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x750]>', '<sub~~eax, 7>', '<je~~0x40129d>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~edi, dword ptr [rsp + 0x5e8]>', '<mov~~esi, dword ptr [rsp + 0x5e4]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~r9d, dword ptr [rsp + 0x5c4]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x5b4], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x5c0]>', '<mov~~dword ptr [rsp + 0x5b8], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x5b4]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x5b8]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x5bc], eax>', '<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~esi, dword ptr [rsp + 0x5e4]>', '<mov~~edx, dword ptr [rsp + 0x5bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x5ac], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x5ac]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x5b0], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402b34>']}, {'block_Idx': 135, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x614]>', '<mov~~eax, dword ptr [rsp + 0x618]>', '<mov~~edx, dword ptr [rsp + 0x61c]>', '<mov~~dword ptr [rsp + 0x5e0], edx>', '<mov~~dword ptr [rsp + 0x5e4], eax>', '<mov~~dword ptr [rsp + 0x5e8], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x4019a6>']}, {'block_Idx': 201, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x578]>', '<mov~~rdx, qword ptr [rsp + 0x5c8]>', '<mov~~edi, dword ptr [rsp + 0x580]>', '<mov~~esi, dword ptr [rsp + 0x574]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x55c], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x55c]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x560], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402b34>']}, {'block_Idx': 128, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~edx, dword ptr [rsp + 0x63c]>', '<mov~~dword ptr [rsp + 0x620], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x624], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x628], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x638], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x634], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x638]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x4017e9>']}, {'block_Idx': 194, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x584]>', '<mov~~edx, dword ptr [rsp + 0x580]>', '<mov~~eax, dword ptr [rsp + 0x58c]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x800]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x574], eax>', '<jmp~~0x401cf9>']}, {'block_Idx': 88, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~ecx, dword ptr [rsp + 0x6a0]>', '<mov~~edx, dword ptr [rsp + 0x6a4]>', '<mov~~dword ptr [rsp + 0x688], edx>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500038>']}, {'block_Idx': 183, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<mov~~edx, dword ptr [rsp + 0x5e8]>', '<mov~~eax, dword ptr [rsp + 0x548]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x530], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x538], edx>', '<mov~~dword ptr [rsp + 0x53c], ecx>', '<mov~~qword ptr [rsp + 0x540], rax>', '<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x538]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~rsi, qword ptr [rsp + 0x540]>', '<mov~~qword ptr [rsp + 0x518], rsi>', '<mov~~dword ptr [rsp + 0x520], eax>', '<mov~~dword ptr [rsp + 0x524], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x528], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x52c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401eb8>']}, {'block_Idx': 155, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5e4]>', '<mov~~ecx, dword ptr [rsp + 0x5e8]>', '<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x5c0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x5c4], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401a9f>']}, {'block_Idx': 28, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~eax, dword ptr [rax]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x7c8], rcx>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<jmp~~0x400a19>']}, {'block_Idx': 38, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~rdx, qword ptr [rsp + 0x838]>', '<mov~~rdi, qword ptr [rsp + 0x858]>', '<mov~~rsi, qword ptr [rsp + 0x8b0]>', '<mov~~eax, dword ptr [rsp + 0x844]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x868], esi>', '<mov~~dword ptr [rsp + 0x86c], edx>', '<mov~~qword ptr [rsp + 0x870], rcx>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jne~~0x4037a0>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~esi, dword ptr [rsp + 0x868]>', '<mov~~edx, dword ptr [rsp + 0x86c]>', '<mov~~rax, qword ptr [rsp + 0x870]>', '<mov~~dword ptr [rsp + 0x7d8], edx>', '<mov~~dword ptr [rsp + 0x7dc], esi>', '<mov~~esi, edx>', '<shl~~esi, 3>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~rax, rdi>', '<mov~~qword ptr [rsp + 0x7e0], rax>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~esi, edi>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~edx, edi>', '<mov~~rdi, rcx>', '<add~~rdi, 0x28>', '<mov~~qword ptr [rsp + 0x7e8], rdi>', '<mov~~qword ptr [rcx + 0x28], rax>', '<mov~~rdi, rcx>', '<add~~rdi, 0x3c>', '<mov~~qword ptr [rsp + 0x7f0], rdi>', '<mov~~dword ptr [rcx + 0x3c], esi>', '<mov~~edx, edx>', '<mov~~esi, edx>', '<mov~~rdx, rax>', '<add~~rdx, rsi>', '<mov~~rsi, rcx>', '<add~~rsi, 0x30>', '<mov~~qword ptr [rsp + 0x7f8], rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x800], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x808], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x80c], eax>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x400c63>']}, {'block_Idx': 15, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x800]>', '<mov~~rax, qword ptr [rsp + 0x7e0]>', '<mov~~edx, dword ptr [rsp + 0x80c]>', '<mov~~esi, edx>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x750], esi>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x754], edx>', '<mov~~rdx, rax>', '<add~~rdx, 3>', '<mov~~qword ptr [rsp + 0x758], rdx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x760], eax>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x764], eax>', '<mov~~dword ptr [rcx], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x400e1f>']}, {'block_Idx': 40, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x800]>', '<mov~~rax, qword ptr [rsp + 0x7c8]>', '<mov~~edx, dword ptr [rsp + 0x7d4]>', '<mov~~qword ptr [rsp + 0x788], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x79c], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x794], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x798], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x7f0]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x7a0], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x7a4], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x7a8], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x7ac], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400b81>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7e0]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~dword ptr [rdx], 0x20>', '<mov~~rdx, rax>', '<add~~rdx, 0x54>', '<mov~~qword ptr [rsp + 0x7b0], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x20>', '<mov~~qword ptr [rsp + 0x7b8], rdx>', '<mov~~qword ptr [rsp + 0x7c0], rax>', '<mov~~eax, 0x20>', '<mov~~qword ptr [rsp + 0x7c8], rcx>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<mov~~rdi, qword ptr [rsp + 0x800]>', '<mov~~rax, qword ptr [rsp + 0x7c8]>', '<mov~~edx, dword ptr [rsp + 0x7d4]>', '<mov~~qword ptr [rsp + 0x788], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x79c], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x794], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x798], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x7f0]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x7a0], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x7a4], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x7a8], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x7ac], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400b81>']}, {'block_Idx': 190, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x524]>', '<mov~~edx, dword ptr [rsp + 0x520]>', '<mov~~eax, dword ptr [rsp + 0x52c]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x800]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x514], eax>', '<jmp~~0x401f44>']}, {'block_Idx': 126, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x800]>', '<mov~~edx, dword ptr [rsp + 0x624]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x634]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x608], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 7>', '<mov~~dword ptr [rsi], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~edx, 8>', '<mov~~dword ptr [rsi], edx>', '<mov~~edi, 0x80>', '<shr~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x620]>', '<and~~edi, eax>', '<xor~~eax, eax>', '<mov~~esi, 1>', '<cmp~~edi, 0>', '<mov~~edi, edx>', '<mov~~dword ptr [rsp + 0x60c], edi>', '<mov~~dword ptr [rsp + 0x610], esi>', '<mov~~dword ptr [rsp + 0x614], edx>', '<mov~~dword ptr [rsp + 0x618], ecx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<je~~0x401959>']}, {'block_Idx': 81, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~ecx, dword ptr [rsp + 0x6c8]>', '<mov~~rax, qword ptr [rsp + 0x7e0]>', '<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x6c0], ecx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<jmp~~0x401319>']}, {'block_Idx': 95, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<sub~~eax, 0xd>', '<je~~0x4014b2>']}, {'block_Idx': 70, 'blockInsts': ['<jmp~~0x4011e4>']}, {'block_Idx': 3, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x890]>', '<mov~~rdx, qword ptr [rsp + 0x8b0]>', '<mov~~ecx, dword ptr [rsp + 0x88c]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x880]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~esi, dword ptr [rdx]>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x8bc], esi>', '<mov~~dword ptr [rsp + 0x868], edx>', '<mov~~dword ptr [rsp + 0x86c], ecx>', '<mov~~qword ptr [rsp + 0x870], rax>', '<je~~0x4008d8>']}, {'block_Idx': 90, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<sub~~eax, 0xc>', '<je~~0x401462>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x764]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~edx, ecx>', '<mov~~dword ptr [rsp + 0x744], edx>', '<mov~~dword ptr [rsp + 0x748], ecx>', '<mov~~dword ptr [rsp + 0x74c], eax>', '<je~~0x400ea1>']}], 'cfg_edge_info': [(40, 14), (183, 191), (33, 45), (164, 168), (191, 198), (126, 135), (92, 88), (128, 126), (98, 88), (115, 126), (6, 11), (40, 13), (183, 190), (15, 23), (67, 70), (195, 167), (50, 57), (163, 166), (164, 167), (3, 6), (69, 67), (188, 195), (95, 98), (103, 108), (204, 191), (75, 77), (74, 75), (57, 62), (10, 14), (36, 33), (155, 164), (38, 6), (81, 77), (62, 67), (6, 10), (15, 22), (90, 92), (108, 88), (67, 69), (194, 201), (33, 46), (188, 194), (190, 197), (78, 81), (204, 190), (126, 136), (191, 199), (22, 33), (10, 13), (57, 61), (11, 15), (195, 202), (155, 163), (28, 40)]}]}
{'flac_decode_frame': [4196568, 4196801, 4196889, 4197758, 4198049, 4198471, 4198731, 4198986, 4199069, 4199522, 4199602, 4199673, 4200425, 4201064, 4201119, 4201526, 4201581, 4202113, 4202168]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O2/flacdec.o---before
The extraction of function: flac_decode_frame
[4196568, 4196801, 4196889, 4197758, 4198049, 4198471, 4198731, 4198986, 4199069, 4199522, 4199602, 4199673, 4200425, 4201064, 4201119, 4201526, 4201581, 4202113, 4202168]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 523 nodes and 809 edges in CFGEmulated.
It has 523 nodes and 869 edges in CDG.
It has 20869 nodes and 52285 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4196568, 4196801, 4196889, 4197758, 4198049, 4198471, 4198731, 4198986, 4199069, 4199522, 4199602, 4199673, 4200425, 4201064, 4201119, 4201526, 4201581, 4202113, 4202168]
{4198913, 4199427, 4199940, 4197381, 4196355, 4206086, 4208136, 4203015, 4198924, 4207629, 4198926, 4202512, 4203539, 4195863, 4196889, 4197402, 4198938, 4198940, 4197917, 4202521, 4197919, 4202015, 4202526, 4204571, 4205602, 4200996, 4205092, 4198952, 4198442, 4207146, 4198957, 4206638, 4199473, 4201526, 4197434, 4206650, 4195900, 4199485, 4204605, 4199487, 4198466, 4204610, 4198981, 4198471, 4208199, 4202567, 4198986, 4199499, 4199501, 4204622, 4197968, 4197970, 4205652, 4206683, 4199517, 4199522, 4197475, 4195940, 4205155, 4196454, 4207719, 4201064, 4203112, 4201581, 4205680, 4198001, 4204658, 4197498, 4204667, 4204672, 4202113, 4202624, 4206208, 4207238, 4208265, 4200078, 4200592, 4207250, 4197526, 4195992, 4204699, 4198044, 4199069, 4205725, 4201119, 4204704, 4198049, 4205227, 4199602, 4207283, 4202168, 4208320, 4197569, 4202690, 4207811, 4206275, 4203202, 4200136, 4203725, 4207823, 4203218, 4202487, 4206804, 4196568, 4204762, 4196061, 4198623, 4195552, 4205793, 4198116, 4208356, 4204261, 4197614, 4199152, 4207856, 4199673, 4198138, 4201721, 4205817, 4200196, 4206341, 4198153, 4197130, 4202764, 4208397, 4205839, 4198680, 4199193, 4202780, 4200222, 4200224, 4200739, 4198187, 4201259, 4196139, 4207404, 4203311, 4205364, 4197684, 4208439, 4200253, 4200255, 4205376, 4199747, 4202308, 4204872, 4199242, 4198731, 4205389, 4198222, 4196174, 4198227, 4195667, 4201814, 4200793, 4200282, 4207962, 4206945, 4199778, 4199783, 4208488, 4201322, 4206442, 4199281, 4205428, 4199286, 4205943, 4203387, 4197758, 4197249, 4200840, 4195722, 4202890, 4203403, 4201869, 4199824, 4197265, 4201361, 4204948, 4202391, 4197277, 4208544, 4200865, 4201888, 4200870, 4197290, 4200881, 4200883, 4207540, 4205502, 4196801, 4208068, 4198853, 4200901, 4198855, 4199366, 4200393, 4205000, 4207045, 4202446, 4201423, 4199889, 4199378, 4201428, 4196309, 4200918, 4203482, 4195805, 4199901, 4198884, 4200420, 4197863, 4201960, 4200425, 4204007, 4197355, 4202476, 4205547, 4202485, 4199415, 4197369, 4198908, 4199935}
[81, 118, 357, 203, 382, 58, 231, 347, 181, 224, 67, 242, 138, 34, 37, 11, 209, 266, 247, 133, 436, 402, 146, 32, 175, 24, 43, 327, 151, 216, 36, 196, 56, 156, 219, 417, 200, 25, 176, 119, 386, 246, 232, 202, 244, 260, 47, 201, 233, 7, 5, 123, 180, 261, 89, 165, 354, 207, 257, 249, 254, 102, 39, 214, 185, 371, 26, 72, 113, 400, 194, 105, 241, 220, 80, 459, 197, 401, 439, 204, 218, 317, 243, 213, 128, 188, 208, 51, 55, 171, 42, 144, 8, 159, 129, 230, 71, 21, 75, 339, 234, 210, 310, 356, 87, 44, 410, 35, 312, 368, 255, 155, 45, 0, 193, 326, 225, 205, 374, 114, 226, 91, 4, 411, 27, 41, 223, 409, 177, 57, 88, 281, 14, 16, 167, 68, 92, 250, 290, 237, 221, 162, 169, 236, 23, 124, 215, 64, 10, 163, 437, 46, 145, 106, 85, 54, 13, 228, 192, 355, 211, 1, 179, 18, 95, 49, 238, 6, 388, 174, 107, 229, 358, 227, 222, 40, 240, 101, 172, 60, 170, 19, 86, 399, 157, 341, 22, 109, 63, 139, 115, 199, 373, 173, 50, 12, 369, 166, 387, 206, 9, 183, 372, 38, 147, 195, 74, 158, 99, 370, 217, 136, 29, 117, 398, 141, 383, 97, 153, 17, 198, 104, 33, 302, 143, 256, 251, 340, 134, 385, 2, 15, 66, 384, 79, 52, 190, 112, 239, 164, 150, 235, 178, 397, 111, 189, 98, 168, 187]
The execution time of patched slicing information extraction via angr: 0:03:42.635393
{'flac_decode_frame': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 81, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401042>]'}, {'block_Idx': 118, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401403>, <DisassemblerInsn "mov" for 0x40140a>, <DisassemblerInsn "movsxd" for 0x401411>, <DisassemblerInsn "lea" for 0x401414>, <DisassemblerInsn "mov" for 0x40141b>, <DisassemblerInsn "mov" for 0x40141e>, <DisassemblerInsn "mov" for 0x401425>, <DisassemblerInsn "jmp" for 0x40142c>]'}, {'block_Idx': 357, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4021f7>, <DisassemblerInsn "cmp" for 0x4021fe>, <DisassemblerInsn "jle" for 0x402201>]'}, {'block_Idx': 203, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4033b4>, <DisassemblerInsn "mov" for 0x4033bc>, <DisassemblerInsn "mov" for 0x4033c4>, <DisassemblerInsn "mov" for 0x4033cb>, <DisassemblerInsn "mov" for 0x4033d3>, <DisassemblerInsn "mov" for 0x4033da>, <DisassemblerInsn "mov" for 0x4033dc>, <DisassemblerInsn "shl" for 0x4033de>, <DisassemblerInsn "mov" for 0x4033e0>, <DisassemblerInsn "mov" for 0x4033e8>, <DisassemblerInsn "add" for 0x4033eb>, <DisassemblerInsn "mov" for 0x4033ef>, <DisassemblerInsn "mov" for 0x4033f2>, <DisassemblerInsn "mov" for 0x4033f4>, <DisassemblerInsn "mov" for 0x4033fb>, <DisassemblerInsn "mov" for 0x403403>, <DisassemblerInsn "jmp" for 0x40340b>]'}, {'block_Idx': 382, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402946>]'}, {'block_Idx': 58, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f09>, <DisassemblerInsn "movsxd" for 0x400f10>, <DisassemblerInsn "lea" for 0x400f13>, <DisassemblerInsn "shl" for 0x400f1a>, <DisassemblerInsn "add" for 0x400f1e>, <DisassemblerInsn "mov" for 0x400f21>, <DisassemblerInsn "jmp" for 0x400f29>]'}, {'block_Idx': 231, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019c5>, <DisassemblerInsn "cmp" for 0x4019cd>, <DisassemblerInsn "jle" for 0x4019d0>]'}, {'block_Idx': 347, 'blockInsts': '[<DisassemblerInsn "mov" for 0x405293>, <DisassemblerInsn "add" for 0x40529a>, <DisassemblerInsn "ret" for 0x4052a1>]'}, {'block_Idx': 181, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4032b3>, <DisassemblerInsn "mov" for 0x4032bb>, <DisassemblerInsn "mov" for 0x4032c3>, <DisassemblerInsn "mov" for 0x4032ca>, <DisassemblerInsn "mov" for 0x4032d2>, <DisassemblerInsn "mov" for 0x4032d6>, <DisassemblerInsn "mov" for 0x4032de>, <DisassemblerInsn "mov" for 0x4032e2>, <DisassemblerInsn "xor" for 0x4032ea>, <DisassemblerInsn "mov" for 0x4032ec>, <DisassemblerInsn "mov" for 0x4032f3>, <DisassemblerInsn "mov" for 0x4032fb>, <DisassemblerInsn "mov" for 0x403303>, <DisassemblerInsn "jmp" for 0x40330b>]'}, {'block_Idx': 224, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b6a>, <DisassemblerInsn "mov" for 0x401b72>, <DisassemblerInsn "mov" for 0x401b7a>, <DisassemblerInsn "mov" for 0x401b7f>, <DisassemblerInsn "xor" for 0x401b87>, <DisassemblerInsn "mov" for 0x401b89>, <DisassemblerInsn "mov" for 0x401b91>, <DisassemblerInsn "mov" for 0x401b99>, <DisassemblerInsn "mov" for 0x401ba1>, <DisassemblerInsn "mov" for 0x401ba9>, <DisassemblerInsn "mov" for 0x401bb0>, <DisassemblerInsn "add" for 0x401bb3>, <DisassemblerInsn "mov" for 0x401bb7>, <DisassemblerInsn "movsxd" for 0x401bbf>, <DisassemblerInsn "cmp" for 0x401bc2>, <DisassemblerInsn "mov" for 0x401bc5>, <DisassemblerInsn "jl" for 0x401bcd>]'}, {'block_Idx': 67, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cee>, <DisassemblerInsn "mov" for 0x400cf5>, <DisassemblerInsn "mov" for 0x400cfd>, <DisassemblerInsn "mov" for 0x400d04>, <DisassemblerInsn "sar" for 0x400d0b>, <DisassemblerInsn "movsxd" for 0x400d0e>, <DisassemblerInsn "mov" for 0x400d11>, <DisassemblerInsn "ror" for 0x400d14>, <DisassemblerInsn "ror" for 0x400d18>, <DisassemblerInsn "ror" for 0x400d1b>, <DisassemblerInsn "shl" for 0x400d1f>, <DisassemblerInsn "shr" for 0x400d21>, <DisassemblerInsn "and" for 0x400d24>, <DisassemblerInsn "cmp" for 0x400d29>, <DisassemblerInsn "je" for 0x400d2e>]'}, {'block_Idx': 242, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016c8>, <DisassemblerInsn "mov" for 0x4016d0>, <DisassemblerInsn "mov" for 0x4016d7>, <DisassemblerInsn "mov" for 0x4016de>, <DisassemblerInsn "mov" for 0x4016e6>, <DisassemblerInsn "mov" for 0x4016ee>, <DisassemblerInsn "mov" for 0x4016f5>, <DisassemblerInsn "mov" for 0x4016fc>, <DisassemblerInsn "cmp" for 0x4016fe>, <DisassemblerInsn "jne" for 0x401702>]'}, {'block_Idx': 138, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015d1>, <DisassemblerInsn "cmp" for 0x4015d8>, <DisassemblerInsn "je" for 0x4015db>]'}, {'block_Idx': 34, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bf9>, <DisassemblerInsn "cmp" for 0x400c00>, <DisassemblerInsn "jle" for 0x400c03>]'}, {'block_Idx': 37, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ea1>, <DisassemblerInsn "mov" for 0x400ea9>, <DisassemblerInsn "mov" for 0x400eb0>, <DisassemblerInsn "mov" for 0x400eb7>, <DisassemblerInsn "mov" for 0x400ebe>, <DisassemblerInsn "mov" for 0x400ec5>, <DisassemblerInsn "shl" for 0x400ecc>, <DisassemblerInsn "shr" for 0x400ecf>, <DisassemblerInsn "mov" for 0x400ed2>, <DisassemblerInsn "mov" for 0x400ed9>, <DisassemblerInsn "cmp" for 0x400edf>, <DisassemblerInsn "jne" for 0x400ee2>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4006dd>, <DisassemblerInsn "mov" for 0x4006e4>, <DisassemblerInsn "mov" for 0x4006eb>, <DisassemblerInsn "mov" for 0x4006f2>, <DisassemblerInsn "mov" for 0x4006fa>, <DisassemblerInsn "add" for 0x4006fd>, <DisassemblerInsn "mov" for 0x400704>, <DisassemblerInsn "mov" for 0x40070c>, <DisassemblerInsn "cmp" for 0x400712>, <DisassemblerInsn "mov" for 0x400714>, <DisassemblerInsn "mov" for 0x40071b>, <DisassemblerInsn "mov" for 0x400722>, <DisassemblerInsn "jae" for 0x400729>]'}, {'block_Idx': 209, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f05>, <DisassemblerInsn "mov" for 0x402f0d>, <DisassemblerInsn "mov" for 0x402f14>, <DisassemblerInsn "mov" for 0x402f1c>, <DisassemblerInsn "mov" for 0x402f24>, <DisassemblerInsn "mov" for 0x402f2c>, <DisassemblerInsn "mov" for 0x402f34>, <DisassemblerInsn "add" for 0x402f3b>, <DisassemblerInsn "movsxd" for 0x402f3f>, <DisassemblerInsn "cmp" for 0x402f42>, <DisassemblerInsn "mov" for 0x402f45>, <DisassemblerInsn "mov" for 0x402f4c>, <DisassemblerInsn "mov" for 0x402f54>, <DisassemblerInsn "mov" for 0x402f5c>, <DisassemblerInsn "jl" for 0x402f64>]'}, {'block_Idx': 266, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e1f>, <DisassemblerInsn "mov" for 0x401e27>, <DisassemblerInsn "mov" for 0x401e2e>, <DisassemblerInsn "mov" for 0x401e35>, <DisassemblerInsn "mov" for 0x401e3d>, <DisassemblerInsn "mov" for 0x401e45>, <DisassemblerInsn "mov" for 0x401e4c>, <DisassemblerInsn "mov" for 0x401e53>, <DisassemblerInsn "sar" for 0x401e55>, <DisassemblerInsn "movsxd" for 0x401e58>, <DisassemblerInsn "mov" for 0x401e5b>, <DisassemblerInsn "ror" for 0x401e5e>, <DisassemblerInsn "ror" for 0x401e62>, <DisassemblerInsn "ror" for 0x401e65>, <DisassemblerInsn "and" for 0x401e69>, <DisassemblerInsn "mov" for 0x401e6c>, <DisassemblerInsn "shl" for 0x401e73>, <DisassemblerInsn "mov" for 0x401e75>, <DisassemblerInsn "cmp" for 0x401e7c>, <DisassemblerInsn "jge" for 0x401e7f>]'}, {'block_Idx': 247, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401eb8>, <DisassemblerInsn "mov" for 0x401ec0>, <DisassemblerInsn "mov" for 0x401ec7>, <DisassemblerInsn "mov" for 0x401ece>, <DisassemblerInsn "mov" for 0x401ed6>, <DisassemblerInsn "shr" for 0x401ede>, <DisassemblerInsn "mov" for 0x401ee2>, <DisassemblerInsn "add" for 0x401ee5>, <DisassemblerInsn "mov" for 0x401ee9>, <DisassemblerInsn "add" for 0x401eeb>, <DisassemblerInsn "mov" for 0x401eee>, <DisassemblerInsn "shl" for 0x401ef5>, <DisassemblerInsn "mov" for 0x401ef8>, <DisassemblerInsn "mov" for 0x401eff>, <DisassemblerInsn "sar" for 0x401f07>, <DisassemblerInsn "movsxd" for 0x401f0b>, <DisassemblerInsn "mov" for 0x401f0e>, <DisassemblerInsn "ror" for 0x401f12>, <DisassemblerInsn "ror" for 0x401f16>, <DisassemblerInsn "ror" for 0x401f19>, <DisassemblerInsn "shl" for 0x401f1d>, <DisassemblerInsn "mov" for 0x401f1f>, <DisassemblerInsn "mov" for 0x401f26>, <DisassemblerInsn "xor" for 0x401f29>, <DisassemblerInsn "sub" for 0x401f2b>, <DisassemblerInsn "shr" for 0x401f2e>, <DisassemblerInsn "mov" for 0x401f30>, <DisassemblerInsn "add" for 0x401f37>, <DisassemblerInsn "mov" for 0x401f39>, <DisassemblerInsn "or" for 0x401f3b>, <DisassemblerInsn "mov" for 0x401f3d>, <DisassemblerInsn "mov" for 0x401f44>, <DisassemblerInsn "mov" for 0x401f4c>, <DisassemblerInsn "mov" for 0x401f54>, <DisassemblerInsn "mov" for 0x401f5b>, <DisassemblerInsn "mov" for 0x401f62>, <DisassemblerInsn "sub" for 0x401f67>, <DisassemblerInsn "mov" for 0x401f69>, <DisassemblerInsn "shl" for 0x401f70>, <DisassemblerInsn "mov" for 0x401f72>, <DisassemblerInsn "sar" for 0x401f79>, <DisassemblerInsn "mov" for 0x401f7b>, <DisassemblerInsn "mov" for 0x401f83>, <DisassemblerInsn "add" for 0x401f86>, <DisassemblerInsn "mov" for 0x401f8a>, <DisassemblerInsn "cmp" for 0x401f92>, <DisassemblerInsn "je" for 0x401f95>]'}, {'block_Idx': 133, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014b2>, <DisassemblerInsn "mov" for 0x4014b9>, <DisassemblerInsn "mov" for 0x4014c1>, <DisassemblerInsn "sar" for 0x4014c3>, <DisassemblerInsn "movsxd" for 0x4014c6>, <DisassemblerInsn "mov" for 0x4014c9>, <DisassemblerInsn "ror" for 0x4014cc>, <DisassemblerInsn "ror" for 0x4014d0>, <DisassemblerInsn "ror" for 0x4014d3>, <DisassemblerInsn "and" for 0x4014d7>, <DisassemblerInsn "shl" for 0x4014da>, <DisassemblerInsn "mov" for 0x4014dc>, <DisassemblerInsn "shr" for 0x4014e3>, <DisassemblerInsn "add" for 0x4014e6>, <DisassemblerInsn "mov" for 0x4014e9>, <DisassemblerInsn "mov" for 0x4014f0>, <DisassemblerInsn "jmp" for 0x4014f7>]'}, {'block_Idx': 436, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x402872>, <DisassemblerInsn "jl" for 0x402875>]'}, {'block_Idx': 402, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40283d>]'}, {'block_Idx': 146, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40145d>]'}, {'block_Idx': 32, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c3a>, <DisassemblerInsn "mov" for 0x400c42>, <DisassemblerInsn "mov" for 0x400c4a>, <DisassemblerInsn "mov" for 0x400c4c>, <DisassemblerInsn "mov" for 0x400c4f>, <DisassemblerInsn "mov" for 0x400c57>, <DisassemblerInsn "jmp" for 0x400c5e>]'}, {'block_Idx': 175, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40303a>, <DisassemblerInsn "mov" for 0x403042>, <DisassemblerInsn "mov" for 0x403044>, <DisassemblerInsn "cmp" for 0x40304b>, <DisassemblerInsn "mov" for 0x40304e>, <DisassemblerInsn "jle" for 0x403055>]'}, {'block_Idx': 24, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b91>, <DisassemblerInsn "cmp" for 0x400b98>, <DisassemblerInsn "jne" for 0x400b9b>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400803>, <DisassemblerInsn "mov" for 0x40080b>, <DisassemblerInsn "mov" for 0x400813>, <DisassemblerInsn "mov" for 0x400819>, <DisassemblerInsn "xor" for 0x40081b>, <DisassemblerInsn "mov" for 0x40081d>, <DisassemblerInsn "mov" for 0x400824>, <DisassemblerInsn "mov" for 0x40082b>, <DisassemblerInsn "mov" for 0x400832>, <DisassemblerInsn "mov" for 0x40083a>, <DisassemblerInsn "mov" for 0x400842>, <DisassemblerInsn "mov" for 0x400849>, <DisassemblerInsn "mov" for 0x400850>, <DisassemblerInsn "add" for 0x400857>, <DisassemblerInsn "mov" for 0x400859>, <DisassemblerInsn "add" for 0x40085b>, <DisassemblerInsn "movsxd" for 0x40085e>, <DisassemblerInsn "call" for 0x400861>]'}, {'block_Idx': 327, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402047>, <DisassemblerInsn "mov" for 0x40204e>, <DisassemblerInsn "mov" for 0x402055>, <DisassemblerInsn "mov" for 0x40205d>, <DisassemblerInsn "add" for 0x40205f>, <DisassemblerInsn "mov" for 0x402062>, <DisassemblerInsn "mov" for 0x402064>, <DisassemblerInsn "mov" for 0x402067>, <DisassemblerInsn "sub" for 0x40206e>, <DisassemblerInsn "mov" for 0x402070>, <DisassemblerInsn "cmp" for 0x402077>, <DisassemblerInsn "jbe" for 0x40207a>]'}, {'block_Idx': 151, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40168e>, <DisassemblerInsn "mov" for 0x401695>, <DisassemblerInsn "mov" for 0x40169c>, <DisassemblerInsn "add" for 0x4016a4>, <DisassemblerInsn "mov" for 0x4016a8>, <DisassemblerInsn "xor" for 0x4016b0>, <DisassemblerInsn "mov" for 0x4016b2>, <DisassemblerInsn "mov" for 0x4016b9>, <DisassemblerInsn "mov" for 0x4016c0>, <DisassemblerInsn "mov" for 0x4016c8>, <DisassemblerInsn "mov" for 0x4016d0>, <DisassemblerInsn "mov" for 0x4016d7>, <DisassemblerInsn "mov" for 0x4016de>, <DisassemblerInsn "mov" for 0x4016e6>, <DisassemblerInsn "mov" for 0x4016ee>, <DisassemblerInsn "mov" for 0x4016f5>, <DisassemblerInsn "mov" for 0x4016fc>, <DisassemblerInsn "cmp" for 0x4016fe>, <DisassemblerInsn "jne" for 0x401702>]'}, {'block_Idx': 216, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x403281>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4036e4>, <DisassemblerInsn "mov" for 0x4036ec>, <DisassemblerInsn "mov" for 0x4036f3>, <DisassemblerInsn "mov" for 0x4036f7>, <DisassemblerInsn "sub" for 0x4036fb>, <DisassemblerInsn "xor" for 0x4036fd>, <DisassemblerInsn "lea" for 0x4036ff>, <DisassemblerInsn "mov" for 0x403706>, <DisassemblerInsn "call" for 0x403708>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ec3>, <DisassemblerInsn "mov" for 0x402ecb>, <DisassemblerInsn "mov" for 0x402ed2>, <DisassemblerInsn "mov" for 0x402eda>, <DisassemblerInsn "mov" for 0x402ee1>, <DisassemblerInsn "mov" for 0x402ee4>, <DisassemblerInsn "add" for 0x402ee7>, <DisassemblerInsn "mov" for 0x402eeb>, <DisassemblerInsn "mov" for 0x402eee>, <DisassemblerInsn "mov" for 0x402ef5>, <DisassemblerInsn "mov" for 0x402efd>, <DisassemblerInsn "mov" for 0x402f05>, <DisassemblerInsn "mov" for 0x402f0d>, <DisassemblerInsn "mov" for 0x402f14>, <DisassemblerInsn "mov" for 0x402f1c>, <DisassemblerInsn "mov" for 0x402f24>, <DisassemblerInsn "mov" for 0x402f2c>, <DisassemblerInsn "mov" for 0x402f34>, <DisassemblerInsn "add" for 0x402f3b>, <DisassemblerInsn "movsxd" for 0x402f3f>, <DisassemblerInsn "cmp" for 0x402f42>, <DisassemblerInsn "mov" for 0x402f45>, <DisassemblerInsn "mov" for 0x402f4c>, <DisassemblerInsn "mov" for 0x402f54>, <DisassemblerInsn "mov" for 0x402f5c>, <DisassemblerInsn "jl" for 0x402f64>]'}, {'block_Idx': 56, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f53>, <DisassemblerInsn "mov" for 0x400f5b>, <DisassemblerInsn "mov" for 0x400f63>, <DisassemblerInsn "mov" for 0x400f6b>, <DisassemblerInsn "mov" for 0x400f73>, <DisassemblerInsn "mov" for 0x400f75>, <DisassemblerInsn "cmp" for 0x400f7c>, <DisassemblerInsn "setg" for 0x400f7f>, <DisassemblerInsn "mov" for 0x400f83>, <DisassemblerInsn "mov" for 0x400f8b>, <DisassemblerInsn "add" for 0x400f8e>, <DisassemblerInsn "mov" for 0x400f92>, <DisassemblerInsn "mov" for 0x400f9a>, <DisassemblerInsn "mov" for 0x400f9e>, <DisassemblerInsn "mov" for 0x400fa4>, <DisassemblerInsn "cmp" for 0x400faa>, <DisassemblerInsn "cmovg" for 0x400fad>, <DisassemblerInsn "mov" for 0x400fb1>, <DisassemblerInsn "mov" for 0x400fb7>, <DisassemblerInsn "cmp" for 0x400fbd>, <DisassemblerInsn "cmovg" for 0x400fc0>, <DisassemblerInsn "and" for 0x400fc4>, <DisassemblerInsn "movzx" for 0x400fc8>, <DisassemblerInsn "mov" for 0x400fcc>, <DisassemblerInsn "sub" for 0x400fd0>, <DisassemblerInsn "mov" for 0x400fd3>, <DisassemblerInsn "mov" for 0x400fd6>, <DisassemblerInsn "mov" for 0x400fde>, <DisassemblerInsn "add" for 0x400fe1>, <DisassemblerInsn "mov" for 0x400fe5>, <DisassemblerInsn "mov" for 0x400fed>, <DisassemblerInsn "mov" for 0x400ff1>, <DisassemblerInsn "add" for 0x400ff4>, <DisassemblerInsn "mov" for 0x400ff8>, <DisassemblerInsn "mov" for 0x401000>, <DisassemblerInsn "mov" for 0x401004>, <DisassemblerInsn "mov" for 0x40100a>, <DisassemblerInsn "add" for 0x40100d>, <DisassemblerInsn "mov" for 0x401011>, <DisassemblerInsn "mov" for 0x401019>, <DisassemblerInsn "mov" for 0x40101c>, <DisassemblerInsn "mov" for 0x40101e>, <DisassemblerInsn "and" for 0x401024>, <DisassemblerInsn "cmp" for 0x401026>, <DisassemblerInsn "je" for 0x401028>]'}, {'block_Idx': 156, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402cf9>, <DisassemblerInsn "mov" for 0x402d01>, <DisassemblerInsn "mov" for 0x402d03>, <DisassemblerInsn "jmp" for 0x402d0a>]'}, {'block_Idx': 219, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a9f>, <DisassemblerInsn "mov" for 0x401aa7>, <DisassemblerInsn "mov" for 0x401aae>, <DisassemblerInsn "mov" for 0x401ab5>, <DisassemblerInsn "mov" for 0x401abd>, <DisassemblerInsn "shr" for 0x401ac5>, <DisassemblerInsn "mov" for 0x401ac9>, <DisassemblerInsn "add" for 0x401acc>, <DisassemblerInsn "mov" for 0x401ad0>, <DisassemblerInsn "add" for 0x401ad2>, <DisassemblerInsn "mov" for 0x401ad5>, <DisassemblerInsn "shl" for 0x401adc>, <DisassemblerInsn "mov" for 0x401adf>, <DisassemblerInsn "mov" for 0x401ae6>, <DisassemblerInsn "sar" for 0x401aee>, <DisassemblerInsn "movsxd" for 0x401af2>, <DisassemblerInsn "mov" for 0x401af5>, <DisassemblerInsn "ror" for 0x401af9>, <DisassemblerInsn "ror" for 0x401afd>, <DisassemblerInsn "ror" for 0x401b00>, <DisassemblerInsn "shl" for 0x401b04>, <DisassemblerInsn "mov" for 0x401b06>, <DisassemblerInsn "mov" for 0x401b0d>, <DisassemblerInsn "xor" for 0x401b10>, <DisassemblerInsn "sub" for 0x401b12>, <DisassemblerInsn "shr" for 0x401b15>, <DisassemblerInsn "mov" for 0x401b17>, <DisassemblerInsn "add" for 0x401b1e>, <DisassemblerInsn "mov" for 0x401b20>, <DisassemblerInsn "or" for 0x401b22>, <DisassemblerInsn "mov" for 0x401b24>, <DisassemblerInsn "mov" for 0x401b2b>, <DisassemblerInsn "mov" for 0x401b33>, <DisassemblerInsn "mov" for 0x401b3a>, <DisassemblerInsn "mov" for 0x401b41>, <DisassemblerInsn "sub" for 0x401b46>, <DisassemblerInsn "mov" for 0x401b48>, <DisassemblerInsn "shl" for 0x401b4f>, <DisassemblerInsn "mov" for 0x401b51>, <DisassemblerInsn "sar" for 0x401b58>, <DisassemblerInsn "mov" for 0x401b5a>, <DisassemblerInsn "cmp" for 0x401b61>, <DisassemblerInsn "jle" for 0x401b64>]'}, {'block_Idx': 417, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402816>]'}, {'block_Idx': 200, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401923>, <DisassemblerInsn "mov" for 0x40192a>, <DisassemblerInsn "mov" for 0x401931>, <DisassemblerInsn "mov" for 0x401939>, <DisassemblerInsn "sub" for 0x401940>, <DisassemblerInsn "mov" for 0x401942>, <DisassemblerInsn "mov" for 0x401944>, <DisassemblerInsn "mov" for 0x40194b>, <DisassemblerInsn "mov" for 0x401952>, <DisassemblerInsn "mov" for 0x401959>, <DisassemblerInsn "mov" for 0x401960>, <DisassemblerInsn "mov" for 0x401967>, <DisassemblerInsn "mov" for 0x40196e>, <DisassemblerInsn "mov" for 0x401975>, <DisassemblerInsn "mov" for 0x40197c>, <DisassemblerInsn "cmp" for 0x401983>, <DisassemblerInsn "jle" for 0x401986>]'}, {'block_Idx': 25, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4036c0>, <DisassemblerInsn "mov" for 0x4036c7>, <DisassemblerInsn "mov" for 0x4036cf>, <DisassemblerInsn "add" for 0x4036d1>, <DisassemblerInsn "mov" for 0x4036d4>, <DisassemblerInsn "cdq" for 0x4036d9>, <DisassemblerInsn "idiv" for 0x4036da>, <DisassemblerInsn "mov" for 0x4036dc>, <DisassemblerInsn "cmp" for 0x4036e0>, <DisassemblerInsn "jle" for 0x4036e2>]'}, {'block_Idx': 176, 'blockInsts': '[<DisassemblerInsn "lea" for 0x4030b5>, <DisassemblerInsn "lea" for 0x4030bc>, <DisassemblerInsn "mov" for 0x4030c3>, <DisassemblerInsn "lea" for 0x4030c8>, <DisassemblerInsn "call" for 0x4030cf>]'}, {'block_Idx': 119, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401431>, <DisassemblerInsn "sub" for 0x401438>, <DisassemblerInsn "je" for 0x40143b>]'}, {'block_Idx': 386, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402948>, <DisassemblerInsn "mov" for 0x402950>, <DisassemblerInsn "mov" for 0x402958>, <DisassemblerInsn "mov" for 0x40295f>, <DisassemblerInsn "mov" for 0x402966>, <DisassemblerInsn "mov" for 0x40296d>, <DisassemblerInsn "mov" for 0x402974>, <DisassemblerInsn "mov" for 0x40297b>, <DisassemblerInsn "mov" for 0x402982>, <DisassemblerInsn "cmp" for 0x40298a>, <DisassemblerInsn "je" for 0x40298e>]'}, {'block_Idx': 246, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e81>, <DisassemblerInsn "mov" for 0x401e88>, <DisassemblerInsn "mov" for 0x401e8f>, <DisassemblerInsn "mov" for 0x401e96>, <DisassemblerInsn "xor" for 0x401e99>, <DisassemblerInsn "sub" for 0x401e9b>, <DisassemblerInsn "shr" for 0x401e9e>, <DisassemblerInsn "mov" for 0x401ea0>, <DisassemblerInsn "add" for 0x401ea8>, <DisassemblerInsn "mov" for 0x401eaa>, <DisassemblerInsn "mov" for 0x401eac>, <DisassemblerInsn "jmp" for 0x401eb3>]'}, {'block_Idx': 232, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401da0>, <DisassemblerInsn "mov" for 0x401da8>, <DisassemblerInsn "mov" for 0x401db0>, <DisassemblerInsn "mov" for 0x401db8>, <DisassemblerInsn "and" for 0x401dbf>, <DisassemblerInsn "mov" for 0x401dc2>, <DisassemblerInsn "mov" for 0x401dc9>, <DisassemblerInsn "mov" for 0x401dcb>, <DisassemblerInsn "mov" for 0x401dd2>, <DisassemblerInsn "mov" for 0x401dd7>, <DisassemblerInsn "cmp" for 0x401ddf>, <DisassemblerInsn "je" for 0x401de2>]'}, {'block_Idx': 202, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40340d>, <DisassemblerInsn "mov" for 0x403415>, <DisassemblerInsn "mov" for 0x40341c>, <DisassemblerInsn "mov" for 0x403424>, <DisassemblerInsn "mov" for 0x40342b>, <DisassemblerInsn "mov" for 0x403432>, <DisassemblerInsn "mov" for 0x40343a>, <DisassemblerInsn "shl" for 0x40343e>, <DisassemblerInsn "mov" for 0x403440>, <DisassemblerInsn "mov" for 0x403442>, <DisassemblerInsn "mov" for 0x403445>, <DisassemblerInsn "add" for 0x403448>, <DisassemblerInsn "mov" for 0x40344c>, <DisassemblerInsn "mov" for 0x403450>, <DisassemblerInsn "mov" for 0x403457>, <DisassemblerInsn "mov" for 0x40345f>, <DisassemblerInsn "mov" for 0x403467>, <DisassemblerInsn "mov" for 0x40346f>, <DisassemblerInsn "mov" for 0x403476>, <DisassemblerInsn "mov" for 0x40347e>, <DisassemblerInsn "add" for 0x403486>, <DisassemblerInsn "movsxd" for 0x40348a>, <DisassemblerInsn "cmp" for 0x40348d>, <DisassemblerInsn "mov" for 0x403490>, <DisassemblerInsn "mov" for 0x403492>, <DisassemblerInsn "mov" for 0x403499>, <DisassemblerInsn "mov" for 0x4034a1>, <DisassemblerInsn "mov" for 0x4034a9>, <DisassemblerInsn "mov" for 0x4034b1>, <DisassemblerInsn "jl" for 0x4034b8>]'}, {'block_Idx': 244, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401bd4>, <DisassemblerInsn "mov" for 0x401bdc>, <DisassemblerInsn "mov" for 0x401be3>, <DisassemblerInsn "mov" for 0x401bea>, <DisassemblerInsn "mov" for 0x401bf2>, <DisassemblerInsn "mov" for 0x401bfa>, <DisassemblerInsn "mov" for 0x401c01>, <DisassemblerInsn "mov" for 0x401c08>, <DisassemblerInsn "sar" for 0x401c0a>, <DisassemblerInsn "movsxd" for 0x401c0d>, <DisassemblerInsn "mov" for 0x401c10>, <DisassemblerInsn "ror" for 0x401c13>, <DisassemblerInsn "ror" for 0x401c17>, <DisassemblerInsn "ror" for 0x401c1a>, <DisassemblerInsn "and" for 0x401c1e>, <DisassemblerInsn "mov" for 0x401c21>, <DisassemblerInsn "shl" for 0x401c28>, <DisassemblerInsn "mov" for 0x401c2a>, <DisassemblerInsn "cmp" for 0x401c31>, <DisassemblerInsn "jge" for 0x401c34>]'}, {'block_Idx': 260, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401cf9>, <DisassemblerInsn "mov" for 0x401d01>, <DisassemblerInsn "mov" for 0x401d09>, <DisassemblerInsn "mov" for 0x401d10>, <DisassemblerInsn "mov" for 0x401d17>, <DisassemblerInsn "sub" for 0x401d1c>, <DisassemblerInsn "mov" for 0x401d1e>, <DisassemblerInsn "shl" for 0x401d25>, <DisassemblerInsn "mov" for 0x401d27>, <DisassemblerInsn "sar" for 0x401d2e>, <DisassemblerInsn "mov" for 0x401d30>, <DisassemblerInsn "mov" for 0x401d38>, <DisassemblerInsn "mov" for 0x401d3b>, <DisassemblerInsn "add" for 0x401d3e>, <DisassemblerInsn "mov" for 0x401d42>, <DisassemblerInsn "movsxd" for 0x401d4a>, <DisassemblerInsn "cmp" for 0x401d4d>, <DisassemblerInsn "jge" for 0x401d50>]'}, {'block_Idx': 47, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403768>, <DisassemblerInsn "mov" for 0x40376f>, <DisassemblerInsn "mov" for 0x403774>, <DisassemblerInsn "mov" for 0x403778>, <DisassemblerInsn "mov" for 0x40377c>, <DisassemblerInsn "mov" for 0x403784>, <DisassemblerInsn "add" for 0x403787>, <DisassemblerInsn "mov" for 0x40378e>, <DisassemblerInsn "sub" for 0x403795>, <DisassemblerInsn "mov" for 0x403797>, <DisassemblerInsn "mov" for 0x403799>, <DisassemblerInsn "mov" for 0x4037a0>, <DisassemblerInsn "add" for 0x4037a7>, <DisassemblerInsn "pop" for 0x4037ae>, <DisassemblerInsn "ret" for 0x4037af>]'}, {'block_Idx': 201, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4017e4>]'}, {'block_Idx': 233, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402842>, <DisassemblerInsn "cmp" for 0x402849>, <DisassemblerInsn "jle" for 0x40284c>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4037a0>, <DisassemblerInsn "add" for 0x4037a7>, <DisassemblerInsn "pop" for 0x4037ae>, <DisassemblerInsn "ret" for 0x4037af>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400617>, <DisassemblerInsn "mov" for 0x40061e>, <DisassemblerInsn "mov" for 0x400626>, <DisassemblerInsn "cmp" for 0x40062d>, <DisassemblerInsn "mov" for 0x400633>, <DisassemblerInsn "je" for 0x40063a>]'}, {'block_Idx': 123, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401462>, <DisassemblerInsn "mov" for 0x401469>, <DisassemblerInsn "mov" for 0x401471>, <DisassemblerInsn "sar" for 0x401473>, <DisassemblerInsn "movsxd" for 0x401476>, <DisassemblerInsn "mov" for 0x401479>, <DisassemblerInsn "ror" for 0x40147c>, <DisassemblerInsn "ror" for 0x401480>, <DisassemblerInsn "ror" for 0x401483>, <DisassemblerInsn "and" for 0x401487>, <DisassemblerInsn "shl" for 0x40148a>, <DisassemblerInsn "mov" for 0x40148c>, <DisassemblerInsn "shr" for 0x401493>, <DisassemblerInsn "add" for 0x401496>, <DisassemblerInsn "imul" for 0x401499>, <DisassemblerInsn "mov" for 0x40149f>, <DisassemblerInsn "mov" for 0x4014a6>, <DisassemblerInsn "jmp" for 0x4014ad>]'}, {'block_Idx': 180, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017c9>, <DisassemblerInsn "mov" for 0x4017d1>, <DisassemblerInsn "xor" for 0x4017d4>, <DisassemblerInsn "lea" for 0x4017d6>, <DisassemblerInsn "mov" for 0x4017dd>, <DisassemblerInsn "call" for 0x4017df>]'}, {'block_Idx': 261, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d56>, <DisassemblerInsn "mov" for 0x401d5e>, <DisassemblerInsn "mov" for 0x401d66>, <DisassemblerInsn "mov" for 0x401d6e>, <DisassemblerInsn "mov" for 0x401d70>, <DisassemblerInsn "mov" for 0x401d72>, <DisassemblerInsn "mov" for 0x401d79>, <DisassemblerInsn "mov" for 0x401d80>, <DisassemblerInsn "jmp" for 0x401d88>]'}, {'block_Idx': 89, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c70>, <DisassemblerInsn "mov" for 0x402c78>, <DisassemblerInsn "mov" for 0x402c82>, <DisassemblerInsn "mov" for 0x402c8c>, <DisassemblerInsn "mov" for 0x402c91>, <DisassemblerInsn "jmp" for 0x402c98>]'}, {'block_Idx': 165, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d0f>, <DisassemblerInsn "mov" for 0x402d17>, <DisassemblerInsn "mov" for 0x402d1f>, <DisassemblerInsn "mov" for 0x402d26>, <DisassemblerInsn "mov" for 0x402d2e>, <DisassemblerInsn "xor" for 0x402d30>, <DisassemblerInsn "cmp" for 0x402d32>, <DisassemblerInsn "mov" for 0x402d35>, <DisassemblerInsn "mov" for 0x402d38>, <DisassemblerInsn "mov" for 0x402d40>, <DisassemblerInsn "mov" for 0x402d43>, <DisassemblerInsn "mov" for 0x402d4b>, <DisassemblerInsn "mov" for 0x402d52>, <DisassemblerInsn "mov" for 0x402d5a>, <DisassemblerInsn "mov" for 0x402d62>, <DisassemblerInsn "mov" for 0x402d6a>, <DisassemblerInsn "jle" for 0x402d71>]'}, {'block_Idx': 354, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4028a0>, <DisassemblerInsn "mov" for 0x4028a8>, <DisassemblerInsn "mov" for 0x4028b0>, <DisassemblerInsn "xor" for 0x4028b7>, <DisassemblerInsn "cmp" for 0x4028b9>, <DisassemblerInsn "mov" for 0x4028bd>, <DisassemblerInsn "mov" for 0x4028c5>, <DisassemblerInsn "mov" for 0x4028cc>, <DisassemblerInsn "je" for 0x4028d4>]'}, {'block_Idx': 207, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403161>, <DisassemblerInsn "mov" for 0x403169>, <DisassemblerInsn "mov" for 0x403171>, <DisassemblerInsn "mov" for 0x403179>, <DisassemblerInsn "mov" for 0x403180>, <DisassemblerInsn "mov" for 0x403187>, <DisassemblerInsn "mov" for 0x40318f>, <DisassemblerInsn "sub" for 0x403192>, <DisassemblerInsn "mov" for 0x403194>, <DisassemblerInsn "shl" for 0x403196>, <DisassemblerInsn "mov" for 0x403198>, <DisassemblerInsn "mov" for 0x4031a0>, <DisassemblerInsn "add" for 0x4031a3>, <DisassemblerInsn "mov" for 0x4031a7>, <DisassemblerInsn "mov" for 0x4031aa>, <DisassemblerInsn "mov" for 0x4031ac>, <DisassemblerInsn "mov" for 0x4031b3>, <DisassemblerInsn "mov" for 0x4031bb>, <DisassemblerInsn "jmp" for 0x4031c3>]'}, {'block_Idx': 257, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40289b>]'}, {'block_Idx': 249, 'blockInsts': '[<DisassemblerInsn "push" for 0x403960>, <DisassemblerInsn "mov" for 0x403961>, <DisassemblerInsn "push" for 0x403964>, <DisassemblerInsn "sub" for 0x403965>, <DisassemblerInsn "mov" for 0x40396c>, <DisassemblerInsn "mov" for 0x40396f>, <DisassemblerInsn "mov" for 0x403972>, <DisassemblerInsn "mov" for 0x403976>, <DisassemblerInsn "mov" for 0x403978>, <DisassemblerInsn "lea" for 0x40397c>, <DisassemblerInsn "and" for 0x403984>, <DisassemblerInsn "mov" for 0x403988>, <DisassemblerInsn "sub" for 0x40398b>, <DisassemblerInsn "mov" for 0x40398e>, <DisassemblerInsn "mov" for 0x403992>, <DisassemblerInsn "movsxd" for 0x403995>, <DisassemblerInsn "mov" for 0x403998>, <DisassemblerInsn "mov" for 0x40399d>, <DisassemblerInsn "cmp" for 0x4039a1>, <DisassemblerInsn "setg" for 0x4039a4>, <DisassemblerInsn "mov" for 0x4039a7>, <DisassemblerInsn "test" for 0x4039aa>, <DisassemblerInsn "jne" for 0x4039ac>]'}, {'block_Idx': 254, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f44>, <DisassemblerInsn "mov" for 0x401f4c>, <DisassemblerInsn "mov" for 0x401f54>, <DisassemblerInsn "mov" for 0x401f5b>, <DisassemblerInsn "mov" for 0x401f62>, <DisassemblerInsn "sub" for 0x401f67>, <DisassemblerInsn "mov" for 0x401f69>, <DisassemblerInsn "shl" for 0x401f70>, <DisassemblerInsn "mov" for 0x401f72>, <DisassemblerInsn "sar" for 0x401f79>, <DisassemblerInsn "mov" for 0x401f7b>, <DisassemblerInsn "mov" for 0x401f83>, <DisassemblerInsn "add" for 0x401f86>, <DisassemblerInsn "mov" for 0x401f8a>, <DisassemblerInsn "cmp" for 0x401f92>, <DisassemblerInsn "je" for 0x401f95>]'}, {'block_Idx': 102, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40121c>, <DisassemblerInsn "sub" for 0x401223>, <DisassemblerInsn "je" for 0x401226>]'}, {'block_Idx': 39, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e50>]'}, {'block_Idx': 214, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403467>, <DisassemblerInsn "mov" for 0x40346f>, <DisassemblerInsn "mov" for 0x403476>, <DisassemblerInsn "mov" for 0x40347e>, <DisassemblerInsn "add" for 0x403486>, <DisassemblerInsn "movsxd" for 0x40348a>, <DisassemblerInsn "cmp" for 0x40348d>, <DisassemblerInsn "mov" for 0x403490>, <DisassemblerInsn "mov" for 0x403492>, <DisassemblerInsn "mov" for 0x403499>, <DisassemblerInsn "mov" for 0x4034a1>, <DisassemblerInsn "mov" for 0x4034a9>, <DisassemblerInsn "mov" for 0x4034b1>, <DisassemblerInsn "jl" for 0x4034b8>]'}, {'block_Idx': 185, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40305b>, <DisassemblerInsn "mov" for 0x403063>, <DisassemblerInsn "mov" for 0x40306b>, <DisassemblerInsn "mov" for 0x403072>, <DisassemblerInsn "mov" for 0x40307a>, <DisassemblerInsn "mov" for 0x40307e>, <DisassemblerInsn "mov" for 0x403086>, <DisassemblerInsn "mov" for 0x40308a>, <DisassemblerInsn "xor" for 0x403092>, <DisassemblerInsn "mov" for 0x403094>, <DisassemblerInsn "mov" for 0x40309b>, <DisassemblerInsn "mov" for 0x4030a3>, <DisassemblerInsn "mov" for 0x4030ab>, <DisassemblerInsn "jmp" for 0x4030b3>]'}, {'block_Idx': 371, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40232f>, <DisassemblerInsn "mov" for 0x402336>, <DisassemblerInsn "mov" for 0x40233d>, <DisassemblerInsn "and" for 0x402345>, <DisassemblerInsn "mov" for 0x402349>, <DisassemblerInsn "mov" for 0x402351>, <DisassemblerInsn "xor" for 0x402356>, <DisassemblerInsn "mov" for 0x402358>, <DisassemblerInsn "mov" for 0x402360>, <DisassemblerInsn "mov" for 0x402367>, <DisassemblerInsn "mov" for 0x40236e>, <DisassemblerInsn "jmp" for 0x402376>]'}, {'block_Idx': 26, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400de7>, <DisassemblerInsn "mov" for 0x400dee>, <DisassemblerInsn "mov" for 0x400df6>, <DisassemblerInsn "add" for 0x400df9>, <DisassemblerInsn "xor" for 0x400dfc>, <DisassemblerInsn "cmp" for 0x400dfe>, <DisassemblerInsn "mov" for 0x400e00>, <DisassemblerInsn "mov" for 0x400e02>, <DisassemblerInsn "mov" for 0x400e09>, <DisassemblerInsn "mov" for 0x400e10>, <DisassemblerInsn "je" for 0x400e17>]'}, {'block_Idx': 72, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010df>, <DisassemblerInsn "mov" for 0x4010e6>, <DisassemblerInsn "mov" for 0x4010ed>, <DisassemblerInsn "mov" for 0x4010f2>, <DisassemblerInsn "shr" for 0x4010f4>, <DisassemblerInsn "mov" for 0x4010f6>, <DisassemblerInsn "and" for 0x4010f8>, <DisassemblerInsn "mov" for 0x4010fa>, <DisassemblerInsn "mov" for 0x4010fc>, <DisassemblerInsn "mov" for 0x401101>, <DisassemblerInsn "mov" for 0x401109>, <DisassemblerInsn "mov" for 0x401111>, <DisassemblerInsn "mov" for 0x401118>, <DisassemblerInsn "mov" for 0x401120>, <DisassemblerInsn "mov" for 0x401128>, <DisassemblerInsn "mov" for 0x40112f>, <DisassemblerInsn "mov" for 0x401136>, <DisassemblerInsn "mov" for 0x40113e>, <DisassemblerInsn "cmp" for 0x401146>, <DisassemblerInsn "jle" for 0x401149>]'}, {'block_Idx': 113, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013d2>, <DisassemblerInsn "mov" for 0x4013d9>, <DisassemblerInsn "mov" for 0x4013e1>, <DisassemblerInsn "mov" for 0x4013e4>, <DisassemblerInsn "mov" for 0x4013eb>, <DisassemblerInsn "jmp" for 0x4013f2>]'}, {'block_Idx': 400, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4029c8>, <DisassemblerInsn "mov" for 0x4029d0>, <DisassemblerInsn "mov" for 0x4029d8>, <DisassemblerInsn "mov" for 0x4029df>, <DisassemblerInsn "mov" for 0x4029e6>, <DisassemblerInsn "mov" for 0x4029ed>, <DisassemblerInsn "mov" for 0x4029f5>, <DisassemblerInsn "mov" for 0x4029fd>, <DisassemblerInsn "mov" for 0x402a04>, <DisassemblerInsn "mov" for 0x402a0b>, <DisassemblerInsn "mov" for 0x402a12>, <DisassemblerInsn "cmp" for 0x402a1a>, <DisassemblerInsn "je" for 0x402a1e>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4030d4>, <DisassemblerInsn "mov" for 0x4030dc>, <DisassemblerInsn "mov" for 0x4030e4>, <DisassemblerInsn "mov" for 0x4030ec>, <DisassemblerInsn "mov" for 0x4030f4>, <DisassemblerInsn "mov" for 0x4030fc>, <DisassemblerInsn "mov" for 0x403104>, <DisassemblerInsn "mov" for 0x40310c>, <DisassemblerInsn "mov" for 0x403114>, <DisassemblerInsn "mov" for 0x40311c>, <DisassemblerInsn "mov" for 0x403124>, <DisassemblerInsn "mov" for 0x40312c>, <DisassemblerInsn "mov" for 0x403134>, <DisassemblerInsn "mov" for 0x403137>, <DisassemblerInsn "mov" for 0x40313e>, <DisassemblerInsn "mov" for 0x403141>, <DisassemblerInsn "mov" for 0x403148>, <DisassemblerInsn "mov" for 0x40314a>, <DisassemblerInsn "mov" for 0x40314c>, <DisassemblerInsn "shl" for 0x403153>, <DisassemblerInsn "mov" for 0x403155>, <DisassemblerInsn "cmp" for 0x40315c>, <DisassemblerInsn "je" for 0x40315f>]'}, {'block_Idx': 105, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40134a>, <DisassemblerInsn "mov" for 0x401352>, <DisassemblerInsn "mov" for 0x401359>, <DisassemblerInsn "xor" for 0x401361>, <DisassemblerInsn "lea" for 0x401363>, <DisassemblerInsn "mov" for 0x40136a>, <DisassemblerInsn "call" for 0x40136c>]'}, {'block_Idx': 241, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40284e>, <DisassemblerInsn "mov" for 0x402856>, <DisassemblerInsn "mov" for 0x40285e>, <DisassemblerInsn "and" for 0x402865>, <DisassemblerInsn "add" for 0x402868>, <DisassemblerInsn "mov" for 0x40286b>, <DisassemblerInsn "call" for 0x40286d>]'}, {'block_Idx': 220, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019b3>, <DisassemblerInsn "sub" for 0x4019ba>, <DisassemblerInsn "jne" for 0x4019bd>]'}, {'block_Idx': 80, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40114b>, <DisassemblerInsn "mov" for 0x401153>, <DisassemblerInsn "mov" for 0x40115b>, <DisassemblerInsn "mov" for 0x401163>, <DisassemblerInsn "mov" for 0x40116b>, <DisassemblerInsn "add" for 0x401172>, <DisassemblerInsn "mov" for 0x401175>, <DisassemblerInsn "shr" for 0x401178>, <DisassemblerInsn "mov" for 0x40117c>, <DisassemblerInsn "ror" for 0x401180>, <DisassemblerInsn "ror" for 0x401184>, <DisassemblerInsn "ror" for 0x401187>, <DisassemblerInsn "shr" for 0x40118b>, <DisassemblerInsn "add" for 0x40118e>, <DisassemblerInsn "mov" for 0x401192>, <DisassemblerInsn "mov" for 0x401195>, <DisassemblerInsn "add" for 0x401198>, <DisassemblerInsn "shl" for 0x40119b>, <DisassemblerInsn "movsxd" for 0x40119f>, <DisassemblerInsn "add" for 0x4011a2>, <DisassemblerInsn "cmp" for 0x4011a5>, <DisassemblerInsn "mov" for 0x4011a8>, <DisassemblerInsn "mov" for 0x4011b0>, <DisassemblerInsn "mov" for 0x4011b8>, <DisassemblerInsn "jb" for 0x4011bf>]'}, {'block_Idx': 459, 'blockInsts': '[<DisassemblerInsn "mov" for 0x404882>, <DisassemblerInsn "mov" for 0x404886>, <DisassemblerInsn "mov" for 0x40488c>, <DisassemblerInsn "sar" for 0x404892>, <DisassemblerInsn "mov" for 0x404894>, <DisassemblerInsn "movsxd" for 0x40489a>, <DisassemblerInsn "add" for 0x40489d>, <DisassemblerInsn "mov" for 0x4048a0>, <DisassemblerInsn "xor" for 0x4048a3>, <DisassemblerInsn "mov" for 0x4048a5>, <DisassemblerInsn "mov" for 0x4048ab>, <DisassemblerInsn "lea" for 0x4048b1>, <DisassemblerInsn "pop" for 0x4048b5>, <DisassemblerInsn "pop" for 0x4048b6>, <DisassemblerInsn "ret" for 0x4048b7>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402e80>, <DisassemblerInsn "mov" for 0x402e88>, <DisassemblerInsn "mov" for 0x402e90>, <DisassemblerInsn "mov" for 0x402e98>, <DisassemblerInsn "mov" for 0x402e9f>, <DisassemblerInsn "add" for 0x402ea2>, <DisassemblerInsn "mov" for 0x402ea6>, <DisassemblerInsn "mov" for 0x402ea8>, <DisassemblerInsn "mov" for 0x402eaa>, <DisassemblerInsn "mov" for 0x402eb1>, <DisassemblerInsn "mov" for 0x402eb9>, <DisassemblerInsn "jmp" for 0x402ec1>]'}, {'block_Idx': 401, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40218a>, <DisassemblerInsn "mov" for 0x402191>, <DisassemblerInsn "mov" for 0x402198>, <DisassemblerInsn "mov" for 0x40219f>, <DisassemblerInsn "mov" for 0x4021a6>, <DisassemblerInsn "add" for 0x4021ae>, <DisassemblerInsn "and" for 0x4021b2>, <DisassemblerInsn "mov" for 0x4021b6>, <DisassemblerInsn "mov" for 0x4021be>, <DisassemblerInsn "xor" for 0x4021c4>, <DisassemblerInsn "mov" for 0x4021c6>, <DisassemblerInsn "mov" for 0x4021ce>, <DisassemblerInsn "mov" for 0x4021d5>, <DisassemblerInsn "mov" for 0x4021dc>, <DisassemblerInsn "mov" for 0x4021e3>, <DisassemblerInsn "mov" for 0x4021ea>, <DisassemblerInsn "jmp" for 0x4021f2>]'}, {'block_Idx': 439, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4048ab>, <DisassemblerInsn "lea" for 0x4048b1>, <DisassemblerInsn "pop" for 0x4048b5>, <DisassemblerInsn "pop" for 0x4048b6>, <DisassemblerInsn "ret" for 0x4048b7>]'}, {'block_Idx': 204, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403608>, <DisassemblerInsn "mov" for 0x40360d>, <DisassemblerInsn "mov" for 0x403611>, <DisassemblerInsn "mov" for 0x403616>, <DisassemblerInsn "mov" for 0x40361a>, <DisassemblerInsn "mov" for 0x40361e>, <DisassemblerInsn "mov" for 0x403623>, <DisassemblerInsn "shl" for 0x403627>, <DisassemblerInsn "mov" for 0x403629>, <DisassemblerInsn "mov" for 0x40362b>, <DisassemblerInsn "mov" for 0x40362e>, <DisassemblerInsn "add" for 0x403631>, <DisassemblerInsn "mov" for 0x403635>, <DisassemblerInsn "mov" for 0x403639>, <DisassemblerInsn "mov" for 0x40363d>, <DisassemblerInsn "mov" for 0x403642>, <DisassemblerInsn "mov" for 0x403647>, <DisassemblerInsn "mov" for 0x40364c>, <DisassemblerInsn "mov" for 0x403650>, <DisassemblerInsn "mov" for 0x403655>, <DisassemblerInsn "add" for 0x40365a>, <DisassemblerInsn "movsxd" for 0x40365e>, <DisassemblerInsn "cmp" for 0x403661>, <DisassemblerInsn "mov" for 0x403664>, <DisassemblerInsn "mov" for 0x403666>, <DisassemblerInsn "mov" for 0x40366a>, <DisassemblerInsn "mov" for 0x40366f>, <DisassemblerInsn "mov" for 0x403674>, <DisassemblerInsn "mov" for 0x40367c>, <DisassemblerInsn "jl" for 0x403683>]'}, {'block_Idx': 218, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a68>, <DisassemblerInsn "mov" for 0x401a6f>, <DisassemblerInsn "mov" for 0x401a76>, <DisassemblerInsn "mov" for 0x401a7d>, <DisassemblerInsn "xor" for 0x401a80>, <DisassemblerInsn "sub" for 0x401a82>, <DisassemblerInsn "shr" for 0x401a85>, <DisassemblerInsn "mov" for 0x401a87>, <DisassemblerInsn "add" for 0x401a8f>, <DisassemblerInsn "mov" for 0x401a91>, <DisassemblerInsn "mov" for 0x401a93>, <DisassemblerInsn "jmp" for 0x401a9a>]'}, {'block_Idx': 317, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40201e>, <DisassemblerInsn "mov" for 0x402025>, <DisassemblerInsn "mov" for 0x40202d>, <DisassemblerInsn "add" for 0x40202f>, <DisassemblerInsn "mov" for 0x402032>, <DisassemblerInsn "mov" for 0x402034>, <DisassemblerInsn "mov" for 0x402037>, <DisassemblerInsn "cmp" for 0x40203e>, <DisassemblerInsn "je" for 0x402041>]'}, {'block_Idx': 243, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b74>, <DisassemblerInsn "mov" for 0x402b7c>, <DisassemblerInsn "mov" for 0x402b84>, <DisassemblerInsn "mov" for 0x402b8b>, <DisassemblerInsn "shl" for 0x402b8e>, <DisassemblerInsn "mov" for 0x402b90>, <DisassemblerInsn "mov" for 0x402b98>, <DisassemblerInsn "mov" for 0x402b9f>, <DisassemblerInsn "add" for 0x402ba2>, <DisassemblerInsn "mov" for 0x402ba6>, <DisassemblerInsn "movsxd" for 0x402bae>, <DisassemblerInsn "cmp" for 0x402bb1>, <DisassemblerInsn "mov" for 0x402bb4>, <DisassemblerInsn "jl" for 0x402bbc>]'}, {'block_Idx': 213, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4034be>]'}, {'block_Idx': 128, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401590>, <DisassemblerInsn "mov" for 0x401598>, <DisassemblerInsn "mov" for 0x40159b>, <DisassemblerInsn "mov" for 0x4015a3>, <DisassemblerInsn "mov" for 0x4015a6>, <DisassemblerInsn "mov" for 0x4015ae>, <DisassemblerInsn "mov" for 0x4015b0>, <DisassemblerInsn "mov" for 0x4015b7>, <DisassemblerInsn "cdq" for 0x4015bc>, <DisassemblerInsn "idiv" for 0x4015bd>, <DisassemblerInsn "mov" for 0x4015bf>, <DisassemblerInsn "movsxd" for 0x4015c7>, <DisassemblerInsn "xor" for 0x4015ca>, <DisassemblerInsn "call" for 0x4015cc>]'}, {'block_Idx': 188, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402e06>, <DisassemblerInsn "mov" for 0x402e0e>, <DisassemblerInsn "mov" for 0x402e16>, <DisassemblerInsn "mov" for 0x402e1e>, <DisassemblerInsn "mov" for 0x402e26>, <DisassemblerInsn "mov" for 0x402e2e>, <DisassemblerInsn "mov" for 0x402e36>, <DisassemblerInsn "mov" for 0x402e3e>, <DisassemblerInsn "mov" for 0x402e46>, <DisassemblerInsn "mov" for 0x402e4e>, <DisassemblerInsn "mov" for 0x402e56>, <DisassemblerInsn "mov" for 0x402e5e>, <DisassemblerInsn "mov" for 0x402e66>, <DisassemblerInsn "mov" for 0x402e68>, <DisassemblerInsn "mov" for 0x402e6d>, <DisassemblerInsn "mov" for 0x402e70>, <DisassemblerInsn "shl" for 0x402e72>, <DisassemblerInsn "mov" for 0x402e74>, <DisassemblerInsn "cmp" for 0x402e7b>, <DisassemblerInsn "je" for 0x402e7e>]'}, {'block_Idx': 208, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f6a>, <DisassemblerInsn "mov" for 0x402f72>, <DisassemblerInsn "mov" for 0x402f7a>, <DisassemblerInsn "mov" for 0x402f81>, <DisassemblerInsn "mov" for 0x402f89>, <DisassemblerInsn "mov" for 0x402f8b>, <DisassemblerInsn "mov" for 0x402f92>, <DisassemblerInsn "mov" for 0x402f94>, <DisassemblerInsn "mov" for 0x402f9b>, <DisassemblerInsn "mov" for 0x402fa2>, <DisassemblerInsn "mov" for 0x402faa>, <DisassemblerInsn "mov" for 0x402fb2>, <DisassemblerInsn "mov" for 0x402fba>, <DisassemblerInsn "mov" for 0x402fc1>, <DisassemblerInsn "mov" for 0x402fc9>, <DisassemblerInsn "mov" for 0x402fd0>, <DisassemblerInsn "mov" for 0x402fd8>, <DisassemblerInsn "add" for 0x402fe0>, <DisassemblerInsn "movsxd" for 0x402fe4>, <DisassemblerInsn "cmp" for 0x402fe7>, <DisassemblerInsn "mov" for 0x402fea>, <DisassemblerInsn "mov" for 0x402fed>, <DisassemblerInsn "mov" for 0x402ff5>, <DisassemblerInsn "mov" for 0x402ffd>, <DisassemblerInsn "mov" for 0x403004>, <DisassemblerInsn "mov" for 0x40300c>, <DisassemblerInsn "mov" for 0x403014>, <DisassemblerInsn "mov" for 0x40301c>, <DisassemblerInsn "jl" for 0x403023>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e71>, <DisassemblerInsn "mov" for 0x400e78>, <DisassemblerInsn "mov" for 0x400e80>, <DisassemblerInsn "mov" for 0x400e88>, <DisassemblerInsn "xor" for 0x400e8c>, <DisassemblerInsn "lea" for 0x400e8e>, <DisassemblerInsn "mov" for 0x400e95>, <DisassemblerInsn "call" for 0x400e97>]'}, {'block_Idx': 55, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40370d>, <DisassemblerInsn "mov" for 0x403715>, <DisassemblerInsn "mov" for 0x40371f>, <DisassemblerInsn "mov" for 0x403729>, <DisassemblerInsn "mov" for 0x40372e>, <DisassemblerInsn "jmp" for 0x403735>]'}, {'block_Idx': 171, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403292>, <DisassemblerInsn "mov" for 0x40329a>, <DisassemblerInsn "mov" for 0x40329c>, <DisassemblerInsn "cmp" for 0x4032a3>, <DisassemblerInsn "mov" for 0x4032a6>, <DisassemblerInsn "jle" for 0x4032ad>]'}, {'block_Idx': 42, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400866>, <DisassemblerInsn "mov" for 0x40086e>, <DisassemblerInsn "mov" for 0x400876>, <DisassemblerInsn "mov" for 0x40087e>, <DisassemblerInsn "mov" for 0x400886>, <DisassemblerInsn "mov" for 0x40088d>, <DisassemblerInsn "mov" for 0x400894>, <DisassemblerInsn "add" for 0x400896>, <DisassemblerInsn "mov" for 0x400899>, <DisassemblerInsn "add" for 0x40089b>, <DisassemblerInsn "mov" for 0x40089d>, <DisassemblerInsn "cmp" for 0x40089f>, <DisassemblerInsn "setl" for 0x4008a1>, <DisassemblerInsn "cmp" for 0x4008a5>, <DisassemblerInsn "setne" for 0x4008a8>, <DisassemblerInsn "and" for 0x4008ac>, <DisassemblerInsn "test" for 0x4008af>, <DisassemblerInsn "mov" for 0x4008b3>, <DisassemblerInsn "mov" for 0x4008b5>, <DisassemblerInsn "mov" for 0x4008bc>, <DisassemblerInsn "mov" for 0x4008c3>, <DisassemblerInsn "mov" for 0x4008cb>, <DisassemblerInsn "jne" for 0x4008d2>]'}, {'block_Idx': 144, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015dd>, <DisassemblerInsn "mov" for 0x4015e4>, <DisassemblerInsn "mov" for 0x4015ec>, <DisassemblerInsn "xor" for 0x4015ef>, <DisassemblerInsn "lea" for 0x4015f1>, <DisassemblerInsn "mov" for 0x4015f8>, <DisassemblerInsn "call" for 0x4015fa>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400698>, <DisassemblerInsn "mov" for 0x40069f>, <DisassemblerInsn "mov" for 0x4006a7>, <DisassemblerInsn "add" for 0x4006aa>, <DisassemblerInsn "mov" for 0x4006b1>, <DisassemblerInsn "mov" for 0x4006b9>, <DisassemblerInsn "mov" for 0x4006bf>, <DisassemblerInsn "xor" for 0x4006c6>, <DisassemblerInsn "mov" for 0x4006c9>, <DisassemblerInsn "cmp" for 0x4006ce>, <DisassemblerInsn "mov" for 0x4006d0>, <DisassemblerInsn "ja" for 0x4006d7>]'}, {'block_Idx': 159, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4015ff>]'}, {'block_Idx': 129, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40143f>, <DisassemblerInsn "sub" for 0x401446>, <DisassemblerInsn "je" for 0x401449>]'}, {'block_Idx': 230, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401bcf>]'}, {'block_Idx': 71, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011e4>, <DisassemblerInsn "xor" for 0x4011ec>, <DisassemblerInsn "lea" for 0x4011ee>, <DisassemblerInsn "mov" for 0x4011f5>, <DisassemblerInsn "call" for 0x4011f7>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40082b>, <DisassemblerInsn "mov" for 0x400832>, <DisassemblerInsn "mov" for 0x40083a>, <DisassemblerInsn "mov" for 0x400842>, <DisassemblerInsn "mov" for 0x400849>, <DisassemblerInsn "mov" for 0x400850>, <DisassemblerInsn "add" for 0x400857>, <DisassemblerInsn "mov" for 0x400859>, <DisassemblerInsn "add" for 0x40085b>, <DisassemblerInsn "movsxd" for 0x40085e>, <DisassemblerInsn "call" for 0x400861>]'}, {'block_Idx': 75, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c54>, <DisassemblerInsn "mov" for 0x402c5c>, <DisassemblerInsn "xor" for 0x402c60>, <DisassemblerInsn "lea" for 0x402c62>, <DisassemblerInsn "mov" for 0x402c69>, <DisassemblerInsn "call" for 0x402c6b>]'}, {'block_Idx': 339, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40238b>, <DisassemblerInsn "mov" for 0x402392>, <DisassemblerInsn "mov" for 0x402399>, <DisassemblerInsn "mov" for 0x40239b>, <DisassemblerInsn "mov" for 0x40239d>, <DisassemblerInsn "add" for 0x4023a0>, <DisassemblerInsn "mov" for 0x4023a4>, <DisassemblerInsn "add" for 0x4023ac>, <DisassemblerInsn "and" for 0x4023b0>, <DisassemblerInsn "mov" for 0x4023b4>, <DisassemblerInsn "mov" for 0x4023bc>, <DisassemblerInsn "cmp" for 0x4023c1>, <DisassemblerInsn "mov" for 0x4023c5>, <DisassemblerInsn "mov" for 0x4023cd>, <DisassemblerInsn "jb" for 0x4023d4>]'}, {'block_Idx': 234, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402beb>, <DisassemblerInsn "mov" for 0x402bf3>, <DisassemblerInsn "mov" for 0x402bfb>, <DisassemblerInsn "mov" for 0x402c03>, <DisassemblerInsn "mov" for 0x402c05>, <DisassemblerInsn "mov" for 0x402c07>, <DisassemblerInsn "mov" for 0x402c0e>, <DisassemblerInsn "mov" for 0x402c15>, <DisassemblerInsn "jmp" for 0x402c1d>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a24>, <DisassemblerInsn "mov" for 0x401a2b>, <DisassemblerInsn "mov" for 0x401a32>, <DisassemblerInsn "mov" for 0x401a3a>, <DisassemblerInsn "sar" for 0x401a3c>, <DisassemblerInsn "movsxd" for 0x401a3f>, <DisassemblerInsn "mov" for 0x401a42>, <DisassemblerInsn "ror" for 0x401a45>, <DisassemblerInsn "ror" for 0x401a49>, <DisassemblerInsn "ror" for 0x401a4c>, <DisassemblerInsn "and" for 0x401a50>, <DisassemblerInsn "mov" for 0x401a53>, <DisassemblerInsn "shl" for 0x401a5a>, <DisassemblerInsn "mov" for 0x401a5c>, <DisassemblerInsn "cmp" for 0x401a63>, <DisassemblerInsn "jge" for 0x401a66>]'}, {'block_Idx': 310, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401ff5>]'}, {'block_Idx': 356, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022d2>, <DisassemblerInsn "mov" for 0x4022d9>, <DisassemblerInsn "mov" for 0x4022e0>, <DisassemblerInsn "mov" for 0x4022e7>, <DisassemblerInsn "mov" for 0x4022e9>, <DisassemblerInsn "mov" for 0x4022eb>, <DisassemblerInsn "add" for 0x4022ee>, <DisassemblerInsn "mov" for 0x4022f2>, <DisassemblerInsn "add" for 0x4022fa>, <DisassemblerInsn "and" for 0x4022fe>, <DisassemblerInsn "mov" for 0x402302>, <DisassemblerInsn "mov" for 0x40230a>, <DisassemblerInsn "cmp" for 0x40230f>, <DisassemblerInsn "mov" for 0x402313>, <DisassemblerInsn "mov" for 0x40231b>, <DisassemblerInsn "mov" for 0x402322>, <DisassemblerInsn "jb" for 0x402329>]'}, {'block_Idx': 87, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401118>, <DisassemblerInsn "mov" for 0x401120>, <DisassemblerInsn "mov" for 0x401128>, <DisassemblerInsn "mov" for 0x40112f>, <DisassemblerInsn "mov" for 0x401136>, <DisassemblerInsn "mov" for 0x40113e>, <DisassemblerInsn "cmp" for 0x401146>, <DisassemblerInsn "jle" for 0x401149>]'}, {'block_Idx': 44, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a19>, <DisassemblerInsn "mov" for 0x400a21>, <DisassemblerInsn "mov" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a30>, <DisassemblerInsn "mov" for 0x400a38>, <DisassemblerInsn "sar" for 0x400a3a>, <DisassemblerInsn "movsxd" for 0x400a3d>, <DisassemblerInsn "mov" for 0x400a40>, <DisassemblerInsn "mov" for 0x400a43>, <DisassemblerInsn "and" for 0x400a45>, <DisassemblerInsn "mov" for 0x400a48>, <DisassemblerInsn "movzx" for 0x400a4f>, <DisassemblerInsn "mov" for 0x400a52>, <DisassemblerInsn "mov" for 0x400a59>, <DisassemblerInsn "add" for 0x400a5b>, <DisassemblerInsn "mov" for 0x400a5e>, <DisassemblerInsn "sar" for 0x400a60>, <DisassemblerInsn "movsxd" for 0x400a63>, <DisassemblerInsn "mov" for 0x400a66>, <DisassemblerInsn "ror" for 0x400a69>, <DisassemblerInsn "ror" for 0x400a6d>, <DisassemblerInsn "ror" for 0x400a70>, <DisassemblerInsn "and" for 0x400a74>, <DisassemblerInsn "shl" for 0x400a77>, <DisassemblerInsn "mov" for 0x400a79>, <DisassemblerInsn "shr" for 0x400a80>, <DisassemblerInsn "mov" for 0x400a83>, <DisassemblerInsn "mov" for 0x400a8a>, <DisassemblerInsn "add" for 0x400a8c>, <DisassemblerInsn "sar" for 0x400a8f>, <DisassemblerInsn "movsxd" for 0x400a92>, <DisassemblerInsn "mov" for 0x400a95>, <DisassemblerInsn "ror" for 0x400a98>, <DisassemblerInsn "ror" for 0x400a9c>, <DisassemblerInsn "ror" for 0x400a9f>, <DisassemblerInsn "shl" for 0x400aa3>, <DisassemblerInsn "mov" for 0x400aa5>, <DisassemblerInsn "shr" for 0x400aac>, <DisassemblerInsn "mov" for 0x400aaf>, <DisassemblerInsn "add" for 0x400ab2>, <DisassemblerInsn "shl" for 0x400ab6>, <DisassemblerInsn "sar" for 0x400ab9>, <DisassemblerInsn "movsxd" for 0x400abd>, <DisassemblerInsn "mov" for 0x400ac0>, <DisassemblerInsn "ror" for 0x400ac4>, <DisassemblerInsn "ror" for 0x400ac8>, <DisassemblerInsn "ror" for 0x400acb>, <DisassemblerInsn "shl" for 0x400acf>, <DisassemblerInsn "mov" for 0x400ad1>, <DisassemblerInsn "shr" for 0x400ad9>, <DisassemblerInsn "add" for 0x400adc>, <DisassemblerInsn "mov" for 0x400adf>, <DisassemblerInsn "mov" for 0x400ae6>, <DisassemblerInsn "or" for 0x400ae8>, <DisassemblerInsn "mov" for 0x400aea>, <DisassemblerInsn "shl" for 0x400af1>, <DisassemblerInsn "mov" for 0x400af4>, <DisassemblerInsn "add" for 0x400afb>, <DisassemblerInsn "mov" for 0x400afd>, <DisassemblerInsn "mov" for 0x400aff>, <DisassemblerInsn "cmp" for 0x400b06>, <DisassemblerInsn "jle" for 0x400b08>]'}, {'block_Idx': 410, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402a24>, <DisassemblerInsn "mov" for 0x402a2c>, <DisassemblerInsn "mov" for 0x402a34>, <DisassemblerInsn "mov" for 0x402a3b>, <DisassemblerInsn "mov" for 0x402a42>, <DisassemblerInsn "mov" for 0x402a4a>, <DisassemblerInsn "add" for 0x402a51>, <DisassemblerInsn "add" for 0x402a54>, <DisassemblerInsn "add" for 0x402a57>, <DisassemblerInsn "add" for 0x402a59>, <DisassemblerInsn "mov" for 0x402a5b>, <DisassemblerInsn "jmp" for 0x402a5e>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403737>, <DisassemblerInsn "mov" for 0x40373b>, <DisassemblerInsn "mov" for 0x403743>, <DisassemblerInsn "add" for 0x403746>, <DisassemblerInsn "mov" for 0x40374d>, <DisassemblerInsn "mov" for 0x403752>, <DisassemblerInsn "mov" for 0x403758>, <DisassemblerInsn "cmp" for 0x40375c>, <DisassemblerInsn "mov" for 0x40375f>, <DisassemblerInsn "je" for 0x403766>]'}, {'block_Idx': 312, 'blockInsts': '[<DisassemblerInsn "sub" for 0x4048c0>, <DisassemblerInsn "mov" for 0x4048c7>, <DisassemblerInsn "mov" for 0x4048ce>, <DisassemblerInsn "mov" for 0x4048d5>, <DisassemblerInsn "mov" for 0x4048dd>, <DisassemblerInsn "add" for 0x4048e0>, <DisassemblerInsn "mov" for 0x4048e4>, <DisassemblerInsn "mov" for 0x4048ec>, <DisassemblerInsn "mov" for 0x4048ef>, <DisassemblerInsn "mov" for 0x4048f6>, <DisassemblerInsn "mov" for 0x4048fa>, <DisassemblerInsn "mov" for 0x404902>, <DisassemblerInsn "sar" for 0x404904>, <DisassemblerInsn "movsxd" for 0x404907>, <DisassemblerInsn "mov" for 0x40490a>, <DisassemblerInsn "ror" for 0x40490d>, <DisassemblerInsn "ror" for 0x404911>, <DisassemblerInsn "ror" for 0x404914>, <DisassemblerInsn "and" for 0x404918>, <DisassemblerInsn "shl" for 0x40491b>, <DisassemblerInsn "mov" for 0x40491d>, <DisassemblerInsn "shr" for 0x404924>, <DisassemblerInsn "mov" for 0x404927>, <DisassemblerInsn "add" for 0x40492e>, <DisassemblerInsn "mov" for 0x404931>, <DisassemblerInsn "mov" for 0x404938>, <DisassemblerInsn "cmp" for 0x40493b>, <DisassemblerInsn "jle" for 0x40493e>]'}, {'block_Idx': 368, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4028da>, <DisassemblerInsn "mov" for 0x4028e2>, <DisassemblerInsn "mov" for 0x4028e9>, <DisassemblerInsn "mov" for 0x4028f1>, <DisassemblerInsn "mov" for 0x4028f9>, <DisassemblerInsn "add" for 0x402901>, <DisassemblerInsn "mov" for 0x402904>, <DisassemblerInsn "mov" for 0x40290b>, <DisassemblerInsn "add" for 0x40290e>, <DisassemblerInsn "mov" for 0x402912>, <DisassemblerInsn "add" for 0x40291a>, <DisassemblerInsn "mov" for 0x40291e>, <DisassemblerInsn "cmp" for 0x402926>, <DisassemblerInsn "mov" for 0x402929>, <DisassemblerInsn "mov" for 0x402931>, <DisassemblerInsn "mov" for 0x402938>, <DisassemblerInsn "je" for 0x402940>]'}, {'block_Idx': 255, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fce>, <DisassemblerInsn "mov" for 0x401fd5>, <DisassemblerInsn "mov" for 0x401fdd>, <DisassemblerInsn "mov" for 0x401fe5>, <DisassemblerInsn "call" for 0x401fe7>]'}, {'block_Idx': 155, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ce1>, <DisassemblerInsn "lea" for 0x402ce9>, <DisassemblerInsn "movsxd" for 0x402cf0>, <DisassemblerInsn "add" for 0x402cf4>, <DisassemblerInsn "jmp" for 0x402cf7>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400baa>, <DisassemblerInsn "mov" for 0x400bb2>, <DisassemblerInsn "mov" for 0x400bb9>, <DisassemblerInsn "mov" for 0x400bc1>, <DisassemblerInsn "mov" for 0x400bc4>, <DisassemblerInsn "cdq" for 0x400bc9>, <DisassemblerInsn "idiv" for 0x400bca>, <DisassemblerInsn "mov" for 0x400bcc>, <DisassemblerInsn "cdqe" for 0x400bd4>, <DisassemblerInsn "add" for 0x400bd6>, <DisassemblerInsn "call" for 0x400bd9>]'}, {'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "push" for 0x4004e0>, <DisassemblerInsn "sub" for 0x4004e1>, <DisassemblerInsn "mov" for 0x4004e8>, <DisassemblerInsn "mov" for 0x4004f0>, <DisassemblerInsn "mov" for 0x4004f8>, <DisassemblerInsn "mov" for 0x400500>, <DisassemblerInsn "mov" for 0x400507>, <DisassemblerInsn "mov" for 0x40050f>, <DisassemblerInsn "mov" for 0x400512>, <DisassemblerInsn "mov" for 0x40051a>, <DisassemblerInsn "mov" for 0x400522>, <DisassemblerInsn "mov" for 0x400524>, <DisassemblerInsn "mov" for 0x40052b>, <DisassemblerInsn "mov" for 0x400531>, <DisassemblerInsn "add" for 0x400534>, <DisassemblerInsn "mov" for 0x400538>, <DisassemblerInsn "mov" for 0x400540>, <DisassemblerInsn "cmp" for 0x400543>, <DisassemblerInsn "mov" for 0x400546>, <DisassemblerInsn "jne" for 0x40054d>]'}, {'block_Idx': 193, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40355a>, <DisassemblerInsn "mov" for 0x403562>, <DisassemblerInsn "mov" for 0x40356a>, <DisassemblerInsn "mov" for 0x40356f>, <DisassemblerInsn "mov" for 0x403574>, <DisassemblerInsn "mov" for 0x403579>, <DisassemblerInsn "mov" for 0x40357e>, <DisassemblerInsn "mov" for 0x403583>, <DisassemblerInsn "mov" for 0x40358b>, <DisassemblerInsn "mov" for 0x403590>, <DisassemblerInsn "mov" for 0x403595>, <DisassemblerInsn "mov" for 0x40359a>, <DisassemblerInsn "mov" for 0x40359f>, <DisassemblerInsn "mov" for 0x4035a2>, <DisassemblerInsn "mov" for 0x4035a5>, <DisassemblerInsn "mov" for 0x4035a7>, <DisassemblerInsn "sar" for 0x4035a9>, <DisassemblerInsn "sub" for 0x4035ab>, <DisassemblerInsn "mov" for 0x4035ad>, <DisassemblerInsn "add" for 0x4035b1>, <DisassemblerInsn "mov" for 0x4035b3>, <DisassemblerInsn "mov" for 0x4035b5>, <DisassemblerInsn "shl" for 0x4035b9>, <DisassemblerInsn "mov" for 0x4035bb>, <DisassemblerInsn "cmp" for 0x4035bf>, <DisassemblerInsn "je" for 0x4035c2>]'}, {'block_Idx': 326, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40237b>, <DisassemblerInsn "cmp" for 0x402382>, <DisassemblerInsn "jle" for 0x402385>]'}, {'block_Idx': 225, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4019c3>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4035c4>, <DisassemblerInsn "mov" for 0x4035cc>, <DisassemblerInsn "mov" for 0x4035d1>, <DisassemblerInsn "mov" for 0x4035d5>, <DisassemblerInsn "mov" for 0x4035dd>, <DisassemblerInsn "mov" for 0x4035e1>, <DisassemblerInsn "mov" for 0x4035e3>, <DisassemblerInsn "shl" for 0x4035e5>, <DisassemblerInsn "mov" for 0x4035e7>, <DisassemblerInsn "mov" for 0x4035ec>, <DisassemblerInsn "add" for 0x4035ef>, <DisassemblerInsn "mov" for 0x4035f3>, <DisassemblerInsn "mov" for 0x4035f6>, <DisassemblerInsn "mov" for 0x4035f8>, <DisassemblerInsn "mov" for 0x4035fc>, <DisassemblerInsn "mov" for 0x403601>, <DisassemblerInsn "jmp" for 0x403606>]'}, {'block_Idx': 374, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40281b>, <DisassemblerInsn "mov" for 0x402822>, <DisassemblerInsn "mov" for 0x40282a>, <DisassemblerInsn "xor" for 0x40282d>, <DisassemblerInsn "lea" for 0x40282f>, <DisassemblerInsn "mov" for 0x402836>, <DisassemblerInsn "call" for 0x402838>]'}, {'block_Idx': 114, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013f7>, <DisassemblerInsn "cmp" for 0x4013fe>, <DisassemblerInsn "jge" for 0x401401>]'}, {'block_Idx': 226, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d8d>, <DisassemblerInsn "add" for 0x401d94>, <DisassemblerInsn "cmp" for 0x401d97>, <DisassemblerInsn "jae" for 0x401d9a>]'}, {'block_Idx': 91, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40122d>, <DisassemblerInsn "xor" for 0x401235>, <DisassemblerInsn "lea" for 0x401237>, <DisassemblerInsn "mov" for 0x40123e>, <DisassemblerInsn "call" for 0x401240>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40063c>, <DisassemblerInsn "mov" for 0x400643>, <DisassemblerInsn "mov" for 0x40064a>, <DisassemblerInsn "xor" for 0x400651>, <DisassemblerInsn "sub" for 0x400653>, <DisassemblerInsn "cmovb" for 0x400655>, <DisassemblerInsn "cmp" for 0x400658>, <DisassemblerInsn "cmovb" for 0x40065a>, <DisassemblerInsn "mov" for 0x40065d>, <DisassemblerInsn "mov" for 0x400664>, <DisassemblerInsn "mov" for 0x40066b>, <DisassemblerInsn "mov" for 0x400672>, <DisassemblerInsn "mov" for 0x400679>, <DisassemblerInsn "add" for 0x40067b>, <DisassemblerInsn "mov" for 0x40067d>, <DisassemblerInsn "mov" for 0x400684>, <DisassemblerInsn "cmp" for 0x400689>, <DisassemblerInsn "mov" for 0x40068b>, <DisassemblerInsn "jb" for 0x400692>]'}, {'block_Idx': 411, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4026e5>, <DisassemblerInsn "mov" for 0x4026ed>, <DisassemblerInsn "mov" for 0x4026f4>, <DisassemblerInsn "mov" for 0x4026fc>, <DisassemblerInsn "mov" for 0x402703>, <DisassemblerInsn "mov" for 0x40270a>, <DisassemblerInsn "mov" for 0x402712>, <DisassemblerInsn "mov" for 0x40271a>, <DisassemblerInsn "add" for 0x402722>, <DisassemblerInsn "mov" for 0x402726>, <DisassemblerInsn "mov" for 0x40272d>, <DisassemblerInsn "add" for 0x40272f>, <DisassemblerInsn "mov" for 0x402731>, <DisassemblerInsn "mov" for 0x402738>, <DisassemblerInsn "add" for 0x40273a>, <DisassemblerInsn "mov" for 0x40273d>, <DisassemblerInsn "mov" for 0x402744>, <DisassemblerInsn "add" for 0x402746>, <DisassemblerInsn "mov" for 0x402748>, <DisassemblerInsn "mov" for 0x40274f>, <DisassemblerInsn "mov" for 0x402753>, <DisassemblerInsn "or" for 0x402756>, <DisassemblerInsn "mov" for 0x40275a>, <DisassemblerInsn "add" for 0x402762>, <DisassemblerInsn "mov" for 0x402766>, <DisassemblerInsn "mov" for 0x40276d>, <DisassemblerInsn "add" for 0x40276f>, <DisassemblerInsn "mov" for 0x402771>, <DisassemblerInsn "mov" for 0x402778>, <DisassemblerInsn "add" for 0x40277a>, <DisassemblerInsn "mov" for 0x40277c>, <DisassemblerInsn "mov" for 0x402783>, <DisassemblerInsn "add" for 0x402785>, <DisassemblerInsn "mov" for 0x402787>, <DisassemblerInsn "mov" for 0x40278e>, <DisassemblerInsn "add" for 0x402792>, <DisassemblerInsn "mov" for 0x402796>, <DisassemblerInsn "add" for 0x40279e>, <DisassemblerInsn "mov" for 0x4027a2>, <DisassemblerInsn "cmp" for 0x4027aa>, <DisassemblerInsn "mov" for 0x4027ad>, <DisassemblerInsn "mov" for 0x4027b0>, <DisassemblerInsn "mov" for 0x4027b8>, <DisassemblerInsn "mov" for 0x4027bb>, <DisassemblerInsn "mov" for 0x4027c3>, <DisassemblerInsn "mov" for 0x4027c6>, <DisassemblerInsn "mov" for 0x4027ce>, <DisassemblerInsn "mov" for 0x4027d1>, <DisassemblerInsn "mov" for 0x4027d9>, <DisassemblerInsn "mov" for 0x4027dc>, <DisassemblerInsn "mov" for 0x4027e4>, <DisassemblerInsn "mov" for 0x4027ec>, <DisassemblerInsn "mov" for 0x4027f4>, <DisassemblerInsn "mov" for 0x4027fb>, <DisassemblerInsn "mov" for 0x402802>, <DisassemblerInsn "mov" for 0x402809>, <DisassemblerInsn "je" for 0x402810>]'}, {'block_Idx': 27, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e1f>, <DisassemblerInsn "mov" for 0x400e27>, <DisassemblerInsn "add" for 0x400e2e>, <DisassemblerInsn "sub" for 0x400e31>, <DisassemblerInsn "setb" for 0x400e34>, <DisassemblerInsn "mov" for 0x400e37>, <DisassemblerInsn "mov" for 0x400e3a>, <DisassemblerInsn "sub" for 0x400e3c>, <DisassemblerInsn "sete" for 0x400e3f>, <DisassemblerInsn "and" for 0x400e42>, <DisassemblerInsn "test" for 0x400e44>, <DisassemblerInsn "mov" for 0x400e47>, <DisassemblerInsn "jne" for 0x400e4e>]'}, {'block_Idx': 41, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c96>, <DisassemblerInsn "mov" for 0x400c9e>, <DisassemblerInsn "mov" for 0x400ca5>, <DisassemblerInsn "mov" for 0x400ca7>, <DisassemblerInsn "mov" for 0x400cae>, <DisassemblerInsn "cdq" for 0x400cb3>, <DisassemblerInsn "idiv" for 0x400cb4>, <DisassemblerInsn "add" for 0x400cb6>, <DisassemblerInsn "cmp" for 0x400cb9>, <DisassemblerInsn "jge" for 0x400cbb>]'}, {'block_Idx': 223, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b34>, <DisassemblerInsn "cmp" for 0x402b3b>, <DisassemblerInsn "je" for 0x402b3e>]'}, {'block_Idx': 409, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4026e0>]'}, {'block_Idx': 177, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d77>, <DisassemblerInsn "mov" for 0x402d7e>, <DisassemblerInsn "mov" for 0x402d85>, <DisassemblerInsn "mov" for 0x402d8c>, <DisassemblerInsn "mov" for 0x402d94>, <DisassemblerInsn "mov" for 0x402d9c>, <DisassemblerInsn "mov" for 0x402da4>, <DisassemblerInsn "xor" for 0x402dac>, <DisassemblerInsn "cmp" for 0x402daf>, <DisassemblerInsn "mov" for 0x402db2>, <DisassemblerInsn "mov" for 0x402db5>, <DisassemblerInsn "mov" for 0x402dbd>, <DisassemblerInsn "mov" for 0x402dc5>, <DisassemblerInsn "mov" for 0x402dc8>, <DisassemblerInsn "mov" for 0x402dd0>, <DisassemblerInsn "mov" for 0x402dd3>, <DisassemblerInsn "mov" for 0x402ddb>, <DisassemblerInsn "mov" for 0x402de2>, <DisassemblerInsn "mov" for 0x402de9>, <DisassemblerInsn "mov" for 0x402df0>, <DisassemblerInsn "mov" for 0x402df8>, <DisassemblerInsn "jle" for 0x402e00>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f2b>, <DisassemblerInsn "mov" for 0x400f32>, <DisassemblerInsn "mov" for 0x400f3a>, <DisassemblerInsn "xor" for 0x400f3e>, <DisassemblerInsn "lea" for 0x400f40>, <DisassemblerInsn "mov" for 0x400f47>, <DisassemblerInsn "call" for 0x400f49>]'}, {'block_Idx': 88, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4011c5>]'}, {'block_Idx': 281, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x402010>, <DisassemblerInsn "jl" for 0x402013>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40072b>, <DisassemblerInsn "mov" for 0x400733>, <DisassemblerInsn "mov" for 0x40073b>, <DisassemblerInsn "mov" for 0x400742>, <DisassemblerInsn "call" for 0x400749>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b81>, <DisassemblerInsn "cmp" for 0x400b88>, <DisassemblerInsn "je" for 0x400b8b>]'}, {'block_Idx': 167, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40171e>]'}, {'block_Idx': 68, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d79>]'}, {'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40120c>]'}, {'block_Idx': 250, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c36>, <DisassemblerInsn "mov" for 0x401c3d>, <DisassemblerInsn "mov" for 0x401c44>, <DisassemblerInsn "mov" for 0x401c4b>, <DisassemblerInsn "xor" for 0x401c4e>, <DisassemblerInsn "sub" for 0x401c50>, <DisassemblerInsn "shr" for 0x401c53>, <DisassemblerInsn "mov" for 0x401c55>, <DisassemblerInsn "add" for 0x401c5d>, <DisassemblerInsn "mov" for 0x401c5f>, <DisassemblerInsn "mov" for 0x401c61>, <DisassemblerInsn "jmp" for 0x401c68>]'}, {'block_Idx': 290, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402019>]'}, {'block_Idx': 237, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019d6>, <DisassemblerInsn "mov" for 0x4019dd>, <DisassemblerInsn "mov" for 0x4019e4>, <DisassemblerInsn "mov" for 0x4019ec>, <DisassemblerInsn "add" for 0x4019f4>, <DisassemblerInsn "shl" for 0x4019f8>, <DisassemblerInsn "add" for 0x4019fc>, <DisassemblerInsn "mov" for 0x4019ff>, <DisassemblerInsn "xor" for 0x401a07>, <DisassemblerInsn "mov" for 0x401a09>, <DisassemblerInsn "mov" for 0x401a10>, <DisassemblerInsn "mov" for 0x401a17>, <DisassemblerInsn "jmp" for 0x401a1f>]'}, {'block_Idx': 221, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4019a1>]'}, {'block_Idx': 162, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403286>, <DisassemblerInsn "cmp" for 0x40328d>, <DisassemblerInsn "jne" for 0x403290>]'}, {'block_Idx': 169, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40173d>]'}, {'block_Idx': 236, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b4d>, <DisassemblerInsn "mov" for 0x402b55>, <DisassemblerInsn "mov" for 0x402b5d>, <DisassemblerInsn "mov" for 0x402b62>, <DisassemblerInsn "xor" for 0x402b6a>, <DisassemblerInsn "mov" for 0x402b6c>, <DisassemblerInsn "mov" for 0x402b74>, <DisassemblerInsn "mov" for 0x402b7c>, <DisassemblerInsn "mov" for 0x402b84>, <DisassemblerInsn "mov" for 0x402b8b>, <DisassemblerInsn "shl" for 0x402b8e>, <DisassemblerInsn "mov" for 0x402b90>, <DisassemblerInsn "mov" for 0x402b98>, <DisassemblerInsn "mov" for 0x402b9f>, <DisassemblerInsn "add" for 0x402ba2>, <DisassemblerInsn "mov" for 0x402ba6>, <DisassemblerInsn "movsxd" for 0x402bae>, <DisassemblerInsn "cmp" for 0x402bb1>, <DisassemblerInsn "mov" for 0x402bb4>, <DisassemblerInsn "jl" for 0x402bbc>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c1a>, <DisassemblerInsn "mov" for 0x400c21>, <DisassemblerInsn "shr" for 0x400c26>, <DisassemblerInsn "mov" for 0x400c28>, <DisassemblerInsn "and" for 0x400c2f>, <DisassemblerInsn "cmp" for 0x400c31>, <DisassemblerInsn "jne" for 0x400c34>]'}, {'block_Idx': 124, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40143d>]'}, {'block_Idx': 215, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403647>, <DisassemblerInsn "mov" for 0x40364c>, <DisassemblerInsn "mov" for 0x403650>, <DisassemblerInsn "mov" for 0x403655>, <DisassemblerInsn "add" for 0x40365a>, <DisassemblerInsn "movsxd" for 0x40365e>, <DisassemblerInsn "cmp" for 0x403661>, <DisassemblerInsn "mov" for 0x403664>, <DisassemblerInsn "mov" for 0x403666>, <DisassemblerInsn "mov" for 0x40366a>, <DisassemblerInsn "mov" for 0x40366f>, <DisassemblerInsn "mov" for 0x403674>, <DisassemblerInsn "mov" for 0x40367c>, <DisassemblerInsn "jl" for 0x403683>]'}, {'block_Idx': 64, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40102a>, <DisassemblerInsn "xor" for 0x401032>, <DisassemblerInsn "lea" for 0x401034>, <DisassemblerInsn "mov" for 0x40103b>, <DisassemblerInsn "call" for 0x40103d>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008d8>, <DisassemblerInsn "mov" for 0x4008e0>, <DisassemblerInsn "mov" for 0x4008e7>, <DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f6>, <DisassemblerInsn "mov" for 0x4008fd>, <DisassemblerInsn "mov" for 0x400904>, <DisassemblerInsn "shl" for 0x400906>, <DisassemblerInsn "xor" for 0x400909>, <DisassemblerInsn "cmp" for 0x40090b>, <DisassemblerInsn "cmovl" for 0x40090e>, <DisassemblerInsn "mov" for 0x400912>, <DisassemblerInsn "xor" for 0x40091a>, <DisassemblerInsn "cmp" for 0x40091c>, <DisassemblerInsn "cmovl" for 0x40091f>, <DisassemblerInsn "xor" for 0x400922>, <DisassemblerInsn "cmp" for 0x400924>, <DisassemblerInsn "cmovl" for 0x400927>, <DisassemblerInsn "mov" for 0x40092a>, <DisassemblerInsn "add" for 0x40092d>, <DisassemblerInsn "mov" for 0x400931>, <DisassemblerInsn "mov" for 0x400939>, <DisassemblerInsn "mov" for 0x40093d>, <DisassemblerInsn "add" for 0x400940>, <DisassemblerInsn "mov" for 0x400944>, <DisassemblerInsn "mov" for 0x40094c>, <DisassemblerInsn "mov" for 0x40094f>, <DisassemblerInsn "mov" for 0x400951>, <DisassemblerInsn "mov" for 0x400953>, <DisassemblerInsn "add" for 0x400956>, <DisassemblerInsn "mov" for 0x400959>, <DisassemblerInsn "add" for 0x40095c>, <DisassemblerInsn "mov" for 0x400960>, <DisassemblerInsn "mov" for 0x400968>, <DisassemblerInsn "mov" for 0x40096c>, <DisassemblerInsn "add" for 0x40096f>, <DisassemblerInsn "mov" for 0x400973>, <DisassemblerInsn "mov" for 0x40097b>, <DisassemblerInsn "mov" for 0x400982>, <DisassemblerInsn "ror" for 0x400984>, <DisassemblerInsn "ror" for 0x400988>, <DisassemblerInsn "ror" for 0x40098b>, <DisassemblerInsn "shr" for 0x40098f>, <DisassemblerInsn "mov" for 0x400992>, <DisassemblerInsn "shl" for 0x400999>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "ror" for 0x40099f>, <DisassemblerInsn "ror" for 0x4009a3>, <DisassemblerInsn "ror" for 0x4009a6>, <DisassemblerInsn "mov" for 0x4009aa>, <DisassemblerInsn "shr" for 0x4009b1>, <DisassemblerInsn "or" for 0x4009b4>, <DisassemblerInsn "cmp" for 0x4009b6>, <DisassemblerInsn "jne" for 0x4009bb>]'}, {'block_Idx': 163, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4034c3>, <DisassemblerInsn "cmp" for 0x4034ca>, <DisassemblerInsn "jne" for 0x4034cd>]'}, {'block_Idx': 437, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40287b>]'}, {'block_Idx': 46, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c05>, <DisassemblerInsn "mov" for 0x400c0d>, <DisassemblerInsn "mov" for 0x400c14>, <DisassemblerInsn "add" for 0x400c16>, <DisassemblerInsn "mov" for 0x400c18>, <DisassemblerInsn "mov" for 0x400c1a>, <DisassemblerInsn "mov" for 0x400c21>, <DisassemblerInsn "shr" for 0x400c26>, <DisassemblerInsn "mov" for 0x400c28>, <DisassemblerInsn "and" for 0x400c2f>, <DisassemblerInsn "cmp" for 0x400c31>, <DisassemblerInsn "jne" for 0x400c34>]'}, {'block_Idx': 145, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014f9>, <DisassemblerInsn "mov" for 0x401500>, <DisassemblerInsn "mov" for 0x401508>, <DisassemblerInsn "sar" for 0x40150a>, <DisassemblerInsn "movsxd" for 0x40150d>, <DisassemblerInsn "mov" for 0x401510>, <DisassemblerInsn "ror" for 0x401513>, <DisassemblerInsn "ror" for 0x401517>, <DisassemblerInsn "ror" for 0x40151a>, <DisassemblerInsn "and" for 0x40151e>, <DisassemblerInsn "shl" for 0x401521>, <DisassemblerInsn "mov" for 0x401523>, <DisassemblerInsn "shr" for 0x40152a>, <DisassemblerInsn "add" for 0x40152d>, <DisassemblerInsn "imul" for 0x401530>, <DisassemblerInsn "mov" for 0x401533>, <DisassemblerInsn "mov" for 0x40153a>, <DisassemblerInsn "jmp" for 0x401541>]'}, {'block_Idx': 106, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40129d>, <DisassemblerInsn "mov" for 0x4012a5>, <DisassemblerInsn "mov" for 0x4012ac>, <DisassemblerInsn "mov" for 0x4012b4>, <DisassemblerInsn "shr" for 0x4012bc>, <DisassemblerInsn "and" for 0x4012c0>, <DisassemblerInsn "mov" for 0x4012c7>, <DisassemblerInsn "ror" for 0x4012ca>, <DisassemblerInsn "ror" for 0x4012ce>, <DisassemblerInsn "ror" for 0x4012d1>, <DisassemblerInsn "shr" for 0x4012d5>, <DisassemblerInsn "add" for 0x4012d8>, <DisassemblerInsn "mov" for 0x4012db>, <DisassemblerInsn "add" for 0x4012dd>, <DisassemblerInsn "mov" for 0x4012e0>, <DisassemblerInsn "mov" for 0x4012e7>, <DisassemblerInsn "jmp" for 0x4012ee>]'}, {'block_Idx': 85, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4011fc>]'}, {'block_Idx': 54, 'blockInsts': '[<DisassemblerInsn "sub" for 0x400110>, <DisassemblerInsn "mov" for 0x400114>, <DisassemblerInsn "mov" for 0x400119>, <DisassemblerInsn "mov" for 0x40011e>, <DisassemblerInsn "mov" for 0x400123>, <DisassemblerInsn "ror" for 0x400126>, <DisassemblerInsn "ror" for 0x40012a>, <DisassemblerInsn "ror" for 0x40012d>, <DisassemblerInsn "shr" for 0x400131>, <DisassemblerInsn "mov" for 0x400134>, <DisassemblerInsn "mov" for 0x400138>, <DisassemblerInsn "cmp" for 0x40013a>, <DisassemblerInsn "jge" for 0x40013d>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c63>, <DisassemblerInsn "and" for 0x400c6a>, <DisassemblerInsn "cmp" for 0x400c6f>, <DisassemblerInsn "je" for 0x400c74>]'}, {'block_Idx': 228, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b40>, <DisassemblerInsn "cmp" for 0x402b48>, <DisassemblerInsn "jle" for 0x402b4b>]'}, {'block_Idx': 192, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40332c>, <DisassemblerInsn "mov" for 0x403334>, <DisassemblerInsn "mov" for 0x40333c>, <DisassemblerInsn "mov" for 0x403344>, <DisassemblerInsn "mov" for 0x40334c>, <DisassemblerInsn "mov" for 0x403354>, <DisassemblerInsn "mov" for 0x40335c>, <DisassemblerInsn "mov" for 0x403364>, <DisassemblerInsn "mov" for 0x40336c>, <DisassemblerInsn "mov" for 0x403374>, <DisassemblerInsn "mov" for 0x40337c>, <DisassemblerInsn "mov" for 0x403384>, <DisassemblerInsn "mov" for 0x40338c>, <DisassemblerInsn "mov" for 0x40338f>, <DisassemblerInsn "mov" for 0x403392>, <DisassemblerInsn "mov" for 0x403399>, <DisassemblerInsn "add" for 0x40339b>, <DisassemblerInsn "mov" for 0x40339d>, <DisassemblerInsn "mov" for 0x40339f>, <DisassemblerInsn "shl" for 0x4033a6>, <DisassemblerInsn "mov" for 0x4033a8>, <DisassemblerInsn "cmp" for 0x4033af>, <DisassemblerInsn "je" for 0x4033b2>]'}, {'block_Idx': 355, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023da>, <DisassemblerInsn "mov" for 0x4023e1>, <DisassemblerInsn "and" for 0x4023e9>, <DisassemblerInsn "mov" for 0x4023ed>, <DisassemblerInsn "mov" for 0x4023f5>, <DisassemblerInsn "xor" for 0x4023fa>, <DisassemblerInsn "mov" for 0x4023fc>, <DisassemblerInsn "mov" for 0x402404>, <DisassemblerInsn "mov" for 0x40240b>, <DisassemblerInsn "mov" for 0x402413>, <DisassemblerInsn "mov" for 0x40241b>, <DisassemblerInsn "mov" for 0x402422>, <DisassemblerInsn "mov" for 0x40242a>, <DisassemblerInsn "mov" for 0x402432>, <DisassemblerInsn "mov" for 0x40243a>, <DisassemblerInsn "add" for 0x402442>, <DisassemblerInsn "mov" for 0x402445>, <DisassemblerInsn "mov" for 0x40244c>, <DisassemblerInsn "add" for 0x40244f>, <DisassemblerInsn "mov" for 0x402453>, <DisassemblerInsn "mov" for 0x40245a>, <DisassemblerInsn "add" for 0x40245e>, <DisassemblerInsn "mov" for 0x402462>, <DisassemblerInsn "mov" for 0x402469>, <DisassemblerInsn "add" for 0x40246d>, <DisassemblerInsn "mov" for 0x402471>, <DisassemblerInsn "mov" for 0x402478>, <DisassemblerInsn "add" for 0x40247c>, <DisassemblerInsn "mov" for 0x402480>, <DisassemblerInsn "add" for 0x402488>, <DisassemblerInsn "mov" for 0x40248c>, <DisassemblerInsn "cmp" for 0x402494>, <DisassemblerInsn "mov" for 0x402497>, <DisassemblerInsn "mov" for 0x40249a>, <DisassemblerInsn "mov" for 0x4024a2>, <DisassemblerInsn "mov" for 0x4024a4>, <DisassemblerInsn "mov" for 0x4024ab>, <DisassemblerInsn "mov" for 0x4024b3>, <DisassemblerInsn "mov" for 0x4024bb>, <DisassemblerInsn "je" for 0x4024c2>]'}, {'block_Idx': 211, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4019b1>]'}, {'block_Idx': 1, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400553>, <DisassemblerInsn "mov" for 0x40055a>, <DisassemblerInsn "mov" for 0x400562>, <DisassemblerInsn "mov" for 0x40056a>, <DisassemblerInsn "cmp" for 0x40056f>, <DisassemblerInsn "cmovg" for 0x400572>, <DisassemblerInsn "mov" for 0x400575>, <DisassemblerInsn "mov" for 0x400577>, <DisassemblerInsn "add" for 0x40057e>, <DisassemblerInsn "call" for 0x400585>]'}, {'block_Idx': 179, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017e9>, <DisassemblerInsn "mov" for 0x4017f1>, <DisassemblerInsn "mov" for 0x4017f8>, <DisassemblerInsn "mov" for 0x401800>, <DisassemblerInsn "mov" for 0x401807>, <DisassemblerInsn "sar" for 0x401809>, <DisassemblerInsn "movsxd" for 0x40180c>, <DisassemblerInsn "mov" for 0x40180f>, <DisassemblerInsn "ror" for 0x401812>, <DisassemblerInsn "ror" for 0x401816>, <DisassemblerInsn "ror" for 0x401819>, <DisassemblerInsn "and" for 0x40181d>, <DisassemblerInsn "shl" for 0x401820>, <DisassemblerInsn "mov" for 0x401822>, <DisassemblerInsn "shr" for 0x401824>, <DisassemblerInsn "mov" for 0x401827>, <DisassemblerInsn "mov" for 0x40182e>, <DisassemblerInsn "add" for 0x401830>, <DisassemblerInsn "mov" for 0x401833>, <DisassemblerInsn "mov" for 0x401835>, <DisassemblerInsn "sar" for 0x401837>, <DisassemblerInsn "movsxd" for 0x40183a>, <DisassemblerInsn "mov" for 0x40183d>, <DisassemblerInsn "and" for 0x401840>, <DisassemblerInsn "movzx" for 0x401843>, <DisassemblerInsn "add" for 0x401846>, <DisassemblerInsn "mov" for 0x401849>, <DisassemblerInsn "mov" for 0x40184b>, <DisassemblerInsn "shr" for 0x401850>, <DisassemblerInsn "mov" for 0x401852>, <DisassemblerInsn "and" for 0x401859>, <DisassemblerInsn "xor" for 0x40185b>, <DisassemblerInsn "mov" for 0x40185d>, <DisassemblerInsn "cmp" for 0x401862>, <DisassemblerInsn "mov" for 0x401865>, <DisassemblerInsn "mov" for 0x401867>, <DisassemblerInsn "mov" for 0x40186e>, <DisassemblerInsn "mov" for 0x401875>, <DisassemblerInsn "mov" for 0x40187c>, <DisassemblerInsn "mov" for 0x401883>, <DisassemblerInsn "je" for 0x40188a>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d7e>, <DisassemblerInsn "mov" for 0x400d86>, <DisassemblerInsn "mov" for 0x400d8e>, <DisassemblerInsn "mov" for 0x400d95>, <DisassemblerInsn "shr" for 0x400d97>, <DisassemblerInsn "mov" for 0x400d9a>, <DisassemblerInsn "shl" for 0x400da1>, <DisassemblerInsn "shr" for 0x400da4>, <DisassemblerInsn "mov" for 0x400da7>, <DisassemblerInsn "mov" for 0x400dae>, <DisassemblerInsn "add" for 0x400db1>, <DisassemblerInsn "mov" for 0x400db5>, <DisassemblerInsn "mov" for 0x400dbd>, <DisassemblerInsn "ror" for 0x400dc0>, <DisassemblerInsn "ror" for 0x400dc4>, <DisassemblerInsn "ror" for 0x400dc7>, <DisassemblerInsn "mov" for 0x400dcb>, <DisassemblerInsn "shr" for 0x400dd2>, <DisassemblerInsn "mov" for 0x400dd5>, <DisassemblerInsn "mov" for 0x400ddc>, <DisassemblerInsn "cmp" for 0x400de2>, <DisassemblerInsn "jge" for 0x400de5>]'}, {'block_Idx': 95, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40120e>, <DisassemblerInsn "sub" for 0x401215>, <DisassemblerInsn "je" for 0x401218>]'}, {'block_Idx': 49, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ee4>, <DisassemblerInsn "add" for 0x400eec>, <DisassemblerInsn "mov" for 0x400ef0>, <DisassemblerInsn "jmp" for 0x400ef8>]'}, {'block_Idx': 238, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ff7>, <DisassemblerInsn "mov" for 0x401fff>, <DisassemblerInsn "mov" for 0x402007>, <DisassemblerInsn "xor" for 0x402009>, <DisassemblerInsn "call" for 0x40200b>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40058a>, <DisassemblerInsn "mov" for 0x400592>, <DisassemblerInsn "mov" for 0x40059a>, <DisassemblerInsn "mov" for 0x4005a1>, <DisassemblerInsn "mov" for 0x4005a4>, <DisassemblerInsn "mov" for 0x4005ac>, <DisassemblerInsn "mov" for 0x4005b3>, <DisassemblerInsn "xor" for 0x4005b5>, <DisassemblerInsn "cmp" for 0x4005b7>, <DisassemblerInsn "mov" for 0x4005ba>, <DisassemblerInsn "mov" for 0x4005c1>, <DisassemblerInsn "mov" for 0x4005c8>, <DisassemblerInsn "mov" for 0x4005cf>, <DisassemblerInsn "je" for 0x4005d7>]'}, {'block_Idx': 388, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40211c>, <DisassemblerInsn "mov" for 0x402123>, <DisassemblerInsn "mov" for 0x40212a>, <DisassemblerInsn "mov" for 0x402131>, <DisassemblerInsn "mov" for 0x402138>, <DisassemblerInsn "mov" for 0x402140>, <DisassemblerInsn "mov" for 0x402143>, <DisassemblerInsn "and" for 0x40214b>, <DisassemblerInsn "mov" for 0x40214f>, <DisassemblerInsn "mov" for 0x402157>, <DisassemblerInsn "cmp" for 0x40215c>, <DisassemblerInsn "mov" for 0x402160>, <DisassemblerInsn "mov" for 0x402168>, <DisassemblerInsn "mov" for 0x40216f>, <DisassemblerInsn "mov" for 0x402176>, <DisassemblerInsn "mov" for 0x40217d>, <DisassemblerInsn "je" for 0x402184>]'}, {'block_Idx': 174, 'blockInsts': '[<DisassemblerInsn "lea" for 0x40353b>, <DisassemblerInsn "lea" for 0x403542>, <DisassemblerInsn "mov" for 0x403549>, <DisassemblerInsn "lea" for 0x40354e>, <DisassemblerInsn "call" for 0x403555>]'}, {'block_Idx': 107, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401228>]'}, {'block_Idx': 229, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b91>, <DisassemblerInsn "mov" for 0x401b99>, <DisassemblerInsn "mov" for 0x401ba1>, <DisassemblerInsn "mov" for 0x401ba9>, <DisassemblerInsn "mov" for 0x401bb0>, <DisassemblerInsn "add" for 0x401bb3>, <DisassemblerInsn "mov" for 0x401bb7>, <DisassemblerInsn "movsxd" for 0x401bbf>, <DisassemblerInsn "cmp" for 0x401bc2>, <DisassemblerInsn "mov" for 0x401bc5>, <DisassemblerInsn "jl" for 0x401bcd>]'}, {'block_Idx': 358, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4020c2>, <DisassemblerInsn "mov" for 0x4020c9>, <DisassemblerInsn "mov" for 0x4020d0>, <DisassemblerInsn "mov" for 0x4020d7>, <DisassemblerInsn "mov" for 0x4020df>, <DisassemblerInsn "shl" for 0x4020e6>, <DisassemblerInsn "mov" for 0x4020e8>, <DisassemblerInsn "add" for 0x4020eb>, <DisassemblerInsn "mov" for 0x4020ef>, <DisassemblerInsn "mov" for 0x4020f2>, <DisassemblerInsn "add" for 0x4020f6>, <DisassemblerInsn "add" for 0x4020f8>, <DisassemblerInsn "sub" for 0x4020fa>, <DisassemblerInsn "mov" for 0x4020fc>, <DisassemblerInsn "cmp" for 0x402103>, <DisassemblerInsn "jne" for 0x402106>]'}, {'block_Idx': 227, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402bbe>, <DisassemblerInsn "mov" for 0x402bc6>, <DisassemblerInsn "add" for 0x402bce>, <DisassemblerInsn "mov" for 0x402bd2>, <DisassemblerInsn "mov" for 0x402bda>, <DisassemblerInsn "mov" for 0x402bdc>, <DisassemblerInsn "movsxd" for 0x402be3>, <DisassemblerInsn "cmp" for 0x402be6>, <DisassemblerInsn "jge" for 0x402be9>]'}, {'block_Idx': 222, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b2b>, <DisassemblerInsn "mov" for 0x401b33>, <DisassemblerInsn "mov" for 0x401b3a>, <DisassemblerInsn "mov" for 0x401b41>, <DisassemblerInsn "sub" for 0x401b46>, <DisassemblerInsn "mov" for 0x401b48>, <DisassemblerInsn "shl" for 0x401b4f>, <DisassemblerInsn "mov" for 0x401b51>, <DisassemblerInsn "sar" for 0x401b58>, <DisassemblerInsn "mov" for 0x401b5a>, <DisassemblerInsn "cmp" for 0x401b61>, <DisassemblerInsn "jle" for 0x401b64>]'}, {'block_Idx': 40, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e52>, <DisassemblerInsn "add" for 0x400e59>, <DisassemblerInsn "mov" for 0x400e5c>, <DisassemblerInsn "mov" for 0x400e61>, <DisassemblerInsn "mov" for 0x400e68>, <DisassemblerInsn "jmp" for 0x400e6f>]'}, {'block_Idx': 240, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402880>, <DisassemblerInsn "mov" for 0x402888>, <DisassemblerInsn "xor" for 0x40288b>, <DisassemblerInsn "lea" for 0x40288d>, <DisassemblerInsn "mov" for 0x402894>, <DisassemblerInsn "call" for 0x402896>]'}, {'block_Idx': 101, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401319>, <DisassemblerInsn "mov" for 0x401321>, <DisassemblerInsn "mov" for 0x401328>, <DisassemblerInsn "mov" for 0x40132f>, <DisassemblerInsn "mov" for 0x401336>, <DisassemblerInsn "mov" for 0x40133d>, <DisassemblerInsn "mov" for 0x40133f>, <DisassemblerInsn "cmp" for 0x401346>, <DisassemblerInsn "jle" for 0x401348>]'}, {'block_Idx': 172, 'blockInsts': '[<DisassemblerInsn "lea" for 0x40330d>, <DisassemblerInsn "lea" for 0x403314>, <DisassemblerInsn "mov" for 0x40331b>, <DisassemblerInsn "lea" for 0x403320>, <DisassemblerInsn "call" for 0x403327>]'}, {'block_Idx': 60, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d34>, <DisassemblerInsn "mov" for 0x400d3c>, <DisassemblerInsn "add" for 0x400d43>, <DisassemblerInsn "mov" for 0x400d46>, <DisassemblerInsn "mov" for 0x400d4d>, <DisassemblerInsn "mov" for 0x400d4f>, <DisassemblerInsn "cdq" for 0x400d54>, <DisassemblerInsn "idiv" for 0x400d55>, <DisassemblerInsn "mov" for 0x400d57>, <DisassemblerInsn "mov" for 0x400d5e>, <DisassemblerInsn "mov" for 0x400d60>, <DisassemblerInsn "add" for 0x400d67>, <DisassemblerInsn "cmp" for 0x400d6a>, <DisassemblerInsn "mov" for 0x400d6c>, <DisassemblerInsn "jl" for 0x400d73>]'}, {'block_Idx': 170, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401562>]'}, {'block_Idx': 19, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c7a>, <DisassemblerInsn "mov" for 0x400c82>, <DisassemblerInsn "xor" for 0x400c86>, <DisassemblerInsn "lea" for 0x400c88>, <DisassemblerInsn "mov" for 0x400c8f>, <DisassemblerInsn "call" for 0x400c91>]'}, {'block_Idx': 86, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401201>, <DisassemblerInsn "test" for 0x401208>, <DisassemblerInsn "je" for 0x40120a>]'}, {'block_Idx': 399, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4025e7>, <DisassemblerInsn "mov" for 0x4025ef>, <DisassemblerInsn "mov" for 0x4025f6>, <DisassemblerInsn "mov" for 0x4025fe>, <DisassemblerInsn "mov" for 0x402605>, <DisassemblerInsn "mov" for 0x40260d>, <DisassemblerInsn "mov" for 0x402615>, <DisassemblerInsn "add" for 0x40261d>, <DisassemblerInsn "mov" for 0x402621>, <DisassemblerInsn "mov" for 0x402628>, <DisassemblerInsn "add" for 0x40262a>, <DisassemblerInsn "mov" for 0x40262d>, <DisassemblerInsn "mov" for 0x402634>, <DisassemblerInsn "add" for 0x402637>, <DisassemblerInsn "mov" for 0x40263a>, <DisassemblerInsn "mov" for 0x402642>, <DisassemblerInsn "add" for 0x402646>, <DisassemblerInsn "mov" for 0x40264b>, <DisassemblerInsn "mov" for 0x402652>, <DisassemblerInsn "add" for 0x402654>, <DisassemblerInsn "mov" for 0x402656>, <DisassemblerInsn "mov" for 0x40265d>, <DisassemblerInsn "add" for 0x40265f>, <DisassemblerInsn "mov" for 0x402662>, <DisassemblerInsn "mov" for 0x402669>, <DisassemblerInsn "add" for 0x40266e>, <DisassemblerInsn "mov" for 0x402672>, <DisassemblerInsn "add" for 0x40267a>, <DisassemblerInsn "mov" for 0x40267e>, <DisassemblerInsn "cmp" for 0x402686>, <DisassemblerInsn "mov" for 0x402689>, <DisassemblerInsn "mov" for 0x40268c>, <DisassemblerInsn "mov" for 0x402694>, <DisassemblerInsn "mov" for 0x402697>, <DisassemblerInsn "mov" for 0x40269f>, <DisassemblerInsn "mov" for 0x4026a2>, <DisassemblerInsn "mov" for 0x4026aa>, <DisassemblerInsn "mov" for 0x4026ad>, <DisassemblerInsn "mov" for 0x4026b5>, <DisassemblerInsn "mov" for 0x4026bd>, <DisassemblerInsn "mov" for 0x4026c5>, <DisassemblerInsn "mov" for 0x4026cc>, <DisassemblerInsn "mov" for 0x4026d3>, <DisassemblerInsn "je" for 0x4026da>]'}, {'block_Idx': 157, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401704>, <DisassemblerInsn "mov" for 0x40170b>, <DisassemblerInsn "cmp" for 0x401712>, <DisassemblerInsn "mov" for 0x401715>, <DisassemblerInsn "je" for 0x40171c>]'}, {'block_Idx': 341, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402080>, <DisassemblerInsn "mov" for 0x402087>, <DisassemblerInsn "mov" for 0x40208f>, <DisassemblerInsn "mov" for 0x402096>, <DisassemblerInsn "sub" for 0x40209d>, <DisassemblerInsn "mov" for 0x40209f>, <DisassemblerInsn "add" for 0x4020a1>, <DisassemblerInsn "mov" for 0x4020a4>, <DisassemblerInsn "mov" for 0x4020a6>, <DisassemblerInsn "mov" for 0x4020a9>, <DisassemblerInsn "add" for 0x4020b0>, <DisassemblerInsn "mov" for 0x4020b2>, <DisassemblerInsn "cmp" for 0x4020b9>, <DisassemblerInsn "je" for 0x4020bc>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007d5>, <DisassemblerInsn "mov" for 0x4007dc>, <DisassemblerInsn "mov" for 0x4007e3>, <DisassemblerInsn "mov" for 0x4007eb>, <DisassemblerInsn "mov" for 0x4007f2>, <DisassemblerInsn "mov" for 0x4007f4>, <DisassemblerInsn "add" for 0x4007f7>, <DisassemblerInsn "mov" for 0x4007fa>, <DisassemblerInsn "mov" for 0x4007fc>, <DisassemblerInsn "call" for 0x4007fe>]'}, {'block_Idx': 109, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013c6>, <DisassemblerInsn "cmp" for 0x4013cd>, <DisassemblerInsn "jne" for 0x4013d0>]'}, {'block_Idx': 63, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401047>, <DisassemblerInsn "mov" for 0x40104f>, <DisassemblerInsn "mov" for 0x401057>, <DisassemblerInsn "ror" for 0x40105a>, <DisassemblerInsn "ror" for 0x40105e>, <DisassemblerInsn "ror" for 0x401061>, <DisassemblerInsn "shr" for 0x401065>, <DisassemblerInsn "mov" for 0x401068>, <DisassemblerInsn "mov" for 0x40106f>, <DisassemblerInsn "mov" for 0x401075>, <DisassemblerInsn "xor" for 0x401077>, <DisassemblerInsn "shr" for 0x40107d>, <DisassemblerInsn "cmp" for 0x401080>, <DisassemblerInsn "cmovb" for 0x401086>, <DisassemblerInsn "mov" for 0x401089>, <DisassemblerInsn "xor" for 0x40108e>, <DisassemblerInsn "cmp" for 0x401090>, <DisassemblerInsn "cmovb" for 0x401096>, <DisassemblerInsn "mov" for 0x401099>, <DisassemblerInsn "and" for 0x40109b>, <DisassemblerInsn "mov" for 0x4010a1>, <DisassemblerInsn "shr" for 0x4010a3>, <DisassemblerInsn "mov" for 0x4010a6>, <DisassemblerInsn "or" for 0x4010a8>, <DisassemblerInsn "cmp" for 0x4010ab>, <DisassemblerInsn "cmove" for 0x4010ae>, <DisassemblerInsn "cmp" for 0x4010b1>, <DisassemblerInsn "cmove" for 0x4010b4>, <DisassemblerInsn "mov" for 0x4010b7>, <DisassemblerInsn "mov" for 0x4010b9>, <DisassemblerInsn "mov" for 0x4010bb>, <DisassemblerInsn "movzx" for 0x4010c2>, <DisassemblerInsn "add" for 0x4010c6>, <DisassemblerInsn "mov" for 0x4010c8>, <DisassemblerInsn "sub" for 0x4010cd>, <DisassemblerInsn "mov" for 0x4010cf>, <DisassemblerInsn "cmp" for 0x4010d6>, <DisassemblerInsn "je" for 0x4010d9>]'}, {'block_Idx': 139, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40144d>, <DisassemblerInsn "sub" for 0x401454>, <DisassemblerInsn "je" for 0x401457>]'}, {'block_Idx': 115, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401371>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401988>, <DisassemblerInsn "mov" for 0x401990>, <DisassemblerInsn "lea" for 0x401993>, <DisassemblerInsn "xor" for 0x40199a>, <DisassemblerInsn "call" for 0x40199c>]'}, {'block_Idx': 373, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40210c>, <DisassemblerInsn "cmp" for 0x402113>, <DisassemblerInsn "jle" for 0x402116>]'}, {'block_Idx': 173, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4034cf>, <DisassemblerInsn "mov" for 0x4034d7>, <DisassemblerInsn "mov" for 0x4034d9>, <DisassemblerInsn "cmp" for 0x4034e0>, <DisassemblerInsn "mov" for 0x4034e3>, <DisassemblerInsn "jle" for 0x4034ea>]'}, {'block_Idx': 50, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400efa>, <DisassemblerInsn "and" for 0x400f01>, <DisassemblerInsn "cmp" for 0x400f04>, <DisassemblerInsn "je" for 0x400f07>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009c1>, <DisassemblerInsn "mov" for 0x4009c9>, <DisassemblerInsn "mov" for 0x4009d1>, <DisassemblerInsn "mov" for 0x4009d9>, <DisassemblerInsn "mov" for 0x4009df>, <DisassemblerInsn "add" for 0x4009e2>, <DisassemblerInsn "mov" for 0x4009e6>, <DisassemblerInsn "mov" for 0x4009ee>, <DisassemblerInsn "add" for 0x4009f1>, <DisassemblerInsn "mov" for 0x4009f5>, <DisassemblerInsn "mov" for 0x4009fd>, <DisassemblerInsn "mov" for 0x400a05>, <DisassemblerInsn "mov" for 0x400a0a>, <DisassemblerInsn "mov" for 0x400a12>, <DisassemblerInsn "mov" for 0x400a19>, <DisassemblerInsn "mov" for 0x400a21>, <DisassemblerInsn "mov" for 0x400a29>, <DisassemblerInsn "mov" for 0x400a30>, <DisassemblerInsn "mov" for 0x400a38>, <DisassemblerInsn "sar" for 0x400a3a>, <DisassemblerInsn "movsxd" for 0x400a3d>, <DisassemblerInsn "mov" for 0x400a40>, <DisassemblerInsn "mov" for 0x400a43>, <DisassemblerInsn "and" for 0x400a45>, <DisassemblerInsn "mov" for 0x400a48>, <DisassemblerInsn "movzx" for 0x400a4f>, <DisassemblerInsn "mov" for 0x400a52>, <DisassemblerInsn "mov" for 0x400a59>, <DisassemblerInsn "add" for 0x400a5b>, <DisassemblerInsn "mov" for 0x400a5e>, <DisassemblerInsn "sar" for 0x400a60>, <DisassemblerInsn "movsxd" for 0x400a63>, <DisassemblerInsn "mov" for 0x400a66>, <DisassemblerInsn "ror" for 0x400a69>, <DisassemblerInsn "ror" for 0x400a6d>, <DisassemblerInsn "ror" for 0x400a70>, <DisassemblerInsn "and" for 0x400a74>, <DisassemblerInsn "shl" for 0x400a77>, <DisassemblerInsn "mov" for 0x400a79>, <DisassemblerInsn "shr" for 0x400a80>, <DisassemblerInsn "mov" for 0x400a83>, <DisassemblerInsn "mov" for 0x400a8a>, <DisassemblerInsn "add" for 0x400a8c>, <DisassemblerInsn "sar" for 0x400a8f>, <DisassemblerInsn "movsxd" for 0x400a92>, <DisassemblerInsn "mov" for 0x400a95>, <DisassemblerInsn "ror" for 0x400a98>, <DisassemblerInsn "ror" for 0x400a9c>, <DisassemblerInsn "ror" for 0x400a9f>, <DisassemblerInsn "shl" for 0x400aa3>, <DisassemblerInsn "mov" for 0x400aa5>, <DisassemblerInsn "shr" for 0x400aac>, <DisassemblerInsn "mov" for 0x400aaf>, <DisassemblerInsn "add" for 0x400ab2>, <DisassemblerInsn "shl" for 0x400ab6>, <DisassemblerInsn "sar" for 0x400ab9>, <DisassemblerInsn "movsxd" for 0x400abd>, <DisassemblerInsn "mov" for 0x400ac0>, <DisassemblerInsn "ror" for 0x400ac4>, <DisassemblerInsn "ror" for 0x400ac8>, <DisassemblerInsn "ror" for 0x400acb>, <DisassemblerInsn "shl" for 0x400acf>, <DisassemblerInsn "mov" for 0x400ad1>, <DisassemblerInsn "shr" for 0x400ad9>, <DisassemblerInsn "add" for 0x400adc>, <DisassemblerInsn "mov" for 0x400adf>, <DisassemblerInsn "mov" for 0x400ae6>, <DisassemblerInsn "or" for 0x400ae8>, <DisassemblerInsn "mov" for 0x400aea>, <DisassemblerInsn "shl" for 0x400af1>, <DisassemblerInsn "mov" for 0x400af4>, <DisassemblerInsn "add" for 0x400afb>, <DisassemblerInsn "mov" for 0x400afd>, <DisassemblerInsn "mov" for 0x400aff>, <DisassemblerInsn "cmp" for 0x400b06>, <DisassemblerInsn "jle" for 0x400b08>]'}, {'block_Idx': 369, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4024c8>]'}, {'block_Idx': 166, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403689>, <DisassemblerInsn "mov" for 0x403691>, <DisassemblerInsn "mov" for 0x403699>, <DisassemblerInsn "mov" for 0x4036a1>, <DisassemblerInsn "imul" for 0x4036a8>, <DisassemblerInsn "mov" for 0x4036ab>, <DisassemblerInsn "mov" for 0x4036b0>, <DisassemblerInsn "cmp" for 0x4036b5>, <DisassemblerInsn "cmove" for 0x4036b8>, <DisassemblerInsn "imul" for 0x4036bb>, <DisassemblerInsn "mov" for 0x4036be>, <DisassemblerInsn "mov" for 0x4036c0>, <DisassemblerInsn "mov" for 0x4036c7>, <DisassemblerInsn "mov" for 0x4036cf>, <DisassemblerInsn "add" for 0x4036d1>, <DisassemblerInsn "mov" for 0x4036d4>, <DisassemblerInsn "cdq" for 0x4036d9>, <DisassemblerInsn "idiv" for 0x4036da>, <DisassemblerInsn "mov" for 0x4036dc>, <DisassemblerInsn "cmp" for 0x4036e0>, <DisassemblerInsn "jle" for 0x4036e2>]'}, {'block_Idx': 387, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402268>, <DisassemblerInsn "mov" for 0x40226f>, <DisassemblerInsn "mov" for 0x402276>, <DisassemblerInsn "mov" for 0x40227d>, <DisassemblerInsn "and" for 0x402285>, <DisassemblerInsn "mov" for 0x402289>, <DisassemblerInsn "mov" for 0x402291>, <DisassemblerInsn "xor" for 0x402296>, <DisassemblerInsn "mov" for 0x402298>, <DisassemblerInsn "mov" for 0x4022a0>, <DisassemblerInsn "mov" for 0x4022a7>, <DisassemblerInsn "mov" for 0x4022ae>, <DisassemblerInsn "mov" for 0x4022b5>, <DisassemblerInsn "jmp" for 0x4022bd>]'}, {'block_Idx': 206, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4031c5>, <DisassemblerInsn "mov" for 0x4031cd>, <DisassemblerInsn "mov" for 0x4031d4>, <DisassemblerInsn "mov" for 0x4031dc>, <DisassemblerInsn "mov" for 0x4031e3>, <DisassemblerInsn "mov" for 0x4031eb>, <DisassemblerInsn "mov" for 0x4031f2>, <DisassemblerInsn "mov" for 0x4031fa>, <DisassemblerInsn "sub" for 0x4031fe>, <DisassemblerInsn "shl" for 0x403201>, <DisassemblerInsn "mov" for 0x403203>, <DisassemblerInsn "mov" for 0x403205>, <DisassemblerInsn "mov" for 0x403208>, <DisassemblerInsn "add" for 0x40320b>, <DisassemblerInsn "mov" for 0x40320f>, <DisassemblerInsn "mov" for 0x403213>, <DisassemblerInsn "mov" for 0x40321a>, <DisassemblerInsn "mov" for 0x403222>, <DisassemblerInsn "mov" for 0x40322a>, <DisassemblerInsn "mov" for 0x403232>, <DisassemblerInsn "mov" for 0x403239>, <DisassemblerInsn "mov" for 0x403241>, <DisassemblerInsn "add" for 0x403249>, <DisassemblerInsn "movsxd" for 0x40324d>, <DisassemblerInsn "cmp" for 0x403250>, <DisassemblerInsn "mov" for 0x403253>, <DisassemblerInsn "mov" for 0x403255>, <DisassemblerInsn "mov" for 0x40325c>, <DisassemblerInsn "mov" for 0x403264>, <DisassemblerInsn "mov" for 0x40326c>, <DisassemblerInsn "mov" for 0x403274>, <DisassemblerInsn "jl" for 0x40327b>]'}, {'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400664>, <DisassemblerInsn "mov" for 0x40066b>, <DisassemblerInsn "mov" for 0x400672>, <DisassemblerInsn "mov" for 0x400679>, <DisassemblerInsn "add" for 0x40067b>, <DisassemblerInsn "mov" for 0x40067d>, <DisassemblerInsn "mov" for 0x400684>, <DisassemblerInsn "cmp" for 0x400689>, <DisassemblerInsn "mov" for 0x40068b>, <DisassemblerInsn "jb" for 0x400692>]'}, {'block_Idx': 183, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4034f0>, <DisassemblerInsn "mov" for 0x4034f8>, <DisassemblerInsn "mov" for 0x403500>, <DisassemblerInsn "mov" for 0x403507>, <DisassemblerInsn "mov" for 0x40350f>, <DisassemblerInsn "mov" for 0x403513>, <DisassemblerInsn "mov" for 0x403518>, <DisassemblerInsn "mov" for 0x40351c>, <DisassemblerInsn "xor" for 0x403521>, <DisassemblerInsn "mov" for 0x403523>, <DisassemblerInsn "mov" for 0x403527>, <DisassemblerInsn "mov" for 0x40352c>, <DisassemblerInsn "mov" for 0x403531>, <DisassemblerInsn "jmp" for 0x403539>]'}, {'block_Idx': 372, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402207>, <DisassemblerInsn "mov" for 0x40220e>, <DisassemblerInsn "mov" for 0x402215>, <DisassemblerInsn "mov" for 0x40221c>, <DisassemblerInsn "mov" for 0x402223>, <DisassemblerInsn "add" for 0x402225>, <DisassemblerInsn "mov" for 0x402229>, <DisassemblerInsn "and" for 0x402231>, <DisassemblerInsn "mov" for 0x402235>, <DisassemblerInsn "mov" for 0x40223d>, <DisassemblerInsn "cmp" for 0x402242>, <DisassemblerInsn "mov" for 0x402245>, <DisassemblerInsn "mov" for 0x40224d>, <DisassemblerInsn "mov" for 0x402254>, <DisassemblerInsn "mov" for 0x40225b>, <DisassemblerInsn "je" for 0x402262>]'}, {'block_Idx': 38, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e1d>]'}, {'block_Idx': 147, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403943>, <DisassemblerInsn "mov" for 0x403946>, <DisassemblerInsn "mov" for 0x40394b>, <DisassemblerInsn "add" for 0x403952>, <DisassemblerInsn "ret" for 0x403956>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x403029>]'}, {'block_Idx': 74, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400f4e>]'}, {'block_Idx': 158, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401720>, <DisassemblerInsn "mov" for 0x401727>, <DisassemblerInsn "or" for 0x40172e>, <DisassemblerInsn "sub" for 0x401731>, <DisassemblerInsn "mov" for 0x401734>, <DisassemblerInsn "je" for 0x40173b>]'}, {'block_Idx': 99, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40121a>]'}, {'block_Idx': 370, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402a63>, <DisassemblerInsn "mov" for 0x402a6b>, <DisassemblerInsn "mov" for 0x402a73>, <DisassemblerInsn "mov" for 0x402a7a>, <DisassemblerInsn "xor" for 0x402a81>, <DisassemblerInsn "cmp" for 0x402a83>, <DisassemblerInsn "mov" for 0x402a87>, <DisassemblerInsn "mov" for 0x402a8f>, <DisassemblerInsn "mov" for 0x402a96>, <DisassemblerInsn "mov" for 0x402a9d>, <DisassemblerInsn "je" for 0x402aa5>]'}, {'block_Idx': 217, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40322a>, <DisassemblerInsn "mov" for 0x403232>, <DisassemblerInsn "mov" for 0x403239>, <DisassemblerInsn "mov" for 0x403241>, <DisassemblerInsn "add" for 0x403249>, <DisassemblerInsn "movsxd" for 0x40324d>, <DisassemblerInsn "cmp" for 0x403250>, <DisassemblerInsn "mov" for 0x403253>, <DisassemblerInsn "mov" for 0x403255>, <DisassemblerInsn "mov" for 0x40325c>, <DisassemblerInsn "mov" for 0x403264>, <DisassemblerInsn "mov" for 0x40326c>, <DisassemblerInsn "mov" for 0x403274>, <DisassemblerInsn "jl" for 0x40327b>]'}, {'block_Idx': 136, 'blockInsts': '[<DisassemblerInsn "add" for 0x403952>, <DisassemblerInsn "ret" for 0x403956>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40074e>, <DisassemblerInsn "mov" for 0x400756>, <DisassemblerInsn "mov" for 0x40075e>, <DisassemblerInsn "mov" for 0x400766>, <DisassemblerInsn "mov" for 0x400769>, <DisassemblerInsn "mov" for 0x400771>, <DisassemblerInsn "mov" for 0x400778>, <DisassemblerInsn "mov" for 0x40077a>, <DisassemblerInsn "mov" for 0x40077c>, <DisassemblerInsn "mov" for 0x40077e>, <DisassemblerInsn "mov" for 0x400785>, <DisassemblerInsn "mov" for 0x40078c>, <DisassemblerInsn "mov" for 0x400793>, <DisassemblerInsn "mov" for 0x40079a>, <DisassemblerInsn "mov" for 0x4007a1>, <DisassemblerInsn "mov" for 0x4007a8>, <DisassemblerInsn "mov" for 0x4007af>, <DisassemblerInsn "mov" for 0x4007b6>, <DisassemblerInsn "mov" for 0x4007bd>, <DisassemblerInsn "add" for 0x4007bf>, <DisassemblerInsn "add" for 0x4007c1>, <DisassemblerInsn "cmp" for 0x4007c3>, <DisassemblerInsn "mov" for 0x4007c5>, <DisassemblerInsn "mov" for 0x4007cc>, <DisassemblerInsn "jbe" for 0x4007d3>]'}, {'block_Idx': 117, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401567>, <DisassemblerInsn "mov" for 0x40156f>, <DisassemblerInsn "mov" for 0x401576>, <DisassemblerInsn "mov" for 0x40157d>, <DisassemblerInsn "add" for 0x401584>, <DisassemblerInsn "mov" for 0x401587>, <DisassemblerInsn "xor" for 0x401589>, <DisassemblerInsn "call" for 0x40158b>]'}, {'block_Idx': 398, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402994>, <DisassemblerInsn "mov" for 0x40299c>, <DisassemblerInsn "mov" for 0x4029a4>, <DisassemblerInsn "mov" for 0x4029ab>, <DisassemblerInsn "mov" for 0x4029b2>, <DisassemblerInsn "add" for 0x4029b9>, <DisassemblerInsn "add" for 0x4029bc>, <DisassemblerInsn "add" for 0x4029be>, <DisassemblerInsn "mov" for 0x4029c0>, <DisassemblerInsn "jmp" for 0x4029c3>]'}, {'block_Idx': 141, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400beb>, <DisassemblerInsn "mov" for 0x400bf3>, <DisassemblerInsn "mov" for 0x400bf9>, <DisassemblerInsn "cmp" for 0x400c00>, <DisassemblerInsn "jle" for 0x400c03>]'}, {'block_Idx': 383, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402413>, <DisassemblerInsn "mov" for 0x40241b>, <DisassemblerInsn "mov" for 0x402422>, <DisassemblerInsn "mov" for 0x40242a>, <DisassemblerInsn "mov" for 0x402432>, <DisassemblerInsn "mov" for 0x40243a>, <DisassemblerInsn "add" for 0x402442>, <DisassemblerInsn "mov" for 0x402445>, <DisassemblerInsn "mov" for 0x40244c>, <DisassemblerInsn "add" for 0x40244f>, <DisassemblerInsn "mov" for 0x402453>, <DisassemblerInsn "mov" for 0x40245a>, <DisassemblerInsn "add" for 0x40245e>, <DisassemblerInsn "mov" for 0x402462>, <DisassemblerInsn "mov" for 0x402469>, <DisassemblerInsn "add" for 0x40246d>, <DisassemblerInsn "mov" for 0x402471>, <DisassemblerInsn "mov" for 0x402478>, <DisassemblerInsn "add" for 0x40247c>, <DisassemblerInsn "mov" for 0x402480>, <DisassemblerInsn "add" for 0x402488>, <DisassemblerInsn "mov" for 0x40248c>, <DisassemblerInsn "cmp" for 0x402494>, <DisassemblerInsn "mov" for 0x402497>, <DisassemblerInsn "mov" for 0x40249a>, <DisassemblerInsn "mov" for 0x4024a2>, <DisassemblerInsn "mov" for 0x4024a4>, <DisassemblerInsn "mov" for 0x4024ab>, <DisassemblerInsn "mov" for 0x4024b3>, <DisassemblerInsn "mov" for 0x4024bb>, <DisassemblerInsn "je" for 0x4024c2>]'}, {'block_Idx': 97, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401245>]'}, {'block_Idx': 153, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401543>, <DisassemblerInsn "mov" for 0x40154a>, <DisassemblerInsn "xor" for 0x401552>, <DisassemblerInsn "lea" for 0x401554>, <DisassemblerInsn "mov" for 0x40155b>, <DisassemblerInsn "call" for 0x40155d>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b0a>, <DisassemblerInsn "mov" for 0x400b12>, <DisassemblerInsn "mov" for 0x400b1a>, <DisassemblerInsn "mov" for 0x400b22>, <DisassemblerInsn "mov" for 0x400b2a>, <DisassemblerInsn "mov" for 0x400b32>, <DisassemblerInsn "mov" for 0x400b3a>, <DisassemblerInsn "add" for 0x400b3d>, <DisassemblerInsn "sar" for 0x400b40>, <DisassemblerInsn "xor" for 0x400b43>, <DisassemblerInsn "cmp" for 0x400b46>, <DisassemblerInsn "cmovl" for 0x400b4a>, <DisassemblerInsn "xor" for 0x400b4e>, <DisassemblerInsn "cmp" for 0x400b51>, <DisassemblerInsn "mov" for 0x400b55>, <DisassemblerInsn "cmovl" for 0x400b58>, <DisassemblerInsn "xor" for 0x400b5c>, <DisassemblerInsn "cmp" for 0x400b5f>, <DisassemblerInsn "cmovl" for 0x400b63>, <DisassemblerInsn "mov" for 0x400b67>, <DisassemblerInsn "mov" for 0x400b6a>, <DisassemblerInsn "movsxd" for 0x400b6d>, <DisassemblerInsn "add" for 0x400b70>, <DisassemblerInsn "mov" for 0x400b73>, <DisassemblerInsn "mov" for 0x400b76>, <DisassemblerInsn "jmp" for 0x400b7c>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019a6>, <DisassemblerInsn "test" for 0x4019ad>, <DisassemblerInsn "je" for 0x4019af>]'}, {'block_Idx': 104, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401376>, <DisassemblerInsn "mov" for 0x40137d>, <DisassemblerInsn "mov" for 0x401384>, <DisassemblerInsn "mov" for 0x40138b>, <DisassemblerInsn "mov" for 0x401393>, <DisassemblerInsn "add" for 0x40139b>, <DisassemblerInsn "mov" for 0x40139f>, <DisassemblerInsn "mov" for 0x4013a7>, <DisassemblerInsn "mov" for 0x4013ac>, <DisassemblerInsn "test" for 0x4013b1>, <DisassemblerInsn "cmovne" for 0x4013b5>, <DisassemblerInsn "imul" for 0x4013b8>, <DisassemblerInsn "imul" for 0x4013bb>, <DisassemblerInsn "cmp" for 0x4013be>, <DisassemblerInsn "jg" for 0x4013c0>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b9d>, <DisassemblerInsn "cmp" for 0x400ba5>, <DisassemblerInsn "jne" for 0x400ba8>]'}, {'block_Idx': 302, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x401fec>, <DisassemblerInsn "jl" for 0x401fef>]'}, {'block_Idx': 143, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401604>, <DisassemblerInsn "mov" for 0x40160b>, <DisassemblerInsn "mov" for 0x401612>, <DisassemblerInsn "mov" for 0x40161a>, <DisassemblerInsn "mov" for 0x401622>, <DisassemblerInsn "mov" for 0x40162a>, <DisassemblerInsn "mov" for 0x401632>, <DisassemblerInsn "mov" for 0x40163a>, <DisassemblerInsn "mov" for 0x401642>, <DisassemblerInsn "add" for 0x401645>, <DisassemblerInsn "mov" for 0x401649>, <DisassemblerInsn "mov" for 0x401651>, <DisassemblerInsn "mov" for 0x401655>, <DisassemblerInsn "mov" for 0x401659>, <DisassemblerInsn "mov" for 0x40165c>, <DisassemblerInsn "add" for 0x40165f>, <DisassemblerInsn "mov" for 0x401663>, <DisassemblerInsn "mov" for 0x40166b>, <DisassemblerInsn "mov" for 0x40166e>, <DisassemblerInsn "cmp" for 0x401670>, <DisassemblerInsn "mov" for 0x401673>, <DisassemblerInsn "mov" for 0x40167a>, <DisassemblerInsn "mov" for 0x401681>, <DisassemblerInsn "jle" for 0x401688>]'}, {'block_Idx': 256, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f97>, <DisassemblerInsn "mov" for 0x401f9f>, <DisassemblerInsn "mov" for 0x401fa7>, <DisassemblerInsn "mov" for 0x401faf>, <DisassemblerInsn "mov" for 0x401fb1>, <DisassemblerInsn "mov" for 0x401fb3>, <DisassemblerInsn "mov" for 0x401fba>, <DisassemblerInsn "mov" for 0x401fc1>, <DisassemblerInsn "jmp" for 0x401fc9>]'}, {'block_Idx': 251, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c6d>, <DisassemblerInsn "mov" for 0x401c75>, <DisassemblerInsn "mov" for 0x401c7c>, <DisassemblerInsn "mov" for 0x401c83>, <DisassemblerInsn "mov" for 0x401c8b>, <DisassemblerInsn "shr" for 0x401c93>, <DisassemblerInsn "mov" for 0x401c97>, <DisassemblerInsn "add" for 0x401c9a>, <DisassemblerInsn "mov" for 0x401c9e>, <DisassemblerInsn "add" for 0x401ca0>, <DisassemblerInsn "mov" for 0x401ca3>, <DisassemblerInsn "shl" for 0x401caa>, <DisassemblerInsn "mov" for 0x401cad>, <DisassemblerInsn "mov" for 0x401cb4>, <DisassemblerInsn "sar" for 0x401cbc>, <DisassemblerInsn "movsxd" for 0x401cc0>, <DisassemblerInsn "mov" for 0x401cc3>, <DisassemblerInsn "ror" for 0x401cc7>, <DisassemblerInsn "ror" for 0x401ccb>, <DisassemblerInsn "ror" for 0x401cce>, <DisassemblerInsn "shl" for 0x401cd2>, <DisassemblerInsn "mov" for 0x401cd4>, <DisassemblerInsn "mov" for 0x401cdb>, <DisassemblerInsn "xor" for 0x401cde>, <DisassemblerInsn "sub" for 0x401ce0>, <DisassemblerInsn "shr" for 0x401ce3>, <DisassemblerInsn "mov" for 0x401ce5>, <DisassemblerInsn "add" for 0x401cec>, <DisassemblerInsn "mov" for 0x401cee>, <DisassemblerInsn "or" for 0x401cf0>, <DisassemblerInsn "mov" for 0x401cf2>, <DisassemblerInsn "mov" for 0x401cf9>, <DisassemblerInsn "mov" for 0x401d01>, <DisassemblerInsn "mov" for 0x401d09>, <DisassemblerInsn "mov" for 0x401d10>, <DisassemblerInsn "mov" for 0x401d17>, <DisassemblerInsn "sub" for 0x401d1c>, <DisassemblerInsn "mov" for 0x401d1e>, <DisassemblerInsn "shl" for 0x401d25>, <DisassemblerInsn "mov" for 0x401d27>, <DisassemblerInsn "sar" for 0x401d2e>, <DisassemblerInsn "mov" for 0x401d30>, <DisassemblerInsn "mov" for 0x401d38>, <DisassemblerInsn "mov" for 0x401d3b>, <DisassemblerInsn "add" for 0x401d3e>, <DisassemblerInsn "mov" for 0x401d42>, <DisassemblerInsn "movsxd" for 0x401d4a>, <DisassemblerInsn "cmp" for 0x401d4d>, <DisassemblerInsn "jge" for 0x401d50>]'}, {'block_Idx': 340, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022c2>, <DisassemblerInsn "cmp" for 0x4022c9>, <DisassemblerInsn "jle" for 0x4022cc>]'}, {'block_Idx': 134, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40144b>]'}, {'block_Idx': 385, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024cd>, <DisassemblerInsn "mov" for 0x4024d5>, <DisassemblerInsn "mov" for 0x4024dc>, <DisassemblerInsn "mov" for 0x4024e3>, <DisassemblerInsn "mov" for 0x4024eb>, <DisassemblerInsn "mov" for 0x4024f3>, <DisassemblerInsn "mov" for 0x4024fb>, <DisassemblerInsn "add" for 0x402503>, <DisassemblerInsn "mov" for 0x402507>, <DisassemblerInsn "mov" for 0x40250e>, <DisassemblerInsn "add" for 0x402511>, <DisassemblerInsn "mov" for 0x402514>, <DisassemblerInsn "mov" for 0x40251c>, <DisassemblerInsn "mov" for 0x402520>, <DisassemblerInsn "or" for 0x402523>, <DisassemblerInsn "mov" for 0x402527>, <DisassemblerInsn "add" for 0x40252f>, <DisassemblerInsn "mov" for 0x402533>, <DisassemblerInsn "mov" for 0x40253a>, <DisassemblerInsn "add" for 0x40253c>, <DisassemblerInsn "mov" for 0x40253f>, <DisassemblerInsn "mov" for 0x402546>, <DisassemblerInsn "add" for 0x40254a>, <DisassemblerInsn "mov" for 0x40254f>, <DisassemblerInsn "mov" for 0x402556>, <DisassemblerInsn "add" for 0x402559>, <DisassemblerInsn "mov" for 0x40255c>, <DisassemblerInsn "mov" for 0x402564>, <DisassemblerInsn "add" for 0x402569>, <DisassemblerInsn "mov" for 0x40256e>, <DisassemblerInsn "mov" for 0x402575>, <DisassemblerInsn "add" for 0x402577>, <DisassemblerInsn "mov" for 0x40257a>, <DisassemblerInsn "mov" for 0x402581>, <DisassemblerInsn "add" for 0x402586>, <DisassemblerInsn "mov" for 0x40258a>, <DisassemblerInsn "add" for 0x402592>, <DisassemblerInsn "mov" for 0x402596>, <DisassemblerInsn "cmp" for 0x40259e>, <DisassemblerInsn "mov" for 0x4025a1>, <DisassemblerInsn "mov" for 0x4025a4>, <DisassemblerInsn "mov" for 0x4025ac>, <DisassemblerInsn "mov" for 0x4025ae>, <DisassemblerInsn "mov" for 0x4025b5>, <DisassemblerInsn "mov" for 0x4025b7>, <DisassemblerInsn "mov" for 0x4025be>, <DisassemblerInsn "mov" for 0x4025c6>, <DisassemblerInsn "mov" for 0x4025ce>, <DisassemblerInsn "mov" for 0x4025d5>, <DisassemblerInsn "je" for 0x4025dc>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4005dd>, <DisassemblerInsn "mov" for 0x4005e5>, <DisassemblerInsn "mov" for 0x4005ec>, <DisassemblerInsn "mov" for 0x4005f3>, <DisassemblerInsn "add" for 0x4005f6>, <DisassemblerInsn "mov" for 0x4005fd>, <DisassemblerInsn "mov" for 0x400605>, <DisassemblerInsn "mov" for 0x40060b>, <DisassemblerInsn "cmp" for 0x400612>, <DisassemblerInsn "jb" for 0x400615>]'}, {'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400793>, <DisassemblerInsn "mov" for 0x40079a>, <DisassemblerInsn "mov" for 0x4007a1>, <DisassemblerInsn "mov" for 0x4007a8>, <DisassemblerInsn "mov" for 0x4007af>, <DisassemblerInsn "mov" for 0x4007b6>, <DisassemblerInsn "mov" for 0x4007bd>, <DisassemblerInsn "add" for 0x4007bf>, <DisassemblerInsn "add" for 0x4007c1>, <DisassemblerInsn "cmp" for 0x4007c3>, <DisassemblerInsn "mov" for 0x4007c5>, <DisassemblerInsn "mov" for 0x4007cc>, <DisassemblerInsn "jbe" for 0x4007d3>]'}, {'block_Idx': 66, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e9c>]'}, {'block_Idx': 384, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402aab>, <DisassemblerInsn "mov" for 0x402ab3>, <DisassemblerInsn "mov" for 0x402abb>, <DisassemblerInsn "mov" for 0x402ac2>, <DisassemblerInsn "mov" for 0x402aca>, <DisassemblerInsn "mov" for 0x402ad2>, <DisassemblerInsn "add" for 0x402ada>, <DisassemblerInsn "mov" for 0x402ade>, <DisassemblerInsn "mov" for 0x402ae5>, <DisassemblerInsn "add" for 0x402ae7>, <DisassemblerInsn "mov" for 0x402aea>, <DisassemblerInsn "mov" for 0x402af1>, <DisassemblerInsn "add" for 0x402af5>, <DisassemblerInsn "mov" for 0x402af9>, <DisassemblerInsn "add" for 0x402b01>, <DisassemblerInsn "mov" for 0x402b05>, <DisassemblerInsn "cmp" for 0x402b0d>, <DisassemblerInsn "mov" for 0x402b10>, <DisassemblerInsn "mov" for 0x402b18>, <DisassemblerInsn "mov" for 0x402b1f>, <DisassemblerInsn "mov" for 0x402b26>, <DisassemblerInsn "jne" for 0x402b2e>]'}, {'block_Idx': 79, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011c7>, <DisassemblerInsn "mov" for 0x4011cf>, <DisassemblerInsn "mov" for 0x4011d7>, <DisassemblerInsn "cmp" for 0x4011de>, <DisassemblerInsn "jge" for 0x4011e2>]'}, {'block_Idx': 52, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cc1>, <DisassemblerInsn "mov" for 0x400cc8>, <DisassemblerInsn "mov" for 0x400cd0>, <DisassemblerInsn "mov" for 0x400cd3>, <DisassemblerInsn "mov" for 0x400cdb>, <DisassemblerInsn "and" for 0x400cdd>, <DisassemblerInsn "mov" for 0x400ce0>, <DisassemblerInsn "mov" for 0x400ce7>, <DisassemblerInsn "mov" for 0x400cee>, <DisassemblerInsn "mov" for 0x400cf5>, <DisassemblerInsn "mov" for 0x400cfd>, <DisassemblerInsn "mov" for 0x400d04>, <DisassemblerInsn "sar" for 0x400d0b>, <DisassemblerInsn "movsxd" for 0x400d0e>, <DisassemblerInsn "mov" for 0x400d11>, <DisassemblerInsn "ror" for 0x400d14>, <DisassemblerInsn "ror" for 0x400d18>, <DisassemblerInsn "ror" for 0x400d1b>, <DisassemblerInsn "shl" for 0x400d1f>, <DisassemblerInsn "shr" for 0x400d21>, <DisassemblerInsn "and" for 0x400d24>, <DisassemblerInsn "cmp" for 0x400d29>, <DisassemblerInsn "je" for 0x400d2e>]'}, {'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401890>, <DisassemblerInsn "mov" for 0x401897>, <DisassemblerInsn "mov" for 0x40189e>, <DisassemblerInsn "mov" for 0x4018a6>, <DisassemblerInsn "mov" for 0x4018ae>, <DisassemblerInsn "mov" for 0x4018b5>, <DisassemblerInsn "sar" for 0x4018b7>, <DisassemblerInsn "mov" for 0x4018ba>, <DisassemblerInsn "movsxd" for 0x4018c1>, <DisassemblerInsn "mov" for 0x4018c4>, <DisassemblerInsn "mov" for 0x4018c8>, <DisassemblerInsn "and" for 0x4018ca>, <DisassemblerInsn "mov" for 0x4018cd>, <DisassemblerInsn "movzx" for 0x4018d4>, <DisassemblerInsn "add" for 0x4018d8>, <DisassemblerInsn "mov" for 0x4018db>, <DisassemblerInsn "mov" for 0x4018e2>, <DisassemblerInsn "mov" for 0x4018e4>, <DisassemblerInsn "shr" for 0x4018e9>, <DisassemblerInsn "mov" for 0x4018eb>, <DisassemblerInsn "mov" for 0x4018f2>, <DisassemblerInsn "and" for 0x4018f9>, <DisassemblerInsn "mov" for 0x4018fb>, <DisassemblerInsn "add" for 0x401902>, <DisassemblerInsn "mov" for 0x401905>, <DisassemblerInsn "cmp" for 0x40190c>, <DisassemblerInsn "mov" for 0x40190f>, <DisassemblerInsn "mov" for 0x401916>, <DisassemblerInsn "je" for 0x40191d>]'}, {'block_Idx': 112, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bde>, <DisassemblerInsn "call" for 0x400be6>]'}, {'block_Idx': 239, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401de8>, <DisassemblerInsn "mov" for 0x401def>, <DisassemblerInsn "mov" for 0x401df6>, <DisassemblerInsn "mov" for 0x401dfd>, <DisassemblerInsn "mov" for 0x401dff>, <DisassemblerInsn "xor" for 0x401e07>, <DisassemblerInsn "mov" for 0x401e09>, <DisassemblerInsn "mov" for 0x401e10>, <DisassemblerInsn "mov" for 0x401e17>, <DisassemblerInsn "mov" for 0x401e1f>, <DisassemblerInsn "mov" for 0x401e27>, <DisassemblerInsn "mov" for 0x401e2e>, <DisassemblerInsn "mov" for 0x401e35>, <DisassemblerInsn "mov" for 0x401e3d>, <DisassemblerInsn "mov" for 0x401e45>, <DisassemblerInsn "mov" for 0x401e4c>, <DisassemblerInsn "mov" for 0x401e53>, <DisassemblerInsn "sar" for 0x401e55>, <DisassemblerInsn "movsxd" for 0x401e58>, <DisassemblerInsn "mov" for 0x401e5b>, <DisassemblerInsn "ror" for 0x401e5e>, <DisassemblerInsn "ror" for 0x401e62>, <DisassemblerInsn "ror" for 0x401e65>, <DisassemblerInsn "and" for 0x401e69>, <DisassemblerInsn "mov" for 0x401e6c>, <DisassemblerInsn "shl" for 0x401e73>, <DisassemblerInsn "mov" for 0x401e75>, <DisassemblerInsn "cmp" for 0x401e7c>, <DisassemblerInsn "jge" for 0x401e7f>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40302e>, <DisassemblerInsn "cmp" for 0x403035>, <DisassemblerInsn "jne" for 0x403038>]'}, {'block_Idx': 150, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c9d>, <DisassemblerInsn "mov" for 0x402ca5>, <DisassemblerInsn "mov" for 0x402cac>, <DisassemblerInsn "mov" for 0x402cb3>, <DisassemblerInsn "mov" for 0x402cba>, <DisassemblerInsn "mov" for 0x402cc1>, <DisassemblerInsn "neg" for 0x402cc3>, <DisassemblerInsn "and" for 0x402cc5>, <DisassemblerInsn "mov" for 0x402cc8>, <DisassemblerInsn "mov" for 0x402cca>, <DisassemblerInsn "lea" for 0x402ccc>, <DisassemblerInsn "mov" for 0x402cd0>, <DisassemblerInsn "mov" for 0x402cd2>, <DisassemblerInsn "mov" for 0x402cd4>, <DisassemblerInsn "sub" for 0x402cdc>, <DisassemblerInsn "ja" for 0x402cdf>]'}, {'block_Idx': 235, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c22>, <DisassemblerInsn "mov" for 0x402c29>, <DisassemblerInsn "mov" for 0x402c31>, <DisassemblerInsn "mov" for 0x402c39>, <DisassemblerInsn "mov" for 0x402c3b>, <DisassemblerInsn "mov" for 0x402c3d>, <DisassemblerInsn "mov" for 0x402c44>, <DisassemblerInsn "mov" for 0x402c4b>, <DisassemblerInsn "jmp" for 0x402c52>]'}, {'block_Idx': 178, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40175a>, <DisassemblerInsn "mov" for 0x401762>, <DisassemblerInsn "mov" for 0x40176a>, <DisassemblerInsn "mov" for 0x401771>, <DisassemblerInsn "mov" for 0x401778>, <DisassemblerInsn "mov" for 0x40177a>, <DisassemblerInsn "mov" for 0x401781>, <DisassemblerInsn "mov" for 0x401784>, <DisassemblerInsn "mov" for 0x40178c>, <DisassemblerInsn "sar" for 0x40178e>, <DisassemblerInsn "movsxd" for 0x401791>, <DisassemblerInsn "mov" for 0x401794>, <DisassemblerInsn "mov" for 0x401798>, <DisassemblerInsn "and" for 0x40179a>, <DisassemblerInsn "movzx" for 0x40179d>, <DisassemblerInsn "mov" for 0x4017a1>, <DisassemblerInsn "add" for 0x4017a8>, <DisassemblerInsn "mov" for 0x4017ab>, <DisassemblerInsn "mov" for 0x4017b2>, <DisassemblerInsn "mov" for 0x4017b4>, <DisassemblerInsn "shr" for 0x4017b9>, <DisassemblerInsn "mov" for 0x4017bb>, <DisassemblerInsn "and" for 0x4017c2>, <DisassemblerInsn "cmp" for 0x4017c4>, <DisassemblerInsn "je" for 0x4017c7>]'}, {'block_Idx': 397, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4025e2>]'}, {'block_Idx': 111, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012f0>, <DisassemblerInsn "mov" for 0x4012f7>, <DisassemblerInsn "movsxd" for 0x4012fe>, <DisassemblerInsn "lea" for 0x401301>, <DisassemblerInsn "mov" for 0x401308>, <DisassemblerInsn "mov" for 0x40130b>, <DisassemblerInsn "mov" for 0x401312>, <DisassemblerInsn "mov" for 0x401319>, <DisassemblerInsn "mov" for 0x401321>, <DisassemblerInsn "mov" for 0x401328>, <DisassemblerInsn "mov" for 0x40132f>, <DisassemblerInsn "mov" for 0x401336>, <DisassemblerInsn "mov" for 0x40133d>, <DisassemblerInsn "mov" for 0x40133f>, <DisassemblerInsn "cmp" for 0x401346>, <DisassemblerInsn "jle" for 0x401348>]'}, {'block_Idx': 189, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401959>, <DisassemblerInsn "mov" for 0x401960>, <DisassemblerInsn "mov" for 0x401967>, <DisassemblerInsn "mov" for 0x40196e>, <DisassemblerInsn "mov" for 0x401975>, <DisassemblerInsn "mov" for 0x40197c>, <DisassemblerInsn "cmp" for 0x401983>, <DisassemblerInsn "jle" for 0x401986>]'}, {'block_Idx': 98, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40124a>, <DisassemblerInsn "mov" for 0x401252>, <DisassemblerInsn "mov" for 0x401259>, <DisassemblerInsn "mov" for 0x401261>, <DisassemblerInsn "shr" for 0x401269>, <DisassemblerInsn "and" for 0x40126d>, <DisassemblerInsn "mov" for 0x401274>, <DisassemblerInsn "ror" for 0x401277>, <DisassemblerInsn "ror" for 0x40127b>, <DisassemblerInsn "ror" for 0x40127e>, <DisassemblerInsn "shr" for 0x401282>, <DisassemblerInsn "add" for 0x401285>, <DisassemblerInsn "mov" for 0x401288>, <DisassemblerInsn "add" for 0x40128a>, <DisassemblerInsn "mov" for 0x40128d>, <DisassemblerInsn "mov" for 0x401294>, <DisassemblerInsn "jmp" for 0x40129b>]'}, {'block_Idx': 168, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40173f>, <DisassemblerInsn "mov" for 0x401747>, <DisassemblerInsn "add" for 0x40174e>, <DisassemblerInsn "mov" for 0x401751>, <DisassemblerInsn "mov" for 0x401753>, <DisassemblerInsn "mov" for 0x40175a>, <DisassemblerInsn "mov" for 0x401762>, <DisassemblerInsn "mov" for 0x40176a>, <DisassemblerInsn "mov" for 0x401771>, <DisassemblerInsn "mov" for 0x401778>, <DisassemblerInsn "mov" for 0x40177a>, <DisassemblerInsn "mov" for 0x401781>, <DisassemblerInsn "mov" for 0x401784>, <DisassemblerInsn "mov" for 0x40178c>, <DisassemblerInsn "sar" for 0x40178e>, <DisassemblerInsn "movsxd" for 0x401791>, <DisassemblerInsn "mov" for 0x401794>, <DisassemblerInsn "mov" for 0x401798>, <DisassemblerInsn "and" for 0x40179a>, <DisassemblerInsn "movzx" for 0x40179d>, <DisassemblerInsn "mov" for 0x4017a1>, <DisassemblerInsn "add" for 0x4017a8>, <DisassemblerInsn "mov" for 0x4017ab>, <DisassemblerInsn "mov" for 0x4017b2>, <DisassemblerInsn "mov" for 0x4017b4>, <DisassemblerInsn "shr" for 0x4017b9>, <DisassemblerInsn "mov" for 0x4017bb>, <DisassemblerInsn "and" for 0x4017c2>, <DisassemblerInsn "cmp" for 0x4017c4>, <DisassemblerInsn "je" for 0x4017c7>]'}, {'block_Idx': 187, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402fb2>, <DisassemblerInsn "mov" for 0x402fba>, <DisassemblerInsn "mov" for 0x402fc1>, <DisassemblerInsn "mov" for 0x402fc9>, <DisassemblerInsn "mov" for 0x402fd0>, <DisassemblerInsn "mov" for 0x402fd8>, <DisassemblerInsn "add" for 0x402fe0>, <DisassemblerInsn "movsxd" for 0x402fe4>, <DisassemblerInsn "cmp" for 0x402fe7>, <DisassemblerInsn "mov" for 0x402fea>, <DisassemblerInsn "mov" for 0x402fed>, <DisassemblerInsn "mov" for 0x402ff5>, <DisassemblerInsn "mov" for 0x402ffd>, <DisassemblerInsn "mov" for 0x403004>, <DisassemblerInsn "mov" for 0x40300c>, <DisassemblerInsn "mov" for 0x403014>, <DisassemblerInsn "mov" for 0x40301c>, <DisassemblerInsn "jl" for 0x403023>]'}], 'cfg_block_detailed_info': [{'block_Idx': 81, 'blockInsts': ['<jmp~~0x402c54>']}, {'block_Idx': 118, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~eax, dword ptr [rsp + 0x754]>', '<movsxd~~rdx, eax>', '<lea~~rax, [rip + 0x3ee5]>', '<mov~~eax, dword ptr [rax + rdx*4]>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401567>']}, {'block_Idx': 357, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x54c]>', '<cmp~~eax, 3>', '<jle~~0x402b34>']}, {'block_Idx': 203, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x668]>', '<mov~~rsi, qword ptr [rsp + 0xa8]>', '<mov~~edi, dword ptr [rsp + 0xbc]>', '<mov~~rax, qword ptr [rsp + 0x718]>', '<mov~~ecx, dword ptr [rsp + 0xc4]>', '<mov~~dword ptr [rsi], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0xa0]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x8c], edx>', '<mov~~qword ptr [rsp + 0x90], rcx>', '<mov~~qword ptr [rsp + 0x98], rax>', '<jmp~~0x403467>']}, {'block_Idx': 382, 'blockInsts': ['<jmp~~0x4028da>']}, {'block_Idx': 58, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x740]>', '<movsxd~~rcx, eax>', '<lea~~rax, [rip + 0x4856]>', '<shl~~rcx, 2>', '<add~~rax, rcx>', '<mov~~qword ptr [rsp + 0x730], rax>', '<jmp~~0x400f53>']}, {'block_Idx': 231, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402b34>']}, {'block_Idx': 347, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x164]>', '<add~~rsp, 0x198>', '<ret~~>']}, {'block_Idx': 181, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x898]>', '<mov~~rcx, qword ptr [rsp + 0x8a0]>', '<mov~~esi, dword ptr [rsp + 0xf8]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0xc8], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0xd0], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0xdc], esi>', '<mov~~qword ptr [rsp + 0xe0], rdx>', '<mov~~qword ptr [rsp + 0xe8], rcx>', '<mov~~qword ptr [rsp + 0xf0], rax>', '<jmp~~0x40332c>']}, {'block_Idx': 224, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x598], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x5a0], rax>', '<mov~~rax, qword ptr [rsp + 0x5a0]>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rsp + 0x598]>', '<mov~~esi, dword ptr [rsp + 0x5b0]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x590], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x5a0], rax>', '<jl~~0x401b91>']}, {'block_Idx': 67, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x77c]>', '<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~edx, dword ptr [rsp + 0x780]>', '<mov~~dword ptr [rsp + 0x76c], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x4036c0>']}, {'block_Idx': 242, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~esi, dword ptr [rsp + 0x658]>', '<mov~~edx, dword ptr [rsp + 0x65c]>', '<mov~~rax, qword ptr [rsp + 0x660]>', '<mov~~qword ptr [rsp + 0x640], rax>', '<mov~~dword ptr [rsp + 0x648], edx>', '<mov~~dword ptr [rsp + 0x64c], esi>', '<mov~~dword ptr [rcx], edx>', '<cmp~~rax, 0>', '<jne~~0x401720>']}, {'block_Idx': 138, 'blockInsts': ['<mov~~dword ptr [rsp + 0x69c], eax>', '<cmp~~eax, 0>', '<je~~0x401604>']}, {'block_Idx': 34, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7a4]>', '<cmp~~eax, 0>', '<jle~~0x400c1a>']}, {'block_Idx': 37, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x800]>', '<mov~~eax, dword ptr [rsp + 0x760]>', '<mov~~edx, dword ptr [rsp + 0x748]>', '<mov~~esi, dword ptr [rsp + 0x74c]>', '<mov~~dword ptr [rsp + 0x738], esi>', '<mov~~dword ptr [rsp + 0x73c], edx>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x740], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x400efa>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x840]>', '<mov~~ecx, dword ptr [rsp + 0x864]>', '<mov~~esi, dword ptr [rsp + 0x848]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rdi, rdx>', '<add~~rdi, 0xa8>', '<mov~~qword ptr [rsp + 0x820], rdi>', '<mov~~edx, dword ptr [rdx + 0xa8]>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x82c], edx>', '<mov~~dword ptr [rsp + 0x830], ecx>', '<mov~~dword ptr [rsp + 0x834], eax>', '<jae~~0x400793>']}, {'block_Idx': 209, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x1b0]>', '<mov~~esi, dword ptr [rsp + 0x18c]>', '<mov~~rax, qword ptr [rsp + 0x190]>', '<mov~~rcx, qword ptr [rsp + 0x198]>', '<mov~~qword ptr [rsp + 0x178], rcx>', '<mov~~qword ptr [rsp + 0x180], rax>', '<mov~~dword ptr [rsp + 0x188], esi>', '<add~~rdx, 1>', '<movsxd~~rdi, esi>', '<cmp~~rdx, rdi>', '<mov~~dword ptr [rsp + 0x1cc], esi>', '<mov~~qword ptr [rsp + 0x1d0], rdx>', '<mov~~qword ptr [rsp + 0x1d8], rcx>', '<mov~~qword ptr [rsp + 0x1e0], rax>', '<jl~~0x402e06>']}, {'block_Idx': 266, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x538]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~rsi, qword ptr [rsp + 0x540]>', '<mov~~qword ptr [rsp + 0x518], rsi>', '<mov~~dword ptr [rsp + 0x520], eax>', '<mov~~dword ptr [rsp + 0x524], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x528], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x52c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401eb8>']}, {'block_Idx': 247, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~edi, dword ptr [rsp + 0x524]>', '<mov~~esi, dword ptr [rsp + 0x520]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~r9d, dword ptr [rsp + 0x52c]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x50c], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x528]>', '<mov~~dword ptr [rsp + 0x510], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x50c]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x510]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x514], eax>', '<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~rdx, qword ptr [rsp + 0x550]>', '<mov~~edi, dword ptr [rsp + 0x520]>', '<mov~~esi, dword ptr [rsp + 0x514]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x4fc], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x4fc]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x530]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x500], rax>', '<cmp~~rax, rcx>', '<je~~0x401fce>']}, {'block_Idx': 133, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~rax, qword ptr [rsp + 0x7e0]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401567>']}, {'block_Idx': 436, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x402c54>']}, {'block_Idx': 402, 'blockInsts': ['<jmp~~0x402c54>']}, {'block_Idx': 146, 'blockInsts': ['<jmp~~0x401543>']}, {'block_Idx': 32, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~eax, dword ptr [rax]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x7c8], rcx>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<jmp~~0x400a19>']}, {'block_Idx': 175, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x174], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x403689>']}, {'block_Idx': 24, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x798]>', '<cmp~~eax, 0>', '<jne~~0x400bf9>']}, {'block_Idx': 43, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x838]>', '<mov~~rax, qword ptr [rsp + 0x858]>', '<mov~~dword ptr [rcx], 0>', '<mov~~ecx, dword ptr [rax]>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x818], ecx>', '<mov~~dword ptr [rsp + 0x81c], eax>', '<mov~~eax, dword ptr [rsp + 0x844]>', '<mov~~rdi, qword ptr [rsp + 0x890]>', '<mov~~rsi, qword ptr [rsp + 0x880]>', '<mov~~ecx, dword ptr [rsp + 0x818]>', '<mov~~edx, dword ptr [rsp + 0x81c]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<add~~ecx, edx>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500020>']}, {'block_Idx': 327, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x548]>', '<mov~~ecx, dword ptr [rsp + 0x4f8]>', '<mov~~rdx, qword ptr [rsp + 0x550]>', '<mov~~esi, eax>', '<add~~esi, -2>', '<mov~~esi, esi>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~dword ptr [rsp + 0x4f0], edx>', '<sub~~ecx, edx>', '<mov~~dword ptr [rsp + 0x4f4], ecx>', '<cmp~~eax, 2>', '<jbe~~0x4022c2>']}, {'block_Idx': 151, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x700]>', '<mov~~edx, dword ptr [rsp + 0x738]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<add~~rax, 0x44>', '<mov~~qword ptr [rsp + 0x650], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x658], edx>', '<mov~~dword ptr [rsp + 0x65c], ecx>', '<mov~~qword ptr [rsp + 0x660], rax>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~esi, dword ptr [rsp + 0x658]>', '<mov~~edx, dword ptr [rsp + 0x65c]>', '<mov~~rax, qword ptr [rsp + 0x660]>', '<mov~~qword ptr [rsp + 0x640], rax>', '<mov~~dword ptr [rsp + 0x648], edx>', '<mov~~dword ptr [rsp + 0x64c], esi>', '<mov~~dword ptr [rcx], edx>', '<cmp~~rax, 0>', '<jne~~0x401720>']}, {'block_Idx': 216, 'blockInsts': ['<jmp~~0x403689>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~eax, dword ptr [rsp + 0x7d8]>', '<mov~~ecx, dword ptr [rsp + 0x18]>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<sub~~ecx, eax>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x1e05]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x1a8]>', '<mov~~edx, dword ptr [rsp + 0x1b8]>', '<mov~~rsi, qword ptr [rsp + 0x1a0]>', '<mov~~ecx, dword ptr [rsp + 0x1bc]>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 2>', '<mov~~word ptr [rsi], di>', '<mov~~dword ptr [rsp + 0x18c], edx>', '<mov~~qword ptr [rsp + 0x190], rcx>', '<mov~~qword ptr [rsp + 0x198], rax>', '<mov~~rdx, qword ptr [rsp + 0x1b0]>', '<mov~~esi, dword ptr [rsp + 0x18c]>', '<mov~~rax, qword ptr [rsp + 0x190]>', '<mov~~rcx, qword ptr [rsp + 0x198]>', '<mov~~qword ptr [rsp + 0x178], rcx>', '<mov~~qword ptr [rsp + 0x180], rax>', '<mov~~dword ptr [rsp + 0x188], esi>', '<add~~rdx, 1>', '<movsxd~~rdi, esi>', '<cmp~~rdx, rdi>', '<mov~~dword ptr [rsp + 0x1cc], esi>', '<mov~~qword ptr [rsp + 0x1d0], rdx>', '<mov~~qword ptr [rsp + 0x1d8], rcx>', '<mov~~qword ptr [rsp + 0x1e0], rax>', '<jl~~0x402e06>']}, {'block_Idx': 56, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x800]>', '<mov~~rax, qword ptr [rsp + 0x758]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rsi, qword ptr [rsp + 0x730]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x700], esi>', '<cmp~~esi, 0x10>', '<setg~~r8b>', '<mov~~byte ptr [rsp + 0x707], r8b>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x708], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r9d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r9d>', '<mov~~r9d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r9d, r11d>', '<and~~r8b, 1>', '<movzx~~r8d, r8b>', '<mov~~dword ptr [rdi + 0x58], r10d>', '<sub~~r9d, esi>', '<mov~~r10, rdi>', '<mov~~qword ptr [rsp + 0x710], r10>', '<mov~~r10, rdx>', '<add~~r10, 0x48>', '<mov~~qword ptr [rsp + 0x718], r10>', '<mov~~dword ptr [rdx + 0x48], r9d>', '<mov~~r9, rdx>', '<add~~r9, 0x4c>', '<mov~~qword ptr [rsp + 0x720], r9>', '<mov~~dword ptr [rdx + 0x4c], r8d>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x728], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x401047>']}, {'block_Idx': 156, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jmp~~0x403689>']}, {'block_Idx': 219, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~edi, dword ptr [rsp + 0x5e8]>', '<mov~~esi, dword ptr [rsp + 0x5e4]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~r9d, dword ptr [rsp + 0x5c4]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x5b4], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x5c0]>', '<mov~~dword ptr [rsp + 0x5b8], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x5b4]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x5b8]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x5bc], eax>', '<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~esi, dword ptr [rsp + 0x5e4]>', '<mov~~edx, dword ptr [rsp + 0x5bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x5ac], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x5ac]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x5b0], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402b34>']}, {'block_Idx': 417, 'blockInsts': ['<jmp~~0x4026e5>']}, {'block_Idx': 200, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5ec]>', '<mov~~edx, dword ptr [rsp + 0x5f8]>', '<mov~~rsi, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rsp + 0x620]>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsi], ecx>', '<mov~~dword ptr [rsp + 0x614], edx>', '<mov~~dword ptr [rsp + 0x618], ecx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<mov~~ecx, dword ptr [rsp + 0x614]>', '<mov~~eax, dword ptr [rsp + 0x618]>', '<mov~~edx, dword ptr [rsp + 0x61c]>', '<mov~~dword ptr [rsp + 0x5e0], edx>', '<mov~~dword ptr [rsp + 0x5e4], eax>', '<mov~~dword ptr [rsp + 0x5e8], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x4019a6>']}, {'block_Idx': 25, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7d8]>', '<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x18], eax>', '<cmp~~eax, ecx>', '<jle~~0x403737>']}, {'block_Idx': 176, 'blockInsts': ['<lea~~rdi, [rip + 0x23f1]>', '<lea~~rsi, [rip + 0x2382]>', '<mov~~edx, 0x2b5>', '<lea~~rcx, [rip + 0x23ef]>', '<call~~0x500050>']}, {'block_Idx': 119, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<sub~~eax, 0xc>', '<je~~0x401462>']}, {'block_Idx': 386, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~rcx, qword ptr [rsp + 0x478]>', '<mov~~edx, dword ptr [rsp + 0x484]>', '<mov~~esi, dword ptr [rsp + 0x488]>', '<mov~~edi, dword ptr [rsp + 0x48c]>', '<mov~~dword ptr [rsp + 0x2b4], edi>', '<mov~~dword ptr [rsp + 0x2b8], esi>', '<mov~~dword ptr [rsp + 0x2bc], edx>', '<mov~~qword ptr [rsp + 0x2c0], rcx>', '<cmp~~rax, 0>', '<je~~0x402b34>']}, {'block_Idx': 246, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x524]>', '<mov~~edx, dword ptr [rsp + 0x520]>', '<mov~~eax, dword ptr [rsp + 0x52c]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x800]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x514], eax>', '<jmp~~0x401f44>']}, {'block_Idx': 232, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~rdx, qword ptr [rsp + 0x640]>', '<mov~~rsi, qword ptr [rsp + 0x668]>', '<mov~~eax, dword ptr [rsp + 0x608]>', '<and~~eax, 0xfffffff7>', '<mov~~dword ptr [rsp + 0x548], eax>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x54c], esi>', '<mov~~rcx, qword ptr [rcx + rdx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x550], rcx>', '<cmp~~eax, 0>', '<je~~0x401ff7>']}, {'block_Idx': 202, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0xa8]>', '<mov~~edx, dword ptr [rsp + 0xb8]>', '<mov~~rsi, qword ptr [rsp + 0xa0]>', '<mov~~edi, dword ptr [rsp + 0xbc]>', '<mov~~ecx, dword ptr [rsp + 0xc0]>', '<mov~~r8d, dword ptr [rsp + 0xc4]>', '<mov~~word ptr [rsi], r8w>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0x8c], edx>', '<mov~~qword ptr [rsp + 0x90], rcx>', '<mov~~qword ptr [rsp + 0x98], rax>', '<mov~~rsi, qword ptr [rsp + 0xb0]>', '<mov~~eax, dword ptr [rsp + 0x8c]>', '<mov~~rcx, qword ptr [rsp + 0x90]>', '<mov~~rdx, qword ptr [rsp + 0x98]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0xdc], edi>', '<mov~~qword ptr [rsp + 0xe0], rsi>', '<mov~~qword ptr [rsp + 0xe8], rdx>', '<mov~~qword ptr [rsp + 0xf0], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x40332c>']}, {'block_Idx': 244, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x5d0]>', '<mov~~eax, dword ptr [rsp + 0x5d4]>', '<mov~~rsi, qword ptr [rsp + 0x5d8]>', '<mov~~qword ptr [rsp + 0x578], rsi>', '<mov~~dword ptr [rsp + 0x580], eax>', '<mov~~dword ptr [rsp + 0x584], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x588], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x58c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401c6d>']}, {'block_Idx': 260, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x578]>', '<mov~~rdx, qword ptr [rsp + 0x5c8]>', '<mov~~edi, dword ptr [rsp + 0x580]>', '<mov~~esi, dword ptr [rsp + 0x574]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x55c], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x55c]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x560], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402b34>']}, {'block_Idx': 47, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7dc]>', '<mov~~rcx, qword ptr [rsp + 8]>', '<mov~~esi, dword ptr [rsp + 0x18]>', '<mov~~edx, dword ptr [rsp + 0x14]>', '<mov~~rdi, qword ptr [rsp + 0x890]>', '<mov~~r8d, esi>', '<add~~r8d, dword ptr [rdi + 0xa4]>', '<mov~~dword ptr [rdi + 0xa4], r8d>', '<sub~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<mov~~eax, dword ptr [rsp + 0x84c]>', '<add~~rsp, 0x8c0>', '<pop~~rbx>', '<ret~~>']}, {'block_Idx': 201, 'blockInsts': ['<jmp~~0x402c54>']}, {'block_Idx': 233, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x608]>', '<cmp~~eax, 0x1f>', '<jle~~0x402880>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x84c]>', '<add~~rsp, 0x8c0>', '<pop~~rbx>', '<ret~~>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x88c]>', '<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<cmp~~dword ptr [rcx], 0x43614c66>', '<mov~~dword ptr [rsp + 0x850], eax>', '<je~~0x400664>']}, {'block_Idx': 123, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~rax, qword ptr [rsp + 0x7e0]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401567>']}, {'block_Idx': 180, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x708]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3e22]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 261, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x560]>', '<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x5d0], edx>', '<mov~~dword ptr [rsp + 0x5d4], ecx>', '<mov~~qword ptr [rsp + 0x5d8], rax>', '<jmp~~0x401bd4>']}, {'block_Idx': 89, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jmp~~0x4037a0>']}, {'block_Idx': 165, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x898]>', '<mov~~rdx, qword ptr [rsp + 0x8a0]>', '<mov~~edi, dword ptr [rsp + 0x234]>', '<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~eax, dword ptr [rax]>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<mov~~r8d, eax>', '<mov~~dword ptr [rsp + 0x20c], r8d>', '<mov~~r8d, edi>', '<mov~~dword ptr [rsp + 0x210], r8d>', '<mov~~dword ptr [rsp + 0x214], edi>', '<mov~~qword ptr [rsp + 0x218], rsi>', '<mov~~qword ptr [rsp + 0x220], rdx>', '<mov~~qword ptr [rsp + 0x228], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x403689>']}, {'block_Idx': 354, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x3e8]>', '<mov~~rdx, qword ptr [rsp + 0x3f0]>', '<mov~~ecx, dword ptr [rsp + 0x3fc]>', '<xor~~eax, eax>', '<cmp~~rsi, 0>', '<mov~~qword ptr [rsp + 0x2e0], rdx>', '<mov~~dword ptr [rsp + 0x2ec], ecx>', '<mov~~qword ptr [rsp + 0x2f0], rax>', '<je~~0x402b34>']}, {'block_Idx': 207, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x668]>', '<mov~~rsi, qword ptr [rsp + 0x118]>', '<mov~~rax, qword ptr [rsp + 0x718]>', '<mov~~ecx, dword ptr [rsp + 0x134]>', '<mov~~edi, dword ptr [rsp + 0x130]>', '<mov~~r8d, dword ptr [rsp + 0x13c]>', '<mov~~dword ptr [rsi], r8d>', '<sub~~edi, ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0x110]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0xfc], edx>', '<mov~~qword ptr [rsp + 0x100], rcx>', '<mov~~qword ptr [rsp + 0x108], rax>', '<jmp~~0x40322a>']}, {'block_Idx': 257, 'blockInsts': ['<jmp~~0x402c54>']}, {'block_Idx': 249, 'blockInsts': ['<push~~rbp>', '<mov~~rbp, rsp>', '<push~~rbx>', '<sub~~rsp, 0x4a8>', '<mov~~dword ptr [rbp - 0x38], edx>', '<mov~~dword ptr [rbp - 0x34], esi>', '<mov~~qword ptr [rbp - 0x30], rdi>', '<mov~~eax, edx>', '<mov~~qword ptr [rbp - 0x28], rax>', '<lea~~rcx, [rax*4 + 0xf]>', '<and~~rcx, 0xfffffffffffffff0>', '<mov~~rax, rsp>', '<sub~~rax, rcx>', '<mov~~qword ptr [rbp - 0x20], rax>', '<mov~~rsp, rax>', '<movsxd~~rax, esi>', '<mov~~rax, qword ptr [rdi + rax*8 + 0x58]>', '<mov~~qword ptr [rbp - 0x18], rax>', '<cmp~~edx, 0>', '<setg~~al>', '<mov~~byte ptr [rbp - 9], al>', '<test~~al, 1>', '<jne~~0x4039bf>']}, {'block_Idx': 254, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~rdx, qword ptr [rsp + 0x550]>', '<mov~~edi, dword ptr [rsp + 0x520]>', '<mov~~esi, dword ptr [rsp + 0x514]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x4fc], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x4fc]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x530]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x500], rax>', '<cmp~~rax, rcx>', '<je~~0x401fce>']}, {'block_Idx': 102, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x750]>', '<sub~~eax, 7>', '<je~~0x40129d>']}, {'block_Idx': 39, 'blockInsts': ['<jmp~~0x400e71>']}, {'block_Idx': 214, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0xb0]>', '<mov~~eax, dword ptr [rsp + 0x8c]>', '<mov~~rcx, qword ptr [rsp + 0x90]>', '<mov~~rdx, qword ptr [rsp + 0x98]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0xdc], edi>', '<mov~~qword ptr [rsp + 0xe0], rsi>', '<mov~~qword ptr [rsp + 0xe8], rdx>', '<mov~~qword ptr [rsp + 0xf0], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x40332c>']}, {'block_Idx': 185, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x898]>', '<mov~~rcx, qword ptr [rsp + 0x8a0]>', '<mov~~esi, dword ptr [rsp + 0x174]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x140], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x148], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0x154], esi>', '<mov~~qword ptr [rsp + 0x158], rdx>', '<mov~~qword ptr [rsp + 0x160], rcx>', '<mov~~qword ptr [rsp + 0x168], rax>', '<jmp~~0x4030d4>']}, {'block_Idx': 371, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x4f8]>', '<mov~~edx, dword ptr [rsp + 0x4f4]>', '<mov~~rax, qword ptr [rsp + 0x420]>', '<and~~rax, 0xfffffffffffffffc>', '<mov~~qword ptr [rsp + 0x400], rax>', '<mov~~esi, 2>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x408], rsi>', '<mov~~dword ptr [rsp + 0x410], edx>', '<mov~~dword ptr [rsp + 0x414], ecx>', '<mov~~qword ptr [rsp + 0x418], rax>', '<jmp~~0x4024cd>']}, {'block_Idx': 26, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x764]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~edx, ecx>', '<mov~~dword ptr [rsp + 0x744], edx>', '<mov~~dword ptr [rsp + 0x748], ecx>', '<mov~~dword ptr [rsp + 0x74c], eax>', '<je~~0x400ea1>']}, {'block_Idx': 72, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6fc]>', '<mov~~edx, dword ptr [rsp + 0x6f8]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~edx, 0x28>', '<mov~~qword ptr [rsp + 0x6e0], rdx>', '<mov~~qword ptr [rsp + 0x6e8], rcx>', '<mov~~dword ptr [rsp + 0x6f4], eax>', '<mov~~rcx, qword ptr [rsp + 0x6e0]>', '<mov~~rdx, qword ptr [rsp + 0x6e8]>', '<mov~~eax, dword ptr [rsp + 0x6f4]>', '<mov~~dword ptr [rsp + 0x6cc], eax>', '<mov~~qword ptr [rsp + 0x6d0], rdx>', '<mov~~qword ptr [rsp + 0x6d8], rcx>', '<cmp~~eax, 1>', '<jle~~0x4011c7>']}, {'block_Idx': 113, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~eax, dword ptr [rax + 8]>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401567>']}, {'block_Idx': 400, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4c0]>', '<mov~~rcx, qword ptr [rsp + 0x4c8]>', '<mov~~edx, dword ptr [rsp + 0x4d4]>', '<mov~~esi, dword ptr [rsp + 0x4d8]>', '<mov~~edi, dword ptr [rsp + 0x4dc]>', '<mov~~r8d, dword ptr [rsp + 0x4e0]>', '<mov~~dword ptr [rsp + 0x298], r8d>', '<mov~~dword ptr [rsp + 0x29c], edi>', '<mov~~dword ptr [rsp + 0x2a0], esi>', '<mov~~dword ptr [rsp + 0x2a4], edx>', '<mov~~qword ptr [rsp + 0x2a8], rcx>', '<cmp~~rax, 0>', '<je~~0x402b34>']}, {'block_Idx': 194, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x718]>', '<mov~~rax, qword ptr [rsp + 0x720]>', '<mov~~rsi, qword ptr [rsp + 0x148]>', '<mov~~rdx, qword ptr [rsp + 0x140]>', '<mov~~r8d, dword ptr [rsp + 0x154]>', '<mov~~rdi, qword ptr [rsp + 0x158]>', '<mov~~r9, qword ptr [rsp + 0x160]>', '<mov~~r10, qword ptr [rsp + 0x168]>', '<mov~~qword ptr [rsp + 0x110], r10>', '<mov~~qword ptr [rsp + 0x118], r9>', '<mov~~qword ptr [rsp + 0x120], rdi>', '<mov~~dword ptr [rsp + 0x12c], r8d>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~dword ptr [rsp + 0x130], edx>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~dword ptr [rsp + 0x134], esi>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x138], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x13c], edx>', '<cmp~~eax, 0>', '<je~~0x4031c5>']}, {'block_Idx': 105, 'blockInsts': ['<mov~~r8d, dword ptr [rsp + 0x6bc]>', '<mov~~ecx, dword ptr [rsp + 0x6b4]>', '<mov~~rdi, qword ptr [rsp + 0x710]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4248]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 241, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x890]>', '<mov~~rax, qword ptr [rsp + 0x640]>', '<mov~~edx, dword ptr [rsp + 0x608]>', '<and~~edx, 0xffffffdf>', '<add~~edx, 1>', '<mov~~esi, eax>', '<call~~0x403960>']}, {'block_Idx': 220, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x608]>', '<sub~~eax, 1>', '<jne~~0x401d8d>']}, {'block_Idx': 80, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d0]>', '<mov~~rdi, qword ptr [rsp + 0x800]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rsi, qword ptr [rsp + 0x7e0]>', '<mov~~eax, dword ptr [rsp + 0x6cc]>', '<add~~eax, -1>', '<mov~~r8, rdx>', '<shr~~r8, 3>', '<mov~~esi, dword ptr [rsi + r8]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xf8>', '<add~~rdx, 8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rdi], r8d>', '<add~~esi, -0x80>', '<shl~~rcx, 6>', '<movsxd~~rdi, esi>', '<add~~rcx, rdi>', '<cmp~~esi, 0x40>', '<mov~~qword ptr [rsp + 0x6e0], rdx>', '<mov~~qword ptr [rsp + 0x6e8], rcx>', '<mov~~dword ptr [rsp + 0x6f4], eax>', '<jb~~0x401118>']}, {'block_Idx': 459, 'blockInsts': ['<mov~~rax, qword ptr [rbp - 0x18]>', '<mov~~ecx, dword ptr [rbp - 0xb4]>', '<mov~~edx, dword ptr [rbp - 0x3a8]>', '<sar~~edx, cl>', '<mov~~ecx, dword ptr [rbp - 0x3a4]>', '<movsxd~~rcx, ecx>', '<add~~edx, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rax + rcx*4], edx>', '<xor~~eax, eax>', '<mov~~dword ptr [rbp - 0xac], eax>', '<mov~~eax, dword ptr [rbp - 0xac]>', '<lea~~rsp, [rbp - 8]>', '<pop~~rbx>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 197, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x1a0]>', '<mov~~rdx, qword ptr [rsp + 0x6a8]>', '<mov~~rsi, qword ptr [rsp + 0x1a8]>', '<mov~~edi, dword ptr [rsp + 0x1bc]>', '<mov~~rax, rsi>', '<add~~rax, 4>', '<mov~~dword ptr [rsi], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x18c], edx>', '<mov~~qword ptr [rsp + 0x190], rcx>', '<mov~~qword ptr [rsp + 0x198], rax>', '<jmp~~0x402f05>']}, {'block_Idx': 401, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x4f8]>', '<mov~~edx, dword ptr [rsp + 0x4f4]>', '<mov~~esi, dword ptr [rsp + 0x4ec]>', '<mov~~edi, dword ptr [rsp + 0x4e4]>', '<mov~~rax, qword ptr [rsp + 0x4b8]>', '<add~~rax, -4>', '<and~~rax, 0xfffffffffffffffe>', '<mov~~qword ptr [rsp + 0x490], rax>', '<mov~~r8d, 4>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x498], r8>', '<mov~~dword ptr [rsp + 0x4a0], edi>', '<mov~~dword ptr [rsp + 0x4a4], esi>', '<mov~~dword ptr [rsp + 0x4a8], edx>', '<mov~~dword ptr [rsp + 0x4ac], ecx>', '<mov~~qword ptr [rsp + 0x4b0], rax>', '<jmp~~0x4026e5>']}, {'block_Idx': 439, 'blockInsts': ['<mov~~eax, dword ptr [rbp - 0xac]>', '<lea~~rsp, [rbp - 8]>', '<pop~~rbx>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 204, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x38]>', '<mov~~edx, dword ptr [rsp + 0x48]>', '<mov~~rsi, qword ptr [rsp + 0x30]>', '<mov~~edi, dword ptr [rsp + 0x4c]>', '<mov~~ecx, dword ptr [rsp + 0x50]>', '<mov~~r8d, dword ptr [rsp + 0x54]>', '<mov~~word ptr [rsi], r8w>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0x1c], edx>', '<mov~~qword ptr [rsp + 0x20], rcx>', '<mov~~qword ptr [rsp + 0x28], rax>', '<mov~~rsi, qword ptr [rsp + 0x40]>', '<mov~~eax, dword ptr [rsp + 0x1c]>', '<mov~~rcx, qword ptr [rsp + 0x20]>', '<mov~~rdx, qword ptr [rsp + 0x28]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x6c], edi>', '<mov~~qword ptr [rsp + 0x70], rsi>', '<mov~~qword ptr [rsp + 0x78], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x40355a>']}, {'block_Idx': 218, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x5e8]>', '<mov~~edx, dword ptr [rsp + 0x5e4]>', '<mov~~eax, dword ptr [rsp + 0x5c4]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x800]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x5bc], eax>', '<jmp~~0x401b2b>']}, {'block_Idx': 317, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x548]>', '<mov~~rcx, qword ptr [rsp + 0x550]>', '<mov~~edx, eax>', '<add~~edx, -1>', '<mov~~edx, edx>', '<mov~~ecx, dword ptr [rcx + rdx*4]>', '<mov~~dword ptr [rsp + 0x4f8], ecx>', '<cmp~~eax, 1>', '<je~~0x40237b>']}, {'block_Idx': 243, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x260]>', '<mov~~rdx, qword ptr [rsp + 0x258]>', '<mov~~ecx, dword ptr [rsp + 0x5e0]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~dword ptr [rsp + 0x24c], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x250], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x260], rax>', '<jl~~0x402b74>']}, {'block_Idx': 213, 'blockInsts': ['<jmp~~0x403689>']}, {'block_Idx': 128, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x690], rcx>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x68c], eax>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x690]>', '<movsxd~~rcx, eax>', '<xor~~esi, esi>', '<call~~0x500040>']}, {'block_Idx': 188, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x718]>', '<mov~~rsi, qword ptr [rsp + 0x1c0]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rax, qword ptr [rsp + 0x720]>', '<mov~~r8d, dword ptr [rsp + 0x1cc]>', '<mov~~rdi, qword ptr [rsp + 0x1d0]>', '<mov~~r9, qword ptr [rsp + 0x1d8]>', '<mov~~r10, qword ptr [rsp + 0x1e0]>', '<mov~~qword ptr [rsp + 0x1a0], r10>', '<mov~~qword ptr [rsp + 0x1a8], r9>', '<mov~~qword ptr [rsp + 0x1b0], rdi>', '<mov~~dword ptr [rsp + 0x1b8], r8d>', '<mov~~eax, dword ptr [rax]>', '<mov~~rdx, qword ptr [rdx + rdi*8 + 0x58]>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~ecx, dword ptr [rcx]>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x1bc], edx>', '<cmp~~eax, 0>', '<je~~0x402ec3>']}, {'block_Idx': 208, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x178]>', '<mov~~rcx, qword ptr [rsp + 0x180]>', '<mov~~edx, dword ptr [rsp + 0x188]>', '<mov~~rsi, qword ptr [rsp + 0x668]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x1ec], esi>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x1f0], esi>', '<mov~~dword ptr [rsp + 0x1f4], edx>', '<mov~~qword ptr [rsp + 0x1f8], rcx>', '<mov~~qword ptr [rsp + 0x200], rax>', '<mov~~rsi, qword ptr [rsp + 0x1c0]>', '<mov~~eax, dword ptr [rsp + 0x1ec]>', '<mov~~r8d, dword ptr [rsp + 0x1f0]>', '<mov~~edi, dword ptr [rsp + 0x1f4]>', '<mov~~rcx, qword ptr [rsp + 0x1f8]>', '<mov~~rdx, qword ptr [rsp + 0x200]>', '<add~~rsi, 1>', '<movsxd~~r9, eax>', '<cmp~~rsi, r9>', '<mov~~r9d, eax>', '<mov~~dword ptr [rsp + 0x20c], r9d>', '<mov~~dword ptr [rsp + 0x210], r8d>', '<mov~~dword ptr [rsp + 0x214], edi>', '<mov~~qword ptr [rsp + 0x218], rsi>', '<mov~~qword ptr [rsp + 0x220], rdx>', '<mov~~qword ptr [rsp + 0x228], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402d77>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x764]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~r8d, dword ptr [rsp + 0x744]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4684]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 55, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jmp~~0x4037a0>']}, {'block_Idx': 171, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0xf8], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x403689>']}, {'block_Idx': 42, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~rdx, qword ptr [rsp + 0x838]>', '<mov~~rdi, qword ptr [rsp + 0x858]>', '<mov~~rsi, qword ptr [rsp + 0x8b0]>', '<mov~~eax, dword ptr [rsp + 0x844]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x868], esi>', '<mov~~dword ptr [rsp + 0x86c], edx>', '<mov~~qword ptr [rsp + 0x870], rcx>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jne~~0x4037a0>']}, {'block_Idx': 144, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x69c]>', '<mov~~rax, qword ptr [rsp + 0x708]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3fea]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x848]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rdx, rax>', '<add~~rdx, 0xa4>', '<mov~~qword ptr [rsp + 0x838], rdx>', '<mov~~edx, dword ptr [rax + 0xa4]>', '<mov~~dword ptr [rsp + 0x840], edx>', '<xor~~edx, 0xffffffff>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<ja~~0x4037a0>']}, {'block_Idx': 159, 'blockInsts': ['<jmp~~0x402c54>']}, {'block_Idx': 129, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<sub~~eax, 0xd>', '<je~~0x4014b2>']}, {'block_Idx': 230, 'blockInsts': ['<jmp~~0x402b34>']}, {'block_Idx': 71, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x710]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4394]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x844]>', '<mov~~rdi, qword ptr [rsp + 0x890]>', '<mov~~rsi, qword ptr [rsp + 0x880]>', '<mov~~ecx, dword ptr [rsp + 0x818]>', '<mov~~edx, dword ptr [rsp + 0x81c]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<add~~ecx, edx>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500020>']}, {'block_Idx': 75, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x282d]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 339, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x4f8]>', '<mov~~ecx, dword ptr [rsp + 0x54c]>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, rdx>', '<add~~rcx, -1>', '<mov~~qword ptr [rsp + 0x3e0], rcx>', '<add~~rdx, -2>', '<and~~rcx, 3>', '<mov~~qword ptr [rsp + 0x3e8], rcx>', '<mov~~ecx, 1>', '<cmp~~rdx, 3>', '<mov~~qword ptr [rsp + 0x3f0], rcx>', '<mov~~dword ptr [rsp + 0x3fc], eax>', '<jb~~0x4028a0>']}, {'block_Idx': 234, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x240]>', '<mov~~rdx, qword ptr [rsp + 0x670]>', '<mov~~rcx, qword ptr [rsp + 0x728]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x658], edx>', '<mov~~dword ptr [rsp + 0x65c], ecx>', '<mov~~qword ptr [rsp + 0x660], rax>', '<jmp~~0x4016c8>']}, {'block_Idx': 210, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5e4]>', '<mov~~ecx, dword ptr [rsp + 0x5e8]>', '<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x5c0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x5c4], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401a9f>']}, {'block_Idx': 310, 'blockInsts': ['<jmp~~0x40201e>']}, {'block_Idx': 356, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x4f8]>', '<mov~~ecx, dword ptr [rsp + 0x4f4]>', '<mov~~edx, dword ptr [rsp + 0x54c]>', '<mov~~edx, edx>', '<mov~~esi, edx>', '<mov~~rdx, rsi>', '<add~~rdx, -2>', '<mov~~qword ptr [rsp + 0x420], rdx>', '<add~~rsi, -3>', '<and~~rdx, 3>', '<mov~~qword ptr [rsp + 0x428], rdx>', '<mov~~edx, 2>', '<cmp~~rsi, 3>', '<mov~~qword ptr [rsp + 0x430], rdx>', '<mov~~dword ptr [rsp + 0x438], ecx>', '<mov~~dword ptr [rsp + 0x43c], eax>', '<jb~~0x402a63>']}, {'block_Idx': 87, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6e0]>', '<mov~~rdx, qword ptr [rsp + 0x6e8]>', '<mov~~eax, dword ptr [rsp + 0x6f4]>', '<mov~~dword ptr [rsp + 0x6cc], eax>', '<mov~~qword ptr [rsp + 0x6d0], rdx>', '<mov~~qword ptr [rsp + 0x6d8], rcx>', '<cmp~~eax, 1>', '<jle~~0x4011c7>']}, {'block_Idx': 44, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x800]>', '<mov~~rax, qword ptr [rsp + 0x7c8]>', '<mov~~edx, dword ptr [rsp + 0x7d4]>', '<mov~~qword ptr [rsp + 0x788], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x79c], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x794], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x798], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x7f0]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x7a0], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x7a4], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x7a8], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x7ac], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400b81>']}, {'block_Idx': 410, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x550]>', '<mov~~rcx, qword ptr [rsp + 0x2a8]>', '<mov~~esi, dword ptr [rsp + 0x298]>', '<mov~~edi, dword ptr [rsp + 0x29c]>', '<mov~~r8d, dword ptr [rsp + 0x2a0]>', '<mov~~edx, dword ptr [rsp + 0x2a4]>', '<add~~edx, dword ptr [rax + rcx*4]>', '<add~~edx, r8d>', '<add~~edx, edi>', '<add~~edx, esi>', '<mov~~dword ptr [rax + rcx*4], edx>', '<jmp~~0x402b34>']}, {'block_Idx': 35, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x18]>', '<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~rdx, rcx>', '<add~~rdx, 0xa0>', '<mov~~qword ptr [rsp + 8], rdx>', '<mov~~ecx, dword ptr [rcx + 0xa0]>', '<mov~~dword ptr [rsp + 0x14], ecx>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<je~~0x4037a0>']}, {'block_Idx': 312, 'blockInsts': ['<sub~~rsp, 0x198>', '<mov~~dword ptr [rsp + 0x168], edx>', '<mov~~dword ptr [rsp + 0x16c], esi>', '<mov~~qword ptr [rsp + 0x170], rdi>', '<mov~~rax, rdi>', '<add~~rax, 0x38>', '<mov~~qword ptr [rsp + 0x178], rax>', '<mov~~ecx, dword ptr [rdi + 0x38]>', '<mov~~dword ptr [rsp + 0x18c], ecx>', '<mov~~rax, qword ptr [rdi + 0x28]>', '<mov~~qword ptr [rsp + 0x180], rax>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x18c]>', '<shr~~eax, 0xfe>', '<mov~~dword ptr [rsp + 0x190], eax>', '<add~~ecx, 2>', '<mov~~dword ptr [rsp + 0x194], ecx>', '<mov~~dword ptr [rdi + 0x38], ecx>', '<cmp~~eax, 1>', '<jle~~0x404974>']}, {'block_Idx': 368, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x2f0]>', '<mov~~ecx, dword ptr [rsp + 0x2ec]>', '<mov~~rdx, qword ptr [rsp + 0x2e0]>', '<mov~~rsi, qword ptr [rsp + 0x3e8]>', '<mov~~rdi, qword ptr [rsp + 0x550]>', '<add~~ecx, dword ptr [rdi + rdx*4]>', '<mov~~dword ptr [rsp + 0x2cc], ecx>', '<mov~~dword ptr [rdi + rdx*4], ecx>', '<add~~rdx, 1>', '<mov~~qword ptr [rsp + 0x2d0], rdx>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x2d8], rax>', '<cmp~~rax, rsi>', '<mov~~qword ptr [rsp + 0x2e0], rdx>', '<mov~~dword ptr [rsp + 0x2ec], ecx>', '<mov~~qword ptr [rsp + 0x2f0], rax>', '<je~~0x402b34>']}, {'block_Idx': 255, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x548]>', '<mov~~rdi, qword ptr [rsp + 0x890]>', '<mov~~rax, qword ptr [rsp + 0x640]>', '<mov~~esi, eax>', '<call~~0x4048c0>']}, {'block_Idx': 155, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x238]>', '<lea~~rcx, [rip + 0x25c0]>', '<movsxd~~rax, dword ptr [rcx + rax*4]>', '<add~~rax, rcx>', '<jmp~~rax>']}, {'block_Idx': 45, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x7c0]>', '<mov~~eax, dword ptr [rsp + 0x7a0]>', '<mov~~rcx, qword ptr [rsp + 0x7b8]>', '<mov~~rdi, qword ptr [rcx]>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x788]>', '<cdqe~~>', '<add~~rdx, rax>', '<call~~0x400110>']}, {'block_Idx': 0, 'blockInsts': ['<push~~rbx>', '<sub~~rsp, 0x8c0>', '<mov~~qword ptr [rsp + 0x878], rdx>', '<mov~~qword ptr [rsp + 0x880], rcx>', '<mov~~dword ptr [rsp + 0x88c], r8d>', '<mov~~rax, qword ptr [rdi + 0xa0]>', '<mov~~qword ptr [rsp + 0x890], rax>', '<mov~~rcx, rsi>', '<mov~~qword ptr [rsp + 0x898], rcx>', '<mov~~qword ptr [rsp + 0x8a0], rsi>', '<mov~~ecx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x8ac], ecx>', '<mov~~dword ptr [rdx], 0>', '<mov~~rcx, rax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x8b0], rcx>', '<mov~~eax, dword ptr [rax + 4]>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x8bc], eax>', '<jne~~0x4005dd>']}, {'block_Idx': 193, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x718]>', '<mov~~rax, qword ptr [rsp + 0x720]>', '<mov~~rsi, qword ptr [rsp + 0x60]>', '<mov~~rdx, qword ptr [rsp + 0x58]>', '<mov~~r8d, dword ptr [rsp + 0x6c]>', '<mov~~rdi, qword ptr [rsp + 0x70]>', '<mov~~r9, qword ptr [rsp + 0x78]>', '<mov~~r10, qword ptr [rsp + 0x80]>', '<mov~~qword ptr [rsp + 0x30], r10>', '<mov~~qword ptr [rsp + 0x38], r9>', '<mov~~qword ptr [rsp + 0x40], rdi>', '<mov~~dword ptr [rsp + 0x48], r8d>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~eax, dword ptr [rax]>', '<mov~~edi, esi>', '<sar~~edi, 1>', '<sub~~edx, edi>', '<mov~~dword ptr [rsp + 0x4c], edx>', '<add~~edx, esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x50], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x54], edx>', '<cmp~~eax, 0>', '<je~~0x403608>']}, {'block_Idx': 326, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x54c]>', '<cmp~~eax, 1>', '<jle~~0x402b34>']}, {'block_Idx': 225, 'blockInsts': ['<jmp~~0x4019c5>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x668]>', '<mov~~rsi, qword ptr [rsp + 0x38]>', '<mov~~edi, dword ptr [rsp + 0x4c]>', '<mov~~rax, qword ptr [rsp + 0x718]>', '<mov~~ecx, dword ptr [rsp + 0x54]>', '<mov~~dword ptr [rsi], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0x30]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x1c], edx>', '<mov~~qword ptr [rsp + 0x20], rcx>', '<mov~~qword ptr [rsp + 0x28], rax>', '<jmp~~0x403647>']}, {'block_Idx': 374, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x548]>', '<mov~~rax, qword ptr [rsp + 0x708]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2e14]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 114, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<cmp~~eax, 0xc>', '<jge~~0x401431>']}, {'block_Idx': 226, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x608]>', '<add~~eax, -8>', '<cmp~~eax, 5>', '<jae~~0x402842>']}, {'block_Idx': 91, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x710]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4358]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x88c]>', '<mov~~esi, dword ptr [rsp + 0x864]>', '<mov~~ecx, dword ptr [rsp + 0x854]>', '<xor~~edx, edx>', '<sub~~ecx, esi>', '<cmovb~~ecx, edx>', '<cmp~~ecx, eax>', '<cmovb~~eax, ecx>', '<mov~~dword ptr [rsp + 0x850], eax>', '<mov~~eax, dword ptr [rsp + 0x864]>', '<mov~~edx, dword ptr [rsp + 0x850]>', '<mov~~dword ptr [rsp + 0x844], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x848], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jb~~0x4037a0>']}, {'block_Idx': 411, 'blockInsts': ['<mov~~r8, qword ptr [rsp + 0x4b0]>', '<mov~~edx, dword ptr [rsp + 0x4ac]>', '<mov~~r11d, dword ptr [rsp + 0x4a8]>', '<mov~~eax, dword ptr [rsp + 0x4a4]>', '<mov~~esi, dword ptr [rsp + 0x4a0]>', '<mov~~rdi, qword ptr [rsp + 0x498]>', '<mov~~r9, qword ptr [rsp + 0x490]>', '<mov~~r10, qword ptr [rsp + 0x550]>', '<add~~esi, dword ptr [r10 + rdi*4]>', '<mov~~dword ptr [rsp + 0x2f8], esi>', '<mov~~ecx, esi>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x2fc], ecx>', '<mov~~eax, ecx>', '<add~~eax, r11d>', '<mov~~dword ptr [rsp + 0x300], eax>', '<mov~~ebx, eax>', '<add~~ebx, edx>', '<mov~~dword ptr [rsp + 0x304], ebx>', '<mov~~dword ptr [r10 + rdi*4], ebx>', '<mov~~r11, rdi>', '<or~~r11, 1>', '<mov~~qword ptr [rsp + 0x308], r11>', '<add~~esi, dword ptr [r10 + r11*4]>', '<mov~~dword ptr [rsp + 0x310], esi>', '<mov~~edx, esi>', '<add~~edx, ecx>', '<mov~~dword ptr [rsp + 0x314], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x318], ecx>', '<mov~~eax, ecx>', '<add~~eax, ebx>', '<mov~~dword ptr [rsp + 0x31c], eax>', '<mov~~dword ptr [r10 + r11*4], eax>', '<add~~rdi, 2>', '<mov~~qword ptr [rsp + 0x320], rdi>', '<add~~r8, 2>', '<mov~~qword ptr [rsp + 0x328], r8>', '<cmp~~r8, r9>', '<mov~~r9, rdi>', '<mov~~qword ptr [rsp + 0x498], r9>', '<mov~~r9d, esi>', '<mov~~dword ptr [rsp + 0x4a0], r9d>', '<mov~~r9d, edx>', '<mov~~dword ptr [rsp + 0x4a4], r9d>', '<mov~~r9d, ecx>', '<mov~~dword ptr [rsp + 0x4a8], r9d>', '<mov~~r9d, eax>', '<mov~~dword ptr [rsp + 0x4ac], r9d>', '<mov~~qword ptr [rsp + 0x4b0], r8>', '<mov~~qword ptr [rsp + 0x4c8], rdi>', '<mov~~dword ptr [rsp + 0x4d4], esi>', '<mov~~dword ptr [rsp + 0x4d8], edx>', '<mov~~dword ptr [rsp + 0x4dc], ecx>', '<mov~~dword ptr [rsp + 0x4e0], eax>', '<je~~0x4029c8>']}, {'block_Idx': 27, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~ecx, dword ptr [rsp + 0x764]>', '<add~~ecx, -8>', '<sub~~ecx, 3>', '<setb~~cl>', '<mov~~eax, dword ptr [rax + 0xc]>', '<mov~~edx, eax>', '<sub~~edx, 2>', '<sete~~dl>', '<and~~cl, dl>', '<test~~cl, 1>', '<mov~~dword ptr [rsp + 0x744], eax>', '<jne~~0x400e52>']}, {'block_Idx': 41, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~ecx, dword ptr [rsp + 0x7d8]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x784], eax>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<add~~eax, 2>', '<cmp~~eax, ecx>', '<jge~~0x4036c0>']}, {'block_Idx': 223, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5e0]>', '<cmp~~eax, 0>', '<je~~0x402bbe>']}, {'block_Idx': 409, 'blockInsts': ['<jmp~~0x4025e7>']}, {'block_Idx': 177, 'blockInsts': ['<mov~~edi, dword ptr [rsp + 0x20c]>', '<mov~~esi, dword ptr [rsp + 0x210]>', '<mov~~edx, dword ptr [rsp + 0x214]>', '<mov~~r8, qword ptr [rsp + 0x218]>', '<mov~~rax, qword ptr [rsp + 0x220]>', '<mov~~rcx, qword ptr [rsp + 0x228]>', '<mov~~qword ptr [rsp + 0x1c0], r8>', '<xor~~r8d, r8d>', '<cmp~~edx, 0>', '<mov~~r9d, esi>', '<mov~~dword ptr [rsp + 0x1cc], r9d>', '<mov~~qword ptr [rsp + 0x1d0], r8>', '<mov~~r8, rax>', '<mov~~qword ptr [rsp + 0x1d8], r8>', '<mov~~r8, rcx>', '<mov~~qword ptr [rsp + 0x1e0], r8>', '<mov~~dword ptr [rsp + 0x1ec], edi>', '<mov~~dword ptr [rsp + 0x1f0], esi>', '<mov~~dword ptr [rsp + 0x1f4], edx>', '<mov~~qword ptr [rsp + 0x1f8], rcx>', '<mov~~qword ptr [rsp + 0x200], rax>', '<jle~~0x402fb2>']}, {'block_Idx': 57, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x740]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4603]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 88, 'blockInsts': ['<jmp~~0x4011e4>']}, {'block_Idx': 281, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x402c54>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x820]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~edx, dword ptr [rsp + 0x848]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<call~~0x500010>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x7a4]>', '<cmp~~eax, 0>', '<je~~0x400c1a>']}, {'block_Idx': 167, 'blockInsts': ['<jmp~~0x40175a>']}, {'block_Idx': 68, 'blockInsts': ['<jmp~~0x4036c0>']}, {'block_Idx': 92, 'blockInsts': ['<jmp~~0x40120e>']}, {'block_Idx': 250, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x584]>', '<mov~~edx, dword ptr [rsp + 0x580]>', '<mov~~eax, dword ptr [rsp + 0x58c]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x800]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x574], eax>', '<jmp~~0x401cf9>']}, {'block_Idx': 290, 'blockInsts': ['<jmp~~0x402b34>']}, {'block_Idx': 237, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<mov~~edx, dword ptr [rsp + 0x5e8]>', '<mov~~rsi, qword ptr [rsp + 0x640]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<add~~rax, 0x58>', '<shl~~rsi, 3>', '<add~~rax, rsi>', '<mov~~qword ptr [rsp + 0x5c8], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x5d0], edx>', '<mov~~dword ptr [rsp + 0x5d4], ecx>', '<mov~~qword ptr [rsp + 0x5d8], rax>', '<jmp~~0x401bd4>']}, {'block_Idx': 221, 'blockInsts': ['<jmp~~0x402c54>']}, {'block_Idx': 162, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x234]>', '<cmp~~eax, 2>', '<jne~~0x40330d>']}, {'block_Idx': 169, 'blockInsts': ['<jmp~~0x40175a>']}, {'block_Idx': 236, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x258], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x260], rax>', '<mov~~rax, qword ptr [rsp + 0x260]>', '<mov~~rdx, qword ptr [rsp + 0x258]>', '<mov~~ecx, dword ptr [rsp + 0x5e0]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~dword ptr [rsp + 0x24c], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x250], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x260], rax>', '<jl~~0x402b74>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x79c]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x794]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<jne~~0x4036c0>']}, {'block_Idx': 124, 'blockInsts': ['<jmp~~0x40143f>']}, {'block_Idx': 215, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x40]>', '<mov~~eax, dword ptr [rsp + 0x1c]>', '<mov~~rcx, qword ptr [rsp + 0x20]>', '<mov~~rdx, qword ptr [rsp + 0x28]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x6c], edi>', '<mov~~qword ptr [rsp + 0x70], rsi>', '<mov~~qword ptr [rsp + 0x78], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x40355a>']}, {'block_Idx': 64, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x710]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x452e]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~esi, dword ptr [rsp + 0x868]>', '<mov~~edx, dword ptr [rsp + 0x86c]>', '<mov~~rax, qword ptr [rsp + 0x870]>', '<mov~~dword ptr [rsp + 0x7d8], edx>', '<mov~~dword ptr [rsp + 0x7dc], esi>', '<mov~~esi, edx>', '<shl~~esi, 3>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~rax, rdi>', '<mov~~qword ptr [rsp + 0x7e0], rax>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~esi, edi>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~edx, edi>', '<mov~~rdi, rcx>', '<add~~rdi, 0x28>', '<mov~~qword ptr [rsp + 0x7e8], rdi>', '<mov~~qword ptr [rcx + 0x28], rax>', '<mov~~rdi, rcx>', '<add~~rdi, 0x3c>', '<mov~~qword ptr [rsp + 0x7f0], rdi>', '<mov~~dword ptr [rcx + 0x3c], esi>', '<mov~~edx, edx>', '<mov~~esi, edx>', '<mov~~rdx, rax>', '<add~~rdx, rsi>', '<mov~~rsi, rcx>', '<add~~rsi, 0x30>', '<mov~~qword ptr [rsp + 0x7f8], rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x800], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x808], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x80c], eax>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x400c63>']}, {'block_Idx': 163, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x234]>', '<cmp~~eax, 2>', '<jne~~0x40353b>']}, {'block_Idx': 437, 'blockInsts': ['<jmp~~0x402b34>']}, {'block_Idx': 46, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~edx, dword ptr [rsp + 0x7a8]>', '<mov~~ecx, dword ptr [rax]>', '<add~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x794]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<jne~~0x4036c0>']}, {'block_Idx': 145, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<mov~~rax, qword ptr [rsp + 0x7e0]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b8]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x6a0], ecx>', '<mov~~dword ptr [rsp + 0x6a4], eax>', '<jmp~~0x401567>']}, {'block_Idx': 106, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~ecx, dword ptr [rsp + 0x6c8]>', '<mov~~rax, qword ptr [rsp + 0x7e0]>', '<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x6c0], ecx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<jmp~~0x401319>']}, {'block_Idx': 85, 'blockInsts': ['<jmp~~0x402c54>']}, {'block_Idx': 54, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x18], rdi>', '<mov~~qword ptr [rsp + 0x20], rsi>', '<mov~~qword ptr [rsp + 0x28], rdx>', '<mov~~eax, dword ptr [rdx + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<mov~~dword ptr [rsp + 0x34], eax>', '<mov~~dword ptr [rsi], eax>', '<cmp~~eax, 0x10>', '<jge~~0x400166>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x808]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400d7e>']}, {'block_Idx': 228, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402bbe>']}, {'block_Idx': 192, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x718]>', '<mov~~rax, qword ptr [rsp + 0x720]>', '<mov~~rdx, qword ptr [rsp + 0xd0]>', '<mov~~rsi, qword ptr [rsp + 0xc8]>', '<mov~~r8d, dword ptr [rsp + 0xdc]>', '<mov~~rdi, qword ptr [rsp + 0xe0]>', '<mov~~r9, qword ptr [rsp + 0xe8]>', '<mov~~r10, qword ptr [rsp + 0xf0]>', '<mov~~qword ptr [rsp + 0xa0], r10>', '<mov~~qword ptr [rsp + 0xa8], r9>', '<mov~~qword ptr [rsp + 0xb0], rdi>', '<mov~~dword ptr [rsp + 0xb8], r8d>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~dword ptr [rsp + 0xbc], edx>', '<mov~~eax, dword ptr [rax]>', '<add~~edx, esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0xc0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0xc4], edx>', '<cmp~~eax, 0>', '<je~~0x40340d>']}, {'block_Idx': 355, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x4f8]>', '<mov~~rax, qword ptr [rsp + 0x3e0]>', '<and~~rax, 0xfffffffffffffffc>', '<mov~~qword ptr [rsp + 0x3c0], rax>', '<mov~~edx, 1>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x3c8], rdx>', '<mov~~dword ptr [rsp + 0x3d4], ecx>', '<mov~~qword ptr [rsp + 0x3d8], rax>', '<mov~~rdx, qword ptr [rsp + 0x3d8]>', '<mov~~eax, dword ptr [rsp + 0x3d4]>', '<mov~~rcx, qword ptr [rsp + 0x3c8]>', '<mov~~rsi, qword ptr [rsp + 0x3c0]>', '<mov~~rdi, qword ptr [rsp + 0x550]>', '<mov~~qword ptr [rsp + 0x398], rcx>', '<add~~eax, dword ptr [rdi + rcx*4]>', '<mov~~dword ptr [rsp + 0x3a0], eax>', '<mov~~dword ptr [rdi + rcx*4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 4]>', '<mov~~dword ptr [rsp + 0x3a4], eax>', '<mov~~dword ptr [rdi + rcx*4 + 4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 8]>', '<mov~~dword ptr [rsp + 0x3a8], eax>', '<mov~~dword ptr [rdi + rcx*4 + 8], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 0xc]>', '<mov~~dword ptr [rsp + 0x3ac], eax>', '<mov~~dword ptr [rdi + rcx*4 + 0xc], eax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x3b0], rcx>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x3b8], rdx>', '<cmp~~rdx, rsi>', '<mov~~rsi, rcx>', '<mov~~qword ptr [rsp + 0x3c8], rsi>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x3d4], esi>', '<mov~~qword ptr [rsp + 0x3d8], rdx>', '<mov~~qword ptr [rsp + 0x3f0], rcx>', '<mov~~dword ptr [rsp + 0x3fc], eax>', '<je~~0x4028a0>']}, {'block_Idx': 211, 'blockInsts': ['<jmp~~0x4019b3>']}, {'block_Idx': 1, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x88c]>', '<mov~~rax, qword ptr [rsp + 0x8b0]>', '<mov~~rsi, qword ptr [rsp + 0x890]>', '<mov~~edx, 4>', '<cmp~~ecx, 4>', '<cmovg~~edx, ecx>', '<mov~~dword ptr [rax], edx>', '<mov~~rdi, qword ptr [rsi + 0x98]>', '<add~~rsi, 0xa8>', '<call~~0x500010>']}, {'block_Idx': 179, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x800]>', '<mov~~edx, dword ptr [rsp + 0x624]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x634]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x608], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 7>', '<mov~~dword ptr [rsi], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~edx, 8>', '<mov~~dword ptr [rsi], edx>', '<mov~~edi, 0x80>', '<shr~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x620]>', '<and~~edi, eax>', '<xor~~eax, eax>', '<mov~~esi, 1>', '<cmp~~edi, 0>', '<mov~~edi, edx>', '<mov~~dword ptr [rsp + 0x60c], edi>', '<mov~~dword ptr [rsp + 0x610], esi>', '<mov~~dword ptr [rsp + 0x614], edx>', '<mov~~dword ptr [rsp + 0x618], ecx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<je~~0x401959>']}, {'block_Idx': 18, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x800]>', '<mov~~rax, qword ptr [rsp + 0x7e0]>', '<mov~~edx, dword ptr [rsp + 0x80c]>', '<mov~~esi, edx>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x750], esi>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x754], edx>', '<mov~~rdx, rax>', '<add~~rdx, 3>', '<mov~~qword ptr [rsp + 0x758], rdx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x760], eax>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x764], eax>', '<mov~~dword ptr [rcx], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x400e1f>']}, {'block_Idx': 95, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x750]>', '<sub~~eax, 6>', '<je~~0x40124a>']}, {'block_Idx': 49, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x730], rax>', '<jmp~~0x400f53>']}, {'block_Idx': 238, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x890]>', '<mov~~rax, qword ptr [rsp + 0x640]>', '<mov~~esi, eax>', '<xor~~edx, edx>', '<call~~0x4048c0>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x890]>', '<mov~~rdx, qword ptr [rsp + 0x8b0]>', '<mov~~ecx, dword ptr [rsp + 0x88c]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x880]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~esi, dword ptr [rdx]>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x8bc], esi>', '<mov~~dword ptr [rsp + 0x868], edx>', '<mov~~dword ptr [rsp + 0x86c], ecx>', '<mov~~qword ptr [rsp + 0x870], rax>', '<je~~0x4008d8>']}, {'block_Idx': 388, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x4f8]>', '<mov~~ecx, dword ptr [rsp + 0x4f4]>', '<mov~~edx, dword ptr [rsp + 0x4ec]>', '<mov~~esi, dword ptr [rsp + 0x4e4]>', '<mov~~r8d, dword ptr [rsp + 0x54c]>', '<mov~~edi, r8d>', '<mov~~qword ptr [rsp + 0x4b8], rdi>', '<and~~rdi, 1>', '<mov~~qword ptr [rsp + 0x4c0], rdi>', '<mov~~edi, 4>', '<cmp~~r8d, 5>', '<mov~~qword ptr [rsp + 0x4c8], rdi>', '<mov~~dword ptr [rsp + 0x4d4], esi>', '<mov~~dword ptr [rsp + 0x4d8], edx>', '<mov~~dword ptr [rsp + 0x4dc], ecx>', '<mov~~dword ptr [rsp + 0x4e0], eax>', '<je~~0x4029c8>']}, {'block_Idx': 174, 'blockInsts': ['<lea~~rdi, [rip + 0x1f6b]>', '<lea~~rsi, [rip + 0x1efc]>', '<mov~~edx, 0x2b9>', '<lea~~rcx, [rip + 0x1f69]>', '<call~~0x500050>']}, {'block_Idx': 107, 'blockInsts': ['<jmp~~0x4012f0>']}, {'block_Idx': 229, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x5a0]>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rsp + 0x598]>', '<mov~~esi, dword ptr [rsp + 0x5b0]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x590], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x5a0], rax>', '<jl~~0x401b91>']}, {'block_Idx': 358, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x548]>', '<mov~~edx, dword ptr [rsp + 0x4f0]>', '<mov~~edi, dword ptr [rsp + 0x4ec]>', '<mov~~rsi, qword ptr [rsp + 0x550]>', '<mov~~ecx, dword ptr [rsp + 0x4e8]>', '<shl~~ecx, 1>', '<mov~~r8d, eax>', '<add~~r8d, -4>', '<mov~~r8d, r8d>', '<mov~~esi, dword ptr [rsi + r8*4]>', '<add~~ecx, edi>', '<add~~edx, esi>', '<sub~~ecx, edx>', '<mov~~dword ptr [rsp + 0x4e4], ecx>', '<cmp~~eax, 4>', '<jne~~0x40281b>']}, {'block_Idx': 227, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6a8]>', '<mov~~rax, qword ptr [rsp + 0x640]>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x240], rax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x248], ecx>', '<movsxd~~rcx, ecx>', '<cmp~~rax, rcx>', '<jge~~0x402c22>']}, {'block_Idx': 222, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~esi, dword ptr [rsp + 0x5e4]>', '<mov~~edx, dword ptr [rsp + 0x5bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x5ac], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x5ac]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x5b0], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402b34>']}, {'block_Idx': 40, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x764]>', '<add~~eax, -7>', '<mov~~ecx, 2>', '<mov~~dword ptr [rsp + 0x748], ecx>', '<mov~~dword ptr [rsp + 0x74c], eax>', '<jmp~~0x400ea1>']}, {'block_Idx': 240, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x708]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2da1]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 101, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~edx, dword ptr [rsp + 0x6c0]>', '<mov~~eax, dword ptr [rsp + 0x6c4]>', '<mov~~dword ptr [rsp + 0x6b4], eax>', '<mov~~dword ptr [rsp + 0x6b8], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x6bc], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401376>']}, {'block_Idx': 172, 'blockInsts': ['<lea~~rdi, [rip + 0x2199]>', '<lea~~rsi, [rip + 0x212a]>', '<mov~~edx, 0x2b7>', '<lea~~rcx, [rip + 0x2197]>', '<call~~0x500050>']}, {'block_Idx': 60, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x800]>', '<mov~~eax, dword ptr [rsp + 0x76c]>', '<add~~eax, 8>', '<mov~~dword ptr [rsp + 0x768], eax>', '<mov~~dword ptr [rcx], eax>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~edx, dword ptr [rsp + 0x7d8]>', '<mov~~ecx, eax>', '<mov~~eax, dword ptr [rsp + 0x768]>', '<add~~ecx, 2>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x780], eax>', '<jl~~0x400cee>']}, {'block_Idx': 170, 'blockInsts': ['<jmp~~0x402c54>']}, {'block_Idx': 19, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x47f0]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 86, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x750]>', '<test~~eax, eax>', '<je~~0x40122d>']}, {'block_Idx': 399, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x460]>', '<mov~~ecx, dword ptr [rsp + 0x45c]>', '<mov~~r10d, dword ptr [rsp + 0x458]>', '<mov~~edx, dword ptr [rsp + 0x454]>', '<mov~~rsi, qword ptr [rsp + 0x448]>', '<mov~~r8, qword ptr [rsp + 0x440]>', '<mov~~r9, qword ptr [rsp + 0x550]>', '<add~~edx, dword ptr [r9 + rsi*4]>', '<mov~~dword ptr [rsp + 0x330], edx>', '<mov~~eax, edx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x334], eax>', '<mov~~r10d, eax>', '<add~~r10d, ecx>', '<mov~~dword ptr [rsp + 0x338], r10d>', '<mov~~dword ptr [r9 + rsi*4], r10d>', '<add~~edx, dword ptr [r9 + rsi*4 + 4]>', '<mov~~dword ptr [rsp + 0x33c], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x340], ecx>', '<mov~~eax, ecx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x344], eax>', '<mov~~dword ptr [r9 + rsi*4 + 4], eax>', '<add~~rsi, 2>', '<mov~~qword ptr [rsp + 0x348], rsi>', '<add~~rdi, 2>', '<mov~~qword ptr [rsp + 0x350], rdi>', '<cmp~~rdi, r8>', '<mov~~r8, rsi>', '<mov~~qword ptr [rsp + 0x448], r8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rsp + 0x454], r8d>', '<mov~~r8d, ecx>', '<mov~~dword ptr [rsp + 0x458], r8d>', '<mov~~r8d, eax>', '<mov~~dword ptr [rsp + 0x45c], r8d>', '<mov~~qword ptr [rsp + 0x460], rdi>', '<mov~~qword ptr [rsp + 0x478], rsi>', '<mov~~dword ptr [rsp + 0x484], edx>', '<mov~~dword ptr [rsp + 0x488], ecx>', '<mov~~dword ptr [rsp + 0x48c], eax>', '<je~~0x402948>']}, {'block_Idx': 157, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x648]>', '<mov~~ecx, dword ptr [rsp + 0x64c]>', '<cmp~~ecx, 2>', '<mov~~dword ptr [rsp + 0x63c], eax>', '<je~~0x40173f>']}, {'block_Idx': 341, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x548]>', '<mov~~rcx, qword ptr [rsp + 0x550]>', '<mov~~esi, dword ptr [rsp + 0x4f0]>', '<mov~~edx, dword ptr [rsp + 0x4f4]>', '<sub~~edx, esi>', '<mov~~esi, eax>', '<add~~esi, -3>', '<mov~~esi, esi>', '<mov~~ecx, dword ptr [rcx + rsi*4]>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<add~~ecx, edx>', '<mov~~dword ptr [rsp + 0x4ec], ecx>', '<cmp~~eax, 3>', '<je~~0x4021f7>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x814]>', '<mov~~ecx, dword ptr [rsp + 0x810]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rdx + 0x98]>', '<mov~~ecx, ecx>', '<mov~~rsi, rdi>', '<add~~rsi, rcx>', '<mov~~eax, eax>', '<mov~~edx, eax>', '<call~~0x500018>']}, {'block_Idx': 109, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<cmp~~eax, 0>', '<jne~~0x4013f7>']}, {'block_Idx': 63, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rsp + 0x7e0]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x6f8], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~ecx, edi>', '<shr~~ecx, 8>', '<mov~~eax, edx>', '<or~~eax, 8>', '<cmp~~esi, 0>', '<cmove~~ecx, edi>', '<cmp~~esi, 0>', '<cmove~~eax, edx>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, qword ptr [rip + 0xfef6e]>', '<movzx~~ecx, byte ptr [rcx + rdx]>', '<add~~eax, ecx>', '<mov~~ecx, 7>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsp + 0x6fc], ecx>', '<cmp~~eax, 6>', '<je~~0x4011e4>']}, {'block_Idx': 139, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x754]>', '<sub~~eax, 0xe>', '<je~~0x4014f9>']}, {'block_Idx': 115, 'blockInsts': ['<jmp~~0x402c54>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x708]>', '<mov~~rdi, qword ptr [rax]>', '<lea~~rsi, [rip + 0x3c7f]>', '<xor~~edx, edx>', '<call~~0x500048>']}, {'block_Idx': 373, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x54c]>', '<cmp~~eax, 4>', '<jle~~0x402b34>']}, {'block_Idx': 173, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x88], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x403689>']}, {'block_Idx': 50, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x740]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x400f2b>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7e0]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~dword ptr [rdx], 0x20>', '<mov~~rdx, rax>', '<add~~rdx, 0x54>', '<mov~~qword ptr [rsp + 0x7b0], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x20>', '<mov~~qword ptr [rsp + 0x7b8], rdx>', '<mov~~qword ptr [rsp + 0x7c0], rax>', '<mov~~eax, 0x20>', '<mov~~qword ptr [rsp + 0x7c8], rcx>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<mov~~rdi, qword ptr [rsp + 0x800]>', '<mov~~rax, qword ptr [rsp + 0x7c8]>', '<mov~~edx, dword ptr [rsp + 0x7d4]>', '<mov~~qword ptr [rsp + 0x788], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x79c], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x794], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x798], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x79c]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x7f0]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x7a0], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x7a4], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x7a8], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x7ac], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400b81>']}, {'block_Idx': 369, 'blockInsts': ['<jmp~~0x402413>']}, {'block_Idx': 166, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x878]>', '<mov~~rdi, qword ptr [rsp + 0x720]>', '<mov~~rdx, qword ptr [rsp + 0x6a8]>', '<mov~~ecx, dword ptr [rsp + 0x230]>', '<imul~~ecx, dword ptr [rdx]>', '<mov~~edx, 4>', '<mov~~esi, 2>', '<cmp~~dword ptr [rdi], 0>', '<cmove~~edx, esi>', '<imul~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x7d8]>', '<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x18], eax>', '<cmp~~eax, ecx>', '<jle~~0x403737>']}, {'block_Idx': 387, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x4f8]>', '<mov~~edx, dword ptr [rsp + 0x4f4]>', '<mov~~esi, dword ptr [rsp + 0x4ec]>', '<mov~~rax, qword ptr [rsp + 0x468]>', '<and~~rax, 0xfffffffffffffffe>', '<mov~~qword ptr [rsp + 0x440], rax>', '<mov~~edi, 3>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x448], rdi>', '<mov~~dword ptr [rsp + 0x454], esi>', '<mov~~dword ptr [rsp + 0x458], edx>', '<mov~~dword ptr [rsp + 0x45c], ecx>', '<mov~~qword ptr [rsp + 0x460], rax>', '<jmp~~0x4025e7>']}, {'block_Idx': 206, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x118]>', '<mov~~edx, dword ptr [rsp + 0x12c]>', '<mov~~rsi, qword ptr [rsp + 0x110]>', '<mov~~ecx, dword ptr [rsp + 0x138]>', '<mov~~r8d, dword ptr [rsp + 0x134]>', '<mov~~edi, dword ptr [rsp + 0x130]>', '<mov~~r9d, dword ptr [rsp + 0x13c]>', '<mov~~word ptr [rsi], r9w>', '<sub~~edi, r8d>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0xfc], edx>', '<mov~~qword ptr [rsp + 0x100], rcx>', '<mov~~qword ptr [rsp + 0x108], rax>', '<mov~~rsi, qword ptr [rsp + 0x120]>', '<mov~~eax, dword ptr [rsp + 0xfc]>', '<mov~~rcx, qword ptr [rsp + 0x100]>', '<mov~~rdx, qword ptr [rsp + 0x108]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x154], edi>', '<mov~~qword ptr [rsp + 0x158], rsi>', '<mov~~qword ptr [rsp + 0x160], rdx>', '<mov~~qword ptr [rsp + 0x168], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x4030d4>']}, {'block_Idx': 9, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x864]>', '<mov~~edx, dword ptr [rsp + 0x850]>', '<mov~~dword ptr [rsp + 0x844], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x848], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jb~~0x4037a0>']}, {'block_Idx': 183, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x898]>', '<mov~~rcx, qword ptr [rsp + 0x8a0]>', '<mov~~esi, dword ptr [rsp + 0x88]>', '<mov~~rdx, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x58], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x60], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0x6c], esi>', '<mov~~qword ptr [rsp + 0x70], rdx>', '<mov~~qword ptr [rsp + 0x78], rcx>', '<mov~~qword ptr [rsp + 0x80], rax>', '<jmp~~0x40355a>']}, {'block_Idx': 372, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x4f8]>', '<mov~~ecx, dword ptr [rsp + 0x4f4]>', '<mov~~edx, dword ptr [rsp + 0x4ec]>', '<mov~~edi, dword ptr [rsp + 0x54c]>', '<mov~~esi, edi>', '<add~~rsi, -3>', '<mov~~qword ptr [rsp + 0x468], rsi>', '<and~~rsi, 1>', '<mov~~qword ptr [rsp + 0x470], rsi>', '<mov~~esi, 3>', '<cmp~~edi, 4>', '<mov~~qword ptr [rsp + 0x478], rsi>', '<mov~~dword ptr [rsp + 0x484], edx>', '<mov~~dword ptr [rsp + 0x488], ecx>', '<mov~~dword ptr [rsp + 0x48c], eax>', '<je~~0x402948>']}, {'block_Idx': 38, 'blockInsts': ['<jmp~~0x400e71>']}, {'block_Idx': 147, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x58]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 195, 'blockInsts': ['<jmp~~0x403689>']}, {'block_Idx': 74, 'blockInsts': ['<jmp~~0x402c54>']}, {'block_Idx': 158, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x648]>', '<mov~~ecx, dword ptr [rsp + 0x64c]>', '<or~~ecx, 2>', '<sub~~ecx, 3>', '<mov~~dword ptr [rsp + 0x63c], eax>', '<je~~0x40173f>']}, {'block_Idx': 99, 'blockInsts': ['<jmp~~0x40121c>']}, {'block_Idx': 370, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x428]>', '<mov~~rsi, qword ptr [rsp + 0x430]>', '<mov~~edx, dword ptr [rsp + 0x438]>', '<mov~~ecx, dword ptr [rsp + 0x43c]>', '<xor~~eax, eax>', '<cmp~~rdi, 0>', '<mov~~qword ptr [rsp + 0x280], rsi>', '<mov~~dword ptr [rsp + 0x288], edx>', '<mov~~dword ptr [rsp + 0x28c], ecx>', '<mov~~qword ptr [rsp + 0x290], rax>', '<je~~0x402b34>']}, {'block_Idx': 217, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x120]>', '<mov~~eax, dword ptr [rsp + 0xfc]>', '<mov~~rcx, qword ptr [rsp + 0x100]>', '<mov~~rdx, qword ptr [rsp + 0x108]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x154], edi>', '<mov~~qword ptr [rsp + 0x158], rsi>', '<mov~~qword ptr [rsp + 0x160], rdx>', '<mov~~qword ptr [rsp + 0x168], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x4030d4>']}, {'block_Idx': 136, 'blockInsts': ['<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 29, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x890]>', '<mov~~rcx, qword ptr [rsp + 0x858]>', '<mov~~rdx, qword ptr [rsp + 0x820]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x838]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x82c], edx>', '<mov~~dword ptr [rsp + 0x830], ecx>', '<mov~~dword ptr [rsp + 0x834], eax>', '<mov~~edi, dword ptr [rsp + 0x844]>', '<mov~~esi, dword ptr [rsp + 0x82c]>', '<mov~~ecx, dword ptr [rsp + 0x830]>', '<mov~~eax, dword ptr [rsp + 0x834]>', '<mov~~dword ptr [rsp + 0x810], eax>', '<mov~~dword ptr [rsp + 0x814], ecx>', '<mov~~edx, eax>', '<add~~edx, edi>', '<add~~edx, ecx>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x818], ecx>', '<mov~~dword ptr [rsp + 0x81c], eax>', '<jbe~~0x40082b>']}, {'block_Idx': 117, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~ecx, dword ptr [rsp + 0x6a0]>', '<mov~~edx, dword ptr [rsp + 0x6a4]>', '<mov~~dword ptr [rsp + 0x688], edx>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500038>']}, {'block_Idx': 398, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x550]>', '<mov~~rcx, qword ptr [rsp + 0x2c0]>', '<mov~~esi, dword ptr [rsp + 0x2b4]>', '<mov~~edi, dword ptr [rsp + 0x2b8]>', '<mov~~edx, dword ptr [rsp + 0x2bc]>', '<add~~edx, dword ptr [rax + rcx*4]>', '<add~~edx, edi>', '<add~~edx, esi>', '<mov~~dword ptr [rax + rcx*4], edx>', '<jmp~~0x402b34>']}, {'block_Idx': 141, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x7b0]>', '<mov~~dword ptr [rax], 1>', '<mov~~eax, dword ptr [rsp + 0x7a4]>', '<cmp~~eax, 0>', '<jle~~0x400c1a>']}, {'block_Idx': 383, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x3d8]>', '<mov~~eax, dword ptr [rsp + 0x3d4]>', '<mov~~rcx, qword ptr [rsp + 0x3c8]>', '<mov~~rsi, qword ptr [rsp + 0x3c0]>', '<mov~~rdi, qword ptr [rsp + 0x550]>', '<mov~~qword ptr [rsp + 0x398], rcx>', '<add~~eax, dword ptr [rdi + rcx*4]>', '<mov~~dword ptr [rsp + 0x3a0], eax>', '<mov~~dword ptr [rdi + rcx*4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 4]>', '<mov~~dword ptr [rsp + 0x3a4], eax>', '<mov~~dword ptr [rdi + rcx*4 + 4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 8]>', '<mov~~dword ptr [rsp + 0x3a8], eax>', '<mov~~dword ptr [rdi + rcx*4 + 8], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 0xc]>', '<mov~~dword ptr [rsp + 0x3ac], eax>', '<mov~~dword ptr [rdi + rcx*4 + 0xc], eax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x3b0], rcx>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x3b8], rdx>', '<cmp~~rdx, rsi>', '<mov~~rsi, rcx>', '<mov~~qword ptr [rsp + 0x3c8], rsi>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x3d4], esi>', '<mov~~qword ptr [rsp + 0x3d8], rdx>', '<mov~~qword ptr [rsp + 0x3f0], rcx>', '<mov~~dword ptr [rsp + 0x3fc], eax>', '<je~~0x4028a0>']}, {'block_Idx': 97, 'blockInsts': ['<jmp~~0x402c54>']}, {'block_Idx': 153, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x754]>', '<mov~~rdi, qword ptr [rsp + 0x710]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x406a]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rsp + 0x7f8]>', '<mov~~rdi, qword ptr [rsp + 0x7f0]>', '<mov~~r9, qword ptr [rsp + 0x7e8]>', '<mov~~r11d, dword ptr [rsp + 0x7ac]>', '<mov~~rdx, qword ptr [rsp + 0x788]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x4036c0>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x608]>', '<test~~eax, eax>', '<je~~0x401a24>']}, {'block_Idx': 104, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x8ac]>', '<mov~~edx, dword ptr [rsp + 0x6b4]>', '<mov~~esi, dword ptr [rsp + 0x73c]>', '<mov~~r8b, byte ptr [rsp + 0x707]>', '<mov~~rax, qword ptr [rsp + 0x890]>', '<add~~rax, 0xc>', '<mov~~qword ptr [rsp + 0x6a8], rax>', '<mov~~eax, 2>', '<mov~~edi, 4>', '<test~~r8b, 1>', '<cmovne~~eax, edi>', '<imul~~eax, esi>', '<imul~~eax, edx>', '<cmp~~eax, ecx>', '<jg~~0x402c54>']}, {'block_Idx': 33, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x7b0]>', '<cmp~~dword ptr [rax], 0>', '<jne~~0x400bf9>']}, {'block_Idx': 302, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x402c54>']}, {'block_Idx': 143, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68c]>', '<mov~~ecx, dword ptr [rsp + 0x738]>', '<mov~~rdx, qword ptr [rsp + 0x6a8]>', '<mov~~rsi, qword ptr [rsp + 0x890]>', '<mov~~rdi, qword ptr [rsp + 0x728]>', '<mov~~r8d, dword ptr [rsp + 0x700]>', '<mov~~r9d, dword ptr [rsp + 0x688]>', '<mov~~r10d, dword ptr [rsp + 0x6b4]>', '<mov~~r11, rsi>', '<add~~r11, 0x40>', '<mov~~qword ptr [rsp + 0x668], r11>', '<mov~~dword ptr [rsi + 0x40], r10d>', '<mov~~dword ptr [rsi + 8], r9d>', '<mov~~dword ptr [rdi], r8d>', '<mov~~rdi, rsi>', '<add~~rdi, 0x50>', '<mov~~qword ptr [rsp + 0x670], rdi>', '<mov~~dword ptr [rsi + 0x50], ecx>', '<mov~~edx, dword ptr [rdx]>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x67c], edx>', '<mov~~dword ptr [rsp + 0x680], ecx>', '<mov~~dword ptr [rsp + 0x684], eax>', '<jle~~0x402c9d>']}, {'block_Idx': 256, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x500]>', '<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x538], edx>', '<mov~~dword ptr [rsp + 0x53c], ecx>', '<mov~~qword ptr [rsp + 0x540], rax>', '<jmp~~0x401e1f>']}, {'block_Idx': 251, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~edi, dword ptr [rsp + 0x584]>', '<mov~~esi, dword ptr [rsp + 0x580]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~r9d, dword ptr [rsp + 0x58c]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x56c], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x588]>', '<mov~~dword ptr [rsp + 0x570], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x56c]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x570]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x574], eax>', '<mov~~rax, qword ptr [rsp + 0x578]>', '<mov~~rdx, qword ptr [rsp + 0x5c8]>', '<mov~~edi, dword ptr [rsp + 0x580]>', '<mov~~esi, dword ptr [rsp + 0x574]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x55c], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x55c]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x560], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402b34>']}, {'block_Idx': 340, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x54c]>', '<cmp~~eax, 2>', '<jle~~0x402b34>']}, {'block_Idx': 134, 'blockInsts': ['<jmp~~0x40144d>']}, {'block_Idx': 385, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x418]>', '<mov~~eax, dword ptr [rsp + 0x414]>', '<mov~~ecx, dword ptr [rsp + 0x410]>', '<mov~~rdx, qword ptr [rsp + 0x408]>', '<mov~~rdi, qword ptr [rsp + 0x400]>', '<mov~~r8, qword ptr [rsp + 0x550]>', '<mov~~qword ptr [rsp + 0x358], rdx>', '<add~~ecx, dword ptr [r8 + rdx*4]>', '<mov~~dword ptr [rsp + 0x360], ecx>', '<mov~~r10d, ecx>', '<add~~r10d, eax>', '<mov~~dword ptr [rsp + 0x364], r10d>', '<mov~~dword ptr [r8 + rdx*4], r10d>', '<mov~~r9, rdx>', '<or~~r9, 1>', '<mov~~qword ptr [rsp + 0x368], r9>', '<add~~ecx, dword ptr [r8 + r9*4]>', '<mov~~dword ptr [rsp + 0x370], ecx>', '<mov~~eax, ecx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x374], eax>', '<mov~~dword ptr [r8 + r9*4], eax>', '<add~~ecx, dword ptr [r8 + rdx*4 + 8]>', '<mov~~dword ptr [rsp + 0x378], ecx>', '<mov~~r9d, ecx>', '<add~~r9d, eax>', '<mov~~dword ptr [rsp + 0x37c], r9d>', '<mov~~dword ptr [r8 + rdx*4 + 8], r9d>', '<add~~ecx, dword ptr [r8 + rdx*4 + 0xc]>', '<mov~~dword ptr [rsp + 0x380], ecx>', '<mov~~eax, ecx>', '<add~~eax, r9d>', '<mov~~dword ptr [rsp + 0x384], eax>', '<mov~~dword ptr [r8 + rdx*4 + 0xc], eax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x388], rdx>', '<add~~rsi, 4>', '<mov~~qword ptr [rsp + 0x390], rsi>', '<cmp~~rsi, rdi>', '<mov~~rdi, rdx>', '<mov~~qword ptr [rsp + 0x408], rdi>', '<mov~~edi, ecx>', '<mov~~dword ptr [rsp + 0x410], edi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x414], edi>', '<mov~~qword ptr [rsp + 0x418], rsi>', '<mov~~qword ptr [rsp + 0x430], rdx>', '<mov~~dword ptr [rsp + 0x438], ecx>', '<mov~~dword ptr [rsp + 0x43c], eax>', '<je~~0x402a63>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x890]>', '<mov~~ecx, dword ptr [rsp + 0x8bc]>', '<mov~~dword ptr [rsp + 0x854], ecx>', '<mov~~rcx, rax>', '<add~~rcx, 0xa0>', '<mov~~qword ptr [rsp + 0x858], rcx>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x864], eax>', '<cmp~~eax, 4>', '<jb~~0x40063c>']}, {'block_Idx': 15, 'blockInsts': ['<mov~~edi, dword ptr [rsp + 0x844]>', '<mov~~esi, dword ptr [rsp + 0x82c]>', '<mov~~ecx, dword ptr [rsp + 0x830]>', '<mov~~eax, dword ptr [rsp + 0x834]>', '<mov~~dword ptr [rsp + 0x810], eax>', '<mov~~dword ptr [rsp + 0x814], ecx>', '<mov~~edx, eax>', '<add~~edx, edi>', '<add~~edx, ecx>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x818], ecx>', '<mov~~dword ptr [rsp + 0x81c], eax>', '<jbe~~0x40082b>']}, {'block_Idx': 66, 'blockInsts': ['<jmp~~0x402c54>']}, {'block_Idx': 384, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x290]>', '<mov~~r9d, dword ptr [rsp + 0x28c]>', '<mov~~edx, dword ptr [rsp + 0x288]>', '<mov~~rsi, qword ptr [rsp + 0x280]>', '<mov~~rdi, qword ptr [rsp + 0x428]>', '<mov~~r8, qword ptr [rsp + 0x550]>', '<add~~edx, dword ptr [r8 + rsi*4]>', '<mov~~dword ptr [rsp + 0x268], edx>', '<mov~~ecx, edx>', '<add~~ecx, r9d>', '<mov~~dword ptr [rsp + 0x26c], ecx>', '<mov~~dword ptr [r8 + rsi*4], ecx>', '<add~~rsi, 1>', '<mov~~qword ptr [rsp + 0x270], rsi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x278], rax>', '<cmp~~rax, rdi>', '<mov~~qword ptr [rsp + 0x280], rsi>', '<mov~~dword ptr [rsp + 0x288], edx>', '<mov~~dword ptr [rsp + 0x28c], ecx>', '<mov~~qword ptr [rsp + 0x290], rax>', '<jne~~0x402aab>']}, {'block_Idx': 79, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d0]>', '<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~dword ptr [rsp + 0x6c8], ecx>', '<cmp~~rax, 0>', '<jge~~0x401201>']}, {'block_Idx': 52, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x784]>', '<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x770], rcx>', '<mov~~ecx, eax>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x77c], ecx>', '<mov~~dword ptr [rsp + 0x780], eax>', '<mov~~ecx, dword ptr [rsp + 0x77c]>', '<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~edx, dword ptr [rsp + 0x780]>', '<mov~~dword ptr [rsp + 0x76c], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x4036c0>']}, {'block_Idx': 190, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x610]>', '<mov~~edi, dword ptr [rsp + 0x60c]>', '<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rsp + 0x628]>', '<mov~~dword ptr [rsp + 0x5ec], eax>', '<mov~~esi, edi>', '<sar~~esi, 3>', '<mov~~dword ptr [rsp + 0x5f0], esi>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x5f4], ecx>', '<movzx~~esi, sil>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x5f8], edi>', '<mov~~dword ptr [rdx], edi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x5f8]>', '<mov~~dword ptr [rsp + 0x5fc], edx>', '<and~~edx, esi>', '<mov~~dword ptr [rsp + 0x600], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x604], eax>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x60c], ecx>', '<mov~~dword ptr [rsp + 0x610], eax>', '<je~~0x401890>']}, {'block_Idx': 112, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x890]>', '<call~~0x4037d0>']}, {'block_Idx': 239, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<mov~~edx, dword ptr [rsp + 0x5e8]>', '<mov~~eax, dword ptr [rsp + 0x548]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x530], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x538], edx>', '<mov~~dword ptr [rsp + 0x53c], ecx>', '<mov~~qword ptr [rsp + 0x540], rax>', '<mov~~rdx, qword ptr [rsp + 0x628]>', '<mov~~ecx, dword ptr [rsp + 0x538]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~rsi, qword ptr [rsp + 0x540]>', '<mov~~qword ptr [rsp + 0x518], rsi>', '<mov~~dword ptr [rsp + 0x520], eax>', '<mov~~dword ptr [rsp + 0x524], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x528], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x52c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401eb8>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x234]>', '<cmp~~eax, 2>', '<jne~~0x4030b5>']}, {'block_Idx': 150, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x800]>', '<mov~~edx, dword ptr [rsp + 0x67c]>', '<mov~~eax, dword ptr [rsp + 0x680]>', '<mov~~esi, dword ptr [rsp + 0x684]>', '<mov~~dword ptr [rsp + 0x234], edx>', '<mov~~edi, esi>', '<neg~~edi>', '<and~~edi, 7>', '<mov~~edx, esi>', '<mov~~esi, edi>', '<lea~~edx, [rdx + rsi + 0x10]>', '<mov~~dword ptr [rcx], edx>', '<mov~~ecx, eax>', '<mov~~qword ptr [rsp + 0x238], rcx>', '<sub~~eax, 3>', '<ja~~0x402cf9>']}, {'block_Idx': 235, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x248]>', '<mov~~rcx, qword ptr [rsp + 0x670]>', '<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x67c], edx>', '<mov~~dword ptr [rsp + 0x680], ecx>', '<mov~~dword ptr [rsp + 0x684], eax>', '<jmp~~0x402c9d>']}, {'block_Idx': 178, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~edx, dword ptr [rsp + 0x63c]>', '<mov~~dword ptr [rsp + 0x620], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x624], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x628], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x638], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x634], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x638]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x4017e9>']}, {'block_Idx': 397, 'blockInsts': ['<jmp~~0x4024cd>']}, {'block_Idx': 111, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6c8]>', '<mov~~eax, dword ptr [rsp + 0x750]>', '<movsxd~~rdx, eax>', '<lea~~rax, [rip + 0x3fb8]>', '<mov~~eax, dword ptr [rax + rdx*4]>', '<mov~~dword ptr [rsp + 0x6c0], ecx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<mov~~rcx, qword ptr [rsp + 0x890]>', '<mov~~edx, dword ptr [rsp + 0x6c0]>', '<mov~~eax, dword ptr [rsp + 0x6c4]>', '<mov~~dword ptr [rsp + 0x6b4], eax>', '<mov~~dword ptr [rsp + 0x6b8], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x6bc], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401376>']}, {'block_Idx': 189, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x614]>', '<mov~~eax, dword ptr [rsp + 0x618]>', '<mov~~edx, dword ptr [rsp + 0x61c]>', '<mov~~dword ptr [rsp + 0x5e0], edx>', '<mov~~dword ptr [rsp + 0x5e4], eax>', '<mov~~dword ptr [rsp + 0x5e8], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x4019a6>']}, {'block_Idx': 98, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x800]>', '<mov~~ecx, dword ptr [rsp + 0x6c8]>', '<mov~~rax, qword ptr [rsp + 0x7e0]>', '<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x6c0], ecx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<jmp~~0x401319>']}, {'block_Idx': 168, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x650]>', '<mov~~eax, dword ptr [rsp + 0x648]>', '<add~~eax, 1>', '<mov~~dword ptr [rcx], eax>', '<mov~~dword ptr [rsp + 0x63c], eax>', '<mov~~rax, qword ptr [rsp + 0x800]>', '<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~edx, dword ptr [rsp + 0x63c]>', '<mov~~dword ptr [rsp + 0x620], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x624], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x628], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x638], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x634], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x638]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x4017e9>']}, {'block_Idx': 187, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x1c0]>', '<mov~~eax, dword ptr [rsp + 0x1ec]>', '<mov~~r8d, dword ptr [rsp + 0x1f0]>', '<mov~~edi, dword ptr [rsp + 0x1f4]>', '<mov~~rcx, qword ptr [rsp + 0x1f8]>', '<mov~~rdx, qword ptr [rsp + 0x200]>', '<add~~rsi, 1>', '<movsxd~~r9, eax>', '<cmp~~rsi, r9>', '<mov~~r9d, eax>', '<mov~~dword ptr [rsp + 0x20c], r9d>', '<mov~~dword ptr [rsp + 0x210], r8d>', '<mov~~dword ptr [rsp + 0x214], edi>', '<mov~~qword ptr [rsp + 0x218], rsi>', '<mov~~qword ptr [rsp + 0x220], rdx>', '<mov~~qword ptr [rsp + 0x228], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402d77>']}], 'cfg_edge_info': [(247, 255), (185, 194), (226, 232), (242, 158), (250, 260), (18, 26), (188, 196), (180, 201), (11, 14), (251, 261), (339, 355), (257, 75), (192, 202), (232, 238), (181, 192), (145, 117), (85, 75), (74, 75), (317, 327), (357, 372), (118, 117), (228, 236), (354, 223), (358, 373), (218, 222), (210, 218), (111, 105), (104, 75), (115, 75), (224, 229), (173, 183), (143, 151), (66, 75), (155, 162), (384, 223), (206, 216), (242, 157), (368, 382), (29, 22), (357, 223), (238, 281), (166, 36), (339, 354), (204, 166), (215, 166), (217, 194), (221, 75), (302, 310), (114, 119), (17, 25), (317, 326), (386, 398), (387, 399), (50, 58), (10, 12), (205, 215), (87, 79), (254, 256), (217, 216), (214, 192), (106, 101), (143, 150), (88, 71), (179, 189), (57, 74), (198, 211), (6, 10), (209, 208), (251, 223), (29, 21), (168, 179), (220, 226), (383, 369), (243, 227), (89, 7), (202, 213), (64, 81), (67, 25), (409, 399), (128, 138), (50, 57), (341, 358), (368, 223), (32, 44), (72, 80), (38, 51), (58, 56), (437, 223), (98, 101), (260, 261), (371, 385), (220, 225), (261, 244), (113, 117), (23, 25), (39, 51), (410, 223), (164, 176), (402, 75), (340, 356), (197, 209), (19, 41), (383, 354), (219, 224), (370, 384), (341, 357), (170, 75), (159, 75), (72, 79), (347, 302), (388, 401), (209, 188), (27, 40), (119, 123), (101, 105), (134, 139), (222, 224), (52, 60), (355, 354), (35, 7), (75, 89), (196, 208), (175, 185), (164, 175), (219, 223), (60, 68), (208, 177), (208, 195), (156, 166), (388, 400), (26, 38), (42, 10), (260, 223), (207, 217), (27, 39), (189, 199), (213, 166), (163, 174), (222, 223), (204, 193), (215, 193), (236, 243), (373, 388), (97, 75), (237, 244), (230, 223), (111, 104), (151, 158), (399, 409), (238, 312), (203, 214), (60, 67), (384, 384), (244, 251), (46, 25), (68, 25), (177, 188), (107, 111), (26, 37), (8, 7), (290, 223), (178, 180), (166, 35), (399, 386), (199, 221), (92, 95), (310, 317), (372, 387), (33, 45), (196, 188), (216, 166), (144, 159), (114, 118), (155, 165), (36, 55), (229, 230), (99, 102), (439, 436), (8, 11), (80, 88), (200, 199), (151, 157), (25, 36), (162, 172), (34, 23), (254, 255), (165, 177), (51, 66), (302, 75), (233, 241), (266, 247), (198, 210), (0, 2), (239, 247), (129, 134), (44, 17), (372, 386), (81, 75), (102, 107), (155, 164), (214, 213), (417, 411), (158, 169), (45, 112), (247, 256), (117, 128), (147, 141), (136, 141), (139, 146), (188, 197), (80, 87), (41, 25), (52, 25), (133, 117), (232, 239), (25, 35), (162, 171), (236, 227), (95, 99), (266, 246), (354, 368), (157, 168), (327, 341), (241, 436), (40, 37), (239, 246), (150, 156), (129, 133), (21, 42), (169, 178), (44, 16), (153, 170), (91, 97), (102, 106), (224, 230), (173, 166), (24, 34), (194, 207), (255, 312), (246, 254), (187, 177), (109, 114), (139, 145), (373, 223), (2, 5), (183, 193), (146, 153), (43, 42), (165, 166), (55, 7), (35, 47), (95, 98), (206, 194), (227, 235), (157, 167), (327, 340), (326, 223), (400, 410), (79, 86), (228, 227), (101, 104), (150, 155), (190, 200), (401, 411), (10, 13), (23, 32), (175, 166), (201, 75), (202, 192), (231, 237), (24, 33), (255, 302), (194, 206), (374, 402), (87, 80), (124, 129), (9, 8), (256, 266), (179, 190), (109, 113), (6, 2), (386, 223), (356, 371), (168, 180), (281, 75), (2, 4), (385, 370), (231, 223), (13, 19), (112, 141), (326, 339), (223, 228), (16, 24), (195, 166), (385, 397), (193, 205), (227, 234), (138, 144), (189, 198), (436, 75), (281, 290), (190, 190), (163, 173), (234, 242), (340, 223), (34, 46), (397, 385), (56, 64), (105, 115), (459, 436), (5, 9), (9, 7), (86, 92), (141, 46), (79, 71), (356, 370), (63, 72), (241, 249), (71, 85), (171, 181), (398, 223), (12, 17), (411, 400), (104, 109), (13, 18), (244, 250), (223, 227), (347, 281), (16, 23), (193, 204), (177, 187), (5, 4), (141, 23), (49, 56), (138, 143), (178, 179), (4, 8), (240, 257), (123, 117), (382, 368), (370, 223), (355, 369), (22, 43), (45, 54), (37, 50), (56, 63), (67, 60), (15, 22), (226, 233), (229, 229), (18, 27), (86, 91), (11, 15), (119, 124), (63, 71), (200, 198), (400, 223), (192, 203), (41, 52), (12, 16), (1, 6), (233, 240), (411, 417), (46, 32), (436, 437), (42, 7), (0, 1), (358, 374), (167, 178), (369, 383), (210, 219), (171, 166), (33, 34), (243, 243), (4, 7), (211, 220), (235, 150), (225, 231), (14, 29), (155, 163), (37, 49), (158, 168)], 'cdg_edge_info': [(226, 232), (242, 158), (18, 26), (188, 196), (129, 128), (11, 14), (251, 261), (339, 355), (166, 55), (232, 238), (192, 202), (104, 89), (227, 150), (26, 7), (317, 327), (266, 254), (114, 138), (228, 236), (358, 373), (188, 209), (239, 254), (210, 218), (111, 105), (281, 89), (104, 75), (224, 229), (56, 7), (327, 223), (173, 183), (254, 266), (95, 102), (143, 151), (155, 162), (242, 157), (29, 22), (139, 153), (220, 227), (80, 85), (166, 36), (217, 194), (327, 227), (302, 310), (114, 119), (155, 166), (386, 398), (317, 326), (358, 89), (281, 223), (50, 58), (80, 71), (220, 231), (80, 89), (10, 12), (383, 383), (86, 7), (254, 256), (13, 41), (87, 79), (214, 192), (95, 101), (358, 75), (179, 189), (198, 211), (6, 10), (281, 227), (168, 179), (220, 226), (129, 117), (80, 75), (50, 89), (436, 227), (227, 242), (139, 138), (50, 57), (50, 75), (341, 358), (178, 89), (189, 89), (72, 80), (231, 244), (341, 223), (56, 81), (178, 201), (157, 178), (340, 370), (260, 261), (63, 89), (302, 7), (101, 115), (150, 166), (12, 25), (23, 25), (178, 75), (189, 75), (232, 302), (341, 227), (86, 95), (340, 356), (26, 89), (50, 56), (119, 128), (219, 224), (370, 384), (138, 7), (111, 7), (388, 401), (56, 89), (177, 208), (209, 188), (26, 66), (26, 75), (27, 40), (119, 123), (63, 79), (163, 166), (101, 105), (222, 224), (52, 60), (35, 7), (385, 385), (175, 185), (233, 257), (200, 89), (164, 166), (56, 75), (164, 175), (138, 150), (171, 192), (411, 411), (200, 75), (208, 177), (46, 44), (26, 38), (193, 215), (86, 89), (42, 10), (210, 222), (27, 39), (189, 199), (317, 223), (232, 255), (204, 193), (215, 193), (236, 243), (114, 128), (373, 388), (86, 75), (27, 7), (26, 51), (111, 104), (119, 117), (151, 158), (317, 227), (192, 214), (60, 67), (384, 384), (25, 55), (244, 251), (244, 260), (46, 25), (37, 56), (233, 89), (177, 188), (198, 220), (26, 37), (281, 7), (8, 7), (178, 180), (166, 35), (139, 170), (372, 387), (358, 223), (33, 45), (196, 188), (168, 89), (114, 118), (302, 89), (155, 165), (233, 75), (436, 7), (247, 266), (8, 11), (29, 43), (168, 201), (80, 88), (129, 139), (399, 399), (200, 199), (151, 157), (358, 227), (25, 36), (34, 23), (168, 75), (165, 177), (302, 75), (233, 241), (138, 89), (266, 247), (198, 210), (166, 7), (109, 138), (0, 2), (111, 89), (239, 247), (129, 134), (44, 17), (139, 7), (102, 107), (194, 217), (138, 75), (302, 317), (114, 117), (101, 7), (79, 7), (155, 164), (158, 169), (247, 256), (139, 128), (198, 223), (139, 146), (111, 75), (188, 197), (251, 244), (50, 74), (80, 87), (129, 138), (232, 239), (372, 399), (102, 111), (25, 35), (162, 171), (95, 99), (266, 246), (354, 368), (157, 168), (327, 341), (109, 128), (239, 246), (150, 156), (129, 133), (178, 7), (189, 7), (44, 16), (44, 25), (102, 106), (13, 25), (162, 166), (24, 34), (175, 194), (326, 354), (194, 207), (109, 114), (179, 200), (63, 7), (138, 159), (139, 145), (2, 5), (27, 89), (25, 7), (102, 101), (35, 47), (95, 98), (206, 194), (227, 235), (157, 167), (327, 340), (400, 410), (79, 86), (356, 385), (220, 223), (27, 66), (101, 104), (150, 155), (27, 75), (10, 13), (23, 32), (202, 192), (231, 237), (24, 33), (194, 206), (87, 80), (9, 8), (179, 190), (139, 117), (109, 113), (6, 2), (104, 7), (356, 371), (168, 180), (189, 221), (436, 89), (281, 75), (2, 4), (200, 7), (13, 19), (326, 339), (223, 228), (16, 24), (193, 205), (86, 97), (227, 234), (138, 144), (368, 368), (109, 117), (189, 198), (79, 85), (436, 75), (281, 290), (190, 190), (163, 173), (232, 281), (34, 46), (56, 64), (139, 89), (5, 9), (9, 7), (86, 92), (436, 223), (141, 46), (79, 71), (260, 244), (27, 51), (101, 89), (63, 72), (79, 89), (171, 181), (12, 17), (219, 230), (358, 7), (104, 109), (23, 44), (13, 18), (244, 250), (355, 383), (16, 23), (139, 75), (193, 204), (373, 400), (5, 4), (80, 7), (141, 23), (178, 179), (138, 143), (101, 75), (27, 37), (79, 75), (11, 29), (358, 402), (8, 42), (119, 129), (119, 138), (63, 85), (4, 8), (200, 221), (222, 230), (233, 7), (37, 50), (56, 63), (67, 60), (226, 233), (158, 178), (229, 229), (18, 27), (50, 7), (86, 91), (388, 411), (0, 6), (200, 198), (63, 71), (119, 124), (192, 203), (168, 7), (41, 52), (12, 16), (233, 240), (46, 32), (436, 437), (198, 227), (42, 7), (0, 1), (358, 374), (210, 219), (111, 115), (63, 75), (33, 34), (243, 243), (4, 7), (173, 193), (155, 163), (37, 49), (158, 168)], 'ddg_edge_info': [(206, 217), (185, 194), (385, 219), (250, 260), (384, 260), (1, 113), (0, 5), (11, 14), (317, 206), (223, 162), (128, 190), (18, 138), (44, 47), (243, 256), (411, 398), (399, 244), (42, 123), (317, 327), (43, 87), (228, 398), (153, 75), (232, 368), (118, 117), (398, 171), (410, 374), (317, 183), (44, 24), (398, 256), (190, 227), (223, 175), (133, 138), (385, 173), (43, 64), (410, 266), (411, 231), (227, 410), (1, 67), (29, 22), (128, 144), (227, 266), (228, 231), (0, 224), (179, 226), (190, 384), (317, 196), (243, 210), (18, 128), (368, 247), (178, 266), (56, 240), (217, 194), (10, 44), (190, 240), (399, 234), (410, 243), (411, 208), (202, 214), (128, 36), (254, 261), (411, 244), (384, 227), (1, 80), (227, 243), (232, 358), (317, 173), (128, 157), (0, 237), (228, 244), (368, 260), (399, 247), (223, 250), (410, 256), (229, 181), (1, 57), (151, 261), (384, 240), (317, 150), (209, 208), (227, 256), (56, 374), (399, 368), (190, 374), (98, 111), (42, 67), (242, 241), (18, 118), (12, 44), (399, 224), (128, 255), (254, 251), (9, 11), (260, 410), (6, 5), (385, 261), (9, 47), (317, 163), (42, 44), (228, 234), (260, 266), (18, 95), (19, 60), (79, 111), (56, 207), (398, 236), (42, 80), (410, 210), (128, 232), (411, 175), (254, 228), (43, 44), (223, 240), (229, 171), (384, 194), (1, 47), (227, 210), (237, 260), (260, 243), (178, 210), (243, 190), (261, 244), (113, 117), (368, 227), (317, 261), (223, 217), (411, 188), (384, 171), (1, 24), (0, 181), (228, 188), (385, 251), (143, 229), (1, 145), (260, 256), (111, 133), (91, 75), (317, 238), (222, 229), (383, 183), (128, 222), (80, 145), (383, 219), (1, 37), (228, 165), (43, 119), (9, 14), (209, 188), (178, 200), (243, 180), (42, 47), (128, 199), (179, 281), (46, 166), (63, 106), (317, 251), (223, 207), (128, 235), (1, 14), (104, 143), (317, 372), (398, 180), (0, 27), (368, 194), (111, 123), (399, 181), (317, 228), (410, 190), (383, 173), (254, 208), (200, 237), (223, 220), (42, 145), (208, 177), (227, 190), (156, 166), (43, 109), (229, 236), (207, 217), (0, 4), (368, 171), (178, 190), (243, 399), (251, 260), (398, 193), (143, 232), (317, 205), (254, 185), (44, 46), (317, 241), (223, 197), (215, 193), (1, 4), (43, 86), (385, 231), (128, 166), (111, 113), (399, 171), (317, 218), (411, 374), (128, 202), (75, 47), (60, 67), (98, 179), (105, 75), (411, 410), (227, 180), (385, 208), (317, 339), (411, 266), (228, 410), (1, 102), (190, 383), (398, 183), (128, 179), (228, 266), (327, 388), (254, 175), (128, 35), (385, 185), (383, 261), (411, 243), (0, 151), (1, 79), (260, 190), (128, 156), (8, 11), (0, 236), (228, 243), (243, 222), (317, 208), (410, 399), (223, 164), (384, 383), (10, 56), (227, 399), (266, 247), (411, 256), (236, 75), (56, 144), (317, 185), (228, 256), (372, 386), (243, 235), (2, 29), (410, 232), (18, 153), (385, 175), (236, 232), (229, 193), (383, 251), (260, 180), (210, 179), (317, 162), (242, 168), (188, 197), (98, 123), (133, 117), (232, 239), (399, 236), (2, 42), (411, 210), (383, 228), (385, 188), (43, 79), (228, 210), (317, 175), (254, 384), (44, 16), (383, 385), (190, 219), (410, 222), (128, 244), (341, 388), (173, 166), (254, 240), (43, 56), (229, 183), (260, 399), (227, 222), (368, 383), (203, 166), (410, 199), (398, 261), (190, 232), (43, 33), (183, 193), (223, 229), (384, 183), (410, 235), (1, 36), (384, 219), (236, 55), (227, 235), (5, 42), (243, 179), (317, 165), (254, 374), (0, 49), (111, 145), (10, 13), (317, 250), (2, 9), (43, 10), (128, 234), (242, 256), (175, 166), (385, 384), (10, 98), (43, 46), (383, 231), (223, 242), (229, 173), (1, 49), (232, 327), (145, 179), (205, 166), (243, 192), (399, 180), (223, 219), (411, 190), (384, 173), (128, 247), (383, 208), (1, 26), (206, 166), (0, 183), (228, 190), (18, 51), (317, 384), (143, 231), (398, 192), (8, 43), (19, 52), (56, 199), (398, 228), (399, 193), (190, 199), (317, 240), (383, 185), (128, 224), (234, 242), (385, 374), (223, 232), (232, 317), (5, 9), (143, 208), (260, 235), (385, 266), (368, 183), (243, 411), (63, 72), (410, 179), (368, 219), (217, 166), (43, 13), (223, 209), (411, 180), (1, 16), (227, 179), (228, 180), (141, 32), (385, 243), (178, 179), (317, 374), (229, 261), (410, 156), (242, 200), (128, 178), (0, 29), (399, 183), (410, 192), (128, 214), (383, 175), (200, 239), (236, 241), (227, 192), (67, 60), (158, 178), (43, 111), (384, 261), (1, 114), (0, 6), (368, 173), (358, 388), (56, 166), (190, 166), (317, 207), (0, 42), (26, 143), (411, 399), (223, 199), (383, 188), (1, 6), (141, 166), (128, 47), (143, 175), (228, 399), (56, 143), (229, 251), (128, 168), (0, 19), (171, 166), (410, 411), (317, 220), (235, 150), (411, 232), (227, 411), (260, 179), (385, 210), (104, 197), (317, 341), (229, 228), (384, 251), (1, 104), (188, 196), (37, 143), (190, 385), (190, 156), (317, 197), (128, 181), (18, 129), (192, 202), (243, 247), (410, 244), (181, 192), (143, 165), (384, 228), (260, 192), (243, 368), (10, 166), (242, 180), (0, 238), (188, 209), (254, 383), (0, 9), (128, 158), (239, 254), (111, 105), (190, 398), (243, 224), (317, 210), (383, 384), (223, 166), (341, 387), (368, 261), (243, 260), (384, 385), (383, 240), (411, 222), (87, 98), (106, 111), (43, 91), (242, 157), (228, 222), (232, 372), (10, 179), (128, 171), (339, 354), (18, 119), (398, 260), (204, 166), (190, 231), (410, 234), (128, 256), (399, 261), (411, 235), (223, 35), (260, 411), (1, 71), (317, 164), (356, 384), (228, 235), (6, 42), (383, 374), (10, 12), (223, 156), (190, 208), (244, 179), (242, 255), (368, 251), (190, 244), (43, 45), (410, 247), (214, 192), (232, 326), (10, 133), (384, 231), (227, 247), (43, 166), (410, 368), (317, 177), (0, 241), (18, 109), (368, 228), (178, 247), (98, 138), (243, 227), (236, 188), (410, 224), (128, 246), (227, 368), (43, 58), (223, 254), (229, 185), (383, 243), (384, 208), (227, 224), (232, 339), (207, 166), (128, 138), (368, 385), (18, 86), (398, 227), (399, 192), (150, 162), (128, 223), (254, 219), (56, 234), (399, 228), (43, 35), (223, 231), (384, 185), (151, 242), (10, 123), (188, 166), (5, 44), (398, 384), (58, 56), (157, 178), (243, 181), (143, 243), (0, 51), (398, 240), (2, 11), (43, 12), (128, 236), (411, 179), (254, 232), (223, 244), (1, 51), (228, 179), (317, 373), (43, 133), (229, 260), (340, 356), (260, 247), (19, 41), (56, 188), (383, 354), (243, 194), (190, 188), (370, 384), (411, 156), (368, 231), (383, 210), (384, 175), (411, 192), (260, 368), (385, 399), (236, 47), (0, 185), (228, 192), (260, 224), (141, 44), (317, 386), (243, 171), (398, 194), (368, 208), (317, 242), (223, 198), (128, 226), (254, 222), (1, 5), (27, 143), (223, 234), (384, 188), (385, 232), (43, 123), (106, 179), (368, 185), (190, 178), (317, 219), (410, 181), (128, 203), (254, 199), (317, 255), (10, 67), (1, 18), (227, 181), (37, 57), (317, 340), (229, 227), (228, 411), (388, 400), (1, 139), (128, 180), (399, 185), (317, 232), (223, 188), (229, 384), (10, 80), (250, 178), (236, 243), (227, 194), (60, 166), (106, 133), (385, 222), (237, 244), (43, 113), (229, 240), (242, 179), (260, 227), (188, 208), (0, 8), (18, 56), (368, 175), (111, 104), (317, 209), (410, 171), (223, 165), (128, 193), (200, 218), (133, 128), (192, 214), (227, 171), (145, 138), (385, 199), (244, 260), (26, 37), (141, 24), (10, 178), (1, 129), (254, 166), (368, 188), (239, 266), (190, 410), (372, 387), (243, 236), (317, 222), (223, 178), (399, 260), (190, 266), (411, 234), (229, 194), (106, 123), (260, 181), (236, 89), (1, 106), (327, 356), (232, 384), (317, 199), (223, 155), (128, 183), (80, 106), (10, 47), (190, 243), (384, 374), (2, 43), (43, 80), (89, 47), (411, 247), (223, 47), (260, 194), (228, 247), (254, 385), (254, 156), (44, 17), (411, 368), (223, 168), (385, 166), (190, 256), (43, 57), (411, 224), (228, 368), (260, 171), (10, 145), (384, 243), (117, 128), (228, 224), (368, 384), (232, 374), (251, 244), (228, 260), (254, 398), (368, 240), (383, 399), (10, 37), (399, 227), (42, 106), (410, 236), (385, 179), (104, 166), (123, 179), (223, 266), (227, 236), (5, 43), (398, 383), (317, 166), (128, 150), (40, 37), (399, 384), (190, 210), (255, 47), (254, 231), (385, 156), (399, 240), (43, 47), (223, 243), (383, 232), (1, 50), (368, 374), (5, 56), (243, 193), (18, 111), (10, 256), (43, 24), (317, 35), (254, 244), (1, 27), (165, 166), (385, 398), (72, 87), (223, 256), (384, 210), (1, 63), (232, 341), (44, 141), (317, 385), (43, 145), (317, 156), (228, 227), (399, 194), (190, 200), (150, 164), (368, 243), (43, 37), (223, 233), (128, 261), (383, 222), (194, 206), (87, 80), (1, 40), (385, 411), (5, 10), (256, 266), (260, 236), (317, 398), (243, 183), (410, 180), (242, 224), (205, 193), (10, 246), (317, 254), (223, 210), (128, 238), (383, 199), (411, 181), (254, 234), (1, 17), (326, 339), (223, 246), (236, 36), (228, 181), (141, 33), (385, 244), (138, 144), (143, 222), (398, 219), (317, 231), (410, 193), (242, 237), (128, 215), (229, 383), (43, 27), (227, 193), (251, 178), (228, 194), (141, 46), (317, 388), (243, 173), (143, 235), (128, 192), (8, 47), (327, 401), (0, 43), (368, 210), (254, 188), (56, 203), (317, 244), (411, 400), (223, 200), (128, 228), (411, 171), (236, 255), (260, 383), (228, 171), (106, 145), (385, 234), (49, 56), (398, 173), (11, 29), (56, 180), (190, 180), (410, 183), (383, 166), (223, 177), (128, 205), (242, 227), (56, 36), (22, 43), (227, 183), (43, 102), (1, 105), (141, 36), (232, 383), (385, 247), (10, 190), (317, 198), (1, 141), (5, 111), (192, 203), (56, 193), (317, 234), (10, 46), (223, 190), (383, 179), (385, 368), (196, 209), (260, 193), (385, 224), (317, 355), (1, 118), (0, 10), (179, 241), (190, 399), (410, 173), (383, 156), (199, 75), (243, 261), (14, 29), (227, 173), (229, 219), (1, 95), (242, 158), (232, 373), (317, 188), (339, 355), (383, 398), (10, 36), (223, 180), (341, 401), (180, 75), (145, 117), (384, 399), (411, 236), (143, 156), (223, 36), (1, 72), (260, 183), (229, 232), (228, 236), (327, 358), (6, 43), (218, 222), (399, 383), (210, 218), (223, 157), (254, 410), (339, 368), (243, 251), (383, 411), (254, 266), (384, 232), (106, 138), (317, 178), (128, 162), (327, 371), (243, 228), (398, 251), (203, 192), (190, 222), (215, 166), (254, 243), (223, 255), (383, 244), (410, 261), (260, 173), (386, 398), (232, 340), (317, 155), (227, 261), (387, 399), (238, 47), (150, 163), (80, 98), (0, 75), (205, 215), (190, 235), (196, 166), (2, 35), (43, 36), (317, 47), (128, 260), (0, 111), (254, 256), (87, 79), (385, 410), (385, 181), (43, 72), (56, 91), (229, 199), (384, 222), (1, 75), (228, 203), (179, 198), (6, 10), (398, 385), (117, 143), (317, 168), (0, 232), (368, 399), (128, 237), (43, 49), (383, 234), (384, 199), (236, 35), (151, 256), (5, 22), (56, 104), (9, 29), (227, 251), (317, 410), (242, 236), (341, 358), (254, 210), (368, 232), (178, 251), (399, 219), (317, 266), (43, 26), (223, 222), (411, 193), (410, 228), (128, 250), (1, 29), (227, 228), (228, 193), (141, 45), (37, 104), (385, 256), (317, 387), (317, 158), (143, 234), (168, 178), (260, 261), (79, 106), (10, 235), (243, 208), (398, 231), (383, 368), (63, 98), (317, 243), (128, 227), (223, 235), (229, 166), (383, 224), (1, 42), (317, 400), (358, 401), (243, 185), (398, 208), (399, 173), (190, 179), (128, 204), (0, 55), (368, 222), (317, 256), (43, 16), (411, 183), (384, 166), (128, 240), (1, 19), (64, 75), (37, 58), (56, 71), (388, 401), (228, 183), (179, 178), (141, 35), (398, 185), (260, 251), (368, 199), (56, 192), (190, 192), (317, 233), (128, 217), (202, 166), (234, 235), (151, 200), (229, 385), (123, 138), (196, 208), (384, 179), (175, 185), (1, 32), (19, 166), (317, 354), (43, 114), (1, 117), (260, 228), (197, 208), (243, 175), (1, 153), (128, 194), (254, 190), (200, 219), (56, 205), (171, 192), (317, 246), (223, 202), (411, 173), (384, 156), (1, 9), (229, 398), (227, 208), (0, 166), (228, 173), (193, 215), (385, 236), (398, 175), (0, 22), (19, 35), (111, 118), (190, 411), (317, 223), (410, 185), (128, 207), (223, 179), (384, 398), (223, 215), (0, 143), (227, 185), (373, 388), (43, 104), (229, 231), (26, 51), (232, 385), (368, 166), (398, 188), (317, 200), (0, 35), (179, 266), (254, 180), (219, 222), (317, 236), (203, 214), (383, 410), (223, 192), (383, 181), (235, 166), (244, 251), (385, 190), (384, 411), (229, 208), (383, 266), (43, 117), (229, 244), (0, 12), (232, 398), (368, 179), (399, 166), (128, 197), (232, 254), (399, 251), (196, 188), (236, 224), (410, 260), (227, 175), (411, 261), (384, 244), (36, 55), (227, 260), (260, 208), (179, 220), (18, 37), (368, 156), (5, 67), (243, 384), (317, 190), (228, 261), (254, 399), (243, 240), (190, 234), (165, 177), (385, 180), (51, 75), (236, 237), (43, 71), (383, 256), (260, 185), (128, 151), (368, 398), (179, 233), (0, 2), (232, 388), (399, 385), (98, 128), (317, 203), (190, 247), (229, 175), (194, 217), (385, 193), (143, 171), (384, 234), (1, 87), (179, 210), (6, 22), (243, 374), (190, 368), (317, 180), (29, 42), (128, 164), (228, 251), (368, 411), (80, 87), (190, 224), (317, 36), (410, 227), (5, 178), (236, 227), (229, 188), (411, 228), (1, 64), (354, 368), (260, 175), (218, 178), (398, 374), (317, 157), (410, 384), (150, 165), (368, 244), (398, 266), (399, 231), (63, 133), (17, 166), (384, 368), (410, 240), (227, 384), (175, 194), (0, 113), (194, 207), (246, 254), (385, 183), (384, 224), (227, 240), (228, 205), (179, 200), (317, 399), (18, 102), (19, 67), (10, 247), (398, 243), (399, 208), (10, 18), (236, 181), (242, 261), (128, 239), (254, 235), (43, 51), (223, 247), (383, 236), (35, 47), (206, 194), (400, 410), (144, 75), (150, 155), (410, 194), (242, 238), (401, 411), (368, 234), (63, 123), (223, 224), (227, 374), (251, 179), (223, 260), (9, 8), (0, 188), (179, 190), (141, 47), (6, 2), (2, 4), (128, 229), (383, 190), (1, 8), (223, 237), (260, 384), (1, 44), (0, 165), (5, 14), (385, 235), (42, 18), (228, 208), (260, 240), (398, 210), (399, 175), (190, 181), (128, 206), (0, 57), (368, 224), (52, 67), (10, 250), (229, 374), (43, 18), (223, 214), (128, 242), (411, 185), (229, 410), (10, 106), (228, 185), (43, 139), (229, 266), (356, 370), (27, 51), (254, 179), (19, 47), (79, 98), (56, 194), (171, 181), (399, 188), (190, 194), (317, 235), (383, 180), (128, 219), (145, 128), (244, 250), (384, 410), (223, 227), (384, 181), (355, 383), (260, 374), (227, 197), (193, 204), (317, 356), (143, 203), (384, 266), (229, 243), (1, 119), (0, 11), (190, 171), (128, 196), (0, 47), (254, 192), (111, 143), (123, 117), (10, 60), (223, 204), (383, 193), (1, 11), (37, 50), (56, 63), (411, 260), (228, 175), (243, 383), (43, 129), (229, 256), (128, 173), (232, 410), (63, 80), (223, 181), (128, 209), (14, 43), (46, 32), (43, 106), (384, 256), (1, 109), (179, 232), (0, 1), (210, 219), (398, 190), (317, 202), (223, 158), (254, 411), (246, 178), (223, 194), (173, 193), (385, 192), (229, 210), (1, 86), (141, 17), (18, 26), (385, 228), (56, 138), (317, 179), (128, 163), (368, 410), (0, 14), (327, 372), (368, 181), (374, 75), (317, 215), (223, 171), (368, 266), (10, 63), (411, 227), (266, 254), (260, 210), (219, 178), (399, 374), (56, 151), (410, 383), (317, 192), (399, 410), (224, 229), (411, 384), (190, 236), (227, 383), (173, 183), (399, 266), (411, 240), (228, 384), (55, 47), (247, 254), (56, 128), (228, 240), (37, 151), (166, 36), (243, 219), (10, 17), (0, 89), (368, 256), (63, 145), (399, 243), (43, 50), (383, 235), (317, 326), (56, 105), (143, 173), (384, 236), (36, 47), (207, 194), (398, 399), (317, 411), (42, 63), (18, 114), (243, 232), (411, 194), (128, 251), (254, 247), (399, 256), (43, 63), (143, 150), (229, 190), (228, 374), (87, 106), (9, 43), (128, 143), (254, 368), (398, 232), (341, 372), (254, 224), (43, 40), (223, 236), (384, 190), (1, 43), (254, 260), (10, 128), (228, 207), (6, 14), (317, 401), (0, 56), (98, 133), (399, 210), (236, 183), (43, 17), (410, 219), (128, 241), (32, 44), (229, 180), (1, 56), (227, 219), (371, 385), (178, 219), (243, 199), (398, 222), (190, 193), (128, 218), (368, 236), (200, 243), (223, 226), (128, 254), (384, 180), (1, 33), (227, 232), (385, 260), (197, 209), (398, 199), (398, 235), (317, 247), (223, 203), (128, 231), (383, 192), (1, 10), (254, 227), (229, 399), (223, 239), (384, 193), (1, 46), (12, 141), (177, 208), (317, 368), (19, 36), (368, 190), (190, 183), (317, 224), (128, 208), (12, 33), (317, 260), (75, 89), (133, 179), (56, 75), (43, 105), (260, 219), (43, 141), (243, 166), (143, 228), (128, 185), (0, 36), (254, 181), (200, 210), (151, 168), (399, 190), (317, 237), (223, 193), (247, 178), (227, 199), (141, 16), (385, 227), (317, 358), (43, 118), (143, 205), (398, 166), (42, 10), (260, 232), (179, 244), (232, 399), (368, 180), (190, 173), (317, 214), (128, 198), (254, 194), (200, 223), (232, 255), (204, 193), (223, 206), (1, 13), (43, 95), (229, 222), (1, 98), (385, 240), (104, 227), (317, 371), (243, 385), (243, 156), (398, 179), (128, 175), (0, 255), (0, 26), (254, 171), (368, 193), (10, 219), (44, 32), (317, 227), (411, 383), (223, 183), (236, 238), (228, 383), (106, 128), (177, 188), (197, 166), (398, 156), (229, 235), (1, 111), (260, 222), (243, 398), (166, 35), (399, 386), (317, 204), (410, 166), (128, 188), (4, 9), (44, 45), (10, 52), (223, 196), (410, 251), (14, 22), (227, 166), (385, 194), (384, 235), (260, 199), (247, 266), (44, 166), (317, 181), (29, 43), (128, 165), (317, 217), (243, 231), (223, 173), (42, 98), (385, 171), (190, 261), (383, 247), (208, 166), (43, 98), (10, 150), (9, 42), (228, 229), (398, 411), (56, 153), (410, 385), (317, 194), (223, 150), (327, 387), (243, 244), (399, 232), (227, 385), (227, 156), (43, 75), (383, 260), (232, 356), (317, 171), (128, 155), (410, 398), (398, 244), (223, 163), (18, 139), (254, 236), (190, 251), (411, 219), (229, 179), (227, 398), (260, 166), (266, 246), (1, 91), (228, 219), (327, 341), (143, 260), (368, 235), (98, 145), (10, 261), (243, 234), (399, 222), (190, 228), (10, 32), (410, 231), (229, 156), (0, 104), (10, 117), (223, 261), (229, 192), (227, 231), (228, 232), (398, 234), (399, 199), (410, 208), (399, 235), (43, 42), (223, 238), (383, 227), (128, 266), (384, 192), (260, 385), (1, 45), (260, 156), (227, 244), (243, 188), (1, 166), (178, 244), (10, 251), (398, 247), (236, 185), (123, 128), (43, 19), (128, 243), (202, 192), (1, 22), (214, 166), (240, 75), (229, 411), (223, 251), (260, 398), (1, 58), (398, 368), (57, 75), (356, 371), (398, 224), (128, 220), (179, 302), (12, 45), (385, 370), (204, 215), (43, 32), (223, 228), (411, 199), (80, 179), (1, 35), (193, 205), (227, 234), (228, 199), (260, 231), (43, 153), (410, 175), (254, 193), (200, 222), (223, 205), (383, 194), (128, 233), (1, 12), (385, 383), (56, 64), (223, 241), (5, 18), (317, 370), (197, 188), (1, 133), (260, 244), (8, 29), (232, 411), (368, 192), (10, 218), (399, 179), (190, 185), (317, 226), (410, 188), (242, 232), (128, 210), (383, 171), (80, 133), (223, 218), (227, 188), (229, 234), (317, 383), (399, 156), (117, 178), (42, 35), (8, 42), (254, 183), (317, 239), (411, 166), (1, 2), (63, 179), (411, 251), (228, 166), (18, 27), (143, 207), (229, 247), (1, 123), (260, 234), (18, 63), (243, 410), (166, 47), (399, 398), (71, 75), (190, 175), (128, 200), (80, 123), (41, 52), (243, 266), (229, 368), (190, 260), (223, 208), (42, 133), (229, 224), (384, 247), (18, 40), (219, 179), (398, 410), (398, 181), (317, 193), (128, 177), (254, 173), (399, 411), (317, 229), (411, 385), (10, 41), (223, 185), (228, 385), (228, 156), (260, 188)]}]}
{'flac_decode_frame': [{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 191, 'instruction': 'movl\t%edx, %esi'}, {'instIndex': 192, 'instruction': 'shll\t$3, %esi'}, {'instIndex': 237, 'instruction': ''}, {'instIndex': 238, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 280, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 281, 'instruction': ''}, {'instIndex': 291, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 292, 'instruction': 'movl\t0x79c(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 303, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 304, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 305, 'instruction': 'movq\t0x7f0(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 465, 'instruction': 'movq\t%rdx, 0x758(%rsp)                # 8-byte Spill'}, {'instIndex': 518, 'instruction': 'movq\t0x800(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 603, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 666, 'instruction': 'movq\t0x6d8(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 667, 'instruction': 'movq\t0x7e0(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 668, 'instruction': 'movl\t0x6cc(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 719, 'instruction': 'jmp\t.LBB4_142'}, {'instIndex': 720, 'instruction': 'movq\t0x800(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 736, 'instruction': 'movl\t%eax, 0x6c4(%rsp)                # 4-byte Spill'}, {'instIndex': 737, 'instruction': 'jmp\t.LBB4_52'}, {'instIndex': 826, 'instruction': 'jmp\t.LBB4_63'}, {'instIndex': 844, 'instruction': 'movl\t%eax, 0x6a4(%rsp)                # 4-byte Spill'}, {'instIndex': 861, 'instruction': 'movl\t%ecx, 0x6a0(%rsp)                # 4-byte Spill'}, {'instIndex': 1015, 'instruction': 'jmp\t.LBB4_142'}, {'instIndex': 1016, 'instruction': 'movq\t0x800(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 1017, 'instruction': 'movl\t0x624(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1135, 'instruction': 'movl\t0x5e8(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 1140, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1141, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1142, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1150, 'instruction': 'movl\t0x5e8(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1151, 'instruction': 'movl\t0x5e4(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1166, 'instruction': 'movq\t0x628(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1171, 'instruction': 'addl\t$0x10, %r8d'}, {'instIndex': 1172, 'instruction': 'movl\t%esi, %ecx'}, {'instIndex': 1228, 'instruction': 'movl\t0x5d4(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1233, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1234, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1235, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1243, 'instruction': 'movl\t%edx, 0x58c(%rsp)                # 4-byte Spill'}, {'instIndex': 1244, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1259, 'instruction': 'movq\t0x800(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 1264, 'instruction': 'shrl\t$0xf0, %r9d'}, {'instIndex': 1265, 'instruction': ''}, {'instIndex': 1343, 'instruction': 'movq\t%rax, 0x540(%rsp)                # 8-byte Spill'}, {'instIndex': 1348, 'instruction': 'movq\t%rsi, 0x518(%rsp)                # 8-byte Spill'}, {'instIndex': 1349, 'instruction': 'movl\t%eax, 0x520(%rsp)                # 4-byte Spill'}, {'instIndex': 1350, 'instruction': 'movl\t%ecx, 0x524(%rsp)                # 4-byte Spill'}, {'instIndex': 1358, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1359, 'instruction': 'movl\t%ecx, 0x528(%rsp)                # 4-byte Spill'}, {'instIndex': 1374, 'instruction': 'movl\t%edx, (%rcx)'}, {'instIndex': 1379, 'instruction': 'movl\t0x520(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1380, 'instruction': 'movq\t0x628(%rsp), %rax                # 8-byte Reload'}]}]}
The case of compiler clang with optimization O3.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O3/flacdec.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O3/flacdec.s---flac_decode_frame---before
function id: 4
function flag: True
There are 2822 instructions for function: flac_decode_frame in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '639', 'end': 649}, 'before': {'start': '639', 'end': 644}}}]
[{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 191, 'instruction': 'movl\t%edx, %esi'}, {'instIndex': 192, 'instruction': 'shll\t$3, %esi'}, {'instIndex': 237, 'instruction': ''}, {'instIndex': 238, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 295, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 296, 'instruction': ''}, {'instIndex': 306, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 307, 'instruction': 'movl\t0x8d4(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 318, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 319, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 320, 'instruction': 'movq\t0x950(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 562, 'instruction': 'movq\t%rdx, 0x860(%rsp)                # 8-byte Spill'}, {'instIndex': 615, 'instruction': 'movq\t0x960(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 700, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 763, 'instruction': 'movq\t0x7e0(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 764, 'instruction': 'movq\t0x940(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 765, 'instruction': 'movl\t0x7d4(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 816, 'instruction': 'jmp\t.LBB4_152'}, {'instIndex': 817, 'instruction': 'movq\t0x960(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 833, 'instruction': 'movl\t%eax, 0x7cc(%rsp)                # 4-byte Spill'}, {'instIndex': 834, 'instruction': 'jmp\t.LBB4_62'}, {'instIndex': 923, 'instruction': 'jmp\t.LBB4_73'}, {'instIndex': 941, 'instruction': 'movl\t%eax, 0x7ac(%rsp)                # 4-byte Spill'}, {'instIndex': 958, 'instruction': 'movl\t%ecx, 0x7a8(%rsp)                # 4-byte Spill'}, {'instIndex': 1112, 'instruction': 'jmp\t.LBB4_152'}, {'instIndex': 1113, 'instruction': 'movq\t0x960(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 1114, 'instruction': 'movl\t0x72c(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1232, 'instruction': 'movl\t0x6f0(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 1237, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1238, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1239, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1247, 'instruction': 'movl\t0x6f0(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1248, 'instruction': 'movl\t0x6ec(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1263, 'instruction': 'movq\t0x730(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1268, 'instruction': 'addl\t$0x10, %r8d'}, {'instIndex': 1269, 'instruction': 'movl\t%esi, %ecx'}, {'instIndex': 1325, 'instruction': 'movl\t0x6dc(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1330, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1331, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1332, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1340, 'instruction': 'movl\t%edx, 0x694(%rsp)                # 4-byte Spill'}, {'instIndex': 1341, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1356, 'instruction': 'movq\t0x960(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 1361, 'instruction': 'shrl\t$0xf0, %r9d'}, {'instIndex': 1362, 'instruction': ''}, {'instIndex': 1440, 'instruction': 'movq\t%rax, 0x648(%rsp)                # 8-byte Spill'}, {'instIndex': 1445, 'instruction': 'movq\t%rsi, 0x620(%rsp)                # 8-byte Spill'}, {'instIndex': 1446, 'instruction': 'movl\t%eax, 0x628(%rsp)                # 4-byte Spill'}, {'instIndex': 1447, 'instruction': 'movl\t%ecx, 0x62c(%rsp)                # 4-byte Spill'}, {'instIndex': 1455, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1456, 'instruction': 'movl\t%ecx, 0x630(%rsp)                # 4-byte Spill'}, {'instIndex': 1471, 'instruction': 'movl\t%edx, (%rcx)'}, {'instIndex': 1476, 'instruction': 'movl\t0x628(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1477, 'instruction': 'movq\t0x730(%rsp), %rax                # 8-byte Reload'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O3/flacdec.o
Unpatched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O3/flacdec.o---before
The extraction of function: flac_decode_frame
Analyzing the binaries to generate subCFGs from patched function ...
It has 431 nodes and 743 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 2795 instructions in binary file.
[4196984, 4197217, 4197385, 4198689, 4198980, 4199402, 4199662, 4199917, 4200000, 4200453, 4200533, 4200604, 4201356, 4201995, 4202050, 4202457, 4202512, 4203044, 4203099]
The execution time of patched subCFG information extraction via angr: 0:00:04.786424
{'flac_decode_frame': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f0d>, <DisassemblerInsn "mov" for 0x401f15>, <DisassemblerInsn "mov" for 0x401f1d>, <DisassemblerInsn "mov" for 0x401f22>, <DisassemblerInsn "xor" for 0x401f2a>, <DisassemblerInsn "mov" for 0x401f2c>, <DisassemblerInsn "mov" for 0x401f34>, <DisassemblerInsn "mov" for 0x401f3c>, <DisassemblerInsn "mov" for 0x401f44>, <DisassemblerInsn "mov" for 0x401f4c>, <DisassemblerInsn "mov" for 0x401f53>, <DisassemblerInsn "add" for 0x401f56>, <DisassemblerInsn "mov" for 0x401f5a>, <DisassemblerInsn "movsxd" for 0x401f62>, <DisassemblerInsn "cmp" for 0x401f65>, <DisassemblerInsn "mov" for 0x401f68>, <DisassemblerInsn "jl" for 0x401f70>]'}, {'block_Idx': 103, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017d4>, <DisassemblerInsn "sub" for 0x4017db>, <DisassemblerInsn "je" for 0x4017de>]'}, {'block_Idx': 184, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e0b>, <DisassemblerInsn "mov" for 0x401e12>, <DisassemblerInsn "mov" for 0x401e19>, <DisassemblerInsn "mov" for 0x401e20>, <DisassemblerInsn "xor" for 0x401e23>, <DisassemblerInsn "sub" for 0x401e25>, <DisassemblerInsn "shr" for 0x401e28>, <DisassemblerInsn "mov" for 0x401e2a>, <DisassemblerInsn "add" for 0x401e32>, <DisassemblerInsn "mov" for 0x401e34>, <DisassemblerInsn "mov" for 0x401e36>, <DisassemblerInsn "jmp" for 0x401e3d>]'}, {'block_Idx': 20, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40118a>, <DisassemblerInsn "mov" for 0x401191>, <DisassemblerInsn "mov" for 0x401199>, <DisassemblerInsn "add" for 0x40119c>, <DisassemblerInsn "xor" for 0x40119f>, <DisassemblerInsn "cmp" for 0x4011a1>, <DisassemblerInsn "mov" for 0x4011a3>, <DisassemblerInsn "mov" for 0x4011a5>, <DisassemblerInsn "mov" for 0x4011ac>, <DisassemblerInsn "mov" for 0x4011b3>, <DisassemblerInsn "je" for 0x4011ba>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c09>, <DisassemblerInsn "mov" for 0x400c11>, <DisassemblerInsn "mov" for 0x400c19>, <DisassemblerInsn "mov" for 0x400c20>, <DisassemblerInsn "mov" for 0x400c28>, <DisassemblerInsn "sar" for 0x400c2a>, <DisassemblerInsn "movsxd" for 0x400c2d>, <DisassemblerInsn "mov" for 0x400c30>, <DisassemblerInsn "mov" for 0x400c33>, <DisassemblerInsn "and" for 0x400c35>, <DisassemblerInsn "mov" for 0x400c38>, <DisassemblerInsn "movzx" for 0x400c3f>, <DisassemblerInsn "mov" for 0x400c42>, <DisassemblerInsn "mov" for 0x400c49>, <DisassemblerInsn "add" for 0x400c4b>, <DisassemblerInsn "mov" for 0x400c4e>, <DisassemblerInsn "sar" for 0x400c50>, <DisassemblerInsn "movsxd" for 0x400c53>, <DisassemblerInsn "mov" for 0x400c56>, <DisassemblerInsn "ror" for 0x400c59>, <DisassemblerInsn "ror" for 0x400c5d>, <DisassemblerInsn "ror" for 0x400c60>, <DisassemblerInsn "and" for 0x400c64>, <DisassemblerInsn "shl" for 0x400c67>, <DisassemblerInsn "mov" for 0x400c69>, <DisassemblerInsn "shr" for 0x400c70>, <DisassemblerInsn "mov" for 0x400c73>, <DisassemblerInsn "mov" for 0x400c7a>, <DisassemblerInsn "add" for 0x400c7c>, <DisassemblerInsn "sar" for 0x400c7f>, <DisassemblerInsn "movsxd" for 0x400c82>, <DisassemblerInsn "mov" for 0x400c85>, <DisassemblerInsn "ror" for 0x400c88>, <DisassemblerInsn "ror" for 0x400c8c>, <DisassemblerInsn "ror" for 0x400c8f>, <DisassemblerInsn "shl" for 0x400c93>, <DisassemblerInsn "mov" for 0x400c95>, <DisassemblerInsn "shr" for 0x400c9c>, <DisassemblerInsn "mov" for 0x400c9f>, <DisassemblerInsn "add" for 0x400ca2>, <DisassemblerInsn "shl" for 0x400ca6>, <DisassemblerInsn "sar" for 0x400ca9>, <DisassemblerInsn "movsxd" for 0x400cad>, <DisassemblerInsn "mov" for 0x400cb0>, <DisassemblerInsn "ror" for 0x400cb4>, <DisassemblerInsn "ror" for 0x400cb8>, <DisassemblerInsn "ror" for 0x400cbb>, <DisassemblerInsn "shl" for 0x400cbf>, <DisassemblerInsn "mov" for 0x400cc1>, <DisassemblerInsn "shr" for 0x400cc9>, <DisassemblerInsn "add" for 0x400ccc>, <DisassemblerInsn "mov" for 0x400ccf>, <DisassemblerInsn "mov" for 0x400cd6>, <DisassemblerInsn "or" for 0x400cd8>, <DisassemblerInsn "mov" for 0x400cda>, <DisassemblerInsn "shl" for 0x400ce1>, <DisassemblerInsn "mov" for 0x400ce4>, <DisassemblerInsn "add" for 0x400ceb>, <DisassemblerInsn "mov" for 0x400ced>, <DisassemblerInsn "mov" for 0x400cef>, <DisassemblerInsn "cmp" for 0x400cf6>, <DisassemblerInsn "jle" for 0x400cf8>]'}, {'block_Idx': 3, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40072a>, <DisassemblerInsn "mov" for 0x400732>, <DisassemblerInsn "mov" for 0x40073a>, <DisassemblerInsn "mov" for 0x400741>, <DisassemblerInsn "mov" for 0x400744>, <DisassemblerInsn "mov" for 0x40074c>, <DisassemblerInsn "mov" for 0x400753>, <DisassemblerInsn "xor" for 0x400755>, <DisassemblerInsn "cmp" for 0x400757>, <DisassemblerInsn "mov" for 0x40075a>, <DisassemblerInsn "mov" for 0x400761>, <DisassemblerInsn "mov" for 0x400768>, <DisassemblerInsn "mov" for 0x40076f>, <DisassemblerInsn "je" for 0x400777>]'}, {'block_Idx': 219, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022e7>, <DisassemblerInsn "mov" for 0x4022ef>, <DisassemblerInsn "mov" for 0x4022f7>, <DisassemblerInsn "mov" for 0x4022fe>, <DisassemblerInsn "mov" for 0x402305>, <DisassemblerInsn "sub" for 0x40230a>, <DisassemblerInsn "mov" for 0x40230c>, <DisassemblerInsn "shl" for 0x402313>, <DisassemblerInsn "mov" for 0x402315>, <DisassemblerInsn "sar" for 0x40231c>, <DisassemblerInsn "mov" for 0x40231e>, <DisassemblerInsn "mov" for 0x402326>, <DisassemblerInsn "add" for 0x402329>, <DisassemblerInsn "mov" for 0x40232d>, <DisassemblerInsn "cmp" for 0x402335>, <DisassemblerInsn "je" for 0x402338>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d71>, <DisassemblerInsn "cmp" for 0x400d78>, <DisassemblerInsn "je" for 0x400d7b>]'}, {'block_Idx': 221, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40233a>, <DisassemblerInsn "mov" for 0x402342>, <DisassemblerInsn "mov" for 0x40234a>, <DisassemblerInsn "mov" for 0x402352>, <DisassemblerInsn "mov" for 0x402354>, <DisassemblerInsn "mov" for 0x402356>, <DisassemblerInsn "mov" for 0x40235d>, <DisassemblerInsn "mov" for 0x402364>, <DisassemblerInsn "jmp" for 0x40236c>]'}, {'block_Idx': 34, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a06>, <DisassemblerInsn "mov" for 0x400a0e>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "mov" for 0x400a1e>, <DisassemblerInsn "mov" for 0x400a26>, <DisassemblerInsn "mov" for 0x400a2d>, <DisassemblerInsn "mov" for 0x400a34>, <DisassemblerInsn "add" for 0x400a36>, <DisassemblerInsn "mov" for 0x400a39>, <DisassemblerInsn "add" for 0x400a3b>, <DisassemblerInsn "mov" for 0x400a3d>, <DisassemblerInsn "cmp" for 0x400a3f>, <DisassemblerInsn "setl" for 0x400a41>, <DisassemblerInsn "cmp" for 0x400a45>, <DisassemblerInsn "setne" for 0x400a48>, <DisassemblerInsn "and" for 0x400a4c>, <DisassemblerInsn "test" for 0x400a4f>, <DisassemblerInsn "mov" for 0x400a53>, <DisassemblerInsn "mov" for 0x400a55>, <DisassemblerInsn "mov" for 0x400a5c>, <DisassemblerInsn "mov" for 0x400a63>, <DisassemblerInsn "mov" for 0x400a6b>, <DisassemblerInsn "jne" for 0x400a72>]'}, {'block_Idx': 88, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015ed>, <DisassemblerInsn "mov" for 0x4015f5>, <DisassemblerInsn "mov" for 0x4015fc>, <DisassemblerInsn "mov" for 0x401604>, <DisassemblerInsn "shr" for 0x40160c>, <DisassemblerInsn "and" for 0x401610>, <DisassemblerInsn "mov" for 0x401617>, <DisassemblerInsn "ror" for 0x40161a>, <DisassemblerInsn "ror" for 0x40161e>, <DisassemblerInsn "ror" for 0x401621>, <DisassemblerInsn "shr" for 0x401625>, <DisassemblerInsn "add" for 0x401628>, <DisassemblerInsn "mov" for 0x40162b>, <DisassemblerInsn "add" for 0x40162d>, <DisassemblerInsn "mov" for 0x401630>, <DisassemblerInsn "mov" for 0x401637>, <DisassemblerInsn "jmp" for 0x40163e>]'}, {'block_Idx': 189, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ed7>, <DisassemblerInsn "cmp" for 0x402ede>, <DisassemblerInsn "je" for 0x402ee1>]'}, {'block_Idx': 140, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b8c>, <DisassemblerInsn "mov" for 0x401b94>, <DisassemblerInsn "mov" for 0x401b9b>, <DisassemblerInsn "mov" for 0x401ba3>, <DisassemblerInsn "mov" for 0x401baa>, <DisassemblerInsn "sar" for 0x401bac>, <DisassemblerInsn "movsxd" for 0x401baf>, <DisassemblerInsn "mov" for 0x401bb2>, <DisassemblerInsn "ror" for 0x401bb5>, <DisassemblerInsn "ror" for 0x401bb9>, <DisassemblerInsn "ror" for 0x401bbc>, <DisassemblerInsn "and" for 0x401bc0>, <DisassemblerInsn "shl" for 0x401bc3>, <DisassemblerInsn "mov" for 0x401bc5>, <DisassemblerInsn "shr" for 0x401bc7>, <DisassemblerInsn "mov" for 0x401bca>, <DisassemblerInsn "mov" for 0x401bd1>, <DisassemblerInsn "add" for 0x401bd3>, <DisassemblerInsn "mov" for 0x401bd6>, <DisassemblerInsn "mov" for 0x401bd8>, <DisassemblerInsn "sar" for 0x401bda>, <DisassemblerInsn "movsxd" for 0x401bdd>, <DisassemblerInsn "mov" for 0x401be0>, <DisassemblerInsn "and" for 0x401be3>, <DisassemblerInsn "movzx" for 0x401be6>, <DisassemblerInsn "add" for 0x401be9>, <DisassemblerInsn "mov" for 0x401bec>, <DisassemblerInsn "mov" for 0x401bee>, <DisassemblerInsn "shr" for 0x401bf3>, <DisassemblerInsn "mov" for 0x401bf5>, <DisassemblerInsn "and" for 0x401bfc>, <DisassemblerInsn "xor" for 0x401bfe>, <DisassemblerInsn "mov" for 0x401c00>, <DisassemblerInsn "cmp" for 0x401c05>, <DisassemblerInsn "mov" for 0x401c08>, <DisassemblerInsn "mov" for 0x401c0a>, <DisassemblerInsn "mov" for 0x401c11>, <DisassemblerInsn "mov" for 0x401c18>, <DisassemblerInsn "mov" for 0x401c1f>, <DisassemblerInsn "mov" for 0x401c26>, <DisassemblerInsn "je" for 0x401c2d>]'}, {'block_Idx': 63, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401587>, <DisassemblerInsn "xor" for 0x40158f>, <DisassemblerInsn "lea" for 0x401591>, <DisassemblerInsn "mov" for 0x401598>, <DisassemblerInsn "call" for 0x40159a>]'}, {'block_Idx': 188, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ece>, <DisassemblerInsn "mov" for 0x401ed6>, <DisassemblerInsn "mov" for 0x401edd>, <DisassemblerInsn "mov" for 0x401ee4>, <DisassemblerInsn "sub" for 0x401ee9>, <DisassemblerInsn "mov" for 0x401eeb>, <DisassemblerInsn "shl" for 0x401ef2>, <DisassemblerInsn "mov" for 0x401ef4>, <DisassemblerInsn "sar" for 0x401efb>, <DisassemblerInsn "mov" for 0x401efd>, <DisassemblerInsn "cmp" for 0x401f04>, <DisassemblerInsn "jle" for 0x401f07>]'}, {'block_Idx': 105, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401805>, <DisassemblerInsn "mov" for 0x40180c>, <DisassemblerInsn "mov" for 0x401814>, <DisassemblerInsn "sar" for 0x401816>, <DisassemblerInsn "movsxd" for 0x401819>, <DisassemblerInsn "mov" for 0x40181c>, <DisassemblerInsn "ror" for 0x40181f>, <DisassemblerInsn "ror" for 0x401823>, <DisassemblerInsn "ror" for 0x401826>, <DisassemblerInsn "and" for 0x40182a>, <DisassemblerInsn "shl" for 0x40182d>, <DisassemblerInsn "mov" for 0x40182f>, <DisassemblerInsn "shr" for 0x401836>, <DisassemblerInsn "add" for 0x401839>, <DisassemblerInsn "imul" for 0x40183c>, <DisassemblerInsn "mov" for 0x401842>, <DisassemblerInsn "mov" for 0x401849>, <DisassemblerInsn "jmp" for 0x401850>]'}, {'block_Idx': 216, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fd9>, <DisassemblerInsn "mov" for 0x401fe0>, <DisassemblerInsn "mov" for 0x401fe7>, <DisassemblerInsn "mov" for 0x401fee>, <DisassemblerInsn "xor" for 0x401ff1>, <DisassemblerInsn "sub" for 0x401ff3>, <DisassemblerInsn "shr" for 0x401ff6>, <DisassemblerInsn "mov" for 0x401ff8>, <DisassemblerInsn "add" for 0x402000>, <DisassemblerInsn "mov" for 0x402002>, <DisassemblerInsn "mov" for 0x402004>, <DisassemblerInsn "jmp" for 0x40200b>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fdd>, <DisassemblerInsn "mov" for 0x400fe5>, <DisassemblerInsn "mov" for 0x400fed>, <DisassemblerInsn "mov" for 0x400fef>, <DisassemblerInsn "mov" for 0x400ff2>, <DisassemblerInsn "mov" for 0x400ffa>, <DisassemblerInsn "jmp" for 0x401001>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f77>, <DisassemblerInsn "mov" for 0x401f7f>, <DisassemblerInsn "mov" for 0x401f86>, <DisassemblerInsn "mov" for 0x401f8d>, <DisassemblerInsn "mov" for 0x401f95>, <DisassemblerInsn "mov" for 0x401f9d>, <DisassemblerInsn "mov" for 0x401fa4>, <DisassemblerInsn "mov" for 0x401fab>, <DisassemblerInsn "sar" for 0x401fad>, <DisassemblerInsn "movsxd" for 0x401fb0>, <DisassemblerInsn "mov" for 0x401fb3>, <DisassemblerInsn "ror" for 0x401fb6>, <DisassemblerInsn "ror" for 0x401fba>, <DisassemblerInsn "ror" for 0x401fbd>, <DisassemblerInsn "and" for 0x401fc1>, <DisassemblerInsn "mov" for 0x401fc4>, <DisassemblerInsn "shl" for 0x401fcb>, <DisassemblerInsn "mov" for 0x401fcd>, <DisassemblerInsn "cmp" for 0x401fd4>, <DisassemblerInsn "jge" for 0x401fd7>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401006>, <DisassemblerInsn "and" for 0x40100d>, <DisassemblerInsn "cmp" for 0x401012>, <DisassemblerInsn "je" for 0x401017>]'}, {'block_Idx': 185, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e42>, <DisassemblerInsn "mov" for 0x401e4a>, <DisassemblerInsn "mov" for 0x401e51>, <DisassemblerInsn "mov" for 0x401e58>, <DisassemblerInsn "mov" for 0x401e60>, <DisassemblerInsn "shr" for 0x401e68>, <DisassemblerInsn "mov" for 0x401e6c>, <DisassemblerInsn "add" for 0x401e6f>, <DisassemblerInsn "mov" for 0x401e73>, <DisassemblerInsn "add" for 0x401e75>, <DisassemblerInsn "mov" for 0x401e78>, <DisassemblerInsn "shl" for 0x401e7f>, <DisassemblerInsn "mov" for 0x401e82>, <DisassemblerInsn "mov" for 0x401e89>, <DisassemblerInsn "sar" for 0x401e91>, <DisassemblerInsn "movsxd" for 0x401e95>, <DisassemblerInsn "mov" for 0x401e98>, <DisassemblerInsn "ror" for 0x401e9c>, <DisassemblerInsn "ror" for 0x401ea0>, <DisassemblerInsn "ror" for 0x401ea3>, <DisassemblerInsn "shl" for 0x401ea7>, <DisassemblerInsn "mov" for 0x401ea9>, <DisassemblerInsn "mov" for 0x401eb0>, <DisassemblerInsn "xor" for 0x401eb3>, <DisassemblerInsn "sub" for 0x401eb5>, <DisassemblerInsn "shr" for 0x401eb8>, <DisassemblerInsn "mov" for 0x401eba>, <DisassemblerInsn "add" for 0x401ec1>, <DisassemblerInsn "mov" for 0x401ec3>, <DisassemblerInsn "or" for 0x401ec5>, <DisassemblerInsn "mov" for 0x401ec7>, <DisassemblerInsn "mov" for 0x401ece>, <DisassemblerInsn "mov" for 0x401ed6>, <DisassemblerInsn "mov" for 0x401edd>, <DisassemblerInsn "mov" for 0x401ee4>, <DisassemblerInsn "sub" for 0x401ee9>, <DisassemblerInsn "mov" for 0x401eeb>, <DisassemblerInsn "shl" for 0x401ef2>, <DisassemblerInsn "mov" for 0x401ef4>, <DisassemblerInsn "sar" for 0x401efb>, <DisassemblerInsn "mov" for 0x401efd>, <DisassemblerInsn "cmp" for 0x401f04>, <DisassemblerInsn "jle" for 0x401f07>]'}, {'block_Idx': 101, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40190a>, <DisassemblerInsn "mov" for 0x401912>, <DisassemblerInsn "mov" for 0x401919>, <DisassemblerInsn "mov" for 0x401920>, <DisassemblerInsn "add" for 0x401927>, <DisassemblerInsn "mov" for 0x40192a>, <DisassemblerInsn "xor" for 0x40192c>, <DisassemblerInsn "call" for 0x40192e>]'}, {'block_Idx': 171, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401dc7>, <DisassemblerInsn "mov" for 0x401dce>, <DisassemblerInsn "mov" for 0x401dd5>, <DisassemblerInsn "mov" for 0x401ddd>, <DisassemblerInsn "sar" for 0x401ddf>, <DisassemblerInsn "movsxd" for 0x401de2>, <DisassemblerInsn "mov" for 0x401de5>, <DisassemblerInsn "ror" for 0x401de8>, <DisassemblerInsn "ror" for 0x401dec>, <DisassemblerInsn "ror" for 0x401def>, <DisassemblerInsn "and" for 0x401df3>, <DisassemblerInsn "mov" for 0x401df6>, <DisassemblerInsn "shl" for 0x401dfd>, <DisassemblerInsn "mov" for 0x401dff>, <DisassemblerInsn "cmp" for 0x401e06>, <DisassemblerInsn "jge" for 0x401e09>]'}, {'block_Idx': 41, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401287>, <DisassemblerInsn "add" for 0x40128f>, <DisassemblerInsn "mov" for 0x401293>, <DisassemblerInsn "jmp" for 0x40129b>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011c2>, <DisassemblerInsn "mov" for 0x4011ca>, <DisassemblerInsn "add" for 0x4011d1>, <DisassemblerInsn "sub" for 0x4011d4>, <DisassemblerInsn "setb" for 0x4011d7>, <DisassemblerInsn "mov" for 0x4011da>, <DisassemblerInsn "mov" for 0x4011dd>, <DisassemblerInsn "sub" for 0x4011df>, <DisassemblerInsn "sete" for 0x4011e2>, <DisassemblerInsn "and" for 0x4011e5>, <DisassemblerInsn "test" for 0x4011e7>, <DisassemblerInsn "mov" for 0x4011ea>, <DisassemblerInsn "jne" for 0x4011f1>]'}, {'block_Idx': 116, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017f0>, <DisassemblerInsn "sub" for 0x4017f7>, <DisassemblerInsn "je" for 0x4017fa>]'}, {'block_Idx': 226, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4021c2>, <DisassemblerInsn "mov" for 0x4021ca>, <DisassemblerInsn "mov" for 0x4021d1>, <DisassemblerInsn "mov" for 0x4021d8>, <DisassemblerInsn "mov" for 0x4021e0>, <DisassemblerInsn "mov" for 0x4021e8>, <DisassemblerInsn "mov" for 0x4021ef>, <DisassemblerInsn "mov" for 0x4021f6>, <DisassemblerInsn "sar" for 0x4021f8>, <DisassemblerInsn "movsxd" for 0x4021fb>, <DisassemblerInsn "mov" for 0x4021fe>, <DisassemblerInsn "ror" for 0x402201>, <DisassemblerInsn "ror" for 0x402205>, <DisassemblerInsn "ror" for 0x402208>, <DisassemblerInsn "and" for 0x40220c>, <DisassemblerInsn "mov" for 0x40220f>, <DisassemblerInsn "shl" for 0x402216>, <DisassemblerInsn "mov" for 0x402218>, <DisassemblerInsn "cmp" for 0x40221f>, <DisassemblerInsn "jge" for 0x402222>]'}, {'block_Idx': 64, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401482>, <DisassemblerInsn "mov" for 0x401489>, <DisassemblerInsn "mov" for 0x401490>, <DisassemblerInsn "mov" for 0x401495>, <DisassemblerInsn "shr" for 0x401497>, <DisassemblerInsn "mov" for 0x401499>, <DisassemblerInsn "and" for 0x40149b>, <DisassemblerInsn "mov" for 0x40149d>, <DisassemblerInsn "mov" for 0x40149f>, <DisassemblerInsn "mov" for 0x4014a4>, <DisassemblerInsn "mov" for 0x4014ac>, <DisassemblerInsn "mov" for 0x4014b4>, <DisassemblerInsn "mov" for 0x4014bb>, <DisassemblerInsn "mov" for 0x4014c3>, <DisassemblerInsn "mov" for 0x4014cb>, <DisassemblerInsn "mov" for 0x4014d2>, <DisassemblerInsn "mov" for 0x4014d9>, <DisassemblerInsn "mov" for 0x4014e1>, <DisassemblerInsn "cmp" for 0x4014e9>, <DisassemblerInsn "jle" for 0x4014ec>]'}, {'block_Idx': 224, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4020f9>, <DisassemblerInsn "mov" for 0x402101>, <DisassemblerInsn "mov" for 0x402109>, <DisassemblerInsn "mov" for 0x402111>, <DisassemblerInsn "mov" for 0x402113>, <DisassemblerInsn "mov" for 0x402115>, <DisassemblerInsn "mov" for 0x40211c>, <DisassemblerInsn "mov" for 0x402123>, <DisassemblerInsn "jmp" for 0x40212b>]'}, {'block_Idx': 121, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40189c>, <DisassemblerInsn "mov" for 0x4018a3>, <DisassemblerInsn "mov" for 0x4018ab>, <DisassemblerInsn "sar" for 0x4018ad>, <DisassemblerInsn "movsxd" for 0x4018b0>, <DisassemblerInsn "mov" for 0x4018b3>, <DisassemblerInsn "ror" for 0x4018b6>, <DisassemblerInsn "ror" for 0x4018ba>, <DisassemblerInsn "ror" for 0x4018bd>, <DisassemblerInsn "and" for 0x4018c1>, <DisassemblerInsn "shl" for 0x4018c4>, <DisassemblerInsn "mov" for 0x4018c6>, <DisassemblerInsn "shr" for 0x4018cd>, <DisassemblerInsn "add" for 0x4018d0>, <DisassemblerInsn "imul" for 0x4018d3>, <DisassemblerInsn "mov" for 0x4018d6>, <DisassemblerInsn "mov" for 0x4018dd>, <DisassemblerInsn "jmp" for 0x4018e4>]'}, {'block_Idx': 150, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c33>, <DisassemblerInsn "mov" for 0x401c3a>, <DisassemblerInsn "mov" for 0x401c41>, <DisassemblerInsn "mov" for 0x401c49>, <DisassemblerInsn "mov" for 0x401c51>, <DisassemblerInsn "mov" for 0x401c58>, <DisassemblerInsn "sar" for 0x401c5a>, <DisassemblerInsn "mov" for 0x401c5d>, <DisassemblerInsn "movsxd" for 0x401c64>, <DisassemblerInsn "mov" for 0x401c67>, <DisassemblerInsn "mov" for 0x401c6b>, <DisassemblerInsn "and" for 0x401c6d>, <DisassemblerInsn "mov" for 0x401c70>, <DisassemblerInsn "movzx" for 0x401c77>, <DisassemblerInsn "add" for 0x401c7b>, <DisassemblerInsn "mov" for 0x401c7e>, <DisassemblerInsn "mov" for 0x401c85>, <DisassemblerInsn "mov" for 0x401c87>, <DisassemblerInsn "shr" for 0x401c8c>, <DisassemblerInsn "mov" for 0x401c8e>, <DisassemblerInsn "mov" for 0x401c95>, <DisassemblerInsn "and" for 0x401c9c>, <DisassemblerInsn "mov" for 0x401c9e>, <DisassemblerInsn "add" for 0x401ca5>, <DisassemblerInsn "mov" for 0x401ca8>, <DisassemblerInsn "cmp" for 0x401caf>, <DisassemblerInsn "mov" for 0x401cb2>, <DisassemblerInsn "mov" for 0x401cb9>, <DisassemblerInsn "je" for 0x401cc0>]'}, {'block_Idx': 217, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402010>, <DisassemblerInsn "mov" for 0x402018>, <DisassemblerInsn "mov" for 0x40201f>, <DisassemblerInsn "mov" for 0x402026>, <DisassemblerInsn "mov" for 0x40202e>, <DisassemblerInsn "shr" for 0x402036>, <DisassemblerInsn "mov" for 0x40203a>, <DisassemblerInsn "add" for 0x40203d>, <DisassemblerInsn "mov" for 0x402041>, <DisassemblerInsn "add" for 0x402043>, <DisassemblerInsn "mov" for 0x402046>, <DisassemblerInsn "shl" for 0x40204d>, <DisassemblerInsn "mov" for 0x402050>, <DisassemblerInsn "mov" for 0x402057>, <DisassemblerInsn "sar" for 0x40205f>, <DisassemblerInsn "movsxd" for 0x402063>, <DisassemblerInsn "mov" for 0x402066>, <DisassemblerInsn "ror" for 0x40206a>, <DisassemblerInsn "ror" for 0x40206e>, <DisassemblerInsn "ror" for 0x402071>, <DisassemblerInsn "shl" for 0x402075>, <DisassemblerInsn "mov" for 0x402077>, <DisassemblerInsn "mov" for 0x40207e>, <DisassemblerInsn "xor" for 0x402081>, <DisassemblerInsn "sub" for 0x402083>, <DisassemblerInsn "shr" for 0x402086>, <DisassemblerInsn "mov" for 0x402088>, <DisassemblerInsn "add" for 0x40208f>, <DisassemblerInsn "mov" for 0x402091>, <DisassemblerInsn "or" for 0x402093>, <DisassemblerInsn "mov" for 0x402095>, <DisassemblerInsn "mov" for 0x40209c>, <DisassemblerInsn "mov" for 0x4020a4>, <DisassemblerInsn "mov" for 0x4020ac>, <DisassemblerInsn "mov" for 0x4020b3>, <DisassemblerInsn "mov" for 0x4020ba>, <DisassemblerInsn "sub" for 0x4020bf>, <DisassemblerInsn "mov" for 0x4020c1>, <DisassemblerInsn "shl" for 0x4020c8>, <DisassemblerInsn "mov" for 0x4020ca>, <DisassemblerInsn "sar" for 0x4020d1>, <DisassemblerInsn "mov" for 0x4020d3>, <DisassemblerInsn "mov" for 0x4020db>, <DisassemblerInsn "mov" for 0x4020de>, <DisassemblerInsn "add" for 0x4020e1>, <DisassemblerInsn "mov" for 0x4020e5>, <DisassemblerInsn "movsxd" for 0x4020ed>, <DisassemblerInsn "cmp" for 0x4020f0>, <DisassemblerInsn "jge" for 0x4020f3>]'}, {'block_Idx': 86, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015b1>, <DisassemblerInsn "sub" for 0x4015b8>, <DisassemblerInsn "je" for 0x4015bb>]'}, {'block_Idx': 91, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015bf>, <DisassemblerInsn "sub" for 0x4015c6>, <DisassemblerInsn "je" for 0x4015c9>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401121>, <DisassemblerInsn "mov" for 0x401129>, <DisassemblerInsn "mov" for 0x401131>, <DisassemblerInsn "mov" for 0x401138>, <DisassemblerInsn "shr" for 0x40113a>, <DisassemblerInsn "mov" for 0x40113d>, <DisassemblerInsn "shl" for 0x401144>, <DisassemblerInsn "shr" for 0x401147>, <DisassemblerInsn "mov" for 0x40114a>, <DisassemblerInsn "mov" for 0x401151>, <DisassemblerInsn "add" for 0x401154>, <DisassemblerInsn "mov" for 0x401158>, <DisassemblerInsn "mov" for 0x401160>, <DisassemblerInsn "ror" for 0x401163>, <DisassemblerInsn "ror" for 0x401167>, <DisassemblerInsn "ror" for 0x40116a>, <DisassemblerInsn "mov" for 0x40116e>, <DisassemblerInsn "shr" for 0x401175>, <DisassemblerInsn "mov" for 0x401178>, <DisassemblerInsn "mov" for 0x40117f>, <DisassemblerInsn "cmp" for 0x401185>, <DisassemblerInsn "jge" for 0x401188>]'}, {'block_Idx': 90, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016bc>, <DisassemblerInsn "mov" for 0x4016c4>, <DisassemblerInsn "mov" for 0x4016cb>, <DisassemblerInsn "mov" for 0x4016d2>, <DisassemblerInsn "mov" for 0x4016d9>, <DisassemblerInsn "mov" for 0x4016e0>, <DisassemblerInsn "mov" for 0x4016e2>, <DisassemblerInsn "cmp" for 0x4016e9>, <DisassemblerInsn "jle" for 0x4016eb>]'}, {'block_Idx': 111, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401855>, <DisassemblerInsn "mov" for 0x40185c>, <DisassemblerInsn "mov" for 0x401864>, <DisassemblerInsn "sar" for 0x401866>, <DisassemblerInsn "movsxd" for 0x401869>, <DisassemblerInsn "mov" for 0x40186c>, <DisassemblerInsn "ror" for 0x40186f>, <DisassemblerInsn "ror" for 0x401873>, <DisassemblerInsn "ror" for 0x401876>, <DisassemblerInsn "and" for 0x40187a>, <DisassemblerInsn "shl" for 0x40187d>, <DisassemblerInsn "mov" for 0x40187f>, <DisassemblerInsn "shr" for 0x401886>, <DisassemblerInsn "add" for 0x401889>, <DisassemblerInsn "mov" for 0x40188c>, <DisassemblerInsn "mov" for 0x401893>, <DisassemblerInsn "jmp" for 0x40189a>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40218b>, <DisassemblerInsn "mov" for 0x402192>, <DisassemblerInsn "mov" for 0x402199>, <DisassemblerInsn "mov" for 0x4021a0>, <DisassemblerInsn "mov" for 0x4021a2>, <DisassemblerInsn "xor" for 0x4021aa>, <DisassemblerInsn "mov" for 0x4021ac>, <DisassemblerInsn "mov" for 0x4021b3>, <DisassemblerInsn "mov" for 0x4021ba>, <DisassemblerInsn "mov" for 0x4021c2>, <DisassemblerInsn "mov" for 0x4021ca>, <DisassemblerInsn "mov" for 0x4021d1>, <DisassemblerInsn "mov" for 0x4021d8>, <DisassemblerInsn "mov" for 0x4021e0>, <DisassemblerInsn "mov" for 0x4021e8>, <DisassemblerInsn "mov" for 0x4021ef>, <DisassemblerInsn "mov" for 0x4021f6>, <DisassemblerInsn "sar" for 0x4021f8>, <DisassemblerInsn "movsxd" for 0x4021fb>, <DisassemblerInsn "mov" for 0x4021fe>, <DisassemblerInsn "ror" for 0x402201>, <DisassemblerInsn "ror" for 0x402205>, <DisassemblerInsn "ror" for 0x402208>, <DisassemblerInsn "and" for 0x40220c>, <DisassemblerInsn "mov" for 0x40220f>, <DisassemblerInsn "shl" for 0x402216>, <DisassemblerInsn "mov" for 0x402218>, <DisassemblerInsn "cmp" for 0x40221f>, <DisassemblerInsn "jge" for 0x402222>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013ea>, <DisassemblerInsn "mov" for 0x4013f2>, <DisassemblerInsn "mov" for 0x4013fa>, <DisassemblerInsn "ror" for 0x4013fd>, <DisassemblerInsn "ror" for 0x401401>, <DisassemblerInsn "ror" for 0x401404>, <DisassemblerInsn "shr" for 0x401408>, <DisassemblerInsn "mov" for 0x40140b>, <DisassemblerInsn "mov" for 0x401412>, <DisassemblerInsn "mov" for 0x401418>, <DisassemblerInsn "xor" for 0x40141a>, <DisassemblerInsn "shr" for 0x401420>, <DisassemblerInsn "cmp" for 0x401423>, <DisassemblerInsn "cmovb" for 0x401429>, <DisassemblerInsn "mov" for 0x40142c>, <DisassemblerInsn "xor" for 0x401431>, <DisassemblerInsn "cmp" for 0x401433>, <DisassemblerInsn "cmovb" for 0x401439>, <DisassemblerInsn "mov" for 0x40143c>, <DisassemblerInsn "and" for 0x40143e>, <DisassemblerInsn "mov" for 0x401444>, <DisassemblerInsn "shr" for 0x401446>, <DisassemblerInsn "mov" for 0x401449>, <DisassemblerInsn "or" for 0x40144b>, <DisassemblerInsn "cmp" for 0x40144e>, <DisassemblerInsn "cmove" for 0x401451>, <DisassemblerInsn "cmp" for 0x401454>, <DisassemblerInsn "cmove" for 0x401457>, <DisassemblerInsn "mov" for 0x40145a>, <DisassemblerInsn "mov" for 0x40145c>, <DisassemblerInsn "mov" for 0x40145e>, <DisassemblerInsn "movzx" for 0x401465>, <DisassemblerInsn "add" for 0x401469>, <DisassemblerInsn "mov" for 0x40146b>, <DisassemblerInsn "sub" for 0x401470>, <DisassemblerInsn "mov" for 0x401472>, <DisassemblerInsn "cmp" for 0x401479>, <DisassemblerInsn "je" for 0x40147c>]'}, {'block_Idx': 32, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011f5>, <DisassemblerInsn "add" for 0x4011fc>, <DisassemblerInsn "mov" for 0x4011ff>, <DisassemblerInsn "mov" for 0x401204>, <DisassemblerInsn "mov" for 0x40120b>, <DisassemblerInsn "jmp" for 0x401212>]'}, {'block_Idx': 19, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cfa>, <DisassemblerInsn "mov" for 0x400d02>, <DisassemblerInsn "mov" for 0x400d0a>, <DisassemblerInsn "mov" for 0x400d12>, <DisassemblerInsn "mov" for 0x400d1a>, <DisassemblerInsn "mov" for 0x400d22>, <DisassemblerInsn "mov" for 0x400d2a>, <DisassemblerInsn "add" for 0x400d2d>, <DisassemblerInsn "sar" for 0x400d30>, <DisassemblerInsn "xor" for 0x400d33>, <DisassemblerInsn "cmp" for 0x400d36>, <DisassemblerInsn "cmovl" for 0x400d3a>, <DisassemblerInsn "xor" for 0x400d3e>, <DisassemblerInsn "cmp" for 0x400d41>, <DisassemblerInsn "mov" for 0x400d45>, <DisassemblerInsn "cmovl" for 0x400d48>, <DisassemblerInsn "xor" for 0x400d4c>, <DisassemblerInsn "cmp" for 0x400d4f>, <DisassemblerInsn "cmovl" for 0x400d53>, <DisassemblerInsn "mov" for 0x400d57>, <DisassemblerInsn "mov" for 0x400d5a>, <DisassemblerInsn "movsxd" for 0x400d5d>, <DisassemblerInsn "add" for 0x400d60>, <DisassemblerInsn "mov" for 0x400d63>, <DisassemblerInsn "mov" for 0x400d66>, <DisassemblerInsn "jmp" for 0x400d6c>]'}, {'block_Idx': 42, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40129d>, <DisassemblerInsn "and" for 0x4012a4>, <DisassemblerInsn "cmp" for 0x4012a7>, <DisassemblerInsn "je" for 0x4012aa>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401244>, <DisassemblerInsn "mov" for 0x40124c>, <DisassemblerInsn "mov" for 0x401253>, <DisassemblerInsn "mov" for 0x40125a>, <DisassemblerInsn "mov" for 0x401261>, <DisassemblerInsn "mov" for 0x401268>, <DisassemblerInsn "shl" for 0x40126f>, <DisassemblerInsn "shr" for 0x401272>, <DisassemblerInsn "mov" for 0x401275>, <DisassemblerInsn "mov" for 0x40127c>, <DisassemblerInsn "cmp" for 0x401282>, <DisassemblerInsn "jne" for 0x401285>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a78>, <DisassemblerInsn "mov" for 0x400a80>, <DisassemblerInsn "mov" for 0x400a87>, <DisassemblerInsn "mov" for 0x400a8e>, <DisassemblerInsn "mov" for 0x400a96>, <DisassemblerInsn "mov" for 0x400a9d>, <DisassemblerInsn "mov" for 0x400aa4>, <DisassemblerInsn "shl" for 0x400aa6>, <DisassemblerInsn "xor" for 0x400aa9>, <DisassemblerInsn "cmp" for 0x400aab>, <DisassemblerInsn "cmovl" for 0x400aae>, <DisassemblerInsn "mov" for 0x400ab2>, <DisassemblerInsn "xor" for 0x400aba>, <DisassemblerInsn "cmp" for 0x400abc>, <DisassemblerInsn "cmovl" for 0x400abf>, <DisassemblerInsn "xor" for 0x400ac2>, <DisassemblerInsn "cmp" for 0x400ac4>, <DisassemblerInsn "cmovl" for 0x400ac7>, <DisassemblerInsn "mov" for 0x400aca>, <DisassemblerInsn "add" for 0x400acd>, <DisassemblerInsn "mov" for 0x400ad1>, <DisassemblerInsn "mov" for 0x400ad9>, <DisassemblerInsn "mov" for 0x400add>, <DisassemblerInsn "add" for 0x400ae0>, <DisassemblerInsn "mov" for 0x400ae4>, <DisassemblerInsn "mov" for 0x400aec>, <DisassemblerInsn "mov" for 0x400aef>, <DisassemblerInsn "mov" for 0x400af1>, <DisassemblerInsn "mov" for 0x400af3>, <DisassemblerInsn "add" for 0x400af6>, <DisassemblerInsn "mov" for 0x400af9>, <DisassemblerInsn "add" for 0x400afc>, <DisassemblerInsn "mov" for 0x400b00>, <DisassemblerInsn "mov" for 0x400b08>, <DisassemblerInsn "mov" for 0x400b0c>, <DisassemblerInsn "add" for 0x400b0f>, <DisassemblerInsn "mov" for 0x400b13>, <DisassemblerInsn "mov" for 0x400b1b>, <DisassemblerInsn "mov" for 0x400b22>, <DisassemblerInsn "ror" for 0x400b24>, <DisassemblerInsn "ror" for 0x400b28>, <DisassemblerInsn "ror" for 0x400b2b>, <DisassemblerInsn "shr" for 0x400b2f>, <DisassemblerInsn "mov" for 0x400b32>, <DisassemblerInsn "shl" for 0x400b39>, <DisassemblerInsn "mov" for 0x400b3c>, <DisassemblerInsn "ror" for 0x400b3f>, <DisassemblerInsn "ror" for 0x400b43>, <DisassemblerInsn "ror" for 0x400b46>, <DisassemblerInsn "mov" for 0x400b4a>, <DisassemblerInsn "shr" for 0x400b51>, <DisassemblerInsn "or" for 0x400b54>, <DisassemblerInsn "cmp" for 0x400b56>, <DisassemblerInsn "jne" for 0x400b5b>]'}, {'block_Idx': 75, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014bb>, <DisassemblerInsn "mov" for 0x4014c3>, <DisassemblerInsn "mov" for 0x4014cb>, <DisassemblerInsn "mov" for 0x4014d2>, <DisassemblerInsn "mov" for 0x4014d9>, <DisassemblerInsn "mov" for 0x4014e1>, <DisassemblerInsn "cmp" for 0x4014e9>, <DisassemblerInsn "jle" for 0x4014ec>]'}, {'block_Idx': 212, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402224>, <DisassemblerInsn "mov" for 0x40222b>, <DisassemblerInsn "mov" for 0x402232>, <DisassemblerInsn "mov" for 0x402239>, <DisassemblerInsn "xor" for 0x40223c>, <DisassemblerInsn "sub" for 0x40223e>, <DisassemblerInsn "shr" for 0x402241>, <DisassemblerInsn "mov" for 0x402243>, <DisassemblerInsn "add" for 0x40224b>, <DisassemblerInsn "mov" for 0x40224d>, <DisassemblerInsn "mov" for 0x40224f>, <DisassemblerInsn "jmp" for 0x402256>]'}, {'block_Idx': 142, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401afd>, <DisassemblerInsn "mov" for 0x401b05>, <DisassemblerInsn "mov" for 0x401b0d>, <DisassemblerInsn "mov" for 0x401b14>, <DisassemblerInsn "mov" for 0x401b1b>, <DisassemblerInsn "mov" for 0x401b1d>, <DisassemblerInsn "mov" for 0x401b24>, <DisassemblerInsn "mov" for 0x401b27>, <DisassemblerInsn "mov" for 0x401b2f>, <DisassemblerInsn "sar" for 0x401b31>, <DisassemblerInsn "movsxd" for 0x401b34>, <DisassemblerInsn "mov" for 0x401b37>, <DisassemblerInsn "mov" for 0x401b3b>, <DisassemblerInsn "and" for 0x401b3d>, <DisassemblerInsn "movzx" for 0x401b40>, <DisassemblerInsn "mov" for 0x401b44>, <DisassemblerInsn "add" for 0x401b4b>, <DisassemblerInsn "mov" for 0x401b4e>, <DisassemblerInsn "mov" for 0x401b55>, <DisassemblerInsn "mov" for 0x401b57>, <DisassemblerInsn "shr" for 0x401b5c>, <DisassemblerInsn "mov" for 0x401b5e>, <DisassemblerInsn "and" for 0x401b65>, <DisassemblerInsn "cmp" for 0x401b67>, <DisassemblerInsn "je" for 0x401b6a>]'}, {'block_Idx': 223, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40209c>, <DisassemblerInsn "mov" for 0x4020a4>, <DisassemblerInsn "mov" for 0x4020ac>, <DisassemblerInsn "mov" for 0x4020b3>, <DisassemblerInsn "mov" for 0x4020ba>, <DisassemblerInsn "sub" for 0x4020bf>, <DisassemblerInsn "mov" for 0x4020c1>, <DisassemblerInsn "shl" for 0x4020c8>, <DisassemblerInsn "mov" for 0x4020ca>, <DisassemblerInsn "sar" for 0x4020d1>, <DisassemblerInsn "mov" for 0x4020d3>, <DisassemblerInsn "mov" for 0x4020db>, <DisassemblerInsn "mov" for 0x4020de>, <DisassemblerInsn "add" for 0x4020e1>, <DisassemblerInsn "mov" for 0x4020e5>, <DisassemblerInsn "movsxd" for 0x4020ed>, <DisassemblerInsn "cmp" for 0x4020f0>, <DisassemblerInsn "jge" for 0x4020f3>]'}, {'block_Idx': 71, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014ee>, <DisassemblerInsn "mov" for 0x4014f6>, <DisassemblerInsn "mov" for 0x4014fe>, <DisassemblerInsn "mov" for 0x401506>, <DisassemblerInsn "mov" for 0x40150e>, <DisassemblerInsn "add" for 0x401515>, <DisassemblerInsn "mov" for 0x401518>, <DisassemblerInsn "shr" for 0x40151b>, <DisassemblerInsn "mov" for 0x40151f>, <DisassemblerInsn "ror" for 0x401523>, <DisassemblerInsn "ror" for 0x401527>, <DisassemblerInsn "ror" for 0x40152a>, <DisassemblerInsn "shr" for 0x40152e>, <DisassemblerInsn "add" for 0x401531>, <DisassemblerInsn "mov" for 0x401535>, <DisassemblerInsn "mov" for 0x401538>, <DisassemblerInsn "add" for 0x40153b>, <DisassemblerInsn "shl" for 0x40153e>, <DisassemblerInsn "movsxd" for 0x401542>, <DisassemblerInsn "add" for 0x401545>, <DisassemblerInsn "cmp" for 0x401548>, <DisassemblerInsn "mov" for 0x40154b>, <DisassemblerInsn "mov" for 0x401553>, <DisassemblerInsn "mov" for 0x40155b>, <DisassemblerInsn "jb" for 0x401562>]'}, {'block_Idx': 128, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ae2>, <DisassemblerInsn "mov" for 0x401aea>, <DisassemblerInsn "add" for 0x401af1>, <DisassemblerInsn "mov" for 0x401af4>, <DisassemblerInsn "mov" for 0x401af6>, <DisassemblerInsn "mov" for 0x401afd>, <DisassemblerInsn "mov" for 0x401b05>, <DisassemblerInsn "mov" for 0x401b0d>, <DisassemblerInsn "mov" for 0x401b14>, <DisassemblerInsn "mov" for 0x401b1b>, <DisassemblerInsn "mov" for 0x401b1d>, <DisassemblerInsn "mov" for 0x401b24>, <DisassemblerInsn "mov" for 0x401b27>, <DisassemblerInsn "mov" for 0x401b2f>, <DisassemblerInsn "sar" for 0x401b31>, <DisassemblerInsn "movsxd" for 0x401b34>, <DisassemblerInsn "mov" for 0x401b37>, <DisassemblerInsn "mov" for 0x401b3b>, <DisassemblerInsn "and" for 0x401b3d>, <DisassemblerInsn "movzx" for 0x401b40>, <DisassemblerInsn "mov" for 0x401b44>, <DisassemblerInsn "add" for 0x401b4b>, <DisassemblerInsn "mov" for 0x401b4e>, <DisassemblerInsn "mov" for 0x401b55>, <DisassemblerInsn "mov" for 0x401b57>, <DisassemblerInsn "shr" for 0x401b5c>, <DisassemblerInsn "mov" for 0x401b5e>, <DisassemblerInsn "and" for 0x401b65>, <DisassemblerInsn "cmp" for 0x401b67>, <DisassemblerInsn "je" for 0x401b6a>]'}, {'block_Idx': 94, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401640>, <DisassemblerInsn "mov" for 0x401648>, <DisassemblerInsn "mov" for 0x40164f>, <DisassemblerInsn "mov" for 0x401657>, <DisassemblerInsn "shr" for 0x40165f>, <DisassemblerInsn "and" for 0x401663>, <DisassemblerInsn "mov" for 0x40166a>, <DisassemblerInsn "ror" for 0x40166d>, <DisassemblerInsn "ror" for 0x401671>, <DisassemblerInsn "ror" for 0x401674>, <DisassemblerInsn "shr" for 0x401678>, <DisassemblerInsn "add" for 0x40167b>, <DisassemblerInsn "mov" for 0x40167e>, <DisassemblerInsn "add" for 0x401680>, <DisassemblerInsn "mov" for 0x401683>, <DisassemblerInsn "mov" for 0x40168a>, <DisassemblerInsn "jmp" for 0x401691>]'}, {'block_Idx': 213, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40225b>, <DisassemblerInsn "mov" for 0x402263>, <DisassemblerInsn "mov" for 0x40226a>, <DisassemblerInsn "mov" for 0x402271>, <DisassemblerInsn "mov" for 0x402279>, <DisassemblerInsn "shr" for 0x402281>, <DisassemblerInsn "mov" for 0x402285>, <DisassemblerInsn "add" for 0x402288>, <DisassemblerInsn "mov" for 0x40228c>, <DisassemblerInsn "add" for 0x40228e>, <DisassemblerInsn "mov" for 0x402291>, <DisassemblerInsn "shl" for 0x402298>, <DisassemblerInsn "mov" for 0x40229b>, <DisassemblerInsn "mov" for 0x4022a2>, <DisassemblerInsn "sar" for 0x4022aa>, <DisassemblerInsn "movsxd" for 0x4022ae>, <DisassemblerInsn "mov" for 0x4022b1>, <DisassemblerInsn "ror" for 0x4022b5>, <DisassemblerInsn "ror" for 0x4022b9>, <DisassemblerInsn "ror" for 0x4022bc>, <DisassemblerInsn "shl" for 0x4022c0>, <DisassemblerInsn "mov" for 0x4022c2>, <DisassemblerInsn "mov" for 0x4022c9>, <DisassemblerInsn "xor" for 0x4022cc>, <DisassemblerInsn "sub" for 0x4022ce>, <DisassemblerInsn "shr" for 0x4022d1>, <DisassemblerInsn "mov" for 0x4022d3>, <DisassemblerInsn "add" for 0x4022da>, <DisassemblerInsn "mov" for 0x4022dc>, <DisassemblerInsn "or" for 0x4022de>, <DisassemblerInsn "mov" for 0x4022e0>, <DisassemblerInsn "mov" for 0x4022e7>, <DisassemblerInsn "mov" for 0x4022ef>, <DisassemblerInsn "mov" for 0x4022f7>, <DisassemblerInsn "mov" for 0x4022fe>, <DisassemblerInsn "mov" for 0x402305>, <DisassemblerInsn "sub" for 0x40230a>, <DisassemblerInsn "mov" for 0x40230c>, <DisassemblerInsn "shl" for 0x402313>, <DisassemblerInsn "mov" for 0x402315>, <DisassemblerInsn "sar" for 0x40231c>, <DisassemblerInsn "mov" for 0x40231e>, <DisassemblerInsn "mov" for 0x402326>, <DisassemblerInsn "add" for 0x402329>, <DisassemblerInsn "mov" for 0x40232d>, <DisassemblerInsn "cmp" for 0x402335>, <DisassemblerInsn "je" for 0x402338>]'}, {'block_Idx': 220, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402371>, <DisassemblerInsn "mov" for 0x402378>, <DisassemblerInsn "mov" for 0x402380>, <DisassemblerInsn "mov" for 0x402388>, <DisassemblerInsn "call" for 0x40238a>]'}, {'block_Idx': 108, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017e2>, <DisassemblerInsn "sub" for 0x4017e9>, <DisassemblerInsn "je" for 0x4017ec>]'}, {'block_Idx': 149, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401cfc>, <DisassemblerInsn "mov" for 0x401d03>, <DisassemblerInsn "mov" for 0x401d0a>, <DisassemblerInsn "mov" for 0x401d11>, <DisassemblerInsn "mov" for 0x401d18>, <DisassemblerInsn "mov" for 0x401d1f>, <DisassemblerInsn "cmp" for 0x401d26>, <DisassemblerInsn "jle" for 0x401d29>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b61>, <DisassemblerInsn "mov" for 0x400b69>, <DisassemblerInsn "mov" for 0x400b71>, <DisassemblerInsn "mov" for 0x400b79>, <DisassemblerInsn "mov" for 0x400b7f>, <DisassemblerInsn "add" for 0x400b82>, <DisassemblerInsn "mov" for 0x400b86>, <DisassemblerInsn "mov" for 0x400b8e>, <DisassemblerInsn "add" for 0x400b91>, <DisassemblerInsn "mov" for 0x400b95>, <DisassemblerInsn "mov" for 0x400b9d>, <DisassemblerInsn "mov" for 0x400ba0>, <DisassemblerInsn "mov" for 0x400ba8>, <DisassemblerInsn "add" for 0x400bab>, <DisassemblerInsn "mov" for 0x400baf>, <DisassemblerInsn "mov" for 0x400bb7>, <DisassemblerInsn "add" for 0x400bba>, <DisassemblerInsn "mov" for 0x400bbe>, <DisassemblerInsn "mov" for 0x400bc6>, <DisassemblerInsn "add" for 0x400bc9>, <DisassemblerInsn "mov" for 0x400bcd>, <DisassemblerInsn "mov" for 0x400bd5>, <DisassemblerInsn "add" for 0x400bd8>, <DisassemblerInsn "mov" for 0x400bdf>, <DisassemblerInsn "add" for 0x400be7>, <DisassemblerInsn "mov" for 0x400bed>, <DisassemblerInsn "mov" for 0x400bf5>, <DisassemblerInsn "mov" for 0x400bfa>, <DisassemblerInsn "mov" for 0x400c02>, <DisassemblerInsn "mov" for 0x400c09>, <DisassemblerInsn "mov" for 0x400c11>, <DisassemblerInsn "mov" for 0x400c19>, <DisassemblerInsn "mov" for 0x400c20>, <DisassemblerInsn "mov" for 0x400c28>, <DisassemblerInsn "sar" for 0x400c2a>, <DisassemblerInsn "movsxd" for 0x400c2d>, <DisassemblerInsn "mov" for 0x400c30>, <DisassemblerInsn "mov" for 0x400c33>, <DisassemblerInsn "and" for 0x400c35>, <DisassemblerInsn "mov" for 0x400c38>, <DisassemblerInsn "movzx" for 0x400c3f>, <DisassemblerInsn "mov" for 0x400c42>, <DisassemblerInsn "mov" for 0x400c49>, <DisassemblerInsn "add" for 0x400c4b>, <DisassemblerInsn "mov" for 0x400c4e>, <DisassemblerInsn "sar" for 0x400c50>, <DisassemblerInsn "movsxd" for 0x400c53>, <DisassemblerInsn "mov" for 0x400c56>, <DisassemblerInsn "ror" for 0x400c59>, <DisassemblerInsn "ror" for 0x400c5d>, <DisassemblerInsn "ror" for 0x400c60>, <DisassemblerInsn "and" for 0x400c64>, <DisassemblerInsn "shl" for 0x400c67>, <DisassemblerInsn "mov" for 0x400c69>, <DisassemblerInsn "shr" for 0x400c70>, <DisassemblerInsn "mov" for 0x400c73>, <DisassemblerInsn "mov" for 0x400c7a>, <DisassemblerInsn "add" for 0x400c7c>, <DisassemblerInsn "sar" for 0x400c7f>, <DisassemblerInsn "movsxd" for 0x400c82>, <DisassemblerInsn "mov" for 0x400c85>, <DisassemblerInsn "ror" for 0x400c88>, <DisassemblerInsn "ror" for 0x400c8c>, <DisassemblerInsn "ror" for 0x400c8f>, <DisassemblerInsn "shl" for 0x400c93>, <DisassemblerInsn "mov" for 0x400c95>, <DisassemblerInsn "shr" for 0x400c9c>, <DisassemblerInsn "mov" for 0x400c9f>, <DisassemblerInsn "add" for 0x400ca2>, <DisassemblerInsn "shl" for 0x400ca6>, <DisassemblerInsn "sar" for 0x400ca9>, <DisassemblerInsn "movsxd" for 0x400cad>, <DisassemblerInsn "mov" for 0x400cb0>, <DisassemblerInsn "ror" for 0x400cb4>, <DisassemblerInsn "ror" for 0x400cb8>, <DisassemblerInsn "ror" for 0x400cbb>, <DisassemblerInsn "shl" for 0x400cbf>, <DisassemblerInsn "mov" for 0x400cc1>, <DisassemblerInsn "shr" for 0x400cc9>, <DisassemblerInsn "add" for 0x400ccc>, <DisassemblerInsn "mov" for 0x400ccf>, <DisassemblerInsn "mov" for 0x400cd6>, <DisassemblerInsn "or" for 0x400cd8>, <DisassemblerInsn "mov" for 0x400cda>, <DisassemblerInsn "shl" for 0x400ce1>, <DisassemblerInsn "mov" for 0x400ce4>, <DisassemblerInsn "add" for 0x400ceb>, <DisassemblerInsn "mov" for 0x400ced>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cef>, <DisassemblerInsn "cmp" for 0x400cf6>, <DisassemblerInsn "jle" for 0x400cf8>]'}, {'block_Idx': 76, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401568>]'}, {'block_Idx': 50, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012f6>, <DisassemblerInsn "mov" for 0x4012fe>, <DisassemblerInsn "mov" for 0x401306>, <DisassemblerInsn "mov" for 0x40130e>, <DisassemblerInsn "mov" for 0x401316>, <DisassemblerInsn "mov" for 0x401318>, <DisassemblerInsn "cmp" for 0x40131f>, <DisassemblerInsn "setg" for 0x401322>, <DisassemblerInsn "mov" for 0x401326>, <DisassemblerInsn "mov" for 0x40132e>, <DisassemblerInsn "add" for 0x401331>, <DisassemblerInsn "mov" for 0x401335>, <DisassemblerInsn "mov" for 0x40133d>, <DisassemblerInsn "mov" for 0x401341>, <DisassemblerInsn "mov" for 0x401347>, <DisassemblerInsn "cmp" for 0x40134d>, <DisassemblerInsn "cmovg" for 0x401350>, <DisassemblerInsn "mov" for 0x401354>, <DisassemblerInsn "mov" for 0x40135a>, <DisassemblerInsn "cmp" for 0x401360>, <DisassemblerInsn "cmovg" for 0x401363>, <DisassemblerInsn "and" for 0x401367>, <DisassemblerInsn "movzx" for 0x40136b>, <DisassemblerInsn "mov" for 0x40136f>, <DisassemblerInsn "sub" for 0x401373>, <DisassemblerInsn "mov" for 0x401376>, <DisassemblerInsn "mov" for 0x401379>, <DisassemblerInsn "mov" for 0x401381>, <DisassemblerInsn "add" for 0x401384>, <DisassemblerInsn "mov" for 0x401388>, <DisassemblerInsn "mov" for 0x401390>, <DisassemblerInsn "mov" for 0x401394>, <DisassemblerInsn "add" for 0x401397>, <DisassemblerInsn "mov" for 0x40139b>, <DisassemblerInsn "mov" for 0x4013a3>, <DisassemblerInsn "mov" for 0x4013a7>, <DisassemblerInsn "mov" for 0x4013ad>, <DisassemblerInsn "add" for 0x4013b0>, <DisassemblerInsn "mov" for 0x4013b4>, <DisassemblerInsn "mov" for 0x4013bc>, <DisassemblerInsn "mov" for 0x4013bf>, <DisassemblerInsn "mov" for 0x4013c1>, <DisassemblerInsn "and" for 0x4013c7>, <DisassemblerInsn "cmp" for 0x4013c9>, <DisassemblerInsn "je" for 0x4013cb>]'}], 'cfg_block_detailed_info': [{'block_Idx': 190, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rcx, qword ptr [rsp + 0x748]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x6a0], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x6a8], rax>', '<mov~~rax, qword ptr [rsp + 0x6a8]>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~rdx, qword ptr [rsp + 0x6a0]>', '<mov~~esi, dword ptr [rsp + 0x6b8]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x698], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x6a8], rax>', '<jl~~0x401f34>']}, {'block_Idx': 103, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<sub~~eax, 0xc>', '<je~~0x401805>']}, {'block_Idx': 184, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x6f0]>', '<mov~~edx, dword ptr [rsp + 0x6ec]>', '<mov~~eax, dword ptr [rsp + 0x6cc]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x960]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<jmp~~0x401ece>']}, {'block_Idx': 20, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x86c]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~edx, ecx>', '<mov~~dword ptr [rsp + 0x84c], edx>', '<mov~~dword ptr [rsp + 0x850], ecx>', '<mov~~dword ptr [rsp + 0x854], eax>', '<je~~0x401244>']}, {'block_Idx': 45, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x960]>', '<mov~~rax, qword ptr [rsp + 0x928]>', '<mov~~edx, dword ptr [rsp + 0x934]>', '<mov~~qword ptr [rsp + 0x8c0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x8d4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x8cc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x8d0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x950]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x8d8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x8dc], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x8e0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x8e4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400d71>']}, {'block_Idx': 3, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, qword ptr [rsp + 0xa10]>', '<mov~~ecx, dword ptr [rsp + 0x9ec]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x9e0]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~esi, dword ptr [rdx]>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0xa1c], esi>', '<mov~~dword ptr [rsp + 0x9c8], edx>', '<mov~~dword ptr [rsp + 0x9cc], ecx>', '<mov~~qword ptr [rsp + 0x9d0], rax>', '<je~~0x400a78>']}, {'block_Idx': 219, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~rdx, qword ptr [rsp + 0x658]>', '<mov~~edi, dword ptr [rsp + 0x628]>', '<mov~~esi, dword ptr [rsp + 0x61c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x604], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x604]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x608], rax>', '<cmp~~rax, rcx>', '<je~~0x402371>']}, {'block_Idx': 18, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x8dc]>', '<cmp~~eax, 0>', '<je~~0x400fbd>']}, {'block_Idx': 221, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x608]>', '<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x640], edx>', '<mov~~dword ptr [rsp + 0x644], ecx>', '<mov~~qword ptr [rsp + 0x648], rax>', '<jmp~~0x4021c2>']}, {'block_Idx': 34, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, qword ptr [rsp + 0x998]>', '<mov~~rdi, qword ptr [rsp + 0x9b8]>', '<mov~~rsi, qword ptr [rsp + 0xa10]>', '<mov~~eax, dword ptr [rsp + 0x9a4]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x9c8], esi>', '<mov~~dword ptr [rsp + 0x9cc], edx>', '<mov~~qword ptr [rsp + 0x9d0], rcx>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<jne~~0x403fcf>']}, {'block_Idx': 88, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~ecx, dword ptr [rsp + 0x7d0]>', '<mov~~rax, qword ptr [rsp + 0x940]>', '<mov~~rsi, qword ptr [rsp + 0x7e0]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x7c8], ecx>', '<mov~~dword ptr [rsp + 0x7cc], eax>', '<jmp~~0x4016bc>']}, {'block_Idx': 189, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6e8]>', '<cmp~~eax, 0>', '<je~~0x402f61>']}, {'block_Idx': 140, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x960]>', '<mov~~edx, dword ptr [rsp + 0x72c]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x73c]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x710], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 7>', '<mov~~dword ptr [rsi], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~edx, 8>', '<mov~~dword ptr [rsi], edx>', '<mov~~edi, 0x80>', '<shr~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x728]>', '<and~~edi, eax>', '<xor~~eax, eax>', '<mov~~esi, 1>', '<cmp~~edi, 0>', '<mov~~edi, edx>', '<mov~~dword ptr [rsp + 0x714], edi>', '<mov~~dword ptr [rsp + 0x718], esi>', '<mov~~dword ptr [rsp + 0x71c], edx>', '<mov~~dword ptr [rsp + 0x720], ecx>', '<mov~~dword ptr [rsp + 0x724], eax>', '<je~~0x401cfc>']}, {'block_Idx': 63, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x818]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x46f1]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 188, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~esi, dword ptr [rsp + 0x6ec]>', '<mov~~edx, dword ptr [rsp + 0x6c4]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x6b4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x6b8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402ed7>']}, {'block_Idx': 105, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~rax, qword ptr [rsp + 0x940]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40190a>']}, {'block_Idx': 216, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x68c]>', '<mov~~edx, dword ptr [rsp + 0x688]>', '<mov~~eax, dword ptr [rsp + 0x694]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x960]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x67c], eax>', '<jmp~~0x40209c>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x948]>', '<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~eax, dword ptr [rax]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x928], rcx>', '<mov~~dword ptr [rsp + 0x934], eax>', '<jmp~~0x400c09>']}, {'block_Idx': 210, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x6d8]>', '<mov~~eax, dword ptr [rsp + 0x6dc]>', '<mov~~rsi, qword ptr [rsp + 0x6e0]>', '<mov~~qword ptr [rsp + 0x680], rsi>', '<mov~~dword ptr [rsp + 0x688], eax>', '<mov~~dword ptr [rsp + 0x68c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x690], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x694], edx>', '<cmp~~eax, 0x12>', '<jge~~0x402010>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x968]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x401121>']}, {'block_Idx': 185, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~edi, dword ptr [rsp + 0x6f0]>', '<mov~~esi, dword ptr [rsp + 0x6ec]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~r9d, dword ptr [rsp + 0x6cc]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x6bc], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x6c8]>', '<mov~~dword ptr [rsp + 0x6c0], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6bc]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6c0]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~esi, dword ptr [rsp + 0x6ec]>', '<mov~~edx, dword ptr [rsp + 0x6c4]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x6b4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x6b8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402ed7>']}, {'block_Idx': 101, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~ecx, dword ptr [rsp + 0x7a8]>', '<mov~~edx, dword ptr [rsp + 0x7ac]>', '<mov~~dword ptr [rsp + 0x790], edx>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500048>']}, {'block_Idx': 171, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6ec]>', '<mov~~ecx, dword ptr [rsp + 0x6f0]>', '<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x6c8], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x6cc], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401e42>']}, {'block_Idx': 41, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x838], rax>', '<jmp~~0x4012f6>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~ecx, dword ptr [rsp + 0x86c]>', '<add~~ecx, -8>', '<sub~~ecx, 3>', '<setb~~cl>', '<mov~~eax, dword ptr [rax + 0xc]>', '<mov~~edx, eax>', '<sub~~edx, 2>', '<sete~~dl>', '<and~~cl, dl>', '<test~~cl, 1>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jne~~0x4011f5>']}, {'block_Idx': 116, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<sub~~eax, 0xe>', '<je~~0x40189c>']}, {'block_Idx': 226, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x640]>', '<mov~~eax, dword ptr [rsp + 0x644]>', '<mov~~rsi, qword ptr [rsp + 0x648]>', '<mov~~qword ptr [rsp + 0x620], rsi>', '<mov~~dword ptr [rsp + 0x628], eax>', '<mov~~dword ptr [rsp + 0x62c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x630], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x634], edx>', '<cmp~~eax, 0x12>', '<jge~~0x40225b>']}, {'block_Idx': 64, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x804]>', '<mov~~edx, dword ptr [rsp + 0x800]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~edx, 0x28>', '<mov~~qword ptr [rsp + 0x7e8], rdx>', '<mov~~qword ptr [rsp + 0x7f0], rcx>', '<mov~~dword ptr [rsp + 0x7fc], eax>', '<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~rdx, qword ptr [rsp + 0x7f0]>', '<mov~~eax, dword ptr [rsp + 0x7fc]>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<mov~~qword ptr [rsp + 0x7d8], rdx>', '<mov~~qword ptr [rsp + 0x7e0], rcx>', '<cmp~~eax, 1>', '<jle~~0x40156a>']}, {'block_Idx': 224, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x6d8], edx>', '<mov~~dword ptr [rsp + 0x6dc], ecx>', '<mov~~qword ptr [rsp + 0x6e0], rax>', '<jmp~~0x401f77>']}, {'block_Idx': 121, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~rax, qword ptr [rsp + 0x940]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40190a>']}, {'block_Idx': 150, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x718]>', '<mov~~edi, dword ptr [rsp + 0x714]>', '<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rsp + 0x730]>', '<mov~~dword ptr [rsp + 0x6f4], eax>', '<mov~~esi, edi>', '<sar~~esi, 3>', '<mov~~dword ptr [rsp + 0x6f8], esi>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x6fc], ecx>', '<movzx~~esi, sil>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x700], edi>', '<mov~~dword ptr [rdx], edi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x700]>', '<mov~~dword ptr [rsp + 0x704], edx>', '<and~~edx, esi>', '<mov~~dword ptr [rsp + 0x708], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x70c], eax>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x714], ecx>', '<mov~~dword ptr [rsp + 0x718], eax>', '<je~~0x401c33>']}, {'block_Idx': 217, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~edi, dword ptr [rsp + 0x68c]>', '<mov~~esi, dword ptr [rsp + 0x688]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~r9d, dword ptr [rsp + 0x694]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x674], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x690]>', '<mov~~dword ptr [rsp + 0x678], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x674]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x678]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x67c], eax>', '<mov~~rax, qword ptr [rsp + 0x680]>', '<mov~~rdx, qword ptr [rsp + 0x6d0]>', '<mov~~edi, dword ptr [rsp + 0x688]>', '<mov~~esi, dword ptr [rsp + 0x67c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x664], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x664]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x668], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402ed7>']}, {'block_Idx': 86, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x858]>', '<sub~~eax, 6>', '<je~~0x4015ed>']}, {'block_Idx': 91, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x858]>', '<sub~~eax, 7>', '<je~~0x401640>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x960]>', '<mov~~rax, qword ptr [rsp + 0x940]>', '<mov~~edx, dword ptr [rsp + 0x96c]>', '<mov~~esi, edx>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x858], esi>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x85c], edx>', '<mov~~rdx, rax>', '<add~~rdx, 3>', '<mov~~qword ptr [rsp + 0x860], rdx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x868], eax>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x86c], eax>', '<mov~~dword ptr [rcx], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x4011c2>']}, {'block_Idx': 90, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~edx, dword ptr [rsp + 0x7c8]>', '<mov~~eax, dword ptr [rsp + 0x7cc]>', '<mov~~dword ptr [rsp + 0x7bc], eax>', '<mov~~dword ptr [rsp + 0x7c0], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x7c4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401719>']}, {'block_Idx': 111, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~rax, qword ptr [rsp + 0x940]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40190a>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6ec]>', '<mov~~edx, dword ptr [rsp + 0x6f0]>', '<mov~~eax, dword ptr [rsp + 0x650]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x638], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x640], edx>', '<mov~~dword ptr [rsp + 0x644], ecx>', '<mov~~qword ptr [rsp + 0x648], rax>', '<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x640]>', '<mov~~eax, dword ptr [rsp + 0x644]>', '<mov~~rsi, qword ptr [rsp + 0x648]>', '<mov~~qword ptr [rsp + 0x620], rsi>', '<mov~~dword ptr [rsp + 0x628], eax>', '<mov~~dword ptr [rsp + 0x62c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x630], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x634], edx>', '<cmp~~eax, 0x12>', '<jge~~0x40225b>']}, {'block_Idx': 57, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rsp + 0x940]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x800], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~ecx, edi>', '<shr~~ecx, 8>', '<mov~~eax, edx>', '<or~~eax, 8>', '<cmp~~esi, 0>', '<cmove~~ecx, edi>', '<cmp~~esi, 0>', '<cmove~~eax, edx>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, qword ptr [rip + 0xfebdb]>', '<movzx~~ecx, byte ptr [rcx + rdx]>', '<add~~eax, ecx>', '<mov~~ecx, 7>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsp + 0x804], ecx>', '<cmp~~eax, 6>', '<je~~0x401587>']}, {'block_Idx': 32, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x86c]>', '<add~~eax, -7>', '<mov~~ecx, 2>', '<mov~~dword ptr [rsp + 0x850], ecx>', '<mov~~dword ptr [rsp + 0x854], eax>', '<jmp~~0x401244>']}, {'block_Idx': 19, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rsp + 0x958]>', '<mov~~rdi, qword ptr [rsp + 0x950]>', '<mov~~r9, qword ptr [rsp + 0x948]>', '<mov~~r11d, dword ptr [rsp + 0x8e4]>', '<mov~~rdx, qword ptr [rsp + 0x8c0]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x403ef1>']}, {'block_Idx': 42, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x848]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x4012ce>']}, {'block_Idx': 29, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x960]>', '<mov~~eax, dword ptr [rsp + 0x868]>', '<mov~~edx, dword ptr [rsp + 0x850]>', '<mov~~esi, dword ptr [rsp + 0x854]>', '<mov~~dword ptr [rsp + 0x840], esi>', '<mov~~dword ptr [rsp + 0x844], edx>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x848], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x40129d>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~esi, dword ptr [rsp + 0x9c8]>', '<mov~~edx, dword ptr [rsp + 0x9cc]>', '<mov~~rax, qword ptr [rsp + 0x9d0]>', '<mov~~dword ptr [rsp + 0x938], edx>', '<mov~~dword ptr [rsp + 0x93c], esi>', '<mov~~esi, edx>', '<shl~~esi, 3>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~rax, rdi>', '<mov~~qword ptr [rsp + 0x940], rax>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~esi, edi>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~edx, edi>', '<mov~~rdi, rcx>', '<add~~rdi, 0x28>', '<mov~~qword ptr [rsp + 0x948], rdi>', '<mov~~qword ptr [rcx + 0x28], rax>', '<mov~~rdi, rcx>', '<add~~rdi, 0x3c>', '<mov~~qword ptr [rsp + 0x950], rdi>', '<mov~~dword ptr [rcx + 0x3c], esi>', '<mov~~edx, edx>', '<mov~~esi, edx>', '<mov~~rdx, rax>', '<add~~rdx, rsi>', '<mov~~rsi, rcx>', '<add~~rsi, 0x30>', '<mov~~qword ptr [rsp + 0x958], rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x960], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x968], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x96c], eax>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x401006>']}, {'block_Idx': 75, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~rdx, qword ptr [rsp + 0x7f0]>', '<mov~~eax, dword ptr [rsp + 0x7fc]>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<mov~~qword ptr [rsp + 0x7d8], rdx>', '<mov~~qword ptr [rsp + 0x7e0], rcx>', '<cmp~~eax, 1>', '<jle~~0x40156a>']}, {'block_Idx': 212, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x62c]>', '<mov~~edx, dword ptr [rsp + 0x628]>', '<mov~~eax, dword ptr [rsp + 0x634]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x960]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<jmp~~0x4022e7>']}, {'block_Idx': 142, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rsp + 0x948]>', '<mov~~edx, dword ptr [rsp + 0x744]>', '<mov~~dword ptr [rsp + 0x728], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x72c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x730], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x740], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x73c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x740]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401b8c>']}, {'block_Idx': 223, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x680]>', '<mov~~rdx, qword ptr [rsp + 0x6d0]>', '<mov~~edi, dword ptr [rsp + 0x688]>', '<mov~~esi, dword ptr [rsp + 0x67c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x664], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x664]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x668], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402ed7>']}, {'block_Idx': 71, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7d8]>', '<mov~~rdi, qword ptr [rsp + 0x960]>', '<mov~~rdx, qword ptr [rsp + 0x7e0]>', '<mov~~rsi, qword ptr [rsp + 0x940]>', '<mov~~eax, dword ptr [rsp + 0x7d4]>', '<add~~eax, -1>', '<mov~~r8, rdx>', '<shr~~r8, 3>', '<mov~~esi, dword ptr [rsi + r8]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xf8>', '<add~~rdx, 8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rdi], r8d>', '<add~~esi, -0x80>', '<shl~~rcx, 6>', '<movsxd~~rdi, esi>', '<add~~rcx, rdi>', '<cmp~~esi, 0x40>', '<mov~~qword ptr [rsp + 0x7e8], rdx>', '<mov~~qword ptr [rsp + 0x7f0], rcx>', '<mov~~dword ptr [rsp + 0x7fc], eax>', '<jb~~0x4014bb>']}, {'block_Idx': 128, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~eax, dword ptr [rsp + 0x750]>', '<add~~eax, 1>', '<mov~~dword ptr [rcx], eax>', '<mov~~dword ptr [rsp + 0x744], eax>', '<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rsp + 0x948]>', '<mov~~edx, dword ptr [rsp + 0x744]>', '<mov~~dword ptr [rsp + 0x728], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x72c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x730], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x740], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x73c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x740]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401b8c>']}, {'block_Idx': 94, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~ecx, dword ptr [rsp + 0x7d0]>', '<mov~~rax, qword ptr [rsp + 0x940]>', '<mov~~rsi, qword ptr [rsp + 0x7e0]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x7c8], ecx>', '<mov~~dword ptr [rsp + 0x7cc], eax>', '<jmp~~0x4016bc>']}, {'block_Idx': 213, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~edi, dword ptr [rsp + 0x62c]>', '<mov~~esi, dword ptr [rsp + 0x628]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~r9d, dword ptr [rsp + 0x634]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x614], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x630]>', '<mov~~dword ptr [rsp + 0x618], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x614]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x618]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~rdx, qword ptr [rsp + 0x658]>', '<mov~~edi, dword ptr [rsp + 0x628]>', '<mov~~esi, dword ptr [rsp + 0x61c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x604], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x604]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x608], rax>', '<cmp~~rax, rcx>', '<je~~0x402371>']}, {'block_Idx': 220, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x650]>', '<mov~~rdi, qword ptr [rsp + 0x9f0]>', '<mov~~rax, qword ptr [rsp + 0x748]>', '<mov~~esi, eax>', '<call~~0x404f60>']}, {'block_Idx': 108, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<sub~~eax, 0xd>', '<je~~0x401855>']}, {'block_Idx': 149, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x71c]>', '<mov~~eax, dword ptr [rsp + 0x720]>', '<mov~~edx, dword ptr [rsp + 0x724]>', '<mov~~dword ptr [rsp + 0x6e8], edx>', '<mov~~dword ptr [rsp + 0x6ec], eax>', '<mov~~dword ptr [rsp + 0x6f0], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x401d49>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x940]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~dword ptr [rdx], 0x20>', '<mov~~rdx, rax>', '<add~~rdx, 0x54>', '<mov~~qword ptr [rsp + 0x8e8], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x20>', '<mov~~qword ptr [rsp + 0x8f0], rdx>', '<mov~~rdx, rax>', '<mov~~qword ptr [rsp + 0x8f8], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0xc>', '<mov~~qword ptr [rsp + 0x900], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x10>', '<mov~~qword ptr [rsp + 0x908], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x58>', '<mov~~qword ptr [rsp + 0x910], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0xa8>', '<mov~~qword ptr [rsp + 0x918], rdx>', '<add~~rax, 0x98>', '<mov~~qword ptr [rsp + 0x920], rax>', '<mov~~eax, 0x20>', '<mov~~qword ptr [rsp + 0x928], rcx>', '<mov~~dword ptr [rsp + 0x934], eax>', '<mov~~rdi, qword ptr [rsp + 0x960]>', '<mov~~rax, qword ptr [rsp + 0x928]>', '<mov~~edx, dword ptr [rsp + 0x934]>', '<mov~~qword ptr [rsp + 0x8c0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x8d4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x8cc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x8d0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x950]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x8d8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x8dc], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x8e0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~dword ptr [rsp + 0x8e4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400d71>']}, {'block_Idx': 76, 'blockInsts': ['<jmp~~0x401587>']}, {'block_Idx': 50, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x960]>', '<mov~~rax, qword ptr [rsp + 0x860]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rsi, qword ptr [rsp + 0x838]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x808], esi>', '<cmp~~esi, 0x10>', '<setg~~r8b>', '<mov~~byte ptr [rsp + 0x80f], r8b>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x810], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r9d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r9d>', '<mov~~r9d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r9d, r11d>', '<and~~r8b, 1>', '<movzx~~r8d, r8b>', '<mov~~dword ptr [rdi + 0x58], r10d>', '<sub~~r9d, esi>', '<mov~~r10, rdi>', '<mov~~qword ptr [rsp + 0x818], r10>', '<mov~~r10, rdx>', '<add~~r10, 0x48>', '<mov~~qword ptr [rsp + 0x820], r10>', '<mov~~dword ptr [rdx + 0x48], r9d>', '<mov~~r9, rdx>', '<add~~r9, 0x4c>', '<mov~~qword ptr [rsp + 0x828], r9>', '<mov~~dword ptr [rdx + 0x4c], r8d>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x830], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x4013ea>']}], 'cfg_edge_info': [(45, 19), (20, 29), (29, 41), (57, 63), (11, 14), (111, 101), (210, 217), (226, 213), (205, 212), (140, 149), (6, 11), (88, 90), (217, 189), (34, 6), (185, 190), (213, 220), (64, 71), (50, 57), (108, 111), (45, 18), (171, 185), (3, 6), (116, 121), (142, 140), (103, 105), (14, 21), (216, 223), (75, 71), (210, 216), (91, 94), (94, 90), (213, 221), (226, 212), (212, 219), (36, 45), (184, 188), (71, 76), (6, 10), (32, 29), (121, 101), (185, 189), (128, 140), (171, 184), (29, 42), (86, 88), (14, 20), (217, 224), (10, 13), (57, 64), (140, 150), (205, 213), (71, 75), (105, 101)]}]}
{'flac_decode_frame': [4196984, 4197217, 4197385, 4198689, 4198980, 4199402, 4199662, 4199917, 4200000, 4200453, 4200533, 4200604, 4201356, 4201995, 4202050, 4202457, 4202512, 4203044, 4203099]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/O3/flacdec.o---before
The extraction of function: flac_decode_frame
[4196984, 4197217, 4197385, 4198689, 4198980, 4199402, 4199662, 4199917, 4200000, 4200453, 4200533, 4200604, 4201356, 4201995, 4202050, 4202457, 4202512, 4203044, 4203099]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 527 nodes and 815 edges in CFGEmulated.
It has 527 nodes and 865 edges in CDG.
It has 21430 nodes and 53022 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4196984, 4197217, 4197385, 4198689, 4198980, 4199402, 4199662, 4199917, 4200000, 4200453, 4200533, 4200604, 4201356, 4201995, 4202050, 4202457, 4202512, 4203044, 4203099]
{4200448, 4196356, 4200453, 4196870, 4198406, 4206086, 4197385, 4201995, 4197899, 4204043, 4202512, 4208144, 4206611, 4198932, 4205589, 4198429, 4205598, 4203555, 4203044, 4205603, 4207663, 4201009, 4197938, 4201523, 4207157, 4196408, 4198457, 4210236, 4205630, 4198975, 4200000, 4206656, 4202050, 4205635, 4198980, 4209735, 4206158, 4200533, 4203099, 4198500, 4203621, 4209252, 4204133, 4208744, 4201067, 4197996, 4208235, 4204656, 4208756, 4204149, 4196984, 4210299, 4196477, 4205693, 4195968, 4199554, 4206724, 4199047, 4205192, 4198026, 4198545, 4200083, 4208789, 4207259, 4200604, 4199069, 4202652, 4206748, 4209825, 4198052, 4201127, 4199084, 4203695, 4206770, 4207798, 4210362, 4199611, 4200124, 4203711, 4209344, 4201153, 4201155, 4201670, 4196555, 4198092, 4209356, 4199118, 4202190, 4204242, 4207318, 4206295, 4198615, 4201184, 4201186, 4206307, 4200678, 4203239, 4205803, 4200173, 4199662, 4197615, 4196590, 4210417, 4199153, 4196083, 4206320, 4209389, 4199158, 4208373, 4202745, 4197626, 4198138, 4201724, 4201213, 4209917, 4207874, 4200709, 4209929, 4200714, 4202253, 4208910, 4200212, 4210453, 4206359, 4200217, 4204318, 4198689, 4196138, 4201771, 4209962, 4203821, 4204334, 4202800, 4200755, 4202292, 4198198, 4205879, 4206902, 4203322, 4210494, 4202819, 4201796, 4198215, 4201801, 4201812, 4207956, 4201814, 4197217, 4206433, 4198241, 4209510, 4199784, 4210536, 4199786, 4201832, 4201324, 4200297, 4205931, 4197745, 4202354, 4203377, 4200820, 4196725, 4200309, 4202359, 4201849, 4196221, 4204413, 4198272, 4197761, 4200832, 4199815, 4201351, 4198794, 4202891, 4201356, 4204938, 4198286, 4203407, 4206478, 4197777, 4210065, 4210584, 4203416, 4200346, 4203418, 4198300, 4209051, 4199839, 4200866, 4196771, 4199844, 4197794, 4200358, 4200871, 4198312, 4203946, 4208044, 4199855, 4199857, 4203443, 4204470, 4196279, 4203452, 4198333, 4199869, 4199871, 4198848, 4205502, 4198850, 4202946, 4203457, 4206533, 4201927, 4206023, 4199883, 4199373, 4210639, 4199888, 4207055, 4200404, 4197846, 4202457, 4196316, 4198365, 4208604, 4200416, 4205536, 4200418, 4199397, 4205541, 4199912, 4199402, 4203498, 4197868, 4199917, 4200430, 4209646, 4200432, 4205553, 4198899, 4198901, 4206583, 4210168, 4209151}
[213, 33, 289, 105, 193, 196, 84, 337, 355, 423, 86, 55, 406, 119, 36, 263, 154, 164, 174, 152, 228, 120, 248, 95, 31, 18, 158, 175, 129, 150, 74, 347, 161, 53, 20, 390, 2, 85, 22, 173, 7, 139, 176, 217, 262, 35, 379, 11, 106, 216, 198, 336, 135, 168, 60, 223, 243, 47, 187, 180, 142, 124, 219, 162, 1, 91, 113, 99, 407, 221, 43, 37, 247, 389, 320, 57, 61, 170, 362, 101, 227, 215, 211, 194, 111, 45, 167, 163, 92, 201, 48, 258, 80, 146, 205, 42, 365, 149, 178, 230, 235, 208, 143, 250, 128, 98, 254, 13, 364, 218, 157, 46, 166, 65, 202, 17, 255, 16, 38, 395, 8, 269, 463, 363, 274, 207, 226, 192, 241, 73, 21, 6, 15, 71, 404, 181, 382, 104, 183, 268, 348, 109, 378, 44, 52, 144, 189, 220, 229, 393, 416, 88, 30, 240, 4, 298, 27, 34, 87, 127, 185, 63, 206, 361, 245, 39, 259, 392, 209, 136, 66, 41, 102, 40, 318, 380, 130, 141, 238, 233, 249, 325, 405, 190, 204, 203, 165, 403, 179, 224, 126, 237, 415, 408, 62, 236, 118, 197, 24, 0, 155, 231, 184, 148, 200, 239, 169, 160, 156, 147, 50, 252, 172, 115, 251, 394, 131, 133, 177, 225, 123, 145, 242, 417, 383, 116, 114, 212, 441, 265, 195, 117, 14, 107, 9, 78, 32, 97, 134, 70, 51, 310, 264, 25, 171, 67, 23, 56, 246, 381, 12, 210, 244, 391, 257, 232, 222, 5, 10, 79, 138, 444, 377, 442, 234, 349, 199, 121, 59]
The execution time of patched slicing information extraction via angr: 0:04:01.018695
{'flac_decode_frame': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 213, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401d54>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401244>, <DisassemblerInsn "mov" for 0x40124c>, <DisassemblerInsn "mov" for 0x401253>, <DisassemblerInsn "mov" for 0x40125a>, <DisassemblerInsn "mov" for 0x401261>, <DisassemblerInsn "mov" for 0x401268>, <DisassemblerInsn "shl" for 0x40126f>, <DisassemblerInsn "shr" for 0x401272>, <DisassemblerInsn "mov" for 0x401275>, <DisassemblerInsn "mov" for 0x40127c>, <DisassemblerInsn "cmp" for 0x401282>, <DisassemblerInsn "jne" for 0x401285>]'}, {'block_Idx': 289, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x4023b3>, <DisassemblerInsn "jl" for 0x4023b6>]'}, {'block_Idx': 105, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016ed>, <DisassemblerInsn "mov" for 0x4016f5>, <DisassemblerInsn "mov" for 0x4016fc>, <DisassemblerInsn "xor" for 0x401704>, <DisassemblerInsn "lea" for 0x401706>, <DisassemblerInsn "mov" for 0x40170d>, <DisassemblerInsn "call" for 0x40170f>]'}, {'block_Idx': 193, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x403863>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403d91>, <DisassemblerInsn "mov" for 0x403d99>, <DisassemblerInsn "mov" for 0x403da1>, <DisassemblerInsn "mov" for 0x403da6>, <DisassemblerInsn "mov" for 0x403dab>, <DisassemblerInsn "mov" for 0x403db0>, <DisassemblerInsn "mov" for 0x403db5>, <DisassemblerInsn "mov" for 0x403dba>, <DisassemblerInsn "mov" for 0x403dbf>, <DisassemblerInsn "mov" for 0x403dc4>, <DisassemblerInsn "mov" for 0x403dc9>, <DisassemblerInsn "mov" for 0x403dce>, <DisassemblerInsn "mov" for 0x403dd3>, <DisassemblerInsn "mov" for 0x403dd6>, <DisassemblerInsn "mov" for 0x403dd9>, <DisassemblerInsn "mov" for 0x403ddb>, <DisassemblerInsn "sar" for 0x403ddd>, <DisassemblerInsn "sub" for 0x403ddf>, <DisassemblerInsn "mov" for 0x403de1>, <DisassemblerInsn "add" for 0x403de5>, <DisassemblerInsn "mov" for 0x403de7>, <DisassemblerInsn "mov" for 0x403de9>, <DisassemblerInsn "shl" for 0x403ded>, <DisassemblerInsn "mov" for 0x403def>, <DisassemblerInsn "cmp" for 0x403df3>, <DisassemblerInsn "je" for 0x403df6>]'}, {'block_Idx': 84, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40159f>]'}, {'block_Idx': 337, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023ea>, <DisassemblerInsn "mov" for 0x4023f1>, <DisassemblerInsn "mov" for 0x4023f8>, <DisassemblerInsn "mov" for 0x402400>, <DisassemblerInsn "add" for 0x402402>, <DisassemblerInsn "mov" for 0x402405>, <DisassemblerInsn "mov" for 0x402407>, <DisassemblerInsn "mov" for 0x40240a>, <DisassemblerInsn "sub" for 0x402411>, <DisassemblerInsn "mov" for 0x402413>, <DisassemblerInsn "cmp" for 0x40241a>, <DisassemblerInsn "jbe" for 0x40241d>]'}, {'block_Idx': 355, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40599d>, <DisassemblerInsn "add" for 0x4059a4>, <DisassemblerInsn "pop" for 0x4059ab>, <DisassemblerInsn "ret" for 0x4059ac>]'}, {'block_Idx': 423, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402bb9>]'}, {'block_Idx': 86, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014bb>, <DisassemblerInsn "mov" for 0x4014c3>, <DisassemblerInsn "mov" for 0x4014cb>, <DisassemblerInsn "mov" for 0x4014d2>, <DisassemblerInsn "mov" for 0x4014d9>, <DisassemblerInsn "mov" for 0x4014e1>, <DisassemblerInsn "cmp" for 0x4014e9>, <DisassemblerInsn "jle" for 0x4014ec>]'}, {'block_Idx': 55, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012f6>, <DisassemblerInsn "mov" for 0x4012fe>, <DisassemblerInsn "mov" for 0x401306>, <DisassemblerInsn "mov" for 0x40130e>, <DisassemblerInsn "mov" for 0x401316>, <DisassemblerInsn "mov" for 0x401318>, <DisassemblerInsn "cmp" for 0x40131f>, <DisassemblerInsn "setg" for 0x401322>, <DisassemblerInsn "mov" for 0x401326>, <DisassemblerInsn "mov" for 0x40132e>, <DisassemblerInsn "add" for 0x401331>, <DisassemblerInsn "mov" for 0x401335>, <DisassemblerInsn "mov" for 0x40133d>, <DisassemblerInsn "mov" for 0x401341>, <DisassemblerInsn "mov" for 0x401347>, <DisassemblerInsn "cmp" for 0x40134d>, <DisassemblerInsn "cmovg" for 0x401350>, <DisassemblerInsn "mov" for 0x401354>, <DisassemblerInsn "mov" for 0x40135a>, <DisassemblerInsn "cmp" for 0x401360>, <DisassemblerInsn "cmovg" for 0x401363>, <DisassemblerInsn "and" for 0x401367>, <DisassemblerInsn "movzx" for 0x40136b>, <DisassemblerInsn "mov" for 0x40136f>, <DisassemblerInsn "sub" for 0x401373>, <DisassemblerInsn "mov" for 0x401376>, <DisassemblerInsn "mov" for 0x401379>, <DisassemblerInsn "mov" for 0x401381>, <DisassemblerInsn "add" for 0x401384>, <DisassemblerInsn "mov" for 0x401388>, <DisassemblerInsn "mov" for 0x401390>, <DisassemblerInsn "mov" for 0x401394>, <DisassemblerInsn "add" for 0x401397>, <DisassemblerInsn "mov" for 0x40139b>, <DisassemblerInsn "mov" for 0x4013a3>, <DisassemblerInsn "mov" for 0x4013a7>, <DisassemblerInsn "mov" for 0x4013ad>, <DisassemblerInsn "add" for 0x4013b0>, <DisassemblerInsn "mov" for 0x4013b4>, <DisassemblerInsn "mov" for 0x4013bc>, <DisassemblerInsn "mov" for 0x4013bf>, <DisassemblerInsn "mov" for 0x4013c1>, <DisassemblerInsn "and" for 0x4013c7>, <DisassemblerInsn "cmp" for 0x4013c9>, <DisassemblerInsn "je" for 0x4013cb>]'}, {'block_Idx': 406, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d6b>, <DisassemblerInsn "mov" for 0x402d73>, <DisassemblerInsn "mov" for 0x402d7b>, <DisassemblerInsn "mov" for 0x402d82>, <DisassemblerInsn "mov" for 0x402d89>, <DisassemblerInsn "mov" for 0x402d90>, <DisassemblerInsn "mov" for 0x402d98>, <DisassemblerInsn "mov" for 0x402da0>, <DisassemblerInsn "mov" for 0x402da7>, <DisassemblerInsn "mov" for 0x402dae>, <DisassemblerInsn "mov" for 0x402db5>, <DisassemblerInsn "cmp" for 0x402dbd>, <DisassemblerInsn "je" for 0x402dc1>]'}, {'block_Idx': 119, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017d4>, <DisassemblerInsn "sub" for 0x4017db>, <DisassemblerInsn "je" for 0x4017de>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011f5>, <DisassemblerInsn "add" for 0x4011fc>, <DisassemblerInsn "mov" for 0x4011ff>, <DisassemblerInsn "mov" for 0x401204>, <DisassemblerInsn "mov" for 0x40120b>, <DisassemblerInsn "jmp" for 0x401212>]'}, {'block_Idx': 263, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402371>, <DisassemblerInsn "mov" for 0x402378>, <DisassemblerInsn "mov" for 0x402380>, <DisassemblerInsn "mov" for 0x402388>, <DisassemblerInsn "call" for 0x40238a>]'}, {'block_Idx': 154, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403084>, <DisassemblerInsn "lea" for 0x40308c>, <DisassemblerInsn "movsxd" for 0x403093>, <DisassemblerInsn "add" for 0x403097>, <DisassemblerInsn "jmp" for 0x40309a>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403ac0>, <DisassemblerInsn "cmp" for 0x403ac7>, <DisassemblerInsn "jne" for 0x403aca>]'}, {'block_Idx': 174, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403d09>, <DisassemblerInsn "mov" for 0x403d11>, <DisassemblerInsn "mov" for 0x403d13>, <DisassemblerInsn "cmp" for 0x403d1a>, <DisassemblerInsn "mov" for 0x403d1d>, <DisassemblerInsn "jle" for 0x403d24>]'}, {'block_Idx': 152, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018e6>, <DisassemblerInsn "mov" for 0x4018ed>, <DisassemblerInsn "xor" for 0x4018f5>, <DisassemblerInsn "lea" for 0x4018f7>, <DisassemblerInsn "mov" for 0x4018fe>, <DisassemblerInsn "call" for 0x401900>]'}, {'block_Idx': 228, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401d44>]'}, {'block_Idx': 120, 'blockInsts': '[<DisassemblerInsn "lea" for 0x400dec>, <DisassemblerInsn "lea" for 0x400df3>, <DisassemblerInsn "mov" for 0x400dfa>, <DisassemblerInsn "lea" for 0x400dff>, <DisassemblerInsn "call" for 0x400e06>]'}, {'block_Idx': 248, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c23>, <DisassemblerInsn "mov" for 0x402c2b>, <DisassemblerInsn "xor" for 0x402c2e>, <DisassemblerInsn "lea" for 0x402c30>, <DisassemblerInsn "mov" for 0x402c37>, <DisassemblerInsn "call" for 0x402c39>]'}, {'block_Idx': 95, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015b1>, <DisassemblerInsn "sub" for 0x4015b8>, <DisassemblerInsn "je" for 0x4015bb>]'}, {'block_Idx': 31, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d81>, <DisassemblerInsn "cmp" for 0x400d88>, <DisassemblerInsn "jne" for 0x400d8b>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40101d>, <DisassemblerInsn "mov" for 0x401025>, <DisassemblerInsn "xor" for 0x401029>, <DisassemblerInsn "lea" for 0x40102b>, <DisassemblerInsn "mov" for 0x401032>, <DisassemblerInsn "call" for 0x401034>]'}, {'block_Idx': 158, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4019a2>]'}, {'block_Idx': 175, 'blockInsts': '[<DisassemblerInsn "lea" for 0x403d72>, <DisassemblerInsn "lea" for 0x403d79>, <DisassemblerInsn "mov" for 0x403d80>, <DisassemblerInsn "lea" for 0x403d85>, <DisassemblerInsn "call" for 0x403d8c>]'}, {'block_Idx': 129, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017e2>, <DisassemblerInsn "sub" for 0x4017e9>, <DisassemblerInsn "je" for 0x4017ec>]'}, {'block_Idx': 150, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a31>, <DisassemblerInsn "mov" for 0x401a38>, <DisassemblerInsn "mov" for 0x401a3f>, <DisassemblerInsn "add" for 0x401a47>, <DisassemblerInsn "mov" for 0x401a4b>, <DisassemblerInsn "xor" for 0x401a53>, <DisassemblerInsn "mov" for 0x401a55>, <DisassemblerInsn "mov" for 0x401a5c>, <DisassemblerInsn "mov" for 0x401a63>, <DisassemblerInsn "mov" for 0x401a6b>, <DisassemblerInsn "mov" for 0x401a73>, <DisassemblerInsn "mov" for 0x401a7a>, <DisassemblerInsn "mov" for 0x401a81>, <DisassemblerInsn "mov" for 0x401a89>, <DisassemblerInsn "mov" for 0x401a91>, <DisassemblerInsn "mov" for 0x401a98>, <DisassemblerInsn "mov" for 0x401a9f>, <DisassemblerInsn "cmp" for 0x401aa1>, <DisassemblerInsn "jne" for 0x401aa5>]'}, {'block_Idx': 74, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ff7>, <DisassemblerInsn "mov" for 0x402fff>, <DisassemblerInsn "xor" for 0x403003>, <DisassemblerInsn "lea" for 0x403005>, <DisassemblerInsn "mov" for 0x40300c>, <DisassemblerInsn "call" for 0x40300e>]'}, {'block_Idx': 347, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40272e>, <DisassemblerInsn "mov" for 0x402735>, <DisassemblerInsn "mov" for 0x40273c>, <DisassemblerInsn "mov" for 0x40273e>, <DisassemblerInsn "mov" for 0x402740>, <DisassemblerInsn "add" for 0x402743>, <DisassemblerInsn "mov" for 0x402747>, <DisassemblerInsn "add" for 0x40274f>, <DisassemblerInsn "and" for 0x402753>, <DisassemblerInsn "mov" for 0x402757>, <DisassemblerInsn "mov" for 0x40275f>, <DisassemblerInsn "cmp" for 0x402764>, <DisassemblerInsn "mov" for 0x402768>, <DisassemblerInsn "mov" for 0x402770>, <DisassemblerInsn "jb" for 0x402777>]'}, {'block_Idx': 161, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403868>, <DisassemblerInsn "cmp" for 0x40386f>, <DisassemblerInsn "jne" for 0x403872>]'}, {'block_Idx': 53, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403f98>, <DisassemblerInsn "mov" for 0x403f9f>, <DisassemblerInsn "mov" for 0x403fa3>, <DisassemblerInsn "mov" for 0x403fa7>, <DisassemblerInsn "mov" for 0x403fab>, <DisassemblerInsn "mov" for 0x403fb3>, <DisassemblerInsn "add" for 0x403fb6>, <DisassemblerInsn "mov" for 0x403fbd>, <DisassemblerInsn "sub" for 0x403fc4>, <DisassemblerInsn "mov" for 0x403fc6>, <DisassemblerInsn "mov" for 0x403fc8>, <DisassemblerInsn "mov" for 0x403fcf>, <DisassemblerInsn "add" for 0x403fd6>, <DisassemblerInsn "pop" for 0x403fdd>, <DisassemblerInsn "ret" for 0x403fde>]'}, {'block_Idx': 20, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009cb>, <DisassemblerInsn "mov" for 0x4009d2>, <DisassemblerInsn "mov" for 0x4009da>, <DisassemblerInsn "mov" for 0x4009e2>, <DisassemblerInsn "mov" for 0x4009e9>, <DisassemblerInsn "mov" for 0x4009f0>, <DisassemblerInsn "add" for 0x4009f7>, <DisassemblerInsn "mov" for 0x4009f9>, <DisassemblerInsn "add" for 0x4009fb>, <DisassemblerInsn "movsxd" for 0x4009fe>, <DisassemblerInsn "call" for 0x400a01>]'}, {'block_Idx': 390, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4027b6>, <DisassemblerInsn "mov" for 0x4027be>, <DisassemblerInsn "mov" for 0x4027c5>, <DisassemblerInsn "mov" for 0x4027cd>, <DisassemblerInsn "mov" for 0x4027d5>, <DisassemblerInsn "mov" for 0x4027dd>, <DisassemblerInsn "add" for 0x4027e5>, <DisassemblerInsn "mov" for 0x4027e8>, <DisassemblerInsn "mov" for 0x4027ef>, <DisassemblerInsn "add" for 0x4027f2>, <DisassemblerInsn "mov" for 0x4027f6>, <DisassemblerInsn "mov" for 0x4027fd>, <DisassemblerInsn "add" for 0x402801>, <DisassemblerInsn "mov" for 0x402805>, <DisassemblerInsn "mov" for 0x40280c>, <DisassemblerInsn "add" for 0x402810>, <DisassemblerInsn "mov" for 0x402814>, <DisassemblerInsn "mov" for 0x40281b>, <DisassemblerInsn "add" for 0x40281f>, <DisassemblerInsn "mov" for 0x402823>, <DisassemblerInsn "add" for 0x40282b>, <DisassemblerInsn "mov" for 0x40282f>, <DisassemblerInsn "cmp" for 0x402837>, <DisassemblerInsn "mov" for 0x40283a>, <DisassemblerInsn "mov" for 0x40283d>, <DisassemblerInsn "mov" for 0x402845>, <DisassemblerInsn "mov" for 0x402847>, <DisassemblerInsn "mov" for 0x40284e>, <DisassemblerInsn "mov" for 0x402856>, <DisassemblerInsn "mov" for 0x40285e>, <DisassemblerInsn "je" for 0x402865>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40077d>, <DisassemblerInsn "mov" for 0x400785>, <DisassemblerInsn "mov" for 0x40078c>, <DisassemblerInsn "mov" for 0x400793>, <DisassemblerInsn "add" for 0x400796>, <DisassemblerInsn "mov" for 0x40079d>, <DisassemblerInsn "mov" for 0x4007a5>, <DisassemblerInsn "mov" for 0x4007ab>, <DisassemblerInsn "cmp" for 0x4007b2>, <DisassemblerInsn "jb" for 0x4007b5>]'}, {'block_Idx': 85, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015a4>, <DisassemblerInsn "test" for 0x4015ab>, <DisassemblerInsn "je" for 0x4015ad>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d71>, <DisassemblerInsn "cmp" for 0x400d78>, <DisassemblerInsn "je" for 0x400d7b>]'}, {'block_Idx': 173, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403136>, <DisassemblerInsn "mov" for 0x40313e>, <DisassemblerInsn "mov" for 0x403145>, <DisassemblerInsn "mov" for 0x40314c>, <DisassemblerInsn "mov" for 0x403153>, <DisassemblerInsn "mov" for 0x40315b>, <DisassemblerInsn "mov" for 0x403163>, <DisassemblerInsn "mov" for 0x40316b>, <DisassemblerInsn "mov" for 0x403173>, <DisassemblerInsn "mov" for 0x40317b>, <DisassemblerInsn "mov" for 0x403183>, <DisassemblerInsn "mov" for 0x40318a>, <DisassemblerInsn "mov" for 0x403191>, <DisassemblerInsn "cmp" for 0x403199>, <DisassemblerInsn "mov" for 0x40319c>, <DisassemblerInsn "mov" for 0x4031a4>, <DisassemblerInsn "mov" for 0x4031ab>, <DisassemblerInsn "mov" for 0x4031b2>, <DisassemblerInsn "mov" for 0x4031b9>, <DisassemblerInsn "mov" for 0x4031c1>, <DisassemblerInsn "jle" for 0x4031c9>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403fcf>, <DisassemblerInsn "add" for 0x403fd6>, <DisassemblerInsn "pop" for 0x403fdd>, <DisassemblerInsn "ret" for 0x403fde>]'}, {'block_Idx': 139, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017f0>, <DisassemblerInsn "sub" for 0x4017f7>, <DisassemblerInsn "je" for 0x4017fa>]'}, {'block_Idx': 176, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403acc>, <DisassemblerInsn "mov" for 0x403ad4>, <DisassemblerInsn "mov" for 0x403ad6>, <DisassemblerInsn "cmp" for 0x403add>, <DisassemblerInsn "mov" for 0x403ae0>, <DisassemblerInsn "jle" for 0x403ae7>]'}, {'block_Idx': 217, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4036f5>, <DisassemblerInsn "mov" for 0x4036fd>, <DisassemblerInsn "mov" for 0x403704>, <DisassemblerInsn "mov" for 0x40370b>, <DisassemblerInsn "mov" for 0x403713>, <DisassemblerInsn "mov" for 0x40371b>, <DisassemblerInsn "mov" for 0x403723>, <DisassemblerInsn "mov" for 0x40372b>, <DisassemblerInsn "mov" for 0x403732>, <DisassemblerInsn "mov" for 0x40373a>, <DisassemblerInsn "mov" for 0x403742>, <DisassemblerInsn "mov" for 0x403747>, <DisassemblerInsn "shl" for 0x40374b>, <DisassemblerInsn "mov" for 0x40374e>, <DisassemblerInsn "mov" for 0x403756>, <DisassemblerInsn "mov" for 0x403759>, <DisassemblerInsn "mov" for 0x40375d>, <DisassemblerInsn "add" for 0x403760>, <DisassemblerInsn "mov" for 0x403764>, <DisassemblerInsn "mov" for 0x40376c>, <DisassemblerInsn "add" for 0x403770>, <DisassemblerInsn "mov" for 0x403774>, <DisassemblerInsn "add" for 0x40377c>, <DisassemblerInsn "mov" for 0x403780>, <DisassemblerInsn "cmp" for 0x403788>, <DisassemblerInsn "mov" for 0x40378b>, <DisassemblerInsn "mov" for 0x403793>, <DisassemblerInsn "mov" for 0x403796>, <DisassemblerInsn "mov" for 0x40379e>, <DisassemblerInsn "mov" for 0x4037a6>, <DisassemblerInsn "mov" for 0x4037ad>, <DisassemblerInsn "mov" for 0x4037af>, <DisassemblerInsn "mov" for 0x4037b6>, <DisassemblerInsn "mov" for 0x4037b8>, <DisassemblerInsn "mov" for 0x4037bf>, <DisassemblerInsn "mov" for 0x4037c6>, <DisassemblerInsn "mov" for 0x4037ce>, <DisassemblerInsn "jne" for 0x4037d6>]'}, {'block_Idx': 262, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022e7>, <DisassemblerInsn "mov" for 0x4022ef>, <DisassemblerInsn "mov" for 0x4022f7>, <DisassemblerInsn "mov" for 0x4022fe>, <DisassemblerInsn "mov" for 0x402305>, <DisassemblerInsn "sub" for 0x40230a>, <DisassemblerInsn "mov" for 0x40230c>, <DisassemblerInsn "shl" for 0x402313>, <DisassemblerInsn "mov" for 0x402315>, <DisassemblerInsn "sar" for 0x40231c>, <DisassemblerInsn "mov" for 0x40231e>, <DisassemblerInsn "mov" for 0x402326>, <DisassemblerInsn "add" for 0x402329>, <DisassemblerInsn "mov" for 0x40232d>, <DisassemblerInsn "cmp" for 0x402335>, <DisassemblerInsn "je" for 0x402338>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4011f3>]'}, {'block_Idx': 379, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402e06>, <DisassemblerInsn "mov" for 0x402e0e>, <DisassemblerInsn "mov" for 0x402e16>, <DisassemblerInsn "mov" for 0x402e1d>, <DisassemblerInsn "xor" for 0x402e24>, <DisassemblerInsn "cmp" for 0x402e26>, <DisassemblerInsn "mov" for 0x402e2a>, <DisassemblerInsn "mov" for 0x402e32>, <DisassemblerInsn "mov" for 0x402e39>, <DisassemblerInsn "mov" for 0x402e40>, <DisassemblerInsn "je" for 0x402e48>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40087d>, <DisassemblerInsn "mov" for 0x400884>, <DisassemblerInsn "mov" for 0x40088b>, <DisassemblerInsn "mov" for 0x400892>, <DisassemblerInsn "mov" for 0x40089a>, <DisassemblerInsn "add" for 0x40089d>, <DisassemblerInsn "mov" for 0x4008a4>, <DisassemblerInsn "mov" for 0x4008ac>, <DisassemblerInsn "cmp" for 0x4008b2>, <DisassemblerInsn "mov" for 0x4008b4>, <DisassemblerInsn "mov" for 0x4008bb>, <DisassemblerInsn "mov" for 0x4008c2>, <DisassemblerInsn "jae" for 0x4008c9>]'}, {'block_Idx': 106, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401640>, <DisassemblerInsn "mov" for 0x401648>, <DisassemblerInsn "mov" for 0x40164f>, <DisassemblerInsn "mov" for 0x401657>, <DisassemblerInsn "shr" for 0x40165f>, <DisassemblerInsn "and" for 0x401663>, <DisassemblerInsn "mov" for 0x40166a>, <DisassemblerInsn "ror" for 0x40166d>, <DisassemblerInsn "ror" for 0x401671>, <DisassemblerInsn "ror" for 0x401674>, <DisassemblerInsn "shr" for 0x401678>, <DisassemblerInsn "add" for 0x40167b>, <DisassemblerInsn "mov" for 0x40167e>, <DisassemblerInsn "add" for 0x401680>, <DisassemblerInsn "mov" for 0x401683>, <DisassemblerInsn "mov" for 0x40168a>, <DisassemblerInsn "jmp" for 0x401691>]'}, {'block_Idx': 216, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403a64>, <DisassemblerInsn "mov" for 0x403a6c>, <DisassemblerInsn "mov" for 0x403a73>, <DisassemblerInsn "mov" for 0x403a7b>, <DisassemblerInsn "add" for 0x403a83>, <DisassemblerInsn "movsxd" for 0x403a87>, <DisassemblerInsn "cmp" for 0x403a8a>, <DisassemblerInsn "mov" for 0x403a8d>, <DisassemblerInsn "mov" for 0x403a8f>, <DisassemblerInsn "mov" for 0x403a96>, <DisassemblerInsn "mov" for 0x403a9e>, <DisassemblerInsn "mov" for 0x403aa6>, <DisassemblerInsn "mov" for 0x403aae>, <DisassemblerInsn "jl" for 0x403ab5>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d49>, <DisassemblerInsn "test" for 0x401d50>, <DisassemblerInsn "je" for 0x401d52>]'}, {'block_Idx': 336, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40271e>, <DisassemblerInsn "cmp" for 0x402725>, <DisassemblerInsn "jle" for 0x402728>]'}, {'block_Idx': 135, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f61>, <DisassemblerInsn "mov" for 0x400f69>, <DisassemblerInsn "mov" for 0x400f70>, <DisassemblerInsn "mov" for 0x400f78>, <DisassemblerInsn "call" for 0x400f7b>]'}, {'block_Idx': 168, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401ae0>]'}, {'block_Idx': 60, 'blockInsts': '[<DisassemblerInsn "sub" for 0x400110>, <DisassemblerInsn "mov" for 0x400114>, <DisassemblerInsn "mov" for 0x400119>, <DisassemblerInsn "mov" for 0x40011e>, <DisassemblerInsn "mov" for 0x400123>, <DisassemblerInsn "ror" for 0x400126>, <DisassemblerInsn "ror" for 0x40012a>, <DisassemblerInsn "ror" for 0x40012d>, <DisassemblerInsn "shr" for 0x400131>, <DisassemblerInsn "mov" for 0x400134>, <DisassemblerInsn "mov" for 0x400138>, <DisassemblerInsn "cmp" for 0x40013a>, <DisassemblerInsn "jge" for 0x40013d>]'}, {'block_Idx': 223, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x403cf8>]'}, {'block_Idx': 243, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402fc5>, <DisassemblerInsn "mov" for 0x402fcc>, <DisassemblerInsn "mov" for 0x402fd4>, <DisassemblerInsn "mov" for 0x402fdc>, <DisassemblerInsn "mov" for 0x402fde>, <DisassemblerInsn "mov" for 0x402fe0>, <DisassemblerInsn "mov" for 0x402fe7>, <DisassemblerInsn "mov" for 0x402fee>, <DisassemblerInsn "jmp" for 0x402ff5>]'}, {'block_Idx': 47, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401214>, <DisassemblerInsn "mov" for 0x40121b>, <DisassemblerInsn "mov" for 0x401223>, <DisassemblerInsn "mov" for 0x40122b>, <DisassemblerInsn "xor" for 0x40122f>, <DisassemblerInsn "lea" for 0x401231>, <DisassemblerInsn "mov" for 0x401238>, <DisassemblerInsn "call" for 0x40123a>]'}, {'block_Idx': 187, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403aed>, <DisassemblerInsn "mov" for 0x403af5>, <DisassemblerInsn "mov" for 0x403afd>, <DisassemblerInsn "mov" for 0x403b04>, <DisassemblerInsn "mov" for 0x403b0c>, <DisassemblerInsn "mov" for 0x403b10>, <DisassemblerInsn "mov" for 0x403b18>, <DisassemblerInsn "mov" for 0x403b1c>, <DisassemblerInsn "xor" for 0x403b24>, <DisassemblerInsn "mov" for 0x403b26>, <DisassemblerInsn "mov" for 0x403b2d>, <DisassemblerInsn "mov" for 0x403b35>, <DisassemblerInsn "mov" for 0x403b3d>, <DisassemblerInsn "jmp" for 0x403b45>]'}, {'block_Idx': 180, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b6c>, <DisassemblerInsn "mov" for 0x401b74>, <DisassemblerInsn "xor" for 0x401b77>, <DisassemblerInsn "lea" for 0x401b79>, <DisassemblerInsn "mov" for 0x401b80>, <DisassemblerInsn "call" for 0x401b82>]'}, {'block_Idx': 142, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019a7>, <DisassemblerInsn "mov" for 0x4019ae>, <DisassemblerInsn "mov" for 0x4019b5>, <DisassemblerInsn "mov" for 0x4019bd>, <DisassemblerInsn "mov" for 0x4019c5>, <DisassemblerInsn "mov" for 0x4019cd>, <DisassemblerInsn "mov" for 0x4019d5>, <DisassemblerInsn "mov" for 0x4019dd>, <DisassemblerInsn "mov" for 0x4019e5>, <DisassemblerInsn "add" for 0x4019e8>, <DisassemblerInsn "mov" for 0x4019ec>, <DisassemblerInsn "mov" for 0x4019f4>, <DisassemblerInsn "mov" for 0x4019f8>, <DisassemblerInsn "mov" for 0x4019fc>, <DisassemblerInsn "mov" for 0x4019ff>, <DisassemblerInsn "add" for 0x401a02>, <DisassemblerInsn "mov" for 0x401a06>, <DisassemblerInsn "mov" for 0x401a0e>, <DisassemblerInsn "mov" for 0x401a11>, <DisassemblerInsn "cmp" for 0x401a13>, <DisassemblerInsn "mov" for 0x401a16>, <DisassemblerInsn "mov" for 0x401a1d>, <DisassemblerInsn "mov" for 0x401a24>, <DisassemblerInsn "jle" for 0x401a2b>]'}, {'block_Idx': 124, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4017e0>]'}, {'block_Idx': 219, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403554>, <DisassemblerInsn "mov" for 0x40355c>, <DisassemblerInsn "mov" for 0x403563>, <DisassemblerInsn "mov" for 0x40356a>, <DisassemblerInsn "mov" for 0x403572>, <DisassemblerInsn "mov" for 0x40357a>, <DisassemblerInsn "mov" for 0x403582>, <DisassemblerInsn "mov" for 0x40358a>, <DisassemblerInsn "mov" for 0x403591>, <DisassemblerInsn "add" for 0x403598>, <DisassemblerInsn "mov" for 0x40359c>, <DisassemblerInsn "movsxd" for 0x4035a4>, <DisassemblerInsn "cmp" for 0x4035a7>, <DisassemblerInsn "jge" for 0x4035aa>]'}, {'block_Idx': 162, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4030b2>, <DisassemblerInsn "mov" for 0x4030ba>, <DisassemblerInsn "mov" for 0x4030c2>, <DisassemblerInsn "mov" for 0x4030c9>, <DisassemblerInsn "mov" for 0x4030d1>, <DisassemblerInsn "test" for 0x4030d3>, <DisassemblerInsn "setg" for 0x4030d5>, <DisassemblerInsn "test" for 0x4030d9>, <DisassemblerInsn "setg" for 0x4030db>, <DisassemblerInsn "and" for 0x4030df>, <DisassemblerInsn "xor" for 0x4030e2>, <DisassemblerInsn "test" for 0x4030e4>, <DisassemblerInsn "mov" for 0x4030e8>, <DisassemblerInsn "mov" for 0x4030eb>, <DisassemblerInsn "mov" for 0x4030f3>, <DisassemblerInsn "mov" for 0x4030f6>, <DisassemblerInsn "mov" for 0x4030fe>, <DisassemblerInsn "mov" for 0x403101>, <DisassemblerInsn "mov" for 0x403109>, <DisassemblerInsn "mov" for 0x403110>, <DisassemblerInsn "mov" for 0x403118>, <DisassemblerInsn "mov" for 0x403120>, <DisassemblerInsn "mov" for 0x403128>, <DisassemblerInsn "jne" for 0x40312f>]'}, {'block_Idx': 1, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4006f3>, <DisassemblerInsn "mov" for 0x4006fa>, <DisassemblerInsn "mov" for 0x400702>, <DisassemblerInsn "mov" for 0x40070a>, <DisassemblerInsn "cmp" for 0x40070f>, <DisassemblerInsn "cmovg" for 0x400712>, <DisassemblerInsn "mov" for 0x400715>, <DisassemblerInsn "mov" for 0x400717>, <DisassemblerInsn "add" for 0x40071e>, <DisassemblerInsn "call" for 0x400725>]'}, {'block_Idx': 91, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015d0>, <DisassemblerInsn "xor" for 0x4015d8>, <DisassemblerInsn "lea" for 0x4015da>, <DisassemblerInsn "mov" for 0x4015e1>, <DisassemblerInsn "call" for 0x4015e3>]'}, {'block_Idx': 113, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401775>, <DisassemblerInsn "mov" for 0x40177c>, <DisassemblerInsn "mov" for 0x401784>, <DisassemblerInsn "mov" for 0x401787>, <DisassemblerInsn "mov" for 0x40178e>, <DisassemblerInsn "jmp" for 0x401795>]'}, {'block_Idx': 99, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4015bd>]'}, {'block_Idx': 407, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40252d>, <DisassemblerInsn "mov" for 0x402534>, <DisassemblerInsn "mov" for 0x40253b>, <DisassemblerInsn "mov" for 0x402542>, <DisassemblerInsn "mov" for 0x402549>, <DisassemblerInsn "add" for 0x402551>, <DisassemblerInsn "and" for 0x402555>, <DisassemblerInsn "mov" for 0x402559>, <DisassemblerInsn "mov" for 0x402561>, <DisassemblerInsn "xor" for 0x402567>, <DisassemblerInsn "mov" for 0x402569>, <DisassemblerInsn "mov" for 0x402571>, <DisassemblerInsn "mov" for 0x402578>, <DisassemblerInsn "mov" for 0x40257f>, <DisassemblerInsn "mov" for 0x402586>, <DisassemblerInsn "mov" for 0x40258d>, <DisassemblerInsn "jmp" for 0x402595>]'}, {'block_Idx': 221, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403610>, <DisassemblerInsn "mov" for 0x403618>, <DisassemblerInsn "mov" for 0x403620>, <DisassemblerInsn "mov" for 0x403627>, <DisassemblerInsn "mov" for 0x40362e>, <DisassemblerInsn "mov" for 0x403636>, <DisassemblerInsn "mov" for 0x403638>, <DisassemblerInsn "mov" for 0x40363f>, <DisassemblerInsn "mov" for 0x403646>, <DisassemblerInsn "mov" for 0x403648>, <DisassemblerInsn "mov" for 0x40364f>, <DisassemblerInsn "mov" for 0x403656>, <DisassemblerInsn "mov" for 0x40365e>, <DisassemblerInsn "jmp" for 0x403666>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403f68>, <DisassemblerInsn "mov" for 0x403f6c>, <DisassemblerInsn "mov" for 0x403f74>, <DisassemblerInsn "add" for 0x403f77>, <DisassemblerInsn "mov" for 0x403f7e>, <DisassemblerInsn "mov" for 0x403f82>, <DisassemblerInsn "mov" for 0x403f88>, <DisassemblerInsn "cmp" for 0x403f8c>, <DisassemblerInsn "mov" for 0x403f8f>, <DisassemblerInsn "je" for 0x403f96>]'}, {'block_Idx': 37, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401039>, <DisassemblerInsn "mov" for 0x401041>, <DisassemblerInsn "mov" for 0x401048>, <DisassemblerInsn "mov" for 0x40104a>, <DisassemblerInsn "mov" for 0x401051>, <DisassemblerInsn "cdq" for 0x401056>, <DisassemblerInsn "idiv" for 0x401057>, <DisassemblerInsn "add" for 0x401059>, <DisassemblerInsn "cmp" for 0x40105c>, <DisassemblerInsn "jge" for 0x40105e>]'}, {'block_Idx': 247, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40218b>, <DisassemblerInsn "mov" for 0x402192>, <DisassemblerInsn "mov" for 0x402199>, <DisassemblerInsn "mov" for 0x4021a0>, <DisassemblerInsn "mov" for 0x4021a2>, <DisassemblerInsn "xor" for 0x4021aa>, <DisassemblerInsn "mov" for 0x4021ac>, <DisassemblerInsn "mov" for 0x4021b3>, <DisassemblerInsn "mov" for 0x4021ba>, <DisassemblerInsn "mov" for 0x4021c2>, <DisassemblerInsn "mov" for 0x4021ca>, <DisassemblerInsn "mov" for 0x4021d1>, <DisassemblerInsn "mov" for 0x4021d8>, <DisassemblerInsn "mov" for 0x4021e0>, <DisassemblerInsn "mov" for 0x4021e8>, <DisassemblerInsn "mov" for 0x4021ef>, <DisassemblerInsn "mov" for 0x4021f6>, <DisassemblerInsn "sar" for 0x4021f8>, <DisassemblerInsn "movsxd" for 0x4021fb>, <DisassemblerInsn "mov" for 0x4021fe>, <DisassemblerInsn "ror" for 0x402201>, <DisassemblerInsn "ror" for 0x402205>, <DisassemblerInsn "ror" for 0x402208>, <DisassemblerInsn "and" for 0x40220c>, <DisassemblerInsn "mov" for 0x40220f>, <DisassemblerInsn "shl" for 0x402216>, <DisassemblerInsn "mov" for 0x402218>, <DisassemblerInsn "cmp" for 0x40221f>, <DisassemblerInsn "jge" for 0x402222>]'}, {'block_Idx': 389, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402ce9>]'}, {'block_Idx': 320, 'blockInsts': '[<DisassemblerInsn "push" for 0x404f60>, <DisassemblerInsn "sub" for 0x404f61>, <DisassemblerInsn "mov" for 0x404f68>, <DisassemblerInsn "mov" for 0x404f6f>, <DisassemblerInsn "mov" for 0x404f76>, <DisassemblerInsn "mov" for 0x404f7e>, <DisassemblerInsn "add" for 0x404f81>, <DisassemblerInsn "mov" for 0x404f85>, <DisassemblerInsn "mov" for 0x404f8d>, <DisassemblerInsn "mov" for 0x404f90>, <DisassemblerInsn "mov" for 0x404f97>, <DisassemblerInsn "mov" for 0x404f9b>, <DisassemblerInsn "mov" for 0x404fa3>, <DisassemblerInsn "sar" for 0x404fa5>, <DisassemblerInsn "movsxd" for 0x404fa8>, <DisassemblerInsn "mov" for 0x404fab>, <DisassemblerInsn "ror" for 0x404fae>, <DisassemblerInsn "ror" for 0x404fb2>, <DisassemblerInsn "ror" for 0x404fb5>, <DisassemblerInsn "and" for 0x404fb9>, <DisassemblerInsn "shl" for 0x404fbc>, <DisassemblerInsn "mov" for 0x404fbe>, <DisassemblerInsn "shr" for 0x404fc5>, <DisassemblerInsn "mov" for 0x404fc8>, <DisassemblerInsn "add" for 0x404fcf>, <DisassemblerInsn "mov" for 0x404fd2>, <DisassemblerInsn "mov" for 0x404fd9>, <DisassemblerInsn "cmp" for 0x404fdc>, <DisassemblerInsn "jle" for 0x404fdf>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012ac>, <DisassemblerInsn "movsxd" for 0x4012b3>, <DisassemblerInsn "lea" for 0x4012b6>, <DisassemblerInsn "shl" for 0x4012bd>, <DisassemblerInsn "add" for 0x4012c1>, <DisassemblerInsn "mov" for 0x4012c4>, <DisassemblerInsn "jmp" for 0x4012cc>]'}, {'block_Idx': 61, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403f3e>, <DisassemblerInsn "mov" for 0x403f46>, <DisassemblerInsn "mov" for 0x403f50>, <DisassemblerInsn "mov" for 0x403f5a>, <DisassemblerInsn "mov" for 0x403f5f>, <DisassemblerInsn "jmp" for 0x403f66>]'}, {'block_Idx': 170, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403874>, <DisassemblerInsn "mov" for 0x40387c>, <DisassemblerInsn "mov" for 0x40387e>, <DisassemblerInsn "cmp" for 0x403885>, <DisassemblerInsn "mov" for 0x403888>, <DisassemblerInsn "jle" for 0x40388f>]'}, {'block_Idx': 362, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40277d>, <DisassemblerInsn "mov" for 0x402784>, <DisassemblerInsn "and" for 0x40278c>, <DisassemblerInsn "mov" for 0x402790>, <DisassemblerInsn "mov" for 0x402798>, <DisassemblerInsn "xor" for 0x40279d>, <DisassemblerInsn "mov" for 0x40279f>, <DisassemblerInsn "mov" for 0x4027a7>, <DisassemblerInsn "mov" for 0x4027ae>, <DisassemblerInsn "mov" for 0x4027b6>, <DisassemblerInsn "mov" for 0x4027be>, <DisassemblerInsn "mov" for 0x4027c5>, <DisassemblerInsn "mov" for 0x4027cd>, <DisassemblerInsn "mov" for 0x4027d5>, <DisassemblerInsn "mov" for 0x4027dd>, <DisassemblerInsn "add" for 0x4027e5>, <DisassemblerInsn "mov" for 0x4027e8>, <DisassemblerInsn "mov" for 0x4027ef>, <DisassemblerInsn "add" for 0x4027f2>, <DisassemblerInsn "mov" for 0x4027f6>, <DisassemblerInsn "mov" for 0x4027fd>, <DisassemblerInsn "add" for 0x402801>, <DisassemblerInsn "mov" for 0x402805>, <DisassemblerInsn "mov" for 0x40280c>, <DisassemblerInsn "add" for 0x402810>, <DisassemblerInsn "mov" for 0x402814>, <DisassemblerInsn "mov" for 0x40281b>, <DisassemblerInsn "add" for 0x40281f>, <DisassemblerInsn "mov" for 0x402823>, <DisassemblerInsn "add" for 0x40282b>, <DisassemblerInsn "mov" for 0x40282f>, <DisassemblerInsn "cmp" for 0x402837>, <DisassemblerInsn "mov" for 0x40283a>, <DisassemblerInsn "mov" for 0x40283d>, <DisassemblerInsn "mov" for 0x402845>, <DisassemblerInsn "mov" for 0x402847>, <DisassemblerInsn "mov" for 0x40284e>, <DisassemblerInsn "mov" for 0x402856>, <DisassemblerInsn "mov" for 0x40285e>, <DisassemblerInsn "je" for 0x402865>]'}, {'block_Idx': 101, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4016bc>, <DisassemblerInsn "mov" for 0x4016c4>, <DisassemblerInsn "mov" for 0x4016cb>, <DisassemblerInsn "mov" for 0x4016d2>, <DisassemblerInsn "mov" for 0x4016d9>, <DisassemblerInsn "mov" for 0x4016e0>, <DisassemblerInsn "mov" for 0x4016e2>, <DisassemblerInsn "cmp" for 0x4016e9>, <DisassemblerInsn "jle" for 0x4016eb>]'}, {'block_Idx': 227, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d56>, <DisassemblerInsn "sub" for 0x401d5d>, <DisassemblerInsn "jne" for 0x401d60>]'}, {'block_Idx': 215, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x403abb>]'}, {'block_Idx': 211, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403bee>, <DisassemblerInsn "mov" for 0x403bf6>, <DisassemblerInsn "mov" for 0x403bfe>, <DisassemblerInsn "mov" for 0x403c05>, <DisassemblerInsn "mov" for 0x403c0d>, <DisassemblerInsn "mov" for 0x403c14>, <DisassemblerInsn "mov" for 0x403c16>, <DisassemblerInsn "shl" for 0x403c18>, <DisassemblerInsn "mov" for 0x403c1a>, <DisassemblerInsn "mov" for 0x403c22>, <DisassemblerInsn "add" for 0x403c25>, <DisassemblerInsn "mov" for 0x403c29>, <DisassemblerInsn "mov" for 0x403c2c>, <DisassemblerInsn "mov" for 0x403c2e>, <DisassemblerInsn "mov" for 0x403c35>, <DisassemblerInsn "mov" for 0x403c3d>, <DisassemblerInsn "jmp" for 0x403c45>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403235>, <DisassemblerInsn "mov" for 0x40323d>, <DisassemblerInsn "mov" for 0x403244>, <DisassemblerInsn "mov" for 0x40324c>, <DisassemblerInsn "mov" for 0x40324e>, <DisassemblerInsn "mov" for 0x403255>, <DisassemblerInsn "sub" for 0x403257>, <DisassemblerInsn "mov" for 0x40325a>, <DisassemblerInsn "cmovge" for 0x40325f>, <DisassemblerInsn "mov" for 0x403262>, <DisassemblerInsn "mov" for 0x403264>, <DisassemblerInsn "mov" for 0x40326c>, <DisassemblerInsn "add" for 0x40326f>, <DisassemblerInsn "and" for 0x403273>, <DisassemblerInsn "mov" for 0x403277>, <DisassemblerInsn "xor" for 0x40327f>, <DisassemblerInsn "cmp" for 0x403281>, <DisassemblerInsn "mov" for 0x403285>, <DisassemblerInsn "mov" for 0x40328d>, <DisassemblerInsn "jb" for 0x403295>]'}, {'block_Idx': 111, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401693>, <DisassemblerInsn "mov" for 0x40169a>, <DisassemblerInsn "movsxd" for 0x4016a1>, <DisassemblerInsn "lea" for 0x4016a4>, <DisassemblerInsn "mov" for 0x4016ab>, <DisassemblerInsn "mov" for 0x4016ae>, <DisassemblerInsn "mov" for 0x4016b5>, <DisassemblerInsn "mov" for 0x4016bc>, <DisassemblerInsn "mov" for 0x4016c4>, <DisassemblerInsn "mov" for 0x4016cb>, <DisassemblerInsn "mov" for 0x4016d2>, <DisassemblerInsn "mov" for 0x4016d9>, <DisassemblerInsn "mov" for 0x4016e0>, <DisassemblerInsn "mov" for 0x4016e2>, <DisassemblerInsn "cmp" for 0x4016e9>, <DisassemblerInsn "jle" for 0x4016eb>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401287>, <DisassemblerInsn "add" for 0x40128f>, <DisassemblerInsn "mov" for 0x401293>, <DisassemblerInsn "jmp" for 0x40129b>]'}, {'block_Idx': 167, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ae2>, <DisassemblerInsn "mov" for 0x401aea>, <DisassemblerInsn "add" for 0x401af1>, <DisassemblerInsn "mov" for 0x401af4>, <DisassemblerInsn "mov" for 0x401af6>, <DisassemblerInsn "mov" for 0x401afd>, <DisassemblerInsn "mov" for 0x401b05>, <DisassemblerInsn "mov" for 0x401b0d>, <DisassemblerInsn "mov" for 0x401b14>, <DisassemblerInsn "mov" for 0x401b1b>, <DisassemblerInsn "mov" for 0x401b1d>, <DisassemblerInsn "mov" for 0x401b24>, <DisassemblerInsn "mov" for 0x401b27>, <DisassemblerInsn "mov" for 0x401b2f>, <DisassemblerInsn "sar" for 0x401b31>, <DisassemblerInsn "movsxd" for 0x401b34>, <DisassemblerInsn "mov" for 0x401b37>, <DisassemblerInsn "mov" for 0x401b3b>, <DisassemblerInsn "and" for 0x401b3d>, <DisassemblerInsn "movzx" for 0x401b40>, <DisassemblerInsn "mov" for 0x401b44>, <DisassemblerInsn "add" for 0x401b4b>, <DisassemblerInsn "mov" for 0x401b4e>, <DisassemblerInsn "mov" for 0x401b55>, <DisassemblerInsn "mov" for 0x401b57>, <DisassemblerInsn "shr" for 0x401b5c>, <DisassemblerInsn "mov" for 0x401b5e>, <DisassemblerInsn "and" for 0x401b65>, <DisassemblerInsn "cmp" for 0x401b67>, <DisassemblerInsn "je" for 0x401b6a>]'}, {'block_Idx': 163, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403cfd>, <DisassemblerInsn "cmp" for 0x403d04>, <DisassemblerInsn "jne" for 0x403d07>]'}, {'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4015af>]'}, {'block_Idx': 201, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401b87>]'}, {'block_Idx': 48, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401064>, <DisassemblerInsn "mov" for 0x40106b>, <DisassemblerInsn "mov" for 0x401073>, <DisassemblerInsn "mov" for 0x401076>, <DisassemblerInsn "mov" for 0x40107e>, <DisassemblerInsn "and" for 0x401080>, <DisassemblerInsn "mov" for 0x401083>, <DisassemblerInsn "mov" for 0x40108a>, <DisassemblerInsn "mov" for 0x401091>, <DisassemblerInsn "mov" for 0x401098>, <DisassemblerInsn "mov" for 0x4010a0>, <DisassemblerInsn "mov" for 0x4010a7>, <DisassemblerInsn "sar" for 0x4010ae>, <DisassemblerInsn "movsxd" for 0x4010b1>, <DisassemblerInsn "mov" for 0x4010b4>, <DisassemblerInsn "ror" for 0x4010b7>, <DisassemblerInsn "ror" for 0x4010bb>, <DisassemblerInsn "ror" for 0x4010be>, <DisassemblerInsn "shl" for 0x4010c2>, <DisassemblerInsn "shr" for 0x4010c4>, <DisassemblerInsn "and" for 0x4010c7>, <DisassemblerInsn "cmp" for 0x4010cc>, <DisassemblerInsn "je" for 0x4010d1>]'}, {'block_Idx': 258, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fd9>, <DisassemblerInsn "mov" for 0x401fe0>, <DisassemblerInsn "mov" for 0x401fe7>, <DisassemblerInsn "mov" for 0x401fee>, <DisassemblerInsn "xor" for 0x401ff1>, <DisassemblerInsn "sub" for 0x401ff3>, <DisassemblerInsn "shr" for 0x401ff6>, <DisassemblerInsn "mov" for 0x401ff8>, <DisassemblerInsn "add" for 0x402000>, <DisassemblerInsn "mov" for 0x402002>, <DisassemblerInsn "mov" for 0x402004>, <DisassemblerInsn "jmp" for 0x40200b>]'}, {'block_Idx': 80, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4013e5>]'}, {'block_Idx': 146, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f80>, <DisassemblerInsn "mov" for 0x400f83>, <DisassemblerInsn "mov" for 0x400f8b>, <DisassemblerInsn "mov" for 0x400f8e>, <DisassemblerInsn "mov" for 0x400f96>, <DisassemblerInsn "mov" for 0x400f9c>, <DisassemblerInsn "cmp" for 0x400fa3>, <DisassemblerInsn "jle" for 0x400fa6>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40329b>, <DisassemblerInsn "mov" for 0x4032a3>, <DisassemblerInsn "and" for 0x4032ab>, <DisassemblerInsn "mov" for 0x4032b1>, <DisassemblerInsn "xor" for 0x4032b9>, <DisassemblerInsn "mov" for 0x4032bb>, <DisassemblerInsn "mov" for 0x4032be>, <DisassemblerInsn "mov" for 0x4032c6>, <DisassemblerInsn "mov" for 0x4032ce>, <DisassemblerInsn "mov" for 0x4032d6>, <DisassemblerInsn "mov" for 0x4032de>, <DisassemblerInsn "mov" for 0x4032e6>, <DisassemblerInsn "mov" for 0x4032ee>, <DisassemblerInsn "mov" for 0x4032f6>, <DisassemblerInsn "mov" for 0x4032fd>, <DisassemblerInsn "mov" for 0x403305>, <DisassemblerInsn "mov" for 0x40330d>, <DisassemblerInsn "mov" for 0x403315>, <DisassemblerInsn "mov" for 0x40331a>, <DisassemblerInsn "shl" for 0x40331e>, <DisassemblerInsn "mov" for 0x403321>, <DisassemblerInsn "mov" for 0x403328>, <DisassemblerInsn "mov" for 0x403330>, <DisassemblerInsn "mov" for 0x403334>, <DisassemblerInsn "or" for 0x403337>, <DisassemblerInsn "mov" for 0x40333b>, <DisassemblerInsn "mov" for 0x403343>, <DisassemblerInsn "mov" for 0x403348>, <DisassemblerInsn "shl" for 0x40334c>, <DisassemblerInsn "mov" for 0x40334f>, <DisassemblerInsn "mov" for 0x403356>, <DisassemblerInsn "mov" for 0x40335e>, <DisassemblerInsn "mov" for 0x403363>, <DisassemblerInsn "or" for 0x403366>, <DisassemblerInsn "mov" for 0x40336a>, <DisassemblerInsn "mov" for 0x403372>, <DisassemblerInsn "mov" for 0x403377>, <DisassemblerInsn "shl" for 0x40337b>, <DisassemblerInsn "mov" for 0x40337e>, <DisassemblerInsn "mov" for 0x403385>, <DisassemblerInsn "mov" for 0x40338d>, <DisassemblerInsn "or" for 0x403392>, <DisassemblerInsn "mov" for 0x403396>, <DisassemblerInsn "mov" for 0x40339e>, <DisassemblerInsn "mov" for 0x4033a3>, <DisassemblerInsn "shl" for 0x4033a7>, <DisassemblerInsn "mov" for 0x4033a9>, <DisassemblerInsn "mov" for 0x4033b1>, <DisassemblerInsn "mov" for 0x4033b8>, <DisassemblerInsn "mov" for 0x4033bc>, <DisassemblerInsn "add" for 0x4033bf>, <DisassemblerInsn "mov" for 0x4033c3>, <DisassemblerInsn "mov" for 0x4033cb>, <DisassemblerInsn "add" for 0x4033d0>, <DisassemblerInsn "mov" for 0x4033d4>, <DisassemblerInsn "add" for 0x4033dc>, <DisassemblerInsn "mov" for 0x4033e0>, <DisassemblerInsn "cmp" for 0x4033e8>, <DisassemblerInsn "mov" for 0x4033eb>, <DisassemblerInsn "mov" for 0x4033ee>, <DisassemblerInsn "mov" for 0x4033f6>, <DisassemblerInsn "mov" for 0x4033f9>, <DisassemblerInsn "mov" for 0x403401>, <DisassemblerInsn "mov" for 0x403409>, <DisassemblerInsn "mov" for 0x40340c>, <DisassemblerInsn "mov" for 0x403414>, <DisassemblerInsn "mov" for 0x40341c>, <DisassemblerInsn "je" for 0x403424>]'}, {'block_Idx': 42, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f9c>, <DisassemblerInsn "cmp" for 0x400fa3>, <DisassemblerInsn "jle" for 0x400fa6>]'}, {'block_Idx': 365, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402465>, <DisassemblerInsn "mov" for 0x40246c>, <DisassemblerInsn "mov" for 0x402473>, <DisassemblerInsn "mov" for 0x40247a>, <DisassemblerInsn "mov" for 0x402482>, <DisassemblerInsn "shl" for 0x402489>, <DisassemblerInsn "mov" for 0x40248b>, <DisassemblerInsn "add" for 0x40248e>, <DisassemblerInsn "mov" for 0x402492>, <DisassemblerInsn "mov" for 0x402495>, <DisassemblerInsn "add" for 0x402499>, <DisassemblerInsn "add" for 0x40249b>, <DisassemblerInsn "sub" for 0x40249d>, <DisassemblerInsn "mov" for 0x40249f>, <DisassemblerInsn "cmp" for 0x4024a6>, <DisassemblerInsn "jne" for 0x4024a9>]'}, {'block_Idx': 149, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403040>, <DisassemblerInsn "mov" for 0x403048>, <DisassemblerInsn "mov" for 0x40304f>, <DisassemblerInsn "mov" for 0x403056>, <DisassemblerInsn "mov" for 0x40305d>, <DisassemblerInsn "mov" for 0x403064>, <DisassemblerInsn "neg" for 0x403066>, <DisassemblerInsn "and" for 0x403068>, <DisassemblerInsn "mov" for 0x40306b>, <DisassemblerInsn "mov" for 0x40306d>, <DisassemblerInsn "lea" for 0x40306f>, <DisassemblerInsn "mov" for 0x403073>, <DisassemblerInsn "mov" for 0x403075>, <DisassemblerInsn "mov" for 0x403077>, <DisassemblerInsn "sub" for 0x40307f>, <DisassemblerInsn "ja" for 0x403082>]'}, {'block_Idx': 178, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401afd>, <DisassemblerInsn "mov" for 0x401b05>, <DisassemblerInsn "mov" for 0x401b0d>, <DisassemblerInsn "mov" for 0x401b14>, <DisassemblerInsn "mov" for 0x401b1b>, <DisassemblerInsn "mov" for 0x401b1d>, <DisassemblerInsn "mov" for 0x401b24>, <DisassemblerInsn "mov" for 0x401b27>, <DisassemblerInsn "mov" for 0x401b2f>, <DisassemblerInsn "sar" for 0x401b31>, <DisassemblerInsn "movsxd" for 0x401b34>, <DisassemblerInsn "mov" for 0x401b37>, <DisassemblerInsn "mov" for 0x401b3b>, <DisassemblerInsn "and" for 0x401b3d>, <DisassemblerInsn "movzx" for 0x401b40>, <DisassemblerInsn "mov" for 0x401b44>, <DisassemblerInsn "add" for 0x401b4b>, <DisassemblerInsn "mov" for 0x401b4e>, <DisassemblerInsn "mov" for 0x401b55>, <DisassemblerInsn "mov" for 0x401b57>, <DisassemblerInsn "shr" for 0x401b5c>, <DisassemblerInsn "mov" for 0x401b5e>, <DisassemblerInsn "and" for 0x401b65>, <DisassemblerInsn "cmp" for 0x401b67>, <DisassemblerInsn "je" for 0x401b6a>]'}, {'block_Idx': 230, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ece>, <DisassemblerInsn "mov" for 0x401ed6>, <DisassemblerInsn "mov" for 0x401edd>, <DisassemblerInsn "mov" for 0x401ee4>, <DisassemblerInsn "sub" for 0x401ee9>, <DisassemblerInsn "mov" for 0x401eeb>, <DisassemblerInsn "shl" for 0x401ef2>, <DisassemblerInsn "mov" for 0x401ef4>, <DisassemblerInsn "sar" for 0x401efb>, <DisassemblerInsn "mov" for 0x401efd>, <DisassemblerInsn "cmp" for 0x401f04>, <DisassemblerInsn "jle" for 0x401f07>]'}, {'block_Idx': 235, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f61>, <DisassemblerInsn "mov" for 0x402f69>, <DisassemblerInsn "add" for 0x402f71>, <DisassemblerInsn "mov" for 0x402f75>, <DisassemblerInsn "mov" for 0x402f7d>, <DisassemblerInsn "mov" for 0x402f7f>, <DisassemblerInsn "movsxd" for 0x402f86>, <DisassemblerInsn "cmp" for 0x402f89>, <DisassemblerInsn "jge" for 0x402f8c>]'}, {'block_Idx': 208, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403e3c>, <DisassemblerInsn "mov" for 0x403e41>, <DisassemblerInsn "mov" for 0x403e45>, <DisassemblerInsn "mov" for 0x403e4a>, <DisassemblerInsn "mov" for 0x403e4e>, <DisassemblerInsn "mov" for 0x403e52>, <DisassemblerInsn "mov" for 0x403e57>, <DisassemblerInsn "shl" for 0x403e5b>, <DisassemblerInsn "mov" for 0x403e5d>, <DisassemblerInsn "mov" for 0x403e5f>, <DisassemblerInsn "mov" for 0x403e62>, <DisassemblerInsn "add" for 0x403e65>, <DisassemblerInsn "mov" for 0x403e69>, <DisassemblerInsn "mov" for 0x403e6d>, <DisassemblerInsn "mov" for 0x403e71>, <DisassemblerInsn "mov" for 0x403e76>, <DisassemblerInsn "mov" for 0x403e7b>, <DisassemblerInsn "mov" for 0x403e80>, <DisassemblerInsn "mov" for 0x403e84>, <DisassemblerInsn "mov" for 0x403e89>, <DisassemblerInsn "add" for 0x403e8e>, <DisassemblerInsn "movsxd" for 0x403e92>, <DisassemblerInsn "cmp" for 0x403e95>, <DisassemblerInsn "mov" for 0x403e98>, <DisassemblerInsn "mov" for 0x403e9a>, <DisassemblerInsn "mov" for 0x403e9e>, <DisassemblerInsn "mov" for 0x403ea3>, <DisassemblerInsn "mov" for 0x403ea8>, <DisassemblerInsn "mov" for 0x403ead>, <DisassemblerInsn "jl" for 0x403eb4>]'}, {'block_Idx': 143, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401980>, <DisassemblerInsn "mov" for 0x401987>, <DisassemblerInsn "mov" for 0x40198f>, <DisassemblerInsn "xor" for 0x401992>, <DisassemblerInsn "lea" for 0x401994>, <DisassemblerInsn "mov" for 0x40199b>, <DisassemblerInsn "call" for 0x40199d>]'}, {'block_Idx': 250, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a6b>, <DisassemblerInsn "mov" for 0x401a73>, <DisassemblerInsn "mov" for 0x401a7a>, <DisassemblerInsn "mov" for 0x401a81>, <DisassemblerInsn "mov" for 0x401a89>, <DisassemblerInsn "mov" for 0x401a91>, <DisassemblerInsn "mov" for 0x401a98>, <DisassemblerInsn "mov" for 0x401a9f>, <DisassemblerInsn "cmp" for 0x401aa1>, <DisassemblerInsn "jne" for 0x401aa5>]'}, {'block_Idx': 128, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401933>, <DisassemblerInsn "mov" for 0x40193b>, <DisassemblerInsn "mov" for 0x40193e>, <DisassemblerInsn "mov" for 0x401946>, <DisassemblerInsn "mov" for 0x401949>, <DisassemblerInsn "mov" for 0x401951>, <DisassemblerInsn "mov" for 0x401953>, <DisassemblerInsn "mov" for 0x40195a>, <DisassemblerInsn "cdq" for 0x40195f>, <DisassemblerInsn "idiv" for 0x401960>, <DisassemblerInsn "mov" for 0x401962>, <DisassemblerInsn "movsxd" for 0x40196a>, <DisassemblerInsn "xor" for 0x40196d>, <DisassemblerInsn "call" for 0x40196f>]'}, {'block_Idx': 98, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015ed>, <DisassemblerInsn "mov" for 0x4015f5>, <DisassemblerInsn "mov" for 0x4015fc>, <DisassemblerInsn "mov" for 0x401604>, <DisassemblerInsn "shr" for 0x40160c>, <DisassemblerInsn "and" for 0x401610>, <DisassemblerInsn "mov" for 0x401617>, <DisassemblerInsn "ror" for 0x40161a>, <DisassemblerInsn "ror" for 0x40161e>, <DisassemblerInsn "ror" for 0x401621>, <DisassemblerInsn "shr" for 0x401625>, <DisassemblerInsn "add" for 0x401628>, <DisassemblerInsn "mov" for 0x40162b>, <DisassemblerInsn "add" for 0x40162d>, <DisassemblerInsn "mov" for 0x401630>, <DisassemblerInsn "mov" for 0x401637>, <DisassemblerInsn "jmp" for 0x40163e>]'}, {'block_Idx': 254, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402224>, <DisassemblerInsn "mov" for 0x40222b>, <DisassemblerInsn "mov" for 0x402232>, <DisassemblerInsn "mov" for 0x402239>, <DisassemblerInsn "xor" for 0x40223c>, <DisassemblerInsn "sub" for 0x40223e>, <DisassemblerInsn "shr" for 0x402241>, <DisassemblerInsn "mov" for 0x402243>, <DisassemblerInsn "add" for 0x40224b>, <DisassemblerInsn "mov" for 0x40224d>, <DisassemblerInsn "mov" for 0x40224f>, <DisassemblerInsn "jmp" for 0x402256>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401006>, <DisassemblerInsn "and" for 0x40100d>, <DisassemblerInsn "cmp" for 0x401012>, <DisassemblerInsn "je" for 0x401017>]'}, {'block_Idx': 364, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40259a>, <DisassemblerInsn "cmp" for 0x4025a1>, <DisassemblerInsn "jle" for 0x4025a4>]'}, {'block_Idx': 218, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40342a>]'}, {'block_Idx': 157, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ac3>, <DisassemblerInsn "mov" for 0x401aca>, <DisassemblerInsn "or" for 0x401ad1>, <DisassemblerInsn "sub" for 0x401ad4>, <DisassemblerInsn "mov" for 0x401ad7>, <DisassemblerInsn "je" for 0x401ade>]'}, {'block_Idx': 46, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40129d>, <DisassemblerInsn "and" for 0x4012a4>, <DisassemblerInsn "cmp" for 0x4012a7>, <DisassemblerInsn "je" for 0x4012aa>]'}, {'block_Idx': 166, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401ac1>]'}, {'block_Idx': 65, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40123f>]'}, {'block_Idx': 202, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4039ff>, <DisassemblerInsn "mov" for 0x403a07>, <DisassemblerInsn "mov" for 0x403a0e>, <DisassemblerInsn "mov" for 0x403a16>, <DisassemblerInsn "mov" for 0x403a1d>, <DisassemblerInsn "mov" for 0x403a25>, <DisassemblerInsn "mov" for 0x403a2c>, <DisassemblerInsn "mov" for 0x403a34>, <DisassemblerInsn "sub" for 0x403a38>, <DisassemblerInsn "shl" for 0x403a3b>, <DisassemblerInsn "mov" for 0x403a3d>, <DisassemblerInsn "mov" for 0x403a3f>, <DisassemblerInsn "mov" for 0x403a42>, <DisassemblerInsn "add" for 0x403a45>, <DisassemblerInsn "mov" for 0x403a49>, <DisassemblerInsn "mov" for 0x403a4d>, <DisassemblerInsn "mov" for 0x403a54>, <DisassemblerInsn "mov" for 0x403a5c>, <DisassemblerInsn "mov" for 0x403a64>, <DisassemblerInsn "mov" for 0x403a6c>, <DisassemblerInsn "mov" for 0x403a73>, <DisassemblerInsn "mov" for 0x403a7b>, <DisassemblerInsn "add" for 0x403a83>, <DisassemblerInsn "movsxd" for 0x403a87>, <DisassemblerInsn "cmp" for 0x403a8a>, <DisassemblerInsn "mov" for 0x403a8d>, <DisassemblerInsn "mov" for 0x403a8f>, <DisassemblerInsn "mov" for 0x403a96>, <DisassemblerInsn "mov" for 0x403a9e>, <DisassemblerInsn "mov" for 0x403aa6>, <DisassemblerInsn "mov" for 0x403aae>, <DisassemblerInsn "jl" for 0x403ab5>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401121>, <DisassemblerInsn "mov" for 0x401129>, <DisassemblerInsn "mov" for 0x401131>, <DisassemblerInsn "mov" for 0x401138>, <DisassemblerInsn "shr" for 0x40113a>, <DisassemblerInsn "mov" for 0x40113d>, <DisassemblerInsn "shl" for 0x401144>, <DisassemblerInsn "shr" for 0x401147>, <DisassemblerInsn "mov" for 0x40114a>, <DisassemblerInsn "mov" for 0x401151>, <DisassemblerInsn "add" for 0x401154>, <DisassemblerInsn "mov" for 0x401158>, <DisassemblerInsn "mov" for 0x401160>, <DisassemblerInsn "ror" for 0x401163>, <DisassemblerInsn "ror" for 0x401167>, <DisassemblerInsn "ror" for 0x40116a>, <DisassemblerInsn "mov" for 0x40116e>, <DisassemblerInsn "shr" for 0x401175>, <DisassemblerInsn "mov" for 0x401178>, <DisassemblerInsn "mov" for 0x40117f>, <DisassemblerInsn "cmp" for 0x401185>, <DisassemblerInsn "jge" for 0x401188>]'}, {'block_Idx': 255, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40225b>, <DisassemblerInsn "mov" for 0x402263>, <DisassemblerInsn "mov" for 0x40226a>, <DisassemblerInsn "mov" for 0x402271>, <DisassemblerInsn "mov" for 0x402279>, <DisassemblerInsn "shr" for 0x402281>, <DisassemblerInsn "mov" for 0x402285>, <DisassemblerInsn "add" for 0x402288>, <DisassemblerInsn "mov" for 0x40228c>, <DisassemblerInsn "add" for 0x40228e>, <DisassemblerInsn "mov" for 0x402291>, <DisassemblerInsn "shl" for 0x402298>, <DisassemblerInsn "mov" for 0x40229b>, <DisassemblerInsn "mov" for 0x4022a2>, <DisassemblerInsn "sar" for 0x4022aa>, <DisassemblerInsn "movsxd" for 0x4022ae>, <DisassemblerInsn "mov" for 0x4022b1>, <DisassemblerInsn "ror" for 0x4022b5>, <DisassemblerInsn "ror" for 0x4022b9>, <DisassemblerInsn "ror" for 0x4022bc>, <DisassemblerInsn "shl" for 0x4022c0>, <DisassemblerInsn "mov" for 0x4022c2>, <DisassemblerInsn "mov" for 0x4022c9>, <DisassemblerInsn "xor" for 0x4022cc>, <DisassemblerInsn "sub" for 0x4022ce>, <DisassemblerInsn "shr" for 0x4022d1>, <DisassemblerInsn "mov" for 0x4022d3>, <DisassemblerInsn "add" for 0x4022da>, <DisassemblerInsn "mov" for 0x4022dc>, <DisassemblerInsn "or" for 0x4022de>, <DisassemblerInsn "mov" for 0x4022e0>, <DisassemblerInsn "mov" for 0x4022e7>, <DisassemblerInsn "mov" for 0x4022ef>, <DisassemblerInsn "mov" for 0x4022f7>, <DisassemblerInsn "mov" for 0x4022fe>, <DisassemblerInsn "mov" for 0x402305>, <DisassemblerInsn "sub" for 0x40230a>, <DisassemblerInsn "mov" for 0x40230c>, <DisassemblerInsn "shl" for 0x402313>, <DisassemblerInsn "mov" for 0x402315>, <DisassemblerInsn "sar" for 0x40231c>, <DisassemblerInsn "mov" for 0x40231e>, <DisassemblerInsn "mov" for 0x402326>, <DisassemblerInsn "add" for 0x402329>, <DisassemblerInsn "mov" for 0x40232d>, <DisassemblerInsn "cmp" for 0x402335>, <DisassemblerInsn "je" for 0x402338>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cef>, <DisassemblerInsn "cmp" for 0x400cf6>, <DisassemblerInsn "jle" for 0x400cf8>]'}, {'block_Idx': 38, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a06>, <DisassemblerInsn "mov" for 0x400a0e>, <DisassemblerInsn "mov" for 0x400a16>, <DisassemblerInsn "mov" for 0x400a1e>, <DisassemblerInsn "mov" for 0x400a26>, <DisassemblerInsn "mov" for 0x400a2d>, <DisassemblerInsn "mov" for 0x400a34>, <DisassemblerInsn "add" for 0x400a36>, <DisassemblerInsn "mov" for 0x400a39>, <DisassemblerInsn "add" for 0x400a3b>, <DisassemblerInsn "mov" for 0x400a3d>, <DisassemblerInsn "cmp" for 0x400a3f>, <DisassemblerInsn "setl" for 0x400a41>, <DisassemblerInsn "cmp" for 0x400a45>, <DisassemblerInsn "setne" for 0x400a48>, <DisassemblerInsn "and" for 0x400a4c>, <DisassemblerInsn "test" for 0x400a4f>, <DisassemblerInsn "mov" for 0x400a53>, <DisassemblerInsn "mov" for 0x400a55>, <DisassemblerInsn "mov" for 0x400a5c>, <DisassemblerInsn "mov" for 0x400a63>, <DisassemblerInsn "mov" for 0x400a6b>, <DisassemblerInsn "jne" for 0x400a72>]'}, {'block_Idx': 395, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024bf>, <DisassemblerInsn "mov" for 0x4024c6>, <DisassemblerInsn "mov" for 0x4024cd>, <DisassemblerInsn "mov" for 0x4024d4>, <DisassemblerInsn "mov" for 0x4024db>, <DisassemblerInsn "mov" for 0x4024e3>, <DisassemblerInsn "mov" for 0x4024e6>, <DisassemblerInsn "and" for 0x4024ee>, <DisassemblerInsn "mov" for 0x4024f2>, <DisassemblerInsn "mov" for 0x4024fa>, <DisassemblerInsn "cmp" for 0x4024ff>, <DisassemblerInsn "mov" for 0x402503>, <DisassemblerInsn "mov" for 0x40250b>, <DisassemblerInsn "mov" for 0x402512>, <DisassemblerInsn "mov" for 0x402519>, <DisassemblerInsn "mov" for 0x402520>, <DisassemblerInsn "je" for 0x402527>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400838>, <DisassemblerInsn "mov" for 0x40083f>, <DisassemblerInsn "mov" for 0x400847>, <DisassemblerInsn "add" for 0x40084a>, <DisassemblerInsn "mov" for 0x400851>, <DisassemblerInsn "mov" for 0x400859>, <DisassemblerInsn "mov" for 0x40085f>, <DisassemblerInsn "xor" for 0x400866>, <DisassemblerInsn "mov" for 0x400869>, <DisassemblerInsn "cmp" for 0x40086e>, <DisassemblerInsn "mov" for 0x400870>, <DisassemblerInsn "ja" for 0x400877>]'}, {'block_Idx': 269, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4020f9>, <DisassemblerInsn "mov" for 0x402101>, <DisassemblerInsn "mov" for 0x402109>, <DisassemblerInsn "mov" for 0x402111>, <DisassemblerInsn "mov" for 0x402113>, <DisassemblerInsn "mov" for 0x402115>, <DisassemblerInsn "mov" for 0x40211c>, <DisassemblerInsn "mov" for 0x402123>, <DisassemblerInsn "jmp" for 0x40212b>]'}, {'block_Idx': 463, 'blockInsts': '[<DisassemblerInsn "mov" for 0x404f1e>, <DisassemblerInsn "mov" for 0x404f22>, <DisassemblerInsn "mov" for 0x404f28>, <DisassemblerInsn "sar" for 0x404f2e>, <DisassemblerInsn "mov" for 0x404f30>, <DisassemblerInsn "movsxd" for 0x404f36>, <DisassemblerInsn "add" for 0x404f39>, <DisassemblerInsn "mov" for 0x404f3c>, <DisassemblerInsn "xor" for 0x404f3f>, <DisassemblerInsn "mov" for 0x404f41>, <DisassemblerInsn "mov" for 0x404f47>, <DisassemblerInsn "lea" for 0x404f4d>, <DisassemblerInsn "pop" for 0x404f51>, <DisassemblerInsn "pop" for 0x404f52>, <DisassemblerInsn "ret" for 0x404f53>]'}, {'block_Idx': 363, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402675>, <DisassemblerInsn "mov" for 0x40267c>, <DisassemblerInsn "mov" for 0x402683>, <DisassemblerInsn "mov" for 0x40268a>, <DisassemblerInsn "mov" for 0x40268c>, <DisassemblerInsn "mov" for 0x40268e>, <DisassemblerInsn "add" for 0x402691>, <DisassemblerInsn "mov" for 0x402695>, <DisassemblerInsn "add" for 0x40269d>, <DisassemblerInsn "and" for 0x4026a1>, <DisassemblerInsn "mov" for 0x4026a5>, <DisassemblerInsn "mov" for 0x4026ad>, <DisassemblerInsn "cmp" for 0x4026b2>, <DisassemblerInsn "mov" for 0x4026b6>, <DisassemblerInsn "mov" for 0x4026be>, <DisassemblerInsn "mov" for 0x4026c5>, <DisassemblerInsn "jb" for 0x4026cc>]'}, {'block_Idx': 274, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4021c2>, <DisassemblerInsn "mov" for 0x4021ca>, <DisassemblerInsn "mov" for 0x4021d1>, <DisassemblerInsn "mov" for 0x4021d8>, <DisassemblerInsn "mov" for 0x4021e0>, <DisassemblerInsn "mov" for 0x4021e8>, <DisassemblerInsn "mov" for 0x4021ef>, <DisassemblerInsn "mov" for 0x4021f6>, <DisassemblerInsn "sar" for 0x4021f8>, <DisassemblerInsn "movsxd" for 0x4021fb>, <DisassemblerInsn "mov" for 0x4021fe>, <DisassemblerInsn "ror" for 0x402201>, <DisassemblerInsn "ror" for 0x402205>, <DisassemblerInsn "ror" for 0x402208>, <DisassemblerInsn "and" for 0x40220c>, <DisassemblerInsn "mov" for 0x40220f>, <DisassemblerInsn "shl" for 0x402216>, <DisassemblerInsn "mov" for 0x402218>, <DisassemblerInsn "cmp" for 0x40221f>, <DisassemblerInsn "jge" for 0x402222>]'}, {'block_Idx': 207, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403502>, <DisassemblerInsn "mov" for 0x40350a>, <DisassemblerInsn "mov" for 0x403511>, <DisassemblerInsn "mov" for 0x403518>, <DisassemblerInsn "mov" for 0x403520>, <DisassemblerInsn "mov" for 0x403527>, <DisassemblerInsn "mov" for 0x40352b>, <DisassemblerInsn "add" for 0x40352e>, <DisassemblerInsn "mov" for 0x403532>, <DisassemblerInsn "mov" for 0x403536>, <DisassemblerInsn "mov" for 0x40353d>, <DisassemblerInsn "mov" for 0x403544>, <DisassemblerInsn "mov" for 0x40354c>, <DisassemblerInsn "mov" for 0x403554>, <DisassemblerInsn "mov" for 0x40355c>, <DisassemblerInsn "mov" for 0x403563>, <DisassemblerInsn "mov" for 0x40356a>, <DisassemblerInsn "mov" for 0x403572>, <DisassemblerInsn "mov" for 0x40357a>, <DisassemblerInsn "mov" for 0x403582>, <DisassemblerInsn "mov" for 0x40358a>, <DisassemblerInsn "mov" for 0x403591>, <DisassemblerInsn "add" for 0x403598>, <DisassemblerInsn "mov" for 0x40359c>, <DisassemblerInsn "movsxd" for 0x4035a4>, <DisassemblerInsn "cmp" for 0x4035a7>, <DisassemblerInsn "jge" for 0x4035aa>]'}, {'block_Idx': 226, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e42>, <DisassemblerInsn "mov" for 0x401e4a>, <DisassemblerInsn "mov" for 0x401e51>, <DisassemblerInsn "mov" for 0x401e58>, <DisassemblerInsn "mov" for 0x401e60>, <DisassemblerInsn "shr" for 0x401e68>, <DisassemblerInsn "mov" for 0x401e6c>, <DisassemblerInsn "add" for 0x401e6f>, <DisassemblerInsn "mov" for 0x401e73>, <DisassemblerInsn "add" for 0x401e75>, <DisassemblerInsn "mov" for 0x401e78>, <DisassemblerInsn "shl" for 0x401e7f>, <DisassemblerInsn "mov" for 0x401e82>, <DisassemblerInsn "mov" for 0x401e89>, <DisassemblerInsn "sar" for 0x401e91>, <DisassemblerInsn "movsxd" for 0x401e95>, <DisassemblerInsn "mov" for 0x401e98>, <DisassemblerInsn "ror" for 0x401e9c>, <DisassemblerInsn "ror" for 0x401ea0>, <DisassemblerInsn "ror" for 0x401ea3>, <DisassemblerInsn "shl" for 0x401ea7>, <DisassemblerInsn "mov" for 0x401ea9>, <DisassemblerInsn "mov" for 0x401eb0>, <DisassemblerInsn "xor" for 0x401eb3>, <DisassemblerInsn "sub" for 0x401eb5>, <DisassemblerInsn "shr" for 0x401eb8>, <DisassemblerInsn "mov" for 0x401eba>, <DisassemblerInsn "add" for 0x401ec1>, <DisassemblerInsn "mov" for 0x401ec3>, <DisassemblerInsn "or" for 0x401ec5>, <DisassemblerInsn "mov" for 0x401ec7>, <DisassemblerInsn "mov" for 0x401ece>, <DisassemblerInsn "mov" for 0x401ed6>, <DisassemblerInsn "mov" for 0x401edd>, <DisassemblerInsn "mov" for 0x401ee4>, <DisassemblerInsn "sub" for 0x401ee9>, <DisassemblerInsn "mov" for 0x401eeb>, <DisassemblerInsn "shl" for 0x401ef2>, <DisassemblerInsn "mov" for 0x401ef4>, <DisassemblerInsn "sar" for 0x401efb>, <DisassemblerInsn "mov" for 0x401efd>, <DisassemblerInsn "cmp" for 0x401f04>, <DisassemblerInsn "jle" for 0x401f07>]'}, {'block_Idx': 192, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40390e>, <DisassemblerInsn "mov" for 0x403916>, <DisassemblerInsn "mov" for 0x40391e>, <DisassemblerInsn "mov" for 0x403926>, <DisassemblerInsn "mov" for 0x40392e>, <DisassemblerInsn "mov" for 0x403936>, <DisassemblerInsn "mov" for 0x40393e>, <DisassemblerInsn "mov" for 0x403946>, <DisassemblerInsn "mov" for 0x40394e>, <DisassemblerInsn "mov" for 0x403956>, <DisassemblerInsn "mov" for 0x40395e>, <DisassemblerInsn "mov" for 0x403966>, <DisassemblerInsn "mov" for 0x40396e>, <DisassemblerInsn "mov" for 0x403971>, <DisassemblerInsn "mov" for 0x403978>, <DisassemblerInsn "mov" for 0x40397b>, <DisassemblerInsn "mov" for 0x403982>, <DisassemblerInsn "mov" for 0x403984>, <DisassemblerInsn "mov" for 0x403986>, <DisassemblerInsn "shl" for 0x40398d>, <DisassemblerInsn "mov" for 0x40398f>, <DisassemblerInsn "cmp" for 0x403996>, <DisassemblerInsn "je" for 0x403999>]'}, {'block_Idx': 241, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402be5>, <DisassemblerInsn "cmp" for 0x402bec>, <DisassemblerInsn "jle" for 0x402bef>]'}, {'block_Idx': 73, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4012f1>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400975>, <DisassemblerInsn "mov" for 0x40097c>, <DisassemblerInsn "mov" for 0x400983>, <DisassemblerInsn "mov" for 0x40098b>, <DisassemblerInsn "mov" for 0x400992>, <DisassemblerInsn "mov" for 0x400994>, <DisassemblerInsn "add" for 0x400997>, <DisassemblerInsn "mov" for 0x40099a>, <DisassemblerInsn "mov" for 0x40099c>, <DisassemblerInsn "call" for 0x40099e>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40072a>, <DisassemblerInsn "mov" for 0x400732>, <DisassemblerInsn "mov" for 0x40073a>, <DisassemblerInsn "mov" for 0x400741>, <DisassemblerInsn "mov" for 0x400744>, <DisassemblerInsn "mov" for 0x40074c>, <DisassemblerInsn "mov" for 0x400753>, <DisassemblerInsn "xor" for 0x400755>, <DisassemblerInsn "cmp" for 0x400757>, <DisassemblerInsn "mov" for 0x40075a>, <DisassemblerInsn "mov" for 0x400761>, <DisassemblerInsn "mov" for 0x400768>, <DisassemblerInsn "mov" for 0x40076f>, <DisassemblerInsn "je" for 0x400777>]'}, {'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400933>, <DisassemblerInsn "mov" for 0x40093a>, <DisassemblerInsn "mov" for 0x400941>, <DisassemblerInsn "mov" for 0x400948>, <DisassemblerInsn "mov" for 0x40094f>, <DisassemblerInsn "mov" for 0x400956>, <DisassemblerInsn "mov" for 0x40095d>, <DisassemblerInsn "add" for 0x40095f>, <DisassemblerInsn "add" for 0x400961>, <DisassemblerInsn "cmp" for 0x400963>, <DisassemblerInsn "mov" for 0x400965>, <DisassemblerInsn "mov" for 0x40096c>, <DisassemblerInsn "jbe" for 0x400973>]'}, {'block_Idx': 71, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401482>, <DisassemblerInsn "mov" for 0x401489>, <DisassemblerInsn "mov" for 0x401490>, <DisassemblerInsn "mov" for 0x401495>, <DisassemblerInsn "shr" for 0x401497>, <DisassemblerInsn "mov" for 0x401499>, <DisassemblerInsn "and" for 0x40149b>, <DisassemblerInsn "mov" for 0x40149d>, <DisassemblerInsn "mov" for 0x40149f>, <DisassemblerInsn "mov" for 0x4014a4>, <DisassemblerInsn "mov" for 0x4014ac>, <DisassemblerInsn "mov" for 0x4014b4>, <DisassemblerInsn "mov" for 0x4014bb>, <DisassemblerInsn "mov" for 0x4014c3>, <DisassemblerInsn "mov" for 0x4014cb>, <DisassemblerInsn "mov" for 0x4014d2>, <DisassemblerInsn "mov" for 0x4014d9>, <DisassemblerInsn "mov" for 0x4014e1>, <DisassemblerInsn "cmp" for 0x4014e9>, <DisassemblerInsn "jle" for 0x4014ec>]'}, {'block_Idx': 404, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d37>, <DisassemblerInsn "mov" for 0x402d3f>, <DisassemblerInsn "mov" for 0x402d47>, <DisassemblerInsn "mov" for 0x402d4e>, <DisassemblerInsn "mov" for 0x402d55>, <DisassemblerInsn "add" for 0x402d5c>, <DisassemblerInsn "add" for 0x402d5f>, <DisassemblerInsn "add" for 0x402d61>, <DisassemblerInsn "mov" for 0x402d63>, <DisassemblerInsn "jmp" for 0x402d66>]'}, {'block_Idx': 181, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403895>, <DisassemblerInsn "mov" for 0x40389d>, <DisassemblerInsn "mov" for 0x4038a5>, <DisassemblerInsn "mov" for 0x4038ac>, <DisassemblerInsn "mov" for 0x4038b4>, <DisassemblerInsn "mov" for 0x4038b8>, <DisassemblerInsn "mov" for 0x4038c0>, <DisassemblerInsn "mov" for 0x4038c4>, <DisassemblerInsn "xor" for 0x4038cc>, <DisassemblerInsn "mov" for 0x4038ce>, <DisassemblerInsn "mov" for 0x4038d5>, <DisassemblerInsn "mov" for 0x4038dd>, <DisassemblerInsn "mov" for 0x4038e5>, <DisassemblerInsn "jmp" for 0x4038ed>]'}, {'block_Idx': 382, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024af>, <DisassemblerInsn "cmp" for 0x4024b6>, <DisassemblerInsn "jle" for 0x4024b9>]'}, {'block_Idx': 104, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401719>, <DisassemblerInsn "mov" for 0x401720>, <DisassemblerInsn "mov" for 0x401727>, <DisassemblerInsn "mov" for 0x40172e>, <DisassemblerInsn "mov" for 0x401736>, <DisassemblerInsn "add" for 0x40173e>, <DisassemblerInsn "mov" for 0x401742>, <DisassemblerInsn "mov" for 0x40174a>, <DisassemblerInsn "mov" for 0x40174f>, <DisassemblerInsn "test" for 0x401754>, <DisassemblerInsn "cmovne" for 0x401758>, <DisassemblerInsn "imul" for 0x40175b>, <DisassemblerInsn "imul" for 0x40175e>, <DisassemblerInsn "cmp" for 0x401761>, <DisassemblerInsn "jg" for 0x401763>]'}, {'block_Idx': 183, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4037dc>, <DisassemblerInsn "mov" for 0x4037e4>, <DisassemblerInsn "mov" for 0x4037eb>, <DisassemblerInsn "mov" for 0x4037f3>, <DisassemblerInsn "mov" for 0x4037fb>, <DisassemblerInsn "mov" for 0x403802>, <DisassemblerInsn "mov" for 0x40380a>, <DisassemblerInsn "add" for 0x403812>, <DisassemblerInsn "movsxd" for 0x403816>, <DisassemblerInsn "cmp" for 0x403819>, <DisassemblerInsn "mov" for 0x40381c>, <DisassemblerInsn "mov" for 0x40381f>, <DisassemblerInsn "mov" for 0x403827>, <DisassemblerInsn "mov" for 0x40382f>, <DisassemblerInsn "mov" for 0x403837>, <DisassemblerInsn "mov" for 0x40383e>, <DisassemblerInsn "mov" for 0x403846>, <DisassemblerInsn "mov" for 0x40384e>, <DisassemblerInsn "mov" for 0x403856>, <DisassemblerInsn "jl" for 0x40385d>]'}, {'block_Idx': 268, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40209c>, <DisassemblerInsn "mov" for 0x4020a4>, <DisassemblerInsn "mov" for 0x4020ac>, <DisassemblerInsn "mov" for 0x4020b3>, <DisassemblerInsn "mov" for 0x4020ba>, <DisassemblerInsn "sub" for 0x4020bf>, <DisassemblerInsn "mov" for 0x4020c1>, <DisassemblerInsn "shl" for 0x4020c8>, <DisassemblerInsn "mov" for 0x4020ca>, <DisassemblerInsn "sar" for 0x4020d1>, <DisassemblerInsn "mov" for 0x4020d3>, <DisassemblerInsn "mov" for 0x4020db>, <DisassemblerInsn "mov" for 0x4020de>, <DisassemblerInsn "add" for 0x4020e1>, <DisassemblerInsn "mov" for 0x4020e5>, <DisassemblerInsn "movsxd" for 0x4020ed>, <DisassemblerInsn "cmp" for 0x4020f0>, <DisassemblerInsn "jge" for 0x4020f3>]'}, {'block_Idx': 348, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402665>, <DisassemblerInsn "cmp" for 0x40266c>, <DisassemblerInsn "jle" for 0x40266f>]'}, {'block_Idx': 109, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401769>, <DisassemblerInsn "cmp" for 0x401770>, <DisassemblerInsn "jne" for 0x401773>]'}, {'block_Idx': 378, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40286b>]'}, {'block_Idx': 44, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403f15>, <DisassemblerInsn "mov" for 0x403f1d>, <DisassemblerInsn "mov" for 0x403f24>, <DisassemblerInsn "mov" for 0x403f28>, <DisassemblerInsn "sub" for 0x403f2c>, <DisassemblerInsn "xor" for 0x403f2e>, <DisassemblerInsn "lea" for 0x403f30>, <DisassemblerInsn "mov" for 0x403f37>, <DisassemblerInsn "call" for 0x403f39>]'}, {'block_Idx': 52, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fa8>, <DisassemblerInsn "mov" for 0x400fb0>, <DisassemblerInsn "mov" for 0x400fb7>, <DisassemblerInsn "add" for 0x400fb9>, <DisassemblerInsn "mov" for 0x400fbb>, <DisassemblerInsn "mov" for 0x400fbd>, <DisassemblerInsn "mov" for 0x400fc4>, <DisassemblerInsn "shr" for 0x400fc9>, <DisassemblerInsn "mov" for 0x400fcb>, <DisassemblerInsn "and" for 0x400fd2>, <DisassemblerInsn "cmp" for 0x400fd4>, <DisassemblerInsn "jne" for 0x400fd7>]'}, {'block_Idx': 144, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40189c>, <DisassemblerInsn "mov" for 0x4018a3>, <DisassemblerInsn "mov" for 0x4018ab>, <DisassemblerInsn "sar" for 0x4018ad>, <DisassemblerInsn "movsxd" for 0x4018b0>, <DisassemblerInsn "mov" for 0x4018b3>, <DisassemblerInsn "ror" for 0x4018b6>, <DisassemblerInsn "ror" for 0x4018ba>, <DisassemblerInsn "ror" for 0x4018bd>, <DisassemblerInsn "and" for 0x4018c1>, <DisassemblerInsn "shl" for 0x4018c4>, <DisassemblerInsn "mov" for 0x4018c6>, <DisassemblerInsn "shr" for 0x4018cd>, <DisassemblerInsn "add" for 0x4018d0>, <DisassemblerInsn "imul" for 0x4018d3>, <DisassemblerInsn "mov" for 0x4018d6>, <DisassemblerInsn "mov" for 0x4018dd>, <DisassemblerInsn "jmp" for 0x4018e4>]'}, {'block_Idx': 189, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401cfc>, <DisassemblerInsn "mov" for 0x401d03>, <DisassemblerInsn "mov" for 0x401d0a>, <DisassemblerInsn "mov" for 0x401d11>, <DisassemblerInsn "mov" for 0x401d18>, <DisassemblerInsn "mov" for 0x401d1f>, <DisassemblerInsn "cmp" for 0x401d26>, <DisassemblerInsn "jle" for 0x401d29>]'}, {'block_Idx': 220, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4035ac>, <DisassemblerInsn "mov" for 0x4035b4>, <DisassemblerInsn "mov" for 0x4035bc>, <DisassemblerInsn "mov" for 0x4035c4>, <DisassemblerInsn "mov" for 0x4035cb>, <DisassemblerInsn "mov" for 0x4035d3>, <DisassemblerInsn "mov" for 0x4035db>, <DisassemblerInsn "mov" for 0x4035dd>, <DisassemblerInsn "mov" for 0x4035e5>, <DisassemblerInsn "mov" for 0x4035ec>, <DisassemblerInsn "mov" for 0x4035f3>, <DisassemblerInsn "mov" for 0x4035fb>, <DisassemblerInsn "mov" for 0x403603>, <DisassemblerInsn "jmp" for 0x40360b>]'}, {'block_Idx': 229, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4032d6>, <DisassemblerInsn "mov" for 0x4032de>, <DisassemblerInsn "mov" for 0x4032e6>, <DisassemblerInsn "mov" for 0x4032ee>, <DisassemblerInsn "mov" for 0x4032f6>, <DisassemblerInsn "mov" for 0x4032fd>, <DisassemblerInsn "mov" for 0x403305>, <DisassemblerInsn "mov" for 0x40330d>, <DisassemblerInsn "mov" for 0x403315>, <DisassemblerInsn "mov" for 0x40331a>, <DisassemblerInsn "shl" for 0x40331e>, <DisassemblerInsn "mov" for 0x403321>, <DisassemblerInsn "mov" for 0x403328>, <DisassemblerInsn "mov" for 0x403330>, <DisassemblerInsn "mov" for 0x403334>, <DisassemblerInsn "or" for 0x403337>, <DisassemblerInsn "mov" for 0x40333b>, <DisassemblerInsn "mov" for 0x403343>, <DisassemblerInsn "mov" for 0x403348>, <DisassemblerInsn "shl" for 0x40334c>, <DisassemblerInsn "mov" for 0x40334f>, <DisassemblerInsn "mov" for 0x403356>, <DisassemblerInsn "mov" for 0x40335e>, <DisassemblerInsn "mov" for 0x403363>, <DisassemblerInsn "or" for 0x403366>, <DisassemblerInsn "mov" for 0x40336a>, <DisassemblerInsn "mov" for 0x403372>, <DisassemblerInsn "mov" for 0x403377>, <DisassemblerInsn "shl" for 0x40337b>, <DisassemblerInsn "mov" for 0x40337e>, <DisassemblerInsn "mov" for 0x403385>, <DisassemblerInsn "mov" for 0x40338d>, <DisassemblerInsn "or" for 0x403392>, <DisassemblerInsn "mov" for 0x403396>, <DisassemblerInsn "mov" for 0x40339e>, <DisassemblerInsn "mov" for 0x4033a3>, <DisassemblerInsn "shl" for 0x4033a7>, <DisassemblerInsn "mov" for 0x4033a9>, <DisassemblerInsn "mov" for 0x4033b1>, <DisassemblerInsn "mov" for 0x4033b8>, <DisassemblerInsn "mov" for 0x4033bc>, <DisassemblerInsn "add" for 0x4033bf>, <DisassemblerInsn "mov" for 0x4033c3>, <DisassemblerInsn "mov" for 0x4033cb>, <DisassemblerInsn "add" for 0x4033d0>, <DisassemblerInsn "mov" for 0x4033d4>, <DisassemblerInsn "add" for 0x4033dc>, <DisassemblerInsn "mov" for 0x4033e0>, <DisassemblerInsn "cmp" for 0x4033e8>, <DisassemblerInsn "mov" for 0x4033eb>, <DisassemblerInsn "mov" for 0x4033ee>, <DisassemblerInsn "mov" for 0x4033f6>, <DisassemblerInsn "mov" for 0x4033f9>, <DisassemblerInsn "mov" for 0x403401>, <DisassemblerInsn "mov" for 0x403409>, <DisassemblerInsn "mov" for 0x40340c>, <DisassemblerInsn "mov" for 0x403414>, <DisassemblerInsn "mov" for 0x40341c>, <DisassemblerInsn "je" for 0x403424>]'}, {'block_Idx': 393, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ceb>, <DisassemblerInsn "mov" for 0x402cf3>, <DisassemblerInsn "mov" for 0x402cfb>, <DisassemblerInsn "mov" for 0x402d02>, <DisassemblerInsn "mov" for 0x402d09>, <DisassemblerInsn "mov" for 0x402d10>, <DisassemblerInsn "mov" for 0x402d17>, <DisassemblerInsn "mov" for 0x402d1e>, <DisassemblerInsn "mov" for 0x402d25>, <DisassemblerInsn "cmp" for 0x402d2d>, <DisassemblerInsn "je" for 0x402d31>]'}, {'block_Idx': 416, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402dc7>, <DisassemblerInsn "mov" for 0x402dcf>, <DisassemblerInsn "mov" for 0x402dd7>, <DisassemblerInsn "mov" for 0x402dde>, <DisassemblerInsn "mov" for 0x402de5>, <DisassemblerInsn "mov" for 0x402ded>, <DisassemblerInsn "add" for 0x402df4>, <DisassemblerInsn "add" for 0x402df7>, <DisassemblerInsn "add" for 0x402dfa>, <DisassemblerInsn "add" for 0x402dfc>, <DisassemblerInsn "mov" for 0x402dfe>, <DisassemblerInsn "jmp" for 0x402e01>]'}, {'block_Idx': 88, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403013>, <DisassemblerInsn "mov" for 0x40301b>, <DisassemblerInsn "mov" for 0x403025>, <DisassemblerInsn "mov" for 0x40302f>, <DisassemblerInsn "mov" for 0x403034>, <DisassemblerInsn "jmp" for 0x40303b>]'}, {'block_Idx': 30, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fbd>, <DisassemblerInsn "mov" for 0x400fc4>, <DisassemblerInsn "shr" for 0x400fc9>, <DisassemblerInsn "mov" for 0x400fcb>, <DisassemblerInsn "and" for 0x400fd2>, <DisassemblerInsn "cmp" for 0x400fd4>, <DisassemblerInsn "jne" for 0x400fd7>]'}, {'block_Idx': 240, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402143>, <DisassemblerInsn "mov" for 0x40214b>, <DisassemblerInsn "mov" for 0x402153>, <DisassemblerInsn "mov" for 0x40215b>, <DisassemblerInsn "and" for 0x402162>, <DisassemblerInsn "mov" for 0x402165>, <DisassemblerInsn "mov" for 0x40216c>, <DisassemblerInsn "mov" for 0x40216e>, <DisassemblerInsn "mov" for 0x402175>, <DisassemblerInsn "mov" for 0x40217a>, <DisassemblerInsn "cmp" for 0x402182>, <DisassemblerInsn "je" for 0x402185>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007dc>, <DisassemblerInsn "mov" for 0x4007e3>, <DisassemblerInsn "mov" for 0x4007ea>, <DisassemblerInsn "xor" for 0x4007f1>, <DisassemblerInsn "sub" for 0x4007f3>, <DisassemblerInsn "cmovb" for 0x4007f5>, <DisassemblerInsn "cmp" for 0x4007f8>, <DisassemblerInsn "cmovb" for 0x4007fa>, <DisassemblerInsn "mov" for 0x4007fd>, <DisassemblerInsn "mov" for 0x400804>, <DisassemblerInsn "mov" for 0x40080b>, <DisassemblerInsn "mov" for 0x400812>, <DisassemblerInsn "mov" for 0x400819>, <DisassemblerInsn "add" for 0x40081b>, <DisassemblerInsn "mov" for 0x40081d>, <DisassemblerInsn "mov" for 0x400824>, <DisassemblerInsn "cmp" for 0x400829>, <DisassemblerInsn "mov" for 0x40082b>, <DisassemblerInsn "jb" for 0x400832>]'}, {'block_Idx': 298, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4023bc>]'}, {'block_Idx': 27, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008ee>, <DisassemblerInsn "mov" for 0x4008f6>, <DisassemblerInsn "mov" for 0x4008fe>, <DisassemblerInsn "mov" for 0x400906>, <DisassemblerInsn "mov" for 0x400909>, <DisassemblerInsn "mov" for 0x400911>, <DisassemblerInsn "mov" for 0x400918>, <DisassemblerInsn "mov" for 0x40091a>, <DisassemblerInsn "mov" for 0x40091c>, <DisassemblerInsn "mov" for 0x40091e>, <DisassemblerInsn "mov" for 0x400925>, <DisassemblerInsn "mov" for 0x40092c>, <DisassemblerInsn "mov" for 0x400933>, <DisassemblerInsn "mov" for 0x40093a>, <DisassemblerInsn "mov" for 0x400941>, <DisassemblerInsn "mov" for 0x400948>, <DisassemblerInsn "mov" for 0x40094f>, <DisassemblerInsn "mov" for 0x400956>, <DisassemblerInsn "mov" for 0x40095d>, <DisassemblerInsn "add" for 0x40095f>, <DisassemblerInsn "add" for 0x400961>, <DisassemblerInsn "cmp" for 0x400963>, <DisassemblerInsn "mov" for 0x400965>, <DisassemblerInsn "mov" for 0x40096c>, <DisassemblerInsn "jbe" for 0x400973>]'}, {'block_Idx': 34, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4011c0>]'}, {'block_Idx': 87, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401568>]'}, {'block_Idx': 127, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e6c>, <DisassemblerInsn "mov" for 0x400e73>, <DisassemblerInsn "cmp" for 0x400e7a>, <DisassemblerInsn "mov" for 0x400e7d>, <DisassemblerInsn "jle" for 0x400e84>]'}, {'block_Idx': 185, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403d2a>, <DisassemblerInsn "mov" for 0x403d32>, <DisassemblerInsn "mov" for 0x403d3a>, <DisassemblerInsn "mov" for 0x403d41>, <DisassemblerInsn "mov" for 0x403d49>, <DisassemblerInsn "mov" for 0x403d4d>, <DisassemblerInsn "mov" for 0x403d52>, <DisassemblerInsn "mov" for 0x403d56>, <DisassemblerInsn "xor" for 0x403d5b>, <DisassemblerInsn "mov" for 0x403d5d>, <DisassemblerInsn "mov" for 0x403d61>, <DisassemblerInsn "mov" for 0x403d66>, <DisassemblerInsn "mov" for 0x403d6b>, <DisassemblerInsn "jmp" for 0x403d70>]'}, {'block_Idx': 63, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013cd>, <DisassemblerInsn "xor" for 0x4013d5>, <DisassemblerInsn "lea" for 0x4013d7>, <DisassemblerInsn "mov" for 0x4013de>, <DisassemblerInsn "call" for 0x4013e0>]'}, {'block_Idx': 206, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4034b6>, <DisassemblerInsn "mov" for 0x4034be>, <DisassemblerInsn "mov" for 0x4034c6>, <DisassemblerInsn "mov" for 0x4034ce>, <DisassemblerInsn "mov" for 0x4034d5>, <DisassemblerInsn "add" for 0x4034d8>, <DisassemblerInsn "mov" for 0x4034dc>, <DisassemblerInsn "mov" for 0x4034de>, <DisassemblerInsn "mov" for 0x4034e0>, <DisassemblerInsn "mov" for 0x4034e2>, <DisassemblerInsn "mov" for 0x4034e9>, <DisassemblerInsn "mov" for 0x4034f0>, <DisassemblerInsn "mov" for 0x4034f8>, <DisassemblerInsn "jmp" for 0x403500>]'}, {'block_Idx': 361, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c43>, <DisassemblerInsn "mov" for 0x402c4b>, <DisassemblerInsn "mov" for 0x402c53>, <DisassemblerInsn "xor" for 0x402c5a>, <DisassemblerInsn "cmp" for 0x402c5c>, <DisassemblerInsn "mov" for 0x402c60>, <DisassemblerInsn "mov" for 0x402c68>, <DisassemblerInsn "mov" for 0x402c6f>, <DisassemblerInsn "je" for 0x402c77>]'}, {'block_Idx': 245, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d79>, <DisassemblerInsn "mov" for 0x401d80>, <DisassemblerInsn "mov" for 0x401d87>, <DisassemblerInsn "mov" for 0x401d8f>, <DisassemblerInsn "add" for 0x401d97>, <DisassemblerInsn "shl" for 0x401d9b>, <DisassemblerInsn "add" for 0x401d9f>, <DisassemblerInsn "mov" for 0x401da2>, <DisassemblerInsn "xor" for 0x401daa>, <DisassemblerInsn "mov" for 0x401dac>, <DisassemblerInsn "mov" for 0x401db3>, <DisassemblerInsn "mov" for 0x401dba>, <DisassemblerInsn "jmp" for 0x401dc2>]'}, {'block_Idx': 39, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4009a3>, <DisassemblerInsn "mov" for 0x4009ab>, <DisassemblerInsn "mov" for 0x4009b3>, <DisassemblerInsn "mov" for 0x4009b9>, <DisassemblerInsn "xor" for 0x4009bb>, <DisassemblerInsn "mov" for 0x4009bd>, <DisassemblerInsn "mov" for 0x4009c4>, <DisassemblerInsn "mov" for 0x4009cb>, <DisassemblerInsn "mov" for 0x4009d2>, <DisassemblerInsn "mov" for 0x4009da>, <DisassemblerInsn "mov" for 0x4009e2>, <DisassemblerInsn "mov" for 0x4009e9>, <DisassemblerInsn "mov" for 0x4009f0>, <DisassemblerInsn "add" for 0x4009f7>, <DisassemblerInsn "mov" for 0x4009f9>, <DisassemblerInsn "add" for 0x4009fb>, <DisassemblerInsn "movsxd" for 0x4009fe>, <DisassemblerInsn "call" for 0x400a01>]'}, {'block_Idx': 259, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402010>, <DisassemblerInsn "mov" for 0x402018>, <DisassemblerInsn "mov" for 0x40201f>, <DisassemblerInsn "mov" for 0x402026>, <DisassemblerInsn "mov" for 0x40202e>, <DisassemblerInsn "shr" for 0x402036>, <DisassemblerInsn "mov" for 0x40203a>, <DisassemblerInsn "add" for 0x40203d>, <DisassemblerInsn "mov" for 0x402041>, <DisassemblerInsn "add" for 0x402043>, <DisassemblerInsn "mov" for 0x402046>, <DisassemblerInsn "shl" for 0x40204d>, <DisassemblerInsn "mov" for 0x402050>, <DisassemblerInsn "mov" for 0x402057>, <DisassemblerInsn "sar" for 0x40205f>, <DisassemblerInsn "movsxd" for 0x402063>, <DisassemblerInsn "mov" for 0x402066>, <DisassemblerInsn "ror" for 0x40206a>, <DisassemblerInsn "ror" for 0x40206e>, <DisassemblerInsn "ror" for 0x402071>, <DisassemblerInsn "shl" for 0x402075>, <DisassemblerInsn "mov" for 0x402077>, <DisassemblerInsn "mov" for 0x40207e>, <DisassemblerInsn "xor" for 0x402081>, <DisassemblerInsn "sub" for 0x402083>, <DisassemblerInsn "shr" for 0x402086>, <DisassemblerInsn "mov" for 0x402088>, <DisassemblerInsn "add" for 0x40208f>, <DisassemblerInsn "mov" for 0x402091>, <DisassemblerInsn "or" for 0x402093>, <DisassemblerInsn "mov" for 0x402095>, <DisassemblerInsn "mov" for 0x40209c>, <DisassemblerInsn "mov" for 0x4020a4>, <DisassemblerInsn "mov" for 0x4020ac>, <DisassemblerInsn "mov" for 0x4020b3>, <DisassemblerInsn "mov" for 0x4020ba>, <DisassemblerInsn "sub" for 0x4020bf>, <DisassemblerInsn "mov" for 0x4020c1>, <DisassemblerInsn "shl" for 0x4020c8>, <DisassemblerInsn "mov" for 0x4020ca>, <DisassemblerInsn "sar" for 0x4020d1>, <DisassemblerInsn "mov" for 0x4020d3>, <DisassemblerInsn "mov" for 0x4020db>, <DisassemblerInsn "mov" for 0x4020de>, <DisassemblerInsn "add" for 0x4020e1>, <DisassemblerInsn "mov" for 0x4020e5>, <DisassemblerInsn "movsxd" for 0x4020ed>, <DisassemblerInsn "cmp" for 0x4020f0>, <DisassemblerInsn "jge" for 0x4020f3>]'}, {'block_Idx': 392, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402870>, <DisassemblerInsn "mov" for 0x402878>, <DisassemblerInsn "mov" for 0x40287f>, <DisassemblerInsn "mov" for 0x402886>, <DisassemblerInsn "mov" for 0x40288e>, <DisassemblerInsn "mov" for 0x402896>, <DisassemblerInsn "mov" for 0x40289e>, <DisassemblerInsn "add" for 0x4028a6>, <DisassemblerInsn "mov" for 0x4028aa>, <DisassemblerInsn "mov" for 0x4028b1>, <DisassemblerInsn "add" for 0x4028b4>, <DisassemblerInsn "mov" for 0x4028b7>, <DisassemblerInsn "mov" for 0x4028bf>, <DisassemblerInsn "mov" for 0x4028c3>, <DisassemblerInsn "or" for 0x4028c6>, <DisassemblerInsn "mov" for 0x4028ca>, <DisassemblerInsn "add" for 0x4028d2>, <DisassemblerInsn "mov" for 0x4028d6>, <DisassemblerInsn "mov" for 0x4028dd>, <DisassemblerInsn "add" for 0x4028df>, <DisassemblerInsn "mov" for 0x4028e2>, <DisassemblerInsn "mov" for 0x4028e9>, <DisassemblerInsn "add" for 0x4028ed>, <DisassemblerInsn "mov" for 0x4028f2>, <DisassemblerInsn "mov" for 0x4028f9>, <DisassemblerInsn "add" for 0x4028fc>, <DisassemblerInsn "mov" for 0x4028ff>, <DisassemblerInsn "mov" for 0x402907>, <DisassemblerInsn "add" for 0x40290c>, <DisassemblerInsn "mov" for 0x402911>, <DisassemblerInsn "mov" for 0x402918>, <DisassemblerInsn "add" for 0x40291a>, <DisassemblerInsn "mov" for 0x40291d>, <DisassemblerInsn "mov" for 0x402924>, <DisassemblerInsn "add" for 0x402929>, <DisassemblerInsn "mov" for 0x40292d>, <DisassemblerInsn "add" for 0x402935>, <DisassemblerInsn "mov" for 0x402939>, <DisassemblerInsn "cmp" for 0x402941>, <DisassemblerInsn "mov" for 0x402944>, <DisassemblerInsn "mov" for 0x402947>, <DisassemblerInsn "mov" for 0x40294f>, <DisassemblerInsn "mov" for 0x402951>, <DisassemblerInsn "mov" for 0x402958>, <DisassemblerInsn "mov" for 0x40295a>, <DisassemblerInsn "mov" for 0x402961>, <DisassemblerInsn "mov" for 0x402969>, <DisassemblerInsn "mov" for 0x402971>, <DisassemblerInsn "mov" for 0x402978>, <DisassemblerInsn "je" for 0x40297f>]'}, {'block_Idx': 209, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403df8>, <DisassemblerInsn "mov" for 0x403e00>, <DisassemblerInsn "mov" for 0x403e05>, <DisassemblerInsn "mov" for 0x403e09>, <DisassemblerInsn "mov" for 0x403e11>, <DisassemblerInsn "mov" for 0x403e15>, <DisassemblerInsn "mov" for 0x403e17>, <DisassemblerInsn "shl" for 0x403e19>, <DisassemblerInsn "mov" for 0x403e1b>, <DisassemblerInsn "mov" for 0x403e20>, <DisassemblerInsn "add" for 0x403e23>, <DisassemblerInsn "mov" for 0x403e27>, <DisassemblerInsn "mov" for 0x403e2a>, <DisassemblerInsn "mov" for 0x403e2c>, <DisassemblerInsn "mov" for 0x403e30>, <DisassemblerInsn "mov" for 0x403e35>, <DisassemblerInsn "jmp" for 0x403e3a>]'}, {'block_Idx': 136, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f8e>, <DisassemblerInsn "mov" for 0x400f96>, <DisassemblerInsn "mov" for 0x400f9c>, <DisassemblerInsn "cmp" for 0x400fa3>, <DisassemblerInsn "jle" for 0x400fa6>]'}, {'block_Idx': 66, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401091>, <DisassemblerInsn "mov" for 0x401098>, <DisassemblerInsn "mov" for 0x4010a0>, <DisassemblerInsn "mov" for 0x4010a7>, <DisassemblerInsn "sar" for 0x4010ae>, <DisassemblerInsn "movsxd" for 0x4010b1>, <DisassemblerInsn "mov" for 0x4010b4>, <DisassemblerInsn "ror" for 0x4010b7>, <DisassemblerInsn "ror" for 0x4010bb>, <DisassemblerInsn "ror" for 0x4010be>, <DisassemblerInsn "shl" for 0x4010c2>, <DisassemblerInsn "shr" for 0x4010c4>, <DisassemblerInsn "and" for 0x4010c7>, <DisassemblerInsn "cmp" for 0x4010cc>, <DisassemblerInsn "je" for 0x4010d1>]'}, {'block_Idx': 41, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d91>, <DisassemblerInsn "cmp" for 0x400d99>, <DisassemblerInsn "jne" for 0x400d9c>]'}, {'block_Idx': 102, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015bf>, <DisassemblerInsn "sub" for 0x4015c6>, <DisassemblerInsn "je" for 0x4015c9>]'}, {'block_Idx': 40, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400fdd>, <DisassemblerInsn "mov" for 0x400fe5>, <DisassemblerInsn "mov" for 0x400fed>, <DisassemblerInsn "mov" for 0x400fef>, <DisassemblerInsn "mov" for 0x400ff2>, <DisassemblerInsn "mov" for 0x400ffa>, <DisassemblerInsn "jmp" for 0x401001>]'}, {'block_Idx': 318, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402398>]'}, {'block_Idx': 380, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4026d2>, <DisassemblerInsn "mov" for 0x4026d9>, <DisassemblerInsn "mov" for 0x4026e0>, <DisassemblerInsn "and" for 0x4026e8>, <DisassemblerInsn "mov" for 0x4026ec>, <DisassemblerInsn "mov" for 0x4026f4>, <DisassemblerInsn "xor" for 0x4026f9>, <DisassemblerInsn "mov" for 0x4026fb>, <DisassemblerInsn "mov" for 0x402703>, <DisassemblerInsn "mov" for 0x40270a>, <DisassemblerInsn "mov" for 0x402711>, <DisassemblerInsn "jmp" for 0x402719>]'}, {'block_Idx': 130, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f47>, <DisassemblerInsn "mov" for 0x400f4f>, <DisassemblerInsn "mov" for 0x400f56>, <DisassemblerInsn "cmp" for 0x400f5d>, <DisassemblerInsn "jae" for 0x400f5f>]'}, {'block_Idx': 141, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ea4>, <DisassemblerInsn "mov" for 0x400eac>, <DisassemblerInsn "mov" for 0x400eaf>, <DisassemblerInsn "mov" for 0x400eb7>, <DisassemblerInsn "mov" for 0x400eba>, <DisassemblerInsn "cmp" for 0x400ebf>, <DisassemblerInsn "mov" for 0x400ec2>, <DisassemblerInsn "jle" for 0x400eca>]'}, {'block_Idx': 238, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401f72>]'}, {'block_Idx': 233, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401d66>]'}, {'block_Idx': 249, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402bf1>, <DisassemblerInsn "mov" for 0x402bf9>, <DisassemblerInsn "mov" for 0x402c01>, <DisassemblerInsn "and" for 0x402c08>, <DisassemblerInsn "add" for 0x402c0b>, <DisassemblerInsn "mov" for 0x402c0e>, <DisassemblerInsn "call" for 0x402c10>]'}, {'block_Idx': 325, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023c1>, <DisassemblerInsn "mov" for 0x4023c8>, <DisassemblerInsn "mov" for 0x4023d0>, <DisassemblerInsn "add" for 0x4023d2>, <DisassemblerInsn "mov" for 0x4023d5>, <DisassemblerInsn "mov" for 0x4023d7>, <DisassemblerInsn "mov" for 0x4023da>, <DisassemblerInsn "cmp" for 0x4023e1>, <DisassemblerInsn "je" for 0x4023e4>]'}, {'block_Idx': 405, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40298a>, <DisassemblerInsn "mov" for 0x402992>, <DisassemblerInsn "mov" for 0x402999>, <DisassemblerInsn "mov" for 0x4029a1>, <DisassemblerInsn "mov" for 0x4029a8>, <DisassemblerInsn "mov" for 0x4029b0>, <DisassemblerInsn "mov" for 0x4029b8>, <DisassemblerInsn "add" for 0x4029c0>, <DisassemblerInsn "mov" for 0x4029c4>, <DisassemblerInsn "mov" for 0x4029cb>, <DisassemblerInsn "add" for 0x4029cd>, <DisassemblerInsn "mov" for 0x4029d0>, <DisassemblerInsn "mov" for 0x4029d7>, <DisassemblerInsn "add" for 0x4029da>, <DisassemblerInsn "mov" for 0x4029dd>, <DisassemblerInsn "mov" for 0x4029e5>, <DisassemblerInsn "add" for 0x4029e9>, <DisassemblerInsn "mov" for 0x4029ee>, <DisassemblerInsn "mov" for 0x4029f5>, <DisassemblerInsn "add" for 0x4029f7>, <DisassemblerInsn "mov" for 0x4029f9>, <DisassemblerInsn "mov" for 0x402a00>, <DisassemblerInsn "add" for 0x402a02>, <DisassemblerInsn "mov" for 0x402a05>, <DisassemblerInsn "mov" for 0x402a0c>, <DisassemblerInsn "add" for 0x402a11>, <DisassemblerInsn "mov" for 0x402a15>, <DisassemblerInsn "add" for 0x402a1d>, <DisassemblerInsn "mov" for 0x402a21>, <DisassemblerInsn "cmp" for 0x402a29>, <DisassemblerInsn "mov" for 0x402a2c>, <DisassemblerInsn "mov" for 0x402a2f>, <DisassemblerInsn "mov" for 0x402a37>, <DisassemblerInsn "mov" for 0x402a3a>, <DisassemblerInsn "mov" for 0x402a42>, <DisassemblerInsn "mov" for 0x402a45>, <DisassemblerInsn "mov" for 0x402a4d>, <DisassemblerInsn "mov" for 0x402a50>, <DisassemblerInsn "mov" for 0x402a58>, <DisassemblerInsn "mov" for 0x402a60>, <DisassemblerInsn "mov" for 0x402a68>, <DisassemblerInsn "mov" for 0x402a6f>, <DisassemblerInsn "mov" for 0x402a76>, <DisassemblerInsn "je" for 0x402a7d>]'}, {'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c33>, <DisassemblerInsn "mov" for 0x401c3a>, <DisassemblerInsn "mov" for 0x401c41>, <DisassemblerInsn "mov" for 0x401c49>, <DisassemblerInsn "mov" for 0x401c51>, <DisassemblerInsn "mov" for 0x401c58>, <DisassemblerInsn "sar" for 0x401c5a>, <DisassemblerInsn "mov" for 0x401c5d>, <DisassemblerInsn "movsxd" for 0x401c64>, <DisassemblerInsn "mov" for 0x401c67>, <DisassemblerInsn "mov" for 0x401c6b>, <DisassemblerInsn "and" for 0x401c6d>, <DisassemblerInsn "mov" for 0x401c70>, <DisassemblerInsn "movzx" for 0x401c77>, <DisassemblerInsn "add" for 0x401c7b>, <DisassemblerInsn "mov" for 0x401c7e>, <DisassemblerInsn "mov" for 0x401c85>, <DisassemblerInsn "mov" for 0x401c87>, <DisassemblerInsn "shr" for 0x401c8c>, <DisassemblerInsn "mov" for 0x401c8e>, <DisassemblerInsn "mov" for 0x401c95>, <DisassemblerInsn "and" for 0x401c9c>, <DisassemblerInsn "mov" for 0x401c9e>, <DisassemblerInsn "add" for 0x401ca5>, <DisassemblerInsn "mov" for 0x401ca8>, <DisassemblerInsn "cmp" for 0x401caf>, <DisassemblerInsn "mov" for 0x401cb2>, <DisassemblerInsn "mov" for 0x401cb9>, <DisassemblerInsn "je" for 0x401cc0>]'}, {'block_Idx': 204, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40366b>, <DisassemblerInsn "mov" for 0x403673>, <DisassemblerInsn "mov" for 0x40367a>, <DisassemblerInsn "mov" for 0x403681>, <DisassemblerInsn "mov" for 0x403689>, <DisassemblerInsn "mov" for 0x403691>, <DisassemblerInsn "mov" for 0x403699>, <DisassemblerInsn "xor" for 0x4036a1>, <DisassemblerInsn "cmp" for 0x4036a3>, <DisassemblerInsn "mov" for 0x4036a7>, <DisassemblerInsn "mov" for 0x4036af>, <DisassemblerInsn "mov" for 0x4036b7>, <DisassemblerInsn "mov" for 0x4036bf>, <DisassemblerInsn "mov" for 0x4036c6>, <DisassemblerInsn "mov" for 0x4036c8>, <DisassemblerInsn "mov" for 0x4036cf>, <DisassemblerInsn "mov" for 0x4036d1>, <DisassemblerInsn "mov" for 0x4036d8>, <DisassemblerInsn "mov" for 0x4036df>, <DisassemblerInsn "mov" for 0x4036e7>, <DisassemblerInsn "je" for 0x4036ef>]'}, {'block_Idx': 203, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40399b>, <DisassemblerInsn "mov" for 0x4039a3>, <DisassemblerInsn "mov" for 0x4039ab>, <DisassemblerInsn "mov" for 0x4039b3>, <DisassemblerInsn "mov" for 0x4039ba>, <DisassemblerInsn "mov" for 0x4039c1>, <DisassemblerInsn "mov" for 0x4039c9>, <DisassemblerInsn "sub" for 0x4039cc>, <DisassemblerInsn "mov" for 0x4039ce>, <DisassemblerInsn "shl" for 0x4039d0>, <DisassemblerInsn "mov" for 0x4039d2>, <DisassemblerInsn "mov" for 0x4039da>, <DisassemblerInsn "add" for 0x4039dd>, <DisassemblerInsn "mov" for 0x4039e1>, <DisassemblerInsn "mov" for 0x4039e4>, <DisassemblerInsn "mov" for 0x4039e6>, <DisassemblerInsn "mov" for 0x4039ed>, <DisassemblerInsn "mov" for 0x4039f5>, <DisassemblerInsn "jmp" for 0x4039fd>]'}, {'block_Idx': 165, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403eba>, <DisassemblerInsn "mov" for 0x403ec2>, <DisassemblerInsn "mov" for 0x403eca>, <DisassemblerInsn "mov" for 0x403ed2>, <DisassemblerInsn "imul" for 0x403ed9>, <DisassemblerInsn "mov" for 0x403edc>, <DisassemblerInsn "mov" for 0x403ee1>, <DisassemblerInsn "cmp" for 0x403ee6>, <DisassemblerInsn "cmove" for 0x403ee9>, <DisassemblerInsn "imul" for 0x403eec>, <DisassemblerInsn "mov" for 0x403eef>, <DisassemblerInsn "mov" for 0x403ef1>, <DisassemblerInsn "mov" for 0x403ef8>, <DisassemblerInsn "mov" for 0x403f00>, <DisassemblerInsn "add" for 0x403f02>, <DisassemblerInsn "mov" for 0x403f05>, <DisassemblerInsn "cdq" for 0x403f0a>, <DisassemblerInsn "idiv" for 0x403f0b>, <DisassemblerInsn "mov" for 0x403f0d>, <DisassemblerInsn "cmp" for 0x403f11>, <DisassemblerInsn "jle" for 0x403f13>]'}, {'block_Idx': 403, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402985>]'}, {'block_Idx': 179, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b8c>, <DisassemblerInsn "mov" for 0x401b94>, <DisassemblerInsn "mov" for 0x401b9b>, <DisassemblerInsn "mov" for 0x401ba3>, <DisassemblerInsn "mov" for 0x401baa>, <DisassemblerInsn "sar" for 0x401bac>, <DisassemblerInsn "movsxd" for 0x401baf>, <DisassemblerInsn "mov" for 0x401bb2>, <DisassemblerInsn "ror" for 0x401bb5>, <DisassemblerInsn "ror" for 0x401bb9>, <DisassemblerInsn "ror" for 0x401bbc>, <DisassemblerInsn "and" for 0x401bc0>, <DisassemblerInsn "shl" for 0x401bc3>, <DisassemblerInsn "mov" for 0x401bc5>, <DisassemblerInsn "shr" for 0x401bc7>, <DisassemblerInsn "mov" for 0x401bca>, <DisassemblerInsn "mov" for 0x401bd1>, <DisassemblerInsn "add" for 0x401bd3>, <DisassemblerInsn "mov" for 0x401bd6>, <DisassemblerInsn "mov" for 0x401bd8>, <DisassemblerInsn "sar" for 0x401bda>, <DisassemblerInsn "movsxd" for 0x401bdd>, <DisassemblerInsn "mov" for 0x401be0>, <DisassemblerInsn "and" for 0x401be3>, <DisassemblerInsn "movzx" for 0x401be6>, <DisassemblerInsn "add" for 0x401be9>, <DisassemblerInsn "mov" for 0x401bec>, <DisassemblerInsn "mov" for 0x401bee>, <DisassemblerInsn "shr" for 0x401bf3>, <DisassemblerInsn "mov" for 0x401bf5>, <DisassemblerInsn "and" for 0x401bfc>, <DisassemblerInsn "xor" for 0x401bfe>, <DisassemblerInsn "mov" for 0x401c00>, <DisassemblerInsn "cmp" for 0x401c05>, <DisassemblerInsn "mov" for 0x401c08>, <DisassemblerInsn "mov" for 0x401c0a>, <DisassemblerInsn "mov" for 0x401c11>, <DisassemblerInsn "mov" for 0x401c18>, <DisassemblerInsn "mov" for 0x401c1f>, <DisassemblerInsn "mov" for 0x401c26>, <DisassemblerInsn "je" for 0x401c2d>]'}, {'block_Idx': 224, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403ca1>, <DisassemblerInsn "mov" for 0x403ca9>, <DisassemblerInsn "mov" for 0x403cb0>, <DisassemblerInsn "mov" for 0x403cb8>, <DisassemblerInsn "add" for 0x403cc0>, <DisassemblerInsn "movsxd" for 0x403cc4>, <DisassemblerInsn "cmp" for 0x403cc7>, <DisassemblerInsn "mov" for 0x403cca>, <DisassemblerInsn "mov" for 0x403ccc>, <DisassemblerInsn "mov" for 0x403cd3>, <DisassemblerInsn "mov" for 0x403cdb>, <DisassemblerInsn "mov" for 0x403ce3>, <DisassemblerInsn "mov" for 0x403ceb>, <DisassemblerInsn "jl" for 0x403cf2>]'}, {'block_Idx': 126, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e32>, <DisassemblerInsn "mov" for 0x400e3a>, <DisassemblerInsn "mov" for 0x400e41>, <DisassemblerInsn "mov" for 0x400e48>, <DisassemblerInsn "mov" for 0x400e50>, <DisassemblerInsn "imul" for 0x400e52>, <DisassemblerInsn "imul" for 0x400e55>, <DisassemblerInsn "add" for 0x400e58>, <DisassemblerInsn "mov" for 0x400e5b>, <DisassemblerInsn "cdq" for 0x400e60>, <DisassemblerInsn "idiv" for 0x400e61>, <DisassemblerInsn "mov" for 0x400e63>, <DisassemblerInsn "mov" for 0x400e65>, <DisassemblerInsn "mov" for 0x400e6c>, <DisassemblerInsn "mov" for 0x400e73>, <DisassemblerInsn "cmp" for 0x400e7a>, <DisassemblerInsn "mov" for 0x400e7d>, <DisassemblerInsn "jle" for 0x400e84>]'}, {'block_Idx': 237, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f34>, <DisassemblerInsn "mov" for 0x401f3c>, <DisassemblerInsn "mov" for 0x401f44>, <DisassemblerInsn "mov" for 0x401f4c>, <DisassemblerInsn "mov" for 0x401f53>, <DisassemblerInsn "add" for 0x401f56>, <DisassemblerInsn "mov" for 0x401f5a>, <DisassemblerInsn "movsxd" for 0x401f62>, <DisassemblerInsn "cmp" for 0x401f65>, <DisassemblerInsn "mov" for 0x401f68>, <DisassemblerInsn "jl" for 0x401f70>]'}, {'block_Idx': 415, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402a83>]'}, {'block_Idx': 408, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402be0>]'}, {'block_Idx': 62, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013ea>, <DisassemblerInsn "mov" for 0x4013f2>, <DisassemblerInsn "mov" for 0x4013fa>, <DisassemblerInsn "ror" for 0x4013fd>, <DisassemblerInsn "ror" for 0x401401>, <DisassemblerInsn "ror" for 0x401404>, <DisassemblerInsn "shr" for 0x401408>, <DisassemblerInsn "mov" for 0x40140b>, <DisassemblerInsn "mov" for 0x401412>, <DisassemblerInsn "mov" for 0x401418>, <DisassemblerInsn "xor" for 0x40141a>, <DisassemblerInsn "shr" for 0x401420>, <DisassemblerInsn "cmp" for 0x401423>, <DisassemblerInsn "cmovb" for 0x401429>, <DisassemblerInsn "mov" for 0x40142c>, <DisassemblerInsn "xor" for 0x401431>, <DisassemblerInsn "cmp" for 0x401433>, <DisassemblerInsn "cmovb" for 0x401439>, <DisassemblerInsn "mov" for 0x40143c>, <DisassemblerInsn "and" for 0x40143e>, <DisassemblerInsn "mov" for 0x401444>, <DisassemblerInsn "shr" for 0x401446>, <DisassemblerInsn "mov" for 0x401449>, <DisassemblerInsn "or" for 0x40144b>, <DisassemblerInsn "cmp" for 0x40144e>, <DisassemblerInsn "cmove" for 0x401451>, <DisassemblerInsn "cmp" for 0x401454>, <DisassemblerInsn "cmove" for 0x401457>, <DisassemblerInsn "mov" for 0x40145a>, <DisassemblerInsn "mov" for 0x40145c>, <DisassemblerInsn "mov" for 0x40145e>, <DisassemblerInsn "movzx" for 0x401465>, <DisassemblerInsn "add" for 0x401469>, <DisassemblerInsn "mov" for 0x40146b>, <DisassemblerInsn "sub" for 0x401470>, <DisassemblerInsn "mov" for 0x401472>, <DisassemblerInsn "cmp" for 0x401479>, <DisassemblerInsn "je" for 0x40147c>]'}, {'block_Idx': 236, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ee3>, <DisassemblerInsn "cmp" for 0x402eeb>, <DisassemblerInsn "jle" for 0x402eee>]'}, {'block_Idx': 118, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017a6>, <DisassemblerInsn "mov" for 0x4017ad>, <DisassemblerInsn "movsxd" for 0x4017b4>, <DisassemblerInsn "lea" for 0x4017b7>, <DisassemblerInsn "mov" for 0x4017be>, <DisassemblerInsn "mov" for 0x4017c1>, <DisassemblerInsn "mov" for 0x4017c8>, <DisassemblerInsn "jmp" for 0x4017cf>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403b66>, <DisassemblerInsn "mov" for 0x403b6e>, <DisassemblerInsn "mov" for 0x403b76>, <DisassemblerInsn "mov" for 0x403b7e>, <DisassemblerInsn "mov" for 0x403b86>, <DisassemblerInsn "mov" for 0x403b8e>, <DisassemblerInsn "mov" for 0x403b96>, <DisassemblerInsn "mov" for 0x403b9e>, <DisassemblerInsn "mov" for 0x403ba6>, <DisassemblerInsn "mov" for 0x403bae>, <DisassemblerInsn "mov" for 0x403bb6>, <DisassemblerInsn "mov" for 0x403bbe>, <DisassemblerInsn "mov" for 0x403bc6>, <DisassemblerInsn "mov" for 0x403bc9>, <DisassemblerInsn "mov" for 0x403bcc>, <DisassemblerInsn "mov" for 0x403bd3>, <DisassemblerInsn "add" for 0x403bd5>, <DisassemblerInsn "mov" for 0x403bd7>, <DisassemblerInsn "mov" for 0x403bd9>, <DisassemblerInsn "shl" for 0x403be0>, <DisassemblerInsn "mov" for 0x403be2>, <DisassemblerInsn "cmp" for 0x403be9>, <DisassemblerInsn "je" for 0x403bec>]'}, {'block_Idx': 24, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40118a>, <DisassemblerInsn "mov" for 0x401191>, <DisassemblerInsn "mov" for 0x401199>, <DisassemblerInsn "add" for 0x40119c>, <DisassemblerInsn "xor" for 0x40119f>, <DisassemblerInsn "cmp" for 0x4011a1>, <DisassemblerInsn "mov" for 0x4011a3>, <DisassemblerInsn "mov" for 0x4011a5>, <DisassemblerInsn "mov" for 0x4011ac>, <DisassemblerInsn "mov" for 0x4011b3>, <DisassemblerInsn "je" for 0x4011ba>]'}, {'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "push" for 0x400680>, <DisassemblerInsn "sub" for 0x400681>, <DisassemblerInsn "mov" for 0x400688>, <DisassemblerInsn "mov" for 0x400690>, <DisassemblerInsn "mov" for 0x400698>, <DisassemblerInsn "mov" for 0x4006a0>, <DisassemblerInsn "mov" for 0x4006a7>, <DisassemblerInsn "mov" for 0x4006af>, <DisassemblerInsn "mov" for 0x4006b2>, <DisassemblerInsn "mov" for 0x4006ba>, <DisassemblerInsn "mov" for 0x4006c2>, <DisassemblerInsn "mov" for 0x4006c4>, <DisassemblerInsn "mov" for 0x4006cb>, <DisassemblerInsn "mov" for 0x4006d1>, <DisassemblerInsn "add" for 0x4006d4>, <DisassemblerInsn "mov" for 0x4006d8>, <DisassemblerInsn "mov" for 0x4006e0>, <DisassemblerInsn "cmp" for 0x4006e3>, <DisassemblerInsn "mov" for 0x4006e6>, <DisassemblerInsn "jne" for 0x4006ed>]'}, {'block_Idx': 155, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40309c>, <DisassemblerInsn "mov" for 0x4030a4>, <DisassemblerInsn "mov" for 0x4030a6>, <DisassemblerInsn "jmp" for 0x4030ad>]'}, {'block_Idx': 231, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ed7>, <DisassemblerInsn "cmp" for 0x402ede>, <DisassemblerInsn "je" for 0x402ee1>]'}, {'block_Idx': 184, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4031cf>, <DisassemblerInsn "mov" for 0x4031d7>, <DisassemblerInsn "mov" for 0x4031df>, <DisassemblerInsn "mov" for 0x4031e6>, <DisassemblerInsn "mov" for 0x4031ee>, <DisassemblerInsn "mov" for 0x4031f6>, <DisassemblerInsn "xor" for 0x4031fb>, <DisassemblerInsn "cmp" for 0x4031fd>, <DisassemblerInsn "mov" for 0x403201>, <DisassemblerInsn "mov" for 0x403209>, <DisassemblerInsn "mov" for 0x403210>, <DisassemblerInsn "mov" for 0x403217>, <DisassemblerInsn "mov" for 0x40321f>, <DisassemblerInsn "mov" for 0x403227>, <DisassemblerInsn "jne" for 0x40322f>]'}, {'block_Idx': 148, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ecc>, <DisassemblerInsn "mov" for 0x400ed4>, <DisassemblerInsn "mov" for 0x400edc>, <DisassemblerInsn "mov" for 0x400ee4>, <DisassemblerInsn "mov" for 0x400ee6>, <DisassemblerInsn "shl" for 0x400eeb>, <DisassemblerInsn "mov" for 0x400eee>, <DisassemblerInsn "call" for 0x400ef5>]'}, {'block_Idx': 200, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401cc6>, <DisassemblerInsn "mov" for 0x401ccd>, <DisassemblerInsn "mov" for 0x401cd4>, <DisassemblerInsn "mov" for 0x401cdc>, <DisassemblerInsn "sub" for 0x401ce3>, <DisassemblerInsn "mov" for 0x401ce5>, <DisassemblerInsn "mov" for 0x401ce7>, <DisassemblerInsn "mov" for 0x401cee>, <DisassemblerInsn "mov" for 0x401cf5>, <DisassemblerInsn "mov" for 0x401cfc>, <DisassemblerInsn "mov" for 0x401d03>, <DisassemblerInsn "mov" for 0x401d0a>, <DisassemblerInsn "mov" for 0x401d11>, <DisassemblerInsn "mov" for 0x401d18>, <DisassemblerInsn "mov" for 0x401d1f>, <DisassemblerInsn "cmp" for 0x401d26>, <DisassemblerInsn "jle" for 0x401d29>]'}, {'block_Idx': 239, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d68>, <DisassemblerInsn "cmp" for 0x401d70>, <DisassemblerInsn "jle" for 0x401d73>]'}, {'block_Idx': 169, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401905>]'}, {'block_Idx': 160, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400efa>, <DisassemblerInsn "mov" for 0x400f02>, <DisassemblerInsn "mov" for 0x400f0a>, <DisassemblerInsn "mov" for 0x400f0d>, <DisassemblerInsn "mov" for 0x400f15>, <DisassemblerInsn "add" for 0x400f1a>, <DisassemblerInsn "mov" for 0x400f1e>, <DisassemblerInsn "movsxd" for 0x400f26>, <DisassemblerInsn "cmp" for 0x400f29>, <DisassemblerInsn "mov" for 0x400f2c>, <DisassemblerInsn "jl" for 0x400f34>]'}, {'block_Idx': 156, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401aa7>, <DisassemblerInsn "mov" for 0x401aae>, <DisassemblerInsn "cmp" for 0x401ab5>, <DisassemblerInsn "mov" for 0x401ab8>, <DisassemblerInsn "je" for 0x401abf>]'}, {'block_Idx': 147, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f36>, <DisassemblerInsn "mov" for 0x400f3e>, <DisassemblerInsn "mov" for 0x400f40>, <DisassemblerInsn "mov" for 0x400f47>, <DisassemblerInsn "mov" for 0x400f4f>, <DisassemblerInsn "mov" for 0x400f56>, <DisassemblerInsn "cmp" for 0x400f5d>, <DisassemblerInsn "jae" for 0x400f5f>]'}, {'block_Idx': 50, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c09>, <DisassemblerInsn "mov" for 0x400c11>, <DisassemblerInsn "mov" for 0x400c19>, <DisassemblerInsn "mov" for 0x400c20>, <DisassemblerInsn "mov" for 0x400c28>, <DisassemblerInsn "sar" for 0x400c2a>, <DisassemblerInsn "movsxd" for 0x400c2d>, <DisassemblerInsn "mov" for 0x400c30>, <DisassemblerInsn "mov" for 0x400c33>, <DisassemblerInsn "and" for 0x400c35>, <DisassemblerInsn "mov" for 0x400c38>, <DisassemblerInsn "movzx" for 0x400c3f>, <DisassemblerInsn "mov" for 0x400c42>, <DisassemblerInsn "mov" for 0x400c49>, <DisassemblerInsn "add" for 0x400c4b>, <DisassemblerInsn "mov" for 0x400c4e>, <DisassemblerInsn "sar" for 0x400c50>, <DisassemblerInsn "movsxd" for 0x400c53>, <DisassemblerInsn "mov" for 0x400c56>, <DisassemblerInsn "ror" for 0x400c59>, <DisassemblerInsn "ror" for 0x400c5d>, <DisassemblerInsn "ror" for 0x400c60>, <DisassemblerInsn "and" for 0x400c64>, <DisassemblerInsn "shl" for 0x400c67>, <DisassemblerInsn "mov" for 0x400c69>, <DisassemblerInsn "shr" for 0x400c70>, <DisassemblerInsn "mov" for 0x400c73>, <DisassemblerInsn "mov" for 0x400c7a>, <DisassemblerInsn "add" for 0x400c7c>, <DisassemblerInsn "sar" for 0x400c7f>, <DisassemblerInsn "movsxd" for 0x400c82>, <DisassemblerInsn "mov" for 0x400c85>, <DisassemblerInsn "ror" for 0x400c88>, <DisassemblerInsn "ror" for 0x400c8c>, <DisassemblerInsn "ror" for 0x400c8f>, <DisassemblerInsn "shl" for 0x400c93>, <DisassemblerInsn "mov" for 0x400c95>, <DisassemblerInsn "shr" for 0x400c9c>, <DisassemblerInsn "mov" for 0x400c9f>, <DisassemblerInsn "add" for 0x400ca2>, <DisassemblerInsn "shl" for 0x400ca6>, <DisassemblerInsn "sar" for 0x400ca9>, <DisassemblerInsn "movsxd" for 0x400cad>, <DisassemblerInsn "mov" for 0x400cb0>, <DisassemblerInsn "ror" for 0x400cb4>, <DisassemblerInsn "ror" for 0x400cb8>, <DisassemblerInsn "ror" for 0x400cbb>, <DisassemblerInsn "shl" for 0x400cbf>, <DisassemblerInsn "mov" for 0x400cc1>, <DisassemblerInsn "shr" for 0x400cc9>, <DisassemblerInsn "add" for 0x400ccc>, <DisassemblerInsn "mov" for 0x400ccf>, <DisassemblerInsn "mov" for 0x400cd6>, <DisassemblerInsn "or" for 0x400cd8>, <DisassemblerInsn "mov" for 0x400cda>, <DisassemblerInsn "shl" for 0x400ce1>, <DisassemblerInsn "mov" for 0x400ce4>, <DisassemblerInsn "add" for 0x400ceb>, <DisassemblerInsn "mov" for 0x400ced>, <DisassemblerInsn "mov" for 0x400cef>, <DisassemblerInsn "cmp" for 0x400cf6>, <DisassemblerInsn "jle" for 0x400cf8>]'}, {'block_Idx': 252, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f77>, <DisassemblerInsn "mov" for 0x401f7f>, <DisassemblerInsn "mov" for 0x401f86>, <DisassemblerInsn "mov" for 0x401f8d>, <DisassemblerInsn "mov" for 0x401f95>, <DisassemblerInsn "mov" for 0x401f9d>, <DisassemblerInsn "mov" for 0x401fa4>, <DisassemblerInsn "mov" for 0x401fab>, <DisassemblerInsn "sar" for 0x401fad>, <DisassemblerInsn "movsxd" for 0x401fb0>, <DisassemblerInsn "mov" for 0x401fb3>, <DisassemblerInsn "ror" for 0x401fb6>, <DisassemblerInsn "ror" for 0x401fba>, <DisassemblerInsn "ror" for 0x401fbd>, <DisassemblerInsn "and" for 0x401fc1>, <DisassemblerInsn "mov" for 0x401fc4>, <DisassemblerInsn "shl" for 0x401fcb>, <DisassemblerInsn "mov" for 0x401fcd>, <DisassemblerInsn "cmp" for 0x401fd4>, <DisassemblerInsn "jge" for 0x401fd7>]'}, {'block_Idx': 172, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x403131>]'}, {'block_Idx': 115, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401714>]'}, {'block_Idx': 251, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f17>, <DisassemblerInsn "mov" for 0x402f1f>, <DisassemblerInsn "mov" for 0x402f27>, <DisassemblerInsn "mov" for 0x402f2e>, <DisassemblerInsn "shl" for 0x402f31>, <DisassemblerInsn "mov" for 0x402f33>, <DisassemblerInsn "mov" for 0x402f3b>, <DisassemblerInsn "mov" for 0x402f42>, <DisassemblerInsn "add" for 0x402f45>, <DisassemblerInsn "mov" for 0x402f49>, <DisassemblerInsn "movsxd" for 0x402f51>, <DisassemblerInsn "cmp" for 0x402f54>, <DisassemblerInsn "mov" for 0x402f57>, <DisassemblerInsn "jl" for 0x402f5f>]'}, {'block_Idx': 394, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40260b>, <DisassemblerInsn "mov" for 0x402612>, <DisassemblerInsn "mov" for 0x402619>, <DisassemblerInsn "mov" for 0x402620>, <DisassemblerInsn "and" for 0x402628>, <DisassemblerInsn "mov" for 0x40262c>, <DisassemblerInsn "mov" for 0x402634>, <DisassemblerInsn "xor" for 0x402639>, <DisassemblerInsn "mov" for 0x40263b>, <DisassemblerInsn "mov" for 0x402643>, <DisassemblerInsn "mov" for 0x40264a>, <DisassemblerInsn "mov" for 0x402651>, <DisassemblerInsn "mov" for 0x402658>, <DisassemblerInsn "jmp" for 0x402660>]'}, {'block_Idx': 131, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e8a>, <DisassemblerInsn "mov" for 0x400e92>, <DisassemblerInsn "mov" for 0x400e99>, <DisassemblerInsn "shl" for 0x400e9c>, <DisassemblerInsn "call" for 0x400e9f>]'}, {'block_Idx': 133, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401855>, <DisassemblerInsn "mov" for 0x40185c>, <DisassemblerInsn "mov" for 0x401864>, <DisassemblerInsn "sar" for 0x401866>, <DisassemblerInsn "movsxd" for 0x401869>, <DisassemblerInsn "mov" for 0x40186c>, <DisassemblerInsn "ror" for 0x40186f>, <DisassemblerInsn "ror" for 0x401873>, <DisassemblerInsn "ror" for 0x401876>, <DisassemblerInsn "and" for 0x40187a>, <DisassemblerInsn "shl" for 0x40187d>, <DisassemblerInsn "mov" for 0x40187f>, <DisassemblerInsn "shr" for 0x401886>, <DisassemblerInsn "add" for 0x401889>, <DisassemblerInsn "mov" for 0x40188c>, <DisassemblerInsn "mov" for 0x401893>, <DisassemblerInsn "jmp" for 0x40189a>]'}, {'block_Idx': 177, 'blockInsts': '[<DisassemblerInsn "lea" for 0x403b47>, <DisassemblerInsn "lea" for 0x403b4e>, <DisassemblerInsn "mov" for 0x403b55>, <DisassemblerInsn "lea" for 0x403b5a>, <DisassemblerInsn "call" for 0x403b61>]'}, {'block_Idx': 225, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e0b>, <DisassemblerInsn "mov" for 0x401e12>, <DisassemblerInsn "mov" for 0x401e19>, <DisassemblerInsn "mov" for 0x401e20>, <DisassemblerInsn "xor" for 0x401e23>, <DisassemblerInsn "sub" for 0x401e25>, <DisassemblerInsn "shr" for 0x401e28>, <DisassemblerInsn "mov" for 0x401e2a>, <DisassemblerInsn "add" for 0x401e32>, <DisassemblerInsn "mov" for 0x401e34>, <DisassemblerInsn "mov" for 0x401e36>, <DisassemblerInsn "jmp" for 0x401e3d>]'}, {'block_Idx': 123, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401805>, <DisassemblerInsn "mov" for 0x40180c>, <DisassemblerInsn "mov" for 0x401814>, <DisassemblerInsn "sar" for 0x401816>, <DisassemblerInsn "movsxd" for 0x401819>, <DisassemblerInsn "mov" for 0x40181c>, <DisassemblerInsn "ror" for 0x40181f>, <DisassemblerInsn "ror" for 0x401823>, <DisassemblerInsn "ror" for 0x401826>, <DisassemblerInsn "and" for 0x40182a>, <DisassemblerInsn "shl" for 0x40182d>, <DisassemblerInsn "mov" for 0x40182f>, <DisassemblerInsn "shr" for 0x401836>, <DisassemblerInsn "add" for 0x401839>, <DisassemblerInsn "imul" for 0x40183c>, <DisassemblerInsn "mov" for 0x401842>, <DisassemblerInsn "mov" for 0x401849>, <DisassemblerInsn "jmp" for 0x401850>]'}, {'block_Idx': 145, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401800>]'}, {'block_Idx': 242, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f8e>, <DisassemblerInsn "mov" for 0x402f96>, <DisassemblerInsn "mov" for 0x402f9e>, <DisassemblerInsn "mov" for 0x402fa6>, <DisassemblerInsn "mov" for 0x402fa8>, <DisassemblerInsn "mov" for 0x402faa>, <DisassemblerInsn "mov" for 0x402fb1>, <DisassemblerInsn "mov" for 0x402fb8>, <DisassemblerInsn "jmp" for 0x402fc0>]'}, {'block_Idx': 417, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402a88>, <DisassemblerInsn "mov" for 0x402a90>, <DisassemblerInsn "mov" for 0x402a97>, <DisassemblerInsn "mov" for 0x402a9f>, <DisassemblerInsn "mov" for 0x402aa6>, <DisassemblerInsn "mov" for 0x402aad>, <DisassemblerInsn "mov" for 0x402ab5>, <DisassemblerInsn "mov" for 0x402abd>, <DisassemblerInsn "add" for 0x402ac5>, <DisassemblerInsn "mov" for 0x402ac9>, <DisassemblerInsn "mov" for 0x402ad0>, <DisassemblerInsn "add" for 0x402ad2>, <DisassemblerInsn "mov" for 0x402ad4>, <DisassemblerInsn "mov" for 0x402adb>, <DisassemblerInsn "add" for 0x402add>, <DisassemblerInsn "mov" for 0x402ae0>, <DisassemblerInsn "mov" for 0x402ae7>, <DisassemblerInsn "add" for 0x402ae9>, <DisassemblerInsn "mov" for 0x402aeb>, <DisassemblerInsn "mov" for 0x402af2>, <DisassemblerInsn "mov" for 0x402af6>, <DisassemblerInsn "or" for 0x402af9>, <DisassemblerInsn "mov" for 0x402afd>, <DisassemblerInsn "add" for 0x402b05>, <DisassemblerInsn "mov" for 0x402b09>, <DisassemblerInsn "mov" for 0x402b10>, <DisassemblerInsn "add" for 0x402b12>, <DisassemblerInsn "mov" for 0x402b14>, <DisassemblerInsn "mov" for 0x402b1b>, <DisassemblerInsn "add" for 0x402b1d>, <DisassemblerInsn "mov" for 0x402b1f>, <DisassemblerInsn "mov" for 0x402b26>, <DisassemblerInsn "add" for 0x402b28>, <DisassemblerInsn "mov" for 0x402b2a>, <DisassemblerInsn "mov" for 0x402b31>, <DisassemblerInsn "add" for 0x402b35>, <DisassemblerInsn "mov" for 0x402b39>, <DisassemblerInsn "add" for 0x402b41>, <DisassemblerInsn "mov" for 0x402b45>, <DisassemblerInsn "cmp" for 0x402b4d>, <DisassemblerInsn "mov" for 0x402b50>, <DisassemblerInsn "mov" for 0x402b53>, <DisassemblerInsn "mov" for 0x402b5b>, <DisassemblerInsn "mov" for 0x402b5e>, <DisassemblerInsn "mov" for 0x402b66>, <DisassemblerInsn "mov" for 0x402b69>, <DisassemblerInsn "mov" for 0x402b71>, <DisassemblerInsn "mov" for 0x402b74>, <DisassemblerInsn "mov" for 0x402b7c>, <DisassemblerInsn "mov" for 0x402b7f>, <DisassemblerInsn "mov" for 0x402b87>, <DisassemblerInsn "mov" for 0x402b8f>, <DisassemblerInsn "mov" for 0x402b97>, <DisassemblerInsn "mov" for 0x402b9e>, <DisassemblerInsn "mov" for 0x402ba5>, <DisassemblerInsn "mov" for 0x402bac>, <DisassemblerInsn "je" for 0x402bb3>]'}, {'block_Idx': 383, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402bbe>, <DisassemblerInsn "mov" for 0x402bc5>, <DisassemblerInsn "mov" for 0x402bcd>, <DisassemblerInsn "xor" for 0x402bd0>, <DisassemblerInsn "lea" for 0x402bd2>, <DisassemblerInsn "mov" for 0x402bd9>, <DisassemblerInsn "call" for 0x402bdb>]'}, {'block_Idx': 116, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400dd6>, <DisassemblerInsn "mov" for 0x400dde>, <DisassemblerInsn "mov" for 0x400de0>, <DisassemblerInsn "cmp" for 0x400de7>, <DisassemblerInsn "jne" for 0x400dea>]'}, {'block_Idx': 114, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40179a>, <DisassemblerInsn "cmp" for 0x4017a1>, <DisassemblerInsn "jge" for 0x4017a4>]'}, {'block_Idx': 212, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401dc7>, <DisassemblerInsn "mov" for 0x401dce>, <DisassemblerInsn "mov" for 0x401dd5>, <DisassemblerInsn "mov" for 0x401ddd>, <DisassemblerInsn "sar" for 0x401ddf>, <DisassemblerInsn "movsxd" for 0x401de2>, <DisassemblerInsn "mov" for 0x401de5>, <DisassemblerInsn "ror" for 0x401de8>, <DisassemblerInsn "ror" for 0x401dec>, <DisassemblerInsn "ror" for 0x401def>, <DisassemblerInsn "and" for 0x401df3>, <DisassemblerInsn "mov" for 0x401df6>, <DisassemblerInsn "shl" for 0x401dfd>, <DisassemblerInsn "mov" for 0x401dff>, <DisassemblerInsn "cmp" for 0x401e06>, <DisassemblerInsn "jge" for 0x401e09>]'}, {'block_Idx': 441, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x402c15>, <DisassemblerInsn "jl" for 0x402c18>]'}, {'block_Idx': 265, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402c3e>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40342f>, <DisassemblerInsn "mov" for 0x403437>, <DisassemblerInsn "mov" for 0x40343f>, <DisassemblerInsn "mov" for 0x403447>, <DisassemblerInsn "mov" for 0x40344f>, <DisassemblerInsn "mov" for 0x403457>, <DisassemblerInsn "mov" for 0x40345e>, <DisassemblerInsn "mov" for 0x403466>, <DisassemblerInsn "mov" for 0x40346e>, <DisassemblerInsn "mov" for 0x403476>, <DisassemblerInsn "mov" for 0x40347e>, <DisassemblerInsn "mov" for 0x403486>, <DisassemblerInsn "mov" for 0x40348e>, <DisassemblerInsn "mov" for 0x403496>, <DisassemblerInsn "mov" for 0x40349e>, <DisassemblerInsn "mov" for 0x4034a3>, <DisassemblerInsn "mov" for 0x4034a6>, <DisassemblerInsn "shl" for 0x4034a8>, <DisassemblerInsn "mov" for 0x4034aa>, <DisassemblerInsn "cmp" for 0x4034b1>, <DisassemblerInsn "je" for 0x4034b4>]'}, {'block_Idx': 117, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40190a>, <DisassemblerInsn "mov" for 0x401912>, <DisassemblerInsn "mov" for 0x401919>, <DisassemblerInsn "mov" for 0x401920>, <DisassemblerInsn "add" for 0x401927>, <DisassemblerInsn "mov" for 0x40192a>, <DisassemblerInsn "xor" for 0x40192c>, <DisassemblerInsn "call" for 0x40192e>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4008cb>, <DisassemblerInsn "mov" for 0x4008d3>, <DisassemblerInsn "mov" for 0x4008db>, <DisassemblerInsn "mov" for 0x4008e2>, <DisassemblerInsn "call" for 0x4008e9>]'}, {'block_Idx': 107, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4015cb>]'}, {'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400804>, <DisassemblerInsn "mov" for 0x40080b>, <DisassemblerInsn "mov" for 0x400812>, <DisassemblerInsn "mov" for 0x400819>, <DisassemblerInsn "add" for 0x40081b>, <DisassemblerInsn "mov" for 0x40081d>, <DisassemblerInsn "mov" for 0x400824>, <DisassemblerInsn "cmp" for 0x400829>, <DisassemblerInsn "mov" for 0x40082b>, <DisassemblerInsn "jb" for 0x400832>]'}, {'block_Idx': 78, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40156a>, <DisassemblerInsn "mov" for 0x401572>, <DisassemblerInsn "mov" for 0x40157a>, <DisassemblerInsn "cmp" for 0x401581>, <DisassemblerInsn "jge" for 0x401585>]'}, {'block_Idx': 32, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403ef1>, <DisassemblerInsn "mov" for 0x403ef8>, <DisassemblerInsn "mov" for 0x403f00>, <DisassemblerInsn "add" for 0x403f02>, <DisassemblerInsn "mov" for 0x403f05>, <DisassemblerInsn "cdq" for 0x403f0a>, <DisassemblerInsn "idiv" for 0x403f0b>, <DisassemblerInsn "mov" for 0x403f0d>, <DisassemblerInsn "cmp" for 0x403f11>, <DisassemblerInsn "jle" for 0x403f13>]'}, {'block_Idx': 97, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4015e8>]'}, {'block_Idx': 134, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4017ee>]'}, {'block_Idx': 70, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401587>, <DisassemblerInsn "xor" for 0x40158f>, <DisassemblerInsn "lea" for 0x401591>, <DisassemblerInsn "mov" for 0x401598>, <DisassemblerInsn "call" for 0x40159a>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400da2>, <DisassemblerInsn "mov" for 0x400daa>, <DisassemblerInsn "mov" for 0x400db1>, <DisassemblerInsn "mov" for 0x400db9>, <DisassemblerInsn "mov" for 0x400dbc>, <DisassemblerInsn "cdq" for 0x400dc1>, <DisassemblerInsn "idiv" for 0x400dc2>, <DisassemblerInsn "mov" for 0x400dc4>, <DisassemblerInsn "cdqe" for 0x400dcc>, <DisassemblerInsn "add" for 0x400dce>, <DisassemblerInsn "call" for 0x400dd1>]'}, {'block_Idx': 310, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x40238f>, <DisassemblerInsn "jl" for 0x402392>]'}, {'block_Idx': 264, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40233a>, <DisassemblerInsn "mov" for 0x402342>, <DisassemblerInsn "mov" for 0x40234a>, <DisassemblerInsn "mov" for 0x402352>, <DisassemblerInsn "mov" for 0x402354>, <DisassemblerInsn "mov" for 0x402356>, <DisassemblerInsn "mov" for 0x40235d>, <DisassemblerInsn "mov" for 0x402364>, <DisassemblerInsn "jmp" for 0x40236c>]'}, {'block_Idx': 25, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011c2>, <DisassemblerInsn "mov" for 0x4011ca>, <DisassemblerInsn "add" for 0x4011d1>, <DisassemblerInsn "sub" for 0x4011d4>, <DisassemblerInsn "setb" for 0x4011d7>, <DisassemblerInsn "mov" for 0x4011da>, <DisassemblerInsn "mov" for 0x4011dd>, <DisassemblerInsn "sub" for 0x4011df>, <DisassemblerInsn "sete" for 0x4011e2>, <DisassemblerInsn "and" for 0x4011e5>, <DisassemblerInsn "test" for 0x4011e7>, <DisassemblerInsn "mov" for 0x4011ea>, <DisassemblerInsn "jne" for 0x4011f1>]'}, {'block_Idx': 171, 'blockInsts': '[<DisassemblerInsn "lea" for 0x4038ef>, <DisassemblerInsn "lea" for 0x4038f6>, <DisassemblerInsn "mov" for 0x4038fd>, <DisassemblerInsn "lea" for 0x403902>, <DisassemblerInsn "call" for 0x403909>]'}, {'block_Idx': 67, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40111c>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cfa>, <DisassemblerInsn "mov" for 0x400d02>, <DisassemblerInsn "mov" for 0x400d0a>, <DisassemblerInsn "mov" for 0x400d12>, <DisassemblerInsn "mov" for 0x400d1a>, <DisassemblerInsn "mov" for 0x400d22>, <DisassemblerInsn "mov" for 0x400d2a>, <DisassemblerInsn "add" for 0x400d2d>, <DisassemblerInsn "sar" for 0x400d30>, <DisassemblerInsn "xor" for 0x400d33>, <DisassemblerInsn "cmp" for 0x400d36>, <DisassemblerInsn "cmovl" for 0x400d3a>, <DisassemblerInsn "xor" for 0x400d3e>, <DisassemblerInsn "cmp" for 0x400d41>, <DisassemblerInsn "mov" for 0x400d45>, <DisassemblerInsn "cmovl" for 0x400d48>, <DisassemblerInsn "xor" for 0x400d4c>, <DisassemblerInsn "cmp" for 0x400d4f>, <DisassemblerInsn "cmovl" for 0x400d53>, <DisassemblerInsn "mov" for 0x400d57>, <DisassemblerInsn "mov" for 0x400d5a>, <DisassemblerInsn "movsxd" for 0x400d5d>, <DisassemblerInsn "add" for 0x400d60>, <DisassemblerInsn "mov" for 0x400d63>, <DisassemblerInsn "mov" for 0x400d66>, <DisassemblerInsn "jmp" for 0x400d6c>]'}, {'block_Idx': 56, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012ce>, <DisassemblerInsn "mov" for 0x4012d5>, <DisassemblerInsn "mov" for 0x4012dd>, <DisassemblerInsn "xor" for 0x4012e1>, <DisassemblerInsn "lea" for 0x4012e3>, <DisassemblerInsn "mov" for 0x4012ea>, <DisassemblerInsn "call" for 0x4012ec>]'}, {'block_Idx': 246, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40239a>, <DisassemblerInsn "mov" for 0x4023a2>, <DisassemblerInsn "mov" for 0x4023aa>, <DisassemblerInsn "xor" for 0x4023ac>, <DisassemblerInsn "call" for 0x4023ae>]'}, {'block_Idx': 381, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4025aa>, <DisassemblerInsn "mov" for 0x4025b1>, <DisassemblerInsn "mov" for 0x4025b8>, <DisassemblerInsn "mov" for 0x4025bf>, <DisassemblerInsn "mov" for 0x4025c6>, <DisassemblerInsn "add" for 0x4025c8>, <DisassemblerInsn "mov" for 0x4025cc>, <DisassemblerInsn "and" for 0x4025d4>, <DisassemblerInsn "mov" for 0x4025d8>, <DisassemblerInsn "mov" for 0x4025e0>, <DisassemblerInsn "cmp" for 0x4025e5>, <DisassemblerInsn "mov" for 0x4025e8>, <DisassemblerInsn "mov" for 0x4025f0>, <DisassemblerInsn "mov" for 0x4025f7>, <DisassemblerInsn "mov" for 0x4025fe>, <DisassemblerInsn "je" for 0x402605>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b61>, <DisassemblerInsn "mov" for 0x400b69>, <DisassemblerInsn "mov" for 0x400b71>, <DisassemblerInsn "mov" for 0x400b79>, <DisassemblerInsn "mov" for 0x400b7f>, <DisassemblerInsn "add" for 0x400b82>, <DisassemblerInsn "mov" for 0x400b86>, <DisassemblerInsn "mov" for 0x400b8e>, <DisassemblerInsn "add" for 0x400b91>, <DisassemblerInsn "mov" for 0x400b95>, <DisassemblerInsn "mov" for 0x400b9d>, <DisassemblerInsn "mov" for 0x400ba0>, <DisassemblerInsn "mov" for 0x400ba8>, <DisassemblerInsn "add" for 0x400bab>, <DisassemblerInsn "mov" for 0x400baf>, <DisassemblerInsn "mov" for 0x400bb7>, <DisassemblerInsn "add" for 0x400bba>, <DisassemblerInsn "mov" for 0x400bbe>, <DisassemblerInsn "mov" for 0x400bc6>, <DisassemblerInsn "add" for 0x400bc9>, <DisassemblerInsn "mov" for 0x400bcd>, <DisassemblerInsn "mov" for 0x400bd5>, <DisassemblerInsn "add" for 0x400bd8>, <DisassemblerInsn "mov" for 0x400bdf>, <DisassemblerInsn "add" for 0x400be7>, <DisassemblerInsn "mov" for 0x400bed>, <DisassemblerInsn "mov" for 0x400bf5>, <DisassemblerInsn "mov" for 0x400bfa>, <DisassemblerInsn "mov" for 0x400c02>, <DisassemblerInsn "mov" for 0x400c09>, <DisassemblerInsn "mov" for 0x400c11>, <DisassemblerInsn "mov" for 0x400c19>, <DisassemblerInsn "mov" for 0x400c20>, <DisassemblerInsn "mov" for 0x400c28>, <DisassemblerInsn "sar" for 0x400c2a>, <DisassemblerInsn "movsxd" for 0x400c2d>, <DisassemblerInsn "mov" for 0x400c30>, <DisassemblerInsn "mov" for 0x400c33>, <DisassemblerInsn "and" for 0x400c35>, <DisassemblerInsn "mov" for 0x400c38>, <DisassemblerInsn "movzx" for 0x400c3f>, <DisassemblerInsn "mov" for 0x400c42>, <DisassemblerInsn "mov" for 0x400c49>, <DisassemblerInsn "add" for 0x400c4b>, <DisassemblerInsn "mov" for 0x400c4e>, <DisassemblerInsn "sar" for 0x400c50>, <DisassemblerInsn "movsxd" for 0x400c53>, <DisassemblerInsn "mov" for 0x400c56>, <DisassemblerInsn "ror" for 0x400c59>, <DisassemblerInsn "ror" for 0x400c5d>, <DisassemblerInsn "ror" for 0x400c60>, <DisassemblerInsn "and" for 0x400c64>, <DisassemblerInsn "shl" for 0x400c67>, <DisassemblerInsn "mov" for 0x400c69>, <DisassemblerInsn "shr" for 0x400c70>, <DisassemblerInsn "mov" for 0x400c73>, <DisassemblerInsn "mov" for 0x400c7a>, <DisassemblerInsn "add" for 0x400c7c>, <DisassemblerInsn "sar" for 0x400c7f>, <DisassemblerInsn "movsxd" for 0x400c82>, <DisassemblerInsn "mov" for 0x400c85>, <DisassemblerInsn "ror" for 0x400c88>, <DisassemblerInsn "ror" for 0x400c8c>, <DisassemblerInsn "ror" for 0x400c8f>, <DisassemblerInsn "shl" for 0x400c93>, <DisassemblerInsn "mov" for 0x400c95>, <DisassemblerInsn "shr" for 0x400c9c>, <DisassemblerInsn "mov" for 0x400c9f>, <DisassemblerInsn "add" for 0x400ca2>, <DisassemblerInsn "shl" for 0x400ca6>, <DisassemblerInsn "sar" for 0x400ca9>, <DisassemblerInsn "movsxd" for 0x400cad>, <DisassemblerInsn "mov" for 0x400cb0>, <DisassemblerInsn "ror" for 0x400cb4>, <DisassemblerInsn "ror" for 0x400cb8>, <DisassemblerInsn "ror" for 0x400cbb>, <DisassemblerInsn "shl" for 0x400cbf>, <DisassemblerInsn "mov" for 0x400cc1>, <DisassemblerInsn "shr" for 0x400cc9>, <DisassemblerInsn "add" for 0x400ccc>, <DisassemblerInsn "mov" for 0x400ccf>, <DisassemblerInsn "mov" for 0x400cd6>, <DisassemblerInsn "or" for 0x400cd8>, <DisassemblerInsn "mov" for 0x400cda>, <DisassemblerInsn "shl" for 0x400ce1>, <DisassemblerInsn "mov" for 0x400ce4>, <DisassemblerInsn "add" for 0x400ceb>, <DisassemblerInsn "mov" for 0x400ced>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403c47>, <DisassemblerInsn "mov" for 0x403c4f>, <DisassemblerInsn "mov" for 0x403c56>, <DisassemblerInsn "mov" for 0x403c5e>, <DisassemblerInsn "mov" for 0x403c65>, <DisassemblerInsn "mov" for 0x403c6c>, <DisassemblerInsn "mov" for 0x403c74>, <DisassemblerInsn "shl" for 0x403c78>, <DisassemblerInsn "mov" for 0x403c7a>, <DisassemblerInsn "mov" for 0x403c7c>, <DisassemblerInsn "mov" for 0x403c7f>, <DisassemblerInsn "add" for 0x403c82>, <DisassemblerInsn "mov" for 0x403c86>, <DisassemblerInsn "mov" for 0x403c8a>, <DisassemblerInsn "mov" for 0x403c91>, <DisassemblerInsn "mov" for 0x403c99>, <DisassemblerInsn "mov" for 0x403ca1>, <DisassemblerInsn "mov" for 0x403ca9>, <DisassemblerInsn "mov" for 0x403cb0>, <DisassemblerInsn "mov" for 0x403cb8>, <DisassemblerInsn "add" for 0x403cc0>, <DisassemblerInsn "movsxd" for 0x403cc4>, <DisassemblerInsn "cmp" for 0x403cc7>, <DisassemblerInsn "mov" for 0x403cca>, <DisassemblerInsn "mov" for 0x403ccc>, <DisassemblerInsn "mov" for 0x403cd3>, <DisassemblerInsn "mov" for 0x403cdb>, <DisassemblerInsn "mov" for 0x403ce3>, <DisassemblerInsn "mov" for 0x403ceb>, <DisassemblerInsn "jl" for 0x403cf2>]'}, {'block_Idx': 244, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ef0>, <DisassemblerInsn "mov" for 0x402ef8>, <DisassemblerInsn "mov" for 0x402f00>, <DisassemblerInsn "mov" for 0x402f05>, <DisassemblerInsn "xor" for 0x402f0d>, <DisassemblerInsn "mov" for 0x402f0f>, <DisassemblerInsn "mov" for 0x402f17>, <DisassemblerInsn "mov" for 0x402f1f>, <DisassemblerInsn "mov" for 0x402f27>, <DisassemblerInsn "mov" for 0x402f2e>, <DisassemblerInsn "shl" for 0x402f31>, <DisassemblerInsn "mov" for 0x402f33>, <DisassemblerInsn "mov" for 0x402f3b>, <DisassemblerInsn "mov" for 0x402f42>, <DisassemblerInsn "add" for 0x402f45>, <DisassemblerInsn "mov" for 0x402f49>, <DisassemblerInsn "movsxd" for 0x402f51>, <DisassemblerInsn "cmp" for 0x402f54>, <DisassemblerInsn "mov" for 0x402f57>, <DisassemblerInsn "jl" for 0x402f5f>]'}, {'block_Idx': 391, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402e4e>, <DisassemblerInsn "mov" for 0x402e56>, <DisassemblerInsn "mov" for 0x402e5e>, <DisassemblerInsn "mov" for 0x402e65>, <DisassemblerInsn "mov" for 0x402e6d>, <DisassemblerInsn "mov" for 0x402e75>, <DisassemblerInsn "add" for 0x402e7d>, <DisassemblerInsn "mov" for 0x402e81>, <DisassemblerInsn "mov" for 0x402e88>, <DisassemblerInsn "add" for 0x402e8a>, <DisassemblerInsn "mov" for 0x402e8d>, <DisassemblerInsn "mov" for 0x402e94>, <DisassemblerInsn "add" for 0x402e98>, <DisassemblerInsn "mov" for 0x402e9c>, <DisassemblerInsn "add" for 0x402ea4>, <DisassemblerInsn "mov" for 0x402ea8>, <DisassemblerInsn "cmp" for 0x402eb0>, <DisassemblerInsn "mov" for 0x402eb3>, <DisassemblerInsn "mov" for 0x402ebb>, <DisassemblerInsn "mov" for 0x402ec2>, <DisassemblerInsn "mov" for 0x402ec9>, <DisassemblerInsn "jne" for 0x402ed1>]'}, {'block_Idx': 257, 'blockInsts': '[<DisassemblerInsn "push" for 0x404000>, <DisassemblerInsn "mov" for 0x404001>, <DisassemblerInsn "push" for 0x404004>, <DisassemblerInsn "sub" for 0x404005>, <DisassemblerInsn "mov" for 0x40400c>, <DisassemblerInsn "mov" for 0x40400f>, <DisassemblerInsn "mov" for 0x404012>, <DisassemblerInsn "mov" for 0x404016>, <DisassemblerInsn "mov" for 0x404018>, <DisassemblerInsn "lea" for 0x40401c>, <DisassemblerInsn "and" for 0x404024>, <DisassemblerInsn "mov" for 0x404028>, <DisassemblerInsn "sub" for 0x40402b>, <DisassemblerInsn "mov" for 0x40402e>, <DisassemblerInsn "mov" for 0x404032>, <DisassemblerInsn "movsxd" for 0x404035>, <DisassemblerInsn "mov" for 0x404038>, <DisassemblerInsn "mov" for 0x40403d>, <DisassemblerInsn "cmp" for 0x404041>, <DisassemblerInsn "setg" for 0x404044>, <DisassemblerInsn "mov" for 0x404047>, <DisassemblerInsn "test" for 0x40404a>, <DisassemblerInsn "jne" for 0x40404c>]'}, {'block_Idx': 232, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f0d>, <DisassemblerInsn "mov" for 0x401f15>, <DisassemblerInsn "mov" for 0x401f1d>, <DisassemblerInsn "mov" for 0x401f22>, <DisassemblerInsn "xor" for 0x401f2a>, <DisassemblerInsn "mov" for 0x401f2c>, <DisassemblerInsn "mov" for 0x401f34>, <DisassemblerInsn "mov" for 0x401f3c>, <DisassemblerInsn "mov" for 0x401f44>, <DisassemblerInsn "mov" for 0x401f4c>, <DisassemblerInsn "mov" for 0x401f53>, <DisassemblerInsn "add" for 0x401f56>, <DisassemblerInsn "mov" for 0x401f5a>, <DisassemblerInsn "movsxd" for 0x401f62>, <DisassemblerInsn "cmp" for 0x401f65>, <DisassemblerInsn "mov" for 0x401f68>, <DisassemblerInsn "jl" for 0x401f70>]'}, {'block_Idx': 222, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403e7b>, <DisassemblerInsn "mov" for 0x403e80>, <DisassemblerInsn "mov" for 0x403e84>, <DisassemblerInsn "mov" for 0x403e89>, <DisassemblerInsn "add" for 0x403e8e>, <DisassemblerInsn "movsxd" for 0x403e92>, <DisassemblerInsn "cmp" for 0x403e95>, <DisassemblerInsn "mov" for 0x403e98>, <DisassemblerInsn "mov" for 0x403e9a>, <DisassemblerInsn "mov" for 0x403e9e>, <DisassemblerInsn "mov" for 0x403ea3>, <DisassemblerInsn "mov" for 0x403ea8>, <DisassemblerInsn "mov" for 0x403ead>, <DisassemblerInsn "jl" for 0x403eb4>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007b7>, <DisassemblerInsn "mov" for 0x4007be>, <DisassemblerInsn "mov" for 0x4007c6>, <DisassemblerInsn "cmp" for 0x4007cd>, <DisassemblerInsn "mov" for 0x4007d3>, <DisassemblerInsn "je" for 0x4007da>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a78>, <DisassemblerInsn "mov" for 0x400a80>, <DisassemblerInsn "mov" for 0x400a87>, <DisassemblerInsn "mov" for 0x400a8e>, <DisassemblerInsn "mov" for 0x400a96>, <DisassemblerInsn "mov" for 0x400a9d>, <DisassemblerInsn "mov" for 0x400aa4>, <DisassemblerInsn "shl" for 0x400aa6>, <DisassemblerInsn "xor" for 0x400aa9>, <DisassemblerInsn "cmp" for 0x400aab>, <DisassemblerInsn "cmovl" for 0x400aae>, <DisassemblerInsn "mov" for 0x400ab2>, <DisassemblerInsn "xor" for 0x400aba>, <DisassemblerInsn "cmp" for 0x400abc>, <DisassemblerInsn "cmovl" for 0x400abf>, <DisassemblerInsn "xor" for 0x400ac2>, <DisassemblerInsn "cmp" for 0x400ac4>, <DisassemblerInsn "cmovl" for 0x400ac7>, <DisassemblerInsn "mov" for 0x400aca>, <DisassemblerInsn "add" for 0x400acd>, <DisassemblerInsn "mov" for 0x400ad1>, <DisassemblerInsn "mov" for 0x400ad9>, <DisassemblerInsn "mov" for 0x400add>, <DisassemblerInsn "add" for 0x400ae0>, <DisassemblerInsn "mov" for 0x400ae4>, <DisassemblerInsn "mov" for 0x400aec>, <DisassemblerInsn "mov" for 0x400aef>, <DisassemblerInsn "mov" for 0x400af1>, <DisassemblerInsn "mov" for 0x400af3>, <DisassemblerInsn "add" for 0x400af6>, <DisassemblerInsn "mov" for 0x400af9>, <DisassemblerInsn "add" for 0x400afc>, <DisassemblerInsn "mov" for 0x400b00>, <DisassemblerInsn "mov" for 0x400b08>, <DisassemblerInsn "mov" for 0x400b0c>, <DisassemblerInsn "add" for 0x400b0f>, <DisassemblerInsn "mov" for 0x400b13>, <DisassemblerInsn "mov" for 0x400b1b>, <DisassemblerInsn "mov" for 0x400b22>, <DisassemblerInsn "ror" for 0x400b24>, <DisassemblerInsn "ror" for 0x400b28>, <DisassemblerInsn "ror" for 0x400b2b>, <DisassemblerInsn "shr" for 0x400b2f>, <DisassemblerInsn "mov" for 0x400b32>, <DisassemblerInsn "shl" for 0x400b39>, <DisassemblerInsn "mov" for 0x400b3c>, <DisassemblerInsn "ror" for 0x400b3f>, <DisassemblerInsn "ror" for 0x400b43>, <DisassemblerInsn "ror" for 0x400b46>, <DisassemblerInsn "mov" for 0x400b4a>, <DisassemblerInsn "shr" for 0x400b51>, <DisassemblerInsn "or" for 0x400b54>, <DisassemblerInsn "cmp" for 0x400b56>, <DisassemblerInsn "jne" for 0x400b5b>]'}, {'block_Idx': 79, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014ee>, <DisassemblerInsn "mov" for 0x4014f6>, <DisassemblerInsn "mov" for 0x4014fe>, <DisassemblerInsn "mov" for 0x401506>, <DisassemblerInsn "mov" for 0x40150e>, <DisassemblerInsn "add" for 0x401515>, <DisassemblerInsn "mov" for 0x401518>, <DisassemblerInsn "shr" for 0x40151b>, <DisassemblerInsn "mov" for 0x40151f>, <DisassemblerInsn "ror" for 0x401523>, <DisassemblerInsn "ror" for 0x401527>, <DisassemblerInsn "ror" for 0x40152a>, <DisassemblerInsn "shr" for 0x40152e>, <DisassemblerInsn "add" for 0x401531>, <DisassemblerInsn "mov" for 0x401535>, <DisassemblerInsn "mov" for 0x401538>, <DisassemblerInsn "add" for 0x40153b>, <DisassemblerInsn "shl" for 0x40153e>, <DisassemblerInsn "movsxd" for 0x401542>, <DisassemblerInsn "add" for 0x401545>, <DisassemblerInsn "cmp" for 0x401548>, <DisassemblerInsn "mov" for 0x40154b>, <DisassemblerInsn "mov" for 0x401553>, <DisassemblerInsn "mov" for 0x40155b>, <DisassemblerInsn "jb" for 0x401562>]'}, {'block_Idx': 138, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401974>, <DisassemblerInsn "cmp" for 0x40197b>, <DisassemblerInsn "je" for 0x40197e>]'}, {'block_Idx': 444, 'blockInsts': '[<DisassemblerInsn "mov" for 0x404f47>, <DisassemblerInsn "lea" for 0x404f4d>, <DisassemblerInsn "pop" for 0x404f51>, <DisassemblerInsn "pop" for 0x404f52>, <DisassemblerInsn "ret" for 0x404f53>]'}, {'block_Idx': 377, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c7d>, <DisassemblerInsn "mov" for 0x402c85>, <DisassemblerInsn "mov" for 0x402c8c>, <DisassemblerInsn "mov" for 0x402c94>, <DisassemblerInsn "mov" for 0x402c9c>, <DisassemblerInsn "add" for 0x402ca4>, <DisassemblerInsn "mov" for 0x402ca7>, <DisassemblerInsn "mov" for 0x402cae>, <DisassemblerInsn "add" for 0x402cb1>, <DisassemblerInsn "mov" for 0x402cb5>, <DisassemblerInsn "add" for 0x402cbd>, <DisassemblerInsn "mov" for 0x402cc1>, <DisassemblerInsn "cmp" for 0x402cc9>, <DisassemblerInsn "mov" for 0x402ccc>, <DisassemblerInsn "mov" for 0x402cd4>, <DisassemblerInsn "mov" for 0x402cdb>, <DisassemblerInsn "je" for 0x402ce3>]'}, {'block_Idx': 442, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402c1e>]'}, {'block_Idx': 234, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402130>, <DisassemblerInsn "add" for 0x402137>, <DisassemblerInsn "cmp" for 0x40213a>, <DisassemblerInsn "jae" for 0x40213d>]'}, {'block_Idx': 349, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402423>, <DisassemblerInsn "mov" for 0x40242a>, <DisassemblerInsn "mov" for 0x402432>, <DisassemblerInsn "mov" for 0x402439>, <DisassemblerInsn "sub" for 0x402440>, <DisassemblerInsn "mov" for 0x402442>, <DisassemblerInsn "add" for 0x402444>, <DisassemblerInsn "mov" for 0x402447>, <DisassemblerInsn "mov" for 0x402449>, <DisassemblerInsn "mov" for 0x40244c>, <DisassemblerInsn "add" for 0x402453>, <DisassemblerInsn "mov" for 0x402455>, <DisassemblerInsn "cmp" for 0x40245c>, <DisassemblerInsn "je" for 0x40245f>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d2b>, <DisassemblerInsn "mov" for 0x401d33>, <DisassemblerInsn "lea" for 0x401d36>, <DisassemblerInsn "xor" for 0x401d3d>, <DisassemblerInsn "call" for 0x401d3f>]'}, {'block_Idx': 121, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e0b>, <DisassemblerInsn "mov" for 0x400e13>, <DisassemblerInsn "mov" for 0x400e1b>, <DisassemblerInsn "mov" for 0x400e1d>, <DisassemblerInsn "mov" for 0x400e1f>, <DisassemblerInsn "cmp" for 0x400e26>, <DisassemblerInsn "mov" for 0x400e29>, <DisassemblerInsn "jne" for 0x400e30>]'}, {'block_Idx': 59, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4010d7>, <DisassemblerInsn "mov" for 0x4010df>, <DisassemblerInsn "add" for 0x4010e6>, <DisassemblerInsn "mov" for 0x4010e9>, <DisassemblerInsn "mov" for 0x4010f0>, <DisassemblerInsn "mov" for 0x4010f2>, <DisassemblerInsn "cdq" for 0x4010f7>, <DisassemblerInsn "idiv" for 0x4010f8>, <DisassemblerInsn "mov" for 0x4010fa>, <DisassemblerInsn "mov" for 0x401101>, <DisassemblerInsn "mov" for 0x401103>, <DisassemblerInsn "add" for 0x40110a>, <DisassemblerInsn "cmp" for 0x40110d>, <DisassemblerInsn "mov" for 0x40110f>, <DisassemblerInsn "jl" for 0x401116>]'}], 'cfg_block_detailed_info': [{'block_Idx': 213, 'blockInsts': ['<jmp~~0x401d56>']}, {'block_Idx': 33, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x960]>', '<mov~~eax, dword ptr [rsp + 0x868]>', '<mov~~edx, dword ptr [rsp + 0x850]>', '<mov~~esi, dword ptr [rsp + 0x854]>', '<mov~~dword ptr [rsp + 0x840], esi>', '<mov~~dword ptr [rsp + 0x844], edx>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x848], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x40129d>']}, {'block_Idx': 289, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x402ff7>']}, {'block_Idx': 105, 'blockInsts': ['<mov~~r8d, dword ptr [rsp + 0x7c4]>', '<mov~~ecx, dword ptr [rsp + 0x7bc]>', '<mov~~rdi, qword ptr [rsp + 0x818]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x45a5]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 193, 'blockInsts': ['<jmp~~0x403eba>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x820]>', '<mov~~rax, qword ptr [rsp + 0x828]>', '<mov~~rsi, qword ptr [rsp + 0x58]>', '<mov~~rdx, qword ptr [rsp + 0x50]>', '<mov~~r8d, dword ptr [rsp + 0x64]>', '<mov~~rdi, qword ptr [rsp + 0x68]>', '<mov~~r9, qword ptr [rsp + 0x70]>', '<mov~~r10, qword ptr [rsp + 0x78]>', '<mov~~qword ptr [rsp + 0x28], r10>', '<mov~~qword ptr [rsp + 0x30], r9>', '<mov~~qword ptr [rsp + 0x38], rdi>', '<mov~~dword ptr [rsp + 0x40], r8d>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~eax, dword ptr [rax]>', '<mov~~edi, esi>', '<sar~~edi, 1>', '<sub~~edx, edi>', '<mov~~dword ptr [rsp + 0x44], edx>', '<add~~edx, esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x48], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x4c], edx>', '<cmp~~eax, 0>', '<je~~0x403e3c>']}, {'block_Idx': 84, 'blockInsts': ['<jmp~~0x402ff7>']}, {'block_Idx': 337, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x650]>', '<mov~~ecx, dword ptr [rsp + 0x600]>', '<mov~~rdx, qword ptr [rsp + 0x658]>', '<mov~~esi, eax>', '<add~~esi, -2>', '<mov~~esi, esi>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~dword ptr [rsp + 0x5f8], edx>', '<sub~~ecx, edx>', '<mov~~dword ptr [rsp + 0x5fc], ecx>', '<cmp~~eax, 2>', '<jbe~~0x402665>']}, {'block_Idx': 355, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x15c]>', '<add~~rsp, 0x190>', '<pop~~rbx>', '<ret~~>']}, {'block_Idx': 423, 'blockInsts': ['<jmp~~0x402a88>']}, {'block_Idx': 86, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~rdx, qword ptr [rsp + 0x7f0]>', '<mov~~eax, dword ptr [rsp + 0x7fc]>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<mov~~qword ptr [rsp + 0x7d8], rdx>', '<mov~~qword ptr [rsp + 0x7e0], rcx>', '<cmp~~eax, 1>', '<jle~~0x40156a>']}, {'block_Idx': 55, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x960]>', '<mov~~rax, qword ptr [rsp + 0x860]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rsi, qword ptr [rsp + 0x838]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x808], esi>', '<cmp~~esi, 0x10>', '<setg~~r8b>', '<mov~~byte ptr [rsp + 0x80f], r8b>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x810], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r9d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r9d>', '<mov~~r9d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r9d, r11d>', '<and~~r8b, 1>', '<movzx~~r8d, r8b>', '<mov~~dword ptr [rdi + 0x58], r10d>', '<sub~~r9d, esi>', '<mov~~r10, rdi>', '<mov~~qword ptr [rsp + 0x818], r10>', '<mov~~r10, rdx>', '<add~~r10, 0x48>', '<mov~~qword ptr [rsp + 0x820], r10>', '<mov~~dword ptr [rdx + 0x48], r9d>', '<mov~~r9, rdx>', '<add~~r9, 0x4c>', '<mov~~qword ptr [rsp + 0x828], r9>', '<mov~~dword ptr [rdx + 0x4c], r8d>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x830], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x4013ea>']}, {'block_Idx': 406, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x5c8]>', '<mov~~rcx, qword ptr [rsp + 0x5d0]>', '<mov~~edx, dword ptr [rsp + 0x5dc]>', '<mov~~esi, dword ptr [rsp + 0x5e0]>', '<mov~~edi, dword ptr [rsp + 0x5e4]>', '<mov~~r8d, dword ptr [rsp + 0x5e8]>', '<mov~~dword ptr [rsp + 0x3a0], r8d>', '<mov~~dword ptr [rsp + 0x3a4], edi>', '<mov~~dword ptr [rsp + 0x3a8], esi>', '<mov~~dword ptr [rsp + 0x3ac], edx>', '<mov~~qword ptr [rsp + 0x3b0], rcx>', '<cmp~~rax, 0>', '<je~~0x402ed7>']}, {'block_Idx': 119, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<sub~~eax, 0xc>', '<je~~0x401805>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x86c]>', '<add~~eax, -7>', '<mov~~ecx, 2>', '<mov~~dword ptr [rsp + 0x850], ecx>', '<mov~~dword ptr [rsp + 0x854], eax>', '<jmp~~0x401244>']}, {'block_Idx': 263, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x650]>', '<mov~~rdi, qword ptr [rsp + 0x9f0]>', '<mov~~rax, qword ptr [rsp + 0x748]>', '<mov~~esi, eax>', '<call~~0x404f60>']}, {'block_Idx': 154, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x340]>', '<lea~~rcx, [rip + 0x291d]>', '<movsxd~~rax, dword ptr [rcx + rax*4]>', '<add~~rax, rcx>', '<jmp~~rax>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x33c]>', '<cmp~~eax, 2>', '<jne~~0x403b47>']}, {'block_Idx': 174, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x80], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jle~~0x403eba>']}, {'block_Idx': 152, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x85c]>', '<mov~~rdi, qword ptr [rsp + 0x818]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x43c7]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 228, 'blockInsts': ['<jmp~~0x402ff7>']}, {'block_Idx': 120, 'blockInsts': ['<lea~~rdi, [rip + 0x4d41]>', '<lea~~rsi, [rip + 0x4d4b]>', '<mov~~edx, 0xa6>', '<lea~~rcx, [rip + 0x4d54]>', '<call~~0x500008>']}, {'block_Idx': 248, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x810]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x30fe]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 95, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x858]>', '<sub~~eax, 6>', '<je~~0x4015ed>']}, {'block_Idx': 31, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x8d0]>', '<cmp~~eax, 0>', '<jne~~0x400f9c>']}, {'block_Idx': 18, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4b4d]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 158, 'blockInsts': ['<jmp~~0x402ff7>']}, {'block_Idx': 175, 'blockInsts': ['<lea~~rdi, [rip + 0x1e34]>', '<lea~~rsi, [rip + 0x1dc5]>', '<mov~~edx, 0x2b9>', '<lea~~rcx, [rip + 0x1e32]>', '<call~~0x500008>']}, {'block_Idx': 129, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<sub~~eax, 0xd>', '<je~~0x401855>']}, {'block_Idx': 150, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x808]>', '<mov~~edx, dword ptr [rsp + 0x840]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<add~~rax, 0x44>', '<mov~~qword ptr [rsp + 0x758], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x760], edx>', '<mov~~dword ptr [rsp + 0x764], ecx>', '<mov~~qword ptr [rsp + 0x768], rax>', '<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~esi, dword ptr [rsp + 0x760]>', '<mov~~edx, dword ptr [rsp + 0x764]>', '<mov~~rax, qword ptr [rsp + 0x768]>', '<mov~~qword ptr [rsp + 0x748], rax>', '<mov~~dword ptr [rsp + 0x750], edx>', '<mov~~dword ptr [rsp + 0x754], esi>', '<mov~~dword ptr [rcx], edx>', '<cmp~~rax, 0>', '<jne~~0x401ac3>']}, {'block_Idx': 74, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2b8a]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 347, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x600]>', '<mov~~ecx, dword ptr [rsp + 0x654]>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, rdx>', '<add~~rcx, -1>', '<mov~~qword ptr [rsp + 0x4e8], rcx>', '<add~~rdx, -2>', '<and~~rcx, 3>', '<mov~~qword ptr [rsp + 0x4f0], rcx>', '<mov~~ecx, 1>', '<cmp~~rdx, 3>', '<mov~~qword ptr [rsp + 0x4f8], rcx>', '<mov~~dword ptr [rsp + 0x504], eax>', '<jb~~0x402c43>']}, {'block_Idx': 161, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x33c]>', '<cmp~~eax, 2>', '<jne~~0x4038ef>']}, {'block_Idx': 53, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x93c]>', '<mov~~rcx, qword ptr [rsp]>', '<mov~~esi, dword ptr [rsp + 0x10]>', '<mov~~edx, dword ptr [rsp + 0xc]>', '<mov~~rdi, qword ptr [rsp + 0x9f0]>', '<mov~~r8d, esi>', '<add~~r8d, dword ptr [rdi + 0xa4]>', '<mov~~dword ptr [rdi + 0xa4], r8d>', '<sub~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<mov~~eax, dword ptr [rsp + 0x9ac]>', '<add~~rsp, 0xa20>', '<pop~~rbx>', '<ret~~>']}, {'block_Idx': 20, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x9a4]>', '<mov~~rdi, qword ptr [rsp + 0x9f0]>', '<mov~~rsi, qword ptr [rsp + 0x9e0]>', '<mov~~ecx, dword ptr [rsp + 0x978]>', '<mov~~edx, dword ptr [rsp + 0x97c]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<add~~ecx, edx>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500030>']}, {'block_Idx': 390, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x4e0]>', '<mov~~eax, dword ptr [rsp + 0x4dc]>', '<mov~~rcx, qword ptr [rsp + 0x4d0]>', '<mov~~rsi, qword ptr [rsp + 0x4c8]>', '<mov~~rdi, qword ptr [rsp + 0x658]>', '<mov~~qword ptr [rsp + 0x4a0], rcx>', '<add~~eax, dword ptr [rdi + rcx*4]>', '<mov~~dword ptr [rsp + 0x4a8], eax>', '<mov~~dword ptr [rdi + rcx*4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 4]>', '<mov~~dword ptr [rsp + 0x4ac], eax>', '<mov~~dword ptr [rdi + rcx*4 + 4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 8]>', '<mov~~dword ptr [rsp + 0x4b0], eax>', '<mov~~dword ptr [rdi + rcx*4 + 8], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 0xc]>', '<mov~~dword ptr [rsp + 0x4b4], eax>', '<mov~~dword ptr [rdi + rcx*4 + 0xc], eax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x4b8], rcx>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x4c0], rdx>', '<cmp~~rdx, rsi>', '<mov~~rsi, rcx>', '<mov~~qword ptr [rsp + 0x4d0], rsi>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x4dc], esi>', '<mov~~qword ptr [rsp + 0x4e0], rdx>', '<mov~~qword ptr [rsp + 0x4f8], rcx>', '<mov~~dword ptr [rsp + 0x504], eax>', '<je~~0x402c43>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~ecx, dword ptr [rsp + 0xa1c]>', '<mov~~dword ptr [rsp + 0x9b4], ecx>', '<mov~~rcx, rax>', '<add~~rcx, 0xa0>', '<mov~~qword ptr [rsp + 0x9b8], rcx>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x9c4], eax>', '<cmp~~eax, 4>', '<jb~~0x4007dc>']}, {'block_Idx': 85, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x858]>', '<test~~eax, eax>', '<je~~0x4015d0>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x8dc]>', '<cmp~~eax, 0>', '<je~~0x400fbd>']}, {'block_Idx': 173, 'blockInsts': ['<mov~~r8d, dword ptr [rsp + 0x310]>', '<mov~~edi, dword ptr [rsp + 0x314]>', '<mov~~esi, dword ptr [rsp + 0x318]>', '<mov~~edx, dword ptr [rsp + 0x31c]>', '<mov~~r9, qword ptr [rsp + 0x320]>', '<mov~~rax, qword ptr [rsp + 0x328]>', '<mov~~rcx, qword ptr [rsp + 0x330]>', '<mov~~qword ptr [rsp + 0x2c8], rcx>', '<mov~~qword ptr [rsp + 0x2d0], rax>', '<mov~~qword ptr [rsp + 0x2d8], r9>', '<mov~~dword ptr [rsp + 0x2e4], esi>', '<mov~~dword ptr [rsp + 0x2e8], edi>', '<mov~~dword ptr [rsp + 0x2ec], r8d>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x2f0], r8d>', '<mov~~dword ptr [rsp + 0x2f4], edi>', '<mov~~dword ptr [rsp + 0x2f8], esi>', '<mov~~dword ptr [rsp + 0x2fc], edx>', '<mov~~qword ptr [rsp + 0x300], rcx>', '<mov~~qword ptr [rsp + 0x308], rax>', '<jle~~0x4037dc>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x9ac]>', '<add~~rsp, 0xa20>', '<pop~~rbx>', '<ret~~>']}, {'block_Idx': 139, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<sub~~eax, 0xe>', '<je~~0x40189c>']}, {'block_Idx': 176, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0xf0], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jle~~0x403eba>']}, {'block_Idx': 217, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x2d0]>', '<mov~~edx, dword ptr [rsp + 0x2e8]>', '<mov~~esi, dword ptr [rsp + 0x2ec]>', '<mov~~rdi, qword ptr [rsp + 0x198]>', '<mov~~r10, qword ptr [rsp + 0x190]>', '<mov~~r8, qword ptr [rsp + 0x188]>', '<mov~~r9, qword ptr [rsp + 0x288]>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~rbx, qword ptr [rsp + 0x2d8]>', '<mov~~r11, qword ptr [rsp + 0x9f0]>', '<mov~~r11, qword ptr [r11 + r8*8 + 0x58]>', '<mov~~r11d, dword ptr [r11 + rbx*4]>', '<shl~~r11d, cl>', '<mov~~dword ptr [rsp + 0x16c], r11d>', '<mov~~ecx, r11d>', '<mov~~r11w, cx>', '<mov~~rcx, r10>', '<add~~rcx, 2>', '<mov~~qword ptr [rsp + 0x170], rcx>', '<mov~~word ptr [r10], r11w>', '<add~~r8, 1>', '<mov~~qword ptr [rsp + 0x178], r8>', '<add~~rdi, 1>', '<mov~~qword ptr [rsp + 0x180], rdi>', '<cmp~~rdi, r9>', '<mov~~qword ptr [rsp + 0x188], r8>', '<mov~~r8, rcx>', '<mov~~qword ptr [rsp + 0x190], r8>', '<mov~~qword ptr [rsp + 0x198], rdi>', '<mov~~dword ptr [rsp + 0x2f0], esi>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x2f4], esi>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x2f8], esi>', '<mov~~dword ptr [rsp + 0x2fc], edx>', '<mov~~qword ptr [rsp + 0x300], rcx>', '<mov~~qword ptr [rsp + 0x308], rax>', '<jne~~0x4036f5>']}, {'block_Idx': 262, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~rdx, qword ptr [rsp + 0x658]>', '<mov~~edi, dword ptr [rsp + 0x628]>', '<mov~~esi, dword ptr [rsp + 0x61c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x604], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x604]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x608], rax>', '<cmp~~rax, rcx>', '<je~~0x402371>']}, {'block_Idx': 35, 'blockInsts': ['<jmp~~0x401214>']}, {'block_Idx': 379, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x530]>', '<mov~~rsi, qword ptr [rsp + 0x538]>', '<mov~~edx, dword ptr [rsp + 0x540]>', '<mov~~ecx, dword ptr [rsp + 0x544]>', '<xor~~eax, eax>', '<cmp~~rdi, 0>', '<mov~~qword ptr [rsp + 0x388], rsi>', '<mov~~dword ptr [rsp + 0x390], edx>', '<mov~~dword ptr [rsp + 0x394], ecx>', '<mov~~qword ptr [rsp + 0x398], rax>', '<je~~0x402ed7>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x9a0]>', '<mov~~ecx, dword ptr [rsp + 0x9c4]>', '<mov~~esi, dword ptr [rsp + 0x9a8]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, rdx>', '<add~~rdi, 0xa8>', '<mov~~qword ptr [rsp + 0x980], rdi>', '<mov~~edx, dword ptr [rdx + 0xa8]>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x98c], edx>', '<mov~~dword ptr [rsp + 0x990], ecx>', '<mov~~dword ptr [rsp + 0x994], eax>', '<jae~~0x400933>']}, {'block_Idx': 106, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~ecx, dword ptr [rsp + 0x7d0]>', '<mov~~rax, qword ptr [rsp + 0x940]>', '<mov~~rsi, qword ptr [rsp + 0x7e0]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x7c8], ecx>', '<mov~~dword ptr [rsp + 0x7cc], eax>', '<jmp~~0x4016bc>']}, {'block_Idx': 216, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x118]>', '<mov~~eax, dword ptr [rsp + 0xf4]>', '<mov~~rcx, qword ptr [rsp + 0xf8]>', '<mov~~rdx, qword ptr [rsp + 0x100]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x14c], edi>', '<mov~~qword ptr [rsp + 0x150], rsi>', '<mov~~qword ptr [rsp + 0x158], rdx>', '<mov~~qword ptr [rsp + 0x160], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jl~~0x40390e>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x710]>', '<test~~eax, eax>', '<je~~0x401dc7>']}, {'block_Idx': 336, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x654]>', '<cmp~~eax, 1>', '<jle~~0x402ed7>']}, {'block_Idx': 135, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x920]>', '<mov~~edx, dword ptr [rsp + 0x890]>', '<mov~~rsi, qword ptr [rsp + 0x918]>', '<mov~~rdi, qword ptr [rax]>', '<call~~0x500018>']}, {'block_Idx': 168, 'blockInsts': ['<jmp~~0x401afd>']}, {'block_Idx': 60, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x18], rdi>', '<mov~~qword ptr [rsp + 0x20], rsi>', '<mov~~qword ptr [rsp + 0x28], rdx>', '<mov~~eax, dword ptr [rdx + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<mov~~dword ptr [rsp + 0x34], eax>', '<mov~~dword ptr [rsi], eax>', '<cmp~~eax, 0x10>', '<jge~~0x400166>']}, {'block_Idx': 223, 'blockInsts': ['<jmp~~0x403eba>']}, {'block_Idx': 243, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x350]>', '<mov~~rcx, qword ptr [rsp + 0x778]>', '<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x784], edx>', '<mov~~dword ptr [rsp + 0x788], ecx>', '<mov~~dword ptr [rsp + 0x78c], eax>', '<jmp~~0x403040>']}, {'block_Idx': 47, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x86c]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~r8d, dword ptr [rsp + 0x84c]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x49e1]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 187, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f8]>', '<mov~~rcx, qword ptr [rsp + 0xa00]>', '<mov~~esi, dword ptr [rsp + 0xf0]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0xc0], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0xc8], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0xd4], esi>', '<mov~~qword ptr [rsp + 0xd8], rdx>', '<mov~~qword ptr [rsp + 0xe0], rcx>', '<mov~~qword ptr [rsp + 0xe8], rax>', '<jmp~~0x403b66>']}, {'block_Idx': 180, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x810]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x417f]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 142, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x794]>', '<mov~~ecx, dword ptr [rsp + 0x840]>', '<mov~~rdx, qword ptr [rsp + 0x7b0]>', '<mov~~rsi, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rsp + 0x830]>', '<mov~~r8d, dword ptr [rsp + 0x808]>', '<mov~~r9d, dword ptr [rsp + 0x790]>', '<mov~~r10d, dword ptr [rsp + 0x7bc]>', '<mov~~r11, rsi>', '<add~~r11, 0x40>', '<mov~~qword ptr [rsp + 0x770], r11>', '<mov~~dword ptr [rsi + 0x40], r10d>', '<mov~~dword ptr [rsi + 8], r9d>', '<mov~~dword ptr [rdi], r8d>', '<mov~~rdi, rsi>', '<add~~rdi, 0x50>', '<mov~~qword ptr [rsp + 0x778], rdi>', '<mov~~dword ptr [rsi + 0x50], ecx>', '<mov~~edx, dword ptr [rdx]>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x784], edx>', '<mov~~dword ptr [rsp + 0x788], ecx>', '<mov~~dword ptr [rsp + 0x78c], eax>', '<jle~~0x403040>']}, {'block_Idx': 124, 'blockInsts': ['<jmp~~0x4017e2>']}, {'block_Idx': 219, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x1e8]>', '<mov~~edx, dword ptr [rsp + 0x1c0]>', '<mov~~ecx, dword ptr [rsp + 0x1c4]>', '<mov~~rsi, qword ptr [rsp + 0x1c8]>', '<mov~~rdi, qword ptr [rsp + 0x1d0]>', '<mov~~qword ptr [rsp + 0x1a0], rdi>', '<mov~~qword ptr [rsp + 0x1a8], rsi>', '<mov~~dword ptr [rsp + 0x1b0], ecx>', '<mov~~dword ptr [rsp + 0x1b4], edx>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x1b8], rax>', '<movsxd~~rcx, ecx>', '<cmp~~rax, rcx>', '<jge~~0x403610>']}, {'block_Idx': 162, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f8]>', '<mov~~rdx, qword ptr [rsp + 0xa00]>', '<mov~~edi, dword ptr [rsp + 0x33c]>', '<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~eax, dword ptr [rax]>', '<test~~eax, eax>', '<setg~~r8b>', '<test~~edi, edi>', '<setg~~sil>', '<and~~r8b, sil>', '<xor~~esi, esi>', '<test~~r8b, 1>', '<mov~~r8d, eax>', '<mov~~dword ptr [rsp + 0x310], r8d>', '<mov~~r8d, edi>', '<mov~~dword ptr [rsp + 0x314], r8d>', '<mov~~r8d, edi>', '<mov~~dword ptr [rsp + 0x318], r8d>', '<mov~~dword ptr [rsp + 0x31c], edi>', '<mov~~qword ptr [rsp + 0x320], rsi>', '<mov~~qword ptr [rsp + 0x328], rdx>', '<mov~~qword ptr [rsp + 0x330], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jne~~0x403136>']}, {'block_Idx': 1, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x9ec]>', '<mov~~rax, qword ptr [rsp + 0xa10]>', '<mov~~rsi, qword ptr [rsp + 0x9f0]>', '<mov~~edx, 4>', '<cmp~~ecx, 4>', '<cmovg~~edx, ecx>', '<mov~~dword ptr [rax], edx>', '<mov~~rdi, qword ptr [rsi + 0x98]>', '<add~~rsi, 0xa8>', '<call~~0x500018>']}, {'block_Idx': 91, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x818]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x46b5]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 113, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~eax, dword ptr [rax + 8]>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40190a>']}, {'block_Idx': 99, 'blockInsts': ['<jmp~~0x4015bf>']}, {'block_Idx': 407, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x600]>', '<mov~~edx, dword ptr [rsp + 0x5fc]>', '<mov~~esi, dword ptr [rsp + 0x5f4]>', '<mov~~edi, dword ptr [rsp + 0x5ec]>', '<mov~~rax, qword ptr [rsp + 0x5c0]>', '<add~~rax, -4>', '<and~~rax, 0xfffffffffffffffe>', '<mov~~qword ptr [rsp + 0x598], rax>', '<mov~~r8d, 4>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x5a0], r8>', '<mov~~dword ptr [rsp + 0x5a8], edi>', '<mov~~dword ptr [rsp + 0x5ac], esi>', '<mov~~dword ptr [rsp + 0x5b0], edx>', '<mov~~dword ptr [rsp + 0x5b4], ecx>', '<mov~~qword ptr [rsp + 0x5b8], rax>', '<jmp~~0x402a88>']}, {'block_Idx': 221, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x1a0]>', '<mov~~rcx, qword ptr [rsp + 0x1a8]>', '<mov~~edx, dword ptr [rsp + 0x1b0]>', '<mov~~esi, dword ptr [rsp + 0x1b4]>', '<mov~~rdi, qword ptr [rsp + 0x770]>', '<mov~~edi, dword ptr [rdi]>', '<mov~~dword ptr [rsp + 0x2f0], edi>', '<mov~~dword ptr [rsp + 0x2f4], esi>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x2f8], esi>', '<mov~~dword ptr [rsp + 0x2fc], edx>', '<mov~~qword ptr [rsp + 0x300], rcx>', '<mov~~qword ptr [rsp + 0x308], rax>', '<jmp~~0x4037dc>']}, {'block_Idx': 43, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x10]>', '<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, rcx>', '<add~~rdx, 0xa0>', '<mov~~qword ptr [rsp], rdx>', '<mov~~ecx, dword ptr [rcx + 0xa0]>', '<mov~~dword ptr [rsp + 0xc], ecx>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<je~~0x403fcf>']}, {'block_Idx': 37, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~ecx, dword ptr [rsp + 0x938]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x88c], eax>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<add~~eax, 2>', '<cmp~~eax, ecx>', '<jge~~0x403ef1>']}, {'block_Idx': 247, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6ec]>', '<mov~~edx, dword ptr [rsp + 0x6f0]>', '<mov~~eax, dword ptr [rsp + 0x650]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x638], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x640], edx>', '<mov~~dword ptr [rsp + 0x644], ecx>', '<mov~~qword ptr [rsp + 0x648], rax>', '<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x640]>', '<mov~~eax, dword ptr [rsp + 0x644]>', '<mov~~rsi, qword ptr [rsp + 0x648]>', '<mov~~qword ptr [rsp + 0x620], rsi>', '<mov~~dword ptr [rsp + 0x628], eax>', '<mov~~dword ptr [rsp + 0x62c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x630], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x634], edx>', '<cmp~~eax, 0x12>', '<jge~~0x40225b>']}, {'block_Idx': 389, 'blockInsts': ['<jmp~~0x402c7d>']}, {'block_Idx': 320, 'blockInsts': ['<push~~rbx>', '<sub~~rsp, 0x190>', '<mov~~dword ptr [rsp + 0x160], edx>', '<mov~~dword ptr [rsp + 0x164], esi>', '<mov~~qword ptr [rsp + 0x168], rdi>', '<mov~~rax, rdi>', '<add~~rax, 0x38>', '<mov~~qword ptr [rsp + 0x170], rax>', '<mov~~ecx, dword ptr [rdi + 0x38]>', '<mov~~dword ptr [rsp + 0x184], ecx>', '<mov~~rax, qword ptr [rdi + 0x28]>', '<mov~~qword ptr [rsp + 0x178], rax>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x184]>', '<shr~~eax, 0xfe>', '<mov~~dword ptr [rsp + 0x188], eax>', '<add~~ecx, 2>', '<mov~~dword ptr [rsp + 0x18c], ecx>', '<mov~~dword ptr [rdi + 0x38], ecx>', '<cmp~~eax, 1>', '<jle~~0x405015>']}, {'block_Idx': 57, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x848]>', '<movsxd~~rcx, eax>', '<lea~~rax, [rip + 0x4bb3]>', '<shl~~rcx, 2>', '<add~~rax, rcx>', '<mov~~qword ptr [rsp + 0x838], rax>', '<jmp~~0x4012f6>']}, {'block_Idx': 61, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<jmp~~0x403fcf>']}, {'block_Idx': 170, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x168], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jle~~0x403eba>']}, {'block_Idx': 362, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x600]>', '<mov~~rax, qword ptr [rsp + 0x4e8]>', '<and~~rax, 0xfffffffffffffffc>', '<mov~~qword ptr [rsp + 0x4c8], rax>', '<mov~~edx, 1>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x4d0], rdx>', '<mov~~dword ptr [rsp + 0x4dc], ecx>', '<mov~~qword ptr [rsp + 0x4e0], rax>', '<mov~~rdx, qword ptr [rsp + 0x4e0]>', '<mov~~eax, dword ptr [rsp + 0x4dc]>', '<mov~~rcx, qword ptr [rsp + 0x4d0]>', '<mov~~rsi, qword ptr [rsp + 0x4c8]>', '<mov~~rdi, qword ptr [rsp + 0x658]>', '<mov~~qword ptr [rsp + 0x4a0], rcx>', '<add~~eax, dword ptr [rdi + rcx*4]>', '<mov~~dword ptr [rsp + 0x4a8], eax>', '<mov~~dword ptr [rdi + rcx*4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 4]>', '<mov~~dword ptr [rsp + 0x4ac], eax>', '<mov~~dword ptr [rdi + rcx*4 + 4], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 8]>', '<mov~~dword ptr [rsp + 0x4b0], eax>', '<mov~~dword ptr [rdi + rcx*4 + 8], eax>', '<add~~eax, dword ptr [rdi + rcx*4 + 0xc]>', '<mov~~dword ptr [rsp + 0x4b4], eax>', '<mov~~dword ptr [rdi + rcx*4 + 0xc], eax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x4b8], rcx>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x4c0], rdx>', '<cmp~~rdx, rsi>', '<mov~~rsi, rcx>', '<mov~~qword ptr [rsp + 0x4d0], rsi>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x4dc], esi>', '<mov~~qword ptr [rsp + 0x4e0], rdx>', '<mov~~qword ptr [rsp + 0x4f8], rcx>', '<mov~~dword ptr [rsp + 0x504], eax>', '<je~~0x402c43>']}, {'block_Idx': 101, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~edx, dword ptr [rsp + 0x7c8]>', '<mov~~eax, dword ptr [rsp + 0x7cc]>', '<mov~~dword ptr [rsp + 0x7bc], eax>', '<mov~~dword ptr [rsp + 0x7c0], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x7c4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401719>']}, {'block_Idx': 227, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x710]>', '<sub~~eax, 1>', '<jne~~0x402130>']}, {'block_Idx': 215, 'blockInsts': ['<jmp~~0x403eba>']}, {'block_Idx': 211, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x770]>', '<mov~~rsi, qword ptr [rsp + 0xa0]>', '<mov~~edi, dword ptr [rsp + 0xb4]>', '<mov~~rax, qword ptr [rsp + 0x820]>', '<mov~~ecx, dword ptr [rsp + 0xbc]>', '<mov~~dword ptr [rsi], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0x98]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x84], edx>', '<mov~~qword ptr [rsp + 0x88], rcx>', '<mov~~qword ptr [rsp + 0x90], rax>', '<jmp~~0x403ca1>']}, {'block_Idx': 194, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x2c8]>', '<mov~~edx, dword ptr [rsp + 0x2e8]>', '<mov~~rcx, qword ptr [rsp + 0x820]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x27c], ecx>', '<mov~~ecx, edx>', '<sub~~ecx, 2>', '<mov~~ecx, 1>', '<cmovge~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~qword ptr [rsp + 0x280], rcx>', '<mov~~rdx, rcx>', '<add~~rdx, -1>', '<and~~rcx, 3>', '<mov~~qword ptr [rsp + 0x288], rcx>', '<xor~~ecx, ecx>', '<cmp~~rdx, 3>', '<mov~~qword ptr [rsp + 0x290], rcx>', '<mov~~qword ptr [rsp + 0x298], rax>', '<jb~~0x40366b>']}, {'block_Idx': 111, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7d0]>', '<mov~~eax, dword ptr [rsp + 0x858]>', '<movsxd~~rdx, eax>', '<lea~~rax, [rip + 0x4315]>', '<mov~~eax, dword ptr [rax + rdx*4]>', '<mov~~dword ptr [rsp + 0x7c8], ecx>', '<mov~~dword ptr [rsp + 0x7cc], eax>', '<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~edx, dword ptr [rsp + 0x7c8]>', '<mov~~eax, dword ptr [rsp + 0x7cc]>', '<mov~~dword ptr [rsp + 0x7bc], eax>', '<mov~~dword ptr [rsp + 0x7c0], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x7c4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x401719>']}, {'block_Idx': 45, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x838], rax>', '<jmp~~0x4012f6>']}, {'block_Idx': 167, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~eax, dword ptr [rsp + 0x750]>', '<add~~eax, 1>', '<mov~~dword ptr [rcx], eax>', '<mov~~dword ptr [rsp + 0x744], eax>', '<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rsp + 0x948]>', '<mov~~edx, dword ptr [rsp + 0x744]>', '<mov~~dword ptr [rsp + 0x728], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x72c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x730], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x740], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x73c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x740]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401b8c>']}, {'block_Idx': 163, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x33c]>', '<cmp~~eax, 2>', '<jne~~0x403d72>']}, {'block_Idx': 92, 'blockInsts': ['<jmp~~0x4015b1>']}, {'block_Idx': 201, 'blockInsts': ['<jmp~~0x402ff7>']}, {'block_Idx': 48, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x88c]>', '<mov~~rcx, qword ptr [rsp + 0x948]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x878], rcx>', '<mov~~ecx, eax>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x884], ecx>', '<mov~~dword ptr [rsp + 0x888], eax>', '<mov~~ecx, dword ptr [rsp + 0x884]>', '<mov~~rax, qword ptr [rsp + 0x878]>', '<mov~~edx, dword ptr [rsp + 0x888]>', '<mov~~dword ptr [rsp + 0x874], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x403ef1>']}, {'block_Idx': 258, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x68c]>', '<mov~~edx, dword ptr [rsp + 0x688]>', '<mov~~eax, dword ptr [rsp + 0x694]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x960]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x67c], eax>', '<jmp~~0x40209c>']}, {'block_Idx': 80, 'blockInsts': ['<jmp~~0x402ff7>']}, {'block_Idx': 146, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x920]>', '<mov~~qword ptr [rax], rcx>', '<mov~~rax, qword ptr [rsp + 0x8e8]>', '<mov~~dword ptr [rax], 1>', '<mov~~eax, dword ptr [rsp + 0x8dc]>', '<cmp~~eax, 0>', '<jle~~0x400fbd>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x2c8]>', '<mov~~rax, qword ptr [rsp + 0x280]>', '<and~~rax, 0x7ffffffc>', '<mov~~qword ptr [rsp + 0x258], rax>', '<xor~~eax, eax>', '<mov~~rdx, rax>', '<mov~~qword ptr [rsp + 0x260], rdx>', '<mov~~qword ptr [rsp + 0x268], rcx>', '<mov~~qword ptr [rsp + 0x270], rax>', '<mov~~rdx, qword ptr [rsp + 0x270]>', '<mov~~rdi, qword ptr [rsp + 0x268]>', '<mov~~r9, qword ptr [rsp + 0x260]>', '<mov~~rsi, qword ptr [rsp + 0x258]>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~r8, qword ptr [rsp + 0x2d8]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~qword ptr [rsp + 0x228], r9>', '<mov~~r10, qword ptr [rax + r9*8 + 0x58]>', '<mov~~r10d, dword ptr [r10 + r8*4]>', '<shl~~r10d, cl>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~dword ptr [rsp + 0x1fc], r10d>', '<mov~~word ptr [rdi], r10w>', '<mov~~r10, r9>', '<or~~r10, 1>', '<mov~~qword ptr [rsp + 0x200], r10>', '<mov~~r10, qword ptr [rax + r10*8 + 0x58]>', '<mov~~r10d, dword ptr [r10 + r8*4]>', '<shl~~r10d, cl>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~dword ptr [rsp + 0x20c], r10d>', '<mov~~word ptr [rdi + 2], r10w>', '<mov~~r10, r9>', '<or~~r10, 2>', '<mov~~qword ptr [rsp + 0x210], r10>', '<mov~~r10, qword ptr [rax + r10*8 + 0x58]>', '<mov~~r10d, dword ptr [r10 + r8*4]>', '<shl~~r10d, cl>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~dword ptr [rsp + 0x21c], r10d>', '<mov~~word ptr [rdi + 4], r10w>', '<or~~r9, 3>', '<mov~~qword ptr [rsp + 0x220], r9>', '<mov~~rax, qword ptr [rax + r9*8 + 0x58]>', '<mov~~eax, dword ptr [rax + r8*4]>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x228]>', '<mov~~dword ptr [rsp + 0x234], eax>', '<mov~~r8w, ax>', '<mov~~rax, rdi>', '<add~~rax, 8>', '<mov~~qword ptr [rsp + 0x238], rax>', '<mov~~word ptr [rdi + 6], r8w>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x240], rcx>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x248], rdx>', '<cmp~~rdx, rsi>', '<mov~~rsi, rcx>', '<mov~~qword ptr [rsp + 0x260], rsi>', '<mov~~rsi, rax>', '<mov~~qword ptr [rsp + 0x268], rsi>', '<mov~~qword ptr [rsp + 0x270], rdx>', '<mov~~rdx, rax>', '<mov~~qword ptr [rsp + 0x250], rdx>', '<mov~~qword ptr [rsp + 0x290], rcx>', '<mov~~qword ptr [rsp + 0x298], rax>', '<je~~0x40366b>']}, {'block_Idx': 42, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x8dc]>', '<cmp~~eax, 0>', '<jle~~0x400fbd>']}, {'block_Idx': 365, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x650]>', '<mov~~edx, dword ptr [rsp + 0x5f8]>', '<mov~~edi, dword ptr [rsp + 0x5f4]>', '<mov~~rsi, qword ptr [rsp + 0x658]>', '<mov~~ecx, dword ptr [rsp + 0x5f0]>', '<shl~~ecx, 1>', '<mov~~r8d, eax>', '<add~~r8d, -4>', '<mov~~r8d, r8d>', '<mov~~esi, dword ptr [rsi + r8*4]>', '<add~~ecx, edi>', '<add~~edx, esi>', '<sub~~ecx, edx>', '<mov~~dword ptr [rsp + 0x5ec], ecx>', '<cmp~~eax, 4>', '<jne~~0x402bbe>']}, {'block_Idx': 149, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x960]>', '<mov~~edx, dword ptr [rsp + 0x784]>', '<mov~~eax, dword ptr [rsp + 0x788]>', '<mov~~esi, dword ptr [rsp + 0x78c]>', '<mov~~dword ptr [rsp + 0x33c], edx>', '<mov~~edi, esi>', '<neg~~edi>', '<and~~edi, 7>', '<mov~~edx, esi>', '<mov~~esi, edi>', '<lea~~edx, [rdx + rsi + 0x10]>', '<mov~~dword ptr [rcx], edx>', '<mov~~ecx, eax>', '<mov~~qword ptr [rsp + 0x340], rcx>', '<sub~~eax, 3>', '<ja~~0x40309c>']}, {'block_Idx': 178, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rsp + 0x948]>', '<mov~~edx, dword ptr [rsp + 0x744]>', '<mov~~dword ptr [rsp + 0x728], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x72c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x730], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x740], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x73c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x740]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401b8c>']}, {'block_Idx': 230, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~esi, dword ptr [rsp + 0x6ec]>', '<mov~~edx, dword ptr [rsp + 0x6c4]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x6b4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x6b8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402ed7>']}, {'block_Idx': 235, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7b0]>', '<mov~~rax, qword ptr [rsp + 0x748]>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x348], rax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x350], ecx>', '<movsxd~~rcx, ecx>', '<cmp~~rax, rcx>', '<jge~~0x402fc5>']}, {'block_Idx': 208, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x30]>', '<mov~~edx, dword ptr [rsp + 0x40]>', '<mov~~rsi, qword ptr [rsp + 0x28]>', '<mov~~edi, dword ptr [rsp + 0x44]>', '<mov~~ecx, dword ptr [rsp + 0x48]>', '<mov~~r8d, dword ptr [rsp + 0x4c]>', '<mov~~word ptr [rsi], r8w>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0x14], edx>', '<mov~~qword ptr [rsp + 0x18], rcx>', '<mov~~qword ptr [rsp + 0x20], rax>', '<mov~~rsi, qword ptr [rsp + 0x38]>', '<mov~~eax, dword ptr [rsp + 0x14]>', '<mov~~rcx, qword ptr [rsp + 0x18]>', '<mov~~rdx, qword ptr [rsp + 0x20]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x64], edi>', '<mov~~qword ptr [rsp + 0x68], rsi>', '<mov~~qword ptr [rsp + 0x70], rdx>', '<mov~~qword ptr [rsp + 0x78], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jl~~0x403d91>']}, {'block_Idx': 143, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7a4]>', '<mov~~rax, qword ptr [rsp + 0x810]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4347]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 250, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~esi, dword ptr [rsp + 0x760]>', '<mov~~edx, dword ptr [rsp + 0x764]>', '<mov~~rax, qword ptr [rsp + 0x768]>', '<mov~~qword ptr [rsp + 0x748], rax>', '<mov~~dword ptr [rsp + 0x750], edx>', '<mov~~dword ptr [rsp + 0x754], esi>', '<mov~~dword ptr [rcx], edx>', '<cmp~~rax, 0>', '<jne~~0x401ac3>']}, {'block_Idx': 128, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x948]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x798], rcx>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x794], eax>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x798]>', '<movsxd~~rcx, eax>', '<xor~~esi, esi>', '<call~~0x500050>']}, {'block_Idx': 98, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~ecx, dword ptr [rsp + 0x7d0]>', '<mov~~rax, qword ptr [rsp + 0x940]>', '<mov~~rsi, qword ptr [rsp + 0x7e0]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x7c8], ecx>', '<mov~~dword ptr [rsp + 0x7cc], eax>', '<jmp~~0x4016bc>']}, {'block_Idx': 254, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x62c]>', '<mov~~edx, dword ptr [rsp + 0x628]>', '<mov~~eax, dword ptr [rsp + 0x634]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x960]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<jmp~~0x4022e7>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x968]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x401121>']}, {'block_Idx': 364, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x654]>', '<cmp~~eax, 3>', '<jle~~0x402ed7>']}, {'block_Idx': 218, 'blockInsts': ['<jmp~~0x4032d6>']}, {'block_Idx': 157, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x750]>', '<mov~~ecx, dword ptr [rsp + 0x754]>', '<or~~ecx, 2>', '<sub~~ecx, 3>', '<mov~~dword ptr [rsp + 0x744], eax>', '<je~~0x401ae2>']}, {'block_Idx': 46, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x848]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x4012ce>']}, {'block_Idx': 166, 'blockInsts': ['<jmp~~0x401afd>']}, {'block_Idx': 65, 'blockInsts': ['<jmp~~0x402ff7>']}, {'block_Idx': 202, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x110]>', '<mov~~edx, dword ptr [rsp + 0x124]>', '<mov~~rsi, qword ptr [rsp + 0x108]>', '<mov~~ecx, dword ptr [rsp + 0x130]>', '<mov~~r8d, dword ptr [rsp + 0x12c]>', '<mov~~edi, dword ptr [rsp + 0x128]>', '<mov~~r9d, dword ptr [rsp + 0x134]>', '<mov~~word ptr [rsi], r9w>', '<sub~~edi, r8d>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0xf4], edx>', '<mov~~qword ptr [rsp + 0xf8], rcx>', '<mov~~qword ptr [rsp + 0x100], rax>', '<mov~~rsi, qword ptr [rsp + 0x118]>', '<mov~~eax, dword ptr [rsp + 0xf4]>', '<mov~~rcx, qword ptr [rsp + 0xf8]>', '<mov~~rdx, qword ptr [rsp + 0x100]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x14c], edi>', '<mov~~qword ptr [rsp + 0x150], rsi>', '<mov~~qword ptr [rsp + 0x158], rdx>', '<mov~~qword ptr [rsp + 0x160], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jl~~0x40390e>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x960]>', '<mov~~rax, qword ptr [rsp + 0x940]>', '<mov~~edx, dword ptr [rsp + 0x96c]>', '<mov~~esi, edx>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x858], esi>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x85c], edx>', '<mov~~rdx, rax>', '<add~~rdx, 3>', '<mov~~qword ptr [rsp + 0x860], rdx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x868], eax>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x86c], eax>', '<mov~~dword ptr [rcx], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x4011c2>']}, {'block_Idx': 255, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~edi, dword ptr [rsp + 0x62c]>', '<mov~~esi, dword ptr [rsp + 0x628]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~r9d, dword ptr [rsp + 0x634]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x614], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x630]>', '<mov~~dword ptr [rsp + 0x618], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x614]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x618]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<mov~~rax, qword ptr [rsp + 0x620]>', '<mov~~rdx, qword ptr [rsp + 0x658]>', '<mov~~edi, dword ptr [rsp + 0x628]>', '<mov~~esi, dword ptr [rsp + 0x61c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x604], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x604]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x608], rax>', '<cmp~~rax, rcx>', '<je~~0x402371>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~dword ptr [rsp + 0x8e4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400d71>']}, {'block_Idx': 38, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, qword ptr [rsp + 0x998]>', '<mov~~rdi, qword ptr [rsp + 0x9b8]>', '<mov~~rsi, qword ptr [rsp + 0xa10]>', '<mov~~eax, dword ptr [rsp + 0x9a4]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x9c8], esi>', '<mov~~dword ptr [rsp + 0x9cc], edx>', '<mov~~qword ptr [rsp + 0x9d0], rcx>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<jne~~0x403fcf>']}, {'block_Idx': 395, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x600]>', '<mov~~ecx, dword ptr [rsp + 0x5fc]>', '<mov~~edx, dword ptr [rsp + 0x5f4]>', '<mov~~esi, dword ptr [rsp + 0x5ec]>', '<mov~~r8d, dword ptr [rsp + 0x654]>', '<mov~~edi, r8d>', '<mov~~qword ptr [rsp + 0x5c0], rdi>', '<and~~rdi, 1>', '<mov~~qword ptr [rsp + 0x5c8], rdi>', '<mov~~edi, 4>', '<cmp~~r8d, 5>', '<mov~~qword ptr [rsp + 0x5d0], rdi>', '<mov~~dword ptr [rsp + 0x5dc], esi>', '<mov~~dword ptr [rsp + 0x5e0], edx>', '<mov~~dword ptr [rsp + 0x5e4], ecx>', '<mov~~dword ptr [rsp + 0x5e8], eax>', '<je~~0x402d6b>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x9a8]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, rax>', '<add~~rdx, 0xa4>', '<mov~~qword ptr [rsp + 0x998], rdx>', '<mov~~edx, dword ptr [rax + 0xa4]>', '<mov~~dword ptr [rsp + 0x9a0], edx>', '<xor~~edx, 0xffffffff>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<ja~~0x403fcf>']}, {'block_Idx': 269, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x668]>', '<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x6d8], edx>', '<mov~~dword ptr [rsp + 0x6dc], ecx>', '<mov~~qword ptr [rsp + 0x6e0], rax>', '<jmp~~0x401f77>']}, {'block_Idx': 463, 'blockInsts': ['<mov~~rax, qword ptr [rbp - 0x18]>', '<mov~~ecx, dword ptr [rbp - 0xb4]>', '<mov~~edx, dword ptr [rbp - 0x3a8]>', '<sar~~edx, cl>', '<mov~~ecx, dword ptr [rbp - 0x3a4]>', '<movsxd~~rcx, ecx>', '<add~~edx, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rax + rcx*4], edx>', '<xor~~eax, eax>', '<mov~~dword ptr [rbp - 0xac], eax>', '<mov~~eax, dword ptr [rbp - 0xac]>', '<lea~~rsp, [rbp - 8]>', '<pop~~rbx>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 363, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x600]>', '<mov~~ecx, dword ptr [rsp + 0x5fc]>', '<mov~~edx, dword ptr [rsp + 0x654]>', '<mov~~edx, edx>', '<mov~~esi, edx>', '<mov~~rdx, rsi>', '<add~~rdx, -2>', '<mov~~qword ptr [rsp + 0x528], rdx>', '<add~~rsi, -3>', '<and~~rdx, 3>', '<mov~~qword ptr [rsp + 0x530], rdx>', '<mov~~edx, 2>', '<cmp~~rsi, 3>', '<mov~~qword ptr [rsp + 0x538], rdx>', '<mov~~dword ptr [rsp + 0x540], ecx>', '<mov~~dword ptr [rsp + 0x544], eax>', '<jb~~0x402e06>']}, {'block_Idx': 274, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x640]>', '<mov~~eax, dword ptr [rsp + 0x644]>', '<mov~~rsi, qword ptr [rsp + 0x648]>', '<mov~~qword ptr [rsp + 0x620], rsi>', '<mov~~dword ptr [rsp + 0x628], eax>', '<mov~~dword ptr [rsp + 0x62c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x630], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x634], edx>', '<cmp~~eax, 0x12>', '<jge~~0x40225b>']}, {'block_Idx': 207, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x1e0]>', '<mov~~edx, dword ptr [rsp + 0x1f0]>', '<mov~~esi, dword ptr [rsp + 0x1f4]>', '<mov~~rdi, qword ptr [rsp + 0x1d8]>', '<mov~~ecx, dword ptr [rsp + 0x1f8]>', '<mov~~r8w, cx>', '<mov~~rcx, rdi>', '<add~~rcx, 2>', '<mov~~word ptr [rdi], r8w>', '<mov~~dword ptr [rsp + 0x1c0], esi>', '<mov~~dword ptr [rsp + 0x1c4], edx>', '<mov~~qword ptr [rsp + 0x1c8], rcx>', '<mov~~qword ptr [rsp + 0x1d0], rax>', '<mov~~rax, qword ptr [rsp + 0x1e8]>', '<mov~~edx, dword ptr [rsp + 0x1c0]>', '<mov~~ecx, dword ptr [rsp + 0x1c4]>', '<mov~~rsi, qword ptr [rsp + 0x1c8]>', '<mov~~rdi, qword ptr [rsp + 0x1d0]>', '<mov~~qword ptr [rsp + 0x1a0], rdi>', '<mov~~qword ptr [rsp + 0x1a8], rsi>', '<mov~~dword ptr [rsp + 0x1b0], ecx>', '<mov~~dword ptr [rsp + 0x1b4], edx>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x1b8], rax>', '<movsxd~~rcx, ecx>', '<cmp~~rax, rcx>', '<jge~~0x403610>']}, {'block_Idx': 226, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~edi, dword ptr [rsp + 0x6f0]>', '<mov~~esi, dword ptr [rsp + 0x6ec]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~r9d, dword ptr [rsp + 0x6cc]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x6bc], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x6c8]>', '<mov~~dword ptr [rsp + 0x6c0], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6bc]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x6c0]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~esi, dword ptr [rsp + 0x6ec]>', '<mov~~edx, dword ptr [rsp + 0x6c4]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x6b4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x6b4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x6b8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402ed7>']}, {'block_Idx': 192, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x820]>', '<mov~~rax, qword ptr [rsp + 0x828]>', '<mov~~rsi, qword ptr [rsp + 0x140]>', '<mov~~rdx, qword ptr [rsp + 0x138]>', '<mov~~r8d, dword ptr [rsp + 0x14c]>', '<mov~~rdi, qword ptr [rsp + 0x150]>', '<mov~~r9, qword ptr [rsp + 0x158]>', '<mov~~r10, qword ptr [rsp + 0x160]>', '<mov~~qword ptr [rsp + 0x108], r10>', '<mov~~qword ptr [rsp + 0x110], r9>', '<mov~~qword ptr [rsp + 0x118], rdi>', '<mov~~dword ptr [rsp + 0x124], r8d>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~dword ptr [rsp + 0x128], edx>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~dword ptr [rsp + 0x12c], esi>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x130], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x134], edx>', '<cmp~~eax, 0>', '<je~~0x4039ff>']}, {'block_Idx': 241, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x710]>', '<cmp~~eax, 0x1f>', '<jle~~0x402c23>']}, {'block_Idx': 73, 'blockInsts': ['<jmp~~0x402ff7>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x974]>', '<mov~~ecx, dword ptr [rsp + 0x970]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rdx + 0x98]>', '<mov~~ecx, ecx>', '<mov~~rsi, rdi>', '<add~~rsi, rcx>', '<mov~~eax, eax>', '<mov~~edx, eax>', '<call~~0x500028>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, qword ptr [rsp + 0xa10]>', '<mov~~ecx, dword ptr [rsp + 0x9ec]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x9e0]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~esi, dword ptr [rdx]>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0xa1c], esi>', '<mov~~dword ptr [rsp + 0x9c8], edx>', '<mov~~dword ptr [rsp + 0x9cc], ecx>', '<mov~~qword ptr [rsp + 0x9d0], rax>', '<je~~0x400a78>']}, {'block_Idx': 15, 'blockInsts': ['<mov~~edi, dword ptr [rsp + 0x9a4]>', '<mov~~esi, dword ptr [rsp + 0x98c]>', '<mov~~ecx, dword ptr [rsp + 0x990]>', '<mov~~eax, dword ptr [rsp + 0x994]>', '<mov~~dword ptr [rsp + 0x970], eax>', '<mov~~dword ptr [rsp + 0x974], ecx>', '<mov~~edx, eax>', '<add~~edx, edi>', '<add~~edx, ecx>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x978], ecx>', '<mov~~dword ptr [rsp + 0x97c], eax>', '<jbe~~0x4009cb>']}, {'block_Idx': 71, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x804]>', '<mov~~edx, dword ptr [rsp + 0x800]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~edx, 0x28>', '<mov~~qword ptr [rsp + 0x7e8], rdx>', '<mov~~qword ptr [rsp + 0x7f0], rcx>', '<mov~~dword ptr [rsp + 0x7fc], eax>', '<mov~~rcx, qword ptr [rsp + 0x7e8]>', '<mov~~rdx, qword ptr [rsp + 0x7f0]>', '<mov~~eax, dword ptr [rsp + 0x7fc]>', '<mov~~dword ptr [rsp + 0x7d4], eax>', '<mov~~qword ptr [rsp + 0x7d8], rdx>', '<mov~~qword ptr [rsp + 0x7e0], rcx>', '<cmp~~eax, 1>', '<jle~~0x40156a>']}, {'block_Idx': 404, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x658]>', '<mov~~rcx, qword ptr [rsp + 0x3c8]>', '<mov~~esi, dword ptr [rsp + 0x3bc]>', '<mov~~edi, dword ptr [rsp + 0x3c0]>', '<mov~~edx, dword ptr [rsp + 0x3c4]>', '<add~~edx, dword ptr [rax + rcx*4]>', '<add~~edx, edi>', '<add~~edx, esi>', '<mov~~dword ptr [rax + rcx*4], edx>', '<jmp~~0x402ed7>']}, {'block_Idx': 181, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f8]>', '<mov~~rcx, qword ptr [rsp + 0xa00]>', '<mov~~esi, dword ptr [rsp + 0x168]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x138], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x140], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0x14c], esi>', '<mov~~qword ptr [rsp + 0x150], rdx>', '<mov~~qword ptr [rsp + 0x158], rcx>', '<mov~~qword ptr [rsp + 0x160], rax>', '<jmp~~0x40390e>']}, {'block_Idx': 382, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x654]>', '<cmp~~eax, 4>', '<jle~~0x402ed7>']}, {'block_Idx': 104, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0xa0c]>', '<mov~~edx, dword ptr [rsp + 0x7bc]>', '<mov~~esi, dword ptr [rsp + 0x844]>', '<mov~~r8b, byte ptr [rsp + 0x80f]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<add~~rax, 0xc>', '<mov~~qword ptr [rsp + 0x7b0], rax>', '<mov~~eax, 2>', '<mov~~edi, 4>', '<test~~r8b, 1>', '<cmovne~~eax, edi>', '<imul~~eax, esi>', '<imul~~eax, edx>', '<cmp~~eax, ecx>', '<jg~~0x402ff7>']}, {'block_Idx': 183, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x2d8]>', '<mov~~eax, dword ptr [rsp + 0x2f0]>', '<mov~~r9d, dword ptr [rsp + 0x2f4]>', '<mov~~r8d, dword ptr [rsp + 0x2f8]>', '<mov~~edi, dword ptr [rsp + 0x2fc]>', '<mov~~rcx, qword ptr [rsp + 0x300]>', '<mov~~rdx, qword ptr [rsp + 0x308]>', '<add~~rsi, 1>', '<movsxd~~r10, eax>', '<cmp~~rsi, r10>', '<mov~~r10d, eax>', '<mov~~dword ptr [rsp + 0x310], r10d>', '<mov~~dword ptr [rsp + 0x314], r9d>', '<mov~~dword ptr [rsp + 0x318], r8d>', '<mov~~dword ptr [rsp + 0x31c], edi>', '<mov~~qword ptr [rsp + 0x320], rsi>', '<mov~~qword ptr [rsp + 0x328], rdx>', '<mov~~qword ptr [rsp + 0x330], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jl~~0x403136>']}, {'block_Idx': 268, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x680]>', '<mov~~rdx, qword ptr [rsp + 0x6d0]>', '<mov~~edi, dword ptr [rsp + 0x688]>', '<mov~~esi, dword ptr [rsp + 0x67c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x664], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x664]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x668], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402ed7>']}, {'block_Idx': 348, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x654]>', '<cmp~~eax, 2>', '<jle~~0x402ed7>']}, {'block_Idx': 109, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<cmp~~eax, 0>', '<jne~~0x40179a>']}, {'block_Idx': 378, 'blockInsts': ['<jmp~~0x4027b6>']}, {'block_Idx': 44, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~eax, dword ptr [rsp + 0x938]>', '<mov~~ecx, dword ptr [rsp + 0x10]>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<sub~~ecx, eax>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x1cd4]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 52, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~edx, dword ptr [rsp + 0x8e0]>', '<mov~~ecx, dword ptr [rax]>', '<add~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x8cc]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<jne~~0x403ef1>']}, {'block_Idx': 144, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~rax, qword ptr [rsp + 0x940]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40190a>']}, {'block_Idx': 189, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x71c]>', '<mov~~eax, dword ptr [rsp + 0x720]>', '<mov~~edx, dword ptr [rsp + 0x724]>', '<mov~~dword ptr [rsp + 0x6e8], edx>', '<mov~~dword ptr [rsp + 0x6ec], eax>', '<mov~~dword ptr [rsp + 0x6f0], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x401d49>']}, {'block_Idx': 220, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x1a8]>', '<mov~~rcx, qword ptr [rsp + 0x1a0]>', '<mov~~rdx, qword ptr [rsp + 0x1b8]>', '<mov~~edi, dword ptr [rsp + 0x1b0]>', '<mov~~r8d, dword ptr [rsp + 0x1b4]>', '<mov~~rsi, qword ptr [rsp + 0x828]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x2a4], r8d>', '<mov~~dword ptr [rsp + 0x2a8], edi>', '<mov~~dword ptr [rsp + 0x2ac], esi>', '<mov~~qword ptr [rsp + 0x2b0], rdx>', '<mov~~qword ptr [rsp + 0x2b8], rcx>', '<mov~~qword ptr [rsp + 0x2c0], rax>', '<jmp~~0x40342f>']}, {'block_Idx': 229, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x270]>', '<mov~~rdi, qword ptr [rsp + 0x268]>', '<mov~~r9, qword ptr [rsp + 0x260]>', '<mov~~rsi, qword ptr [rsp + 0x258]>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~r8, qword ptr [rsp + 0x2d8]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~qword ptr [rsp + 0x228], r9>', '<mov~~r10, qword ptr [rax + r9*8 + 0x58]>', '<mov~~r10d, dword ptr [r10 + r8*4]>', '<shl~~r10d, cl>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~dword ptr [rsp + 0x1fc], r10d>', '<mov~~word ptr [rdi], r10w>', '<mov~~r10, r9>', '<or~~r10, 1>', '<mov~~qword ptr [rsp + 0x200], r10>', '<mov~~r10, qword ptr [rax + r10*8 + 0x58]>', '<mov~~r10d, dword ptr [r10 + r8*4]>', '<shl~~r10d, cl>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~dword ptr [rsp + 0x20c], r10d>', '<mov~~word ptr [rdi + 2], r10w>', '<mov~~r10, r9>', '<or~~r10, 2>', '<mov~~qword ptr [rsp + 0x210], r10>', '<mov~~r10, qword ptr [rax + r10*8 + 0x58]>', '<mov~~r10d, dword ptr [r10 + r8*4]>', '<shl~~r10d, cl>', '<mov~~ecx, dword ptr [rsp + 0x27c]>', '<mov~~dword ptr [rsp + 0x21c], r10d>', '<mov~~word ptr [rdi + 4], r10w>', '<or~~r9, 3>', '<mov~~qword ptr [rsp + 0x220], r9>', '<mov~~rax, qword ptr [rax + r9*8 + 0x58]>', '<mov~~eax, dword ptr [rax + r8*4]>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x228]>', '<mov~~dword ptr [rsp + 0x234], eax>', '<mov~~r8w, ax>', '<mov~~rax, rdi>', '<add~~rax, 8>', '<mov~~qword ptr [rsp + 0x238], rax>', '<mov~~word ptr [rdi + 6], r8w>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x240], rcx>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x248], rdx>', '<cmp~~rdx, rsi>', '<mov~~rsi, rcx>', '<mov~~qword ptr [rsp + 0x260], rsi>', '<mov~~rsi, rax>', '<mov~~qword ptr [rsp + 0x268], rsi>', '<mov~~qword ptr [rsp + 0x270], rdx>', '<mov~~rdx, rax>', '<mov~~qword ptr [rsp + 0x250], rdx>', '<mov~~qword ptr [rsp + 0x290], rcx>', '<mov~~qword ptr [rsp + 0x298], rax>', '<je~~0x40366b>']}, {'block_Idx': 393, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x578]>', '<mov~~rcx, qword ptr [rsp + 0x580]>', '<mov~~edx, dword ptr [rsp + 0x58c]>', '<mov~~esi, dword ptr [rsp + 0x590]>', '<mov~~edi, dword ptr [rsp + 0x594]>', '<mov~~dword ptr [rsp + 0x3bc], edi>', '<mov~~dword ptr [rsp + 0x3c0], esi>', '<mov~~dword ptr [rsp + 0x3c4], edx>', '<mov~~qword ptr [rsp + 0x3c8], rcx>', '<cmp~~rax, 0>', '<je~~0x402ed7>']}, {'block_Idx': 416, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x658]>', '<mov~~rcx, qword ptr [rsp + 0x3b0]>', '<mov~~esi, dword ptr [rsp + 0x3a0]>', '<mov~~edi, dword ptr [rsp + 0x3a4]>', '<mov~~r8d, dword ptr [rsp + 0x3a8]>', '<mov~~edx, dword ptr [rsp + 0x3ac]>', '<add~~edx, dword ptr [rax + rcx*4]>', '<add~~edx, r8d>', '<add~~edx, edi>', '<add~~edx, esi>', '<mov~~dword ptr [rax + rcx*4], edx>', '<jmp~~0x402ed7>']}, {'block_Idx': 88, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<jmp~~0x403fcf>']}, {'block_Idx': 30, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x8cc]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<jne~~0x403ef1>']}, {'block_Idx': 240, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, qword ptr [rsp + 0x748]>', '<mov~~rsi, qword ptr [rsp + 0x770]>', '<mov~~eax, dword ptr [rsp + 0x710]>', '<and~~eax, 0xfffffff7>', '<mov~~dword ptr [rsp + 0x650], eax>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x654], esi>', '<mov~~rcx, qword ptr [rcx + rdx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x658], rcx>', '<cmp~~eax, 0>', '<je~~0x40239a>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x9ec]>', '<mov~~esi, dword ptr [rsp + 0x9c4]>', '<mov~~ecx, dword ptr [rsp + 0x9b4]>', '<xor~~edx, edx>', '<sub~~ecx, esi>', '<cmovb~~ecx, edx>', '<cmp~~ecx, eax>', '<cmovb~~eax, ecx>', '<mov~~dword ptr [rsp + 0x9b0], eax>', '<mov~~eax, dword ptr [rsp + 0x9c4]>', '<mov~~edx, dword ptr [rsp + 0x9b0]>', '<mov~~dword ptr [rsp + 0x9a4], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x9a8], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<jb~~0x403fcf>']}, {'block_Idx': 298, 'blockInsts': ['<jmp~~0x402ed7>']}, {'block_Idx': 27, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x9f0]>', '<mov~~rcx, qword ptr [rsp + 0x9b8]>', '<mov~~rdx, qword ptr [rsp + 0x980]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x998]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x98c], edx>', '<mov~~dword ptr [rsp + 0x990], ecx>', '<mov~~dword ptr [rsp + 0x994], eax>', '<mov~~edi, dword ptr [rsp + 0x9a4]>', '<mov~~esi, dword ptr [rsp + 0x98c]>', '<mov~~ecx, dword ptr [rsp + 0x990]>', '<mov~~eax, dword ptr [rsp + 0x994]>', '<mov~~dword ptr [rsp + 0x970], eax>', '<mov~~dword ptr [rsp + 0x974], ecx>', '<mov~~edx, eax>', '<add~~edx, edi>', '<add~~edx, ecx>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x978], ecx>', '<mov~~dword ptr [rsp + 0x97c], eax>', '<jbe~~0x4009cb>']}, {'block_Idx': 34, 'blockInsts': ['<jmp~~0x401214>']}, {'block_Idx': 87, 'blockInsts': ['<jmp~~0x401587>']}, {'block_Idx': 127, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x8b4]>', '<mov~~eax, dword ptr [rsp + 0x8b8]>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x8b0], eax>', '<jle~~0x400f47>']}, {'block_Idx': 185, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f8]>', '<mov~~rcx, qword ptr [rsp + 0xa00]>', '<mov~~esi, dword ptr [rsp + 0x80]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x50], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x58], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0x64], esi>', '<mov~~qword ptr [rsp + 0x68], rdx>', '<mov~~qword ptr [rsp + 0x70], rcx>', '<mov~~qword ptr [rsp + 0x78], rax>', '<jmp~~0x403d91>']}, {'block_Idx': 63, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x818]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x488b]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 206, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x1d8]>', '<mov~~rdx, qword ptr [rsp + 0x7b0]>', '<mov~~rsi, qword ptr [rsp + 0x1e0]>', '<mov~~edi, dword ptr [rsp + 0x1f8]>', '<mov~~rax, rsi>', '<add~~rax, 4>', '<mov~~dword ptr [rsi], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x1c0], esi>', '<mov~~dword ptr [rsp + 0x1c4], edx>', '<mov~~qword ptr [rsp + 0x1c8], rcx>', '<mov~~qword ptr [rsp + 0x1d0], rax>', '<jmp~~0x403554>']}, {'block_Idx': 361, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x4f0]>', '<mov~~rdx, qword ptr [rsp + 0x4f8]>', '<mov~~ecx, dword ptr [rsp + 0x504]>', '<xor~~eax, eax>', '<cmp~~rsi, 0>', '<mov~~qword ptr [rsp + 0x3e8], rdx>', '<mov~~dword ptr [rsp + 0x3f4], ecx>', '<mov~~qword ptr [rsp + 0x3f8], rax>', '<je~~0x402ed7>']}, {'block_Idx': 245, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6ec]>', '<mov~~edx, dword ptr [rsp + 0x6f0]>', '<mov~~rsi, qword ptr [rsp + 0x748]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<add~~rax, 0x58>', '<shl~~rsi, 3>', '<add~~rax, rsi>', '<mov~~qword ptr [rsp + 0x6d0], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x6d8], edx>', '<mov~~dword ptr [rsp + 0x6dc], ecx>', '<mov~~qword ptr [rsp + 0x6e0], rax>', '<jmp~~0x401f77>']}, {'block_Idx': 39, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x998]>', '<mov~~rax, qword ptr [rsp + 0x9b8]>', '<mov~~dword ptr [rcx], 0>', '<mov~~ecx, dword ptr [rax]>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x978], ecx>', '<mov~~dword ptr [rsp + 0x97c], eax>', '<mov~~eax, dword ptr [rsp + 0x9a4]>', '<mov~~rdi, qword ptr [rsp + 0x9f0]>', '<mov~~rsi, qword ptr [rsp + 0x9e0]>', '<mov~~ecx, dword ptr [rsp + 0x978]>', '<mov~~edx, dword ptr [rsp + 0x97c]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<add~~ecx, edx>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500030>']}, {'block_Idx': 259, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~edi, dword ptr [rsp + 0x68c]>', '<mov~~esi, dword ptr [rsp + 0x688]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~r9d, dword ptr [rsp + 0x694]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x674], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x690]>', '<mov~~dword ptr [rsp + 0x678], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x674]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x678]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x67c], eax>', '<mov~~rax, qword ptr [rsp + 0x680]>', '<mov~~rdx, qword ptr [rsp + 0x6d0]>', '<mov~~edi, dword ptr [rsp + 0x688]>', '<mov~~esi, dword ptr [rsp + 0x67c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x664], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x664]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x668], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x402ed7>']}, {'block_Idx': 392, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x520]>', '<mov~~eax, dword ptr [rsp + 0x51c]>', '<mov~~ecx, dword ptr [rsp + 0x518]>', '<mov~~rdx, qword ptr [rsp + 0x510]>', '<mov~~rdi, qword ptr [rsp + 0x508]>', '<mov~~r8, qword ptr [rsp + 0x658]>', '<mov~~qword ptr [rsp + 0x460], rdx>', '<add~~ecx, dword ptr [r8 + rdx*4]>', '<mov~~dword ptr [rsp + 0x468], ecx>', '<mov~~r10d, ecx>', '<add~~r10d, eax>', '<mov~~dword ptr [rsp + 0x46c], r10d>', '<mov~~dword ptr [r8 + rdx*4], r10d>', '<mov~~r9, rdx>', '<or~~r9, 1>', '<mov~~qword ptr [rsp + 0x470], r9>', '<add~~ecx, dword ptr [r8 + r9*4]>', '<mov~~dword ptr [rsp + 0x478], ecx>', '<mov~~eax, ecx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x47c], eax>', '<mov~~dword ptr [r8 + r9*4], eax>', '<add~~ecx, dword ptr [r8 + rdx*4 + 8]>', '<mov~~dword ptr [rsp + 0x480], ecx>', '<mov~~r9d, ecx>', '<add~~r9d, eax>', '<mov~~dword ptr [rsp + 0x484], r9d>', '<mov~~dword ptr [r8 + rdx*4 + 8], r9d>', '<add~~ecx, dword ptr [r8 + rdx*4 + 0xc]>', '<mov~~dword ptr [rsp + 0x488], ecx>', '<mov~~eax, ecx>', '<add~~eax, r9d>', '<mov~~dword ptr [rsp + 0x48c], eax>', '<mov~~dword ptr [r8 + rdx*4 + 0xc], eax>', '<add~~rdx, 4>', '<mov~~qword ptr [rsp + 0x490], rdx>', '<add~~rsi, 4>', '<mov~~qword ptr [rsp + 0x498], rsi>', '<cmp~~rsi, rdi>', '<mov~~rdi, rdx>', '<mov~~qword ptr [rsp + 0x510], rdi>', '<mov~~edi, ecx>', '<mov~~dword ptr [rsp + 0x518], edi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x51c], edi>', '<mov~~qword ptr [rsp + 0x520], rsi>', '<mov~~qword ptr [rsp + 0x538], rdx>', '<mov~~dword ptr [rsp + 0x540], ecx>', '<mov~~dword ptr [rsp + 0x544], eax>', '<je~~0x402e06>']}, {'block_Idx': 209, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x770]>', '<mov~~rsi, qword ptr [rsp + 0x30]>', '<mov~~edi, dword ptr [rsp + 0x44]>', '<mov~~rax, qword ptr [rsp + 0x820]>', '<mov~~ecx, dword ptr [rsp + 0x4c]>', '<mov~~dword ptr [rsi], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0x28]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x14], edx>', '<mov~~qword ptr [rsp + 0x18], rcx>', '<mov~~qword ptr [rsp + 0x20], rax>', '<jmp~~0x403e7b>']}, {'block_Idx': 136, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x8e8]>', '<mov~~dword ptr [rax], 1>', '<mov~~eax, dword ptr [rsp + 0x8dc]>', '<cmp~~eax, 0>', '<jle~~0x400fbd>']}, {'block_Idx': 66, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x884]>', '<mov~~rax, qword ptr [rsp + 0x878]>', '<mov~~edx, dword ptr [rsp + 0x888]>', '<mov~~dword ptr [rsp + 0x874], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x403ef1>']}, {'block_Idx': 41, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x8e8]>', '<cmp~~dword ptr [rax], 0>', '<jne~~0x400f9c>']}, {'block_Idx': 102, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x858]>', '<sub~~eax, 7>', '<je~~0x401640>']}, {'block_Idx': 40, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x948]>', '<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~eax, dword ptr [rax]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x928], rcx>', '<mov~~dword ptr [rsp + 0x934], eax>', '<jmp~~0x400c09>']}, {'block_Idx': 318, 'blockInsts': ['<jmp~~0x4023c1>']}, {'block_Idx': 380, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x600]>', '<mov~~edx, dword ptr [rsp + 0x5fc]>', '<mov~~rax, qword ptr [rsp + 0x528]>', '<and~~rax, 0xfffffffffffffffc>', '<mov~~qword ptr [rsp + 0x508], rax>', '<mov~~esi, 2>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x510], rsi>', '<mov~~dword ptr [rsp + 0x518], edx>', '<mov~~dword ptr [rsp + 0x51c], ecx>', '<mov~~qword ptr [rsp + 0x520], rax>', '<jmp~~0x402870>']}, {'block_Idx': 130, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x918]>', '<mov~~ecx, dword ptr [rsp + 0x8b0]>', '<mov~~dword ptr [rsp + 0x890], ecx>', '<cmp~~dword ptr [rax], ecx>', '<jae~~0x400f8e>']}, {'block_Idx': 141, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x900]>', '<mov~~rdx, rax>', '<mov~~rax, qword ptr [rsp + 0x910]>', '<mov~~qword ptr [rax], rdx>', '<mov~~eax, 1>', '<cmp~~dword ptr [rcx], 1>', '<mov~~qword ptr [rsp + 0x8a8], rax>', '<jle~~0x400f36>']}, {'block_Idx': 238, 'blockInsts': ['<jmp~~0x402ed7>']}, {'block_Idx': 233, 'blockInsts': ['<jmp~~0x401d68>']}, {'block_Idx': 249, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x9f0]>', '<mov~~rax, qword ptr [rsp + 0x748]>', '<mov~~edx, dword ptr [rsp + 0x710]>', '<and~~edx, 0xffffffdf>', '<add~~edx, 1>', '<mov~~esi, eax>', '<call~~0x404000>']}, {'block_Idx': 325, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x658]>', '<mov~~edx, eax>', '<add~~edx, -1>', '<mov~~edx, edx>', '<mov~~ecx, dword ptr [rcx + rdx*4]>', '<mov~~dword ptr [rsp + 0x600], ecx>', '<cmp~~eax, 1>', '<je~~0x40271e>']}, {'block_Idx': 405, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x568]>', '<mov~~ecx, dword ptr [rsp + 0x564]>', '<mov~~r10d, dword ptr [rsp + 0x560]>', '<mov~~edx, dword ptr [rsp + 0x55c]>', '<mov~~rsi, qword ptr [rsp + 0x550]>', '<mov~~r8, qword ptr [rsp + 0x548]>', '<mov~~r9, qword ptr [rsp + 0x658]>', '<add~~edx, dword ptr [r9 + rsi*4]>', '<mov~~dword ptr [rsp + 0x438], edx>', '<mov~~eax, edx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x43c], eax>', '<mov~~r10d, eax>', '<add~~r10d, ecx>', '<mov~~dword ptr [rsp + 0x440], r10d>', '<mov~~dword ptr [r9 + rsi*4], r10d>', '<add~~edx, dword ptr [r9 + rsi*4 + 4]>', '<mov~~dword ptr [rsp + 0x444], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x448], ecx>', '<mov~~eax, ecx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x44c], eax>', '<mov~~dword ptr [r9 + rsi*4 + 4], eax>', '<add~~rsi, 2>', '<mov~~qword ptr [rsp + 0x450], rsi>', '<add~~rdi, 2>', '<mov~~qword ptr [rsp + 0x458], rdi>', '<cmp~~rdi, r8>', '<mov~~r8, rsi>', '<mov~~qword ptr [rsp + 0x550], r8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rsp + 0x55c], r8d>', '<mov~~r8d, ecx>', '<mov~~dword ptr [rsp + 0x560], r8d>', '<mov~~r8d, eax>', '<mov~~dword ptr [rsp + 0x564], r8d>', '<mov~~qword ptr [rsp + 0x568], rdi>', '<mov~~qword ptr [rsp + 0x580], rsi>', '<mov~~dword ptr [rsp + 0x58c], edx>', '<mov~~dword ptr [rsp + 0x590], ecx>', '<mov~~dword ptr [rsp + 0x594], eax>', '<je~~0x402ceb>']}, {'block_Idx': 190, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x718]>', '<mov~~edi, dword ptr [rsp + 0x714]>', '<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rsp + 0x730]>', '<mov~~dword ptr [rsp + 0x6f4], eax>', '<mov~~esi, edi>', '<sar~~esi, 3>', '<mov~~dword ptr [rsp + 0x6f8], esi>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x6fc], ecx>', '<movzx~~esi, sil>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x700], edi>', '<mov~~dword ptr [rdx], edi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x700]>', '<mov~~dword ptr [rsp + 0x704], edx>', '<and~~edx, esi>', '<mov~~dword ptr [rsp + 0x708], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x70c], eax>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x714], ecx>', '<mov~~dword ptr [rsp + 0x718], eax>', '<je~~0x401c33>']}, {'block_Idx': 204, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x2d0]>', '<mov~~edx, dword ptr [rsp + 0x2e8]>', '<mov~~esi, dword ptr [rsp + 0x2ec]>', '<mov~~r10, qword ptr [rsp + 0x288]>', '<mov~~rcx, qword ptr [rsp + 0x250]>', '<mov~~r9, qword ptr [rsp + 0x290]>', '<mov~~r8, qword ptr [rsp + 0x298]>', '<xor~~edi, edi>', '<cmp~~r10, 0>', '<mov~~qword ptr [rsp + 0x188], r9>', '<mov~~qword ptr [rsp + 0x190], r8>', '<mov~~qword ptr [rsp + 0x198], rdi>', '<mov~~dword ptr [rsp + 0x2f0], esi>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x2f4], esi>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x2f8], esi>', '<mov~~dword ptr [rsp + 0x2fc], edx>', '<mov~~qword ptr [rsp + 0x300], rcx>', '<mov~~qword ptr [rsp + 0x308], rax>', '<je~~0x4037dc>']}, {'block_Idx': 203, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x770]>', '<mov~~rsi, qword ptr [rsp + 0x110]>', '<mov~~rax, qword ptr [rsp + 0x820]>', '<mov~~ecx, dword ptr [rsp + 0x12c]>', '<mov~~edi, dword ptr [rsp + 0x128]>', '<mov~~r8d, dword ptr [rsp + 0x134]>', '<mov~~dword ptr [rsi], r8d>', '<sub~~edi, ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0x108]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0xf4], edx>', '<mov~~qword ptr [rsp + 0xf8], rcx>', '<mov~~qword ptr [rsp + 0x100], rax>', '<jmp~~0x403a64>']}, {'block_Idx': 165, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9d8]>', '<mov~~rdi, qword ptr [rsp + 0x828]>', '<mov~~rdx, qword ptr [rsp + 0x7b0]>', '<mov~~ecx, dword ptr [rsp + 0x338]>', '<imul~~ecx, dword ptr [rdx]>', '<mov~~edx, 4>', '<mov~~esi, 2>', '<cmp~~dword ptr [rdi], 0>', '<cmove~~edx, esi>', '<imul~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x938]>', '<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x10], eax>', '<cmp~~eax, ecx>', '<jle~~0x403f68>']}, {'block_Idx': 403, 'blockInsts': ['<jmp~~0x402870>']}, {'block_Idx': 179, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x960]>', '<mov~~edx, dword ptr [rsp + 0x72c]>', '<mov~~rax, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x73c]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x710], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 7>', '<mov~~dword ptr [rsi], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~edx, 8>', '<mov~~dword ptr [rsi], edx>', '<mov~~edi, 0x80>', '<shr~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x728]>', '<and~~edi, eax>', '<xor~~eax, eax>', '<mov~~esi, 1>', '<cmp~~edi, 0>', '<mov~~edi, edx>', '<mov~~dword ptr [rsp + 0x714], edi>', '<mov~~dword ptr [rsp + 0x718], esi>', '<mov~~dword ptr [rsp + 0x71c], edx>', '<mov~~dword ptr [rsp + 0x720], ecx>', '<mov~~dword ptr [rsp + 0x724], eax>', '<je~~0x401cfc>']}, {'block_Idx': 224, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0xa8]>', '<mov~~eax, dword ptr [rsp + 0x84]>', '<mov~~rcx, qword ptr [rsp + 0x88]>', '<mov~~rdx, qword ptr [rsp + 0x90]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0xd4], edi>', '<mov~~qword ptr [rsp + 0xd8], rsi>', '<mov~~qword ptr [rsp + 0xe0], rdx>', '<mov~~qword ptr [rsp + 0xe8], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jl~~0x403b66>']}, {'block_Idx': 126, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0xa10]>', '<mov~~esi, dword ptr [rsp + 0x8bc]>', '<mov~~eax, dword ptr [rsp + 0x8b4]>', '<mov~~rdx, qword ptr [rsp + 0x908]>', '<mov~~edx, dword ptr [rdx]>', '<imul~~eax, esi>', '<imul~~eax, edx>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rcx], eax>', '<mov~~dword ptr [rsp + 0x8b8], eax>', '<mov~~ecx, dword ptr [rsp + 0x8b4]>', '<mov~~eax, dword ptr [rsp + 0x8b8]>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x8b0], eax>', '<jle~~0x400f47>']}, {'block_Idx': 237, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6a8]>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~rdx, qword ptr [rsp + 0x6a0]>', '<mov~~esi, dword ptr [rsp + 0x6b8]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x698], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x6a8], rax>', '<jl~~0x401f34>']}, {'block_Idx': 415, 'blockInsts': ['<jmp~~0x40298a>']}, {'block_Idx': 408, 'blockInsts': ['<jmp~~0x402ff7>']}, {'block_Idx': 62, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rsp + 0x940]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x800], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~ecx, edi>', '<shr~~ecx, 8>', '<mov~~eax, edx>', '<or~~eax, 8>', '<cmp~~esi, 0>', '<cmove~~ecx, edi>', '<cmp~~esi, 0>', '<cmove~~eax, edx>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, qword ptr [rip + 0xfebdb]>', '<movzx~~ecx, byte ptr [rcx + rdx]>', '<add~~eax, ecx>', '<mov~~ecx, 7>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsp + 0x804], ecx>', '<cmp~~eax, 6>', '<je~~0x401587>']}, {'block_Idx': 236, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402f61>']}, {'block_Idx': 118, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~eax, dword ptr [rsp + 0x85c]>', '<movsxd~~rdx, eax>', '<lea~~rax, [rip + 0x4242]>', '<mov~~eax, dword ptr [rax + rdx*4]>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40190a>']}, {'block_Idx': 197, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x820]>', '<mov~~rax, qword ptr [rsp + 0x828]>', '<mov~~rdx, qword ptr [rsp + 0xc8]>', '<mov~~rsi, qword ptr [rsp + 0xc0]>', '<mov~~r8d, dword ptr [rsp + 0xd4]>', '<mov~~rdi, qword ptr [rsp + 0xd8]>', '<mov~~r9, qword ptr [rsp + 0xe0]>', '<mov~~r10, qword ptr [rsp + 0xe8]>', '<mov~~qword ptr [rsp + 0x98], r10>', '<mov~~qword ptr [rsp + 0xa0], r9>', '<mov~~qword ptr [rsp + 0xa8], rdi>', '<mov~~dword ptr [rsp + 0xb0], r8d>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~dword ptr [rsp + 0xb4], edx>', '<mov~~eax, dword ptr [rax]>', '<add~~edx, esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0xb8], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0xbc], edx>', '<cmp~~eax, 0>', '<je~~0x403c47>']}, {'block_Idx': 24, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x86c]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~edx, ecx>', '<mov~~dword ptr [rsp + 0x84c], edx>', '<mov~~dword ptr [rsp + 0x850], ecx>', '<mov~~dword ptr [rsp + 0x854], eax>', '<je~~0x401244>']}, {'block_Idx': 0, 'blockInsts': ['<push~~rbx>', '<sub~~rsp, 0xa20>', '<mov~~qword ptr [rsp + 0x9d8], rdx>', '<mov~~qword ptr [rsp + 0x9e0], rcx>', '<mov~~dword ptr [rsp + 0x9ec], r8d>', '<mov~~rax, qword ptr [rdi + 0xa0]>', '<mov~~qword ptr [rsp + 0x9f0], rax>', '<mov~~rcx, rsi>', '<mov~~qword ptr [rsp + 0x9f8], rcx>', '<mov~~qword ptr [rsp + 0xa00], rsi>', '<mov~~ecx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0xa0c], ecx>', '<mov~~dword ptr [rdx], 0>', '<mov~~rcx, rax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0xa10], rcx>', '<mov~~eax, dword ptr [rax + 4]>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0xa1c], eax>', '<jne~~0x40077d>']}, {'block_Idx': 155, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jmp~~0x403eba>']}, {'block_Idx': 231, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6e8]>', '<cmp~~eax, 0>', '<je~~0x402f61>']}, {'block_Idx': 184, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x2c8]>', '<mov~~rcx, qword ptr [rsp + 0x2d0]>', '<mov~~edi, dword ptr [rsp + 0x2e4]>', '<mov~~r8d, dword ptr [rsp + 0x2e8]>', '<mov~~r9, qword ptr [rsp + 0x828]>', '<mov~~esi, 1>', '<xor~~edx, edx>', '<cmp~~dword ptr [r9], 0>', '<mov~~dword ptr [rsp + 0x2a4], r8d>', '<mov~~dword ptr [rsp + 0x2a8], edi>', '<mov~~dword ptr [rsp + 0x2ac], esi>', '<mov~~qword ptr [rsp + 0x2b0], rdx>', '<mov~~qword ptr [rsp + 0x2b8], rcx>', '<mov~~qword ptr [rsp + 0x2c0], rax>', '<jne~~0x40342f>']}, {'block_Idx': 148, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x8a8]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~qword ptr [rsp + 0x898], rcx>', '<mov~~esi, dword ptr [rax]>', '<mov~~rdi, qword ptr [rax + rcx*8 + 0x58]>', '<shl~~esi, 2>', '<mov~~dword ptr [rsp + 0x894], esi>', '<call~~0x500010>']}, {'block_Idx': 200, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6f4]>', '<mov~~edx, dword ptr [rsp + 0x700]>', '<mov~~rsi, qword ptr [rsp + 0x758]>', '<mov~~ecx, dword ptr [rsp + 0x728]>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsi], ecx>', '<mov~~dword ptr [rsp + 0x71c], edx>', '<mov~~dword ptr [rsp + 0x720], ecx>', '<mov~~dword ptr [rsp + 0x724], eax>', '<mov~~ecx, dword ptr [rsp + 0x71c]>', '<mov~~eax, dword ptr [rsp + 0x720]>', '<mov~~edx, dword ptr [rsp + 0x724]>', '<mov~~dword ptr [rsp + 0x6e8], edx>', '<mov~~dword ptr [rsp + 0x6ec], eax>', '<mov~~dword ptr [rsp + 0x6f0], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x401d49>']}, {'block_Idx': 239, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x770]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402ed7>']}, {'block_Idx': 169, 'blockInsts': ['<jmp~~0x402ff7>']}, {'block_Idx': 160, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~rcx, qword ptr [rsp + 0x900]>', '<mov~~rsi, rax>', '<mov~~rax, qword ptr [rsp + 0x898]>', '<mov~~qword ptr [rdx + rax*8 + 0x58], rsi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x8a0], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x8a8], rax>', '<jl~~0x400ecc>']}, {'block_Idx': 156, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x750]>', '<mov~~ecx, dword ptr [rsp + 0x754]>', '<cmp~~ecx, 2>', '<mov~~dword ptr [rsp + 0x744], eax>', '<je~~0x401ae2>']}, {'block_Idx': 147, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0xa10]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x8b0], eax>', '<mov~~rax, qword ptr [rsp + 0x918]>', '<mov~~ecx, dword ptr [rsp + 0x8b0]>', '<mov~~dword ptr [rsp + 0x890], ecx>', '<cmp~~dword ptr [rax], ecx>', '<jae~~0x400f8e>']}, {'block_Idx': 50, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x960]>', '<mov~~rax, qword ptr [rsp + 0x928]>', '<mov~~edx, dword ptr [rsp + 0x934]>', '<mov~~qword ptr [rsp + 0x8c0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x8d4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x8cc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x8d0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x950]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x8d8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x8dc], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x8e0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x8e4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400d71>']}, {'block_Idx': 252, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~ecx, dword ptr [rsp + 0x6d8]>', '<mov~~eax, dword ptr [rsp + 0x6dc]>', '<mov~~rsi, qword ptr [rsp + 0x6e0]>', '<mov~~qword ptr [rsp + 0x680], rsi>', '<mov~~dword ptr [rsp + 0x688], eax>', '<mov~~dword ptr [rsp + 0x68c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x690], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x694], edx>', '<cmp~~eax, 0x12>', '<jge~~0x402010>']}, {'block_Idx': 172, 'blockInsts': ['<jmp~~0x403eba>']}, {'block_Idx': 115, 'blockInsts': ['<jmp~~0x402ff7>']}, {'block_Idx': 251, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x368]>', '<mov~~rdx, qword ptr [rsp + 0x360]>', '<mov~~ecx, dword ptr [rsp + 0x6e8]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~dword ptr [rsp + 0x354], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x358], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x368], rax>', '<jl~~0x402f17>']}, {'block_Idx': 394, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x600]>', '<mov~~edx, dword ptr [rsp + 0x5fc]>', '<mov~~esi, dword ptr [rsp + 0x5f4]>', '<mov~~rax, qword ptr [rsp + 0x570]>', '<and~~rax, 0xfffffffffffffffe>', '<mov~~qword ptr [rsp + 0x548], rax>', '<mov~~edi, 3>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x550], rdi>', '<mov~~dword ptr [rsp + 0x55c], esi>', '<mov~~dword ptr [rsp + 0x560], edx>', '<mov~~dword ptr [rsp + 0x564], ecx>', '<mov~~qword ptr [rsp + 0x568], rax>', '<jmp~~0x40298a>']}, {'block_Idx': 131, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x910]>', '<mov~~esi, dword ptr [rsp + 0x8bc]>', '<mov~~rdi, qword ptr [rax]>', '<shl~~esi, 2>', '<call~~0x500010>']}, {'block_Idx': 133, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~rax, qword ptr [rsp + 0x940]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40190a>']}, {'block_Idx': 177, 'blockInsts': ['<lea~~rdi, [rip + 0x205f]>', '<lea~~rsi, [rip + 0x1ff0]>', '<mov~~edx, 0x2b7>', '<lea~~rcx, [rip + 0x205d]>', '<call~~0x500008>']}, {'block_Idx': 225, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x6f0]>', '<mov~~edx, dword ptr [rsp + 0x6ec]>', '<mov~~eax, dword ptr [rsp + 0x6cc]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x960]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x6c4], eax>', '<jmp~~0x401ece>']}, {'block_Idx': 123, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<mov~~rax, qword ptr [rsp + 0x940]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x7c0]>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x7a8], ecx>', '<mov~~dword ptr [rsp + 0x7ac], eax>', '<jmp~~0x40190a>']}, {'block_Idx': 145, 'blockInsts': ['<jmp~~0x4018e6>']}, {'block_Idx': 242, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x348]>', '<mov~~rdx, qword ptr [rsp + 0x778]>', '<mov~~rcx, qword ptr [rsp + 0x830]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x760], edx>', '<mov~~dword ptr [rsp + 0x764], ecx>', '<mov~~qword ptr [rsp + 0x768], rax>', '<jmp~~0x401a6b>']}, {'block_Idx': 417, 'blockInsts': ['<mov~~r8, qword ptr [rsp + 0x5b8]>', '<mov~~edx, dword ptr [rsp + 0x5b4]>', '<mov~~r11d, dword ptr [rsp + 0x5b0]>', '<mov~~eax, dword ptr [rsp + 0x5ac]>', '<mov~~esi, dword ptr [rsp + 0x5a8]>', '<mov~~rdi, qword ptr [rsp + 0x5a0]>', '<mov~~r9, qword ptr [rsp + 0x598]>', '<mov~~r10, qword ptr [rsp + 0x658]>', '<add~~esi, dword ptr [r10 + rdi*4]>', '<mov~~dword ptr [rsp + 0x400], esi>', '<mov~~ecx, esi>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x404], ecx>', '<mov~~eax, ecx>', '<add~~eax, r11d>', '<mov~~dword ptr [rsp + 0x408], eax>', '<mov~~ebx, eax>', '<add~~ebx, edx>', '<mov~~dword ptr [rsp + 0x40c], ebx>', '<mov~~dword ptr [r10 + rdi*4], ebx>', '<mov~~r11, rdi>', '<or~~r11, 1>', '<mov~~qword ptr [rsp + 0x410], r11>', '<add~~esi, dword ptr [r10 + r11*4]>', '<mov~~dword ptr [rsp + 0x418], esi>', '<mov~~edx, esi>', '<add~~edx, ecx>', '<mov~~dword ptr [rsp + 0x41c], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x420], ecx>', '<mov~~eax, ecx>', '<add~~eax, ebx>', '<mov~~dword ptr [rsp + 0x424], eax>', '<mov~~dword ptr [r10 + r11*4], eax>', '<add~~rdi, 2>', '<mov~~qword ptr [rsp + 0x428], rdi>', '<add~~r8, 2>', '<mov~~qword ptr [rsp + 0x430], r8>', '<cmp~~r8, r9>', '<mov~~r9, rdi>', '<mov~~qword ptr [rsp + 0x5a0], r9>', '<mov~~r9d, esi>', '<mov~~dword ptr [rsp + 0x5a8], r9d>', '<mov~~r9d, edx>', '<mov~~dword ptr [rsp + 0x5ac], r9d>', '<mov~~r9d, ecx>', '<mov~~dword ptr [rsp + 0x5b0], r9d>', '<mov~~r9d, eax>', '<mov~~dword ptr [rsp + 0x5b4], r9d>', '<mov~~qword ptr [rsp + 0x5b8], r8>', '<mov~~qword ptr [rsp + 0x5d0], rdi>', '<mov~~dword ptr [rsp + 0x5dc], esi>', '<mov~~dword ptr [rsp + 0x5e0], edx>', '<mov~~dword ptr [rsp + 0x5e4], ecx>', '<mov~~dword ptr [rsp + 0x5e8], eax>', '<je~~0x402d6b>']}, {'block_Idx': 383, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x650]>', '<mov~~rax, qword ptr [rsp + 0x810]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3171]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 116, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x8bc], eax>', '<cmp~~eax, 0>', '<jne~~0x400e0b>']}, {'block_Idx': 114, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x85c]>', '<cmp~~eax, 0xc>', '<jge~~0x4017d4>']}, {'block_Idx': 212, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6ec]>', '<mov~~ecx, dword ptr [rsp + 0x6f0]>', '<mov~~rdx, qword ptr [rsp + 0x730]>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x6c8], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x6cc], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401e42>']}, {'block_Idx': 441, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x402ff7>']}, {'block_Idx': 265, 'blockInsts': ['<jmp~~0x402ff7>']}, {'block_Idx': 195, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x820]>', '<mov~~rsi, qword ptr [rsp + 0x2d8]>', '<mov~~rdx, qword ptr [rsp + 0x9f0]>', '<mov~~r8d, dword ptr [rsp + 0x2a4]>', '<mov~~r9d, dword ptr [rsp + 0x2a8]>', '<mov~~eax, dword ptr [rsp + 0x2ac]>', '<mov~~rdi, qword ptr [rsp + 0x2b0]>', '<mov~~r10, qword ptr [rsp + 0x2b8]>', '<mov~~r11, qword ptr [rsp + 0x2c0]>', '<mov~~qword ptr [rsp + 0x1d8], r11>', '<mov~~qword ptr [rsp + 0x1e0], r10>', '<mov~~qword ptr [rsp + 0x1e8], rdi>', '<mov~~dword ptr [rsp + 0x1f0], r9d>', '<mov~~dword ptr [rsp + 0x1f4], r8d>', '<mov~~rdx, qword ptr [rdx + rdi*8 + 0x58]>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~ecx, dword ptr [rcx]>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x1f8], edx>', '<cmp~~eax, 0>', '<je~~0x403502>']}, {'block_Idx': 117, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~ecx, dword ptr [rsp + 0x7a8]>', '<mov~~edx, dword ptr [rsp + 0x7ac]>', '<mov~~dword ptr [rsp + 0x790], edx>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500048>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x980]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~edx, dword ptr [rsp + 0x9a8]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<call~~0x500018>']}, {'block_Idx': 107, 'blockInsts': ['<jmp~~0x401693>']}, {'block_Idx': 9, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x9c4]>', '<mov~~edx, dword ptr [rsp + 0x9b0]>', '<mov~~dword ptr [rsp + 0x9a4], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x9a8], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x9ac], eax>', '<jb~~0x403fcf>']}, {'block_Idx': 78, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x7d8]>', '<mov~~rcx, qword ptr [rsp + 0x7e0]>', '<mov~~dword ptr [rsp + 0x7d0], ecx>', '<cmp~~rax, 0>', '<jge~~0x4015a4>']}, {'block_Idx': 32, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x938]>', '<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x10], eax>', '<cmp~~eax, ecx>', '<jle~~0x403f68>']}, {'block_Idx': 97, 'blockInsts': ['<jmp~~0x402ff7>']}, {'block_Idx': 134, 'blockInsts': ['<jmp~~0x4017f0>']}, {'block_Idx': 70, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x818]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x46f1]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x8f8]>', '<mov~~eax, dword ptr [rsp + 0x8d8]>', '<mov~~rcx, qword ptr [rsp + 0x8f0]>', '<mov~~rdi, qword ptr [rcx]>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x8c0]>', '<cdqe~~>', '<add~~rdx, rax>', '<call~~0x400110>']}, {'block_Idx': 310, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x402ff7>']}, {'block_Idx': 264, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x608]>', '<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rsp + 0x758]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x640], edx>', '<mov~~dword ptr [rsp + 0x644], ecx>', '<mov~~qword ptr [rsp + 0x648], rax>', '<jmp~~0x4021c2>']}, {'block_Idx': 25, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~ecx, dword ptr [rsp + 0x86c]>', '<add~~ecx, -8>', '<sub~~ecx, 3>', '<setb~~cl>', '<mov~~eax, dword ptr [rax + 0xc]>', '<mov~~edx, eax>', '<sub~~edx, 2>', '<sete~~dl>', '<and~~cl, dl>', '<test~~cl, 1>', '<mov~~dword ptr [rsp + 0x84c], eax>', '<jne~~0x4011f5>']}, {'block_Idx': 171, 'blockInsts': ['<lea~~rdi, [rip + 0x22b7]>', '<lea~~rsi, [rip + 0x2248]>', '<mov~~edx, 0x2b5>', '<lea~~rcx, [rip + 0x22b5]>', '<call~~0x500008>']}, {'block_Idx': 67, 'blockInsts': ['<jmp~~0x403ef1>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x960]>', '<mov~~rcx, qword ptr [rsp + 0x958]>', '<mov~~rdi, qword ptr [rsp + 0x950]>', '<mov~~r9, qword ptr [rsp + 0x948]>', '<mov~~r11d, dword ptr [rsp + 0x8e4]>', '<mov~~rdx, qword ptr [rsp + 0x8c0]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x403ef1>']}, {'block_Idx': 56, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x848]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x4960]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 246, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x9f0]>', '<mov~~rax, qword ptr [rsp + 0x748]>', '<mov~~esi, eax>', '<xor~~edx, edx>', '<call~~0x404f60>']}, {'block_Idx': 381, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x600]>', '<mov~~ecx, dword ptr [rsp + 0x5fc]>', '<mov~~edx, dword ptr [rsp + 0x5f4]>', '<mov~~edi, dword ptr [rsp + 0x654]>', '<mov~~esi, edi>', '<add~~rsi, -3>', '<mov~~qword ptr [rsp + 0x570], rsi>', '<and~~rsi, 1>', '<mov~~qword ptr [rsp + 0x578], rsi>', '<mov~~esi, 3>', '<cmp~~edi, 4>', '<mov~~qword ptr [rsp + 0x580], rsi>', '<mov~~dword ptr [rsp + 0x58c], edx>', '<mov~~dword ptr [rsp + 0x590], ecx>', '<mov~~dword ptr [rsp + 0x594], eax>', '<je~~0x402ceb>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x940]>', '<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rdx, qword ptr [rsp + 0x960]>', '<mov~~dword ptr [rdx], 0x20>', '<mov~~rdx, rax>', '<add~~rdx, 0x54>', '<mov~~qword ptr [rsp + 0x8e8], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x20>', '<mov~~qword ptr [rsp + 0x8f0], rdx>', '<mov~~rdx, rax>', '<mov~~qword ptr [rsp + 0x8f8], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0xc>', '<mov~~qword ptr [rsp + 0x900], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x10>', '<mov~~qword ptr [rsp + 0x908], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x58>', '<mov~~qword ptr [rsp + 0x910], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0xa8>', '<mov~~qword ptr [rsp + 0x918], rdx>', '<add~~rax, 0x98>', '<mov~~qword ptr [rsp + 0x920], rax>', '<mov~~eax, 0x20>', '<mov~~qword ptr [rsp + 0x928], rcx>', '<mov~~dword ptr [rsp + 0x934], eax>', '<mov~~rdi, qword ptr [rsp + 0x960]>', '<mov~~rax, qword ptr [rsp + 0x928]>', '<mov~~edx, dword ptr [rsp + 0x934]>', '<mov~~qword ptr [rsp + 0x8c0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x8d4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x8cc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x8d0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x8d4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x950]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x8d8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x8dc], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x8e0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>']}, {'block_Idx': 210, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0xa0]>', '<mov~~edx, dword ptr [rsp + 0xb0]>', '<mov~~rsi, qword ptr [rsp + 0x98]>', '<mov~~edi, dword ptr [rsp + 0xb4]>', '<mov~~ecx, dword ptr [rsp + 0xb8]>', '<mov~~r8d, dword ptr [rsp + 0xbc]>', '<mov~~word ptr [rsi], r8w>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0x84], edx>', '<mov~~qword ptr [rsp + 0x88], rcx>', '<mov~~qword ptr [rsp + 0x90], rax>', '<mov~~rsi, qword ptr [rsp + 0xa8]>', '<mov~~eax, dword ptr [rsp + 0x84]>', '<mov~~rcx, qword ptr [rsp + 0x88]>', '<mov~~rdx, qword ptr [rsp + 0x90]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0xd4], edi>', '<mov~~qword ptr [rsp + 0xd8], rsi>', '<mov~~qword ptr [rsp + 0xe0], rdx>', '<mov~~qword ptr [rsp + 0xe8], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jl~~0x403b66>']}, {'block_Idx': 244, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rcx, qword ptr [rsp + 0x748]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x360], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x368], rax>', '<mov~~rax, qword ptr [rsp + 0x368]>', '<mov~~rdx, qword ptr [rsp + 0x360]>', '<mov~~ecx, dword ptr [rsp + 0x6e8]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~dword ptr [rsp + 0x354], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x358], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x368], rax>', '<jl~~0x402f17>']}, {'block_Idx': 391, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x398]>', '<mov~~r9d, dword ptr [rsp + 0x394]>', '<mov~~edx, dword ptr [rsp + 0x390]>', '<mov~~rsi, qword ptr [rsp + 0x388]>', '<mov~~rdi, qword ptr [rsp + 0x530]>', '<mov~~r8, qword ptr [rsp + 0x658]>', '<add~~edx, dword ptr [r8 + rsi*4]>', '<mov~~dword ptr [rsp + 0x370], edx>', '<mov~~ecx, edx>', '<add~~ecx, r9d>', '<mov~~dword ptr [rsp + 0x374], ecx>', '<mov~~dword ptr [r8 + rsi*4], ecx>', '<add~~rsi, 1>', '<mov~~qword ptr [rsp + 0x378], rsi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x380], rax>', '<cmp~~rax, rdi>', '<mov~~qword ptr [rsp + 0x388], rsi>', '<mov~~dword ptr [rsp + 0x390], edx>', '<mov~~dword ptr [rsp + 0x394], ecx>', '<mov~~qword ptr [rsp + 0x398], rax>', '<jne~~0x402e4e>']}, {'block_Idx': 257, 'blockInsts': ['<push~~rbp>', '<mov~~rbp, rsp>', '<push~~rbx>', '<sub~~rsp, 0x4a8>', '<mov~~dword ptr [rbp - 0x38], edx>', '<mov~~dword ptr [rbp - 0x34], esi>', '<mov~~qword ptr [rbp - 0x30], rdi>', '<mov~~eax, edx>', '<mov~~qword ptr [rbp - 0x28], rax>', '<lea~~rcx, [rax*4 + 0xf]>', '<and~~rcx, 0xfffffffffffffff0>', '<mov~~rax, rsp>', '<sub~~rax, rcx>', '<mov~~qword ptr [rbp - 0x20], rax>', '<mov~~rsp, rax>', '<movsxd~~rax, esi>', '<mov~~rax, qword ptr [rdi + rax*8 + 0x58]>', '<mov~~qword ptr [rbp - 0x18], rax>', '<cmp~~edx, 0>', '<setg~~al>', '<mov~~byte ptr [rbp - 9], al>', '<test~~al, 1>', '<jne~~0x40405f>']}, {'block_Idx': 232, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x9f0]>', '<mov~~rcx, qword ptr [rsp + 0x748]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x6a0], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x6a8], rax>', '<mov~~rax, qword ptr [rsp + 0x6a8]>', '<mov~~rcx, qword ptr [rsp + 0x770]>', '<mov~~rdx, qword ptr [rsp + 0x6a0]>', '<mov~~esi, dword ptr [rsp + 0x6b8]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x698], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x6a8], rax>', '<jl~~0x401f34>']}, {'block_Idx': 222, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x38]>', '<mov~~eax, dword ptr [rsp + 0x14]>', '<mov~~rcx, qword ptr [rsp + 0x18]>', '<mov~~rdx, qword ptr [rsp + 0x20]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x64], edi>', '<mov~~qword ptr [rsp + 0x68], rsi>', '<mov~~qword ptr [rsp + 0x70], rdx>', '<mov~~qword ptr [rsp + 0x78], rcx>', '<mov~~dword ptr [rsp + 0x338], eax>', '<jl~~0x403d91>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x9ec]>', '<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<cmp~~dword ptr [rcx], 0x43614c66>', '<mov~~dword ptr [rsp + 0x9b0], eax>', '<je~~0x400804>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x9f0]>', '<mov~~esi, dword ptr [rsp + 0x9c8]>', '<mov~~edx, dword ptr [rsp + 0x9cc]>', '<mov~~rax, qword ptr [rsp + 0x9d0]>', '<mov~~dword ptr [rsp + 0x938], edx>', '<mov~~dword ptr [rsp + 0x93c], esi>', '<mov~~esi, edx>', '<shl~~esi, 3>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~rax, rdi>', '<mov~~qword ptr [rsp + 0x940], rax>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~esi, edi>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~edx, edi>', '<mov~~rdi, rcx>', '<add~~rdi, 0x28>', '<mov~~qword ptr [rsp + 0x948], rdi>', '<mov~~qword ptr [rcx + 0x28], rax>', '<mov~~rdi, rcx>', '<add~~rdi, 0x3c>', '<mov~~qword ptr [rsp + 0x950], rdi>', '<mov~~dword ptr [rcx + 0x3c], esi>', '<mov~~edx, edx>', '<mov~~esi, edx>', '<mov~~rdx, rax>', '<add~~rdx, rsi>', '<mov~~rsi, rcx>', '<add~~rsi, 0x30>', '<mov~~qword ptr [rsp + 0x958], rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x960], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x968], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x96c], eax>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x401006>']}, {'block_Idx': 79, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x7d8]>', '<mov~~rdi, qword ptr [rsp + 0x960]>', '<mov~~rdx, qword ptr [rsp + 0x7e0]>', '<mov~~rsi, qword ptr [rsp + 0x940]>', '<mov~~eax, dword ptr [rsp + 0x7d4]>', '<add~~eax, -1>', '<mov~~r8, rdx>', '<shr~~r8, 3>', '<mov~~esi, dword ptr [rsi + r8]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xf8>', '<add~~rdx, 8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rdi], r8d>', '<add~~esi, -0x80>', '<shl~~rcx, 6>', '<movsxd~~rdi, esi>', '<add~~rcx, rdi>', '<cmp~~esi, 0x40>', '<mov~~qword ptr [rsp + 0x7e8], rdx>', '<mov~~qword ptr [rsp + 0x7f0], rcx>', '<mov~~dword ptr [rsp + 0x7fc], eax>', '<jb~~0x4014bb>']}, {'block_Idx': 138, 'blockInsts': ['<mov~~dword ptr [rsp + 0x7a4], eax>', '<cmp~~eax, 0>', '<je~~0x4019a7>']}, {'block_Idx': 444, 'blockInsts': ['<mov~~eax, dword ptr [rbp - 0xac]>', '<lea~~rsp, [rbp - 8]>', '<pop~~rbx>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 377, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3f8]>', '<mov~~ecx, dword ptr [rsp + 0x3f4]>', '<mov~~rdx, qword ptr [rsp + 0x3e8]>', '<mov~~rsi, qword ptr [rsp + 0x4f0]>', '<mov~~rdi, qword ptr [rsp + 0x658]>', '<add~~ecx, dword ptr [rdi + rdx*4]>', '<mov~~dword ptr [rsp + 0x3d4], ecx>', '<mov~~dword ptr [rdi + rdx*4], ecx>', '<add~~rdx, 1>', '<mov~~qword ptr [rsp + 0x3d8], rdx>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3e0], rax>', '<cmp~~rax, rsi>', '<mov~~qword ptr [rsp + 0x3e8], rdx>', '<mov~~dword ptr [rsp + 0x3f4], ecx>', '<mov~~qword ptr [rsp + 0x3f8], rax>', '<je~~0x402ed7>']}, {'block_Idx': 442, 'blockInsts': ['<jmp~~0x402ed7>']}, {'block_Idx': 234, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x710]>', '<add~~eax, -8>', '<cmp~~eax, 5>', '<jae~~0x402be5>']}, {'block_Idx': 349, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x650]>', '<mov~~rcx, qword ptr [rsp + 0x658]>', '<mov~~esi, dword ptr [rsp + 0x5f8]>', '<mov~~edx, dword ptr [rsp + 0x5fc]>', '<sub~~edx, esi>', '<mov~~esi, eax>', '<add~~esi, -3>', '<mov~~esi, esi>', '<mov~~ecx, dword ptr [rcx + rsi*4]>', '<mov~~dword ptr [rsp + 0x5f0], ecx>', '<add~~ecx, edx>', '<mov~~dword ptr [rsp + 0x5f4], ecx>', '<cmp~~eax, 3>', '<je~~0x40259a>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x810]>', '<mov~~rdi, qword ptr [rax]>', '<lea~~rsi, [rip + 0x3fdc]>', '<xor~~edx, edx>', '<call~~0x500058>']}, {'block_Idx': 121, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x900]>', '<mov~~rax, qword ptr [rsp + 0xa10]>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x8b4], ecx>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x8b8], eax>', '<jne~~0x400e6c>']}, {'block_Idx': 59, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x960]>', '<mov~~eax, dword ptr [rsp + 0x874]>', '<add~~eax, 8>', '<mov~~dword ptr [rsp + 0x870], eax>', '<mov~~dword ptr [rcx], eax>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~edx, dword ptr [rsp + 0x938]>', '<mov~~ecx, eax>', '<mov~~eax, dword ptr [rsp + 0x870]>', '<add~~ecx, 2>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x888], eax>', '<jl~~0x401091>']}], 'cfg_edge_info': [(15, 21), (247, 255), (226, 232), (198, 213), (180, 201), (40, 50), (11, 14), (210, 223), (41, 42), (232, 238), (192, 202), (73, 74), (41, 51), (141, 147), (181, 192), (254, 262), (233, 239), (236, 235), (236, 244), (169, 74), (417, 423), (258, 268), (118, 117), (222, 165), (239, 245), (111, 105), (362, 361), (240, 246), (154, 161), (173, 183), (217, 217), (225, 230), (195, 207), (235, 243), (246, 289), (247, 254), (229, 218), (198, 212), (165, 44), (139, 144), (239, 231), (379, 391), (251, 251), (380, 392), (52, 32), (232, 237), (114, 119), (229, 204), (17, 25), (65, 74), (47, 65), (209, 222), (289, 74), (121, 127), (10, 12), (84, 74), (162, 173), (194, 205), (106, 101), (135, 146), (36, 33), (195, 206), (179, 189), (235, 242), (6, 10), (146, 30), (165, 43), (355, 289), (242, 250), (224, 223), (405, 393), (154, 164), (216, 215), (164, 177), (17, 24), (187, 197), (227, 233), (197, 210), (128, 138), (249, 257), (406, 231), (142, 149), (39, 38), (161, 171), (234, 241), (231, 235), (382, 395), (32, 44), (194, 204), (176, 165), (43, 53), (57, 55), (160, 147), (168, 178), (241, 248), (98, 101), (150, 157), (113, 117), (20, 38), (217, 183), (13, 17), (66, 32), (212, 226), (16, 22), (415, 405), (164, 176), (138, 142), (71, 79), (268, 269), (42, 52), (381, 393), (379, 231), (393, 404), (205, 204), (234, 240), (43, 7), (31, 42), (204, 217), (208, 196), (265, 74), (127, 131), (156, 167), (390, 361), (149, 155), (119, 123), (79, 87), (101, 105), (163, 175), (134, 139), (211, 224), (392, 403), (212, 225), (196, 208), (126, 130), (259, 269), (71, 78), (30, 40), (250, 156), (152, 169), (363, 380), (74, 88), (37, 48), (226, 231), (382, 231), (156, 166), (78, 85), (50, 23), (27, 21), (189, 199), (222, 196), (310, 318), (163, 174), (33, 46), (193, 165), (395, 407), (34, 47), (85, 92), (145, 152), (59, 67), (246, 320), (268, 231), (130, 136), (207, 221), (170, 181), (230, 232), (111, 104), (262, 264), (442, 231), (223, 165), (115, 74), (104, 74), (336, 231), (362, 378), (392, 379), (22, 31), (14, 27), (404, 231), (393, 231), (174, 165), (244, 251), (86, 79), (107, 111), (8, 7), (406, 416), (27, 20), (167, 180), (178, 180), (377, 389), (92, 95), (391, 391), (52, 40), (215, 165), (33, 45), (136, 30), (204, 183), (361, 377), (403, 392), (395, 406), (114, 118), (38, 7), (155, 165), (85, 91), (365, 383), (336, 347), (206, 219), (97, 74), (78, 70), (259, 231), (59, 66), (99, 102), (18, 37), (347, 362), (8, 11), (146, 52), (207, 220), (21, 39), (121, 126), (262, 263), (200, 199), (377, 231), (213, 227), (25, 36), (162, 172), (405, 415), (22, 30), (143, 158), (394, 405), (166, 178), (269, 252), (55, 63), (249, 441), (0, 2), (80, 74), (129, 134), (205, 218), (62, 71), (184, 195), (102, 107), (154, 163), (364, 381), (66, 59), (176, 187), (365, 382), (117, 128), (347, 361), (210, 197), (251, 235), (161, 170), (423, 417), (355, 310), (133, 117), (144, 117), (25, 35), (32, 43), (408, 74), (95, 99), (417, 406), (147, 136), (157, 168), (48, 32), (150, 156), (129, 133), (349, 365), (172, 165), (91, 97), (102, 106), (62, 70), (154, 162), (24, 34), (51, 60), (67, 32), (361, 231), (109, 114), (139, 145), (2, 5), (31, 41), (183, 193), (391, 231), (202, 215), (263, 320), (116, 121), (35, 47), (95, 98), (127, 130), (364, 231), (149, 154), (147, 135), (157, 167), (348, 363), (390, 378), (79, 86), (101, 104), (349, 364), (190, 200), (10, 13), (23, 32), (228, 74), (131, 141), (202, 192), (24, 33), (441, 74), (124, 129), (9, 8), (407, 417), (46, 57), (378, 390), (179, 190), (337, 349), (109, 113), (6, 2), (221, 183), (224, 197), (441, 442), (2, 4), (363, 379), (298, 231), (263, 310), (116, 120), (245, 252), (264, 274), (227, 234), (50, 22), (220, 195), (238, 231), (189, 198), (197, 211), (190, 190), (142, 150), (201, 74), (252, 259), (231, 236), (45, 55), (87, 70), (105, 115), (56, 73), (185, 196), (51, 116), (5, 9), (9, 7), (46, 56), (389, 377), (70, 84), (337, 348), (130, 135), (160, 148), (230, 231), (218, 229), (310, 74), (241, 249), (289, 298), (219, 221), (274, 255), (104, 109), (348, 231), (183, 173), (136, 52), (13, 18), (16, 23), (416, 231), (86, 78), (237, 238), (5, 4), (167, 179), (248, 265), (178, 179), (138, 143), (4, 8), (381, 394), (255, 264), (123, 117), (88, 7), (37, 32), (252, 258), (325, 337), (216, 192), (61, 7), (318, 325), (11, 15), (42, 30), (200, 198), (148, 160), (119, 124), (63, 80), (219, 220), (192, 203), (274, 254), (12, 16), (383, 408), (141, 148), (1, 6), (208, 165), (196, 209), (38, 10), (444, 441), (55, 62), (237, 237), (126, 131), (243, 149), (170, 165), (0, 1), (48, 59), (30, 32), (199, 228), (240, 247), (184, 194), (4, 7), (203, 216), (158, 74), (255, 263), (463, 441), (44, 61), (250, 157), (173, 184), (244, 235), (325, 336), (174, 185)], 'cdg_edge_info': [(247, 255), (24, 88), (226, 232), (198, 213), (365, 408), (198, 231), (129, 128), (11, 14), (41, 42), (192, 202), (62, 74), (41, 51), (24, 65), (236, 244), (24, 74), (114, 138), (207, 195), (198, 235), (377, 377), (239, 245), (111, 105), (240, 246), (62, 78), (365, 88), (235, 149), (154, 161), (25, 47), (162, 183), (217, 217), (95, 102), (235, 243), (195, 207), (247, 254), (198, 212), (165, 44), (139, 144), (379, 391), (251, 251), (289, 88), (52, 32), (365, 74), (232, 237), (441, 231), (25, 33), (205, 229), (154, 165), (114, 119), (17, 25), (127, 147), (46, 88), (289, 74), (365, 231), (121, 127), (10, 12), (441, 235), (13, 32), (162, 173), (194, 205), (95, 101), (165, 7), (310, 7), (195, 206), (179, 189), (235, 242), (46, 74), (289, 231), (6, 10), (146, 30), (165, 43), (390, 390), (139, 152), (129, 117), (197, 224), (10, 16), (78, 7), (154, 164), (16, 32), (41, 116), (17, 24), (176, 197), (268, 252), (197, 210), (139, 138), (348, 379), (234, 241), (337, 235), (382, 395), (32, 44), (43, 53), (46, 55), (127, 141), (46, 73), (178, 201), (167, 201), (157, 178), (149, 165), (101, 88), (79, 88), (241, 248), (189, 228), (150, 157), (101, 115), (13, 17), (212, 226), (16, 22), (349, 231), (164, 176), (138, 142), (79, 74), (160, 160), (170, 192), (71, 79), (119, 128), (268, 269), (42, 52), (30, 50), (138, 7), (393, 404), (31, 42), (234, 240), (32, 7), (43, 7), (204, 217), (212, 230), (178, 88), (167, 88), (189, 88), (240, 310), (196, 222), (111, 7), (208, 196), (156, 167), (127, 131), (149, 155), (230, 238), (62, 7), (119, 123), (79, 87), (101, 105), (241, 265), (274, 262), (24, 7), (167, 74), (189, 74), (178, 74), (212, 225), (196, 208), (395, 417), (25, 88), (126, 130), (55, 88), (130, 146), (259, 269), (11, 27), (30, 40), (262, 274), (441, 7), (200, 228), (250, 156), (141, 160), (25, 65), (363, 380), (25, 74), (85, 88), (37, 48), (85, 97), (156, 166), (55, 74), (78, 85), (27, 21), (50, 23), (50, 32), (365, 7), (27, 39), (189, 199), (222, 196), (310, 318), (163, 165), (104, 88), (52, 50), (163, 174), (33, 46), (33, 55), (85, 74), (395, 407), (114, 128), (85, 92), (200, 88), (289, 7), (130, 136), (126, 147), (170, 181), (230, 232), (219, 195), (111, 104), (262, 264), (119, 117), (104, 74), (325, 231), (240, 263), (241, 88), (22, 31), (46, 7), (244, 251), (200, 74), (417, 417), (247, 262), (86, 79), (78, 84), (8, 7), (406, 416), (165, 61), (178, 180), (167, 180), (365, 235), (391, 391), (52, 40), (241, 74), (33, 45), (136, 30), (361, 377), (392, 392), (114, 118), (38, 7), (85, 91), (336, 347), (365, 383), (195, 219), (289, 235), (78, 70), (59, 66), (347, 362), (8, 11), (146, 52), (207, 220), (239, 252), (121, 126), (129, 139), (200, 199), (25, 36), (22, 30), (235, 250), (55, 63), (147, 146), (109, 138), (0, 2), (139, 169), (129, 134), (139, 7), (102, 107), (184, 195), (62, 71), (154, 163), (66, 59), (114, 117), (176, 187), (101, 7), (79, 7), (365, 382), (139, 128), (210, 197), (129, 138), (161, 170), (102, 111), (25, 35), (62, 84), (405, 405), (32, 43), (349, 235), (95, 99), (32, 61), (147, 136), (157, 168), (109, 128), (150, 156), (129, 133), (349, 365), (161, 165), (178, 7), (189, 7), (102, 106), (62, 70), (154, 162), (24, 34), (138, 74), (227, 231), (109, 114), (179, 200), (139, 145), (111, 74), (31, 41), (25, 7), (2, 5), (102, 101), (55, 7), (116, 121), (24, 47), (95, 98), (127, 130), (441, 88), (227, 235), (147, 135), (149, 154), (157, 167), (348, 363), (79, 86), (101, 104), (85, 7), (10, 13), (381, 405), (202, 192), (24, 33), (382, 406), (164, 165), (441, 74), (9, 8), (46, 57), (179, 190), (139, 117), (337, 349), (227, 239), (109, 113), (138, 149), (104, 7), (6, 2), (138, 158), (224, 197), (441, 442), (2, 4), (200, 7), (183, 183), (13, 37), (116, 120), (336, 361), (227, 234), (50, 22), (109, 117), (189, 198), (197, 211), (241, 7), (310, 88), (325, 235), (190, 190), (142, 150), (255, 274), (252, 259), (231, 236), (252, 268), (363, 392), (174, 196), (5, 9), (9, 7), (46, 56), (156, 178), (78, 88), (130, 135), (337, 348), (160, 148), (310, 74), (8, 38), (241, 249), (289, 298), (274, 255), (104, 109), (337, 231), (183, 173), (136, 52), (240, 289), (13, 18), (85, 95), (16, 23), (5, 4), (226, 238), (86, 78), (78, 74), (126, 141), (138, 143), (178, 179), (167, 179), (79, 84), (119, 129), (310, 325), (119, 138), (4, 8), (184, 204), (381, 394), (362, 390), (255, 264), (252, 258), (325, 337), (216, 192), (139, 88), (229, 229), (0, 6), (79, 70), (42, 30), (119, 124), (200, 198), (219, 220), (192, 203), (274, 254), (141, 148), (138, 88), (196, 209), (38, 10), (139, 74), (55, 62), (237, 237), (198, 227), (55, 80), (126, 131), (0, 1), (259, 252), (111, 88), (48, 59), (101, 74), (30, 32), (167, 7), (111, 115), (240, 247), (184, 194), (4, 7), (192, 216), (62, 88), (250, 157), (184, 221), (173, 184), (325, 336), (174, 185)], 'ddg_edge_info': [(206, 217), (251, 405), (104, 206), (392, 264), (325, 174), (1, 113), (128, 154), (240, 395), (0, 5), (11, 14), (325, 210), (391, 155), (377, 220), (128, 190), (236, 217), (416, 184), (39, 117), (262, 391), (207, 195), (126, 121), (118, 117), (211, 165), (325, 187), (128, 167), (98, 144), (404, 187), (325, 43), (2, 27), (162, 165), (133, 138), (25, 47), (405, 417), (231, 264), (237, 195), (417, 391), (236, 230), (240, 349), (325, 164), (6, 38), (231, 156), (121, 141), (232, 237), (79, 144), (39, 71), (10, 44), (405, 165), (190, 240), (391, 230), (235, 391), (217, 194), (416, 174), (55, 195), (0, 116), (206, 184), (417, 404), (17, 25), (229, 204), (116, 147), (206, 220), (5, 50), (325, 406), (250, 263), (10, 165), (377, 187), (128, 157), (148, 135), (190, 217), (236, 184), (390, 242), (236, 220), (237, 185), (391, 243), (231, 254), (244, 44), (1, 57), (250, 240), (325, 154), (131, 23), (116, 160), (98, 111), (217, 184), (405, 155), (190, 230), (391, 220), (390, 255), (392, 185), (128, 255), (236, 197), (392, 221), (9, 11), (1, 70), (187, 197), (6, 5), (325, 167), (197, 210), (39, 38), (325, 252), (236, 174), (391, 197), (390, 232), (128, 232), (237, 404), (231, 244), (268, 391), (176, 165), (1, 47), (5, 17), (251, 195), (62, 179), (377, 190), (190, 184), (113, 117), (39, 51), (225, 178), (236, 416), (190, 220), (231, 221), (416, 383), (236, 187), (128, 245), (1, 24), (237, 417), (405, 230), (150, 269), (116, 127), (268, 404), (416, 239), (262, 181), (0, 181), (417, 240), (255, 178), (111, 133), (325, 242), (190, 197), (391, 187), (128, 222), (200, 247), (131, 147), (392, 417), (231, 234), (204, 217), (404, 242), (142, 242), (62, 133), (173, 229), (325, 363), (405, 243), (251, 185), (9, 14), (416, 252), (417, 217), (262, 194), (240, 404), (178, 200), (24, 142), (325, 219), (50, 51), (190, 174), (390, 199), (128, 199), (39, 41), (10, 243), (325, 255), (17, 139), (231, 211), (392, 165), (128, 235), (235, 181), (1, 14), (144, 179), (404, 255), (405, 220), (416, 229), (417, 194), (209, 165), (240, 417), (0, 27), (39, 18), (111, 123), (190, 416), (325, 232), (236, 383), (190, 187), (390, 212), (128, 212), (184, 229), (258, 178), (404, 232), (405, 197), (363, 380), (231, 44), (62, 123), (235, 194), (0, 148), (39, 139), (251, 404), (237, 240), (27, 21), (0, 4), (347, 377), (207, 217), (178, 190), (325, 209), (230, 237), (262, 269), (222, 196), (391, 190), (10, 53), (377, 255), (392, 155), (1, 4), (148, 23), (236, 252), (237, 217), (262, 390), (417, 184), (12, 135), (206, 229), (251, 417), (111, 113), (325, 222), (231, 178), (377, 232), (128, 202), (240, 263), (98, 179), (10, 66), (405, 187), (236, 229), (416, 196), (235, 184), (268, 181), (39, 129), (11, 147), (237, 230), (235, 269), (268, 217), (1, 102), (406, 416), (190, 383), (325, 199), (390, 179), (262, 259), (231, 155), (128, 179), (52, 40), (404, 199), (2, 39), (55, 194), (116, 61), (79, 179), (39, 106), (244, 246), (217, 229), (236, 242), (392, 230), (417, 174), (268, 194), (1, 79), (206, 219), (207, 184), (325, 176), (262, 236), (128, 156), (8, 11), (207, 220), (325, 212), (404, 176), (135, 51), (141, 131), (404, 212), (190, 252), (391, 242), (237, 184), (237, 220), (417, 416), (392, 243), (269, 252), (55, 63), (235, 259), (251, 240), (377, 199), (0, 249), (148, 147), (79, 133), (178, 255), (10, 33), (190, 229), (236, 196), (55, 184), (377, 235), (116, 51), (236, 232), (391, 255), (392, 220), (237, 197), (176, 187), (235, 236), (268, 184), (251, 217), (262, 226), (98, 123), (377, 212), (135, 41), (133, 117), (190, 242), (236, 209), (416, 405), (391, 232), (237, 174), (416, 176), (202, 216), (417, 406), (251, 230), (325, 179), (262, 239), (79, 123), (39, 50), (325, 264), (10, 23), (404, 179), (390, 244), (116, 41), (128, 244), (39, 86), (226, 178), (237, 416), (237, 187), (417, 383), (116, 126), (235, 226), (10, 144), (325, 156), (416, 274), (417, 239), (268, 259), (146, 41), (337, 395), (190, 196), (135, 31), (242, 243), (39, 63), (131, 146), (190, 232), (236, 199), (392, 187), (235, 383), (1, 36), (104, 165), (251, 184), (405, 242), (268, 416), (416, 251), (235, 239), (208, 222), (383, 74), (251, 220), (417, 252), (377, 179), (55, 128), (8, 53), (39, 40), (17, 138), (10, 13), (325, 254), (236, 176), (391, 199), (2, 9), (128, 234), (104, 142), (24, 33), (391, 235), (10, 98), (231, 246), (262, 170), (250, 232), (251, 197), (405, 255), (38, 53), (337, 349), (416, 264), (417, 229), (240, 416), (152, 74), (39, 17), (178, 212), (71, 86), (128, 211), (39, 53), (10, 255), (237, 383), (391, 212), (363, 379), (128, 247), (259, 178), (251, 174), (236, 274), (405, 232), (235, 229), (268, 226), (86, 106), (38, 66), (50, 40), (149, 162), (1, 147), (0, 39), (17, 128), (55, 383), (190, 199), (231, 200), (325, 244), (128, 224), (252, 259), (231, 236), (404, 244), (392, 190), (268, 383), (235, 206), (1, 39), (0, 160), (179, 162), (174, 196), (5, 9), (251, 416), (325, 365), (38, 43), (251, 187), (156, 178), (237, 252), (268, 239), (160, 148), (207, 229), (325, 221), (190, 176), (274, 255), (240, 262), (200, 226), (105, 74), (404, 221), (183, 173), (236, 264), (237, 229), (417, 196), (12, 147), (138, 143), (178, 179), (128, 178), (325, 234), (17, 118), (231, 190), (391, 179), (377, 244), (381, 394), (244, 245), (190, 274), (405, 199), (235, 196), (0, 150), (237, 242), (268, 229), (1, 114), (0, 6), (207, 219), (210, 224), (17, 95), (325, 211), (231, 167), (231, 203), (10, 55), (142, 211), (416, 185), (1, 6), (133, 162), (39, 118), (251, 383), (38, 10), (405, 212), (262, 392), (416, 221), (55, 62), (121, 44), (106, 144), (170, 165), (243, 149), (262, 248), (148, 146), (325, 224), (231, 180), (116, 50), (62, 79), (39, 95), (184, 221), (44, 61), (244, 235), (190, 264), (237, 196), (237, 232), (392, 255), (262, 405), (1, 104), (179, 227), (18, 44), (251, 252), (17, 85), (390, 181), (231, 157), (128, 181), (135, 40), (38, 144), (192, 202), (55, 196), (235, 392), (181, 192), (18, 165), (254, 262), (236, 244), (392, 232), (417, 405), (417, 176), (268, 196), (240, 363), (33, 150), (206, 221), (258, 268), (250, 264), (251, 229), (17, 62), (325, 178), (222, 165), (248, 74), (179, 240), (0, 9), (38, 121), (111, 105), (231, 170), (116, 40), (135, 53), (39, 85), (199, 74), (144, 138), (405, 179), (236, 221), (416, 417), (235, 405), (391, 244), (106, 111), (325, 155), (379, 391), (165, 53), (10, 179), (251, 242), (38, 98), (337, 394), (203, 165), (417, 274), (262, 251), (380, 392), (39, 62), (116, 53), (416, 165), (180, 74), (39, 98), (217, 221), (231, 268), (237, 199), (229, 195), (127, 147), (1, 71), (390, 377), (417, 251), (235, 274), (209, 222), (184, 165), (337, 407), (10, 12), (349, 381), (135, 43), (190, 244), (390, 269), (237, 176), (231, 245), (392, 199), (128, 269), (236, 211), (268, 392), (392, 235), (251, 196), (10, 133), (235, 251), (165, 43), (251, 232), (131, 50), (197, 224), (417, 264), (39, 52), (98, 138), (10, 254), (404, 181), (190, 221), (131, 135), (349, 394), (416, 155), (128, 246), (206, 165), (231, 258), (392, 212), (268, 405), (250, 244), (237, 274), (9, 38), (149, 161), (128, 138), (236, 165), (0, 74), (131, 148), (390, 259), (231, 235), (128, 259), (363, 391), (194, 204), (1, 38), (10, 123), (405, 244), (244, 61), (57, 55), (262, 195), (0, 195), (157, 178), (50, 52), (377, 181), (268, 274), (217, 165), (231, 212), (390, 236), (2, 11), (128, 236), (231, 248), (416, 230), (1, 51), (5, 21), (325, 377), (245, 268), (251, 199), (237, 264), (268, 251), (404, 377), (236, 155), (55, 143), (381, 393), (393, 404), (325, 269), (231, 225), (392, 179), (235, 195), (404, 269), (251, 176), (116, 131), (262, 185), (416, 243), (0, 185), (18, 53), (325, 390), (149, 164), (190, 165), (390, 190), (404, 390), (325, 246), (211, 224), (231, 202), (390, 226), (128, 226), (1, 5), (200, 251), (212, 225), (150, 250), (416, 220), (417, 185), (0, 162), (417, 221), (106, 179), (179, 249), (18, 66), (0, 18), (11, 27), (251, 274), (63, 74), (190, 178), (231, 179), (128, 203), (184, 220), (377, 269), (416, 197), (235, 185), (1, 18), (74, 88), (404, 259), (262, 404), (55, 74), (86, 98), (18, 43), (377, 390), (325, 200), (190, 155), (390, 180), (1, 139), (128, 180), (39, 22), (325, 236), (212, 179), (231, 192), (391, 181), (128, 216), (404, 236), (236, 243), (142, 236), (268, 195), (148, 50), (106, 133), (12, 126), (237, 244), (262, 417), (0, 8), (207, 221), (126, 147), (259, 268), (111, 104), (251, 264), (135, 52), (133, 128), (377, 259), (235, 404), (416, 187), (14, 27), (174, 165), (237, 221), (392, 244), (229, 217), (10, 178), (325, 190), (390, 170), (1, 129), (128, 170), (0, 21), (179, 252), (38, 133), (236, 377), (404, 190), (377, 236), (116, 52), (361, 377), (217, 220), (404, 226), (235, 417), (395, 406), (229, 194), (417, 165), (0, 142), (268, 185), (155, 165), (106, 123), (325, 347), (1, 106), (325, 203), (391, 377), (128, 183), (0, 263), (39, 74), (190, 243), (390, 268), (2, 43), (142, 203), (128, 268), (235, 165), (391, 269), (240, 365), (52, 165), (325, 180), (262, 240), (0, 240), (38, 123), (391, 390), (404, 180), (377, 226), (62, 71), (226, 179), (405, 181), (229, 184), (417, 155), (207, 165), (325, 157), (117, 128), (262, 217), (0, 217), (347, 361), (5, 66), (251, 244), (190, 377), (231, 149), (55, 152), (178, 259), (144, 117), (10, 37), (237, 165), (128, 258), (123, 179), (391, 259), (268, 417), (55, 44), (235, 240), (33, 142), (251, 221), (325, 170), (262, 230), (377, 180), (128, 150), (244, 181), (404, 170), (390, 235), (55, 165), (142, 170), (231, 247), (391, 236), (268, 165), (1, 50), (235, 217), (9, 27), (417, 230), (6, 21), (390, 392), (252, 162), (55, 142), (135, 22), (405, 377), (325, 268), (17, 152), (236, 190), (237, 155), (231, 224), (390, 248), (128, 248), (1, 27), (160, 51), (24, 47), (259, 179), (404, 268), (142, 268), (262, 184), (416, 242), (1, 63), (235, 230), (405, 269), (337, 363), (262, 220), (417, 243), (149, 163), (377, 170), (178, 226), (39, 31), (325, 245), (17, 129), (190, 200), (116, 22), (128, 225), (12, 50), (10, 269), (405, 390), (231, 237), (391, 226), (1, 40), (39, 152), (5, 10), (262, 197), (417, 220), (416, 255), (268, 240), (0, 53), (39, 44), (325, 258), (236, 180), (377, 268), (1, 17), (250, 200), (251, 165), (116, 120), (416, 232), (235, 220), (262, 174), (417, 197), (39, 165), (325, 379), (405, 259), (50, 31), (325, 235), (17, 119), (391, 180), (231, 227), (10, 79), (404, 235), (392, 181), (235, 197), (185, 196), (405, 236), (262, 416), (237, 243), (262, 187), (0, 187), (268, 230), (325, 392), (78, 106), (390, 192), (128, 192), (0, 43), (179, 274), (404, 392), (325, 248), (231, 204), (235, 174), (39, 119), (50, 165), (404, 248), (251, 155), (236, 255), (417, 187), (268, 243), (325, 225), (17, 109), (190, 180), (231, 181), (391, 170), (128, 205), (200, 230), (237, 377), (231, 217), (250, 167), (405, 190), (55, 220), (235, 416), (416, 199), (235, 187), (14, 39), (405, 226), (236, 268), (268, 220), (1, 105), (10, 190), (377, 392), (325, 202), (148, 160), (254, 178), (5, 111), (219, 220), (192, 203), (392, 377), (231, 194), (377, 248), (55, 197), (27, 135), (39, 109), (144, 162), (244, 249), (250, 180), (196, 209), (391, 268), (262, 383), (416, 212), (268, 197), (148, 52), (365, 395), (392, 269), (1, 118), (179, 241), (0, 10), (390, 195), (128, 195), (192, 216), (392, 390), (10, 59), (405, 180), (250, 157), (190, 255), (62, 106), (268, 174), (325, 336), (417, 190), (1, 95), (240, 377), (251, 243), (325, 192), (262, 252), (231, 184), (404, 192), (33, 56), (190, 268), (236, 235), (231, 269), (268, 187), (392, 259), (262, 229), (128, 149), (0, 229), (240, 390), (325, 205), (231, 161), (116, 31), (135, 44), (98, 162), (405, 170), (236, 212), (416, 179), (251, 377), (392, 236), (135, 165), (235, 252), (1, 85), (106, 138), (5, 55), (165, 44), (390, 391), (131, 51), (262, 242), (377, 192), (128, 162), (391, 392), (203, 192), (116, 44), (349, 395), (79, 162), (231, 259), (237, 190), (391, 248), (1, 62), (250, 245), (405, 268), (116, 165), (9, 39), (417, 242), (390, 404), (404, 195), (190, 235), (162, 173), (194, 205), (0, 111), (392, 226), (36, 33), (262, 196), (195, 206), (235, 242), (179, 198), (6, 10), (38, 79), (131, 41), (262, 232), (417, 255), (50, 53), (0, 232), (39, 43), (190, 212), (236, 179), (128, 237), (0, 88), (39, 79), (231, 249), (237, 180), (1, 52), (250, 235), (17, 33), (325, 149), (417, 232), (235, 255), (268, 252), (377, 195), (142, 149), (39, 56), (10, 258), (231, 226), (236, 192), (392, 180), (128, 250), (382, 395), (231, 262), (405, 235), (416, 244), (235, 232), (12, 160), (325, 391), (131, 31), (337, 365), (79, 106), (39, 33), (404, 391), (325, 247), (391, 192), (142, 162), (128, 227), (405, 392), (212, 226), (231, 239), (55, 242), (405, 248), (251, 190), (237, 255), (262, 199), (268, 242), (325, 404), (39, 10), (190, 179), (128, 204), (0, 55), (39, 46), (231, 216), (390, 240), (392, 170), (128, 240), (126, 50), (150, 264), (262, 176), (417, 199), (179, 178), (325, 381), (390, 361), (237, 268), (377, 391), (417, 235), (268, 255), (39, 23), (10, 225), (325, 237), (190, 192), (390, 217), (128, 217), (231, 229), (123, 138), (250, 179), (196, 208), (142, 237), (235, 199), (148, 51), (39, 144), (251, 180), (392, 268), (417, 212), (268, 232), (1, 117), (377, 404), (390, 194), (262, 274), (128, 194), (0, 45), (325, 250), (231, 206), (391, 195), (250, 156), (55, 209), (235, 176), (1, 9), (37, 48), (365, 407), (50, 23), (27, 39), (39, 13), (111, 118), (325, 227), (17, 111), (231, 183), (128, 207), (405, 192), (395, 407), (148, 41), (325, 348), (237, 235), (47, 74), (78, 98), (251, 255), (325, 204), (170, 181), (390, 184), (262, 264), (128, 184), (38, 147), (236, 391), (144, 128), (231, 196), (392, 379), (10, 48), (55, 199), (39, 111), (244, 251), (404, 240), (237, 212), (142, 240), (417, 179), (268, 199), (247, 262), (86, 79), (325, 181), (55, 91), (128, 161), (0, 12), (251, 268), (325, 217), (231, 173), (128, 197), (116, 43), (404, 217), (128, 53), (268, 176), (173, 204), (148, 31), (336, 347), (392, 248), (229, 221), (235, 264), (347, 362), (18, 37), (325, 194), (390, 174), (128, 174), (391, 404), (404, 194), (377, 240), (349, 407), (405, 195), (236, 237), (1, 74), (17, 55), (131, 40), (117, 142), (0, 2), (190, 391), (390, 416), (98, 128), (231, 163), (377, 217), (39, 78), (237, 179), (416, 181), (14, 21), (194, 217), (128, 43), (244, 74), (210, 197), (325, 184), (131, 53), (251, 235), (262, 244), (377, 194), (128, 164), (0, 244), (135, 23), (39, 55), (244, 195), (404, 184), (128, 249), (5, 178), (39, 91), (237, 192), (268, 179), (10, 149), (251, 212), (325, 161), (262, 221), (417, 244), (268, 264), (116, 23), (12, 51), (405, 391), (392, 192), (229, 165), (128, 262), (0, 113), (1, 41), (231, 274), (235, 244), (25, 142), (179, 200), (390, 383), (131, 43), (377, 184), (39, 45), (244, 185), (325, 259), (404, 174), (390, 239), (236, 181), (142, 174), (416, 377), (128, 239), (405, 404), (231, 251), (391, 240), (116, 121), (235, 221), (240, 336), (206, 194), (325, 380), (416, 269), (149, 154), (348, 363), (325, 416), (377, 197), (202, 165), (12, 41), (404, 416), (131, 141), (236, 194), (416, 390), (391, 217), (390, 252), (128, 252), (1, 31), (251, 179), (9, 8), (179, 190), (6, 2), (325, 393), (377, 174), (1, 152), (0, 44), (252, 179), (224, 197), (325, 249), (390, 229), (391, 194), (2, 4), (183, 165), (128, 229), (231, 205), (1, 8), (231, 241), (392, 195), (262, 165), (1, 44), (0, 165), (5, 14), (251, 192), (264, 274), (50, 22), (416, 259), (268, 244), (27, 38), (39, 12), (337, 380), (325, 226), (377, 416), (190, 181), (1, 165), (128, 206), (5, 135), (200, 231), (325, 262), (128, 242), (1, 21), (148, 40), (39, 133), (10, 106), (236, 269), (416, 236), (268, 221), (325, 383), (104, 235), (8, 38), (79, 98), (39, 25), (219, 221), (404, 383), (236, 390), (325, 239), (190, 194), (231, 195), (391, 184), (128, 219), (5, 148), (237, 391), (404, 239), (142, 239), (262, 155), (148, 53), (39, 146), (86, 78), (405, 240), (1, 119), (0, 11), (18, 59), (325, 216), (390, 196), (128, 196), (0, 47), (44, 53), (392, 391), (231, 208), (123, 117), (55, 211), (216, 165), (416, 190), (1, 11), (39, 123), (325, 337), (404, 252), (405, 217), (236, 259), (244, 263), (229, 220), (416, 226), (247, 274), (126, 127), (377, 383), (128, 173), (0, 24), (325, 229), (231, 185), (391, 174), (377, 239), (128, 209), (235, 155), (141, 148), (33, 57), (392, 404), (50, 146), (404, 229), (405, 194), (190, 269), (244, 240), (148, 43), (1, 109), (106, 162), (240, 391), (0, 1), (167, 178), (190, 390), (325, 206), (231, 162), (121, 147), (240, 247), (391, 416), (203, 216), (244, 217), (10, 50), (377, 252), (231, 198), (416, 180), (39, 113), (417, 181), (1, 86), (250, 269), (325, 183), (131, 52), (262, 243), (128, 163), (148, 141), (40, 50), (0, 14), (211, 197), (212, 162), (377, 229), (121, 160), (190, 259), (236, 226), (405, 184), (194, 229), (251, 391), (250, 246), (55, 70), (240, 381), (325, 196), (390, 405), (390, 176), (128, 176), (10, 40), (150, 200), (404, 196), (236, 203), (190, 236), (377, 242), (416, 170), (268, 155), (173, 183), (225, 230), (236, 239), (262, 377), (195, 207), (235, 243), (325, 173), (9, 53), (391, 383), (231, 165), (10, 17), (205, 229), (405, 174), (231, 250), (237, 181), (417, 377), (142, 209), (128, 274), (391, 239), (390, 274), (1, 53), (392, 240), (416, 268), (179, 212), (207, 194), (417, 269), (377, 196), (0, 246), (121, 127), (178, 252), (39, 57), (10, 259), (190, 226), (390, 251), (235, 377), (128, 251), (405, 416), (231, 263), (237, 194), (417, 390), (391, 252), (244, 53), (392, 217), (62, 162), (135, 146), (1, 66), (240, 348), (250, 249), (325, 163), (17, 47), (128, 143), (61, 53), (148, 121), (38, 106), (150, 167), (236, 170), (242, 250), (179, 310), (59, 165), (39, 70), (226, 162), (405, 393), (190, 239), (231, 240), (391, 229), (235, 390), (392, 194), (128, 264), (390, 264), (1, 43), (240, 325), (10, 128), (17, 24), (116, 146), (176, 197), (6, 14), (325, 405), (417, 259), (0, 56), (39, 47), (98, 133), (404, 405), (244, 187), (142, 176), (128, 241), (6, 135), (123, 162), (43, 53), (244, 43), (416, 235), (1, 56), (325, 382), (237, 269), (131, 22), (417, 236), (39, 24), (10, 226), (405, 383), (325, 274), (237, 390), (217, 183), (231, 230), (416, 392), (392, 184), (128, 254), (268, 377), (1, 33), (404, 274), (405, 239), (251, 181), (416, 248), (262, 190), (5, 39), (325, 395), (377, 405), (170, 192), (190, 170), (377, 176), (268, 269), (111, 142), (325, 251), (231, 207), (391, 196), (128, 231), (1, 10), (231, 243), (259, 162), (392, 197), (404, 251), (196, 222), (142, 251), (268, 390), (208, 196), (1, 46), (12, 141), (38, 50), (251, 194), (405, 252), (237, 259), (417, 226), (8, 27), (55, 138), (128, 208), (274, 262), (231, 220), (392, 174), (377, 274), (235, 190), (1, 23), (133, 179), (325, 349), (404, 264), (405, 229), (237, 236), (262, 180), (18, 48), (390, 185), (1, 144), (128, 185), (325, 241), (236, 392), (91, 74), (390, 221), (231, 197), (377, 251), (128, 221), (255, 262), (392, 416), (236, 248), (231, 53), (417, 180), (12, 131), (325, 362), (268, 236), (1, 121), (251, 269), (17, 102), (231, 174), (128, 198), (33, 46), (236, 405), (231, 210), (244, 229), (10, 62), (377, 264), (416, 192), (235, 180), (1, 13), (173, 205), (251, 390), (38, 17), (237, 226), (1, 98), (325, 195), (55, 105), (262, 255), (48, 66), (325, 231), (391, 405), (231, 187), (391, 176), (143, 74), (39, 102), (405, 196), (231, 43), (417, 170), (268, 190), (106, 128), (12, 121), (226, 230), (237, 239), (1, 111), (179, 234), (190, 392), (325, 208), (251, 259), (390, 417), (231, 164), (262, 268), (4, 9), (178, 274), (392, 383), (204, 183), (10, 52), (190, 248), (55, 203), (235, 170), (128, 44), (148, 22), (173, 195), (236, 251), (391, 274), (392, 239), (195, 219), (59, 66), (251, 236), (325, 185), (390, 165), (417, 268), (128, 165), (0, 245), (21, 39), (121, 126), (190, 405), (404, 185), (55, 180), (244, 232), (391, 251), (142, 221), (416, 195), (268, 180), (240, 347), (394, 405), (392, 252), (244, 88), (325, 162), (235, 268), (128, 142), (240, 383), (325, 198), (231, 154), (184, 195), (237, 170), (2, 38), (128, 263), (66, 59), (39, 105), (391, 264), (392, 229), (1, 78), (251, 226), (131, 44), (390, 155), (262, 235), (377, 185), (128, 155), (377, 221), (135, 50), (131, 165), (405, 176), (231, 252), (190, 251), (268, 170), (1, 55), (240, 337), (206, 195), (392, 242), (210, 165), (17, 36), (262, 212), (1, 91), (325, 417), (251, 239), (349, 365), (404, 417), (236, 195), (416, 391), (325, 44), (0, 104), (74, 53), (10, 117), (417, 392), (116, 135), (5, 38), (325, 394), (405, 274), (325, 165), (417, 248), (6, 39), (39, 36), (404, 165), (390, 230), (128, 230), (146, 135), (217, 195), (231, 242), (416, 404), (392, 196), (235, 212), (1, 45), (405, 251), (116, 148), (235, 248), (209, 196), (147, 135), (325, 407), (79, 86), (377, 417), (337, 381), (179, 289), (325, 263), (231, 219), (236, 185), (123, 128), (390, 243), (128, 243), (202, 192), (1, 22), (231, 255), (56, 74), (251, 170), (262, 179), (407, 417), (38, 62), (405, 264), (243, 165), (377, 165), (8, 39), (221, 183), (325, 240), (404, 155), (190, 195), (390, 220), (391, 185), (236, 162), (142, 155), (128, 220), (55, 150), (200, 245), (10, 264), (237, 392), (231, 232), (391, 221), (33, 104), (325, 361), (245, 252), (237, 248), (262, 192), (268, 235), (220, 195), (78, 111), (224, 165), (197, 211), (390, 197), (111, 144), (236, 404), (231, 209), (255, 274), (235, 179), (1, 12), (237, 405), (45, 55), (252, 268), (55, 248), (62, 144), (417, 192), (88, 53), (268, 212), (121, 50), (377, 155), (55, 104), (268, 248), (1, 133), (0, 25), (17, 114), (325, 230), (190, 185), (128, 210), (0, 61), (236, 417), (392, 405), (231, 222), (404, 230), (392, 176), (142, 230), (235, 192), (1, 25), (148, 44), (173, 217), (416, 240), (240, 392), (23, 165), (325, 207), (117, 178), (390, 187), (1, 146), (128, 187), (148, 165), (0, 38), (5, 116), (200, 212), (325, 243), (391, 417), (231, 199), (362, 390), (62, 98), (1, 2), (173, 194), (39, 114), (252, 258), (404, 243), (142, 243), (216, 192), (416, 217), (237, 251), (70, 74), (392, 274), (1, 123), (240, 405), (190, 404), (325, 220), (231, 176), (391, 165), (377, 230), (128, 200), (274, 254), (200, 225), (184, 217), (404, 220), (405, 185), (416, 194), (208, 165), (251, 392), (405, 221), (392, 251), (417, 195), (240, 382), (12, 146), (259, 252), (251, 248), (325, 197), (190, 417), (184, 194), (404, 197), (377, 243), (325, 53), (55, 192), (173, 184), (39, 104), (236, 240), (268, 192), (174, 185)]}]}
{'flac_decode_frame': [{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 191, 'instruction': 'movl\t%edx, %esi'}, {'instIndex': 192, 'instruction': 'shll\t$3, %esi'}, {'instIndex': 237, 'instruction': ''}, {'instIndex': 238, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 295, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 296, 'instruction': ''}, {'instIndex': 306, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 307, 'instruction': 'movl\t0x8d4(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 318, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 319, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 320, 'instruction': 'movq\t0x950(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 562, 'instruction': 'movq\t%rdx, 0x860(%rsp)                # 8-byte Spill'}, {'instIndex': 615, 'instruction': 'movq\t0x960(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 700, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 763, 'instruction': 'movq\t0x7e0(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 764, 'instruction': 'movq\t0x940(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 765, 'instruction': 'movl\t0x7d4(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 816, 'instruction': 'jmp\t.LBB4_152'}, {'instIndex': 817, 'instruction': 'movq\t0x960(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 833, 'instruction': 'movl\t%eax, 0x7cc(%rsp)                # 4-byte Spill'}, {'instIndex': 834, 'instruction': 'jmp\t.LBB4_62'}, {'instIndex': 923, 'instruction': 'jmp\t.LBB4_73'}, {'instIndex': 941, 'instruction': 'movl\t%eax, 0x7ac(%rsp)                # 4-byte Spill'}, {'instIndex': 958, 'instruction': 'movl\t%ecx, 0x7a8(%rsp)                # 4-byte Spill'}, {'instIndex': 1112, 'instruction': 'jmp\t.LBB4_152'}, {'instIndex': 1113, 'instruction': 'movq\t0x960(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 1114, 'instruction': 'movl\t0x72c(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1232, 'instruction': 'movl\t0x6f0(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 1237, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1238, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1239, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1247, 'instruction': 'movl\t0x6f0(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1248, 'instruction': 'movl\t0x6ec(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1263, 'instruction': 'movq\t0x730(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1268, 'instruction': 'addl\t$0x10, %r8d'}, {'instIndex': 1269, 'instruction': 'movl\t%esi, %ecx'}, {'instIndex': 1325, 'instruction': 'movl\t0x6dc(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1330, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1331, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1332, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1340, 'instruction': 'movl\t%edx, 0x694(%rsp)                # 4-byte Spill'}, {'instIndex': 1341, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1356, 'instruction': 'movq\t0x960(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 1361, 'instruction': 'shrl\t$0xf0, %r9d'}, {'instIndex': 1362, 'instruction': ''}, {'instIndex': 1440, 'instruction': 'movq\t%rax, 0x648(%rsp)                # 8-byte Spill'}, {'instIndex': 1445, 'instruction': 'movq\t%rsi, 0x620(%rsp)                # 8-byte Spill'}, {'instIndex': 1446, 'instruction': 'movl\t%eax, 0x628(%rsp)                # 4-byte Spill'}, {'instIndex': 1447, 'instruction': 'movl\t%ecx, 0x62c(%rsp)                # 4-byte Spill'}, {'instIndex': 1455, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1456, 'instruction': 'movl\t%ecx, 0x630(%rsp)                # 4-byte Spill'}, {'instIndex': 1471, 'instruction': 'movl\t%edx, (%rcx)'}, {'instIndex': 1476, 'instruction': 'movl\t0x628(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1477, 'instruction': 'movq\t0x730(%rsp), %rax                # 8-byte Reload'}]}]}
The case of compiler clang with optimization Os.
Patched source code file: flacdec.c
Patched function: 1---static int flac_decode_frame 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/Os/flacdec.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/Os/flacdec.s---flac_decode_frame---before
function id: 4
function flag: True
There are 2250 instructions for function: flac_decode_frame in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '639', 'end': 649}, 'before': {'start': '639', 'end': 644}}}]
[{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 190, 'instruction': 'movl\t%edx, %esi'}, {'instIndex': 191, 'instruction': 'shll\t$3, %esi'}, {'instIndex': 236, 'instruction': ''}, {'instIndex': 237, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 279, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 280, 'instruction': ''}, {'instIndex': 290, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 291, 'instruction': 'movl\t0x5e4(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 302, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 303, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 304, 'instruction': 'movq\t0x638(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 464, 'instruction': 'movq\t%rdx, 0x5a0(%rsp)                # 8-byte Spill'}, {'instIndex': 517, 'instruction': 'movq\t0x648(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 602, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 665, 'instruction': 'movq\t0x520(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 666, 'instruction': 'movq\t0x628(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 667, 'instruction': 'movl\t0x514(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 718, 'instruction': 'jmp\t.LBB4_130'}, {'instIndex': 719, 'instruction': 'movq\t0x648(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 735, 'instruction': 'movl\t%eax, 0x50c(%rsp)                # 4-byte Spill'}, {'instIndex': 736, 'instruction': 'jmp\t.LBB4_52'}, {'instIndex': 825, 'instruction': 'jmp\t.LBB4_63'}, {'instIndex': 843, 'instruction': 'movl\t%eax, 0x4ec(%rsp)                # 4-byte Spill'}, {'instIndex': 860, 'instruction': 'movl\t%ecx, 0x4e8(%rsp)                # 4-byte Spill'}, {'instIndex': 1014, 'instruction': 'jmp\t.LBB4_130'}, {'instIndex': 1015, 'instruction': 'movq\t0x648(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 1016, 'instruction': 'movl\t0x46c(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1134, 'instruction': 'movl\t0x430(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 1139, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1140, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1141, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1149, 'instruction': 'movl\t0x430(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1150, 'instruction': 'movl\t0x42c(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1165, 'instruction': 'movq\t0x470(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1170, 'instruction': 'addl\t$0x10, %r8d'}, {'instIndex': 1171, 'instruction': 'movl\t%esi, %ecx'}, {'instIndex': 1227, 'instruction': 'movl\t0x41c(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1232, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1233, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1234, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1242, 'instruction': 'movl\t%edx, 0x3d4(%rsp)                 # 4-byte Spill'}, {'instIndex': 1243, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1258, 'instruction': 'movq\t0x648(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 1263, 'instruction': 'shrl\t$0xf0, %r9d'}, {'instIndex': 1264, 'instruction': ''}, {'instIndex': 1342, 'instruction': 'movq\t%rax, 0x388(%rsp)                 # 8-byte Spill'}, {'instIndex': 1347, 'instruction': 'movq\t%rsi, 0x360(%rsp)                 # 8-byte Spill'}, {'instIndex': 1348, 'instruction': 'movl\t%eax, 0x368(%rsp)                 # 4-byte Spill'}, {'instIndex': 1349, 'instruction': 'movl\t%ecx, 0x36c(%rsp)                 # 4-byte Spill'}, {'instIndex': 1357, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1358, 'instruction': 'movl\t%ecx, 0x370(%rsp)                 # 4-byte Spill'}, {'instIndex': 1373, 'instruction': 'movl\t%edx, (%rcx)'}, {'instIndex': 1378, 'instruction': 'movl\t0x368(%rsp), %esi                 # 4-byte Reload'}, {'instIndex': 1379, 'instruction': 'movq\t0x470(%rsp), %rax                # 8-byte Reload'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/Os/flacdec.o
Unpatched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/Os/flacdec.o---before
The extraction of function: flac_decode_frame
Analyzing the binaries to generate subCFGs from patched function ...
It has 366 nodes and 634 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 2223 instructions in binary file.
[4196375, 4196608, 4196696, 4197565, 4197856, 4198278, 4198538, 4198793, 4198876, 4199329, 4199409, 4199480, 4200232, 4200871, 4200926, 4201333, 4201388, 4201920, 4201975]
The execution time of patched subCFG information extraction via angr: 0:00:04.520186
{'flac_decode_frame': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cbd>, <DisassemblerInsn "mov" for 0x400cc5>, <DisassemblerInsn "mov" for 0x400ccd>, <DisassemblerInsn "mov" for 0x400cd4>, <DisassemblerInsn "shr" for 0x400cd6>, <DisassemblerInsn "mov" for 0x400cd9>, <DisassemblerInsn "shl" for 0x400ce0>, <DisassemblerInsn "shr" for 0x400ce3>, <DisassemblerInsn "mov" for 0x400ce6>, <DisassemblerInsn "mov" for 0x400ced>, <DisassemblerInsn "add" for 0x400cf0>, <DisassemblerInsn "mov" for 0x400cf4>, <DisassemblerInsn "mov" for 0x400cfc>, <DisassemblerInsn "ror" for 0x400cff>, <DisassemblerInsn "ror" for 0x400d03>, <DisassemblerInsn "ror" for 0x400d06>, <DisassemblerInsn "mov" for 0x400d0a>, <DisassemblerInsn "shr" for 0x400d11>, <DisassemblerInsn "mov" for 0x400d14>, <DisassemblerInsn "mov" for 0x400d1b>, <DisassemblerInsn "cmp" for 0x400d21>, <DisassemblerInsn "jge" for 0x400d24>]'}, {'block_Idx': 155, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401963>, <DisassemblerInsn "mov" for 0x40196a>, <DisassemblerInsn "mov" for 0x401971>, <DisassemblerInsn "mov" for 0x401979>, <DisassemblerInsn "sar" for 0x40197b>, <DisassemblerInsn "movsxd" for 0x40197e>, <DisassemblerInsn "mov" for 0x401981>, <DisassemblerInsn "ror" for 0x401984>, <DisassemblerInsn "ror" for 0x401988>, <DisassemblerInsn "ror" for 0x40198b>, <DisassemblerInsn "and" for 0x40198f>, <DisassemblerInsn "mov" for 0x401992>, <DisassemblerInsn "shl" for 0x401999>, <DisassemblerInsn "mov" for 0x40199b>, <DisassemblerInsn "cmp" for 0x4019a2>, <DisassemblerInsn "jge" for 0x4019a5>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ed6>, <DisassemblerInsn "mov" for 0x401ede>, <DisassemblerInsn "mov" for 0x401ee6>, <DisassemblerInsn "mov" for 0x401eee>, <DisassemblerInsn "mov" for 0x401ef0>, <DisassemblerInsn "mov" for 0x401ef2>, <DisassemblerInsn "mov" for 0x401ef9>, <DisassemblerInsn "mov" for 0x401f00>, <DisassemblerInsn "jmp" for 0x401f08>]'}, {'block_Idx': 46, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e39>, <DisassemblerInsn "and" for 0x400e40>, <DisassemblerInsn "cmp" for 0x400e43>, <DisassemblerInsn "je" for 0x400e46>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400de0>, <DisassemblerInsn "mov" for 0x400de8>, <DisassemblerInsn "mov" for 0x400def>, <DisassemblerInsn "mov" for 0x400df6>, <DisassemblerInsn "mov" for 0x400dfd>, <DisassemblerInsn "mov" for 0x400e04>, <DisassemblerInsn "shl" for 0x400e0b>, <DisassemblerInsn "shr" for 0x400e0e>, <DisassemblerInsn "mov" for 0x400e11>, <DisassemblerInsn "mov" for 0x400e18>, <DisassemblerInsn "cmp" for 0x400e1e>, <DisassemblerInsn "jne" for 0x400e21>]'}, {'block_Idx': 163, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019a7>, <DisassemblerInsn "mov" for 0x4019ae>, <DisassemblerInsn "mov" for 0x4019b5>, <DisassemblerInsn "mov" for 0x4019bc>, <DisassemblerInsn "xor" for 0x4019bf>, <DisassemblerInsn "sub" for 0x4019c1>, <DisassemblerInsn "shr" for 0x4019c4>, <DisassemblerInsn "mov" for 0x4019c6>, <DisassemblerInsn "add" for 0x4019ce>, <DisassemblerInsn "mov" for 0x4019d0>, <DisassemblerInsn "mov" for 0x4019d2>, <DisassemblerInsn "jmp" for 0x4019d9>]'}, {'block_Idx': 183, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d27>, <DisassemblerInsn "mov" for 0x401d2e>, <DisassemblerInsn "mov" for 0x401d35>, <DisassemblerInsn "mov" for 0x401d3c>, <DisassemblerInsn "mov" for 0x401d3e>, <DisassemblerInsn "xor" for 0x401d46>, <DisassemblerInsn "mov" for 0x401d48>, <DisassemblerInsn "mov" for 0x401d4f>, <DisassemblerInsn "mov" for 0x401d56>, <DisassemblerInsn "mov" for 0x401d5e>, <DisassemblerInsn "mov" for 0x401d66>, <DisassemblerInsn "mov" for 0x401d6d>, <DisassemblerInsn "mov" for 0x401d74>, <DisassemblerInsn "mov" for 0x401d7c>, <DisassemblerInsn "mov" for 0x401d84>, <DisassemblerInsn "mov" for 0x401d8b>, <DisassemblerInsn "mov" for 0x401d92>, <DisassemblerInsn "sar" for 0x401d94>, <DisassemblerInsn "movsxd" for 0x401d97>, <DisassemblerInsn "mov" for 0x401d9a>, <DisassemblerInsn "ror" for 0x401d9d>, <DisassemblerInsn "ror" for 0x401da1>, <DisassemblerInsn "ror" for 0x401da4>, <DisassemblerInsn "and" for 0x401da8>, <DisassemblerInsn "mov" for 0x401dab>, <DisassemblerInsn "shl" for 0x401db2>, <DisassemblerInsn "mov" for 0x401db4>, <DisassemblerInsn "cmp" for 0x401dbb>, <DisassemblerInsn "jge" for 0x401dbe>]'}, {'block_Idx': 77, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401258>, <DisassemblerInsn "mov" for 0x401260>, <DisassemblerInsn "mov" for 0x401267>, <DisassemblerInsn "mov" for 0x40126e>, <DisassemblerInsn "mov" for 0x401275>, <DisassemblerInsn "mov" for 0x40127c>, <DisassemblerInsn "mov" for 0x40127e>, <DisassemblerInsn "cmp" for 0x401285>, <DisassemblerInsn "jle" for 0x401287>]'}, {'block_Idx': 166, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a6a>, <DisassemblerInsn "mov" for 0x401a72>, <DisassemblerInsn "mov" for 0x401a79>, <DisassemblerInsn "mov" for 0x401a80>, <DisassemblerInsn "sub" for 0x401a85>, <DisassemblerInsn "mov" for 0x401a87>, <DisassemblerInsn "shl" for 0x401a8e>, <DisassemblerInsn "mov" for 0x401a90>, <DisassemblerInsn "sar" for 0x401a97>, <DisassemblerInsn "mov" for 0x401a99>, <DisassemblerInsn "cmp" for 0x401aa0>, <DisassemblerInsn "jle" for 0x401aa3>]'}, {'block_Idx': 28, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b79>, <DisassemblerInsn "mov" for 0x400b81>, <DisassemblerInsn "mov" for 0x400b89>, <DisassemblerInsn "mov" for 0x400b8b>, <DisassemblerInsn "mov" for 0x400b8e>, <DisassemblerInsn "mov" for 0x400b96>, <DisassemblerInsn "jmp" for 0x400b9d>]'}, {'block_Idx': 78, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40115b>, <DisassemblerInsn "sub" for 0x401162>, <DisassemblerInsn "je" for 0x401165>]'}, {'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401dc0>, <DisassemblerInsn "mov" for 0x401dc7>, <DisassemblerInsn "mov" for 0x401dce>, <DisassemblerInsn "mov" for 0x401dd5>, <DisassemblerInsn "xor" for 0x401dd8>, <DisassemblerInsn "sub" for 0x401dda>, <DisassemblerInsn "shr" for 0x401ddd>, <DisassemblerInsn "mov" for 0x401ddf>, <DisassemblerInsn "add" for 0x401de7>, <DisassemblerInsn "mov" for 0x401de9>, <DisassemblerInsn "mov" for 0x401deb>, <DisassemblerInsn "jmp" for 0x401df2>]'}, {'block_Idx': 204, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d5e>, <DisassemblerInsn "mov" for 0x401d66>, <DisassemblerInsn "mov" for 0x401d6d>, <DisassemblerInsn "mov" for 0x401d74>, <DisassemblerInsn "mov" for 0x401d7c>, <DisassemblerInsn "mov" for 0x401d84>, <DisassemblerInsn "mov" for 0x401d8b>, <DisassemblerInsn "mov" for 0x401d92>, <DisassemblerInsn "sar" for 0x401d94>, <DisassemblerInsn "movsxd" for 0x401d97>, <DisassemblerInsn "mov" for 0x401d9a>, <DisassemblerInsn "ror" for 0x401d9d>, <DisassemblerInsn "ror" for 0x401da1>, <DisassemblerInsn "ror" for 0x401da4>, <DisassemblerInsn "and" for 0x401da8>, <DisassemblerInsn "mov" for 0x401dab>, <DisassemblerInsn "shl" for 0x401db2>, <DisassemblerInsn "mov" for 0x401db4>, <DisassemblerInsn "cmp" for 0x401dbb>, <DisassemblerInsn "jge" for 0x401dbe>]'}, {'block_Idx': 67, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40108a>, <DisassemblerInsn "mov" for 0x401092>, <DisassemblerInsn "mov" for 0x40109a>, <DisassemblerInsn "mov" for 0x4010a2>, <DisassemblerInsn "mov" for 0x4010aa>, <DisassemblerInsn "add" for 0x4010b1>, <DisassemblerInsn "mov" for 0x4010b4>, <DisassemblerInsn "shr" for 0x4010b7>, <DisassemblerInsn "mov" for 0x4010bb>, <DisassemblerInsn "ror" for 0x4010bf>, <DisassemblerInsn "ror" for 0x4010c3>, <DisassemblerInsn "ror" for 0x4010c6>, <DisassemblerInsn "shr" for 0x4010ca>, <DisassemblerInsn "add" for 0x4010cd>, <DisassemblerInsn "mov" for 0x4010d1>, <DisassemblerInsn "mov" for 0x4010d4>, <DisassemblerInsn "add" for 0x4010d7>, <DisassemblerInsn "shl" for 0x4010da>, <DisassemblerInsn "movsxd" for 0x4010de>, <DisassemblerInsn "add" for 0x4010e1>, <DisassemblerInsn "cmp" for 0x4010e4>, <DisassemblerInsn "mov" for 0x4010e7>, <DisassemblerInsn "mov" for 0x4010ef>, <DisassemblerInsn "mov" for 0x4010f7>, <DisassemblerInsn "jb" for 0x4010fe>]'}, {'block_Idx': 115, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40167e>, <DisassemblerInsn "mov" for 0x401686>, <DisassemblerInsn "add" for 0x40168d>, <DisassemblerInsn "mov" for 0x401690>, <DisassemblerInsn "mov" for 0x401692>, <DisassemblerInsn "mov" for 0x401699>, <DisassemblerInsn "mov" for 0x4016a1>, <DisassemblerInsn "mov" for 0x4016a9>, <DisassemblerInsn "mov" for 0x4016b0>, <DisassemblerInsn "mov" for 0x4016b7>, <DisassemblerInsn "mov" for 0x4016b9>, <DisassemblerInsn "mov" for 0x4016c0>, <DisassemblerInsn "mov" for 0x4016c3>, <DisassemblerInsn "mov" for 0x4016cb>, <DisassemblerInsn "sar" for 0x4016cd>, <DisassemblerInsn "movsxd" for 0x4016d0>, <DisassemblerInsn "mov" for 0x4016d3>, <DisassemblerInsn "mov" for 0x4016d7>, <DisassemblerInsn "and" for 0x4016d9>, <DisassemblerInsn "movzx" for 0x4016dc>, <DisassemblerInsn "mov" for 0x4016e0>, <DisassemblerInsn "add" for 0x4016e7>, <DisassemblerInsn "mov" for 0x4016ea>, <DisassemblerInsn "mov" for 0x4016f1>, <DisassemblerInsn "mov" for 0x4016f3>, <DisassemblerInsn "shr" for 0x4016f8>, <DisassemblerInsn "mov" for 0x4016fa>, <DisassemblerInsn "and" for 0x401701>, <DisassemblerInsn "cmp" for 0x401703>, <DisassemblerInsn "je" for 0x401706>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d26>, <DisassemblerInsn "mov" for 0x400d2d>, <DisassemblerInsn "mov" for 0x400d35>, <DisassemblerInsn "add" for 0x400d38>, <DisassemblerInsn "xor" for 0x400d3b>, <DisassemblerInsn "cmp" for 0x400d3d>, <DisassemblerInsn "mov" for 0x400d3f>, <DisassemblerInsn "mov" for 0x400d41>, <DisassemblerInsn "mov" for 0x400d48>, <DisassemblerInsn "mov" for 0x400d4f>, <DisassemblerInsn "je" for 0x400d56>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e23>, <DisassemblerInsn "add" for 0x400e2b>, <DisassemblerInsn "mov" for 0x400e2f>, <DisassemblerInsn "jmp" for 0x400e37>]'}, {'block_Idx': 75, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401189>, <DisassemblerInsn "mov" for 0x401191>, <DisassemblerInsn "mov" for 0x401198>, <DisassemblerInsn "mov" for 0x4011a0>, <DisassemblerInsn "shr" for 0x4011a8>, <DisassemblerInsn "and" for 0x4011ac>, <DisassemblerInsn "mov" for 0x4011b3>, <DisassemblerInsn "ror" for 0x4011b6>, <DisassemblerInsn "ror" for 0x4011ba>, <DisassemblerInsn "ror" for 0x4011bd>, <DisassemblerInsn "shr" for 0x4011c1>, <DisassemblerInsn "add" for 0x4011c4>, <DisassemblerInsn "mov" for 0x4011c7>, <DisassemblerInsn "add" for 0x4011c9>, <DisassemblerInsn "mov" for 0x4011cc>, <DisassemblerInsn "mov" for 0x4011d3>, <DisassemblerInsn "jmp" for 0x4011da>]'}, {'block_Idx': 188, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b13>, <DisassemblerInsn "mov" for 0x401b1b>, <DisassemblerInsn "mov" for 0x401b22>, <DisassemblerInsn "mov" for 0x401b29>, <DisassemblerInsn "mov" for 0x401b31>, <DisassemblerInsn "mov" for 0x401b39>, <DisassemblerInsn "mov" for 0x401b40>, <DisassemblerInsn "mov" for 0x401b47>, <DisassemblerInsn "sar" for 0x401b49>, <DisassemblerInsn "movsxd" for 0x401b4c>, <DisassemblerInsn "mov" for 0x401b4f>, <DisassemblerInsn "ror" for 0x401b52>, <DisassemblerInsn "ror" for 0x401b56>, <DisassemblerInsn "ror" for 0x401b59>, <DisassemblerInsn "and" for 0x401b5d>, <DisassemblerInsn "mov" for 0x401b60>, <DisassemblerInsn "shl" for 0x401b67>, <DisassemblerInsn "mov" for 0x401b69>, <DisassemblerInsn "cmp" for 0x401b70>, <DisassemblerInsn "jge" for 0x401b73>]'}, {'block_Idx': 88, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014a6>, <DisassemblerInsn "mov" for 0x4014ae>, <DisassemblerInsn "mov" for 0x4014b5>, <DisassemblerInsn "mov" for 0x4014bc>, <DisassemblerInsn "add" for 0x4014c3>, <DisassemblerInsn "mov" for 0x4014c6>, <DisassemblerInsn "xor" for 0x4014c8>, <DisassemblerInsn "call" for 0x4014ca>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019de>, <DisassemblerInsn "mov" for 0x4019e6>, <DisassemblerInsn "mov" for 0x4019ed>, <DisassemblerInsn "mov" for 0x4019f4>, <DisassemblerInsn "mov" for 0x4019fc>, <DisassemblerInsn "shr" for 0x401a04>, <DisassemblerInsn "mov" for 0x401a08>, <DisassemblerInsn "add" for 0x401a0b>, <DisassemblerInsn "mov" for 0x401a0f>, <DisassemblerInsn "add" for 0x401a11>, <DisassemblerInsn "mov" for 0x401a14>, <DisassemblerInsn "shl" for 0x401a1b>, <DisassemblerInsn "mov" for 0x401a1e>, <DisassemblerInsn "mov" for 0x401a25>, <DisassemblerInsn "sar" for 0x401a2d>, <DisassemblerInsn "movsxd" for 0x401a31>, <DisassemblerInsn "mov" for 0x401a34>, <DisassemblerInsn "ror" for 0x401a38>, <DisassemblerInsn "ror" for 0x401a3c>, <DisassemblerInsn "ror" for 0x401a3f>, <DisassemblerInsn "shl" for 0x401a43>, <DisassemblerInsn "mov" for 0x401a45>, <DisassemblerInsn "mov" for 0x401a4c>, <DisassemblerInsn "xor" for 0x401a4f>, <DisassemblerInsn "sub" for 0x401a51>, <DisassemblerInsn "shr" for 0x401a54>, <DisassemblerInsn "mov" for 0x401a56>, <DisassemblerInsn "add" for 0x401a5d>, <DisassemblerInsn "mov" for 0x401a5f>, <DisassemblerInsn "or" for 0x401a61>, <DisassemblerInsn "mov" for 0x401a63>, <DisassemblerInsn "mov" for 0x401a6a>, <DisassemblerInsn "mov" for 0x401a72>, <DisassemblerInsn "mov" for 0x401a79>, <DisassemblerInsn "mov" for 0x401a80>, <DisassemblerInsn "sub" for 0x401a85>, <DisassemblerInsn "mov" for 0x401a87>, <DisassemblerInsn "shl" for 0x401a8e>, <DisassemblerInsn "mov" for 0x401a90>, <DisassemblerInsn "sar" for 0x401a97>, <DisassemblerInsn "mov" for 0x401a99>, <DisassemblerInsn "cmp" for 0x401aa0>, <DisassemblerInsn "jle" for 0x401aa3>]'}, {'block_Idx': 103, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40138c>, <DisassemblerInsn "sub" for 0x401393>, <DisassemblerInsn "je" for 0x401396>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401bac>, <DisassemblerInsn "mov" for 0x401bb4>, <DisassemblerInsn "mov" for 0x401bbb>, <DisassemblerInsn "mov" for 0x401bc2>, <DisassemblerInsn "mov" for 0x401bca>, <DisassemblerInsn "shr" for 0x401bd2>, <DisassemblerInsn "mov" for 0x401bd6>, <DisassemblerInsn "add" for 0x401bd9>, <DisassemblerInsn "mov" for 0x401bdd>, <DisassemblerInsn "add" for 0x401bdf>, <DisassemblerInsn "mov" for 0x401be2>, <DisassemblerInsn "shl" for 0x401be9>, <DisassemblerInsn "mov" for 0x401bec>, <DisassemblerInsn "mov" for 0x401bf3>, <DisassemblerInsn "sar" for 0x401bfb>, <DisassemblerInsn "movsxd" for 0x401bff>, <DisassemblerInsn "mov" for 0x401c02>, <DisassemblerInsn "ror" for 0x401c06>, <DisassemblerInsn "ror" for 0x401c0a>, <DisassemblerInsn "ror" for 0x401c0d>, <DisassemblerInsn "shl" for 0x401c11>, <DisassemblerInsn "mov" for 0x401c13>, <DisassemblerInsn "mov" for 0x401c1a>, <DisassemblerInsn "xor" for 0x401c1d>, <DisassemblerInsn "sub" for 0x401c1f>, <DisassemblerInsn "shr" for 0x401c22>, <DisassemblerInsn "mov" for 0x401c24>, <DisassemblerInsn "add" for 0x401c2b>, <DisassemblerInsn "mov" for 0x401c2d>, <DisassemblerInsn "or" for 0x401c2f>, <DisassemblerInsn "mov" for 0x401c31>, <DisassemblerInsn "mov" for 0x401c38>, <DisassemblerInsn "mov" for 0x401c40>, <DisassemblerInsn "mov" for 0x401c48>, <DisassemblerInsn "mov" for 0x401c4f>, <DisassemblerInsn "mov" for 0x401c56>, <DisassemblerInsn "sub" for 0x401c5b>, <DisassemblerInsn "mov" for 0x401c5d>, <DisassemblerInsn "shl" for 0x401c64>, <DisassemblerInsn "mov" for 0x401c66>, <DisassemblerInsn "sar" for 0x401c6d>, <DisassemblerInsn "mov" for 0x401c6f>, <DisassemblerInsn "mov" for 0x401c77>, <DisassemblerInsn "mov" for 0x401c7a>, <DisassemblerInsn "add" for 0x401c7d>, <DisassemblerInsn "mov" for 0x401c81>, <DisassemblerInsn "movsxd" for 0x401c89>, <DisassemblerInsn "cmp" for 0x401c8c>, <DisassemblerInsn "jge" for 0x401c8f>]'}, {'block_Idx': 50, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e92>, <DisassemblerInsn "mov" for 0x400e9a>, <DisassemblerInsn "mov" for 0x400ea2>, <DisassemblerInsn "mov" for 0x400eaa>, <DisassemblerInsn "mov" for 0x400eb2>, <DisassemblerInsn "mov" for 0x400eb4>, <DisassemblerInsn "cmp" for 0x400ebb>, <DisassemblerInsn "setg" for 0x400ebe>, <DisassemblerInsn "mov" for 0x400ec2>, <DisassemblerInsn "mov" for 0x400eca>, <DisassemblerInsn "add" for 0x400ecd>, <DisassemblerInsn "mov" for 0x400ed1>, <DisassemblerInsn "mov" for 0x400ed9>, <DisassemblerInsn "mov" for 0x400edd>, <DisassemblerInsn "mov" for 0x400ee3>, <DisassemblerInsn "cmp" for 0x400ee9>, <DisassemblerInsn "cmovg" for 0x400eec>, <DisassemblerInsn "mov" for 0x400ef0>, <DisassemblerInsn "mov" for 0x400ef6>, <DisassemblerInsn "cmp" for 0x400efc>, <DisassemblerInsn "cmovg" for 0x400eff>, <DisassemblerInsn "and" for 0x400f03>, <DisassemblerInsn "movzx" for 0x400f07>, <DisassemblerInsn "mov" for 0x400f0b>, <DisassemblerInsn "sub" for 0x400f0f>, <DisassemblerInsn "mov" for 0x400f12>, <DisassemblerInsn "mov" for 0x400f15>, <DisassemblerInsn "mov" for 0x400f1d>, <DisassemblerInsn "add" for 0x400f20>, <DisassemblerInsn "mov" for 0x400f24>, <DisassemblerInsn "mov" for 0x400f2c>, <DisassemblerInsn "mov" for 0x400f30>, <DisassemblerInsn "add" for 0x400f33>, <DisassemblerInsn "mov" for 0x400f37>, <DisassemblerInsn "mov" for 0x400f3f>, <DisassemblerInsn "mov" for 0x400f43>, <DisassemblerInsn "mov" for 0x400f49>, <DisassemblerInsn "add" for 0x400f4c>, <DisassemblerInsn "mov" for 0x400f50>, <DisassemblerInsn "mov" for 0x400f58>, <DisassemblerInsn "mov" for 0x400f5b>, <DisassemblerInsn "mov" for 0x400f5d>, <DisassemblerInsn "and" for 0x400f63>, <DisassemblerInsn "cmp" for 0x400f65>, <DisassemblerInsn "je" for 0x400f67>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400900>, <DisassemblerInsn "mov" for 0x400908>, <DisassemblerInsn "mov" for 0x400910>, <DisassemblerInsn "mov" for 0x400918>, <DisassemblerInsn "mov" for 0x40091e>, <DisassemblerInsn "add" for 0x400921>, <DisassemblerInsn "mov" for 0x400925>, <DisassemblerInsn "mov" for 0x40092d>, <DisassemblerInsn "add" for 0x400930>, <DisassemblerInsn "mov" for 0x400934>, <DisassemblerInsn "mov" for 0x40093c>, <DisassemblerInsn "mov" for 0x400944>, <DisassemblerInsn "mov" for 0x400949>, <DisassemblerInsn "mov" for 0x400951>, <DisassemblerInsn "mov" for 0x400958>, <DisassemblerInsn "mov" for 0x400960>, <DisassemblerInsn "mov" for 0x400968>, <DisassemblerInsn "mov" for 0x40096f>, <DisassemblerInsn "mov" for 0x400977>, <DisassemblerInsn "sar" for 0x400979>, <DisassemblerInsn "movsxd" for 0x40097c>, <DisassemblerInsn "mov" for 0x40097f>, <DisassemblerInsn "mov" for 0x400982>, <DisassemblerInsn "and" for 0x400984>, <DisassemblerInsn "mov" for 0x400987>, <DisassemblerInsn "movzx" for 0x40098e>, <DisassemblerInsn "mov" for 0x400991>, <DisassemblerInsn "mov" for 0x400998>, <DisassemblerInsn "add" for 0x40099a>, <DisassemblerInsn "mov" for 0x40099d>, <DisassemblerInsn "sar" for 0x40099f>, <DisassemblerInsn "movsxd" for 0x4009a2>, <DisassemblerInsn "mov" for 0x4009a5>, <DisassemblerInsn "ror" for 0x4009a8>, <DisassemblerInsn "ror" for 0x4009ac>, <DisassemblerInsn "ror" for 0x4009af>, <DisassemblerInsn "and" for 0x4009b3>, <DisassemblerInsn "shl" for 0x4009b6>, <DisassemblerInsn "mov" for 0x4009b8>, <DisassemblerInsn "shr" for 0x4009bf>, <DisassemblerInsn "mov" for 0x4009c2>, <DisassemblerInsn "mov" for 0x4009c9>, <DisassemblerInsn "add" for 0x4009cb>, <DisassemblerInsn "sar" for 0x4009ce>, <DisassemblerInsn "movsxd" for 0x4009d1>, <DisassemblerInsn "mov" for 0x4009d4>, <DisassemblerInsn "ror" for 0x4009d7>, <DisassemblerInsn "ror" for 0x4009db>, <DisassemblerInsn "ror" for 0x4009de>, <DisassemblerInsn "shl" for 0x4009e2>, <DisassemblerInsn "mov" for 0x4009e4>, <DisassemblerInsn "shr" for 0x4009eb>, <DisassemblerInsn "mov" for 0x4009ee>, <DisassemblerInsn "add" for 0x4009f1>, <DisassemblerInsn "shl" for 0x4009f5>, <DisassemblerInsn "sar" for 0x4009f8>, <DisassemblerInsn "movsxd" for 0x4009fc>, <DisassemblerInsn "mov" for 0x4009ff>, <DisassemblerInsn "ror" for 0x400a03>, <DisassemblerInsn "ror" for 0x400a07>, <DisassemblerInsn "ror" for 0x400a0a>, <DisassemblerInsn "shl" for 0x400a0e>, <DisassemblerInsn "mov" for 0x400a10>, <DisassemblerInsn "shr" for 0x400a18>, <DisassemblerInsn "add" for 0x400a1b>, <DisassemblerInsn "mov" for 0x400a1e>, <DisassemblerInsn "mov" for 0x400a25>, <DisassemblerInsn "or" for 0x400a27>, <DisassemblerInsn "mov" for 0x400a29>, <DisassemblerInsn "shl" for 0x400a30>, <DisassemblerInsn "mov" for 0x400a33>, <DisassemblerInsn "add" for 0x400a3a>, <DisassemblerInsn "mov" for 0x400a3c>, <DisassemblerInsn "mov" for 0x400a3e>, <DisassemblerInsn "cmp" for 0x400a45>, <DisassemblerInsn "jle" for 0x400a47>]'}, {'block_Idx': 3, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4004c9>, <DisassemblerInsn "mov" for 0x4004d1>, <DisassemblerInsn "mov" for 0x4004d9>, <DisassemblerInsn "mov" for 0x4004e0>, <DisassemblerInsn "mov" for 0x4004e3>, <DisassemblerInsn "mov" for 0x4004eb>, <DisassemblerInsn "mov" for 0x4004f2>, <DisassemblerInsn "xor" for 0x4004f4>, <DisassemblerInsn "cmp" for 0x4004f6>, <DisassemblerInsn "mov" for 0x4004f9>, <DisassemblerInsn "mov" for 0x400500>, <DisassemblerInsn "mov" for 0x400507>, <DisassemblerInsn "mov" for 0x40050e>, <DisassemblerInsn "je" for 0x400516>]'}, {'block_Idx': 136, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017cf>, <DisassemblerInsn "mov" for 0x4017d6>, <DisassemblerInsn "mov" for 0x4017dd>, <DisassemblerInsn "mov" for 0x4017e5>, <DisassemblerInsn "mov" for 0x4017ed>, <DisassemblerInsn "mov" for 0x4017f4>, <DisassemblerInsn "sar" for 0x4017f6>, <DisassemblerInsn "mov" for 0x4017f9>, <DisassemblerInsn "movsxd" for 0x401800>, <DisassemblerInsn "mov" for 0x401803>, <DisassemblerInsn "mov" for 0x401807>, <DisassemblerInsn "and" for 0x401809>, <DisassemblerInsn "mov" for 0x40180c>, <DisassemblerInsn "movzx" for 0x401813>, <DisassemblerInsn "add" for 0x401817>, <DisassemblerInsn "mov" for 0x40181a>, <DisassemblerInsn "mov" for 0x401821>, <DisassemblerInsn "mov" for 0x401823>, <DisassemblerInsn "shr" for 0x401828>, <DisassemblerInsn "mov" for 0x40182a>, <DisassemblerInsn "mov" for 0x401831>, <DisassemblerInsn "and" for 0x401838>, <DisassemblerInsn "mov" for 0x40183a>, <DisassemblerInsn "add" for 0x401841>, <DisassemblerInsn "mov" for 0x401844>, <DisassemblerInsn "cmp" for 0x40184b>, <DisassemblerInsn "mov" for 0x40184e>, <DisassemblerInsn "mov" for 0x401855>, <DisassemblerInsn "je" for 0x40185c>]'}, {'block_Idx': 108, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401438>, <DisassemblerInsn "mov" for 0x40143f>, <DisassemblerInsn "mov" for 0x401447>, <DisassemblerInsn "sar" for 0x401449>, <DisassemblerInsn "movsxd" for 0x40144c>, <DisassemblerInsn "mov" for 0x40144f>, <DisassemblerInsn "ror" for 0x401452>, <DisassemblerInsn "ror" for 0x401456>, <DisassemblerInsn "ror" for 0x401459>, <DisassemblerInsn "and" for 0x40145d>, <DisassemblerInsn "shl" for 0x401460>, <DisassemblerInsn "mov" for 0x401462>, <DisassemblerInsn "shr" for 0x401469>, <DisassemblerInsn "add" for 0x40146c>, <DisassemblerInsn "imul" for 0x40146f>, <DisassemblerInsn "mov" for 0x401472>, <DisassemblerInsn "mov" for 0x401479>, <DisassemblerInsn "jmp" for 0x401480>]'}, {'block_Idx': 168, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401aa9>, <DisassemblerInsn "mov" for 0x401ab1>, <DisassemblerInsn "mov" for 0x401ab9>, <DisassemblerInsn "mov" for 0x401abe>, <DisassemblerInsn "xor" for 0x401ac6>, <DisassemblerInsn "mov" for 0x401ac8>, <DisassemblerInsn "mov" for 0x401ad0>, <DisassemblerInsn "mov" for 0x401ad8>, <DisassemblerInsn "mov" for 0x401ae0>, <DisassemblerInsn "mov" for 0x401ae8>, <DisassemblerInsn "mov" for 0x401aef>, <DisassemblerInsn "add" for 0x401af2>, <DisassemblerInsn "mov" for 0x401af6>, <DisassemblerInsn "movsxd" for 0x401afe>, <DisassemblerInsn "cmp" for 0x401b01>, <DisassemblerInsn "mov" for 0x401b04>, <DisassemblerInsn "jl" for 0x401b0c>]'}, {'block_Idx': 201, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c38>, <DisassemblerInsn "mov" for 0x401c40>, <DisassemblerInsn "mov" for 0x401c48>, <DisassemblerInsn "mov" for 0x401c4f>, <DisassemblerInsn "mov" for 0x401c56>, <DisassemblerInsn "sub" for 0x401c5b>, <DisassemblerInsn "mov" for 0x401c5d>, <DisassemblerInsn "shl" for 0x401c64>, <DisassemblerInsn "mov" for 0x401c66>, <DisassemblerInsn "sar" for 0x401c6d>, <DisassemblerInsn "mov" for 0x401c6f>, <DisassemblerInsn "mov" for 0x401c77>, <DisassemblerInsn "mov" for 0x401c7a>, <DisassemblerInsn "add" for 0x401c7d>, <DisassemblerInsn "mov" for 0x401c81>, <DisassemblerInsn "movsxd" for 0x401c89>, <DisassemblerInsn "cmp" for 0x401c8c>, <DisassemblerInsn "jge" for 0x401c8f>]'}, {'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013a1>, <DisassemblerInsn "mov" for 0x4013a8>, <DisassemblerInsn "mov" for 0x4013b0>, <DisassemblerInsn "sar" for 0x4013b2>, <DisassemblerInsn "movsxd" for 0x4013b5>, <DisassemblerInsn "mov" for 0x4013b8>, <DisassemblerInsn "ror" for 0x4013bb>, <DisassemblerInsn "ror" for 0x4013bf>, <DisassemblerInsn "ror" for 0x4013c2>, <DisassemblerInsn "and" for 0x4013c6>, <DisassemblerInsn "shl" for 0x4013c9>, <DisassemblerInsn "mov" for 0x4013cb>, <DisassemblerInsn "shr" for 0x4013d2>, <DisassemblerInsn "add" for 0x4013d5>, <DisassemblerInsn "imul" for 0x4013d8>, <DisassemblerInsn "mov" for 0x4013de>, <DisassemblerInsn "mov" for 0x4013e5>, <DisassemblerInsn "jmp" for 0x4013ec>]'}, {'block_Idx': 74, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40114d>, <DisassemblerInsn "sub" for 0x401154>, <DisassemblerInsn "je" for 0x401157>]'}, {'block_Idx': 81, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011dc>, <DisassemblerInsn "mov" for 0x4011e4>, <DisassemblerInsn "mov" for 0x4011eb>, <DisassemblerInsn "mov" for 0x4011f3>, <DisassemblerInsn "shr" for 0x4011fb>, <DisassemblerInsn "and" for 0x4011ff>, <DisassemblerInsn "mov" for 0x401206>, <DisassemblerInsn "ror" for 0x401209>, <DisassemblerInsn "ror" for 0x40120d>, <DisassemblerInsn "ror" for 0x401210>, <DisassemblerInsn "shr" for 0x401214>, <DisassemblerInsn "add" for 0x401217>, <DisassemblerInsn "mov" for 0x40121a>, <DisassemblerInsn "add" for 0x40121c>, <DisassemblerInsn "mov" for 0x40121f>, <DisassemblerInsn "mov" for 0x401226>, <DisassemblerInsn "jmp" for 0x40122d>]'}, {'block_Idx': 167, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40240e>, <DisassemblerInsn "cmp" for 0x402415>, <DisassemblerInsn "je" for 0x402418>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b75>, <DisassemblerInsn "mov" for 0x401b7c>, <DisassemblerInsn "mov" for 0x401b83>, <DisassemblerInsn "mov" for 0x401b8a>, <DisassemblerInsn "xor" for 0x401b8d>, <DisassemblerInsn "sub" for 0x401b8f>, <DisassemblerInsn "shr" for 0x401b92>, <DisassemblerInsn "mov" for 0x401b94>, <DisassemblerInsn "add" for 0x401b9c>, <DisassemblerInsn "mov" for 0x401b9e>, <DisassemblerInsn "mov" for 0x401ba0>, <DisassemblerInsn "jmp" for 0x401ba7>]'}, {'block_Idx': 70, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401104>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f0d>, <DisassemblerInsn "mov" for 0x401f14>, <DisassemblerInsn "mov" for 0x401f1c>, <DisassemblerInsn "mov" for 0x401f24>, <DisassemblerInsn "call" for 0x401f26>]'}, {'block_Idx': 202, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c95>, <DisassemblerInsn "mov" for 0x401c9d>, <DisassemblerInsn "mov" for 0x401ca5>, <DisassemblerInsn "mov" for 0x401cad>, <DisassemblerInsn "mov" for 0x401caf>, <DisassemblerInsn "mov" for 0x401cb1>, <DisassemblerInsn "mov" for 0x401cb8>, <DisassemblerInsn "mov" for 0x401cbf>, <DisassemblerInsn "jmp" for 0x401cc7>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ba2>, <DisassemblerInsn "and" for 0x400ba9>, <DisassemblerInsn "cmp" for 0x400bae>, <DisassemblerInsn "je" for 0x400bb3>]'}, {'block_Idx': 62, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40101e>, <DisassemblerInsn "mov" for 0x401025>, <DisassemblerInsn "mov" for 0x40102c>, <DisassemblerInsn "mov" for 0x401031>, <DisassemblerInsn "shr" for 0x401033>, <DisassemblerInsn "mov" for 0x401035>, <DisassemblerInsn "and" for 0x401037>, <DisassemblerInsn "mov" for 0x401039>, <DisassemblerInsn "mov" for 0x40103b>, <DisassemblerInsn "mov" for 0x401040>, <DisassemblerInsn "mov" for 0x401048>, <DisassemblerInsn "mov" for 0x401050>, <DisassemblerInsn "mov" for 0x401057>, <DisassemblerInsn "mov" for 0x40105f>, <DisassemblerInsn "mov" for 0x401067>, <DisassemblerInsn "mov" for 0x40106e>, <DisassemblerInsn "mov" for 0x401075>, <DisassemblerInsn "mov" for 0x40107d>, <DisassemblerInsn "cmp" for 0x401085>, <DisassemblerInsn "jle" for 0x401088>]'}, {'block_Idx': 126, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401728>, <DisassemblerInsn "mov" for 0x401730>, <DisassemblerInsn "mov" for 0x401737>, <DisassemblerInsn "mov" for 0x40173f>, <DisassemblerInsn "mov" for 0x401746>, <DisassemblerInsn "sar" for 0x401748>, <DisassemblerInsn "movsxd" for 0x40174b>, <DisassemblerInsn "mov" for 0x40174e>, <DisassemblerInsn "ror" for 0x401751>, <DisassemblerInsn "ror" for 0x401755>, <DisassemblerInsn "ror" for 0x401758>, <DisassemblerInsn "and" for 0x40175c>, <DisassemblerInsn "shl" for 0x40175f>, <DisassemblerInsn "mov" for 0x401761>, <DisassemblerInsn "shr" for 0x401763>, <DisassemblerInsn "mov" for 0x401766>, <DisassemblerInsn "mov" for 0x40176d>, <DisassemblerInsn "add" for 0x40176f>, <DisassemblerInsn "mov" for 0x401772>, <DisassemblerInsn "mov" for 0x401774>, <DisassemblerInsn "sar" for 0x401776>, <DisassemblerInsn "movsxd" for 0x401779>, <DisassemblerInsn "mov" for 0x40177c>, <DisassemblerInsn "and" for 0x40177f>, <DisassemblerInsn "movzx" for 0x401782>, <DisassemblerInsn "add" for 0x401785>, <DisassemblerInsn "mov" for 0x401788>, <DisassemblerInsn "mov" for 0x40178a>, <DisassemblerInsn "shr" for 0x40178f>, <DisassemblerInsn "mov" for 0x401791>, <DisassemblerInsn "and" for 0x401798>, <DisassemblerInsn "xor" for 0x40179a>, <DisassemblerInsn "mov" for 0x40179c>, <DisassemblerInsn "cmp" for 0x4017a1>, <DisassemblerInsn "mov" for 0x4017a4>, <DisassemblerInsn "mov" for 0x4017a6>, <DisassemblerInsn "mov" for 0x4017ad>, <DisassemblerInsn "mov" for 0x4017b4>, <DisassemblerInsn "mov" for 0x4017bb>, <DisassemblerInsn "mov" for 0x4017c2>, <DisassemblerInsn "je" for 0x4017c9>]'}, {'block_Idx': 90, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401370>, <DisassemblerInsn "sub" for 0x401377>, <DisassemblerInsn "je" for 0x40137a>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d5e>, <DisassemblerInsn "mov" for 0x400d66>, <DisassemblerInsn "add" for 0x400d6d>, <DisassemblerInsn "sub" for 0x400d70>, <DisassemblerInsn "setb" for 0x400d73>, <DisassemblerInsn "mov" for 0x400d76>, <DisassemblerInsn "mov" for 0x400d79>, <DisassemblerInsn "sub" for 0x400d7b>, <DisassemblerInsn "sete" for 0x400d7e>, <DisassemblerInsn "and" for 0x400d81>, <DisassemblerInsn "test" for 0x400d83>, <DisassemblerInsn "mov" for 0x400d86>, <DisassemblerInsn "jne" for 0x400d8d>]'}, {'block_Idx': 69, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401057>, <DisassemblerInsn "mov" for 0x40105f>, <DisassemblerInsn "mov" for 0x401067>, <DisassemblerInsn "mov" for 0x40106e>, <DisassemblerInsn "mov" for 0x401075>, <DisassemblerInsn "mov" for 0x40107d>, <DisassemblerInsn "cmp" for 0x401085>, <DisassemblerInsn "jle" for 0x401088>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e83>, <DisassemblerInsn "mov" for 0x401e8b>, <DisassemblerInsn "mov" for 0x401e93>, <DisassemblerInsn "mov" for 0x401e9a>, <DisassemblerInsn "mov" for 0x401ea1>, <DisassemblerInsn "sub" for 0x401ea6>, <DisassemblerInsn "mov" for 0x401ea8>, <DisassemblerInsn "shl" for 0x401eaf>, <DisassemblerInsn "mov" for 0x401eb1>, <DisassemblerInsn "sar" for 0x401eb8>, <DisassemblerInsn "mov" for 0x401eba>, <DisassemblerInsn "mov" for 0x401ec2>, <DisassemblerInsn "add" for 0x401ec5>, <DisassemblerInsn "mov" for 0x401ec9>, <DisassemblerInsn "cmp" for 0x401ed1>, <DisassemblerInsn "je" for 0x401ed4>]'}, {'block_Idx': 128, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401699>, <DisassemblerInsn "mov" for 0x4016a1>, <DisassemblerInsn "mov" for 0x4016a9>, <DisassemblerInsn "mov" for 0x4016b0>, <DisassemblerInsn "mov" for 0x4016b7>, <DisassemblerInsn "mov" for 0x4016b9>, <DisassemblerInsn "mov" for 0x4016c0>, <DisassemblerInsn "mov" for 0x4016c3>, <DisassemblerInsn "mov" for 0x4016cb>, <DisassemblerInsn "sar" for 0x4016cd>, <DisassemblerInsn "movsxd" for 0x4016d0>, <DisassemblerInsn "mov" for 0x4016d3>, <DisassemblerInsn "mov" for 0x4016d7>, <DisassemblerInsn "and" for 0x4016d9>, <DisassemblerInsn "movzx" for 0x4016dc>, <DisassemblerInsn "mov" for 0x4016e0>, <DisassemblerInsn "add" for 0x4016e7>, <DisassemblerInsn "mov" for 0x4016ea>, <DisassemblerInsn "mov" for 0x4016f1>, <DisassemblerInsn "mov" for 0x4016f3>, <DisassemblerInsn "shr" for 0x4016f8>, <DisassemblerInsn "mov" for 0x4016fa>, <DisassemblerInsn "and" for 0x401701>, <DisassemblerInsn "cmp" for 0x401703>, <DisassemblerInsn "je" for 0x401706>]'}, {'block_Idx': 95, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40137e>, <DisassemblerInsn "sub" for 0x401385>, <DisassemblerInsn "je" for 0x401388>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f86>, <DisassemblerInsn "mov" for 0x400f8e>, <DisassemblerInsn "mov" for 0x400f96>, <DisassemblerInsn "ror" for 0x400f99>, <DisassemblerInsn "ror" for 0x400f9d>, <DisassemblerInsn "ror" for 0x400fa0>, <DisassemblerInsn "shr" for 0x400fa4>, <DisassemblerInsn "mov" for 0x400fa7>, <DisassemblerInsn "mov" for 0x400fae>, <DisassemblerInsn "mov" for 0x400fb4>, <DisassemblerInsn "xor" for 0x400fb6>, <DisassemblerInsn "shr" for 0x400fbc>, <DisassemblerInsn "cmp" for 0x400fbf>, <DisassemblerInsn "cmovb" for 0x400fc5>, <DisassemblerInsn "mov" for 0x400fc8>, <DisassemblerInsn "xor" for 0x400fcd>, <DisassemblerInsn "cmp" for 0x400fcf>, <DisassemblerInsn "cmovb" for 0x400fd5>, <DisassemblerInsn "mov" for 0x400fd8>, <DisassemblerInsn "and" for 0x400fda>, <DisassemblerInsn "mov" for 0x400fe0>, <DisassemblerInsn "shr" for 0x400fe2>, <DisassemblerInsn "mov" for 0x400fe5>, <DisassemblerInsn "or" for 0x400fe7>, <DisassemblerInsn "cmp" for 0x400fea>, <DisassemblerInsn "cmove" for 0x400fed>, <DisassemblerInsn "cmp" for 0x400ff0>, <DisassemblerInsn "cmove" for 0x400ff3>, <DisassemblerInsn "mov" for 0x400ff6>, <DisassemblerInsn "mov" for 0x400ff8>, <DisassemblerInsn "mov" for 0x400ffa>, <DisassemblerInsn "movzx" for 0x401001>, <DisassemblerInsn "add" for 0x401005>, <DisassemblerInsn "mov" for 0x401007>, <DisassemblerInsn "sub" for 0x40100c>, <DisassemblerInsn "mov" for 0x40100e>, <DisassemblerInsn "cmp" for 0x401015>, <DisassemblerInsn "je" for 0x401018>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ac0>, <DisassemblerInsn "cmp" for 0x400ac7>, <DisassemblerInsn "je" for 0x400aca>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400817>, <DisassemblerInsn "mov" for 0x40081f>, <DisassemblerInsn "mov" for 0x400826>, <DisassemblerInsn "mov" for 0x40082d>, <DisassemblerInsn "mov" for 0x400835>, <DisassemblerInsn "mov" for 0x40083c>, <DisassemblerInsn "mov" for 0x400843>, <DisassemblerInsn "shl" for 0x400845>, <DisassemblerInsn "xor" for 0x400848>, <DisassemblerInsn "cmp" for 0x40084a>, <DisassemblerInsn "cmovl" for 0x40084d>, <DisassemblerInsn "mov" for 0x400851>, <DisassemblerInsn "xor" for 0x400859>, <DisassemblerInsn "cmp" for 0x40085b>, <DisassemblerInsn "cmovl" for 0x40085e>, <DisassemblerInsn "xor" for 0x400861>, <DisassemblerInsn "cmp" for 0x400863>, <DisassemblerInsn "cmovl" for 0x400866>, <DisassemblerInsn "mov" for 0x400869>, <DisassemblerInsn "add" for 0x40086c>, <DisassemblerInsn "mov" for 0x400870>, <DisassemblerInsn "mov" for 0x400878>, <DisassemblerInsn "mov" for 0x40087c>, <DisassemblerInsn "add" for 0x40087f>, <DisassemblerInsn "mov" for 0x400883>, <DisassemblerInsn "mov" for 0x40088b>, <DisassemblerInsn "mov" for 0x40088e>, <DisassemblerInsn "mov" for 0x400890>, <DisassemblerInsn "mov" for 0x400892>, <DisassemblerInsn "add" for 0x400895>, <DisassemblerInsn "mov" for 0x400898>, <DisassemblerInsn "add" for 0x40089b>, <DisassemblerInsn "mov" for 0x40089f>, <DisassemblerInsn "mov" for 0x4008a7>, <DisassemblerInsn "mov" for 0x4008ab>, <DisassemblerInsn "add" for 0x4008ae>, <DisassemblerInsn "mov" for 0x4008b2>, <DisassemblerInsn "mov" for 0x4008ba>, <DisassemblerInsn "mov" for 0x4008c1>, <DisassemblerInsn "ror" for 0x4008c3>, <DisassemblerInsn "ror" for 0x4008c7>, <DisassemblerInsn "ror" for 0x4008ca>, <DisassemblerInsn "shr" for 0x4008ce>, <DisassemblerInsn "mov" for 0x4008d1>, <DisassemblerInsn "shl" for 0x4008d8>, <DisassemblerInsn "mov" for 0x4008db>, <DisassemblerInsn "ror" for 0x4008de>, <DisassemblerInsn "ror" for 0x4008e2>, <DisassemblerInsn "ror" for 0x4008e5>, <DisassemblerInsn "mov" for 0x4008e9>, <DisassemblerInsn "shr" for 0x4008f0>, <DisassemblerInsn "or" for 0x4008f3>, <DisassemblerInsn "cmp" for 0x4008f5>, <DisassemblerInsn "jne" for 0x4008fa>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d91>, <DisassemblerInsn "add" for 0x400d98>, <DisassemblerInsn "mov" for 0x400d9b>, <DisassemblerInsn "mov" for 0x400da0>, <DisassemblerInsn "mov" for 0x400da7>, <DisassemblerInsn "jmp" for 0x400dae>]'}, {'block_Idx': 98, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013f1>, <DisassemblerInsn "mov" for 0x4013f8>, <DisassemblerInsn "mov" for 0x401400>, <DisassemblerInsn "sar" for 0x401402>, <DisassemblerInsn "movsxd" for 0x401405>, <DisassemblerInsn "mov" for 0x401408>, <DisassemblerInsn "ror" for 0x40140b>, <DisassemblerInsn "ror" for 0x40140f>, <DisassemblerInsn "ror" for 0x401412>, <DisassemblerInsn "and" for 0x401416>, <DisassemblerInsn "shl" for 0x401419>, <DisassemblerInsn "mov" for 0x40141b>, <DisassemblerInsn "shr" for 0x401422>, <DisassemblerInsn "add" for 0x401425>, <DisassemblerInsn "mov" for 0x401428>, <DisassemblerInsn "mov" for 0x40142f>, <DisassemblerInsn "jmp" for 0x401436>]'}, {'block_Idx': 135, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401898>, <DisassemblerInsn "mov" for 0x40189f>, <DisassemblerInsn "mov" for 0x4018a6>, <DisassemblerInsn "mov" for 0x4018ad>, <DisassemblerInsn "mov" for 0x4018b4>, <DisassemblerInsn "mov" for 0x4018bb>, <DisassemblerInsn "cmp" for 0x4018c2>, <DisassemblerInsn "jle" for 0x4018c5>]'}, {'block_Idx': 61, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401123>, <DisassemblerInsn "xor" for 0x40112b>, <DisassemblerInsn "lea" for 0x40112d>, <DisassemblerInsn "mov" for 0x401134>, <DisassemblerInsn "call" for 0x401136>]'}, {'block_Idx': 38, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007a5>, <DisassemblerInsn "mov" for 0x4007ad>, <DisassemblerInsn "mov" for 0x4007b5>, <DisassemblerInsn "mov" for 0x4007bd>, <DisassemblerInsn "mov" for 0x4007c5>, <DisassemblerInsn "mov" for 0x4007cc>, <DisassemblerInsn "mov" for 0x4007d3>, <DisassemblerInsn "add" for 0x4007d5>, <DisassemblerInsn "mov" for 0x4007d8>, <DisassemblerInsn "add" for 0x4007da>, <DisassemblerInsn "mov" for 0x4007dc>, <DisassemblerInsn "cmp" for 0x4007de>, <DisassemblerInsn "setl" for 0x4007e0>, <DisassemblerInsn "cmp" for 0x4007e4>, <DisassemblerInsn "setne" for 0x4007e7>, <DisassemblerInsn "and" for 0x4007eb>, <DisassemblerInsn "test" for 0x4007ee>, <DisassemblerInsn "mov" for 0x4007f2>, <DisassemblerInsn "mov" for 0x4007f4>, <DisassemblerInsn "mov" for 0x4007fb>, <DisassemblerInsn "mov" for 0x400802>, <DisassemblerInsn "mov" for 0x40080a>, <DisassemblerInsn "jne" for 0x400811>]'}, {'block_Idx': 191, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401df7>, <DisassemblerInsn "mov" for 0x401dff>, <DisassemblerInsn "mov" for 0x401e06>, <DisassemblerInsn "mov" for 0x401e0d>, <DisassemblerInsn "mov" for 0x401e15>, <DisassemblerInsn "shr" for 0x401e1d>, <DisassemblerInsn "mov" for 0x401e21>, <DisassemblerInsn "add" for 0x401e24>, <DisassemblerInsn "mov" for 0x401e28>, <DisassemblerInsn "add" for 0x401e2a>, <DisassemblerInsn "mov" for 0x401e2d>, <DisassemblerInsn "shl" for 0x401e34>, <DisassemblerInsn "mov" for 0x401e37>, <DisassemblerInsn "mov" for 0x401e3e>, <DisassemblerInsn "sar" for 0x401e46>, <DisassemblerInsn "movsxd" for 0x401e4a>, <DisassemblerInsn "mov" for 0x401e4d>, <DisassemblerInsn "ror" for 0x401e51>, <DisassemblerInsn "ror" for 0x401e55>, <DisassemblerInsn "ror" for 0x401e58>, <DisassemblerInsn "shl" for 0x401e5c>, <DisassemblerInsn "mov" for 0x401e5e>, <DisassemblerInsn "mov" for 0x401e65>, <DisassemblerInsn "xor" for 0x401e68>, <DisassemblerInsn "sub" for 0x401e6a>, <DisassemblerInsn "shr" for 0x401e6d>, <DisassemblerInsn "mov" for 0x401e6f>, <DisassemblerInsn "add" for 0x401e76>, <DisassemblerInsn "mov" for 0x401e78>, <DisassemblerInsn "or" for 0x401e7a>, <DisassemblerInsn "mov" for 0x401e7c>, <DisassemblerInsn "mov" for 0x401e83>, <DisassemblerInsn "mov" for 0x401e8b>, <DisassemblerInsn "mov" for 0x401e93>, <DisassemblerInsn "mov" for 0x401e9a>, <DisassemblerInsn "mov" for 0x401ea1>, <DisassemblerInsn "sub" for 0x401ea6>, <DisassemblerInsn "mov" for 0x401ea8>, <DisassemblerInsn "shl" for 0x401eaf>, <DisassemblerInsn "mov" for 0x401eb1>, <DisassemblerInsn "sar" for 0x401eb8>, <DisassemblerInsn "mov" for 0x401eba>, <DisassemblerInsn "mov" for 0x401ec2>, <DisassemblerInsn "add" for 0x401ec5>, <DisassemblerInsn "mov" for 0x401ec9>, <DisassemblerInsn "cmp" for 0x401ed1>, <DisassemblerInsn "je" for 0x401ed4>]'}, {'block_Idx': 40, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400958>, <DisassemblerInsn "mov" for 0x400960>, <DisassemblerInsn "mov" for 0x400968>, <DisassemblerInsn "mov" for 0x40096f>, <DisassemblerInsn "mov" for 0x400977>, <DisassemblerInsn "sar" for 0x400979>, <DisassemblerInsn "movsxd" for 0x40097c>, <DisassemblerInsn "mov" for 0x40097f>, <DisassemblerInsn "mov" for 0x400982>, <DisassemblerInsn "and" for 0x400984>, <DisassemblerInsn "mov" for 0x400987>, <DisassemblerInsn "movzx" for 0x40098e>, <DisassemblerInsn "mov" for 0x400991>, <DisassemblerInsn "mov" for 0x400998>, <DisassemblerInsn "add" for 0x40099a>, <DisassemblerInsn "mov" for 0x40099d>, <DisassemblerInsn "sar" for 0x40099f>, <DisassemblerInsn "movsxd" for 0x4009a2>, <DisassemblerInsn "mov" for 0x4009a5>, <DisassemblerInsn "ror" for 0x4009a8>, <DisassemblerInsn "ror" for 0x4009ac>, <DisassemblerInsn "ror" for 0x4009af>, <DisassemblerInsn "and" for 0x4009b3>, <DisassemblerInsn "shl" for 0x4009b6>, <DisassemblerInsn "mov" for 0x4009b8>, <DisassemblerInsn "shr" for 0x4009bf>, <DisassemblerInsn "mov" for 0x4009c2>, <DisassemblerInsn "mov" for 0x4009c9>, <DisassemblerInsn "add" for 0x4009cb>, <DisassemblerInsn "sar" for 0x4009ce>, <DisassemblerInsn "movsxd" for 0x4009d1>, <DisassemblerInsn "mov" for 0x4009d4>, <DisassemblerInsn "ror" for 0x4009d7>, <DisassemblerInsn "ror" for 0x4009db>, <DisassemblerInsn "ror" for 0x4009de>, <DisassemblerInsn "shl" for 0x4009e2>, <DisassemblerInsn "mov" for 0x4009e4>, <DisassemblerInsn "shr" for 0x4009eb>, <DisassemblerInsn "mov" for 0x4009ee>, <DisassemblerInsn "add" for 0x4009f1>, <DisassemblerInsn "shl" for 0x4009f5>, <DisassemblerInsn "sar" for 0x4009f8>, <DisassemblerInsn "movsxd" for 0x4009fc>, <DisassemblerInsn "mov" for 0x4009ff>, <DisassemblerInsn "ror" for 0x400a03>, <DisassemblerInsn "ror" for 0x400a07>, <DisassemblerInsn "ror" for 0x400a0a>, <DisassemblerInsn "shl" for 0x400a0e>, <DisassemblerInsn "mov" for 0x400a10>, <DisassemblerInsn "shr" for 0x400a18>, <DisassemblerInsn "add" for 0x400a1b>, <DisassemblerInsn "mov" for 0x400a1e>, <DisassemblerInsn "mov" for 0x400a25>, <DisassemblerInsn "or" for 0x400a27>, <DisassemblerInsn "mov" for 0x400a29>, <DisassemblerInsn "shl" for 0x400a30>, <DisassemblerInsn "mov" for 0x400a33>, <DisassemblerInsn "add" for 0x400a3a>, <DisassemblerInsn "mov" for 0x400a3c>, <DisassemblerInsn "mov" for 0x400a3e>, <DisassemblerInsn "cmp" for 0x400a45>, <DisassemblerInsn "jle" for 0x400a47>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a49>, <DisassemblerInsn "mov" for 0x400a51>, <DisassemblerInsn "mov" for 0x400a59>, <DisassemblerInsn "mov" for 0x400a61>, <DisassemblerInsn "mov" for 0x400a69>, <DisassemblerInsn "mov" for 0x400a71>, <DisassemblerInsn "mov" for 0x400a79>, <DisassemblerInsn "add" for 0x400a7c>, <DisassemblerInsn "sar" for 0x400a7f>, <DisassemblerInsn "xor" for 0x400a82>, <DisassemblerInsn "cmp" for 0x400a85>, <DisassemblerInsn "cmovl" for 0x400a89>, <DisassemblerInsn "xor" for 0x400a8d>, <DisassemblerInsn "cmp" for 0x400a90>, <DisassemblerInsn "mov" for 0x400a94>, <DisassemblerInsn "cmovl" for 0x400a97>, <DisassemblerInsn "xor" for 0x400a9b>, <DisassemblerInsn "cmp" for 0x400a9e>, <DisassemblerInsn "cmovl" for 0x400aa2>, <DisassemblerInsn "mov" for 0x400aa6>, <DisassemblerInsn "mov" for 0x400aa9>, <DisassemblerInsn "movsxd" for 0x400aac>, <DisassemblerInsn "add" for 0x400aaf>, <DisassemblerInsn "mov" for 0x400ab2>, <DisassemblerInsn "mov" for 0x400ab5>, <DisassemblerInsn "jmp" for 0x400abb>]'}], 'cfg_block_detailed_info': [{'block_Idx': 15, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x648]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~edx, dword ptr [rsp + 0x654]>', '<mov~~esi, edx>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x598], esi>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x59c], edx>', '<mov~~rdx, rax>', '<add~~rdx, 3>', '<mov~~qword ptr [rsp + 0x5a0], rdx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x5a8], eax>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x5ac], eax>', '<mov~~dword ptr [rcx], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x400d5e>']}, {'block_Idx': 155, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x42c]>', '<mov~~ecx, dword ptr [rsp + 0x430]>', '<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x408], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x40c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x4019de>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x348]>', '<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x380], edx>', '<mov~~dword ptr [rsp + 0x384], ecx>', '<mov~~qword ptr [rsp + 0x388], rax>', '<jmp~~0x401d5e>']}, {'block_Idx': 46, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x588]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x400e6a>']}, {'block_Idx': 33, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x648]>', '<mov~~eax, dword ptr [rsp + 0x5a8]>', '<mov~~edx, dword ptr [rsp + 0x590]>', '<mov~~esi, dword ptr [rsp + 0x594]>', '<mov~~dword ptr [rsp + 0x580], esi>', '<mov~~dword ptr [rsp + 0x584], edx>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x588], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x400e39>']}, {'block_Idx': 163, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x430]>', '<mov~~edx, dword ptr [rsp + 0x42c]>', '<mov~~eax, dword ptr [rsp + 0x40c]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x648]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x404], eax>', '<jmp~~0x401a6a>']}, {'block_Idx': 183, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x42c]>', '<mov~~edx, dword ptr [rsp + 0x430]>', '<mov~~eax, dword ptr [rsp + 0x390]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x378], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x380], edx>', '<mov~~dword ptr [rsp + 0x384], ecx>', '<mov~~qword ptr [rsp + 0x388], rax>', '<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x380]>', '<mov~~eax, dword ptr [rsp + 0x384]>', '<mov~~rsi, qword ptr [rsp + 0x388]>', '<mov~~qword ptr [rsp + 0x360], rsi>', '<mov~~dword ptr [rsp + 0x368], eax>', '<mov~~dword ptr [rsp + 0x36c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x370], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x374], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401df7>']}, {'block_Idx': 77, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~edx, dword ptr [rsp + 0x508]>', '<mov~~eax, dword ptr [rsp + 0x50c]>', '<mov~~dword ptr [rsp + 0x4fc], eax>', '<mov~~dword ptr [rsp + 0x500], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x504], ecx>', '<cmp~~eax, ecx>', '<jle~~0x4012b5>']}, {'block_Idx': 166, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~esi, dword ptr [rsp + 0x42c]>', '<mov~~edx, dword ptr [rsp + 0x404]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3f4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3f4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3f8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x40240e>']}, {'block_Idx': 28, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~eax, dword ptr [rax]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x610], rcx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<jmp~~0x400958>']}, {'block_Idx': 78, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x598]>', '<sub~~eax, 7>', '<je~~0x4011dc>']}, {'block_Idx': 190, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x36c]>', '<mov~~edx, dword ptr [rsp + 0x368]>', '<mov~~eax, dword ptr [rsp + 0x374]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x648]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x35c], eax>', '<jmp~~0x401e83>']}, {'block_Idx': 204, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x380]>', '<mov~~eax, dword ptr [rsp + 0x384]>', '<mov~~rsi, qword ptr [rsp + 0x388]>', '<mov~~qword ptr [rsp + 0x360], rsi>', '<mov~~dword ptr [rsp + 0x368], eax>', '<mov~~dword ptr [rsp + 0x36c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x370], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x374], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401df7>']}, {'block_Idx': 67, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x518]>', '<mov~~rdi, qword ptr [rsp + 0x648]>', '<mov~~rdx, qword ptr [rsp + 0x520]>', '<mov~~rsi, qword ptr [rsp + 0x628]>', '<mov~~eax, dword ptr [rsp + 0x514]>', '<add~~eax, -1>', '<mov~~r8, rdx>', '<shr~~r8, 3>', '<mov~~esi, dword ptr [rsi + r8]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xf8>', '<add~~rdx, 8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rdi], r8d>', '<add~~esi, -0x80>', '<shl~~rcx, 6>', '<movsxd~~rdi, esi>', '<add~~rcx, rdi>', '<cmp~~esi, 0x40>', '<mov~~qword ptr [rsp + 0x528], rdx>', '<mov~~qword ptr [rsp + 0x530], rcx>', '<mov~~dword ptr [rsp + 0x53c], eax>', '<jb~~0x401057>']}, {'block_Idx': 115, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~eax, dword ptr [rsp + 0x490]>', '<add~~eax, 1>', '<mov~~dword ptr [rcx], eax>', '<mov~~dword ptr [rsp + 0x484], eax>', '<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~edx, dword ptr [rsp + 0x484]>', '<mov~~dword ptr [rsp + 0x468], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x46c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x470], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x480], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x47c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x480]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401728>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x5ac]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~edx, ecx>', '<mov~~dword ptr [rsp + 0x58c], edx>', '<mov~~dword ptr [rsp + 0x590], ecx>', '<mov~~dword ptr [rsp + 0x594], eax>', '<je~~0x400de0>']}, {'block_Idx': 45, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x578], rax>', '<jmp~~0x400e92>']}, {'block_Idx': 75, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~ecx, dword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~rsi, qword ptr [rsp + 0x520]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x508], ecx>', '<mov~~dword ptr [rsp + 0x50c], eax>', '<jmp~~0x401258>']}, {'block_Idx': 188, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x418]>', '<mov~~eax, dword ptr [rsp + 0x41c]>', '<mov~~rsi, qword ptr [rsp + 0x420]>', '<mov~~qword ptr [rsp + 0x3c0], rsi>', '<mov~~dword ptr [rsp + 0x3c8], eax>', '<mov~~dword ptr [rsp + 0x3cc], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x3d0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x3d4], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401bac>']}, {'block_Idx': 88, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~ecx, dword ptr [rsp + 0x4e8]>', '<mov~~edx, dword ptr [rsp + 0x4ec]>', '<mov~~dword ptr [rsp + 0x4d0], edx>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500038>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~edi, dword ptr [rsp + 0x430]>', '<mov~~esi, dword ptr [rsp + 0x42c]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~r9d, dword ptr [rsp + 0x40c]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x3fc], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x408]>', '<mov~~dword ptr [rsp + 0x400], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3fc]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x400]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x404], eax>', '<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~esi, dword ptr [rsp + 0x42c]>', '<mov~~edx, dword ptr [rsp + 0x404]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3f4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3f4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3f8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x40240e>']}, {'block_Idx': 103, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<sub~~eax, 0xe>', '<je~~0x401438>']}, {'block_Idx': 195, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~edi, dword ptr [rsp + 0x3cc]>', '<mov~~esi, dword ptr [rsp + 0x3c8]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~r9d, dword ptr [rsp + 0x3d4]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x3b4], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x3d0]>', '<mov~~dword ptr [rsp + 0x3b8], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3b4]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3b8]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x3bc], eax>', '<mov~~rax, qword ptr [rsp + 0x3c0]>', '<mov~~rdx, qword ptr [rsp + 0x410]>', '<mov~~edi, dword ptr [rsp + 0x3c8]>', '<mov~~esi, dword ptr [rsp + 0x3bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x3a4], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x3a4]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3a8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x40240e>']}, {'block_Idx': 50, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x648]>', '<mov~~rax, qword ptr [rsp + 0x5a0]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rsi, qword ptr [rsp + 0x578]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x548], esi>', '<cmp~~esi, 0x10>', '<setg~~r8b>', '<mov~~byte ptr [rsp + 0x54f], r8b>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x550], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r9d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r9d>', '<mov~~r9d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r9d, r11d>', '<and~~r8b, 1>', '<movzx~~r8d, r8b>', '<mov~~dword ptr [rdi + 0x58], r10d>', '<sub~~r9d, esi>', '<mov~~r10, rdi>', '<mov~~qword ptr [rsp + 0x558], r10>', '<mov~~r10, rdx>', '<add~~r10, 0x48>', '<mov~~qword ptr [rsp + 0x560], r10>', '<mov~~dword ptr [rdx + 0x48], r9d>', '<mov~~r9, rdx>', '<add~~r9, 0x4c>', '<mov~~qword ptr [rsp + 0x568], r9>', '<mov~~dword ptr [rdx + 0x4c], r8d>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x570], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x400f86>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x628]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~dword ptr [rdx], 0x20>', '<mov~~rdx, rax>', '<add~~rdx, 0x54>', '<mov~~qword ptr [rsp + 0x5f8], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x20>', '<mov~~qword ptr [rsp + 0x600], rdx>', '<mov~~qword ptr [rsp + 0x608], rax>', '<mov~~eax, 0x20>', '<mov~~qword ptr [rsp + 0x610], rcx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<mov~~rdi, qword ptr [rsp + 0x648]>', '<mov~~rax, qword ptr [rsp + 0x610]>', '<mov~~edx, dword ptr [rsp + 0x61c]>', '<mov~~qword ptr [rsp + 0x5d0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x5e4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x5dc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x5e0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x5e8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x5ec], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x5f4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400ac0>']}, {'block_Idx': 3, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, qword ptr [rsp + 0x6f8]>', '<mov~~ecx, dword ptr [rsp + 0x6d4]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x6c8]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~esi, dword ptr [rdx]>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x704], esi>', '<mov~~dword ptr [rsp + 0x6b0], edx>', '<mov~~dword ptr [rsp + 0x6b4], ecx>', '<mov~~qword ptr [rsp + 0x6b8], rax>', '<je~~0x400817>']}, {'block_Idx': 136, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x458]>', '<mov~~edi, dword ptr [rsp + 0x454]>', '<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~dword ptr [rsp + 0x434], eax>', '<mov~~esi, edi>', '<sar~~esi, 3>', '<mov~~dword ptr [rsp + 0x438], esi>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x43c], ecx>', '<movzx~~esi, sil>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x440], edi>', '<mov~~dword ptr [rdx], edi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x440]>', '<mov~~dword ptr [rsp + 0x444], edx>', '<and~~edx, esi>', '<mov~~dword ptr [rsp + 0x448], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x44c], eax>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x454], ecx>', '<mov~~dword ptr [rsp + 0x458], eax>', '<je~~0x4017cf>']}, {'block_Idx': 108, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x500]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014a6>']}, {'block_Idx': 168, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rcx, qword ptr [rsp + 0x488]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x3e0], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x3e8], rax>', '<mov~~rax, qword ptr [rsp + 0x3e8]>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~rdx, qword ptr [rsp + 0x3e0]>', '<mov~~esi, dword ptr [rsp + 0x3f8]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3d8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3e8], rax>', '<jl~~0x401ad0>']}, {'block_Idx': 201, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3c0]>', '<mov~~rdx, qword ptr [rsp + 0x410]>', '<mov~~edi, dword ptr [rsp + 0x3c8]>', '<mov~~esi, dword ptr [rsp + 0x3bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x3a4], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x3a4]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3a8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x40240e>']}, {'block_Idx': 92, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x500]>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014a6>']}, {'block_Idx': 74, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x598]>', '<sub~~eax, 6>', '<je~~0x401189>']}, {'block_Idx': 81, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~ecx, dword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~rsi, qword ptr [rsp + 0x520]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x508], ecx>', '<mov~~dword ptr [rsp + 0x50c], eax>', '<jmp~~0x401258>']}, {'block_Idx': 167, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x428]>', '<cmp~~eax, 0>', '<je~~0x402498>']}, {'block_Idx': 194, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x3cc]>', '<mov~~edx, dword ptr [rsp + 0x3c8]>', '<mov~~eax, dword ptr [rsp + 0x3d4]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x648]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x3bc], eax>', '<jmp~~0x401c38>']}, {'block_Idx': 70, 'blockInsts': ['<jmp~~0x401123>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x390]>', '<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<mov~~rax, qword ptr [rsp + 0x488]>', '<mov~~esi, eax>', '<call~~0x4039df>']}, {'block_Idx': 202, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3a8]>', '<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x418], edx>', '<mov~~dword ptr [rsp + 0x41c], ecx>', '<mov~~qword ptr [rsp + 0x420], rax>', '<jmp~~0x401b13>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x650]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400cbd>']}, {'block_Idx': 62, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x544]>', '<mov~~edx, dword ptr [rsp + 0x540]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~edx, 0x28>', '<mov~~qword ptr [rsp + 0x528], rdx>', '<mov~~qword ptr [rsp + 0x530], rcx>', '<mov~~dword ptr [rsp + 0x53c], eax>', '<mov~~rcx, qword ptr [rsp + 0x528]>', '<mov~~rdx, qword ptr [rsp + 0x530]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~dword ptr [rsp + 0x514], eax>', '<mov~~qword ptr [rsp + 0x518], rdx>', '<mov~~qword ptr [rsp + 0x520], rcx>', '<cmp~~eax, 1>', '<jle~~0x401106>']}, {'block_Idx': 126, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x648]>', '<mov~~edx, dword ptr [rsp + 0x46c]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x47c]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x450], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 7>', '<mov~~dword ptr [rsi], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~edx, 8>', '<mov~~dword ptr [rsi], edx>', '<mov~~edi, 0x80>', '<shr~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x468]>', '<and~~edi, eax>', '<xor~~eax, eax>', '<mov~~esi, 1>', '<cmp~~edi, 0>', '<mov~~edi, edx>', '<mov~~dword ptr [rsp + 0x454], edi>', '<mov~~dword ptr [rsp + 0x458], esi>', '<mov~~dword ptr [rsp + 0x45c], edx>', '<mov~~dword ptr [rsp + 0x460], ecx>', '<mov~~dword ptr [rsp + 0x464], eax>', '<je~~0x401898>']}, {'block_Idx': 90, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<sub~~eax, 0xc>', '<je~~0x4013a1>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~ecx, dword ptr [rsp + 0x5ac]>', '<add~~ecx, -8>', '<sub~~ecx, 3>', '<setb~~cl>', '<mov~~eax, dword ptr [rax + 0xc]>', '<mov~~edx, eax>', '<sub~~edx, 2>', '<sete~~dl>', '<and~~cl, dl>', '<test~~cl, 1>', '<mov~~dword ptr [rsp + 0x58c], eax>', '<jne~~0x400d91>']}, {'block_Idx': 69, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x528]>', '<mov~~rdx, qword ptr [rsp + 0x530]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~dword ptr [rsp + 0x514], eax>', '<mov~~qword ptr [rsp + 0x518], rdx>', '<mov~~qword ptr [rsp + 0x520], rcx>', '<cmp~~eax, 1>', '<jle~~0x401106>']}, {'block_Idx': 197, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x360]>', '<mov~~rdx, qword ptr [rsp + 0x398]>', '<mov~~edi, dword ptr [rsp + 0x368]>', '<mov~~esi, dword ptr [rsp + 0x35c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x344], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x344]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x378]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x348], rax>', '<cmp~~rax, rcx>', '<je~~0x401f0d>']}, {'block_Idx': 128, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~edx, dword ptr [rsp + 0x484]>', '<mov~~dword ptr [rsp + 0x468], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x46c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x470], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x480], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x47c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x480]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401728>']}, {'block_Idx': 95, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<sub~~eax, 0xd>', '<je~~0x4013f1>']}, {'block_Idx': 57, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rsp + 0x628]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x540], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~ecx, edi>', '<shr~~ecx, 8>', '<mov~~eax, edx>', '<or~~eax, 8>', '<cmp~~esi, 0>', '<cmove~~ecx, edi>', '<cmp~~esi, 0>', '<cmove~~eax, edx>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, qword ptr [rip + 0xff02f]>', '<movzx~~ecx, byte ptr [rcx + rdx]>', '<add~~eax, ecx>', '<mov~~ecx, 7>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsp + 0x544], ecx>', '<cmp~~eax, 6>', '<je~~0x401123>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5ec]>', '<cmp~~eax, 0>', '<je~~0x400b59>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~esi, dword ptr [rsp + 0x6b0]>', '<mov~~edx, dword ptr [rsp + 0x6b4]>', '<mov~~rax, qword ptr [rsp + 0x6b8]>', '<mov~~dword ptr [rsp + 0x620], edx>', '<mov~~dword ptr [rsp + 0x624], esi>', '<mov~~esi, edx>', '<shl~~esi, 3>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~rax, rdi>', '<mov~~qword ptr [rsp + 0x628], rax>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~esi, edi>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~edx, edi>', '<mov~~rdi, rcx>', '<add~~rdi, 0x28>', '<mov~~qword ptr [rsp + 0x630], rdi>', '<mov~~qword ptr [rcx + 0x28], rax>', '<mov~~rdi, rcx>', '<add~~rdi, 0x3c>', '<mov~~qword ptr [rsp + 0x638], rdi>', '<mov~~dword ptr [rcx + 0x3c], esi>', '<mov~~edx, edx>', '<mov~~esi, edx>', '<mov~~rdx, rax>', '<add~~rdx, rsi>', '<mov~~rsi, rcx>', '<add~~rsi, 0x30>', '<mov~~qword ptr [rsp + 0x640], rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x648], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x650], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x654], eax>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x400ba2>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5ac]>', '<add~~eax, -7>', '<mov~~ecx, 2>', '<mov~~dword ptr [rsp + 0x590], ecx>', '<mov~~dword ptr [rsp + 0x594], eax>', '<jmp~~0x400de0>']}, {'block_Idx': 98, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x500]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014a6>']}, {'block_Idx': 135, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x45c]>', '<mov~~eax, dword ptr [rsp + 0x460]>', '<mov~~edx, dword ptr [rsp + 0x464]>', '<mov~~dword ptr [rsp + 0x428], edx>', '<mov~~dword ptr [rsp + 0x42c], eax>', '<mov~~dword ptr [rsp + 0x430], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x4018e5>']}, {'block_Idx': 61, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x558]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3575]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 38, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, qword ptr [rsp + 0x680]>', '<mov~~rdi, qword ptr [rsp + 0x6a0]>', '<mov~~rsi, qword ptr [rsp + 0x6f8]>', '<mov~~eax, dword ptr [rsp + 0x68c]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x6b0], esi>', '<mov~~dword ptr [rsp + 0x6b4], edx>', '<mov~~qword ptr [rsp + 0x6b8], rcx>', '<mov~~dword ptr [rsp + 0x694], eax>', '<jne~~0x40307a>']}, {'block_Idx': 191, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~edi, dword ptr [rsp + 0x36c]>', '<mov~~esi, dword ptr [rsp + 0x368]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~r9d, dword ptr [rsp + 0x374]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x354], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x370]>', '<mov~~dword ptr [rsp + 0x358], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x354]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x358]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x35c], eax>', '<mov~~rax, qword ptr [rsp + 0x360]>', '<mov~~rdx, qword ptr [rsp + 0x398]>', '<mov~~edi, dword ptr [rsp + 0x368]>', '<mov~~esi, dword ptr [rsp + 0x35c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x344], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x344]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x378]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x348], rax>', '<cmp~~rax, rcx>', '<je~~0x401f0d>']}, {'block_Idx': 40, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x648]>', '<mov~~rax, qword ptr [rsp + 0x610]>', '<mov~~edx, dword ptr [rsp + 0x61c]>', '<mov~~qword ptr [rsp + 0x5d0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x5e4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x5dc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x5e0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x5e8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x5ec], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x5f4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400ac0>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rdi, qword ptr [rsp + 0x638]>', '<mov~~r9, qword ptr [rsp + 0x630]>', '<mov~~r11d, dword ptr [rsp + 0x5f4]>', '<mov~~rdx, qword ptr [rsp + 0x5d0]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x402f9a>']}], 'cfg_edge_info': [(40, 14), (183, 191), (33, 45), (164, 168), (191, 198), (126, 135), (92, 88), (128, 126), (98, 88), (115, 126), (6, 11), (40, 13), (183, 190), (15, 23), (67, 70), (195, 167), (50, 57), (163, 166), (164, 167), (3, 6), (69, 67), (188, 195), (95, 98), (103, 108), (204, 191), (75, 77), (74, 75), (57, 62), (10, 14), (36, 33), (155, 164), (38, 6), (81, 77), (62, 67), (6, 10), (15, 22), (90, 92), (108, 88), (67, 69), (194, 201), (33, 46), (188, 194), (190, 197), (78, 81), (204, 190), (126, 136), (191, 199), (22, 33), (10, 13), (57, 61), (11, 15), (195, 202), (155, 163), (28, 40)]}]}
{'flac_decode_frame': [4196375, 4196608, 4196696, 4197565, 4197856, 4198278, 4198538, 4198793, 4198876, 4199329, 4199409, 4199480, 4200232, 4200871, 4200926, 4201333, 4201388, 4201920, 4201975]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5ef4fa87b319ea33dc87c459cbd714f355824218/clang_before/Os/flacdec.o---before
The extraction of function: flac_decode_frame
[4196375, 4196608, 4196696, 4197565, 4197856, 4198278, 4198538, 4198793, 4198876, 4199329, 4199409, 4199480, 4200232, 4200871, 4200926, 4201333, 4201388, 4201920, 4201975]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 451 nodes and 713 edges in CFGEmulated.
It has 451 nodes and 759 edges in CDG.
It has 17592 nodes and 45562 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4196375, 4196608, 4196696, 4197565, 4197856, 4198278, 4198538, 4198793, 4198876, 4199329, 4199409, 4199480, 4200232, 4200871, 4200926, 4201333, 4201388, 4201920, 4201975]
{4197376, 4202497, 4205574, 4199943, 4203529, 4203534, 4206609, 4196375, 4203546, 4195868, 4198430, 4195360, 4197923, 4203559, 4197421, 4198959, 4206132, 4199480, 4197945, 4201528, 4205115, 4206658, 4200003, 4204612, 4197960, 4196937, 4202571, 4203598, 4204113, 4198487, 4199000, 4202587, 4200029, 4203101, 4200031, 4200546, 4197994, 4201066, 4195946, 4197491, 4206714, 4200060, 4200062, 4199554, 4202115, 4199049, 4198538, 4198029, 4195981, 4205710, 4198034, 4195474, 4201621, 4200600, 4200089, 4203672, 4206238, 4205215, 4199585, 4199590, 4201129, 4199088, 4199093, 4202678, 4197565, 4197056, 4203717, 4202694, 4200647, 4195529, 4201676, 4199631, 4197072, 4201168, 4202198, 4197084, 4201695, 4200672, 4204256, 4206306, 4200677, 4205799, 4203240, 4197097, 4200688, 4200690, 4203772, 4196608, 4198660, 4200708, 4198662, 4199173, 4200200, 4204808, 4205316, 4202253, 4201230, 4199696, 4199185, 4201235, 4196116, 4200725, 4204820, 4202771, 4195612, 4199708, 4206369, 4198691, 4200227, 4202787, 4197670, 4201767, 4200232, 4197162, 4202283, 4203822, 4202292, 4204853, 4199222, 4202294, 4197176, 4198715, 4199742, 4198720, 4205889, 4199234, 4199747, 4197188, 4196162, 4203850, 4198731, 4198733, 4202319, 4195670, 4196696, 4197209, 4198745, 4198747, 4197724, 4202328, 4197726, 4201822, 4205408, 4202333, 4204378, 4200803, 4206435, 4202850, 4198759, 4198249, 4198764, 4205420, 4199280, 4202866, 4201333, 4203895, 4197241, 4195707, 4199292, 4199294, 4198273, 4198788, 4198278, 4202374, 4198793, 4199306, 4199308, 4203404, 4205453, 4197775, 4197777, 4206490, 4199324, 4205981, 4202910, 4204445, 4199329, 4197282, 4195747, 4196261, 4200871, 4205993, 4201388, 4203438, 4204974, 4197808, 4203443, 4197305, 4203963, 4206526, 4203455, 4201920, 4202431, 4206026, 4199885, 4200399, 4203987, 4197333, 4195799, 4197851, 4198876, 4200926, 4204511, 4197856, 4203491, 4206567, 4204009, 4203500, 4203502, 4202992, 4199409, 4201975}
[168, 74, 166, 43, 231, 242, 326, 222, 67, 124, 241, 25, 37, 145, 104, 115, 228, 236, 380, 369, 244, 399, 340, 281, 179, 224, 138, 327, 56, 312, 226, 102, 99, 38, 119, 163, 379, 159, 213, 51, 368, 260, 227, 175, 123, 261, 0, 210, 169, 205, 247, 153, 225, 114, 254, 390, 144, 204, 81, 26, 202, 208, 112, 36, 156, 58, 193, 129, 157, 172, 55, 75, 46, 11, 14, 111, 66, 192, 167, 47, 185, 101, 128, 40, 249, 290, 95, 63, 221, 214, 54, 162, 118, 235, 150, 392, 42, 1, 34, 87, 97, 134, 183, 256, 232, 32, 174, 158, 347, 255, 89, 178, 240, 341, 177, 251, 27, 266, 12, 219, 354, 391, 184, 60, 233, 147, 44, 367, 98, 139, 171, 203, 164, 371, 370, 339, 209, 207, 18, 86, 92, 189, 117, 357, 206, 200, 64, 355, 243, 194, 197, 22, 33, 246, 24, 302, 107, 199, 105, 237, 217, 230, 215, 71, 49, 216, 444, 181, 15, 146, 381, 7, 151, 229, 10, 16, 426, 21, 317, 72, 190, 170, 45, 19, 180, 195, 141, 109, 91, 4, 211, 173, 165, 155, 57, 9, 88, 196, 424, 257, 80, 29, 133, 136, 234, 17, 106, 198, 187, 143, 35, 220, 2, 41, 113, 85, 79, 52, 5, 13, 239, 356, 50, 218, 8, 310, 423, 176, 223, 23, 201, 68, 250, 39, 238, 6]
The execution time of patched slicing information extraction via angr: 0:02:33.131175
{'flac_decode_frame': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 168, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40167e>, <DisassemblerInsn "mov" for 0x401686>, <DisassemblerInsn "add" for 0x40168d>, <DisassemblerInsn "mov" for 0x401690>, <DisassemblerInsn "mov" for 0x401692>, <DisassemblerInsn "mov" for 0x401699>, <DisassemblerInsn "mov" for 0x4016a1>, <DisassemblerInsn "mov" for 0x4016a9>, <DisassemblerInsn "mov" for 0x4016b0>, <DisassemblerInsn "mov" for 0x4016b7>, <DisassemblerInsn "mov" for 0x4016b9>, <DisassemblerInsn "mov" for 0x4016c0>, <DisassemblerInsn "mov" for 0x4016c3>, <DisassemblerInsn "mov" for 0x4016cb>, <DisassemblerInsn "sar" for 0x4016cd>, <DisassemblerInsn "movsxd" for 0x4016d0>, <DisassemblerInsn "mov" for 0x4016d3>, <DisassemblerInsn "mov" for 0x4016d7>, <DisassemblerInsn "and" for 0x4016d9>, <DisassemblerInsn "movzx" for 0x4016dc>, <DisassemblerInsn "mov" for 0x4016e0>, <DisassemblerInsn "add" for 0x4016e7>, <DisassemblerInsn "mov" for 0x4016ea>, <DisassemblerInsn "mov" for 0x4016f1>, <DisassemblerInsn "mov" for 0x4016f3>, <DisassemblerInsn "shr" for 0x4016f8>, <DisassemblerInsn "mov" for 0x4016fa>, <DisassemblerInsn "and" for 0x401701>, <DisassemblerInsn "cmp" for 0x401703>, <DisassemblerInsn "je" for 0x401706>]'}, {'block_Idx': 74, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400e8d>]'}, {'block_Idx': 166, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f63>, <DisassemblerInsn "mov" for 0x402f6b>, <DisassemblerInsn "mov" for 0x402f73>, <DisassemblerInsn "mov" for 0x402f7b>, <DisassemblerInsn "imul" for 0x402f82>, <DisassemblerInsn "mov" for 0x402f85>, <DisassemblerInsn "mov" for 0x402f8a>, <DisassemblerInsn "cmp" for 0x402f8f>, <DisassemblerInsn "cmove" for 0x402f92>, <DisassemblerInsn "imul" for 0x402f95>, <DisassemblerInsn "mov" for 0x402f98>, <DisassemblerInsn "mov" for 0x402f9a>, <DisassemblerInsn "mov" for 0x402fa1>, <DisassemblerInsn "mov" for 0x402fa9>, <DisassemblerInsn "add" for 0x402fab>, <DisassemblerInsn "mov" for 0x402fae>, <DisassemblerInsn "cdq" for 0x402fb3>, <DisassemblerInsn "idiv" for 0x402fb4>, <DisassemblerInsn "mov" for 0x402fb6>, <DisassemblerInsn "cmp" for 0x402fba>, <DisassemblerInsn "jle" for 0x402fbc>]'}, {'block_Idx': 43, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400742>, <DisassemblerInsn "mov" for 0x40074a>, <DisassemblerInsn "mov" for 0x400752>, <DisassemblerInsn "mov" for 0x400758>, <DisassemblerInsn "xor" for 0x40075a>, <DisassemblerInsn "mov" for 0x40075c>, <DisassemblerInsn "mov" for 0x400763>, <DisassemblerInsn "mov" for 0x40076a>, <DisassemblerInsn "mov" for 0x400771>, <DisassemblerInsn "mov" for 0x400779>, <DisassemblerInsn "mov" for 0x400781>, <DisassemblerInsn "mov" for 0x400788>, <DisassemblerInsn "mov" for 0x40078f>, <DisassemblerInsn "add" for 0x400796>, <DisassemblerInsn "mov" for 0x400798>, <DisassemblerInsn "add" for 0x40079a>, <DisassemblerInsn "movsxd" for 0x40079d>, <DisassemblerInsn "call" for 0x4007a0>]'}, {'block_Idx': 231, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401904>, <DisassemblerInsn "cmp" for 0x40190c>, <DisassemblerInsn "jle" for 0x40190f>]'}, {'block_Idx': 242, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401607>, <DisassemblerInsn "mov" for 0x40160f>, <DisassemblerInsn "mov" for 0x401616>, <DisassemblerInsn "mov" for 0x40161d>, <DisassemblerInsn "mov" for 0x401625>, <DisassemblerInsn "mov" for 0x40162d>, <DisassemblerInsn "mov" for 0x401634>, <DisassemblerInsn "mov" for 0x40163b>, <DisassemblerInsn "cmp" for 0x40163d>, <DisassemblerInsn "jne" for 0x401641>]'}, {'block_Idx': 326, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402162>, <DisassemblerInsn "cmp" for 0x402169>, <DisassemblerInsn "jle" for 0x40216c>]'}, {'block_Idx': 222, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401a6a>, <DisassemblerInsn "mov" for 0x401a72>, <DisassemblerInsn "mov" for 0x401a79>, <DisassemblerInsn "mov" for 0x401a80>, <DisassemblerInsn "sub" for 0x401a85>, <DisassemblerInsn "mov" for 0x401a87>, <DisassemblerInsn "shl" for 0x401a8e>, <DisassemblerInsn "mov" for 0x401a90>, <DisassemblerInsn "sar" for 0x401a97>, <DisassemblerInsn "mov" for 0x401a99>, <DisassemblerInsn "cmp" for 0x401aa0>, <DisassemblerInsn "jle" for 0x401aa3>]'}, {'block_Idx': 67, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c2d>, <DisassemblerInsn "mov" for 0x400c34>, <DisassemblerInsn "mov" for 0x400c3c>, <DisassemblerInsn "mov" for 0x400c43>, <DisassemblerInsn "sar" for 0x400c4a>, <DisassemblerInsn "movsxd" for 0x400c4d>, <DisassemblerInsn "mov" for 0x400c50>, <DisassemblerInsn "ror" for 0x400c53>, <DisassemblerInsn "ror" for 0x400c57>, <DisassemblerInsn "ror" for 0x400c5a>, <DisassemblerInsn "shl" for 0x400c5e>, <DisassemblerInsn "shr" for 0x400c60>, <DisassemblerInsn "and" for 0x400c63>, <DisassemblerInsn "cmp" for 0x400c68>, <DisassemblerInsn "je" for 0x400c6d>]'}, {'block_Idx': 124, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40137c>]'}, {'block_Idx': 241, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023bf>, <DisassemblerInsn "mov" for 0x4023c7>, <DisassemblerInsn "mov" for 0x4023cf>, <DisassemblerInsn "and" for 0x4023d6>, <DisassemblerInsn "add" for 0x4023d9>, <DisassemblerInsn "mov" for 0x4023dc>, <DisassemblerInsn "call" for 0x4023de>]'}, {'block_Idx': 25, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f9a>, <DisassemblerInsn "mov" for 0x402fa1>, <DisassemblerInsn "mov" for 0x402fa9>, <DisassemblerInsn "add" for 0x402fab>, <DisassemblerInsn "mov" for 0x402fae>, <DisassemblerInsn "cdq" for 0x402fb3>, <DisassemblerInsn "idiv" for 0x402fb4>, <DisassemblerInsn "mov" for 0x402fb6>, <DisassemblerInsn "cmp" for 0x402fba>, <DisassemblerInsn "jle" for 0x402fbc>]'}, {'block_Idx': 37, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400de0>, <DisassemblerInsn "mov" for 0x400de8>, <DisassemblerInsn "mov" for 0x400def>, <DisassemblerInsn "mov" for 0x400df6>, <DisassemblerInsn "mov" for 0x400dfd>, <DisassemblerInsn "mov" for 0x400e04>, <DisassemblerInsn "shl" for 0x400e0b>, <DisassemblerInsn "shr" for 0x400e0e>, <DisassemblerInsn "mov" for 0x400e11>, <DisassemblerInsn "mov" for 0x400e18>, <DisassemblerInsn "cmp" for 0x400e1e>, <DisassemblerInsn "jne" for 0x400e21>]'}, {'block_Idx': 145, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401438>, <DisassemblerInsn "mov" for 0x40143f>, <DisassemblerInsn "mov" for 0x401447>, <DisassemblerInsn "sar" for 0x401449>, <DisassemblerInsn "movsxd" for 0x40144c>, <DisassemblerInsn "mov" for 0x40144f>, <DisassemblerInsn "ror" for 0x401452>, <DisassemblerInsn "ror" for 0x401456>, <DisassemblerInsn "ror" for 0x401459>, <DisassemblerInsn "and" for 0x40145d>, <DisassemblerInsn "shl" for 0x401460>, <DisassemblerInsn "mov" for 0x401462>, <DisassemblerInsn "shr" for 0x401469>, <DisassemblerInsn "add" for 0x40146c>, <DisassemblerInsn "imul" for 0x40146f>, <DisassemblerInsn "mov" for 0x401472>, <DisassemblerInsn "mov" for 0x401479>, <DisassemblerInsn "jmp" for 0x401480>]'}, {'block_Idx': 104, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4012b5>, <DisassemblerInsn "mov" for 0x4012bc>, <DisassemblerInsn "mov" for 0x4012c3>, <DisassemblerInsn "mov" for 0x4012ca>, <DisassemblerInsn "mov" for 0x4012d2>, <DisassemblerInsn "add" for 0x4012da>, <DisassemblerInsn "mov" for 0x4012de>, <DisassemblerInsn "mov" for 0x4012e6>, <DisassemblerInsn "mov" for 0x4012eb>, <DisassemblerInsn "test" for 0x4012f0>, <DisassemblerInsn "cmovne" for 0x4012f4>, <DisassemblerInsn "imul" for 0x4012f7>, <DisassemblerInsn "imul" for 0x4012fa>, <DisassemblerInsn "cmp" for 0x4012fd>, <DisassemblerInsn "jg" for 0x4012ff>]'}, {'block_Idx': 115, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4012b0>]'}, {'block_Idx': 228, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40241a>, <DisassemblerInsn "cmp" for 0x402422>, <DisassemblerInsn "jle" for 0x402425>]'}, {'block_Idx': 236, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402427>, <DisassemblerInsn "mov" for 0x40242f>, <DisassemblerInsn "mov" for 0x402437>, <DisassemblerInsn "mov" for 0x40243c>, <DisassemblerInsn "xor" for 0x402444>, <DisassemblerInsn "mov" for 0x402446>, <DisassemblerInsn "mov" for 0x40244e>, <DisassemblerInsn "mov" for 0x402456>, <DisassemblerInsn "mov" for 0x40245e>, <DisassemblerInsn "mov" for 0x402465>, <DisassemblerInsn "shl" for 0x402468>, <DisassemblerInsn "mov" for 0x40246a>, <DisassemblerInsn "mov" for 0x402472>, <DisassemblerInsn "mov" for 0x402479>, <DisassemblerInsn "add" for 0x40247c>, <DisassemblerInsn "mov" for 0x402480>, <DisassemblerInsn "movsxd" for 0x402488>, <DisassemblerInsn "cmp" for 0x40248b>, <DisassemblerInsn "mov" for 0x40248e>, <DisassemblerInsn "jl" for 0x402496>]'}, {'block_Idx': 380, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40225d>, <DisassemblerInsn "mov" for 0x402265>, <DisassemblerInsn "mov" for 0x40226c>, <DisassemblerInsn "mov" for 0x402273>, <DisassemblerInsn "mov" for 0x40227b>, <DisassemblerInsn "mov" for 0x402283>, <DisassemblerInsn "add" for 0x40228b>, <DisassemblerInsn "mov" for 0x40228f>, <DisassemblerInsn "mov" for 0x402296>, <DisassemblerInsn "add" for 0x402298>, <DisassemblerInsn "mov" for 0x40229a>, <DisassemblerInsn "mov" for 0x4022a1>, <DisassemblerInsn "add" for 0x4022a3>, <DisassemblerInsn "mov" for 0x4022a6>, <DisassemblerInsn "mov" for 0x4022ad>, <DisassemblerInsn "add" for 0x4022b1>, <DisassemblerInsn "mov" for 0x4022b5>, <DisassemblerInsn "cmp" for 0x4022bd>, <DisassemblerInsn "mov" for 0x4022c0>, <DisassemblerInsn "mov" for 0x4022c8>, <DisassemblerInsn "mov" for 0x4022cf>, <DisassemblerInsn "mov" for 0x4022d6>, <DisassemblerInsn "je" for 0x4022dd>]'}, {'block_Idx': 369, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4020c6>, <DisassemblerInsn "mov" for 0x4020cd>, <DisassemblerInsn "mov" for 0x4020d4>, <DisassemblerInsn "mov" for 0x4020db>, <DisassemblerInsn "mov" for 0x4020e2>, <DisassemblerInsn "mov" for 0x4020e4>, <DisassemblerInsn "mov" for 0x4020ec>, <DisassemblerInsn "mov" for 0x4020f1>, <DisassemblerInsn "mov" for 0x4020f9>, <DisassemblerInsn "mov" for 0x402100>, <DisassemblerInsn "mov" for 0x402107>, <DisassemblerInsn "jmp" for 0x40210e>]'}, {'block_Idx': 244, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b13>, <DisassemblerInsn "mov" for 0x401b1b>, <DisassemblerInsn "mov" for 0x401b22>, <DisassemblerInsn "mov" for 0x401b29>, <DisassemblerInsn "mov" for 0x401b31>, <DisassemblerInsn "mov" for 0x401b39>, <DisassemblerInsn "mov" for 0x401b40>, <DisassemblerInsn "mov" for 0x401b47>, <DisassemblerInsn "sar" for 0x401b49>, <DisassemblerInsn "movsxd" for 0x401b4c>, <DisassemblerInsn "mov" for 0x401b4f>, <DisassemblerInsn "ror" for 0x401b52>, <DisassemblerInsn "ror" for 0x401b56>, <DisassemblerInsn "ror" for 0x401b59>, <DisassemblerInsn "and" for 0x401b5d>, <DisassemblerInsn "mov" for 0x401b60>, <DisassemblerInsn "shl" for 0x401b67>, <DisassemblerInsn "mov" for 0x401b69>, <DisassemblerInsn "cmp" for 0x401b70>, <DisassemblerInsn "jge" for 0x401b73>]'}, {'block_Idx': 399, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402387>]'}, {'block_Idx': 340, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402113>, <DisassemblerInsn "cmp" for 0x40211a>, <DisassemblerInsn "jle" for 0x40211d>]'}, {'block_Idx': 281, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x401f4f>, <DisassemblerInsn "jl" for 0x401f52>]'}, {'block_Idx': 179, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401728>, <DisassemblerInsn "mov" for 0x401730>, <DisassemblerInsn "mov" for 0x401737>, <DisassemblerInsn "mov" for 0x40173f>, <DisassemblerInsn "mov" for 0x401746>, <DisassemblerInsn "sar" for 0x401748>, <DisassemblerInsn "movsxd" for 0x40174b>, <DisassemblerInsn "mov" for 0x40174e>, <DisassemblerInsn "ror" for 0x401751>, <DisassemblerInsn "ror" for 0x401755>, <DisassemblerInsn "ror" for 0x401758>, <DisassemblerInsn "and" for 0x40175c>, <DisassemblerInsn "shl" for 0x40175f>, <DisassemblerInsn "mov" for 0x401761>, <DisassemblerInsn "shr" for 0x401763>, <DisassemblerInsn "mov" for 0x401766>, <DisassemblerInsn "mov" for 0x40176d>, <DisassemblerInsn "add" for 0x40176f>, <DisassemblerInsn "mov" for 0x401772>, <DisassemblerInsn "mov" for 0x401774>, <DisassemblerInsn "sar" for 0x401776>, <DisassemblerInsn "movsxd" for 0x401779>, <DisassemblerInsn "mov" for 0x40177c>, <DisassemblerInsn "and" for 0x40177f>, <DisassemblerInsn "movzx" for 0x401782>, <DisassemblerInsn "add" for 0x401785>, <DisassemblerInsn "mov" for 0x401788>, <DisassemblerInsn "mov" for 0x40178a>, <DisassemblerInsn "shr" for 0x40178f>, <DisassemblerInsn "mov" for 0x401791>, <DisassemblerInsn "and" for 0x401798>, <DisassemblerInsn "xor" for 0x40179a>, <DisassemblerInsn "mov" for 0x40179c>, <DisassemblerInsn "cmp" for 0x4017a1>, <DisassemblerInsn "mov" for 0x4017a4>, <DisassemblerInsn "mov" for 0x4017a6>, <DisassemblerInsn "mov" for 0x4017ad>, <DisassemblerInsn "mov" for 0x4017b4>, <DisassemblerInsn "mov" for 0x4017bb>, <DisassemblerInsn "mov" for 0x4017c2>, <DisassemblerInsn "je" for 0x4017c9>]'}, {'block_Idx': 224, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401aa9>, <DisassemblerInsn "mov" for 0x401ab1>, <DisassemblerInsn "mov" for 0x401ab9>, <DisassemblerInsn "mov" for 0x401abe>, <DisassemblerInsn "xor" for 0x401ac6>, <DisassemblerInsn "mov" for 0x401ac8>, <DisassemblerInsn "mov" for 0x401ad0>, <DisassemblerInsn "mov" for 0x401ad8>, <DisassemblerInsn "mov" for 0x401ae0>, <DisassemblerInsn "mov" for 0x401ae8>, <DisassemblerInsn "mov" for 0x401aef>, <DisassemblerInsn "add" for 0x401af2>, <DisassemblerInsn "mov" for 0x401af6>, <DisassemblerInsn "movsxd" for 0x401afe>, <DisassemblerInsn "cmp" for 0x401b01>, <DisassemblerInsn "mov" for 0x401b04>, <DisassemblerInsn "jl" for 0x401b0c>]'}, {'block_Idx': 138, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401510>, <DisassemblerInsn "cmp" for 0x401517>, <DisassemblerInsn "je" for 0x40151a>]'}, {'block_Idx': 327, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f86>, <DisassemblerInsn "mov" for 0x401f8d>, <DisassemblerInsn "mov" for 0x401f94>, <DisassemblerInsn "mov" for 0x401f9c>, <DisassemblerInsn "add" for 0x401f9e>, <DisassemblerInsn "mov" for 0x401fa1>, <DisassemblerInsn "mov" for 0x401fa3>, <DisassemblerInsn "mov" for 0x401fa6>, <DisassemblerInsn "sub" for 0x401fad>, <DisassemblerInsn "mov" for 0x401faf>, <DisassemblerInsn "cmp" for 0x401fb6>, <DisassemblerInsn "jbe" for 0x401fb9>]'}, {'block_Idx': 56, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e92>, <DisassemblerInsn "mov" for 0x400e9a>, <DisassemblerInsn "mov" for 0x400ea2>, <DisassemblerInsn "mov" for 0x400eaa>, <DisassemblerInsn "mov" for 0x400eb2>, <DisassemblerInsn "mov" for 0x400eb4>, <DisassemblerInsn "cmp" for 0x400ebb>, <DisassemblerInsn "setg" for 0x400ebe>, <DisassemblerInsn "mov" for 0x400ec2>, <DisassemblerInsn "mov" for 0x400eca>, <DisassemblerInsn "add" for 0x400ecd>, <DisassemblerInsn "mov" for 0x400ed1>, <DisassemblerInsn "mov" for 0x400ed9>, <DisassemblerInsn "mov" for 0x400edd>, <DisassemblerInsn "mov" for 0x400ee3>, <DisassemblerInsn "cmp" for 0x400ee9>, <DisassemblerInsn "cmovg" for 0x400eec>, <DisassemblerInsn "mov" for 0x400ef0>, <DisassemblerInsn "mov" for 0x400ef6>, <DisassemblerInsn "cmp" for 0x400efc>, <DisassemblerInsn "cmovg" for 0x400eff>, <DisassemblerInsn "and" for 0x400f03>, <DisassemblerInsn "movzx" for 0x400f07>, <DisassemblerInsn "mov" for 0x400f0b>, <DisassemblerInsn "sub" for 0x400f0f>, <DisassemblerInsn "mov" for 0x400f12>, <DisassemblerInsn "mov" for 0x400f15>, <DisassemblerInsn "mov" for 0x400f1d>, <DisassemblerInsn "add" for 0x400f20>, <DisassemblerInsn "mov" for 0x400f24>, <DisassemblerInsn "mov" for 0x400f2c>, <DisassemblerInsn "mov" for 0x400f30>, <DisassemblerInsn "add" for 0x400f33>, <DisassemblerInsn "mov" for 0x400f37>, <DisassemblerInsn "mov" for 0x400f3f>, <DisassemblerInsn "mov" for 0x400f43>, <DisassemblerInsn "mov" for 0x400f49>, <DisassemblerInsn "add" for 0x400f4c>, <DisassemblerInsn "mov" for 0x400f50>, <DisassemblerInsn "mov" for 0x400f58>, <DisassemblerInsn "mov" for 0x400f5b>, <DisassemblerInsn "mov" for 0x400f5d>, <DisassemblerInsn "and" for 0x400f63>, <DisassemblerInsn "cmp" for 0x400f65>, <DisassemblerInsn "je" for 0x400f67>]'}, {'block_Idx': 312, 'blockInsts': '[<DisassemblerInsn "sub" for 0x4039df>, <DisassemblerInsn "mov" for 0x4039e6>, <DisassemblerInsn "mov" for 0x4039ed>, <DisassemblerInsn "mov" for 0x4039f4>, <DisassemblerInsn "mov" for 0x4039fc>, <DisassemblerInsn "add" for 0x4039ff>, <DisassemblerInsn "mov" for 0x403a03>, <DisassemblerInsn "mov" for 0x403a0b>, <DisassemblerInsn "mov" for 0x403a0e>, <DisassemblerInsn "mov" for 0x403a15>, <DisassemblerInsn "mov" for 0x403a19>, <DisassemblerInsn "mov" for 0x403a21>, <DisassemblerInsn "sar" for 0x403a23>, <DisassemblerInsn "movsxd" for 0x403a26>, <DisassemblerInsn "mov" for 0x403a29>, <DisassemblerInsn "ror" for 0x403a2c>, <DisassemblerInsn "ror" for 0x403a30>, <DisassemblerInsn "ror" for 0x403a33>, <DisassemblerInsn "and" for 0x403a37>, <DisassemblerInsn "shl" for 0x403a3a>, <DisassemblerInsn "mov" for 0x403a3c>, <DisassemblerInsn "shr" for 0x403a43>, <DisassemblerInsn "mov" for 0x403a46>, <DisassemblerInsn "add" for 0x403a4d>, <DisassemblerInsn "mov" for 0x403a50>, <DisassemblerInsn "mov" for 0x403a57>, <DisassemblerInsn "cmp" for 0x403a5a>, <DisassemblerInsn "jle" for 0x403a5d>]'}, {'block_Idx': 226, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ccc>, <DisassemblerInsn "add" for 0x401cd3>, <DisassemblerInsn "cmp" for 0x401cd6>, <DisassemblerInsn "jae" for 0x401cd9>]'}, {'block_Idx': 102, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40115b>, <DisassemblerInsn "sub" for 0x401162>, <DisassemblerInsn "je" for 0x401165>]'}, {'block_Idx': 99, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401159>]'}, {'block_Idx': 38, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d5c>]'}, {'block_Idx': 119, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401370>, <DisassemblerInsn "sub" for 0x401377>, <DisassemblerInsn "je" for 0x40137a>]'}, {'block_Idx': 163, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4025e9>, <DisassemblerInsn "mov" for 0x4025f1>, <DisassemblerInsn "mov" for 0x4025f9>, <DisassemblerInsn "mov" for 0x402600>, <DisassemblerInsn "mov" for 0x402608>, <DisassemblerInsn "xor" for 0x40260a>, <DisassemblerInsn "cmp" for 0x40260c>, <DisassemblerInsn "mov" for 0x40260f>, <DisassemblerInsn "mov" for 0x402612>, <DisassemblerInsn "mov" for 0x40261a>, <DisassemblerInsn "mov" for 0x40261d>, <DisassemblerInsn "mov" for 0x402625>, <DisassemblerInsn "mov" for 0x40262c>, <DisassemblerInsn "mov" for 0x402634>, <DisassemblerInsn "mov" for 0x40263c>, <DisassemblerInsn "mov" for 0x402644>, <DisassemblerInsn "jle" for 0x40264b>]'}, {'block_Idx': 379, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40225b>]'}, {'block_Idx': 159, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40153e>]'}, {'block_Idx': 213, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402b5b>]'}, {'block_Idx': 51, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400db0>, <DisassemblerInsn "mov" for 0x400db7>, <DisassemblerInsn "mov" for 0x400dbf>, <DisassemblerInsn "mov" for 0x400dc7>, <DisassemblerInsn "xor" for 0x400dcb>, <DisassemblerInsn "lea" for 0x400dcd>, <DisassemblerInsn "mov" for 0x400dd4>, <DisassemblerInsn "call" for 0x400dd6>]'}, {'block_Idx': 368, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4021f0>, <DisassemblerInsn "mov" for 0x4021f8>, <DisassemblerInsn "mov" for 0x4021ff>, <DisassemblerInsn "mov" for 0x402207>, <DisassemblerInsn "mov" for 0x40220f>, <DisassemblerInsn "add" for 0x402217>, <DisassemblerInsn "mov" for 0x40221a>, <DisassemblerInsn "mov" for 0x402221>, <DisassemblerInsn "add" for 0x402223>, <DisassemblerInsn "mov" for 0x402226>, <DisassemblerInsn "mov" for 0x40222d>, <DisassemblerInsn "add" for 0x402230>, <DisassemblerInsn "mov" for 0x402234>, <DisassemblerInsn "cmp" for 0x40223c>, <DisassemblerInsn "mov" for 0x40223f>, <DisassemblerInsn "mov" for 0x402247>, <DisassemblerInsn "mov" for 0x40224e>, <DisassemblerInsn "je" for 0x402255>]'}, {'block_Idx': 260, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c38>, <DisassemblerInsn "mov" for 0x401c40>, <DisassemblerInsn "mov" for 0x401c48>, <DisassemblerInsn "mov" for 0x401c4f>, <DisassemblerInsn "mov" for 0x401c56>, <DisassemblerInsn "sub" for 0x401c5b>, <DisassemblerInsn "mov" for 0x401c5d>, <DisassemblerInsn "shl" for 0x401c64>, <DisassemblerInsn "mov" for 0x401c66>, <DisassemblerInsn "sar" for 0x401c6d>, <DisassemblerInsn "mov" for 0x401c6f>, <DisassemblerInsn "mov" for 0x401c77>, <DisassemblerInsn "mov" for 0x401c7a>, <DisassemblerInsn "add" for 0x401c7d>, <DisassemblerInsn "mov" for 0x401c81>, <DisassemblerInsn "movsxd" for 0x401c89>, <DisassemblerInsn "cmp" for 0x401c8c>, <DisassemblerInsn "jge" for 0x401c8f>]'}, {'block_Idx': 227, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402498>, <DisassemblerInsn "mov" for 0x4024a0>, <DisassemblerInsn "add" for 0x4024a8>, <DisassemblerInsn "mov" for 0x4024ac>, <DisassemblerInsn "mov" for 0x4024b4>, <DisassemblerInsn "mov" for 0x4024b6>, <DisassemblerInsn "movsxd" for 0x4024bd>, <DisassemblerInsn "cmp" for 0x4024c0>, <DisassemblerInsn "jge" for 0x4024c3>]'}, {'block_Idx': 175, 'blockInsts': '[<DisassemblerInsn "lea" for 0x402be7>, <DisassemblerInsn "lea" for 0x402bee>, <DisassemblerInsn "mov" for 0x402bf5>, <DisassemblerInsn "lea" for 0x402bfa>, <DisassemblerInsn "call" for 0x402c01>]'}, {'block_Idx': 123, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013a1>, <DisassemblerInsn "mov" for 0x4013a8>, <DisassemblerInsn "mov" for 0x4013b0>, <DisassemblerInsn "sar" for 0x4013b2>, <DisassemblerInsn "movsxd" for 0x4013b5>, <DisassemblerInsn "mov" for 0x4013b8>, <DisassemblerInsn "ror" for 0x4013bb>, <DisassemblerInsn "ror" for 0x4013bf>, <DisassemblerInsn "ror" for 0x4013c2>, <DisassemblerInsn "and" for 0x4013c6>, <DisassemblerInsn "shl" for 0x4013c9>, <DisassemblerInsn "mov" for 0x4013cb>, <DisassemblerInsn "shr" for 0x4013d2>, <DisassemblerInsn "add" for 0x4013d5>, <DisassemblerInsn "imul" for 0x4013d8>, <DisassemblerInsn "mov" for 0x4013de>, <DisassemblerInsn "mov" for 0x4013e5>, <DisassemblerInsn "jmp" for 0x4013ec>]'}, {'block_Idx': 261, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401c95>, <DisassemblerInsn "mov" for 0x401c9d>, <DisassemblerInsn "mov" for 0x401ca5>, <DisassemblerInsn "mov" for 0x401cad>, <DisassemblerInsn "mov" for 0x401caf>, <DisassemblerInsn "mov" for 0x401cb1>, <DisassemblerInsn "mov" for 0x401cb8>, <DisassemblerInsn "mov" for 0x401cbf>, <DisassemblerInsn "jmp" for 0x401cc7>]'}, {'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "sub" for 0x400420>, <DisassemblerInsn "mov" for 0x400427>, <DisassemblerInsn "mov" for 0x40042f>, <DisassemblerInsn "mov" for 0x400437>, <DisassemblerInsn "mov" for 0x40043f>, <DisassemblerInsn "mov" for 0x400446>, <DisassemblerInsn "mov" for 0x40044e>, <DisassemblerInsn "mov" for 0x400451>, <DisassemblerInsn "mov" for 0x400459>, <DisassemblerInsn "mov" for 0x400461>, <DisassemblerInsn "mov" for 0x400463>, <DisassemblerInsn "mov" for 0x40046a>, <DisassemblerInsn "mov" for 0x400470>, <DisassemblerInsn "add" for 0x400473>, <DisassemblerInsn "mov" for 0x400477>, <DisassemblerInsn "mov" for 0x40047f>, <DisassemblerInsn "cmp" for 0x400482>, <DisassemblerInsn "mov" for 0x400485>, <DisassemblerInsn "jne" for 0x40048c>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401963>, <DisassemblerInsn "mov" for 0x40196a>, <DisassemblerInsn "mov" for 0x401971>, <DisassemblerInsn "mov" for 0x401979>, <DisassemblerInsn "sar" for 0x40197b>, <DisassemblerInsn "movsxd" for 0x40197e>, <DisassemblerInsn "mov" for 0x401981>, <DisassemblerInsn "ror" for 0x401984>, <DisassemblerInsn "ror" for 0x401988>, <DisassemblerInsn "ror" for 0x40198b>, <DisassemblerInsn "and" for 0x40198f>, <DisassemblerInsn "mov" for 0x401992>, <DisassemblerInsn "shl" for 0x401999>, <DisassemblerInsn "mov" for 0x40199b>, <DisassemblerInsn "cmp" for 0x4019a2>, <DisassemblerInsn "jge" for 0x4019a5>]'}, {'block_Idx': 169, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40167c>]'}, {'block_Idx': 205, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4027df>, <DisassemblerInsn "mov" for 0x4027e7>, <DisassemblerInsn "mov" for 0x4027ee>, <DisassemblerInsn "mov" for 0x4027f6>, <DisassemblerInsn "mov" for 0x4027fe>, <DisassemblerInsn "mov" for 0x402806>, <DisassemblerInsn "mov" for 0x40280e>, <DisassemblerInsn "add" for 0x402815>, <DisassemblerInsn "movsxd" for 0x402819>, <DisassemblerInsn "cmp" for 0x40281c>, <DisassemblerInsn "mov" for 0x40281f>, <DisassemblerInsn "mov" for 0x402826>, <DisassemblerInsn "mov" for 0x40282e>, <DisassemblerInsn "mov" for 0x402836>, <DisassemblerInsn "jl" for 0x40283e>]'}, {'block_Idx': 247, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401df7>, <DisassemblerInsn "mov" for 0x401dff>, <DisassemblerInsn "mov" for 0x401e06>, <DisassemblerInsn "mov" for 0x401e0d>, <DisassemblerInsn "mov" for 0x401e15>, <DisassemblerInsn "shr" for 0x401e1d>, <DisassemblerInsn "mov" for 0x401e21>, <DisassemblerInsn "add" for 0x401e24>, <DisassemblerInsn "mov" for 0x401e28>, <DisassemblerInsn "add" for 0x401e2a>, <DisassemblerInsn "mov" for 0x401e2d>, <DisassemblerInsn "shl" for 0x401e34>, <DisassemblerInsn "mov" for 0x401e37>, <DisassemblerInsn "mov" for 0x401e3e>, <DisassemblerInsn "sar" for 0x401e46>, <DisassemblerInsn "movsxd" for 0x401e4a>, <DisassemblerInsn "mov" for 0x401e4d>, <DisassemblerInsn "ror" for 0x401e51>, <DisassemblerInsn "ror" for 0x401e55>, <DisassemblerInsn "ror" for 0x401e58>, <DisassemblerInsn "shl" for 0x401e5c>, <DisassemblerInsn "mov" for 0x401e5e>, <DisassemblerInsn "mov" for 0x401e65>, <DisassemblerInsn "xor" for 0x401e68>, <DisassemblerInsn "sub" for 0x401e6a>, <DisassemblerInsn "shr" for 0x401e6d>, <DisassemblerInsn "mov" for 0x401e6f>, <DisassemblerInsn "add" for 0x401e76>, <DisassemblerInsn "mov" for 0x401e78>, <DisassemblerInsn "or" for 0x401e7a>, <DisassemblerInsn "mov" for 0x401e7c>, <DisassemblerInsn "mov" for 0x401e83>, <DisassemblerInsn "mov" for 0x401e8b>, <DisassemblerInsn "mov" for 0x401e93>, <DisassemblerInsn "mov" for 0x401e9a>, <DisassemblerInsn "mov" for 0x401ea1>, <DisassemblerInsn "sub" for 0x401ea6>, <DisassemblerInsn "mov" for 0x401ea8>, <DisassemblerInsn "shl" for 0x401eaf>, <DisassemblerInsn "mov" for 0x401eb1>, <DisassemblerInsn "sar" for 0x401eb8>, <DisassemblerInsn "mov" for 0x401eba>, <DisassemblerInsn "mov" for 0x401ec2>, <DisassemblerInsn "add" for 0x401ec5>, <DisassemblerInsn "mov" for 0x401ec9>, <DisassemblerInsn "cmp" for 0x401ed1>, <DisassemblerInsn "je" for 0x401ed4>]'}, {'block_Idx': 153, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401482>, <DisassemblerInsn "mov" for 0x401489>, <DisassemblerInsn "xor" for 0x401491>, <DisassemblerInsn "lea" for 0x401493>, <DisassemblerInsn "mov" for 0x40149a>, <DisassemblerInsn "call" for 0x40149c>]'}, {'block_Idx': 225, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401902>]'}, {'block_Idx': 114, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401336>, <DisassemblerInsn "cmp" for 0x40133d>, <DisassemblerInsn "jge" for 0x401340>]'}, {'block_Idx': 254, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401e83>, <DisassemblerInsn "mov" for 0x401e8b>, <DisassemblerInsn "mov" for 0x401e93>, <DisassemblerInsn "mov" for 0x401e9a>, <DisassemblerInsn "mov" for 0x401ea1>, <DisassemblerInsn "sub" for 0x401ea6>, <DisassemblerInsn "mov" for 0x401ea8>, <DisassemblerInsn "shl" for 0x401eaf>, <DisassemblerInsn "mov" for 0x401eb1>, <DisassemblerInsn "sar" for 0x401eb8>, <DisassemblerInsn "mov" for 0x401eba>, <DisassemblerInsn "mov" for 0x401ec2>, <DisassemblerInsn "add" for 0x401ec5>, <DisassemblerInsn "mov" for 0x401ec9>, <DisassemblerInsn "cmp" for 0x401ed1>, <DisassemblerInsn "je" for 0x401ed4>]'}, {'block_Idx': 390, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4022e3>]'}, {'block_Idx': 144, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40151c>, <DisassemblerInsn "mov" for 0x401523>, <DisassemblerInsn "mov" for 0x40152b>, <DisassemblerInsn "xor" for 0x40152e>, <DisassemblerInsn "lea" for 0x401530>, <DisassemblerInsn "mov" for 0x401537>, <DisassemblerInsn "call" for 0x401539>]'}, {'block_Idx': 204, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402844>, <DisassemblerInsn "mov" for 0x40284c>, <DisassemblerInsn "mov" for 0x402854>, <DisassemblerInsn "mov" for 0x40285b>, <DisassemblerInsn "mov" for 0x402863>, <DisassemblerInsn "mov" for 0x402865>, <DisassemblerInsn "mov" for 0x40286c>, <DisassemblerInsn "mov" for 0x40286e>, <DisassemblerInsn "mov" for 0x402875>, <DisassemblerInsn "mov" for 0x40287c>, <DisassemblerInsn "mov" for 0x402884>, <DisassemblerInsn "mov" for 0x40288c>, <DisassemblerInsn "mov" for 0x402894>, <DisassemblerInsn "mov" for 0x40289b>, <DisassemblerInsn "mov" for 0x4028a3>, <DisassemblerInsn "mov" for 0x4028aa>, <DisassemblerInsn "mov" for 0x4028b2>, <DisassemblerInsn "add" for 0x4028ba>, <DisassemblerInsn "movsxd" for 0x4028be>, <DisassemblerInsn "cmp" for 0x4028c1>, <DisassemblerInsn "mov" for 0x4028c4>, <DisassemblerInsn "mov" for 0x4028c7>, <DisassemblerInsn "mov" for 0x4028cf>, <DisassemblerInsn "mov" for 0x4028d7>, <DisassemblerInsn "mov" for 0x4028de>, <DisassemblerInsn "mov" for 0x4028e6>, <DisassemblerInsn "mov" for 0x4028ee>, <DisassemblerInsn "mov" for 0x4028f6>, <DisassemblerInsn "jl" for 0x4028fd>]'}, {'block_Idx': 81, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400f81>]'}, {'block_Idx': 26, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d26>, <DisassemblerInsn "mov" for 0x400d2d>, <DisassemblerInsn "mov" for 0x400d35>, <DisassemblerInsn "add" for 0x400d38>, <DisassemblerInsn "xor" for 0x400d3b>, <DisassemblerInsn "cmp" for 0x400d3d>, <DisassemblerInsn "mov" for 0x400d3f>, <DisassemblerInsn "mov" for 0x400d41>, <DisassemblerInsn "mov" for 0x400d48>, <DisassemblerInsn "mov" for 0x400d4f>, <DisassemblerInsn "je" for 0x400d56>]'}, {'block_Idx': 202, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402a9f>, <DisassemblerInsn "mov" for 0x402aa7>, <DisassemblerInsn "mov" for 0x402aae>, <DisassemblerInsn "mov" for 0x402ab6>, <DisassemblerInsn "mov" for 0x402abd>, <DisassemblerInsn "mov" for 0x402ac5>, <DisassemblerInsn "mov" for 0x402acc>, <DisassemblerInsn "mov" for 0x402ad4>, <DisassemblerInsn "sub" for 0x402ad8>, <DisassemblerInsn "shl" for 0x402adb>, <DisassemblerInsn "mov" for 0x402add>, <DisassemblerInsn "mov" for 0x402adf>, <DisassemblerInsn "mov" for 0x402ae2>, <DisassemblerInsn "add" for 0x402ae5>, <DisassemblerInsn "mov" for 0x402ae9>, <DisassemblerInsn "mov" for 0x402aed>, <DisassemblerInsn "mov" for 0x402af4>, <DisassemblerInsn "mov" for 0x402afc>, <DisassemblerInsn "mov" for 0x402b04>, <DisassemblerInsn "mov" for 0x402b0c>, <DisassemblerInsn "mov" for 0x402b13>, <DisassemblerInsn "mov" for 0x402b1b>, <DisassemblerInsn "add" for 0x402b23>, <DisassemblerInsn "movsxd" for 0x402b27>, <DisassemblerInsn "cmp" for 0x402b2a>, <DisassemblerInsn "mov" for 0x402b2d>, <DisassemblerInsn "mov" for 0x402b2f>, <DisassemblerInsn "mov" for 0x402b36>, <DisassemblerInsn "mov" for 0x402b3e>, <DisassemblerInsn "mov" for 0x402b46>, <DisassemblerInsn "mov" for 0x402b4e>, <DisassemblerInsn "jl" for 0x402b55>]'}, {'block_Idx': 208, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ee2>, <DisassemblerInsn "mov" for 0x402ee7>, <DisassemblerInsn "mov" for 0x402eeb>, <DisassemblerInsn "mov" for 0x402ef0>, <DisassemblerInsn "mov" for 0x402ef4>, <DisassemblerInsn "mov" for 0x402ef8>, <DisassemblerInsn "mov" for 0x402efd>, <DisassemblerInsn "shl" for 0x402f01>, <DisassemblerInsn "mov" for 0x402f03>, <DisassemblerInsn "mov" for 0x402f05>, <DisassemblerInsn "mov" for 0x402f08>, <DisassemblerInsn "add" for 0x402f0b>, <DisassemblerInsn "mov" for 0x402f0f>, <DisassemblerInsn "mov" for 0x402f13>, <DisassemblerInsn "mov" for 0x402f17>, <DisassemblerInsn "mov" for 0x402f1c>, <DisassemblerInsn "mov" for 0x402f21>, <DisassemblerInsn "mov" for 0x402f26>, <DisassemblerInsn "mov" for 0x402f2a>, <DisassemblerInsn "mov" for 0x402f2f>, <DisassemblerInsn "add" for 0x402f34>, <DisassemblerInsn "movsxd" for 0x402f38>, <DisassemblerInsn "cmp" for 0x402f3b>, <DisassemblerInsn "mov" for 0x402f3e>, <DisassemblerInsn "mov" for 0x402f40>, <DisassemblerInsn "mov" for 0x402f44>, <DisassemblerInsn "mov" for 0x402f49>, <DisassemblerInsn "mov" for 0x402f4e>, <DisassemblerInsn "mov" for 0x402f56>, <DisassemblerInsn "jl" for 0x402f5d>]'}, {'block_Idx': 112, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b1d>, <DisassemblerInsn "call" for 0x400b25>]'}, {'block_Idx': 36, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402fbe>, <DisassemblerInsn "mov" for 0x402fc6>, <DisassemblerInsn "mov" for 0x402fcd>, <DisassemblerInsn "mov" for 0x402fd1>, <DisassemblerInsn "sub" for 0x402fd5>, <DisassemblerInsn "xor" for 0x402fd7>, <DisassemblerInsn "lea" for 0x402fd9>, <DisassemblerInsn "mov" for 0x402fe0>, <DisassemblerInsn "call" for 0x402fe2>]'}, {'block_Idx': 156, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4025d3>, <DisassemblerInsn "mov" for 0x4025db>, <DisassemblerInsn "mov" for 0x4025dd>, <DisassemblerInsn "jmp" for 0x4025e4>]'}, {'block_Idx': 58, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e48>, <DisassemblerInsn "movsxd" for 0x400e4f>, <DisassemblerInsn "lea" for 0x400e52>, <DisassemblerInsn "shl" for 0x400e59>, <DisassemblerInsn "add" for 0x400e5d>, <DisassemblerInsn "mov" for 0x400e60>, <DisassemblerInsn "jmp" for 0x400e68>]'}, {'block_Idx': 193, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402903>]'}, {'block_Idx': 129, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40137e>, <DisassemblerInsn "sub" for 0x401385>, <DisassemblerInsn "je" for 0x401388>]'}, {'block_Idx': 157, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401643>, <DisassemblerInsn "mov" for 0x40164a>, <DisassemblerInsn "cmp" for 0x401651>, <DisassemblerInsn "mov" for 0x401654>, <DisassemblerInsn "je" for 0x40165b>]'}, {'block_Idx': 172, 'blockInsts': '[<DisassemblerInsn "lea" for 0x40298f>, <DisassemblerInsn "lea" for 0x402996>, <DisassemblerInsn "mov" for 0x40299d>, <DisassemblerInsn "lea" for 0x4029a2>, <DisassemblerInsn "call" for 0x4029a9>]'}, {'block_Idx': 55, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402fe7>, <DisassemblerInsn "mov" for 0x402fef>, <DisassemblerInsn "mov" for 0x402ff9>, <DisassemblerInsn "mov" for 0x403003>, <DisassemblerInsn "mov" for 0x403008>, <DisassemblerInsn "jmp" for 0x40300f>]'}, {'block_Idx': 75, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40252e>, <DisassemblerInsn "mov" for 0x402536>, <DisassemblerInsn "xor" for 0x40253a>, <DisassemblerInsn "lea" for 0x40253c>, <DisassemblerInsn "mov" for 0x402543>, <DisassemblerInsn "call" for 0x402545>]'}, {'block_Idx': 46, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b44>, <DisassemblerInsn "mov" for 0x400b4c>, <DisassemblerInsn "mov" for 0x400b53>, <DisassemblerInsn "add" for 0x400b55>, <DisassemblerInsn "mov" for 0x400b57>, <DisassemblerInsn "mov" for 0x400b59>, <DisassemblerInsn "mov" for 0x400b60>, <DisassemblerInsn "shr" for 0x400b65>, <DisassemblerInsn "mov" for 0x400b67>, <DisassemblerInsn "and" for 0x400b6e>, <DisassemblerInsn "cmp" for 0x400b70>, <DisassemblerInsn "jne" for 0x400b73>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40061c>, <DisassemblerInsn "mov" for 0x400623>, <DisassemblerInsn "mov" for 0x40062a>, <DisassemblerInsn "mov" for 0x400631>, <DisassemblerInsn "mov" for 0x400639>, <DisassemblerInsn "add" for 0x40063c>, <DisassemblerInsn "mov" for 0x400643>, <DisassemblerInsn "mov" for 0x40064b>, <DisassemblerInsn "cmp" for 0x400651>, <DisassemblerInsn "mov" for 0x400653>, <DisassemblerInsn "mov" for 0x40065a>, <DisassemblerInsn "mov" for 0x400661>, <DisassemblerInsn "jae" for 0x400668>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40066a>, <DisassemblerInsn "mov" for 0x400672>, <DisassemblerInsn "mov" for 0x40067a>, <DisassemblerInsn "mov" for 0x400681>, <DisassemblerInsn "call" for 0x400688>]'}, {'block_Idx': 111, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40122f>, <DisassemblerInsn "mov" for 0x401236>, <DisassemblerInsn "movsxd" for 0x40123d>, <DisassemblerInsn "lea" for 0x401240>, <DisassemblerInsn "mov" for 0x401247>, <DisassemblerInsn "mov" for 0x40124a>, <DisassemblerInsn "mov" for 0x401251>, <DisassemblerInsn "mov" for 0x401258>, <DisassemblerInsn "mov" for 0x401260>, <DisassemblerInsn "mov" for 0x401267>, <DisassemblerInsn "mov" for 0x40126e>, <DisassemblerInsn "mov" for 0x401275>, <DisassemblerInsn "mov" for 0x40127c>, <DisassemblerInsn "mov" for 0x40127e>, <DisassemblerInsn "cmp" for 0x401285>, <DisassemblerInsn "jle" for 0x401287>]'}, {'block_Idx': 66, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400ddb>]'}, {'block_Idx': 192, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4029ae>, <DisassemblerInsn "mov" for 0x4029b6>, <DisassemblerInsn "mov" for 0x4029be>, <DisassemblerInsn "mov" for 0x4029c6>, <DisassemblerInsn "mov" for 0x4029ce>, <DisassemblerInsn "mov" for 0x4029d6>, <DisassemblerInsn "mov" for 0x4029de>, <DisassemblerInsn "mov" for 0x4029e6>, <DisassemblerInsn "mov" for 0x4029ee>, <DisassemblerInsn "mov" for 0x4029f6>, <DisassemblerInsn "mov" for 0x4029fe>, <DisassemblerInsn "mov" for 0x402a06>, <DisassemblerInsn "mov" for 0x402a0e>, <DisassemblerInsn "mov" for 0x402a11>, <DisassemblerInsn "mov" for 0x402a18>, <DisassemblerInsn "mov" for 0x402a1b>, <DisassemblerInsn "mov" for 0x402a22>, <DisassemblerInsn "mov" for 0x402a24>, <DisassemblerInsn "mov" for 0x402a26>, <DisassemblerInsn "shl" for 0x402a2d>, <DisassemblerInsn "mov" for 0x402a2f>, <DisassemblerInsn "cmp" for 0x402a36>, <DisassemblerInsn "je" for 0x402a39>]'}, {'block_Idx': 167, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40165d>]'}, {'block_Idx': 47, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403042>, <DisassemblerInsn "mov" for 0x403049>, <DisassemblerInsn "mov" for 0x40304e>, <DisassemblerInsn "mov" for 0x403052>, <DisassemblerInsn "mov" for 0x403056>, <DisassemblerInsn "mov" for 0x40305e>, <DisassemblerInsn "add" for 0x403061>, <DisassemblerInsn "mov" for 0x403068>, <DisassemblerInsn "sub" for 0x40306f>, <DisassemblerInsn "mov" for 0x403071>, <DisassemblerInsn "mov" for 0x403073>, <DisassemblerInsn "mov" for 0x40307a>, <DisassemblerInsn "add" for 0x403081>, <DisassemblerInsn "ret" for 0x403088>]'}, {'block_Idx': 185, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b8d>, <DisassemblerInsn "mov" for 0x402b95>, <DisassemblerInsn "mov" for 0x402b9d>, <DisassemblerInsn "mov" for 0x402ba4>, <DisassemblerInsn "mov" for 0x402bac>, <DisassemblerInsn "mov" for 0x402bb0>, <DisassemblerInsn "mov" for 0x402bb8>, <DisassemblerInsn "mov" for 0x402bbc>, <DisassemblerInsn "xor" for 0x402bc4>, <DisassemblerInsn "mov" for 0x402bc6>, <DisassemblerInsn "mov" for 0x402bcd>, <DisassemblerInsn "mov" for 0x402bd5>, <DisassemblerInsn "mov" for 0x402bdd>, <DisassemblerInsn "jmp" for 0x402be5>]'}, {'block_Idx': 101, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401258>, <DisassemblerInsn "mov" for 0x401260>, <DisassemblerInsn "mov" for 0x401267>, <DisassemblerInsn "mov" for 0x40126e>, <DisassemblerInsn "mov" for 0x401275>, <DisassemblerInsn "mov" for 0x40127c>, <DisassemblerInsn "mov" for 0x40127e>, <DisassemblerInsn "cmp" for 0x401285>, <DisassemblerInsn "jle" for 0x401287>]'}, {'block_Idx': 128, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014cf>, <DisassemblerInsn "mov" for 0x4014d7>, <DisassemblerInsn "mov" for 0x4014da>, <DisassemblerInsn "mov" for 0x4014e2>, <DisassemblerInsn "mov" for 0x4014e5>, <DisassemblerInsn "mov" for 0x4014ed>, <DisassemblerInsn "mov" for 0x4014ef>, <DisassemblerInsn "mov" for 0x4014f6>, <DisassemblerInsn "cdq" for 0x4014fb>, <DisassemblerInsn "idiv" for 0x4014fc>, <DisassemblerInsn "mov" for 0x4014fe>, <DisassemblerInsn "movsxd" for 0x401506>, <DisassemblerInsn "xor" for 0x401509>, <DisassemblerInsn "call" for 0x40150b>]'}, {'block_Idx': 40, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d91>, <DisassemblerInsn "add" for 0x400d98>, <DisassemblerInsn "mov" for 0x400d9b>, <DisassemblerInsn "mov" for 0x400da0>, <DisassemblerInsn "mov" for 0x400da7>, <DisassemblerInsn "jmp" for 0x400dae>]'}, {'block_Idx': 249, 'blockInsts': '[<DisassemblerInsn "push" for 0x40322c>, <DisassemblerInsn "mov" for 0x40322d>, <DisassemblerInsn "sub" for 0x403230>, <DisassemblerInsn "mov" for 0x403237>, <DisassemblerInsn "mov" for 0x40323a>, <DisassemblerInsn "mov" for 0x40323d>, <DisassemblerInsn "mov" for 0x403241>, <DisassemblerInsn "mov" for 0x403243>, <DisassemblerInsn "lea" for 0x403247>, <DisassemblerInsn "and" for 0x40324f>, <DisassemblerInsn "mov" for 0x403253>, <DisassemblerInsn "sub" for 0x403256>, <DisassemblerInsn "mov" for 0x403259>, <DisassemblerInsn "mov" for 0x40325d>, <DisassemblerInsn "movsxd" for 0x403260>, <DisassemblerInsn "mov" for 0x403263>, <DisassemblerInsn "mov" for 0x403268>, <DisassemblerInsn "cmp" for 0x40326c>, <DisassemblerInsn "setg" for 0x40326f>, <DisassemblerInsn "mov" for 0x403272>, <DisassemblerInsn "test" for 0x403275>, <DisassemblerInsn "jne" for 0x403277>]'}, {'block_Idx': 290, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401f58>]'}, {'block_Idx': 95, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40114d>, <DisassemblerInsn "sub" for 0x401154>, <DisassemblerInsn "je" for 0x401157>]'}, {'block_Idx': 63, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f86>, <DisassemblerInsn "mov" for 0x400f8e>, <DisassemblerInsn "mov" for 0x400f96>, <DisassemblerInsn "ror" for 0x400f99>, <DisassemblerInsn "ror" for 0x400f9d>, <DisassemblerInsn "ror" for 0x400fa0>, <DisassemblerInsn "shr" for 0x400fa4>, <DisassemblerInsn "mov" for 0x400fa7>, <DisassemblerInsn "mov" for 0x400fae>, <DisassemblerInsn "mov" for 0x400fb4>, <DisassemblerInsn "xor" for 0x400fb6>, <DisassemblerInsn "shr" for 0x400fbc>, <DisassemblerInsn "cmp" for 0x400fbf>, <DisassemblerInsn "cmovb" for 0x400fc5>, <DisassemblerInsn "mov" for 0x400fc8>, <DisassemblerInsn "xor" for 0x400fcd>, <DisassemblerInsn "cmp" for 0x400fcf>, <DisassemblerInsn "cmovb" for 0x400fd5>, <DisassemblerInsn "mov" for 0x400fd8>, <DisassemblerInsn "and" for 0x400fda>, <DisassemblerInsn "mov" for 0x400fe0>, <DisassemblerInsn "shr" for 0x400fe2>, <DisassemblerInsn "mov" for 0x400fe5>, <DisassemblerInsn "or" for 0x400fe7>, <DisassemblerInsn "cmp" for 0x400fea>, <DisassemblerInsn "cmove" for 0x400fed>, <DisassemblerInsn "cmp" for 0x400ff0>, <DisassemblerInsn "cmove" for 0x400ff3>, <DisassemblerInsn "mov" for 0x400ff6>, <DisassemblerInsn "mov" for 0x400ff8>, <DisassemblerInsn "mov" for 0x400ffa>, <DisassemblerInsn "movzx" for 0x401001>, <DisassemblerInsn "add" for 0x401005>, <DisassemblerInsn "mov" for 0x401007>, <DisassemblerInsn "sub" for 0x40100c>, <DisassemblerInsn "mov" for 0x40100e>, <DisassemblerInsn "cmp" for 0x401015>, <DisassemblerInsn "je" for 0x401018>]'}, {'block_Idx': 221, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4018e0>]'}, {'block_Idx': 214, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b04>, <DisassemblerInsn "mov" for 0x402b0c>, <DisassemblerInsn "mov" for 0x402b13>, <DisassemblerInsn "mov" for 0x402b1b>, <DisassemblerInsn "add" for 0x402b23>, <DisassemblerInsn "movsxd" for 0x402b27>, <DisassemblerInsn "cmp" for 0x402b2a>, <DisassemblerInsn "mov" for 0x402b2d>, <DisassemblerInsn "mov" for 0x402b2f>, <DisassemblerInsn "mov" for 0x402b36>, <DisassemblerInsn "mov" for 0x402b3e>, <DisassemblerInsn "mov" for 0x402b46>, <DisassemblerInsn "mov" for 0x402b4e>, <DisassemblerInsn "jl" for 0x402b55>]'}, {'block_Idx': 54, 'blockInsts': '[<DisassemblerInsn "sub" for 0x400110>, <DisassemblerInsn "mov" for 0x400114>, <DisassemblerInsn "mov" for 0x400119>, <DisassemblerInsn "mov" for 0x40011e>, <DisassemblerInsn "mov" for 0x400123>, <DisassemblerInsn "ror" for 0x400126>, <DisassemblerInsn "ror" for 0x40012a>, <DisassemblerInsn "ror" for 0x40012d>, <DisassemblerInsn "shr" for 0x400131>, <DisassemblerInsn "mov" for 0x400134>, <DisassemblerInsn "mov" for 0x400138>, <DisassemblerInsn "cmp" for 0x40013a>, <DisassemblerInsn "jge" for 0x40013d>]'}, {'block_Idx': 162, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402908>, <DisassemblerInsn "cmp" for 0x40290f>, <DisassemblerInsn "jne" for 0x402912>]'}, {'block_Idx': 118, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401342>, <DisassemblerInsn "mov" for 0x401349>, <DisassemblerInsn "movsxd" for 0x401350>, <DisassemblerInsn "lea" for 0x401353>, <DisassemblerInsn "mov" for 0x40135a>, <DisassemblerInsn "mov" for 0x40135d>, <DisassemblerInsn "mov" for 0x401364>, <DisassemblerInsn "jmp" for 0x40136b>]'}, {'block_Idx': 235, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024fc>, <DisassemblerInsn "mov" for 0x402503>, <DisassemblerInsn "mov" for 0x40250b>, <DisassemblerInsn "mov" for 0x402513>, <DisassemblerInsn "mov" for 0x402515>, <DisassemblerInsn "mov" for 0x402517>, <DisassemblerInsn "mov" for 0x40251e>, <DisassemblerInsn "mov" for 0x402525>, <DisassemblerInsn "jmp" for 0x40252c>]'}, {'block_Idx': 150, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402577>, <DisassemblerInsn "mov" for 0x40257f>, <DisassemblerInsn "mov" for 0x402586>, <DisassemblerInsn "mov" for 0x40258d>, <DisassemblerInsn "mov" for 0x402594>, <DisassemblerInsn "mov" for 0x40259b>, <DisassemblerInsn "neg" for 0x40259d>, <DisassemblerInsn "and" for 0x40259f>, <DisassemblerInsn "mov" for 0x4025a2>, <DisassemblerInsn "mov" for 0x4025a4>, <DisassemblerInsn "lea" for 0x4025a6>, <DisassemblerInsn "mov" for 0x4025aa>, <DisassemblerInsn "mov" for 0x4025ac>, <DisassemblerInsn "mov" for 0x4025ae>, <DisassemblerInsn "sub" for 0x4025b6>, <DisassemblerInsn "ja" for 0x4025b9>]'}, {'block_Idx': 392, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4023ae>]'}, {'block_Idx': 42, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4007a5>, <DisassemblerInsn "mov" for 0x4007ad>, <DisassemblerInsn "mov" for 0x4007b5>, <DisassemblerInsn "mov" for 0x4007bd>, <DisassemblerInsn "mov" for 0x4007c5>, <DisassemblerInsn "mov" for 0x4007cc>, <DisassemblerInsn "mov" for 0x4007d3>, <DisassemblerInsn "add" for 0x4007d5>, <DisassemblerInsn "mov" for 0x4007d8>, <DisassemblerInsn "add" for 0x4007da>, <DisassemblerInsn "mov" for 0x4007dc>, <DisassemblerInsn "cmp" for 0x4007de>, <DisassemblerInsn "setl" for 0x4007e0>, <DisassemblerInsn "cmp" for 0x4007e4>, <DisassemblerInsn "setne" for 0x4007e7>, <DisassemblerInsn "and" for 0x4007eb>, <DisassemblerInsn "test" for 0x4007ee>, <DisassemblerInsn "mov" for 0x4007f2>, <DisassemblerInsn "mov" for 0x4007f4>, <DisassemblerInsn "mov" for 0x4007fb>, <DisassemblerInsn "mov" for 0x400802>, <DisassemblerInsn "mov" for 0x40080a>, <DisassemblerInsn "jne" for 0x400811>]'}, {'block_Idx': 1, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400492>, <DisassemblerInsn "mov" for 0x400499>, <DisassemblerInsn "mov" for 0x4004a1>, <DisassemblerInsn "mov" for 0x4004a9>, <DisassemblerInsn "cmp" for 0x4004ae>, <DisassemblerInsn "cmovg" for 0x4004b1>, <DisassemblerInsn "mov" for 0x4004b4>, <DisassemblerInsn "mov" for 0x4004b6>, <DisassemblerInsn "add" for 0x4004bd>, <DisassemblerInsn "call" for 0x4004c4>]'}, {'block_Idx': 34, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b38>, <DisassemblerInsn "cmp" for 0x400b3f>, <DisassemblerInsn "jle" for 0x400b42>]'}, {'block_Idx': 87, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401057>, <DisassemblerInsn "mov" for 0x40105f>, <DisassemblerInsn "mov" for 0x401067>, <DisassemblerInsn "mov" for 0x40106e>, <DisassemblerInsn "mov" for 0x401075>, <DisassemblerInsn "mov" for 0x40107d>, <DisassemblerInsn "cmp" for 0x401085>, <DisassemblerInsn "jle" for 0x401088>]'}, {'block_Idx': 97, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401184>]'}, {'block_Idx': 134, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40138a>]'}, {'block_Idx': 183, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40288c>, <DisassemblerInsn "mov" for 0x402894>, <DisassemblerInsn "mov" for 0x40289b>, <DisassemblerInsn "mov" for 0x4028a3>, <DisassemblerInsn "mov" for 0x4028aa>, <DisassemblerInsn "mov" for 0x4028b2>, <DisassemblerInsn "add" for 0x4028ba>, <DisassemblerInsn "movsxd" for 0x4028be>, <DisassemblerInsn "cmp" for 0x4028c1>, <DisassemblerInsn "mov" for 0x4028c4>, <DisassemblerInsn "mov" for 0x4028c7>, <DisassemblerInsn "mov" for 0x4028cf>, <DisassemblerInsn "mov" for 0x4028d7>, <DisassemblerInsn "mov" for 0x4028de>, <DisassemblerInsn "mov" for 0x4028e6>, <DisassemblerInsn "mov" for 0x4028ee>, <DisassemblerInsn "mov" for 0x4028f6>, <DisassemblerInsn "jl" for 0x4028fd>]'}, {'block_Idx': 256, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ed6>, <DisassemblerInsn "mov" for 0x401ede>, <DisassemblerInsn "mov" for 0x401ee6>, <DisassemblerInsn "mov" for 0x401eee>, <DisassemblerInsn "mov" for 0x401ef0>, <DisassemblerInsn "mov" for 0x401ef2>, <DisassemblerInsn "mov" for 0x401ef9>, <DisassemblerInsn "mov" for 0x401f00>, <DisassemblerInsn "jmp" for 0x401f08>]'}, {'block_Idx': 232, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401cdf>, <DisassemblerInsn "mov" for 0x401ce7>, <DisassemblerInsn "mov" for 0x401cef>, <DisassemblerInsn "mov" for 0x401cf7>, <DisassemblerInsn "and" for 0x401cfe>, <DisassemblerInsn "mov" for 0x401d01>, <DisassemblerInsn "mov" for 0x401d08>, <DisassemblerInsn "mov" for 0x401d0a>, <DisassemblerInsn "mov" for 0x401d11>, <DisassemblerInsn "mov" for 0x401d16>, <DisassemblerInsn "cmp" for 0x401d1e>, <DisassemblerInsn "je" for 0x401d21>]'}, {'block_Idx': 32, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b79>, <DisassemblerInsn "mov" for 0x400b81>, <DisassemblerInsn "mov" for 0x400b89>, <DisassemblerInsn "mov" for 0x400b8b>, <DisassemblerInsn "mov" for 0x400b8e>, <DisassemblerInsn "mov" for 0x400b96>, <DisassemblerInsn "jmp" for 0x400b9d>]'}, {'block_Idx': 174, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b6c>, <DisassemblerInsn "mov" for 0x402b74>, <DisassemblerInsn "mov" for 0x402b76>, <DisassemblerInsn "cmp" for 0x402b7d>, <DisassemblerInsn "mov" for 0x402b80>, <DisassemblerInsn "jle" for 0x402b87>]'}, {'block_Idx': 158, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40165f>, <DisassemblerInsn "mov" for 0x401666>, <DisassemblerInsn "or" for 0x40166d>, <DisassemblerInsn "sub" for 0x401670>, <DisassemblerInsn "mov" for 0x401673>, <DisassemblerInsn "je" for 0x40167a>]'}, {'block_Idx': 347, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4043b2>, <DisassemblerInsn "add" for 0x4043b9>, <DisassemblerInsn "ret" for 0x4043c0>]'}, {'block_Idx': 255, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f0d>, <DisassemblerInsn "mov" for 0x401f14>, <DisassemblerInsn "mov" for 0x401f1c>, <DisassemblerInsn "mov" for 0x401f24>, <DisassemblerInsn "call" for 0x401f26>]'}, {'block_Idx': 89, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40254a>, <DisassemblerInsn "mov" for 0x402552>, <DisassemblerInsn "mov" for 0x40255c>, <DisassemblerInsn "mov" for 0x402566>, <DisassemblerInsn "mov" for 0x40256b>, <DisassemblerInsn "jmp" for 0x402572>]'}, {'block_Idx': 178, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401699>, <DisassemblerInsn "mov" for 0x4016a1>, <DisassemblerInsn "mov" for 0x4016a9>, <DisassemblerInsn "mov" for 0x4016b0>, <DisassemblerInsn "mov" for 0x4016b7>, <DisassemblerInsn "mov" for 0x4016b9>, <DisassemblerInsn "mov" for 0x4016c0>, <DisassemblerInsn "mov" for 0x4016c3>, <DisassemblerInsn "mov" for 0x4016cb>, <DisassemblerInsn "sar" for 0x4016cd>, <DisassemblerInsn "movsxd" for 0x4016d0>, <DisassemblerInsn "mov" for 0x4016d3>, <DisassemblerInsn "mov" for 0x4016d7>, <DisassemblerInsn "and" for 0x4016d9>, <DisassemblerInsn "movzx" for 0x4016dc>, <DisassemblerInsn "mov" for 0x4016e0>, <DisassemblerInsn "add" for 0x4016e7>, <DisassemblerInsn "mov" for 0x4016ea>, <DisassemblerInsn "mov" for 0x4016f1>, <DisassemblerInsn "mov" for 0x4016f3>, <DisassemblerInsn "shr" for 0x4016f8>, <DisassemblerInsn "mov" for 0x4016fa>, <DisassemblerInsn "and" for 0x401701>, <DisassemblerInsn "cmp" for 0x401703>, <DisassemblerInsn "je" for 0x401706>]'}, {'block_Idx': 240, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023ee>, <DisassemblerInsn "mov" for 0x4023f6>, <DisassemblerInsn "xor" for 0x4023f9>, <DisassemblerInsn "lea" for 0x4023fb>, <DisassemblerInsn "mov" for 0x402402>, <DisassemblerInsn "call" for 0x402404>]'}, {'block_Idx': 341, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401fbf>, <DisassemblerInsn "mov" for 0x401fc6>, <DisassemblerInsn "mov" for 0x401fce>, <DisassemblerInsn "mov" for 0x401fd5>, <DisassemblerInsn "sub" for 0x401fdc>, <DisassemblerInsn "mov" for 0x401fde>, <DisassemblerInsn "add" for 0x401fe0>, <DisassemblerInsn "mov" for 0x401fe3>, <DisassemblerInsn "mov" for 0x401fe5>, <DisassemblerInsn "mov" for 0x401fe8>, <DisassemblerInsn "add" for 0x401fef>, <DisassemblerInsn "mov" for 0x401ff1>, <DisassemblerInsn "cmp" for 0x401ff8>, <DisassemblerInsn "je" for 0x401ffb>]'}, {'block_Idx': 177, 'blockInsts': '[<DisassemblerInsn "lea" for 0x402e15>, <DisassemblerInsn "lea" for 0x402e1c>, <DisassemblerInsn "mov" for 0x402e23>, <DisassemblerInsn "lea" for 0x402e28>, <DisassemblerInsn "call" for 0x402e2f>]'}, {'block_Idx': 251, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401bac>, <DisassemblerInsn "mov" for 0x401bb4>, <DisassemblerInsn "mov" for 0x401bbb>, <DisassemblerInsn "mov" for 0x401bc2>, <DisassemblerInsn "mov" for 0x401bca>, <DisassemblerInsn "shr" for 0x401bd2>, <DisassemblerInsn "mov" for 0x401bd6>, <DisassemblerInsn "add" for 0x401bd9>, <DisassemblerInsn "mov" for 0x401bdd>, <DisassemblerInsn "add" for 0x401bdf>, <DisassemblerInsn "mov" for 0x401be2>, <DisassemblerInsn "shl" for 0x401be9>, <DisassemblerInsn "mov" for 0x401bec>, <DisassemblerInsn "mov" for 0x401bf3>, <DisassemblerInsn "sar" for 0x401bfb>, <DisassemblerInsn "movsxd" for 0x401bff>, <DisassemblerInsn "mov" for 0x401c02>, <DisassemblerInsn "ror" for 0x401c06>, <DisassemblerInsn "ror" for 0x401c0a>, <DisassemblerInsn "ror" for 0x401c0d>, <DisassemblerInsn "shl" for 0x401c11>, <DisassemblerInsn "mov" for 0x401c13>, <DisassemblerInsn "mov" for 0x401c1a>, <DisassemblerInsn "xor" for 0x401c1d>, <DisassemblerInsn "sub" for 0x401c1f>, <DisassemblerInsn "shr" for 0x401c22>, <DisassemblerInsn "mov" for 0x401c24>, <DisassemblerInsn "add" for 0x401c2b>, <DisassemblerInsn "mov" for 0x401c2d>, <DisassemblerInsn "or" for 0x401c2f>, <DisassemblerInsn "mov" for 0x401c31>, <DisassemblerInsn "mov" for 0x401c38>, <DisassemblerInsn "mov" for 0x401c40>, <DisassemblerInsn "mov" for 0x401c48>, <DisassemblerInsn "mov" for 0x401c4f>, <DisassemblerInsn "mov" for 0x401c56>, <DisassemblerInsn "sub" for 0x401c5b>, <DisassemblerInsn "mov" for 0x401c5d>, <DisassemblerInsn "shl" for 0x401c64>, <DisassemblerInsn "mov" for 0x401c66>, <DisassemblerInsn "sar" for 0x401c6d>, <DisassemblerInsn "mov" for 0x401c6f>, <DisassemblerInsn "mov" for 0x401c77>, <DisassemblerInsn "mov" for 0x401c7a>, <DisassemblerInsn "add" for 0x401c7d>, <DisassemblerInsn "mov" for 0x401c81>, <DisassemblerInsn "movsxd" for 0x401c89>, <DisassemblerInsn "cmp" for 0x401c8c>, <DisassemblerInsn "jge" for 0x401c8f>]'}, {'block_Idx': 27, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400d5e>, <DisassemblerInsn "mov" for 0x400d66>, <DisassemblerInsn "add" for 0x400d6d>, <DisassemblerInsn "sub" for 0x400d70>, <DisassemblerInsn "setb" for 0x400d73>, <DisassemblerInsn "mov" for 0x400d76>, <DisassemblerInsn "mov" for 0x400d79>, <DisassemblerInsn "sub" for 0x400d7b>, <DisassemblerInsn "sete" for 0x400d7e>, <DisassemblerInsn "and" for 0x400d81>, <DisassemblerInsn "test" for 0x400d83>, <DisassemblerInsn "mov" for 0x400d86>, <DisassemblerInsn "jne" for 0x400d8d>]'}, {'block_Idx': 266, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d5e>, <DisassemblerInsn "mov" for 0x401d66>, <DisassemblerInsn "mov" for 0x401d6d>, <DisassemblerInsn "mov" for 0x401d74>, <DisassemblerInsn "mov" for 0x401d7c>, <DisassemblerInsn "mov" for 0x401d84>, <DisassemblerInsn "mov" for 0x401d8b>, <DisassemblerInsn "mov" for 0x401d92>, <DisassemblerInsn "sar" for 0x401d94>, <DisassemblerInsn "movsxd" for 0x401d97>, <DisassemblerInsn "mov" for 0x401d9a>, <DisassemblerInsn "ror" for 0x401d9d>, <DisassemblerInsn "ror" for 0x401da1>, <DisassemblerInsn "ror" for 0x401da4>, <DisassemblerInsn "and" for 0x401da8>, <DisassemblerInsn "mov" for 0x401dab>, <DisassemblerInsn "shl" for 0x401db2>, <DisassemblerInsn "mov" for 0x401db4>, <DisassemblerInsn "cmp" for 0x401dbb>, <DisassemblerInsn "jge" for 0x401dbe>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400900>, <DisassemblerInsn "mov" for 0x400908>, <DisassemblerInsn "mov" for 0x400910>, <DisassemblerInsn "mov" for 0x400918>, <DisassemblerInsn "mov" for 0x40091e>, <DisassemblerInsn "add" for 0x400921>, <DisassemblerInsn "mov" for 0x400925>, <DisassemblerInsn "mov" for 0x40092d>, <DisassemblerInsn "add" for 0x400930>, <DisassemblerInsn "mov" for 0x400934>, <DisassemblerInsn "mov" for 0x40093c>, <DisassemblerInsn "mov" for 0x400944>, <DisassemblerInsn "mov" for 0x400949>, <DisassemblerInsn "mov" for 0x400951>, <DisassemblerInsn "mov" for 0x400958>, <DisassemblerInsn "mov" for 0x400960>, <DisassemblerInsn "mov" for 0x400968>, <DisassemblerInsn "mov" for 0x40096f>, <DisassemblerInsn "mov" for 0x400977>, <DisassemblerInsn "sar" for 0x400979>, <DisassemblerInsn "movsxd" for 0x40097c>, <DisassemblerInsn "mov" for 0x40097f>, <DisassemblerInsn "mov" for 0x400982>, <DisassemblerInsn "and" for 0x400984>, <DisassemblerInsn "mov" for 0x400987>, <DisassemblerInsn "movzx" for 0x40098e>, <DisassemblerInsn "mov" for 0x400991>, <DisassemblerInsn "mov" for 0x400998>, <DisassemblerInsn "add" for 0x40099a>, <DisassemblerInsn "mov" for 0x40099d>, <DisassemblerInsn "sar" for 0x40099f>, <DisassemblerInsn "movsxd" for 0x4009a2>, <DisassemblerInsn "mov" for 0x4009a5>, <DisassemblerInsn "ror" for 0x4009a8>, <DisassemblerInsn "ror" for 0x4009ac>, <DisassemblerInsn "ror" for 0x4009af>, <DisassemblerInsn "and" for 0x4009b3>, <DisassemblerInsn "shl" for 0x4009b6>, <DisassemblerInsn "mov" for 0x4009b8>, <DisassemblerInsn "shr" for 0x4009bf>, <DisassemblerInsn "mov" for 0x4009c2>, <DisassemblerInsn "mov" for 0x4009c9>, <DisassemblerInsn "add" for 0x4009cb>, <DisassemblerInsn "sar" for 0x4009ce>, <DisassemblerInsn "movsxd" for 0x4009d1>, <DisassemblerInsn "mov" for 0x4009d4>, <DisassemblerInsn "ror" for 0x4009d7>, <DisassemblerInsn "ror" for 0x4009db>, <DisassemblerInsn "ror" for 0x4009de>, <DisassemblerInsn "shl" for 0x4009e2>, <DisassemblerInsn "mov" for 0x4009e4>, <DisassemblerInsn "shr" for 0x4009eb>, <DisassemblerInsn "mov" for 0x4009ee>, <DisassemblerInsn "add" for 0x4009f1>, <DisassemblerInsn "shl" for 0x4009f5>, <DisassemblerInsn "sar" for 0x4009f8>, <DisassemblerInsn "movsxd" for 0x4009fc>, <DisassemblerInsn "mov" for 0x4009ff>, <DisassemblerInsn "ror" for 0x400a03>, <DisassemblerInsn "ror" for 0x400a07>, <DisassemblerInsn "ror" for 0x400a0a>, <DisassemblerInsn "shl" for 0x400a0e>, <DisassemblerInsn "mov" for 0x400a10>, <DisassemblerInsn "shr" for 0x400a18>, <DisassemblerInsn "add" for 0x400a1b>, <DisassemblerInsn "mov" for 0x400a1e>, <DisassemblerInsn "mov" for 0x400a25>, <DisassemblerInsn "or" for 0x400a27>, <DisassemblerInsn "mov" for 0x400a29>, <DisassemblerInsn "shl" for 0x400a30>, <DisassemblerInsn "mov" for 0x400a33>, <DisassemblerInsn "add" for 0x400a3a>, <DisassemblerInsn "mov" for 0x400a3c>, <DisassemblerInsn "mov" for 0x400a3e>, <DisassemblerInsn "cmp" for 0x400a45>, <DisassemblerInsn "jle" for 0x400a47>]'}, {'block_Idx': 219, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019de>, <DisassemblerInsn "mov" for 0x4019e6>, <DisassemblerInsn "mov" for 0x4019ed>, <DisassemblerInsn "mov" for 0x4019f4>, <DisassemblerInsn "mov" for 0x4019fc>, <DisassemblerInsn "shr" for 0x401a04>, <DisassemblerInsn "mov" for 0x401a08>, <DisassemblerInsn "add" for 0x401a0b>, <DisassemblerInsn "mov" for 0x401a0f>, <DisassemblerInsn "add" for 0x401a11>, <DisassemblerInsn "mov" for 0x401a14>, <DisassemblerInsn "shl" for 0x401a1b>, <DisassemblerInsn "mov" for 0x401a1e>, <DisassemblerInsn "mov" for 0x401a25>, <DisassemblerInsn "sar" for 0x401a2d>, <DisassemblerInsn "movsxd" for 0x401a31>, <DisassemblerInsn "mov" for 0x401a34>, <DisassemblerInsn "ror" for 0x401a38>, <DisassemblerInsn "ror" for 0x401a3c>, <DisassemblerInsn "ror" for 0x401a3f>, <DisassemblerInsn "shl" for 0x401a43>, <DisassemblerInsn "mov" for 0x401a45>, <DisassemblerInsn "mov" for 0x401a4c>, <DisassemblerInsn "xor" for 0x401a4f>, <DisassemblerInsn "sub" for 0x401a51>, <DisassemblerInsn "shr" for 0x401a54>, <DisassemblerInsn "mov" for 0x401a56>, <DisassemblerInsn "add" for 0x401a5d>, <DisassemblerInsn "mov" for 0x401a5f>, <DisassemblerInsn "or" for 0x401a61>, <DisassemblerInsn "mov" for 0x401a63>, <DisassemblerInsn "mov" for 0x401a6a>, <DisassemblerInsn "mov" for 0x401a72>, <DisassemblerInsn "mov" for 0x401a79>, <DisassemblerInsn "mov" for 0x401a80>, <DisassemblerInsn "sub" for 0x401a85>, <DisassemblerInsn "mov" for 0x401a87>, <DisassemblerInsn "shl" for 0x401a8e>, <DisassemblerInsn "mov" for 0x401a90>, <DisassemblerInsn "sar" for 0x401a97>, <DisassemblerInsn "mov" for 0x401a99>, <DisassemblerInsn "cmp" for 0x401aa0>, <DisassemblerInsn "jle" for 0x401aa3>]'}, {'block_Idx': 354, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4021ee>]'}, {'block_Idx': 391, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4022e8>, <DisassemblerInsn "mov" for 0x4022f0>, <DisassemblerInsn "mov" for 0x4022f7>, <DisassemblerInsn "mov" for 0x4022fe>, <DisassemblerInsn "mov" for 0x402305>, <DisassemblerInsn "mov" for 0x40230d>, <DisassemblerInsn "mov" for 0x402315>, <DisassemblerInsn "add" for 0x40231d>, <DisassemblerInsn "mov" for 0x402321>, <DisassemblerInsn "mov" for 0x402328>, <DisassemblerInsn "add" for 0x40232a>, <DisassemblerInsn "mov" for 0x40232c>, <DisassemblerInsn "mov" for 0x402333>, <DisassemblerInsn "add" for 0x402335>, <DisassemblerInsn "mov" for 0x402337>, <DisassemblerInsn "mov" for 0x40233e>, <DisassemblerInsn "add" for 0x402340>, <DisassemblerInsn "mov" for 0x402343>, <DisassemblerInsn "mov" for 0x40234a>, <DisassemblerInsn "add" for 0x40234e>, <DisassemblerInsn "mov" for 0x402352>, <DisassemblerInsn "cmp" for 0x40235a>, <DisassemblerInsn "mov" for 0x40235d>, <DisassemblerInsn "mov" for 0x402365>, <DisassemblerInsn "mov" for 0x40236c>, <DisassemblerInsn "mov" for 0x402373>, <DisassemblerInsn "mov" for 0x40237a>, <DisassemblerInsn "je" for 0x402381>]'}, {'block_Idx': 184, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4026e0>, <DisassemblerInsn "mov" for 0x4026e8>, <DisassemblerInsn "mov" for 0x4026f0>, <DisassemblerInsn "mov" for 0x4026f8>, <DisassemblerInsn "mov" for 0x402700>, <DisassemblerInsn "mov" for 0x402708>, <DisassemblerInsn "mov" for 0x402710>, <DisassemblerInsn "mov" for 0x402718>, <DisassemblerInsn "mov" for 0x402720>, <DisassemblerInsn "mov" for 0x402728>, <DisassemblerInsn "mov" for 0x402730>, <DisassemblerInsn "mov" for 0x402738>, <DisassemblerInsn "mov" for 0x402740>, <DisassemblerInsn "mov" for 0x402742>, <DisassemblerInsn "mov" for 0x402747>, <DisassemblerInsn "mov" for 0x40274a>, <DisassemblerInsn "shl" for 0x40274c>, <DisassemblerInsn "mov" for 0x40274e>, <DisassemblerInsn "cmp" for 0x402755>, <DisassemblerInsn "je" for 0x402758>]'}, {'block_Idx': 60, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c73>, <DisassemblerInsn "mov" for 0x400c7b>, <DisassemblerInsn "add" for 0x400c82>, <DisassemblerInsn "mov" for 0x400c85>, <DisassemblerInsn "mov" for 0x400c8c>, <DisassemblerInsn "mov" for 0x400c8e>, <DisassemblerInsn "cdq" for 0x400c93>, <DisassemblerInsn "idiv" for 0x400c94>, <DisassemblerInsn "mov" for 0x400c96>, <DisassemblerInsn "mov" for 0x400c9d>, <DisassemblerInsn "mov" for 0x400c9f>, <DisassemblerInsn "add" for 0x400ca6>, <DisassemblerInsn "cmp" for 0x400ca9>, <DisassemblerInsn "mov" for 0x400cab>, <DisassemblerInsn "jl" for 0x400cb2>]'}, {'block_Idx': 233, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4023b3>, <DisassemblerInsn "cmp" for 0x4023ba>, <DisassemblerInsn "jle" for 0x4023bd>]'}, {'block_Idx': 147, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403218>, <DisassemblerInsn "mov" for 0x40321b>, <DisassemblerInsn "mov" for 0x403220>, <DisassemblerInsn "add" for 0x403227>, <DisassemblerInsn "ret" for 0x40322b>]'}, {'block_Idx': 44, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400958>, <DisassemblerInsn "mov" for 0x400960>, <DisassemblerInsn "mov" for 0x400968>, <DisassemblerInsn "mov" for 0x40096f>, <DisassemblerInsn "mov" for 0x400977>, <DisassemblerInsn "sar" for 0x400979>, <DisassemblerInsn "movsxd" for 0x40097c>, <DisassemblerInsn "mov" for 0x40097f>, <DisassemblerInsn "mov" for 0x400982>, <DisassemblerInsn "and" for 0x400984>, <DisassemblerInsn "mov" for 0x400987>, <DisassemblerInsn "movzx" for 0x40098e>, <DisassemblerInsn "mov" for 0x400991>, <DisassemblerInsn "mov" for 0x400998>, <DisassemblerInsn "add" for 0x40099a>, <DisassemblerInsn "mov" for 0x40099d>, <DisassemblerInsn "sar" for 0x40099f>, <DisassemblerInsn "movsxd" for 0x4009a2>, <DisassemblerInsn "mov" for 0x4009a5>, <DisassemblerInsn "ror" for 0x4009a8>, <DisassemblerInsn "ror" for 0x4009ac>, <DisassemblerInsn "ror" for 0x4009af>, <DisassemblerInsn "and" for 0x4009b3>, <DisassemblerInsn "shl" for 0x4009b6>, <DisassemblerInsn "mov" for 0x4009b8>, <DisassemblerInsn "shr" for 0x4009bf>, <DisassemblerInsn "mov" for 0x4009c2>, <DisassemblerInsn "mov" for 0x4009c9>, <DisassemblerInsn "add" for 0x4009cb>, <DisassemblerInsn "sar" for 0x4009ce>, <DisassemblerInsn "movsxd" for 0x4009d1>, <DisassemblerInsn "mov" for 0x4009d4>, <DisassemblerInsn "ror" for 0x4009d7>, <DisassemblerInsn "ror" for 0x4009db>, <DisassemblerInsn "ror" for 0x4009de>, <DisassemblerInsn "shl" for 0x4009e2>, <DisassemblerInsn "mov" for 0x4009e4>, <DisassemblerInsn "shr" for 0x4009eb>, <DisassemblerInsn "mov" for 0x4009ee>, <DisassemblerInsn "add" for 0x4009f1>, <DisassemblerInsn "shl" for 0x4009f5>, <DisassemblerInsn "sar" for 0x4009f8>, <DisassemblerInsn "movsxd" for 0x4009fc>, <DisassemblerInsn "mov" for 0x4009ff>, <DisassemblerInsn "ror" for 0x400a03>, <DisassemblerInsn "ror" for 0x400a07>, <DisassemblerInsn "ror" for 0x400a0a>, <DisassemblerInsn "shl" for 0x400a0e>, <DisassemblerInsn "mov" for 0x400a10>, <DisassemblerInsn "shr" for 0x400a18>, <DisassemblerInsn "add" for 0x400a1b>, <DisassemblerInsn "mov" for 0x400a1e>, <DisassemblerInsn "mov" for 0x400a25>, <DisassemblerInsn "or" for 0x400a27>, <DisassemblerInsn "mov" for 0x400a29>, <DisassemblerInsn "shl" for 0x400a30>, <DisassemblerInsn "mov" for 0x400a33>, <DisassemblerInsn "add" for 0x400a3a>, <DisassemblerInsn "mov" for 0x400a3c>, <DisassemblerInsn "mov" for 0x400a3e>, <DisassemblerInsn "cmp" for 0x400a45>, <DisassemblerInsn "jle" for 0x400a47>]'}, {'block_Idx': 367, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40219e>, <DisassemblerInsn "mov" for 0x4021a5>, <DisassemblerInsn "mov" for 0x4021ad>, <DisassemblerInsn "mov" for 0x4021b5>, <DisassemblerInsn "add" for 0x4021bd>, <DisassemblerInsn "mov" for 0x4021c0>, <DisassemblerInsn "mov" for 0x4021c7>, <DisassemblerInsn "add" for 0x4021ca>, <DisassemblerInsn "mov" for 0x4021ce>, <DisassemblerInsn "cmp" for 0x4021d6>, <DisassemblerInsn "mov" for 0x4021d9>, <DisassemblerInsn "mov" for 0x4021e1>, <DisassemblerInsn "je" for 0x4021e8>]'}, {'block_Idx': 98, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401189>, <DisassemblerInsn "mov" for 0x401191>, <DisassemblerInsn "mov" for 0x401198>, <DisassemblerInsn "mov" for 0x4011a0>, <DisassemblerInsn "shr" for 0x4011a8>, <DisassemblerInsn "and" for 0x4011ac>, <DisassemblerInsn "mov" for 0x4011b3>, <DisassemblerInsn "ror" for 0x4011b6>, <DisassemblerInsn "ror" for 0x4011ba>, <DisassemblerInsn "ror" for 0x4011bd>, <DisassemblerInsn "shr" for 0x4011c1>, <DisassemblerInsn "add" for 0x4011c4>, <DisassemblerInsn "mov" for 0x4011c7>, <DisassemblerInsn "add" for 0x4011c9>, <DisassemblerInsn "mov" for 0x4011cc>, <DisassemblerInsn "mov" for 0x4011d3>, <DisassemblerInsn "jmp" for 0x4011da>]'}, {'block_Idx': 139, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40138c>, <DisassemblerInsn "sub" for 0x401393>, <DisassemblerInsn "je" for 0x401396>]'}, {'block_Idx': 171, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402914>, <DisassemblerInsn "mov" for 0x40291c>, <DisassemblerInsn "mov" for 0x40291e>, <DisassemblerInsn "cmp" for 0x402925>, <DisassemblerInsn "mov" for 0x402928>, <DisassemblerInsn "jle" for 0x40292f>]'}, {'block_Idx': 203, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402a3b>, <DisassemblerInsn "mov" for 0x402a43>, <DisassemblerInsn "mov" for 0x402a4b>, <DisassemblerInsn "mov" for 0x402a53>, <DisassemblerInsn "mov" for 0x402a5a>, <DisassemblerInsn "mov" for 0x402a61>, <DisassemblerInsn "mov" for 0x402a69>, <DisassemblerInsn "sub" for 0x402a6c>, <DisassemblerInsn "mov" for 0x402a6e>, <DisassemblerInsn "shl" for 0x402a70>, <DisassemblerInsn "mov" for 0x402a72>, <DisassemblerInsn "mov" for 0x402a7a>, <DisassemblerInsn "add" for 0x402a7d>, <DisassemblerInsn "mov" for 0x402a81>, <DisassemblerInsn "mov" for 0x402a84>, <DisassemblerInsn "mov" for 0x402a86>, <DisassemblerInsn "mov" for 0x402a8d>, <DisassemblerInsn "mov" for 0x402a95>, <DisassemblerInsn "jmp" for 0x402a9d>]'}, {'block_Idx': 164, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402b60>, <DisassemblerInsn "cmp" for 0x402b67>, <DisassemblerInsn "jne" for 0x402b6a>]'}, {'block_Idx': 371, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40238c>, <DisassemblerInsn "mov" for 0x402393>, <DisassemblerInsn "mov" for 0x40239b>, <DisassemblerInsn "xor" for 0x40239e>, <DisassemblerInsn "lea" for 0x4023a0>, <DisassemblerInsn "mov" for 0x4023a7>, <DisassemblerInsn "call" for 0x4023a9>]'}, {'block_Idx': 370, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40204b>, <DisassemblerInsn "cmp" for 0x402052>, <DisassemblerInsn "jle" for 0x402055>]'}, {'block_Idx': 339, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402172>, <DisassemblerInsn "mov" for 0x402179>, <DisassemblerInsn "mov" for 0x402180>, <DisassemblerInsn "mov" for 0x402182>, <DisassemblerInsn "mov" for 0x40218a>, <DisassemblerInsn "mov" for 0x40218f>, <DisassemblerInsn "mov" for 0x402197>, <DisassemblerInsn "mov" for 0x40219e>, <DisassemblerInsn "mov" for 0x4021a5>, <DisassemblerInsn "mov" for 0x4021ad>, <DisassemblerInsn "mov" for 0x4021b5>, <DisassemblerInsn "add" for 0x4021bd>, <DisassemblerInsn "mov" for 0x4021c0>, <DisassemblerInsn "mov" for 0x4021c7>, <DisassemblerInsn "add" for 0x4021ca>, <DisassemblerInsn "mov" for 0x4021ce>, <DisassemblerInsn "cmp" for 0x4021d6>, <DisassemblerInsn "mov" for 0x4021d9>, <DisassemblerInsn "mov" for 0x4021e1>, <DisassemblerInsn "je" for 0x4021e8>]'}, {'block_Idx': 209, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402e9e>, <DisassemblerInsn "mov" for 0x402ea6>, <DisassemblerInsn "mov" for 0x402eab>, <DisassemblerInsn "mov" for 0x402eaf>, <DisassemblerInsn "mov" for 0x402eb7>, <DisassemblerInsn "mov" for 0x402ebb>, <DisassemblerInsn "mov" for 0x402ebd>, <DisassemblerInsn "shl" for 0x402ebf>, <DisassemblerInsn "mov" for 0x402ec1>, <DisassemblerInsn "mov" for 0x402ec6>, <DisassemblerInsn "add" for 0x402ec9>, <DisassemblerInsn "mov" for 0x402ecd>, <DisassemblerInsn "mov" for 0x402ed0>, <DisassemblerInsn "mov" for 0x402ed2>, <DisassemblerInsn "mov" for 0x402ed6>, <DisassemblerInsn "mov" for 0x402edb>, <DisassemblerInsn "jmp" for 0x402ee0>]'}, {'block_Idx': 207, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c8e>, <DisassemblerInsn "mov" for 0x402c96>, <DisassemblerInsn "mov" for 0x402c9e>, <DisassemblerInsn "mov" for 0x402ca5>, <DisassemblerInsn "mov" for 0x402cad>, <DisassemblerInsn "mov" for 0x402cb4>, <DisassemblerInsn "mov" for 0x402cb6>, <DisassemblerInsn "shl" for 0x402cb8>, <DisassemblerInsn "mov" for 0x402cba>, <DisassemblerInsn "mov" for 0x402cc2>, <DisassemblerInsn "add" for 0x402cc5>, <DisassemblerInsn "mov" for 0x402cc9>, <DisassemblerInsn "mov" for 0x402ccc>, <DisassemblerInsn "mov" for 0x402cce>, <DisassemblerInsn "mov" for 0x402cd5>, <DisassemblerInsn "mov" for 0x402cdd>, <DisassemblerInsn "jmp" for 0x402ce5>]'}, {'block_Idx': 18, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400cbd>, <DisassemblerInsn "mov" for 0x400cc5>, <DisassemblerInsn "mov" for 0x400ccd>, <DisassemblerInsn "mov" for 0x400cd4>, <DisassemblerInsn "shr" for 0x400cd6>, <DisassemblerInsn "mov" for 0x400cd9>, <DisassemblerInsn "shl" for 0x400ce0>, <DisassemblerInsn "shr" for 0x400ce3>, <DisassemblerInsn "mov" for 0x400ce6>, <DisassemblerInsn "mov" for 0x400ced>, <DisassemblerInsn "add" for 0x400cf0>, <DisassemblerInsn "mov" for 0x400cf4>, <DisassemblerInsn "mov" for 0x400cfc>, <DisassemblerInsn "ror" for 0x400cff>, <DisassemblerInsn "ror" for 0x400d03>, <DisassemblerInsn "ror" for 0x400d06>, <DisassemblerInsn "mov" for 0x400d0a>, <DisassemblerInsn "shr" for 0x400d11>, <DisassemblerInsn "mov" for 0x400d14>, <DisassemblerInsn "mov" for 0x400d1b>, <DisassemblerInsn "cmp" for 0x400d21>, <DisassemblerInsn "jge" for 0x400d24>]'}, {'block_Idx': 86, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401140>, <DisassemblerInsn "test" for 0x401147>, <DisassemblerInsn "je" for 0x401149>]'}, {'block_Idx': 92, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40114b>]'}, {'block_Idx': 189, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401898>, <DisassemblerInsn "mov" for 0x40189f>, <DisassemblerInsn "mov" for 0x4018a6>, <DisassemblerInsn "mov" for 0x4018ad>, <DisassemblerInsn "mov" for 0x4018b4>, <DisassemblerInsn "mov" for 0x4018bb>, <DisassemblerInsn "cmp" for 0x4018c2>, <DisassemblerInsn "jle" for 0x4018c5>]'}, {'block_Idx': 117, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4014a6>, <DisassemblerInsn "mov" for 0x4014ae>, <DisassemblerInsn "mov" for 0x4014b5>, <DisassemblerInsn "mov" for 0x4014bc>, <DisassemblerInsn "add" for 0x4014c3>, <DisassemblerInsn "mov" for 0x4014c6>, <DisassemblerInsn "xor" for 0x4014c8>, <DisassemblerInsn "call" for 0x4014ca>]'}, {'block_Idx': 357, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402001>, <DisassemblerInsn "mov" for 0x402008>, <DisassemblerInsn "mov" for 0x40200f>, <DisassemblerInsn "mov" for 0x402016>, <DisassemblerInsn "mov" for 0x40201e>, <DisassemblerInsn "shl" for 0x402025>, <DisassemblerInsn "mov" for 0x402027>, <DisassemblerInsn "add" for 0x40202a>, <DisassemblerInsn "mov" for 0x40202e>, <DisassemblerInsn "mov" for 0x402031>, <DisassemblerInsn "add" for 0x402035>, <DisassemblerInsn "add" for 0x402037>, <DisassemblerInsn "sub" for 0x402039>, <DisassemblerInsn "mov" for 0x40203b>, <DisassemblerInsn "cmp" for 0x402042>, <DisassemblerInsn "jne" for 0x402045>]'}, {'block_Idx': 206, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402ce7>, <DisassemblerInsn "mov" for 0x402cef>, <DisassemblerInsn "mov" for 0x402cf6>, <DisassemblerInsn "mov" for 0x402cfe>, <DisassemblerInsn "mov" for 0x402d05>, <DisassemblerInsn "mov" for 0x402d0c>, <DisassemblerInsn "mov" for 0x402d14>, <DisassemblerInsn "shl" for 0x402d18>, <DisassemblerInsn "mov" for 0x402d1a>, <DisassemblerInsn "mov" for 0x402d1c>, <DisassemblerInsn "mov" for 0x402d1f>, <DisassemblerInsn "add" for 0x402d22>, <DisassemblerInsn "mov" for 0x402d26>, <DisassemblerInsn "mov" for 0x402d2a>, <DisassemblerInsn "mov" for 0x402d31>, <DisassemblerInsn "mov" for 0x402d39>, <DisassemblerInsn "mov" for 0x402d41>, <DisassemblerInsn "mov" for 0x402d49>, <DisassemblerInsn "mov" for 0x402d50>, <DisassemblerInsn "mov" for 0x402d58>, <DisassemblerInsn "add" for 0x402d60>, <DisassemblerInsn "movsxd" for 0x402d64>, <DisassemblerInsn "cmp" for 0x402d67>, <DisassemblerInsn "mov" for 0x402d6a>, <DisassemblerInsn "mov" for 0x402d6c>, <DisassemblerInsn "mov" for 0x402d73>, <DisassemblerInsn "mov" for 0x402d7b>, <DisassemblerInsn "mov" for 0x402d83>, <DisassemblerInsn "mov" for 0x402d8b>, <DisassemblerInsn "jl" for 0x402d92>]'}, {'block_Idx': 200, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401862>, <DisassemblerInsn "mov" for 0x401869>, <DisassemblerInsn "mov" for 0x401870>, <DisassemblerInsn "mov" for 0x401878>, <DisassemblerInsn "sub" for 0x40187f>, <DisassemblerInsn "mov" for 0x401881>, <DisassemblerInsn "mov" for 0x401883>, <DisassemblerInsn "mov" for 0x40188a>, <DisassemblerInsn "mov" for 0x401891>, <DisassemblerInsn "mov" for 0x401898>, <DisassemblerInsn "mov" for 0x40189f>, <DisassemblerInsn "mov" for 0x4018a6>, <DisassemblerInsn "mov" for 0x4018ad>, <DisassemblerInsn "mov" for 0x4018b4>, <DisassemblerInsn "mov" for 0x4018bb>, <DisassemblerInsn "cmp" for 0x4018c2>, <DisassemblerInsn "jle" for 0x4018c5>]'}, {'block_Idx': 64, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400f69>, <DisassemblerInsn "xor" for 0x400f71>, <DisassemblerInsn "lea" for 0x400f73>, <DisassemblerInsn "mov" for 0x400f7a>, <DisassemblerInsn "call" for 0x400f7c>]'}, {'block_Idx': 355, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402123>, <DisassemblerInsn "mov" for 0x40212a>, <DisassemblerInsn "mov" for 0x402131>, <DisassemblerInsn "mov" for 0x402138>, <DisassemblerInsn "mov" for 0x40213a>, <DisassemblerInsn "mov" for 0x402142>, <DisassemblerInsn "mov" for 0x402147>, <DisassemblerInsn "mov" for 0x40214f>, <DisassemblerInsn "mov" for 0x402156>, <DisassemblerInsn "jmp" for 0x40215d>]'}, {'block_Idx': 243, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40244e>, <DisassemblerInsn "mov" for 0x402456>, <DisassemblerInsn "mov" for 0x40245e>, <DisassemblerInsn "mov" for 0x402465>, <DisassemblerInsn "shl" for 0x402468>, <DisassemblerInsn "mov" for 0x40246a>, <DisassemblerInsn "mov" for 0x402472>, <DisassemblerInsn "mov" for 0x402479>, <DisassemblerInsn "add" for 0x40247c>, <DisassemblerInsn "mov" for 0x402480>, <DisassemblerInsn "movsxd" for 0x402488>, <DisassemblerInsn "cmp" for 0x40248b>, <DisassemblerInsn "mov" for 0x40248e>, <DisassemblerInsn "jl" for 0x402496>]'}, {'block_Idx': 194, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40279d>, <DisassemblerInsn "mov" for 0x4027a5>, <DisassemblerInsn "mov" for 0x4027ac>, <DisassemblerInsn "mov" for 0x4027b4>, <DisassemblerInsn "mov" for 0x4027bb>, <DisassemblerInsn "mov" for 0x4027be>, <DisassemblerInsn "add" for 0x4027c1>, <DisassemblerInsn "mov" for 0x4027c5>, <DisassemblerInsn "mov" for 0x4027c8>, <DisassemblerInsn "mov" for 0x4027cf>, <DisassemblerInsn "mov" for 0x4027d7>, <DisassemblerInsn "mov" for 0x4027df>, <DisassemblerInsn "mov" for 0x4027e7>, <DisassemblerInsn "mov" for 0x4027ee>, <DisassemblerInsn "mov" for 0x4027f6>, <DisassemblerInsn "mov" for 0x4027fe>, <DisassemblerInsn "mov" for 0x402806>, <DisassemblerInsn "mov" for 0x40280e>, <DisassemblerInsn "add" for 0x402815>, <DisassemblerInsn "movsxd" for 0x402819>, <DisassemblerInsn "cmp" for 0x40281c>, <DisassemblerInsn "mov" for 0x40281f>, <DisassemblerInsn "mov" for 0x402826>, <DisassemblerInsn "mov" for 0x40282e>, <DisassemblerInsn "mov" for 0x402836>, <DisassemblerInsn "jl" for 0x40283e>]'}, {'block_Idx': 197, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402e34>, <DisassemblerInsn "mov" for 0x402e3c>, <DisassemblerInsn "mov" for 0x402e44>, <DisassemblerInsn "mov" for 0x402e49>, <DisassemblerInsn "mov" for 0x402e4e>, <DisassemblerInsn "mov" for 0x402e53>, <DisassemblerInsn "mov" for 0x402e58>, <DisassemblerInsn "mov" for 0x402e5d>, <DisassemblerInsn "mov" for 0x402e65>, <DisassemblerInsn "mov" for 0x402e6a>, <DisassemblerInsn "mov" for 0x402e6f>, <DisassemblerInsn "mov" for 0x402e74>, <DisassemblerInsn "mov" for 0x402e79>, <DisassemblerInsn "mov" for 0x402e7c>, <DisassemblerInsn "mov" for 0x402e7f>, <DisassemblerInsn "mov" for 0x402e81>, <DisassemblerInsn "sar" for 0x402e83>, <DisassemblerInsn "sub" for 0x402e85>, <DisassemblerInsn "mov" for 0x402e87>, <DisassemblerInsn "add" for 0x402e8b>, <DisassemblerInsn "mov" for 0x402e8d>, <DisassemblerInsn "mov" for 0x402e8f>, <DisassemblerInsn "shl" for 0x402e93>, <DisassemblerInsn "mov" for 0x402e95>, <DisassemblerInsn "cmp" for 0x402e99>, <DisassemblerInsn "je" for 0x402e9c>]'}, {'block_Idx': 22, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400714>, <DisassemblerInsn "mov" for 0x40071b>, <DisassemblerInsn "mov" for 0x400722>, <DisassemblerInsn "mov" for 0x40072a>, <DisassemblerInsn "mov" for 0x400731>, <DisassemblerInsn "mov" for 0x400733>, <DisassemblerInsn "add" for 0x400736>, <DisassemblerInsn "mov" for 0x400739>, <DisassemblerInsn "mov" for 0x40073b>, <DisassemblerInsn "call" for 0x40073d>]'}, {'block_Idx': 33, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400adc>, <DisassemblerInsn "cmp" for 0x400ae4>, <DisassemblerInsn "jne" for 0x400ae7>]'}, {'block_Idx': 246, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401dc0>, <DisassemblerInsn "mov" for 0x401dc7>, <DisassemblerInsn "mov" for 0x401dce>, <DisassemblerInsn "mov" for 0x401dd5>, <DisassemblerInsn "xor" for 0x401dd8>, <DisassemblerInsn "sub" for 0x401dda>, <DisassemblerInsn "shr" for 0x401ddd>, <DisassemblerInsn "mov" for 0x401ddf>, <DisassemblerInsn "add" for 0x401de7>, <DisassemblerInsn "mov" for 0x401de9>, <DisassemblerInsn "mov" for 0x401deb>, <DisassemblerInsn "jmp" for 0x401df2>]'}, {'block_Idx': 24, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ad0>, <DisassemblerInsn "cmp" for 0x400ad7>, <DisassemblerInsn "jne" for 0x400ada>]'}, {'block_Idx': 302, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x401f2b>, <DisassemblerInsn "jl" for 0x401f2e>]'}, {'block_Idx': 107, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401167>]'}, {'block_Idx': 199, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018c7>, <DisassemblerInsn "mov" for 0x4018cf>, <DisassemblerInsn "lea" for 0x4018d2>, <DisassemblerInsn "xor" for 0x4018d9>, <DisassemblerInsn "call" for 0x4018db>]'}, {'block_Idx': 105, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401289>, <DisassemblerInsn "mov" for 0x401291>, <DisassemblerInsn "mov" for 0x401298>, <DisassemblerInsn "xor" for 0x4012a0>, <DisassemblerInsn "lea" for 0x4012a2>, <DisassemblerInsn "mov" for 0x4012a9>, <DisassemblerInsn "call" for 0x4012ab>]'}, {'block_Idx': 237, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401915>, <DisassemblerInsn "mov" for 0x40191c>, <DisassemblerInsn "mov" for 0x401923>, <DisassemblerInsn "mov" for 0x40192b>, <DisassemblerInsn "add" for 0x401933>, <DisassemblerInsn "shl" for 0x401937>, <DisassemblerInsn "add" for 0x40193b>, <DisassemblerInsn "mov" for 0x40193e>, <DisassemblerInsn "xor" for 0x401946>, <DisassemblerInsn "mov" for 0x401948>, <DisassemblerInsn "mov" for 0x40194f>, <DisassemblerInsn "mov" for 0x401956>, <DisassemblerInsn "jmp" for 0x40195e>]'}, {'block_Idx': 217, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402f21>, <DisassemblerInsn "mov" for 0x402f26>, <DisassemblerInsn "mov" for 0x402f2a>, <DisassemblerInsn "mov" for 0x402f2f>, <DisassemblerInsn "add" for 0x402f34>, <DisassemblerInsn "movsxd" for 0x402f38>, <DisassemblerInsn "cmp" for 0x402f3b>, <DisassemblerInsn "mov" for 0x402f3e>, <DisassemblerInsn "mov" for 0x402f40>, <DisassemblerInsn "mov" for 0x402f44>, <DisassemblerInsn "mov" for 0x402f49>, <DisassemblerInsn "mov" for 0x402f4e>, <DisassemblerInsn "mov" for 0x402f56>, <DisassemblerInsn "jl" for 0x402f5d>]'}, {'block_Idx': 230, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401b0e>]'}, {'block_Idx': 215, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402d98>]'}, {'block_Idx': 71, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401123>, <DisassemblerInsn "xor" for 0x40112b>, <DisassemblerInsn "lea" for 0x40112d>, <DisassemblerInsn "mov" for 0x401134>, <DisassemblerInsn "call" for 0x401136>]'}, {'block_Idx': 49, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e23>, <DisassemblerInsn "add" for 0x400e2b>, <DisassemblerInsn "mov" for 0x400e2f>, <DisassemblerInsn "jmp" for 0x400e37>]'}, {'block_Idx': 216, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d41>, <DisassemblerInsn "mov" for 0x402d49>, <DisassemblerInsn "mov" for 0x402d50>, <DisassemblerInsn "mov" for 0x402d58>, <DisassemblerInsn "add" for 0x402d60>, <DisassemblerInsn "movsxd" for 0x402d64>, <DisassemblerInsn "cmp" for 0x402d67>, <DisassemblerInsn "mov" for 0x402d6a>, <DisassemblerInsn "mov" for 0x402d6c>, <DisassemblerInsn "mov" for 0x402d73>, <DisassemblerInsn "mov" for 0x402d7b>, <DisassemblerInsn "mov" for 0x402d83>, <DisassemblerInsn "mov" for 0x402d8b>, <DisassemblerInsn "jl" for 0x402d92>]'}, {'block_Idx': 444, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4039ab>, <DisassemblerInsn "mov" for 0x4039af>, <DisassemblerInsn "mov" for 0x4039b5>, <DisassemblerInsn "sar" for 0x4039bb>, <DisassemblerInsn "mov" for 0x4039bd>, <DisassemblerInsn "movsxd" for 0x4039c3>, <DisassemblerInsn "add" for 0x4039c6>, <DisassemblerInsn "mov" for 0x4039c9>, <DisassemblerInsn "xor" for 0x4039cc>, <DisassemblerInsn "mov" for 0x4039ce>, <DisassemblerInsn "mov" for 0x4039d4>, <DisassemblerInsn "mov" for 0x4039da>, <DisassemblerInsn "pop" for 0x4039dd>, <DisassemblerInsn "ret" for 0x4039de>]'}, {'block_Idx': 181, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402935>, <DisassemblerInsn "mov" for 0x40293d>, <DisassemblerInsn "mov" for 0x402945>, <DisassemblerInsn "mov" for 0x40294c>, <DisassemblerInsn "mov" for 0x402954>, <DisassemblerInsn "mov" for 0x402958>, <DisassemblerInsn "mov" for 0x402960>, <DisassemblerInsn "mov" for 0x402964>, <DisassemblerInsn "xor" for 0x40296c>, <DisassemblerInsn "mov" for 0x40296e>, <DisassemblerInsn "mov" for 0x402975>, <DisassemblerInsn "mov" for 0x40297d>, <DisassemblerInsn "mov" for 0x402985>, <DisassemblerInsn "jmp" for 0x40298d>]'}, {'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4006d2>, <DisassemblerInsn "mov" for 0x4006d9>, <DisassemblerInsn "mov" for 0x4006e0>, <DisassemblerInsn "mov" for 0x4006e7>, <DisassemblerInsn "mov" for 0x4006ee>, <DisassemblerInsn "mov" for 0x4006f5>, <DisassemblerInsn "mov" for 0x4006fc>, <DisassemblerInsn "add" for 0x4006fe>, <DisassemblerInsn "add" for 0x400700>, <DisassemblerInsn "cmp" for 0x400702>, <DisassemblerInsn "mov" for 0x400704>, <DisassemblerInsn "mov" for 0x40070b>, <DisassemblerInsn "jbe" for 0x400712>]'}, {'block_Idx': 146, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40139c>]'}, {'block_Idx': 381, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40205b>, <DisassemblerInsn "mov" for 0x402062>, <DisassemblerInsn "mov" for 0x402069>, <DisassemblerInsn "mov" for 0x402070>, <DisassemblerInsn "mov" for 0x402077>, <DisassemblerInsn "mov" for 0x40207e>, <DisassemblerInsn "mov" for 0x402080>, <DisassemblerInsn "mov" for 0x402088>, <DisassemblerInsn "mov" for 0x40208d>, <DisassemblerInsn "mov" for 0x402095>, <DisassemblerInsn "mov" for 0x40209c>, <DisassemblerInsn "mov" for 0x4020a3>, <DisassemblerInsn "mov" for 0x4020aa>, <DisassemblerInsn "jmp" for 0x4020b1>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40307a>, <DisassemblerInsn "add" for 0x403081>, <DisassemblerInsn "ret" for 0x403088>]'}, {'block_Idx': 151, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4015cd>, <DisassemblerInsn "mov" for 0x4015d4>, <DisassemblerInsn "mov" for 0x4015db>, <DisassemblerInsn "add" for 0x4015e3>, <DisassemblerInsn "mov" for 0x4015e7>, <DisassemblerInsn "xor" for 0x4015ef>, <DisassemblerInsn "mov" for 0x4015f1>, <DisassemblerInsn "mov" for 0x4015f8>, <DisassemblerInsn "mov" for 0x4015ff>, <DisassemblerInsn "mov" for 0x401607>, <DisassemblerInsn "mov" for 0x40160f>, <DisassemblerInsn "mov" for 0x401616>, <DisassemblerInsn "mov" for 0x40161d>, <DisassemblerInsn "mov" for 0x401625>, <DisassemblerInsn "mov" for 0x40162d>, <DisassemblerInsn "mov" for 0x401634>, <DisassemblerInsn "mov" for 0x40163b>, <DisassemblerInsn "cmp" for 0x40163d>, <DisassemblerInsn "jne" for 0x401641>]'}, {'block_Idx': 229, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401ad0>, <DisassemblerInsn "mov" for 0x401ad8>, <DisassemblerInsn "mov" for 0x401ae0>, <DisassemblerInsn "mov" for 0x401ae8>, <DisassemblerInsn "mov" for 0x401aef>, <DisassemblerInsn "add" for 0x401af2>, <DisassemblerInsn "mov" for 0x401af6>, <DisassemblerInsn "movsxd" for 0x401afe>, <DisassemblerInsn "cmp" for 0x401b01>, <DisassemblerInsn "mov" for 0x401b04>, <DisassemblerInsn "jl" for 0x401b0c>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400817>, <DisassemblerInsn "mov" for 0x40081f>, <DisassemblerInsn "mov" for 0x400826>, <DisassemblerInsn "mov" for 0x40082d>, <DisassemblerInsn "mov" for 0x400835>, <DisassemblerInsn "mov" for 0x40083c>, <DisassemblerInsn "mov" for 0x400843>, <DisassemblerInsn "shl" for 0x400845>, <DisassemblerInsn "xor" for 0x400848>, <DisassemblerInsn "cmp" for 0x40084a>, <DisassemblerInsn "cmovl" for 0x40084d>, <DisassemblerInsn "mov" for 0x400851>, <DisassemblerInsn "xor" for 0x400859>, <DisassemblerInsn "cmp" for 0x40085b>, <DisassemblerInsn "cmovl" for 0x40085e>, <DisassemblerInsn "xor" for 0x400861>, <DisassemblerInsn "cmp" for 0x400863>, <DisassemblerInsn "cmovl" for 0x400866>, <DisassemblerInsn "mov" for 0x400869>, <DisassemblerInsn "add" for 0x40086c>, <DisassemblerInsn "mov" for 0x400870>, <DisassemblerInsn "mov" for 0x400878>, <DisassemblerInsn "mov" for 0x40087c>, <DisassemblerInsn "add" for 0x40087f>, <DisassemblerInsn "mov" for 0x400883>, <DisassemblerInsn "mov" for 0x40088b>, <DisassemblerInsn "mov" for 0x40088e>, <DisassemblerInsn "mov" for 0x400890>, <DisassemblerInsn "mov" for 0x400892>, <DisassemblerInsn "add" for 0x400895>, <DisassemblerInsn "mov" for 0x400898>, <DisassemblerInsn "add" for 0x40089b>, <DisassemblerInsn "mov" for 0x40089f>, <DisassemblerInsn "mov" for 0x4008a7>, <DisassemblerInsn "mov" for 0x4008ab>, <DisassemblerInsn "add" for 0x4008ae>, <DisassemblerInsn "mov" for 0x4008b2>, <DisassemblerInsn "mov" for 0x4008ba>, <DisassemblerInsn "mov" for 0x4008c1>, <DisassemblerInsn "ror" for 0x4008c3>, <DisassemblerInsn "ror" for 0x4008c7>, <DisassemblerInsn "ror" for 0x4008ca>, <DisassemblerInsn "shr" for 0x4008ce>, <DisassemblerInsn "mov" for 0x4008d1>, <DisassemblerInsn "shl" for 0x4008d8>, <DisassemblerInsn "mov" for 0x4008db>, <DisassemblerInsn "ror" for 0x4008de>, <DisassemblerInsn "ror" for 0x4008e2>, <DisassemblerInsn "ror" for 0x4008e5>, <DisassemblerInsn "mov" for 0x4008e9>, <DisassemblerInsn "shr" for 0x4008f0>, <DisassemblerInsn "or" for 0x4008f3>, <DisassemblerInsn "cmp" for 0x4008f5>, <DisassemblerInsn "jne" for 0x4008fa>]'}, {'block_Idx': 16, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ac0>, <DisassemblerInsn "cmp" for 0x400ac7>, <DisassemblerInsn "je" for 0x400aca>]'}, {'block_Idx': 426, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4039d4>, <DisassemblerInsn "mov" for 0x4039da>, <DisassemblerInsn "pop" for 0x4039dd>, <DisassemblerInsn "ret" for 0x4039de>]'}, {'block_Idx': 21, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40076a>, <DisassemblerInsn "mov" for 0x400771>, <DisassemblerInsn "mov" for 0x400779>, <DisassemblerInsn "mov" for 0x400781>, <DisassemblerInsn "mov" for 0x400788>, <DisassemblerInsn "mov" for 0x40078f>, <DisassemblerInsn "add" for 0x400796>, <DisassemblerInsn "mov" for 0x400798>, <DisassemblerInsn "add" for 0x40079a>, <DisassemblerInsn "movsxd" for 0x40079d>, <DisassemblerInsn "call" for 0x4007a0>]'}, {'block_Idx': 317, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f5d>, <DisassemblerInsn "mov" for 0x401f64>, <DisassemblerInsn "mov" for 0x401f6c>, <DisassemblerInsn "add" for 0x401f6e>, <DisassemblerInsn "mov" for 0x401f71>, <DisassemblerInsn "mov" for 0x401f73>, <DisassemblerInsn "mov" for 0x401f76>, <DisassemblerInsn "cmp" for 0x401f7d>, <DisassemblerInsn "je" for 0x401f80>]'}, {'block_Idx': 72, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40101e>, <DisassemblerInsn "mov" for 0x401025>, <DisassemblerInsn "mov" for 0x40102c>, <DisassemblerInsn "mov" for 0x401031>, <DisassemblerInsn "shr" for 0x401033>, <DisassemblerInsn "mov" for 0x401035>, <DisassemblerInsn "and" for 0x401037>, <DisassemblerInsn "mov" for 0x401039>, <DisassemblerInsn "mov" for 0x40103b>, <DisassemblerInsn "mov" for 0x401040>, <DisassemblerInsn "mov" for 0x401048>, <DisassemblerInsn "mov" for 0x401050>, <DisassemblerInsn "mov" for 0x401057>, <DisassemblerInsn "mov" for 0x40105f>, <DisassemblerInsn "mov" for 0x401067>, <DisassemblerInsn "mov" for 0x40106e>, <DisassemblerInsn "mov" for 0x401075>, <DisassemblerInsn "mov" for 0x40107d>, <DisassemblerInsn "cmp" for 0x401085>, <DisassemblerInsn "jle" for 0x401088>]'}, {'block_Idx': 190, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4017cf>, <DisassemblerInsn "mov" for 0x4017d6>, <DisassemblerInsn "mov" for 0x4017dd>, <DisassemblerInsn "mov" for 0x4017e5>, <DisassemblerInsn "mov" for 0x4017ed>, <DisassemblerInsn "mov" for 0x4017f4>, <DisassemblerInsn "sar" for 0x4017f6>, <DisassemblerInsn "mov" for 0x4017f9>, <DisassemblerInsn "movsxd" for 0x401800>, <DisassemblerInsn "mov" for 0x401803>, <DisassemblerInsn "mov" for 0x401807>, <DisassemblerInsn "and" for 0x401809>, <DisassemblerInsn "mov" for 0x40180c>, <DisassemblerInsn "movzx" for 0x401813>, <DisassemblerInsn "add" for 0x401817>, <DisassemblerInsn "mov" for 0x40181a>, <DisassemblerInsn "mov" for 0x401821>, <DisassemblerInsn "mov" for 0x401823>, <DisassemblerInsn "shr" for 0x401828>, <DisassemblerInsn "mov" for 0x40182a>, <DisassemblerInsn "mov" for 0x401831>, <DisassemblerInsn "and" for 0x401838>, <DisassemblerInsn "mov" for 0x40183a>, <DisassemblerInsn "add" for 0x401841>, <DisassemblerInsn "mov" for 0x401844>, <DisassemblerInsn "cmp" for 0x40184b>, <DisassemblerInsn "mov" for 0x40184e>, <DisassemblerInsn "mov" for 0x401855>, <DisassemblerInsn "je" for 0x40185c>]'}, {'block_Idx': 170, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4014a1>]'}, {'block_Idx': 45, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ae9>, <DisassemblerInsn "mov" for 0x400af1>, <DisassemblerInsn "mov" for 0x400af8>, <DisassemblerInsn "mov" for 0x400b00>, <DisassemblerInsn "mov" for 0x400b03>, <DisassemblerInsn "cdq" for 0x400b08>, <DisassemblerInsn "idiv" for 0x400b09>, <DisassemblerInsn "mov" for 0x400b0b>, <DisassemblerInsn "cdqe" for 0x400b13>, <DisassemblerInsn "add" for 0x400b15>, <DisassemblerInsn "call" for 0x400b18>]'}, {'block_Idx': 19, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bb9>, <DisassemblerInsn "mov" for 0x400bc1>, <DisassemblerInsn "xor" for 0x400bc5>, <DisassemblerInsn "lea" for 0x400bc7>, <DisassemblerInsn "mov" for 0x400bce>, <DisassemblerInsn "call" for 0x400bd0>]'}, {'block_Idx': 180, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401708>, <DisassemblerInsn "mov" for 0x401710>, <DisassemblerInsn "xor" for 0x401713>, <DisassemblerInsn "lea" for 0x401715>, <DisassemblerInsn "mov" for 0x40171c>, <DisassemblerInsn "call" for 0x40171e>]'}, {'block_Idx': 195, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40275a>, <DisassemblerInsn "mov" for 0x402762>, <DisassemblerInsn "mov" for 0x40276a>, <DisassemblerInsn "mov" for 0x402772>, <DisassemblerInsn "mov" for 0x402779>, <DisassemblerInsn "add" for 0x40277c>, <DisassemblerInsn "mov" for 0x402780>, <DisassemblerInsn "mov" for 0x402782>, <DisassemblerInsn "mov" for 0x402784>, <DisassemblerInsn "mov" for 0x40278b>, <DisassemblerInsn "mov" for 0x402793>, <DisassemblerInsn "jmp" for 0x40279b>]'}, {'block_Idx': 141, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b2a>, <DisassemblerInsn "mov" for 0x400b32>, <DisassemblerInsn "mov" for 0x400b38>, <DisassemblerInsn "cmp" for 0x400b3f>, <DisassemblerInsn "jle" for 0x400b42>]'}, {'block_Idx': 109, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401305>, <DisassemblerInsn "cmp" for 0x40130c>, <DisassemblerInsn "jne" for 0x40130f>]'}, {'block_Idx': 91, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40116c>, <DisassemblerInsn "xor" for 0x401174>, <DisassemblerInsn "lea" for 0x401176>, <DisassemblerInsn "mov" for 0x40117d>, <DisassemblerInsn "call" for 0x40117f>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40057b>, <DisassemblerInsn "mov" for 0x400582>, <DisassemblerInsn "mov" for 0x400589>, <DisassemblerInsn "xor" for 0x400590>, <DisassemblerInsn "sub" for 0x400592>, <DisassemblerInsn "cmovb" for 0x400594>, <DisassemblerInsn "cmp" for 0x400597>, <DisassemblerInsn "cmovb" for 0x400599>, <DisassemblerInsn "mov" for 0x40059c>, <DisassemblerInsn "mov" for 0x4005a3>, <DisassemblerInsn "mov" for 0x4005aa>, <DisassemblerInsn "mov" for 0x4005b1>, <DisassemblerInsn "mov" for 0x4005b8>, <DisassemblerInsn "add" for 0x4005ba>, <DisassemblerInsn "mov" for 0x4005bc>, <DisassemblerInsn "mov" for 0x4005c3>, <DisassemblerInsn "cmp" for 0x4005c8>, <DisassemblerInsn "mov" for 0x4005ca>, <DisassemblerInsn "jb" for 0x4005d1>]'}, {'block_Idx': 211, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4018f0>]'}, {'block_Idx': 173, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402651>, <DisassemblerInsn "mov" for 0x402658>, <DisassemblerInsn "mov" for 0x40265f>, <DisassemblerInsn "mov" for 0x402666>, <DisassemblerInsn "mov" for 0x40266e>, <DisassemblerInsn "mov" for 0x402676>, <DisassemblerInsn "mov" for 0x40267e>, <DisassemblerInsn "xor" for 0x402686>, <DisassemblerInsn "cmp" for 0x402689>, <DisassemblerInsn "mov" for 0x40268c>, <DisassemblerInsn "mov" for 0x40268f>, <DisassemblerInsn "mov" for 0x402697>, <DisassemblerInsn "mov" for 0x40269f>, <DisassemblerInsn "mov" for 0x4026a2>, <DisassemblerInsn "mov" for 0x4026aa>, <DisassemblerInsn "mov" for 0x4026ad>, <DisassemblerInsn "mov" for 0x4026b5>, <DisassemblerInsn "mov" for 0x4026bc>, <DisassemblerInsn "mov" for 0x4026c3>, <DisassemblerInsn "mov" for 0x4026ca>, <DisassemblerInsn "mov" for 0x4026d2>, <DisassemblerInsn "jle" for 0x4026da>]'}, {'block_Idx': 165, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402d9d>, <DisassemblerInsn "cmp" for 0x402da4>, <DisassemblerInsn "jne" for 0x402da7>]'}, {'block_Idx': 155, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4025bb>, <DisassemblerInsn "lea" for 0x4025c3>, <DisassemblerInsn "movsxd" for 0x4025ca>, <DisassemblerInsn "add" for 0x4025ce>, <DisassemblerInsn "jmp" for 0x4025d1>]'}, {'block_Idx': 57, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e6a>, <DisassemblerInsn "mov" for 0x400e71>, <DisassemblerInsn "mov" for 0x400e79>, <DisassemblerInsn "xor" for 0x400e7d>, <DisassemblerInsn "lea" for 0x400e7f>, <DisassemblerInsn "mov" for 0x400e86>, <DisassemblerInsn "call" for 0x400e88>]'}, {'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4005a3>, <DisassemblerInsn "mov" for 0x4005aa>, <DisassemblerInsn "mov" for 0x4005b1>, <DisassemblerInsn "mov" for 0x4005b8>, <DisassemblerInsn "add" for 0x4005ba>, <DisassemblerInsn "mov" for 0x4005bc>, <DisassemblerInsn "mov" for 0x4005c3>, <DisassemblerInsn "cmp" for 0x4005c8>, <DisassemblerInsn "mov" for 0x4005ca>, <DisassemblerInsn "jb" for 0x4005d1>]'}, {'block_Idx': 88, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401104>]'}, {'block_Idx': 196, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402c06>, <DisassemblerInsn "mov" for 0x402c0e>, <DisassemblerInsn "mov" for 0x402c16>, <DisassemblerInsn "mov" for 0x402c1e>, <DisassemblerInsn "mov" for 0x402c26>, <DisassemblerInsn "mov" for 0x402c2e>, <DisassemblerInsn "mov" for 0x402c36>, <DisassemblerInsn "mov" for 0x402c3e>, <DisassemblerInsn "mov" for 0x402c46>, <DisassemblerInsn "mov" for 0x402c4e>, <DisassemblerInsn "mov" for 0x402c56>, <DisassemblerInsn "mov" for 0x402c5e>, <DisassemblerInsn "mov" for 0x402c66>, <DisassemblerInsn "mov" for 0x402c69>, <DisassemblerInsn "mov" for 0x402c6c>, <DisassemblerInsn "mov" for 0x402c73>, <DisassemblerInsn "add" for 0x402c75>, <DisassemblerInsn "mov" for 0x402c77>, <DisassemblerInsn "mov" for 0x402c79>, <DisassemblerInsn "shl" for 0x402c80>, <DisassemblerInsn "mov" for 0x402c82>, <DisassemblerInsn "cmp" for 0x402c89>, <DisassemblerInsn "je" for 0x402c8c>]'}, {'block_Idx': 424, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x4023ec>]'}, {'block_Idx': 257, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x402409>]'}, {'block_Idx': 80, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40108a>, <DisassemblerInsn "mov" for 0x401092>, <DisassemblerInsn "mov" for 0x40109a>, <DisassemblerInsn "mov" for 0x4010a2>, <DisassemblerInsn "mov" for 0x4010aa>, <DisassemblerInsn "add" for 0x4010b1>, <DisassemblerInsn "mov" for 0x4010b4>, <DisassemblerInsn "shr" for 0x4010b7>, <DisassemblerInsn "mov" for 0x4010bb>, <DisassemblerInsn "ror" for 0x4010bf>, <DisassemblerInsn "ror" for 0x4010c3>, <DisassemblerInsn "ror" for 0x4010c6>, <DisassemblerInsn "shr" for 0x4010ca>, <DisassemblerInsn "add" for 0x4010cd>, <DisassemblerInsn "mov" for 0x4010d1>, <DisassemblerInsn "mov" for 0x4010d4>, <DisassemblerInsn "add" for 0x4010d7>, <DisassemblerInsn "shl" for 0x4010da>, <DisassemblerInsn "movsxd" for 0x4010de>, <DisassemblerInsn "add" for 0x4010e1>, <DisassemblerInsn "cmp" for 0x4010e4>, <DisassemblerInsn "mov" for 0x4010e7>, <DisassemblerInsn "mov" for 0x4010ef>, <DisassemblerInsn "mov" for 0x4010f7>, <DisassemblerInsn "jb" for 0x4010fe>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40068d>, <DisassemblerInsn "mov" for 0x400695>, <DisassemblerInsn "mov" for 0x40069d>, <DisassemblerInsn "mov" for 0x4006a5>, <DisassemblerInsn "mov" for 0x4006a8>, <DisassemblerInsn "mov" for 0x4006b0>, <DisassemblerInsn "mov" for 0x4006b7>, <DisassemblerInsn "mov" for 0x4006b9>, <DisassemblerInsn "mov" for 0x4006bb>, <DisassemblerInsn "mov" for 0x4006bd>, <DisassemblerInsn "mov" for 0x4006c4>, <DisassemblerInsn "mov" for 0x4006cb>, <DisassemblerInsn "mov" for 0x4006d2>, <DisassemblerInsn "mov" for 0x4006d9>, <DisassemblerInsn "mov" for 0x4006e0>, <DisassemblerInsn "mov" for 0x4006e7>, <DisassemblerInsn "mov" for 0x4006ee>, <DisassemblerInsn "mov" for 0x4006f5>, <DisassemblerInsn "mov" for 0x4006fc>, <DisassemblerInsn "add" for 0x4006fe>, <DisassemblerInsn "add" for 0x400700>, <DisassemblerInsn "cmp" for 0x400702>, <DisassemblerInsn "mov" for 0x400704>, <DisassemblerInsn "mov" for 0x40070b>, <DisassemblerInsn "jbe" for 0x400712>]'}, {'block_Idx': 133, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4013f1>, <DisassemblerInsn "mov" for 0x4013f8>, <DisassemblerInsn "mov" for 0x401400>, <DisassemblerInsn "sar" for 0x401402>, <DisassemblerInsn "movsxd" for 0x401405>, <DisassemblerInsn "mov" for 0x401408>, <DisassemblerInsn "ror" for 0x40140b>, <DisassemblerInsn "ror" for 0x40140f>, <DisassemblerInsn "ror" for 0x401412>, <DisassemblerInsn "and" for 0x401416>, <DisassemblerInsn "shl" for 0x401419>, <DisassemblerInsn "mov" for 0x40141b>, <DisassemblerInsn "shr" for 0x401422>, <DisassemblerInsn "add" for 0x401425>, <DisassemblerInsn "mov" for 0x401428>, <DisassemblerInsn "mov" for 0x40142f>, <DisassemblerInsn "jmp" for 0x401436>]'}, {'block_Idx': 136, 'blockInsts': '[<DisassemblerInsn "add" for 0x403227>, <DisassemblerInsn "ret" for 0x40322b>]'}, {'block_Idx': 234, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4024c5>, <DisassemblerInsn "mov" for 0x4024cd>, <DisassemblerInsn "mov" for 0x4024d5>, <DisassemblerInsn "mov" for 0x4024dd>, <DisassemblerInsn "mov" for 0x4024df>, <DisassemblerInsn "mov" for 0x4024e1>, <DisassemblerInsn "mov" for 0x4024e8>, <DisassemblerInsn "mov" for 0x4024ef>, <DisassemblerInsn "jmp" for 0x4024f7>]'}, {'block_Idx': 17, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400a49>, <DisassemblerInsn "mov" for 0x400a51>, <DisassemblerInsn "mov" for 0x400a59>, <DisassemblerInsn "mov" for 0x400a61>, <DisassemblerInsn "mov" for 0x400a69>, <DisassemblerInsn "mov" for 0x400a71>, <DisassemblerInsn "mov" for 0x400a79>, <DisassemblerInsn "add" for 0x400a7c>, <DisassemblerInsn "sar" for 0x400a7f>, <DisassemblerInsn "xor" for 0x400a82>, <DisassemblerInsn "cmp" for 0x400a85>, <DisassemblerInsn "cmovl" for 0x400a89>, <DisassemblerInsn "xor" for 0x400a8d>, <DisassemblerInsn "cmp" for 0x400a90>, <DisassemblerInsn "mov" for 0x400a94>, <DisassemblerInsn "cmovl" for 0x400a97>, <DisassemblerInsn "xor" for 0x400a9b>, <DisassemblerInsn "cmp" for 0x400a9e>, <DisassemblerInsn "cmovl" for 0x400aa2>, <DisassemblerInsn "mov" for 0x400aa6>, <DisassemblerInsn "mov" for 0x400aa9>, <DisassemblerInsn "movsxd" for 0x400aac>, <DisassemblerInsn "add" for 0x400aaf>, <DisassemblerInsn "mov" for 0x400ab2>, <DisassemblerInsn "mov" for 0x400ab5>, <DisassemblerInsn "jmp" for 0x400abb>]'}, {'block_Idx': 106, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4011dc>, <DisassemblerInsn "mov" for 0x4011e4>, <DisassemblerInsn "mov" for 0x4011eb>, <DisassemblerInsn "mov" for 0x4011f3>, <DisassemblerInsn "shr" for 0x4011fb>, <DisassemblerInsn "and" for 0x4011ff>, <DisassemblerInsn "mov" for 0x401206>, <DisassemblerInsn "ror" for 0x401209>, <DisassemblerInsn "ror" for 0x40120d>, <DisassemblerInsn "ror" for 0x401210>, <DisassemblerInsn "shr" for 0x401214>, <DisassemblerInsn "add" for 0x401217>, <DisassemblerInsn "mov" for 0x40121a>, <DisassemblerInsn "add" for 0x40121c>, <DisassemblerInsn "mov" for 0x40121f>, <DisassemblerInsn "mov" for 0x401226>, <DisassemblerInsn "jmp" for 0x40122d>]'}, {'block_Idx': 198, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018e5>, <DisassemblerInsn "test" for 0x4018ec>, <DisassemblerInsn "je" for 0x4018ee>]'}, {'block_Idx': 187, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402dca>, <DisassemblerInsn "mov" for 0x402dd2>, <DisassemblerInsn "mov" for 0x402dda>, <DisassemblerInsn "mov" for 0x402de1>, <DisassemblerInsn "mov" for 0x402de9>, <DisassemblerInsn "mov" for 0x402ded>, <DisassemblerInsn "mov" for 0x402df2>, <DisassemblerInsn "mov" for 0x402df6>, <DisassemblerInsn "xor" for 0x402dfb>, <DisassemblerInsn "mov" for 0x402dfd>, <DisassemblerInsn "mov" for 0x402e01>, <DisassemblerInsn "mov" for 0x402e06>, <DisassemblerInsn "mov" for 0x402e0b>, <DisassemblerInsn "jmp" for 0x402e13>]'}, {'block_Idx': 143, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401543>, <DisassemblerInsn "mov" for 0x40154a>, <DisassemblerInsn "mov" for 0x401551>, <DisassemblerInsn "mov" for 0x401559>, <DisassemblerInsn "mov" for 0x401561>, <DisassemblerInsn "mov" for 0x401569>, <DisassemblerInsn "mov" for 0x401571>, <DisassemblerInsn "mov" for 0x401579>, <DisassemblerInsn "mov" for 0x401581>, <DisassemblerInsn "add" for 0x401584>, <DisassemblerInsn "mov" for 0x401588>, <DisassemblerInsn "mov" for 0x401590>, <DisassemblerInsn "mov" for 0x401594>, <DisassemblerInsn "mov" for 0x401598>, <DisassemblerInsn "mov" for 0x40159b>, <DisassemblerInsn "add" for 0x40159e>, <DisassemblerInsn "mov" for 0x4015a2>, <DisassemblerInsn "mov" for 0x4015aa>, <DisassemblerInsn "mov" for 0x4015ad>, <DisassemblerInsn "cmp" for 0x4015af>, <DisassemblerInsn "mov" for 0x4015b2>, <DisassemblerInsn "mov" for 0x4015b9>, <DisassemblerInsn "mov" for 0x4015c0>, <DisassemblerInsn "jle" for 0x4015c7>]'}, {'block_Idx': 35, 'blockInsts': '[<DisassemblerInsn "mov" for 0x403011>, <DisassemblerInsn "mov" for 0x403015>, <DisassemblerInsn "mov" for 0x40301d>, <DisassemblerInsn "add" for 0x403020>, <DisassemblerInsn "mov" for 0x403027>, <DisassemblerInsn "mov" for 0x40302c>, <DisassemblerInsn "mov" for 0x403032>, <DisassemblerInsn "cmp" for 0x403036>, <DisassemblerInsn "mov" for 0x403039>, <DisassemblerInsn "je" for 0x403040>]'}, {'block_Idx': 220, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4018f2>, <DisassemblerInsn "sub" for 0x4018f9>, <DisassemblerInsn "jne" for 0x4018fc>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40051c>, <DisassemblerInsn "mov" for 0x400524>, <DisassemblerInsn "mov" for 0x40052b>, <DisassemblerInsn "mov" for 0x400532>, <DisassemblerInsn "add" for 0x400535>, <DisassemblerInsn "mov" for 0x40053c>, <DisassemblerInsn "mov" for 0x400544>, <DisassemblerInsn "mov" for 0x40054a>, <DisassemblerInsn "cmp" for 0x400551>, <DisassemblerInsn "jb" for 0x400554>]'}, {'block_Idx': 41, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400bd5>, <DisassemblerInsn "mov" for 0x400bdd>, <DisassemblerInsn "mov" for 0x400be4>, <DisassemblerInsn "mov" for 0x400be6>, <DisassemblerInsn "mov" for 0x400bed>, <DisassemblerInsn "cdq" for 0x400bf2>, <DisassemblerInsn "idiv" for 0x400bf3>, <DisassemblerInsn "add" for 0x400bf5>, <DisassemblerInsn "cmp" for 0x400bf8>, <DisassemblerInsn "jge" for 0x400bfa>]'}, {'block_Idx': 113, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401311>, <DisassemblerInsn "mov" for 0x401318>, <DisassemblerInsn "mov" for 0x401320>, <DisassemblerInsn "mov" for 0x401323>, <DisassemblerInsn "mov" for 0x40132a>, <DisassemblerInsn "jmp" for 0x401331>]'}, {'block_Idx': 85, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x40113b>]'}, {'block_Idx': 79, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401106>, <DisassemblerInsn "mov" for 0x40110e>, <DisassemblerInsn "mov" for 0x401116>, <DisassemblerInsn "cmp" for 0x40111d>, <DisassemblerInsn "jge" for 0x401121>]'}, {'block_Idx': 52, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400c00>, <DisassemblerInsn "mov" for 0x400c07>, <DisassemblerInsn "mov" for 0x400c0f>, <DisassemblerInsn "mov" for 0x400c12>, <DisassemblerInsn "mov" for 0x400c1a>, <DisassemblerInsn "and" for 0x400c1c>, <DisassemblerInsn "mov" for 0x400c1f>, <DisassemblerInsn "mov" for 0x400c26>, <DisassemblerInsn "mov" for 0x400c2d>, <DisassemblerInsn "mov" for 0x400c34>, <DisassemblerInsn "mov" for 0x400c3c>, <DisassemblerInsn "mov" for 0x400c43>, <DisassemblerInsn "sar" for 0x400c4a>, <DisassemblerInsn "movsxd" for 0x400c4d>, <DisassemblerInsn "mov" for 0x400c50>, <DisassemblerInsn "ror" for 0x400c53>, <DisassemblerInsn "ror" for 0x400c57>, <DisassemblerInsn "ror" for 0x400c5a>, <DisassemblerInsn "shl" for 0x400c5e>, <DisassemblerInsn "shr" for 0x400c60>, <DisassemblerInsn "and" for 0x400c63>, <DisassemblerInsn "cmp" for 0x400c68>, <DisassemblerInsn "je" for 0x400c6d>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400556>, <DisassemblerInsn "mov" for 0x40055d>, <DisassemblerInsn "mov" for 0x400565>, <DisassemblerInsn "cmp" for 0x40056c>, <DisassemblerInsn "mov" for 0x400572>, <DisassemblerInsn "je" for 0x400579>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400ba2>, <DisassemblerInsn "and" for 0x400ba9>, <DisassemblerInsn "cmp" for 0x400bae>, <DisassemblerInsn "je" for 0x400bb3>]'}, {'block_Idx': 239, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401d27>, <DisassemblerInsn "mov" for 0x401d2e>, <DisassemblerInsn "mov" for 0x401d35>, <DisassemblerInsn "mov" for 0x401d3c>, <DisassemblerInsn "mov" for 0x401d3e>, <DisassemblerInsn "xor" for 0x401d46>, <DisassemblerInsn "mov" for 0x401d48>, <DisassemblerInsn "mov" for 0x401d4f>, <DisassemblerInsn "mov" for 0x401d56>, <DisassemblerInsn "mov" for 0x401d5e>, <DisassemblerInsn "mov" for 0x401d66>, <DisassemblerInsn "mov" for 0x401d6d>, <DisassemblerInsn "mov" for 0x401d74>, <DisassemblerInsn "mov" for 0x401d7c>, <DisassemblerInsn "mov" for 0x401d84>, <DisassemblerInsn "mov" for 0x401d8b>, <DisassemblerInsn "mov" for 0x401d92>, <DisassemblerInsn "sar" for 0x401d94>, <DisassemblerInsn "movsxd" for 0x401d97>, <DisassemblerInsn "mov" for 0x401d9a>, <DisassemblerInsn "ror" for 0x401d9d>, <DisassemblerInsn "ror" for 0x401da1>, <DisassemblerInsn "ror" for 0x401da4>, <DisassemblerInsn "and" for 0x401da8>, <DisassemblerInsn "mov" for 0x401dab>, <DisassemblerInsn "shl" for 0x401db2>, <DisassemblerInsn "mov" for 0x401db4>, <DisassemblerInsn "cmp" for 0x401dbb>, <DisassemblerInsn "jge" for 0x401dbe>]'}, {'block_Idx': 356, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4020b6>, <DisassemblerInsn "cmp" for 0x4020bd>, <DisassemblerInsn "jle" for 0x4020c0>]'}, {'block_Idx': 50, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400e39>, <DisassemblerInsn "and" for 0x400e40>, <DisassemblerInsn "cmp" for 0x400e43>, <DisassemblerInsn "je" for 0x400e46>]'}, {'block_Idx': 218, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4019a7>, <DisassemblerInsn "mov" for 0x4019ae>, <DisassemblerInsn "mov" for 0x4019b5>, <DisassemblerInsn "mov" for 0x4019bc>, <DisassemblerInsn "xor" for 0x4019bf>, <DisassemblerInsn "sub" for 0x4019c1>, <DisassemblerInsn "shr" for 0x4019c4>, <DisassemblerInsn "mov" for 0x4019c6>, <DisassemblerInsn "add" for 0x4019ce>, <DisassemblerInsn "mov" for 0x4019d0>, <DisassemblerInsn "mov" for 0x4019d2>, <DisassemblerInsn "jmp" for 0x4019d9>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4005d7>, <DisassemblerInsn "mov" for 0x4005de>, <DisassemblerInsn "mov" for 0x4005e6>, <DisassemblerInsn "add" for 0x4005e9>, <DisassemblerInsn "mov" for 0x4005f0>, <DisassemblerInsn "mov" for 0x4005f8>, <DisassemblerInsn "mov" for 0x4005fe>, <DisassemblerInsn "xor" for 0x400605>, <DisassemblerInsn "mov" for 0x400608>, <DisassemblerInsn "cmp" for 0x40060d>, <DisassemblerInsn "mov" for 0x40060f>, <DisassemblerInsn "ja" for 0x400616>]'}, {'block_Idx': 310, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401f34>]'}, {'block_Idx': 423, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x4023e3>, <DisassemblerInsn "jl" for 0x4023e6>]'}, {'block_Idx': 176, 'blockInsts': '[<DisassemblerInsn "mov" for 0x402da9>, <DisassemblerInsn "mov" for 0x402db1>, <DisassemblerInsn "mov" for 0x402db3>, <DisassemblerInsn "cmp" for 0x402dba>, <DisassemblerInsn "mov" for 0x402dbd>, <DisassemblerInsn "jle" for 0x402dc4>]'}, {'block_Idx': 223, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40240e>, <DisassemblerInsn "cmp" for 0x402415>, <DisassemblerInsn "je" for 0x402418>]'}, {'block_Idx': 23, 'blockInsts': '[<DisassemblerInsn "mov" for 0x400b59>, <DisassemblerInsn "mov" for 0x400b60>, <DisassemblerInsn "shr" for 0x400b65>, <DisassemblerInsn "mov" for 0x400b67>, <DisassemblerInsn "and" for 0x400b6e>, <DisassemblerInsn "cmp" for 0x400b70>, <DisassemblerInsn "jne" for 0x400b73>]'}, {'block_Idx': 201, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x401723>]'}, {'block_Idx': 68, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400cb8>]'}, {'block_Idx': 250, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401b75>, <DisassemblerInsn "mov" for 0x401b7c>, <DisassemblerInsn "mov" for 0x401b83>, <DisassemblerInsn "mov" for 0x401b8a>, <DisassemblerInsn "xor" for 0x401b8d>, <DisassemblerInsn "sub" for 0x401b8f>, <DisassemblerInsn "shr" for 0x401b92>, <DisassemblerInsn "mov" for 0x401b94>, <DisassemblerInsn "add" for 0x401b9c>, <DisassemblerInsn "mov" for 0x401b9e>, <DisassemblerInsn "mov" for 0x401ba0>, <DisassemblerInsn "jmp" for 0x401ba7>]'}, {'block_Idx': 39, 'blockInsts': '[<DisassemblerInsn "jmp" for 0x400d8f>]'}, {'block_Idx': 238, 'blockInsts': '[<DisassemblerInsn "mov" for 0x401f36>, <DisassemblerInsn "mov" for 0x401f3e>, <DisassemblerInsn "mov" for 0x401f46>, <DisassemblerInsn "xor" for 0x401f48>, <DisassemblerInsn "call" for 0x401f4a>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x4004c9>, <DisassemblerInsn "mov" for 0x4004d1>, <DisassemblerInsn "mov" for 0x4004d9>, <DisassemblerInsn "mov" for 0x4004e0>, <DisassemblerInsn "mov" for 0x4004e3>, <DisassemblerInsn "mov" for 0x4004eb>, <DisassemblerInsn "mov" for 0x4004f2>, <DisassemblerInsn "xor" for 0x4004f4>, <DisassemblerInsn "cmp" for 0x4004f6>, <DisassemblerInsn "mov" for 0x4004f9>, <DisassemblerInsn "mov" for 0x400500>, <DisassemblerInsn "mov" for 0x400507>, <DisassemblerInsn "mov" for 0x40050e>, <DisassemblerInsn "je" for 0x400516>]'}], 'cfg_block_detailed_info': [{'block_Idx': 168, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~eax, dword ptr [rsp + 0x490]>', '<add~~eax, 1>', '<mov~~dword ptr [rcx], eax>', '<mov~~dword ptr [rsp + 0x484], eax>', '<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~edx, dword ptr [rsp + 0x484]>', '<mov~~dword ptr [rsp + 0x468], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x46c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x470], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x480], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x47c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x480]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401728>']}, {'block_Idx': 74, 'blockInsts': ['<jmp~~0x40252e>']}, {'block_Idx': 166, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6c0]>', '<mov~~rdi, qword ptr [rsp + 0x568]>', '<mov~~rdx, qword ptr [rsp + 0x4f0]>', '<mov~~ecx, dword ptr [rsp + 0x230]>', '<imul~~ecx, dword ptr [rdx]>', '<mov~~edx, 4>', '<mov~~esi, 2>', '<cmp~~dword ptr [rdi], 0>', '<cmove~~edx, esi>', '<imul~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x620]>', '<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x18], eax>', '<cmp~~eax, ecx>', '<jle~~0x403011>']}, {'block_Idx': 43, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x680]>', '<mov~~rax, qword ptr [rsp + 0x6a0]>', '<mov~~dword ptr [rcx], 0>', '<mov~~ecx, dword ptr [rax]>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x660], ecx>', '<mov~~dword ptr [rsp + 0x664], eax>', '<mov~~eax, dword ptr [rsp + 0x68c]>', '<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<mov~~rsi, qword ptr [rsp + 0x6c8]>', '<mov~~ecx, dword ptr [rsp + 0x660]>', '<mov~~edx, dword ptr [rsp + 0x664]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<add~~ecx, edx>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500020>']}, {'block_Idx': 231, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x40240e>']}, {'block_Idx': 242, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~esi, dword ptr [rsp + 0x4a0]>', '<mov~~edx, dword ptr [rsp + 0x4a4]>', '<mov~~rax, qword ptr [rsp + 0x4a8]>', '<mov~~qword ptr [rsp + 0x488], rax>', '<mov~~dword ptr [rsp + 0x490], edx>', '<mov~~dword ptr [rsp + 0x494], esi>', '<mov~~dword ptr [rcx], edx>', '<cmp~~rax, 0>', '<jne~~0x40165f>']}, {'block_Idx': 326, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x394]>', '<cmp~~eax, 1>', '<jle~~0x40240e>']}, {'block_Idx': 222, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~esi, dword ptr [rsp + 0x42c]>', '<mov~~edx, dword ptr [rsp + 0x404]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3f4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3f4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3f8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x40240e>']}, {'block_Idx': 67, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5c4]>', '<mov~~rax, qword ptr [rsp + 0x5b8]>', '<mov~~edx, dword ptr [rsp + 0x5c8]>', '<mov~~dword ptr [rsp + 0x5b4], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x402f9a>']}, {'block_Idx': 124, 'blockInsts': ['<jmp~~0x40137e>']}, {'block_Idx': 241, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<mov~~rax, qword ptr [rsp + 0x488]>', '<mov~~edx, dword ptr [rsp + 0x450]>', '<and~~edx, 0xffffffdf>', '<add~~edx, 1>', '<mov~~esi, eax>', '<call~~0x40322c>']}, {'block_Idx': 25, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x620]>', '<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~eax, dword ptr [rax]>', '<add~~eax, 7>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<mov~~dword ptr [rsp + 0x18], eax>', '<cmp~~eax, ecx>', '<jle~~0x403011>']}, {'block_Idx': 37, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x648]>', '<mov~~eax, dword ptr [rsp + 0x5a8]>', '<mov~~edx, dword ptr [rsp + 0x590]>', '<mov~~esi, dword ptr [rsp + 0x594]>', '<mov~~dword ptr [rsp + 0x580], esi>', '<mov~~dword ptr [rsp + 0x584], edx>', '<shl~~eax, 4>', '<shr~~eax, 0xfd>', '<mov~~dword ptr [rsp + 0x588], eax>', '<mov~~dword ptr [rcx], 0x1f>', '<cmp~~eax, 0>', '<jne~~0x400e39>']}, {'block_Idx': 145, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x500]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<imul~~eax, eax, 0xa>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014a6>']}, {'block_Idx': 104, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6f4]>', '<mov~~edx, dword ptr [rsp + 0x4fc]>', '<mov~~esi, dword ptr [rsp + 0x584]>', '<mov~~r8b, byte ptr [rsp + 0x54f]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<add~~rax, 0xc>', '<mov~~qword ptr [rsp + 0x4f0], rax>', '<mov~~eax, 2>', '<mov~~edi, 4>', '<test~~r8b, 1>', '<cmovne~~eax, edi>', '<imul~~eax, esi>', '<imul~~eax, edx>', '<cmp~~eax, ecx>', '<jg~~0x40252e>']}, {'block_Idx': 115, 'blockInsts': ['<jmp~~0x40252e>']}, {'block_Idx': 228, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x402498>']}, {'block_Idx': 236, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rcx, qword ptr [rsp + 0x488]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x258], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x260], rax>', '<mov~~rax, qword ptr [rsp + 0x260]>', '<mov~~rdx, qword ptr [rsp + 0x258]>', '<mov~~ecx, dword ptr [rsp + 0x428]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~dword ptr [rsp + 0x24c], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x250], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x260], rax>', '<jl~~0x40244e>']}, {'block_Idx': 380, 'blockInsts': ['<mov~~r9d, dword ptr [rsp + 0x304]>', '<mov~~eax, dword ptr [rsp + 0x300]>', '<mov~~edx, dword ptr [rsp + 0x2fc]>', '<mov~~rsi, qword ptr [rsp + 0x2f0]>', '<mov~~rdi, qword ptr [rsp + 0x2e8]>', '<mov~~r8, qword ptr [rsp + 0x398]>', '<add~~edx, dword ptr [r8 + rsi*4]>', '<mov~~dword ptr [rsp + 0x284], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x288], ecx>', '<mov~~eax, ecx>', '<add~~eax, r9d>', '<mov~~dword ptr [rsp + 0x28c], eax>', '<mov~~dword ptr [r8 + rsi*4], eax>', '<add~~rsi, 1>', '<mov~~qword ptr [rsp + 0x290], rsi>', '<cmp~~rsi, rdi>', '<mov~~qword ptr [rsp + 0x2f0], rsi>', '<mov~~dword ptr [rsp + 0x2fc], edx>', '<mov~~dword ptr [rsp + 0x300], ecx>', '<mov~~dword ptr [rsp + 0x304], eax>', '<je~~0x40240e>']}, {'block_Idx': 369, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x340]>', '<mov~~ecx, dword ptr [rsp + 0x33c]>', '<mov~~edx, dword ptr [rsp + 0x334]>', '<mov~~esi, dword ptr [rsp + 0x394]>', '<mov~~esi, esi>', '<mov~~qword ptr [rsp + 0x2e8], rsi>', '<mov~~esi, 3>', '<mov~~qword ptr [rsp + 0x2f0], rsi>', '<mov~~dword ptr [rsp + 0x2fc], edx>', '<mov~~dword ptr [rsp + 0x300], ecx>', '<mov~~dword ptr [rsp + 0x304], eax>', '<jmp~~0x40225d>']}, {'block_Idx': 244, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x418]>', '<mov~~eax, dword ptr [rsp + 0x41c]>', '<mov~~rsi, qword ptr [rsp + 0x420]>', '<mov~~qword ptr [rsp + 0x3c0], rsi>', '<mov~~dword ptr [rsp + 0x3c8], eax>', '<mov~~dword ptr [rsp + 0x3cc], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x3d0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x3d4], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401bac>']}, {'block_Idx': 399, 'blockInsts': ['<jmp~~0x4022e8>']}, {'block_Idx': 340, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x394]>', '<cmp~~eax, 2>', '<jle~~0x40240e>']}, {'block_Idx': 281, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x40252e>']}, {'block_Idx': 179, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x648]>', '<mov~~edx, dword ptr [rsp + 0x46c]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x47c]>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~edi, dword ptr [rax + rdi]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<and~~ecx, 7>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<shr~~ecx, 0xfa>', '<mov~~dword ptr [rsp + 0x450], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 7>', '<mov~~dword ptr [rsi], ecx>', '<mov~~edi, ecx>', '<sar~~edi, 3>', '<movsxd~~rdi, edi>', '<mov~~al, byte ptr [rax + rdi]>', '<and~~ecx, 7>', '<movzx~~eax, al>', '<add~~edx, 8>', '<mov~~dword ptr [rsi], edx>', '<mov~~edi, 0x80>', '<shr~~edi, cl>', '<mov~~ecx, dword ptr [rsp + 0x468]>', '<and~~edi, eax>', '<xor~~eax, eax>', '<mov~~esi, 1>', '<cmp~~edi, 0>', '<mov~~edi, edx>', '<mov~~dword ptr [rsp + 0x454], edi>', '<mov~~dword ptr [rsp + 0x458], esi>', '<mov~~dword ptr [rsp + 0x45c], edx>', '<mov~~dword ptr [rsp + 0x460], ecx>', '<mov~~dword ptr [rsp + 0x464], eax>', '<je~~0x401898>']}, {'block_Idx': 224, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rcx, qword ptr [rsp + 0x488]>', '<mov~~rax, qword ptr [rax + rcx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x3e0], rax>', '<xor~~eax, eax>', '<mov~~qword ptr [rsp + 0x3e8], rax>', '<mov~~rax, qword ptr [rsp + 0x3e8]>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~rdx, qword ptr [rsp + 0x3e0]>', '<mov~~esi, dword ptr [rsp + 0x3f8]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3d8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3e8], rax>', '<jl~~0x401ad0>']}, {'block_Idx': 138, 'blockInsts': ['<mov~~dword ptr [rsp + 0x4e4], eax>', '<cmp~~eax, 0>', '<je~~0x401543>']}, {'block_Idx': 327, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x390]>', '<mov~~ecx, dword ptr [rsp + 0x340]>', '<mov~~rdx, qword ptr [rsp + 0x398]>', '<mov~~esi, eax>', '<add~~esi, -2>', '<mov~~esi, esi>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~dword ptr [rsp + 0x338], edx>', '<sub~~ecx, edx>', '<mov~~dword ptr [rsp + 0x33c], ecx>', '<cmp~~eax, 2>', '<jbe~~0x402113>']}, {'block_Idx': 56, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x648]>', '<mov~~rax, qword ptr [rsp + 0x5a0]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rsi, qword ptr [rsp + 0x578]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x548], esi>', '<cmp~~esi, 0x10>', '<setg~~r8b>', '<mov~~byte ptr [rsp + 0x54f], r8b>', '<mov~~rdi, rdx>', '<add~~rdi, 0x20>', '<mov~~qword ptr [rsp + 0x550], rdi>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<mov~~r10d, 1>', '<mov~~r9d, 2>', '<cmp~~esi, 0x10>', '<cmovg~~r10d, r9d>', '<mov~~r9d, 0x10>', '<mov~~r11d, 0x20>', '<cmp~~esi, 0x10>', '<cmovg~~r9d, r11d>', '<and~~r8b, 1>', '<movzx~~r8d, r8b>', '<mov~~dword ptr [rdi + 0x58], r10d>', '<sub~~r9d, esi>', '<mov~~r10, rdi>', '<mov~~qword ptr [rsp + 0x558], r10>', '<mov~~r10, rdx>', '<add~~r10, 0x48>', '<mov~~qword ptr [rsp + 0x560], r10>', '<mov~~dword ptr [rdx + 0x48], r9d>', '<mov~~r9, rdx>', '<add~~r9, 0x4c>', '<mov~~qword ptr [rsp + 0x568], r9>', '<mov~~dword ptr [rdx + 0x4c], r8d>', '<mov~~dword ptr [rdi + 0x3c8], esi>', '<mov~~rdi, rdx>', '<add~~rdi, 0x10>', '<mov~~qword ptr [rsp + 0x570], rdi>', '<mov~~dword ptr [rdx + 0x10], esi>', '<mov~~al, byte ptr [rax]>', '<mov~~dword ptr [rcx], 0x20>', '<and~~al, 1>', '<cmp~~al, 0>', '<je~~0x400f86>']}, {'block_Idx': 312, 'blockInsts': ['<sub~~rsp, 0x198>', '<mov~~dword ptr [rsp + 0x168], edx>', '<mov~~dword ptr [rsp + 0x16c], esi>', '<mov~~qword ptr [rsp + 0x170], rdi>', '<mov~~rax, rdi>', '<add~~rax, 0x38>', '<mov~~qword ptr [rsp + 0x178], rax>', '<mov~~ecx, dword ptr [rdi + 0x38]>', '<mov~~dword ptr [rsp + 0x18c], ecx>', '<mov~~rax, qword ptr [rdi + 0x28]>', '<mov~~qword ptr [rsp + 0x180], rax>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x18c]>', '<shr~~eax, 0xfe>', '<mov~~dword ptr [rsp + 0x190], eax>', '<add~~ecx, 2>', '<mov~~dword ptr [rsp + 0x194], ecx>', '<mov~~dword ptr [rdi + 0x38], ecx>', '<cmp~~eax, 1>', '<jle~~0x403a93>']}, {'block_Idx': 226, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x450]>', '<add~~eax, -8>', '<cmp~~eax, 5>', '<jae~~0x4023b3>']}, {'block_Idx': 102, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x598]>', '<sub~~eax, 7>', '<je~~0x4011dc>']}, {'block_Idx': 99, 'blockInsts': ['<jmp~~0x40115b>']}, {'block_Idx': 38, 'blockInsts': ['<jmp~~0x400db0>']}, {'block_Idx': 119, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<sub~~eax, 0xc>', '<je~~0x4013a1>']}, {'block_Idx': 163, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6e0]>', '<mov~~rdx, qword ptr [rsp + 0x6e8]>', '<mov~~edi, dword ptr [rsp + 0x234]>', '<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~eax, dword ptr [rax]>', '<xor~~esi, esi>', '<cmp~~eax, 0>', '<mov~~r8d, eax>', '<mov~~dword ptr [rsp + 0x20c], r8d>', '<mov~~r8d, edi>', '<mov~~dword ptr [rsp + 0x210], r8d>', '<mov~~dword ptr [rsp + 0x214], edi>', '<mov~~qword ptr [rsp + 0x218], rsi>', '<mov~~qword ptr [rsp + 0x220], rdx>', '<mov~~qword ptr [rsp + 0x228], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x402f63>']}, {'block_Idx': 379, 'blockInsts': ['<jmp~~0x4021f0>']}, {'block_Idx': 159, 'blockInsts': ['<jmp~~0x40252e>']}, {'block_Idx': 213, 'blockInsts': ['<jmp~~0x402f63>']}, {'block_Idx': 51, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5ac]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~r8d, dword ptr [rsp + 0x58c]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3865]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 368, 'blockInsts': ['<mov~~r8d, dword ptr [rsp + 0x2e4]>', '<mov~~ecx, dword ptr [rsp + 0x2e0]>', '<mov~~rdx, qword ptr [rsp + 0x2d8]>', '<mov~~rsi, qword ptr [rsp + 0x2d0]>', '<mov~~rdi, qword ptr [rsp + 0x398]>', '<add~~ecx, dword ptr [rdi + rdx*4]>', '<mov~~dword ptr [rsp + 0x298], ecx>', '<mov~~eax, ecx>', '<add~~eax, r8d>', '<mov~~dword ptr [rsp + 0x29c], eax>', '<mov~~dword ptr [rdi + rdx*4], eax>', '<add~~rdx, 1>', '<mov~~qword ptr [rsp + 0x2a0], rdx>', '<cmp~~rdx, rsi>', '<mov~~qword ptr [rsp + 0x2d8], rdx>', '<mov~~dword ptr [rsp + 0x2e0], ecx>', '<mov~~dword ptr [rsp + 0x2e4], eax>', '<je~~0x40240e>']}, {'block_Idx': 260, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3c0]>', '<mov~~rdx, qword ptr [rsp + 0x410]>', '<mov~~edi, dword ptr [rsp + 0x3c8]>', '<mov~~esi, dword ptr [rsp + 0x3bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x3a4], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x3a4]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3a8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x40240e>']}, {'block_Idx': 227, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x4f0]>', '<mov~~rax, qword ptr [rsp + 0x488]>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x240], rax>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x248], ecx>', '<movsxd~~rcx, ecx>', '<cmp~~rax, rcx>', '<jge~~0x4024fc>']}, {'block_Idx': 175, 'blockInsts': ['<lea~~rdi, [rip + 0x19df]>', '<lea~~rsi, [rip + 0x1970]>', '<mov~~edx, 0x2b7>', '<lea~~rcx, [rip + 0x19dd]>', '<call~~0x500050>']}, {'block_Idx': 123, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x500]>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<imul~~eax, eax, 0x3e8>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014a6>']}, {'block_Idx': 261, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3a8]>', '<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x418], edx>', '<mov~~dword ptr [rsp + 0x41c], ecx>', '<mov~~qword ptr [rsp + 0x420], rax>', '<jmp~~0x401b13>']}, {'block_Idx': 0, 'blockInsts': ['<sub~~rsp, 0x708>', '<mov~~qword ptr [rsp + 0x6c0], rdx>', '<mov~~qword ptr [rsp + 0x6c8], rcx>', '<mov~~dword ptr [rsp + 0x6d4], r8d>', '<mov~~rax, qword ptr [rdi + 0xa0]>', '<mov~~qword ptr [rsp + 0x6d8], rax>', '<mov~~rcx, rsi>', '<mov~~qword ptr [rsp + 0x6e0], rcx>', '<mov~~qword ptr [rsp + 0x6e8], rsi>', '<mov~~ecx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x6f4], ecx>', '<mov~~dword ptr [rdx], 0>', '<mov~~rcx, rax>', '<add~~rcx, 4>', '<mov~~qword ptr [rsp + 0x6f8], rcx>', '<mov~~eax, dword ptr [rax + 4]>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x704], eax>', '<jne~~0x40051c>']}, {'block_Idx': 210, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x42c]>', '<mov~~ecx, dword ptr [rsp + 0x430]>', '<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x408], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x40c], edx>', '<cmp~~eax, 0x12>', '<jge~~0x4019de>']}, {'block_Idx': 169, 'blockInsts': ['<jmp~~0x401699>']}, {'block_Idx': 205, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x1b0]>', '<mov~~esi, dword ptr [rsp + 0x18c]>', '<mov~~rax, qword ptr [rsp + 0x190]>', '<mov~~rcx, qword ptr [rsp + 0x198]>', '<mov~~qword ptr [rsp + 0x178], rcx>', '<mov~~qword ptr [rsp + 0x180], rax>', '<mov~~dword ptr [rsp + 0x188], esi>', '<add~~rdx, 1>', '<movsxd~~rdi, esi>', '<cmp~~rdx, rdi>', '<mov~~dword ptr [rsp + 0x1cc], esi>', '<mov~~qword ptr [rsp + 0x1d0], rdx>', '<mov~~qword ptr [rsp + 0x1d8], rcx>', '<mov~~qword ptr [rsp + 0x1e0], rax>', '<jl~~0x4026e0>']}, {'block_Idx': 247, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~edi, dword ptr [rsp + 0x36c]>', '<mov~~esi, dword ptr [rsp + 0x368]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~r9d, dword ptr [rsp + 0x374]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x354], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x370]>', '<mov~~dword ptr [rsp + 0x358], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x354]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x358]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x35c], eax>', '<mov~~rax, qword ptr [rsp + 0x360]>', '<mov~~rdx, qword ptr [rsp + 0x398]>', '<mov~~edi, dword ptr [rsp + 0x368]>', '<mov~~esi, dword ptr [rsp + 0x35c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x344], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x344]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x378]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x348], rax>', '<cmp~~rax, rcx>', '<je~~0x401f0d>']}, {'block_Idx': 153, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x59c]>', '<mov~~rdi, qword ptr [rsp + 0x558]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x324b]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 225, 'blockInsts': ['<jmp~~0x401904>']}, {'block_Idx': 114, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<cmp~~eax, 0xc>', '<jge~~0x401370>']}, {'block_Idx': 254, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x360]>', '<mov~~rdx, qword ptr [rsp + 0x398]>', '<mov~~edi, dword ptr [rsp + 0x368]>', '<mov~~esi, dword ptr [rsp + 0x35c]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x344], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x344]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x378]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x348], rax>', '<cmp~~rax, rcx>', '<je~~0x401f0d>']}, {'block_Idx': 390, 'blockInsts': ['<jmp~~0x40225d>']}, {'block_Idx': 144, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x4e4]>', '<mov~~rax, qword ptr [rsp + 0x550]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x31cb]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 204, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x178]>', '<mov~~rcx, qword ptr [rsp + 0x180]>', '<mov~~edx, dword ptr [rsp + 0x188]>', '<mov~~rsi, qword ptr [rsp + 0x4b0]>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x1ec], esi>', '<mov~~esi, edx>', '<mov~~dword ptr [rsp + 0x1f0], esi>', '<mov~~dword ptr [rsp + 0x1f4], edx>', '<mov~~qword ptr [rsp + 0x1f8], rcx>', '<mov~~qword ptr [rsp + 0x200], rax>', '<mov~~rsi, qword ptr [rsp + 0x1c0]>', '<mov~~eax, dword ptr [rsp + 0x1ec]>', '<mov~~r8d, dword ptr [rsp + 0x1f0]>', '<mov~~edi, dword ptr [rsp + 0x1f4]>', '<mov~~rcx, qword ptr [rsp + 0x1f8]>', '<mov~~rdx, qword ptr [rsp + 0x200]>', '<add~~rsi, 1>', '<movsxd~~r9, eax>', '<cmp~~rsi, r9>', '<mov~~r9d, eax>', '<mov~~dword ptr [rsp + 0x20c], r9d>', '<mov~~dword ptr [rsp + 0x210], r8d>', '<mov~~dword ptr [rsp + 0x214], edi>', '<mov~~qword ptr [rsp + 0x218], rsi>', '<mov~~qword ptr [rsp + 0x220], rdx>', '<mov~~qword ptr [rsp + 0x228], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402651>']}, {'block_Idx': 81, 'blockInsts': ['<jmp~~0x40252e>']}, {'block_Idx': 26, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x5ac]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~ecx, dword ptr [rax + 0xc]>', '<add~~edx, 1>', '<xor~~eax, eax>', '<cmp~~ecx, edx>', '<mov~~edx, ecx>', '<mov~~dword ptr [rsp + 0x58c], edx>', '<mov~~dword ptr [rsp + 0x590], ecx>', '<mov~~dword ptr [rsp + 0x594], eax>', '<je~~0x400de0>']}, {'block_Idx': 202, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x118]>', '<mov~~edx, dword ptr [rsp + 0x12c]>', '<mov~~rsi, qword ptr [rsp + 0x110]>', '<mov~~ecx, dword ptr [rsp + 0x138]>', '<mov~~r8d, dword ptr [rsp + 0x134]>', '<mov~~edi, dword ptr [rsp + 0x130]>', '<mov~~r9d, dword ptr [rsp + 0x13c]>', '<mov~~word ptr [rsi], r9w>', '<sub~~edi, r8d>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0xfc], edx>', '<mov~~qword ptr [rsp + 0x100], rcx>', '<mov~~qword ptr [rsp + 0x108], rax>', '<mov~~rsi, qword ptr [rsp + 0x120]>', '<mov~~eax, dword ptr [rsp + 0xfc]>', '<mov~~rcx, qword ptr [rsp + 0x100]>', '<mov~~rdx, qword ptr [rsp + 0x108]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x154], edi>', '<mov~~qword ptr [rsp + 0x158], rsi>', '<mov~~qword ptr [rsp + 0x160], rdx>', '<mov~~qword ptr [rsp + 0x168], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x4029ae>']}, {'block_Idx': 208, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x38]>', '<mov~~edx, dword ptr [rsp + 0x48]>', '<mov~~rsi, qword ptr [rsp + 0x30]>', '<mov~~edi, dword ptr [rsp + 0x4c]>', '<mov~~ecx, dword ptr [rsp + 0x50]>', '<mov~~r8d, dword ptr [rsp + 0x54]>', '<mov~~word ptr [rsi], r8w>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0x1c], edx>', '<mov~~qword ptr [rsp + 0x20], rcx>', '<mov~~qword ptr [rsp + 0x28], rax>', '<mov~~rsi, qword ptr [rsp + 0x40]>', '<mov~~eax, dword ptr [rsp + 0x1c]>', '<mov~~rcx, qword ptr [rsp + 0x20]>', '<mov~~rdx, qword ptr [rsp + 0x28]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x6c], edi>', '<mov~~qword ptr [rsp + 0x70], rsi>', '<mov~~qword ptr [rsp + 0x78], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402e34>']}, {'block_Idx': 112, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<call~~0x4030a5>']}, {'block_Idx': 36, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~eax, dword ptr [rsp + 0x620]>', '<mov~~ecx, dword ptr [rsp + 0x18]>', '<mov~~rdi, qword ptr [rdx + 0x20]>', '<sub~~ecx, eax>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x164b]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 156, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jmp~~0x402f63>']}, {'block_Idx': 58, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x588]>', '<movsxd~~rcx, eax>', '<lea~~rax, [rip + 0x3a37]>', '<shl~~rcx, 2>', '<add~~rax, rcx>', '<mov~~qword ptr [rsp + 0x578], rax>', '<jmp~~0x400e92>']}, {'block_Idx': 193, 'blockInsts': ['<jmp~~0x402f63>']}, {'block_Idx': 129, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<sub~~eax, 0xd>', '<je~~0x4013f1>']}, {'block_Idx': 157, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x490]>', '<mov~~ecx, dword ptr [rsp + 0x494]>', '<cmp~~ecx, 2>', '<mov~~dword ptr [rsp + 0x484], eax>', '<je~~0x40167e>']}, {'block_Idx': 172, 'blockInsts': ['<lea~~rdi, [rip + 0x1c37]>', '<lea~~rsi, [rip + 0x1bc8]>', '<mov~~edx, 0x2b5>', '<lea~~rcx, [rip + 0x1c35]>', '<call~~0x500050>']}, {'block_Idx': 55, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x694], eax>', '<jmp~~0x40307a>']}, {'block_Idx': 75, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2073]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 46, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~edx, dword ptr [rsp + 0x5f0]>', '<mov~~ecx, dword ptr [rax]>', '<add~~ecx, edx>', '<mov~~dword ptr [rax], ecx>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x5dc]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<jne~~0x402f9a>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x688]>', '<mov~~ecx, dword ptr [rsp + 0x6ac]>', '<mov~~esi, dword ptr [rsp + 0x690]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, rdx>', '<add~~rdi, 0xa8>', '<mov~~qword ptr [rsp + 0x668], rdi>', '<mov~~edx, dword ptr [rdx + 0xa8]>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x674], edx>', '<mov~~dword ptr [rsp + 0x678], ecx>', '<mov~~dword ptr [rsp + 0x67c], eax>', '<jae~~0x4006d2>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x668]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~edx, dword ptr [rsp + 0x690]>', '<mov~~rdi, qword ptr [rax + 0x98]>', '<call~~0x500010>']}, {'block_Idx': 111, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x510]>', '<mov~~eax, dword ptr [rsp + 0x598]>', '<movsxd~~rdx, eax>', '<lea~~rax, [rip + 0x3199]>', '<mov~~eax, dword ptr [rax + rdx*4]>', '<mov~~dword ptr [rsp + 0x508], ecx>', '<mov~~dword ptr [rsp + 0x50c], eax>', '<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~edx, dword ptr [rsp + 0x508]>', '<mov~~eax, dword ptr [rsp + 0x50c]>', '<mov~~dword ptr [rsp + 0x4fc], eax>', '<mov~~dword ptr [rsp + 0x500], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x504], ecx>', '<cmp~~eax, ecx>', '<jle~~0x4012b5>']}, {'block_Idx': 66, 'blockInsts': ['<jmp~~0x40252e>']}, {'block_Idx': 192, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x560]>', '<mov~~rax, qword ptr [rsp + 0x568]>', '<mov~~rsi, qword ptr [rsp + 0x148]>', '<mov~~rdx, qword ptr [rsp + 0x140]>', '<mov~~r8d, dword ptr [rsp + 0x154]>', '<mov~~rdi, qword ptr [rsp + 0x158]>', '<mov~~r9, qword ptr [rsp + 0x160]>', '<mov~~r10, qword ptr [rsp + 0x168]>', '<mov~~qword ptr [rsp + 0x110], r10>', '<mov~~qword ptr [rsp + 0x118], r9>', '<mov~~qword ptr [rsp + 0x120], rdi>', '<mov~~dword ptr [rsp + 0x12c], r8d>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~dword ptr [rsp + 0x130], edx>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~dword ptr [rsp + 0x134], esi>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x138], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x13c], edx>', '<cmp~~eax, 0>', '<je~~0x402a9f>']}, {'block_Idx': 167, 'blockInsts': ['<jmp~~0x401699>']}, {'block_Idx': 47, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x624]>', '<mov~~rcx, qword ptr [rsp + 8]>', '<mov~~esi, dword ptr [rsp + 0x18]>', '<mov~~edx, dword ptr [rsp + 0x14]>', '<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<mov~~r8d, esi>', '<add~~r8d, dword ptr [rdi + 0xa4]>', '<mov~~dword ptr [rdi + 0xa4], r8d>', '<sub~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x694], eax>', '<mov~~eax, dword ptr [rsp + 0x694]>', '<add~~rsp, 0x708>', '<ret~~>']}, {'block_Idx': 185, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6e0]>', '<mov~~rcx, qword ptr [rsp + 0x6e8]>', '<mov~~esi, dword ptr [rsp + 0xf8]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0xc8], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0xd0], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0xdc], esi>', '<mov~~qword ptr [rsp + 0xe0], rdx>', '<mov~~qword ptr [rsp + 0xe8], rcx>', '<mov~~qword ptr [rsp + 0xf0], rax>', '<jmp~~0x402c06>']}, {'block_Idx': 101, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~edx, dword ptr [rsp + 0x508]>', '<mov~~eax, dword ptr [rsp + 0x50c]>', '<mov~~dword ptr [rsp + 0x4fc], eax>', '<mov~~dword ptr [rsp + 0x500], edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x504], ecx>', '<cmp~~eax, ecx>', '<jle~~0x4012b5>']}, {'block_Idx': 128, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x4d8], rcx>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x4d4], eax>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x4d8]>', '<movsxd~~rcx, eax>', '<xor~~esi, esi>', '<call~~0x500040>']}, {'block_Idx': 40, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5ac]>', '<add~~eax, -7>', '<mov~~ecx, 2>', '<mov~~dword ptr [rsp + 0x590], ecx>', '<mov~~dword ptr [rsp + 0x594], eax>', '<jmp~~0x400de0>']}, {'block_Idx': 249, 'blockInsts': ['<push~~rbp>', '<mov~~rbp, rsp>', '<sub~~rsp, 0x1f0>', '<mov~~dword ptr [rbp - 0x30], edx>', '<mov~~dword ptr [rbp - 0x2c], esi>', '<mov~~qword ptr [rbp - 0x28], rdi>', '<mov~~eax, edx>', '<mov~~qword ptr [rbp - 0x20], rax>', '<lea~~rcx, [rax*4 + 0xf]>', '<and~~rcx, 0xfffffffffffffff0>', '<mov~~rax, rsp>', '<sub~~rax, rcx>', '<mov~~qword ptr [rbp - 0x18], rax>', '<mov~~rsp, rax>', '<movsxd~~rax, esi>', '<mov~~rax, qword ptr [rdi + rax*8 + 0x58]>', '<mov~~qword ptr [rbp - 0x10], rax>', '<cmp~~edx, 0>', '<setg~~al>', '<mov~~byte ptr [rbp - 1], al>', '<test~~al, 1>', '<jne~~0x40328a>']}, {'block_Idx': 290, 'blockInsts': ['<jmp~~0x40240e>']}, {'block_Idx': 95, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x598]>', '<sub~~eax, 6>', '<je~~0x401189>']}, {'block_Idx': 63, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rsp + 0x628]>', '<mov~~edi, dword ptr [rcx + 4]>', '<ror~~di, 8>', '<ror~~edi, 0x10>', '<ror~~di, 8>', '<shr~~edi, 0xf8>', '<mov~~dword ptr [rsp + 0x540], edi>', '<mov~~dword ptr [rax], 0x28>', '<mov~~ecx, edi>', '<xor~~ecx, 0xff>', '<shr~~edi, 0x10>', '<cmp~~ecx, 0x10000>', '<cmovb~~edi, ecx>', '<mov~~edx, 0x10>', '<xor~~eax, eax>', '<cmp~~ecx, 0x10000>', '<cmovb~~edx, eax>', '<mov~~esi, edi>', '<and~~esi, 0xff00>', '<mov~~ecx, edi>', '<shr~~ecx, 8>', '<mov~~eax, edx>', '<or~~eax, 8>', '<cmp~~esi, 0>', '<cmove~~ecx, edi>', '<cmp~~esi, 0>', '<cmove~~eax, edx>', '<mov~~ecx, ecx>', '<mov~~edx, ecx>', '<mov~~rcx, qword ptr [rip + 0xff02f]>', '<movzx~~ecx, byte ptr [rcx + rdx]>', '<add~~eax, ecx>', '<mov~~ecx, 7>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsp + 0x544], ecx>', '<cmp~~eax, 6>', '<je~~0x401123>']}, {'block_Idx': 221, 'blockInsts': ['<jmp~~0x40252e>']}, {'block_Idx': 214, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x120]>', '<mov~~eax, dword ptr [rsp + 0xfc]>', '<mov~~rcx, qword ptr [rsp + 0x100]>', '<mov~~rdx, qword ptr [rsp + 0x108]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x154], edi>', '<mov~~qword ptr [rsp + 0x158], rsi>', '<mov~~qword ptr [rsp + 0x160], rdx>', '<mov~~qword ptr [rsp + 0x168], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x4029ae>']}, {'block_Idx': 54, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x18], rdi>', '<mov~~qword ptr [rsp + 0x20], rsi>', '<mov~~qword ptr [rsp + 0x28], rdx>', '<mov~~eax, dword ptr [rdx + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<mov~~dword ptr [rsp + 0x34], eax>', '<mov~~dword ptr [rsi], eax>', '<cmp~~eax, 0x10>', '<jge~~0x400166>']}, {'block_Idx': 162, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x234]>', '<cmp~~eax, 2>', '<jne~~0x40298f>']}, {'block_Idx': 118, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~eax, dword ptr [rsp + 0x59c]>', '<movsxd~~rdx, eax>', '<lea~~rax, [rip + 0x30c6]>', '<mov~~eax, dword ptr [rax + rdx*4]>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014a6>']}, {'block_Idx': 235, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x248]>', '<mov~~rcx, qword ptr [rsp + 0x4b8]>', '<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x4c4], edx>', '<mov~~dword ptr [rsp + 0x4c8], ecx>', '<mov~~dword ptr [rsp + 0x4cc], eax>', '<jmp~~0x402577>']}, {'block_Idx': 150, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x648]>', '<mov~~edx, dword ptr [rsp + 0x4c4]>', '<mov~~eax, dword ptr [rsp + 0x4c8]>', '<mov~~esi, dword ptr [rsp + 0x4cc]>', '<mov~~dword ptr [rsp + 0x234], edx>', '<mov~~edi, esi>', '<neg~~edi>', '<and~~edi, 7>', '<mov~~edx, esi>', '<mov~~esi, edi>', '<lea~~edx, [rdx + rsi + 0x10]>', '<mov~~dword ptr [rcx], edx>', '<mov~~ecx, eax>', '<mov~~qword ptr [rsp + 0x238], rcx>', '<sub~~eax, 3>', '<ja~~0x4025d3>']}, {'block_Idx': 392, 'blockInsts': ['<jmp~~0x40252e>']}, {'block_Idx': 42, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, qword ptr [rsp + 0x680]>', '<mov~~rdi, qword ptr [rsp + 0x6a0]>', '<mov~~rsi, qword ptr [rsp + 0x6f8]>', '<mov~~eax, dword ptr [rsp + 0x68c]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<mov~~edx, dword ptr [rdx]>', '<add~~rcx, rdx>', '<mov~~edx, eax>', '<add~~edx, dword ptr [rdi]>', '<mov~~dword ptr [rdi], edx>', '<cmp~~edx, dword ptr [rsi]>', '<setl~~dil>', '<cmp~~eax, 0>', '<setne~~sil>', '<and~~sil, dil>', '<test~~sil, 1>', '<mov~~esi, eax>', '<mov~~dword ptr [rsp + 0x6b0], esi>', '<mov~~dword ptr [rsp + 0x6b4], edx>', '<mov~~qword ptr [rsp + 0x6b8], rcx>', '<mov~~dword ptr [rsp + 0x694], eax>', '<jne~~0x40307a>']}, {'block_Idx': 1, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x6d4]>', '<mov~~rax, qword ptr [rsp + 0x6f8]>', '<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<mov~~edx, 4>', '<cmp~~ecx, 4>', '<cmovg~~edx, ecx>', '<mov~~dword ptr [rax], edx>', '<mov~~rdi, qword ptr [rsi + 0x98]>', '<add~~rsi, 0xa8>', '<call~~0x500010>']}, {'block_Idx': 34, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5ec]>', '<cmp~~eax, 0>', '<jle~~0x400b59>']}, {'block_Idx': 87, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x528]>', '<mov~~rdx, qword ptr [rsp + 0x530]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~dword ptr [rsp + 0x514], eax>', '<mov~~qword ptr [rsp + 0x518], rdx>', '<mov~~qword ptr [rsp + 0x520], rcx>', '<cmp~~eax, 1>', '<jle~~0x401106>']}, {'block_Idx': 97, 'blockInsts': ['<jmp~~0x40252e>']}, {'block_Idx': 134, 'blockInsts': ['<jmp~~0x40138c>']}, {'block_Idx': 183, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x1c0]>', '<mov~~eax, dword ptr [rsp + 0x1ec]>', '<mov~~r8d, dword ptr [rsp + 0x1f0]>', '<mov~~edi, dword ptr [rsp + 0x1f4]>', '<mov~~rcx, qword ptr [rsp + 0x1f8]>', '<mov~~rdx, qword ptr [rsp + 0x200]>', '<add~~rsi, 1>', '<movsxd~~r9, eax>', '<cmp~~rsi, r9>', '<mov~~r9d, eax>', '<mov~~dword ptr [rsp + 0x20c], r9d>', '<mov~~dword ptr [rsp + 0x210], r8d>', '<mov~~dword ptr [rsp + 0x214], edi>', '<mov~~qword ptr [rsp + 0x218], rsi>', '<mov~~qword ptr [rsp + 0x220], rdx>', '<mov~~qword ptr [rsp + 0x228], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402651>']}, {'block_Idx': 256, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x348]>', '<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x380], edx>', '<mov~~dword ptr [rsp + 0x384], ecx>', '<mov~~qword ptr [rsp + 0x388], rax>', '<jmp~~0x401d5e>']}, {'block_Idx': 232, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, qword ptr [rsp + 0x488]>', '<mov~~rsi, qword ptr [rsp + 0x4b0]>', '<mov~~eax, dword ptr [rsp + 0x450]>', '<and~~eax, 0xfffffff7>', '<mov~~dword ptr [rsp + 0x390], eax>', '<mov~~esi, dword ptr [rsi]>', '<mov~~dword ptr [rsp + 0x394], esi>', '<mov~~rcx, qword ptr [rcx + rdx*8 + 0x58]>', '<mov~~qword ptr [rsp + 0x398], rcx>', '<cmp~~eax, 0>', '<je~~0x401f36>']}, {'block_Idx': 32, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~eax, dword ptr [rax]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x610], rcx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<jmp~~0x400958>']}, {'block_Idx': 174, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0xf8], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x402f63>']}, {'block_Idx': 158, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x490]>', '<mov~~ecx, dword ptr [rsp + 0x494]>', '<or~~ecx, 2>', '<sub~~ecx, 3>', '<mov~~dword ptr [rsp + 0x484], eax>', '<je~~0x40167e>']}, {'block_Idx': 347, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x164]>', '<add~~rsp, 0x198>', '<ret~~>']}, {'block_Idx': 255, 'blockInsts': ['<mov~~edx, dword ptr [rsp + 0x390]>', '<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<mov~~rax, qword ptr [rsp + 0x488]>', '<mov~~esi, eax>', '<call~~0x4039df>']}, {'block_Idx': 89, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~dword ptr [rax + 0xa0], 0>', '<mov~~dword ptr [rax + 0xa4], 0>', '<mov~~eax, 0xffffffff>', '<mov~~dword ptr [rsp + 0x694], eax>', '<jmp~~0x40307a>']}, {'block_Idx': 178, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~edx, dword ptr [rsp + 0x484]>', '<mov~~dword ptr [rsp + 0x468], edx>', '<mov~~edx, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x46c], edx>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x470], rcx>', '<mov~~esi, edx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edx>', '<and~~ecx, 7>', '<movzx~~esi, sil>', '<mov~~dword ptr [rsp + 0x480], esi>', '<add~~edx, 1>', '<mov~~dword ptr [rsp + 0x47c], edx>', '<mov~~dword ptr [rax], edx>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x480]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<je~~0x401728>']}, {'block_Idx': 240, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x550]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x2353]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 341, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x390]>', '<mov~~rcx, qword ptr [rsp + 0x398]>', '<mov~~esi, dword ptr [rsp + 0x338]>', '<mov~~edx, dword ptr [rsp + 0x33c]>', '<sub~~edx, esi>', '<mov~~esi, eax>', '<add~~esi, -3>', '<mov~~esi, esi>', '<mov~~ecx, dword ptr [rcx + rsi*4]>', '<mov~~dword ptr [rsp + 0x330], ecx>', '<add~~ecx, edx>', '<mov~~dword ptr [rsp + 0x334], ecx>', '<cmp~~eax, 3>', '<je~~0x4020b6>']}, {'block_Idx': 177, 'blockInsts': ['<lea~~rdi, [rip + 0x17b1]>', '<lea~~rsi, [rip + 0x1742]>', '<mov~~edx, 0x2b9>', '<lea~~rcx, [rip + 0x17af]>', '<call~~0x500050>']}, {'block_Idx': 251, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~edi, dword ptr [rsp + 0x3cc]>', '<mov~~esi, dword ptr [rsp + 0x3c8]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~r9d, dword ptr [rsp + 0x3d4]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x3b4], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x3d0]>', '<mov~~dword ptr [rsp + 0x3b8], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3b4]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3b8]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x3bc], eax>', '<mov~~rax, qword ptr [rsp + 0x3c0]>', '<mov~~rdx, qword ptr [rsp + 0x410]>', '<mov~~edi, dword ptr [rsp + 0x3c8]>', '<mov~~esi, dword ptr [rsp + 0x3bc]>', '<mov~~ecx, 0x20>', '<sub~~ecx, edi>', '<mov~~dword ptr [rsp + 0x3a4], ecx>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x3a4]>', '<sar~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~rdx, qword ptr [rdx]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3a8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<jge~~0x40240e>']}, {'block_Idx': 27, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~ecx, dword ptr [rsp + 0x5ac]>', '<add~~ecx, -8>', '<sub~~ecx, 3>', '<setb~~cl>', '<mov~~eax, dword ptr [rax + 0xc]>', '<mov~~edx, eax>', '<sub~~edx, 2>', '<sete~~dl>', '<and~~cl, dl>', '<test~~cl, 1>', '<mov~~dword ptr [rsp + 0x58c], eax>', '<jne~~0x400d91>']}, {'block_Idx': 266, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x380]>', '<mov~~eax, dword ptr [rsp + 0x384]>', '<mov~~rsi, qword ptr [rsp + 0x388]>', '<mov~~qword ptr [rsp + 0x360], rsi>', '<mov~~dword ptr [rsp + 0x368], eax>', '<mov~~dword ptr [rsp + 0x36c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x370], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x374], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401df7>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x628]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~dword ptr [rdx], 0x20>', '<mov~~rdx, rax>', '<add~~rdx, 0x54>', '<mov~~qword ptr [rsp + 0x5f8], rdx>', '<mov~~rdx, rax>', '<add~~rdx, 0x20>', '<mov~~qword ptr [rsp + 0x600], rdx>', '<mov~~qword ptr [rsp + 0x608], rax>', '<mov~~eax, 0x20>', '<mov~~qword ptr [rsp + 0x610], rcx>', '<mov~~dword ptr [rsp + 0x61c], eax>', '<mov~~rdi, qword ptr [rsp + 0x648]>', '<mov~~rax, qword ptr [rsp + 0x610]>', '<mov~~edx, dword ptr [rsp + 0x61c]>', '<mov~~qword ptr [rsp + 0x5d0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x5e4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x5dc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x5e0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x5e8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x5ec], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x5f4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400ac0>']}, {'block_Idx': 219, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~edi, dword ptr [rsp + 0x430]>', '<mov~~esi, dword ptr [rsp + 0x42c]>', '<mov~~rax, qword ptr [rsp + 0x470]>', '<mov~~r9d, dword ptr [rsp + 0x40c]>', '<shr~~r9d, 0xf0>', '<mov~~r8d, edi>', '<add~~r8d, 0x10>', '<mov~~ecx, esi>', '<add~~ecx, -0x10>', '<mov~~dword ptr [rsp + 0x3fc], ecx>', '<shl~~r9d, cl>', '<mov~~ecx, dword ptr [rsp + 0x408]>', '<mov~~dword ptr [rsp + 0x400], r9d>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x3fc]>', '<mov~~r8b, cl>', '<xor~~ecx, ecx>', '<sub~~cl, r8b>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x400]>', '<add~~esi, edi>', '<mov~~dword ptr [rdx], esi>', '<or~~eax, ecx>', '<mov~~dword ptr [rsp + 0x404], eax>', '<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~esi, dword ptr [rsp + 0x42c]>', '<mov~~edx, dword ptr [rsp + 0x404]>', '<mov~~ecx, 0x20>', '<sub~~ecx, esi>', '<mov~~dword ptr [rsp + 0x3f4], ecx>', '<shl~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x3f4]>', '<sar~~edx, cl>', '<mov~~dword ptr [rsp + 0x3f8], edx>', '<cmp~~dword ptr [rax], 0>', '<jle~~0x40240e>']}, {'block_Idx': 354, 'blockInsts': ['<jmp~~0x40219e>']}, {'block_Idx': 391, 'blockInsts': ['<mov~~r10d, dword ptr [rsp + 0x328]>', '<mov~~eax, dword ptr [rsp + 0x324]>', '<mov~~ecx, dword ptr [rsp + 0x320]>', '<mov~~esi, dword ptr [rsp + 0x31c]>', '<mov~~rdi, qword ptr [rsp + 0x310]>', '<mov~~r8, qword ptr [rsp + 0x308]>', '<mov~~r9, qword ptr [rsp + 0x398]>', '<add~~esi, dword ptr [r9 + rdi*4]>', '<mov~~dword ptr [rsp + 0x268], esi>', '<mov~~edx, esi>', '<add~~edx, ecx>', '<mov~~dword ptr [rsp + 0x26c], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x270], ecx>', '<mov~~eax, ecx>', '<add~~eax, r10d>', '<mov~~dword ptr [rsp + 0x274], eax>', '<mov~~dword ptr [r9 + rdi*4], eax>', '<add~~rdi, 1>', '<mov~~qword ptr [rsp + 0x278], rdi>', '<cmp~~rdi, r8>', '<mov~~qword ptr [rsp + 0x310], rdi>', '<mov~~dword ptr [rsp + 0x31c], esi>', '<mov~~dword ptr [rsp + 0x320], edx>', '<mov~~dword ptr [rsp + 0x324], ecx>', '<mov~~dword ptr [rsp + 0x328], eax>', '<je~~0x40240e>']}, {'block_Idx': 184, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x560]>', '<mov~~rsi, qword ptr [rsp + 0x1c0]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rax, qword ptr [rsp + 0x568]>', '<mov~~r8d, dword ptr [rsp + 0x1cc]>', '<mov~~rdi, qword ptr [rsp + 0x1d0]>', '<mov~~r9, qword ptr [rsp + 0x1d8]>', '<mov~~r10, qword ptr [rsp + 0x1e0]>', '<mov~~qword ptr [rsp + 0x1a0], r10>', '<mov~~qword ptr [rsp + 0x1a8], r9>', '<mov~~qword ptr [rsp + 0x1b0], rdi>', '<mov~~dword ptr [rsp + 0x1b8], r8d>', '<mov~~eax, dword ptr [rax]>', '<mov~~rdx, qword ptr [rdx + rdi*8 + 0x58]>', '<mov~~edx, dword ptr [rdx + rsi*4]>', '<mov~~ecx, dword ptr [rcx]>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x1bc], edx>', '<cmp~~eax, 0>', '<je~~0x40279d>']}, {'block_Idx': 60, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x648]>', '<mov~~eax, dword ptr [rsp + 0x5b4]>', '<add~~eax, 8>', '<mov~~dword ptr [rsp + 0x5b0], eax>', '<mov~~dword ptr [rcx], eax>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~edx, dword ptr [rsp + 0x620]>', '<mov~~ecx, eax>', '<mov~~eax, dword ptr [rsp + 0x5b0]>', '<add~~ecx, 2>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x5c8], eax>', '<jl~~0x400c2d>']}, {'block_Idx': 233, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x450]>', '<cmp~~eax, 0x1f>', '<jle~~0x4023ee>']}, {'block_Idx': 147, 'blockInsts': ['<mov~~rcx, rax>', '<mov~~rax, qword ptr [rsp + 0x58]>', '<mov~~qword ptr [rax + 0x98], rcx>', '<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 44, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x648]>', '<mov~~rax, qword ptr [rsp + 0x610]>', '<mov~~edx, dword ptr [rsp + 0x61c]>', '<mov~~qword ptr [rsp + 0x5d0], rax>', '<mov~~ecx, edx>', '<sar~~ecx, 3>', '<movsxd~~rcx, ecx>', '<mov~~cl, byte ptr [rax + rcx]>', '<mov~~esi, edx>', '<and~~esi, 7>', '<mov~~dword ptr [rsp + 0x5e4], esi>', '<movzx~~ecx, cl>', '<mov~~dword ptr [rsp + 0x5dc], ecx>', '<mov~~ecx, edx>', '<add~~ecx, 1>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<and~~ecx, 7>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf9>', '<mov~~dword ptr [rsp + 0x5e0], esi>', '<mov~~esi, edx>', '<add~~esi, 8>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~esi, dword ptr [rax + rsi]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shl~~esi, cl>', '<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<shr~~esi, 0xf0>', '<mov~~r8d, edx>', '<add~~r8d, 0x18>', '<shl~~esi, 8>', '<sar~~r8d, 3>', '<movsxd~~r8, r8d>', '<mov~~eax, dword ptr [rax + r8]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x638]>', '<shr~~eax, 0xf8>', '<add~~edx, 0x20>', '<mov~~dword ptr [rsp + 0x5e8], edx>', '<mov~~dword ptr [rdi], edx>', '<or~~eax, esi>', '<mov~~dword ptr [rsp + 0x5ec], eax>', '<shl~~eax, 3>', '<mov~~dword ptr [rsp + 0x5f0], eax>', '<add~~eax, edx>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x5f4], ecx>', '<cmp~~eax, ecx>', '<jle~~0x400ac0>']}, {'block_Idx': 367, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x2cc]>', '<mov~~rcx, qword ptr [rsp + 0x2c0]>', '<mov~~rdx, qword ptr [rsp + 0x2b8]>', '<mov~~rsi, qword ptr [rsp + 0x398]>', '<add~~eax, dword ptr [rsi + rcx*4]>', '<mov~~dword ptr [rsp + 0x2ac], eax>', '<mov~~dword ptr [rsi + rcx*4], eax>', '<add~~rcx, 1>', '<mov~~qword ptr [rsp + 0x2b0], rcx>', '<cmp~~rcx, rdx>', '<mov~~qword ptr [rsp + 0x2c0], rcx>', '<mov~~dword ptr [rsp + 0x2cc], eax>', '<je~~0x40240e>']}, {'block_Idx': 98, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~ecx, dword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~rsi, qword ptr [rsp + 0x520]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf8>', '<add~~ecx, 8>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x508], ecx>', '<mov~~dword ptr [rsp + 0x50c], eax>', '<jmp~~0x401258>']}, {'block_Idx': 139, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<sub~~eax, 0xe>', '<je~~0x401438>']}, {'block_Idx': 171, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x174], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x402f63>']}, {'block_Idx': 203, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x4b0]>', '<mov~~rsi, qword ptr [rsp + 0x118]>', '<mov~~rax, qword ptr [rsp + 0x560]>', '<mov~~ecx, dword ptr [rsp + 0x134]>', '<mov~~edi, dword ptr [rsp + 0x130]>', '<mov~~r8d, dword ptr [rsp + 0x13c]>', '<mov~~dword ptr [rsi], r8d>', '<sub~~edi, ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0x110]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0xfc], edx>', '<mov~~qword ptr [rsp + 0x100], rcx>', '<mov~~qword ptr [rsp + 0x108], rax>', '<jmp~~0x402b04>']}, {'block_Idx': 164, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x234]>', '<cmp~~eax, 2>', '<jne~~0x402be7>']}, {'block_Idx': 371, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x390]>', '<mov~~rax, qword ptr [rsp + 0x550]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x23c3]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 370, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x394]>', '<cmp~~eax, 4>', '<jle~~0x40240e>']}, {'block_Idx': 339, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x340]>', '<mov~~ecx, dword ptr [rsp + 0x394]>', '<mov~~ecx, ecx>', '<mov~~qword ptr [rsp + 0x2b8], rcx>', '<mov~~ecx, 1>', '<mov~~qword ptr [rsp + 0x2c0], rcx>', '<mov~~dword ptr [rsp + 0x2cc], eax>', '<mov~~eax, dword ptr [rsp + 0x2cc]>', '<mov~~rcx, qword ptr [rsp + 0x2c0]>', '<mov~~rdx, qword ptr [rsp + 0x2b8]>', '<mov~~rsi, qword ptr [rsp + 0x398]>', '<add~~eax, dword ptr [rsi + rcx*4]>', '<mov~~dword ptr [rsp + 0x2ac], eax>', '<mov~~dword ptr [rsi + rcx*4], eax>', '<add~~rcx, 1>', '<mov~~qword ptr [rsp + 0x2b0], rcx>', '<cmp~~rcx, rdx>', '<mov~~qword ptr [rsp + 0x2c0], rcx>', '<mov~~dword ptr [rsp + 0x2cc], eax>', '<je~~0x40240e>']}, {'block_Idx': 209, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x4b0]>', '<mov~~rsi, qword ptr [rsp + 0x38]>', '<mov~~edi, dword ptr [rsp + 0x4c]>', '<mov~~rax, qword ptr [rsp + 0x560]>', '<mov~~ecx, dword ptr [rsp + 0x54]>', '<mov~~dword ptr [rsi], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0x30]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x1c], edx>', '<mov~~qword ptr [rsp + 0x20], rcx>', '<mov~~qword ptr [rsp + 0x28], rax>', '<jmp~~0x402f21>']}, {'block_Idx': 207, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x4b0]>', '<mov~~rsi, qword ptr [rsp + 0xa8]>', '<mov~~edi, dword ptr [rsp + 0xbc]>', '<mov~~rax, qword ptr [rsp + 0x560]>', '<mov~~ecx, dword ptr [rsp + 0xc4]>', '<mov~~dword ptr [rsi], ecx>', '<mov~~ecx, dword ptr [rax]>', '<shl~~edi, cl>', '<mov~~rcx, qword ptr [rsp + 0xa0]>', '<mov~~rax, rsi>', '<add~~rax, 8>', '<mov~~dword ptr [rsi + 4], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x8c], edx>', '<mov~~qword ptr [rsp + 0x90], rcx>', '<mov~~qword ptr [rsp + 0x98], rax>', '<jmp~~0x402d41>']}, {'block_Idx': 18, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x648]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~edx, dword ptr [rsp + 0x654]>', '<mov~~esi, edx>', '<shr~~esi, 0xfc>', '<mov~~dword ptr [rsp + 0x598], esi>', '<shl~~edx, 4>', '<shr~~edx, 0xfc>', '<mov~~dword ptr [rsp + 0x59c], edx>', '<mov~~rdx, rax>', '<add~~rdx, 3>', '<mov~~qword ptr [rsp + 0x5a0], rdx>', '<mov~~eax, dword ptr [rax + 3]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x5a8], eax>', '<shr~~eax, 0xfc>', '<mov~~dword ptr [rsp + 0x5ac], eax>', '<mov~~dword ptr [rcx], 0x1c>', '<cmp~~eax, 8>', '<jge~~0x400d5e>']}, {'block_Idx': 86, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x598]>', '<test~~eax, eax>', '<je~~0x40116c>']}, {'block_Idx': 92, 'blockInsts': ['<jmp~~0x40114d>']}, {'block_Idx': 189, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x45c]>', '<mov~~eax, dword ptr [rsp + 0x460]>', '<mov~~edx, dword ptr [rsp + 0x464]>', '<mov~~dword ptr [rsp + 0x428], edx>', '<mov~~dword ptr [rsp + 0x42c], eax>', '<mov~~dword ptr [rsp + 0x430], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x4018e5>']}, {'block_Idx': 117, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~ecx, dword ptr [rsp + 0x4e8]>', '<mov~~edx, dword ptr [rsp + 0x4ec]>', '<mov~~dword ptr [rsp + 0x4d0], edx>', '<add~~ecx, 8>', '<mov~~dword ptr [rax], ecx>', '<xor~~edi, edi>', '<call~~0x500038>']}, {'block_Idx': 357, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x390]>', '<mov~~edx, dword ptr [rsp + 0x338]>', '<mov~~edi, dword ptr [rsp + 0x334]>', '<mov~~rsi, qword ptr [rsp + 0x398]>', '<mov~~ecx, dword ptr [rsp + 0x330]>', '<shl~~ecx, 1>', '<mov~~r8d, eax>', '<add~~r8d, -4>', '<mov~~r8d, r8d>', '<mov~~esi, dword ptr [rsi + r8*4]>', '<add~~ecx, edi>', '<add~~edx, esi>', '<sub~~ecx, edx>', '<mov~~dword ptr [rsp + 0x32c], ecx>', '<cmp~~eax, 4>', '<jne~~0x40238c>']}, {'block_Idx': 206, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0xa8]>', '<mov~~edx, dword ptr [rsp + 0xb8]>', '<mov~~rsi, qword ptr [rsp + 0xa0]>', '<mov~~edi, dword ptr [rsp + 0xbc]>', '<mov~~ecx, dword ptr [rsp + 0xc0]>', '<mov~~r8d, dword ptr [rsp + 0xc4]>', '<mov~~word ptr [rsi], r8w>', '<shl~~edi, cl>', '<mov~~ecx, edi>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 4>', '<mov~~word ptr [rsi + 2], di>', '<mov~~dword ptr [rsp + 0x8c], edx>', '<mov~~qword ptr [rsp + 0x90], rcx>', '<mov~~qword ptr [rsp + 0x98], rax>', '<mov~~rsi, qword ptr [rsp + 0xb0]>', '<mov~~eax, dword ptr [rsp + 0x8c]>', '<mov~~rcx, qword ptr [rsp + 0x90]>', '<mov~~rdx, qword ptr [rsp + 0x98]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0xdc], edi>', '<mov~~qword ptr [rsp + 0xe0], rsi>', '<mov~~qword ptr [rsp + 0xe8], rdx>', '<mov~~qword ptr [rsp + 0xf0], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402c06>']}, {'block_Idx': 200, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x434]>', '<mov~~edx, dword ptr [rsp + 0x440]>', '<mov~~rsi, qword ptr [rsp + 0x498]>', '<mov~~ecx, dword ptr [rsp + 0x468]>', '<sub~~ecx, eax>', '<mov~~dword ptr [rsi], ecx>', '<mov~~dword ptr [rsp + 0x45c], edx>', '<mov~~dword ptr [rsp + 0x460], ecx>', '<mov~~dword ptr [rsp + 0x464], eax>', '<mov~~ecx, dword ptr [rsp + 0x45c]>', '<mov~~eax, dword ptr [rsp + 0x460]>', '<mov~~edx, dword ptr [rsp + 0x464]>', '<mov~~dword ptr [rsp + 0x428], edx>', '<mov~~dword ptr [rsp + 0x42c], eax>', '<mov~~dword ptr [rsp + 0x430], ecx>', '<cmp~~eax, 0x20>', '<jle~~0x4018e5>']}, {'block_Idx': 64, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x558]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x370f]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 355, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x340]>', '<mov~~ecx, dword ptr [rsp + 0x33c]>', '<mov~~edx, dword ptr [rsp + 0x394]>', '<mov~~edx, edx>', '<mov~~qword ptr [rsp + 0x2d0], rdx>', '<mov~~edx, 2>', '<mov~~qword ptr [rsp + 0x2d8], rdx>', '<mov~~dword ptr [rsp + 0x2e0], ecx>', '<mov~~dword ptr [rsp + 0x2e4], eax>', '<jmp~~0x4021f0>']}, {'block_Idx': 243, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x260]>', '<mov~~rdx, qword ptr [rsp + 0x258]>', '<mov~~ecx, dword ptr [rsp + 0x428]>', '<mov~~esi, dword ptr [rdx + rax*4]>', '<shl~~esi, cl>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~dword ptr [rsp + 0x24c], esi>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x250], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x260], rax>', '<jl~~0x40244e>']}, {'block_Idx': 194, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x1a8]>', '<mov~~edx, dword ptr [rsp + 0x1b8]>', '<mov~~rsi, qword ptr [rsp + 0x1a0]>', '<mov~~ecx, dword ptr [rsp + 0x1bc]>', '<mov~~di, cx>', '<mov~~rcx, rsi>', '<add~~rcx, 2>', '<mov~~word ptr [rsi], di>', '<mov~~dword ptr [rsp + 0x18c], edx>', '<mov~~qword ptr [rsp + 0x190], rcx>', '<mov~~qword ptr [rsp + 0x198], rax>', '<mov~~rdx, qword ptr [rsp + 0x1b0]>', '<mov~~esi, dword ptr [rsp + 0x18c]>', '<mov~~rax, qword ptr [rsp + 0x190]>', '<mov~~rcx, qword ptr [rsp + 0x198]>', '<mov~~qword ptr [rsp + 0x178], rcx>', '<mov~~qword ptr [rsp + 0x180], rax>', '<mov~~dword ptr [rsp + 0x188], esi>', '<add~~rdx, 1>', '<movsxd~~rdi, esi>', '<cmp~~rdx, rdi>', '<mov~~dword ptr [rsp + 0x1cc], esi>', '<mov~~qword ptr [rsp + 0x1d0], rdx>', '<mov~~qword ptr [rsp + 0x1d8], rcx>', '<mov~~qword ptr [rsp + 0x1e0], rax>', '<jl~~0x4026e0>']}, {'block_Idx': 197, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x560]>', '<mov~~rax, qword ptr [rsp + 0x568]>', '<mov~~rsi, qword ptr [rsp + 0x60]>', '<mov~~rdx, qword ptr [rsp + 0x58]>', '<mov~~r8d, dword ptr [rsp + 0x6c]>', '<mov~~rdi, qword ptr [rsp + 0x70]>', '<mov~~r9, qword ptr [rsp + 0x78]>', '<mov~~r10, qword ptr [rsp + 0x80]>', '<mov~~qword ptr [rsp + 0x30], r10>', '<mov~~qword ptr [rsp + 0x38], r9>', '<mov~~qword ptr [rsp + 0x40], rdi>', '<mov~~dword ptr [rsp + 0x48], r8d>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~eax, dword ptr [rax]>', '<mov~~edi, esi>', '<sar~~edi, 1>', '<sub~~edx, edi>', '<mov~~dword ptr [rsp + 0x4c], edx>', '<add~~edx, esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0x50], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x54], edx>', '<cmp~~eax, 0>', '<je~~0x402ee2>']}, {'block_Idx': 22, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x65c]>', '<mov~~ecx, dword ptr [rsp + 0x658]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rdx + 0x98]>', '<mov~~ecx, ecx>', '<mov~~rsi, rdi>', '<add~~rsi, rcx>', '<mov~~eax, eax>', '<mov~~edx, eax>', '<call~~0x500018>']}, {'block_Idx': 33, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x5f8]>', '<cmp~~dword ptr [rax], 0>', '<jne~~0x400b38>']}, {'block_Idx': 246, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x36c]>', '<mov~~edx, dword ptr [rsp + 0x368]>', '<mov~~eax, dword ptr [rsp + 0x374]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x648]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x35c], eax>', '<jmp~~0x401e83>']}, {'block_Idx': 24, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5e0]>', '<cmp~~eax, 0>', '<jne~~0x400b38>']}, {'block_Idx': 302, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x40252e>']}, {'block_Idx': 107, 'blockInsts': ['<jmp~~0x40122f>']}, {'block_Idx': 199, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x550]>', '<mov~~rdi, qword ptr [rax]>', '<lea~~rsi, [rip + 0x2e60]>', '<xor~~edx, edx>', '<call~~0x500048>']}, {'block_Idx': 105, 'blockInsts': ['<mov~~r8d, dword ptr [rsp + 0x504]>', '<mov~~ecx, dword ptr [rsp + 0x4fc]>', '<mov~~rdi, qword ptr [rsp + 0x558]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3429]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 237, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x42c]>', '<mov~~edx, dword ptr [rsp + 0x430]>', '<mov~~rsi, qword ptr [rsp + 0x488]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<add~~rax, 0x58>', '<shl~~rsi, 3>', '<add~~rax, rsi>', '<mov~~qword ptr [rsp + 0x410], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x418], edx>', '<mov~~dword ptr [rsp + 0x41c], ecx>', '<mov~~qword ptr [rsp + 0x420], rax>', '<jmp~~0x401b13>']}, {'block_Idx': 217, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x40]>', '<mov~~eax, dword ptr [rsp + 0x1c]>', '<mov~~rcx, qword ptr [rsp + 0x20]>', '<mov~~rdx, qword ptr [rsp + 0x28]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0x6c], edi>', '<mov~~qword ptr [rsp + 0x70], rsi>', '<mov~~qword ptr [rsp + 0x78], rdx>', '<mov~~qword ptr [rsp + 0x80], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402e34>']}, {'block_Idx': 230, 'blockInsts': ['<jmp~~0x40240e>']}, {'block_Idx': 215, 'blockInsts': ['<jmp~~0x402f63>']}, {'block_Idx': 71, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x558]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3575]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 49, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<add~~rax, 0x10>', '<mov~~qword ptr [rsp + 0x578], rax>', '<jmp~~0x400e92>']}, {'block_Idx': 216, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0xb0]>', '<mov~~eax, dword ptr [rsp + 0x8c]>', '<mov~~rcx, qword ptr [rsp + 0x90]>', '<mov~~rdx, qword ptr [rsp + 0x98]>', '<add~~rsi, 1>', '<movsxd~~rdi, eax>', '<cmp~~rsi, rdi>', '<mov~~edi, eax>', '<mov~~dword ptr [rsp + 0xdc], edi>', '<mov~~qword ptr [rsp + 0xe0], rsi>', '<mov~~qword ptr [rsp + 0xe8], rdx>', '<mov~~qword ptr [rsp + 0xf0], rcx>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jl~~0x402c06>']}, {'block_Idx': 444, 'blockInsts': ['<mov~~rax, qword ptr [rbp - 0x10]>', '<mov~~ecx, dword ptr [rbp - 0xac]>', '<mov~~edx, dword ptr [rbp - 0x1c8]>', '<sar~~edx, cl>', '<mov~~ecx, dword ptr [rbp - 0x1c4]>', '<movsxd~~rcx, ecx>', '<add~~edx, dword ptr [rax + rcx*4]>', '<mov~~dword ptr [rax + rcx*4], edx>', '<xor~~eax, eax>', '<mov~~dword ptr [rbp - 0xa4], eax>', '<mov~~eax, dword ptr [rbp - 0xa4]>', '<mov~~rsp, rbp>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 181, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6e0]>', '<mov~~rcx, qword ptr [rsp + 0x6e8]>', '<mov~~esi, dword ptr [rsp + 0x174]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x140], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x148], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0x154], esi>', '<mov~~qword ptr [rsp + 0x158], rdx>', '<mov~~qword ptr [rsp + 0x160], rcx>', '<mov~~qword ptr [rsp + 0x168], rax>', '<jmp~~0x4029ae>']}, {'block_Idx': 15, 'blockInsts': ['<mov~~edi, dword ptr [rsp + 0x68c]>', '<mov~~esi, dword ptr [rsp + 0x674]>', '<mov~~ecx, dword ptr [rsp + 0x678]>', '<mov~~eax, dword ptr [rsp + 0x67c]>', '<mov~~dword ptr [rsp + 0x658], eax>', '<mov~~dword ptr [rsp + 0x65c], ecx>', '<mov~~edx, eax>', '<add~~edx, edi>', '<add~~edx, ecx>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x660], ecx>', '<mov~~dword ptr [rsp + 0x664], eax>', '<jbe~~0x40076a>']}, {'block_Idx': 146, 'blockInsts': ['<jmp~~0x401482>']}, {'block_Idx': 381, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x340]>', '<mov~~ecx, dword ptr [rsp + 0x33c]>', '<mov~~edx, dword ptr [rsp + 0x334]>', '<mov~~esi, dword ptr [rsp + 0x32c]>', '<mov~~edi, dword ptr [rsp + 0x394]>', '<mov~~edi, edi>', '<mov~~qword ptr [rsp + 0x308], rdi>', '<mov~~edi, 4>', '<mov~~qword ptr [rsp + 0x310], rdi>', '<mov~~dword ptr [rsp + 0x31c], esi>', '<mov~~dword ptr [rsp + 0x320], edx>', '<mov~~dword ptr [rsp + 0x324], ecx>', '<mov~~dword ptr [rsp + 0x328], eax>', '<jmp~~0x4022e8>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x694]>', '<add~~rsp, 0x708>', '<ret~~>']}, {'block_Idx': 151, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x548]>', '<mov~~edx, dword ptr [rsp + 0x580]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<add~~rax, 0x44>', '<mov~~qword ptr [rsp + 0x498], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x4a0], edx>', '<mov~~dword ptr [rsp + 0x4a4], ecx>', '<mov~~qword ptr [rsp + 0x4a8], rax>', '<mov~~rcx, qword ptr [rsp + 0x498]>', '<mov~~esi, dword ptr [rsp + 0x4a0]>', '<mov~~edx, dword ptr [rsp + 0x4a4]>', '<mov~~rax, qword ptr [rsp + 0x4a8]>', '<mov~~qword ptr [rsp + 0x488], rax>', '<mov~~dword ptr [rsp + 0x490], edx>', '<mov~~dword ptr [rsp + 0x494], esi>', '<mov~~dword ptr [rcx], edx>', '<cmp~~rax, 0>', '<jne~~0x40165f>']}, {'block_Idx': 229, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x3e8]>', '<mov~~rcx, qword ptr [rsp + 0x4b0]>', '<mov~~rdx, qword ptr [rsp + 0x3e0]>', '<mov~~esi, dword ptr [rsp + 0x3f8]>', '<mov~~dword ptr [rdx + rax*4], esi>', '<add~~rax, 1>', '<mov~~qword ptr [rsp + 0x3d8], rax>', '<movsxd~~rcx, dword ptr [rcx]>', '<cmp~~rax, rcx>', '<mov~~qword ptr [rsp + 0x3e8], rax>', '<jl~~0x401ad0>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~esi, dword ptr [rsp + 0x6b0]>', '<mov~~edx, dword ptr [rsp + 0x6b4]>', '<mov~~rax, qword ptr [rsp + 0x6b8]>', '<mov~~dword ptr [rsp + 0x620], edx>', '<mov~~dword ptr [rsp + 0x624], esi>', '<mov~~esi, edx>', '<shl~~esi, 3>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~rax, rdi>', '<mov~~qword ptr [rsp + 0x628], rax>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~esi, edi>', '<xor~~edi, edi>', '<cmp~~edx, 0>', '<cmovl~~edx, edi>', '<mov~~rdi, rcx>', '<add~~rdi, 0x28>', '<mov~~qword ptr [rsp + 0x630], rdi>', '<mov~~qword ptr [rcx + 0x28], rax>', '<mov~~rdi, rcx>', '<add~~rdi, 0x3c>', '<mov~~qword ptr [rsp + 0x638], rdi>', '<mov~~dword ptr [rcx + 0x3c], esi>', '<mov~~edx, edx>', '<mov~~esi, edx>', '<mov~~rdx, rax>', '<add~~rdx, rsi>', '<mov~~rsi, rcx>', '<add~~rsi, 0x30>', '<mov~~qword ptr [rsp + 0x640], rsi>', '<mov~~qword ptr [rcx + 0x30], rdx>', '<mov~~rdx, rcx>', '<add~~rdx, 0x38>', '<mov~~qword ptr [rsp + 0x648], rdx>', '<mov~~dword ptr [rcx + 0x38], 0>', '<mov~~ecx, dword ptr [rax]>', '<ror~~cx, 8>', '<ror~~ecx, 0x10>', '<ror~~cx, 8>', '<shr~~ecx, 0xf0>', '<mov~~dword ptr [rsp + 0x650], ecx>', '<shl~~ecx, 0x10>', '<mov~~eax, dword ptr [rax + 2]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<mov~~dword ptr [rsp + 0x654], eax>', '<shr~~eax, 0xf0>', '<or~~eax, ecx>', '<cmp~~eax, 0x664c6143>', '<jne~~0x400ba2>']}, {'block_Idx': 16, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5ec]>', '<cmp~~eax, 0>', '<je~~0x400b59>']}, {'block_Idx': 426, 'blockInsts': ['<mov~~eax, dword ptr [rbp - 0xa4]>', '<mov~~rsp, rbp>', '<pop~~rbp>', '<ret~~>']}, {'block_Idx': 21, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x68c]>', '<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<mov~~rsi, qword ptr [rsp + 0x6c8]>', '<mov~~ecx, dword ptr [rsp + 0x660]>', '<mov~~edx, dword ptr [rsp + 0x664]>', '<mov~~rdi, qword ptr [rdi + 0x98]>', '<add~~ecx, edx>', '<mov~~ecx, ecx>', '<add~~rdi, rcx>', '<movsxd~~rdx, eax>', '<call~~0x500020>']}, {'block_Idx': 317, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x390]>', '<mov~~rcx, qword ptr [rsp + 0x398]>', '<mov~~edx, eax>', '<add~~edx, -1>', '<mov~~edx, edx>', '<mov~~ecx, dword ptr [rcx + rdx*4]>', '<mov~~dword ptr [rsp + 0x340], ecx>', '<cmp~~eax, 1>', '<je~~0x402162>']}, {'block_Idx': 72, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x544]>', '<mov~~edx, dword ptr [rsp + 0x540]>', '<mov~~esi, 0x7f>', '<mov~~ecx, eax>', '<shr~~esi, cl>', '<mov~~ecx, esi>', '<and~~ecx, edx>', '<mov~~ecx, ecx>', '<mov~~edx, 0x28>', '<mov~~qword ptr [rsp + 0x528], rdx>', '<mov~~qword ptr [rsp + 0x530], rcx>', '<mov~~dword ptr [rsp + 0x53c], eax>', '<mov~~rcx, qword ptr [rsp + 0x528]>', '<mov~~rdx, qword ptr [rsp + 0x530]>', '<mov~~eax, dword ptr [rsp + 0x53c]>', '<mov~~dword ptr [rsp + 0x514], eax>', '<mov~~qword ptr [rsp + 0x518], rdx>', '<mov~~qword ptr [rsp + 0x520], rcx>', '<cmp~~eax, 1>', '<jle~~0x401106>']}, {'block_Idx': 190, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x458]>', '<mov~~edi, dword ptr [rsp + 0x454]>', '<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rsp + 0x470]>', '<mov~~dword ptr [rsp + 0x434], eax>', '<mov~~esi, edi>', '<sar~~esi, 3>', '<mov~~dword ptr [rsp + 0x438], esi>', '<movsxd~~rsi, esi>', '<mov~~sil, byte ptr [rcx + rsi]>', '<mov~~ecx, edi>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x43c], ecx>', '<movzx~~esi, sil>', '<add~~edi, 1>', '<mov~~dword ptr [rsp + 0x440], edi>', '<mov~~dword ptr [rdx], edi>', '<mov~~edx, 0x80>', '<shr~~edx, cl>', '<mov~~ecx, dword ptr [rsp + 0x440]>', '<mov~~dword ptr [rsp + 0x444], edx>', '<and~~edx, esi>', '<mov~~dword ptr [rsp + 0x448], edx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x44c], eax>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x454], ecx>', '<mov~~dword ptr [rsp + 0x458], eax>', '<je~~0x4017cf>']}, {'block_Idx': 170, 'blockInsts': ['<jmp~~0x40252e>']}, {'block_Idx': 45, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x608]>', '<mov~~eax, dword ptr [rsp + 0x5e8]>', '<mov~~rcx, qword ptr [rsp + 0x600]>', '<mov~~rdi, qword ptr [rcx]>', '<mov~~ecx, 8>', '<cdq~~>', '<idiv~~ecx>', '<mov~~rdx, qword ptr [rsp + 0x5d0]>', '<cdqe~~>', '<add~~rdx, rax>', '<call~~0x400110>']}, {'block_Idx': 19, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x39d1]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 180, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x550]>', '<mov~~rdi, qword ptr [rax]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3003]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 195, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x1a0]>', '<mov~~rdx, qword ptr [rsp + 0x4f0]>', '<mov~~rsi, qword ptr [rsp + 0x1a8]>', '<mov~~edi, dword ptr [rsp + 0x1bc]>', '<mov~~rax, rsi>', '<add~~rax, 4>', '<mov~~dword ptr [rsi], edi>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x18c], edx>', '<mov~~qword ptr [rsp + 0x190], rcx>', '<mov~~qword ptr [rsp + 0x198], rax>', '<jmp~~0x4027df>']}, {'block_Idx': 141, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x5f8]>', '<mov~~dword ptr [rax], 1>', '<mov~~eax, dword ptr [rsp + 0x5ec]>', '<cmp~~eax, 0>', '<jle~~0x400b59>']}, {'block_Idx': 109, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x59c]>', '<cmp~~eax, 0>', '<jne~~0x401336>']}, {'block_Idx': 91, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x558]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x3539]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6d4]>', '<mov~~esi, dword ptr [rsp + 0x6ac]>', '<mov~~ecx, dword ptr [rsp + 0x69c]>', '<xor~~edx, edx>', '<sub~~ecx, esi>', '<cmovb~~ecx, edx>', '<cmp~~ecx, eax>', '<cmovb~~eax, ecx>', '<mov~~dword ptr [rsp + 0x698], eax>', '<mov~~eax, dword ptr [rsp + 0x6ac]>', '<mov~~edx, dword ptr [rsp + 0x698]>', '<mov~~dword ptr [rsp + 0x68c], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x690], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x694], eax>', '<jb~~0x40307a>']}, {'block_Idx': 211, 'blockInsts': ['<jmp~~0x4018f2>']}, {'block_Idx': 173, 'blockInsts': ['<mov~~edi, dword ptr [rsp + 0x20c]>', '<mov~~esi, dword ptr [rsp + 0x210]>', '<mov~~edx, dword ptr [rsp + 0x214]>', '<mov~~r8, qword ptr [rsp + 0x218]>', '<mov~~rax, qword ptr [rsp + 0x220]>', '<mov~~rcx, qword ptr [rsp + 0x228]>', '<mov~~qword ptr [rsp + 0x1c0], r8>', '<xor~~r8d, r8d>', '<cmp~~edx, 0>', '<mov~~r9d, esi>', '<mov~~dword ptr [rsp + 0x1cc], r9d>', '<mov~~qword ptr [rsp + 0x1d0], r8>', '<mov~~r8, rax>', '<mov~~qword ptr [rsp + 0x1d8], r8>', '<mov~~r8, rcx>', '<mov~~qword ptr [rsp + 0x1e0], r8>', '<mov~~dword ptr [rsp + 0x1ec], edi>', '<mov~~dword ptr [rsp + 0x1f0], esi>', '<mov~~dword ptr [rsp + 0x1f4], edx>', '<mov~~qword ptr [rsp + 0x1f8], rcx>', '<mov~~qword ptr [rsp + 0x200], rax>', '<jle~~0x40288c>']}, {'block_Idx': 165, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x234]>', '<cmp~~eax, 2>', '<jne~~0x402e15>']}, {'block_Idx': 155, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x238]>', '<lea~~rcx, [rip + 0x1e06]>', '<movsxd~~rax, dword ptr [rcx + rax*4]>', '<add~~rax, rcx>', '<jmp~~rax>']}, {'block_Idx': 57, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x588]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rax + 0x20]>', '<xor~~esi, esi>', '<lea~~rdx, [rip + 0x37e4]>', '<mov~~al, 0>', '<call~~0x500000>']}, {'block_Idx': 9, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6ac]>', '<mov~~edx, dword ptr [rsp + 0x698]>', '<mov~~dword ptr [rsp + 0x68c], edx>', '<mov~~ecx, edx>', '<add~~ecx, eax>', '<mov~~dword ptr [rsp + 0x690], ecx>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x694], eax>', '<jb~~0x40307a>']}, {'block_Idx': 88, 'blockInsts': ['<jmp~~0x401123>']}, {'block_Idx': 196, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x560]>', '<mov~~rax, qword ptr [rsp + 0x568]>', '<mov~~rdx, qword ptr [rsp + 0xd0]>', '<mov~~rsi, qword ptr [rsp + 0xc8]>', '<mov~~r8d, dword ptr [rsp + 0xdc]>', '<mov~~rdi, qword ptr [rsp + 0xe0]>', '<mov~~r9, qword ptr [rsp + 0xe8]>', '<mov~~r10, qword ptr [rsp + 0xf0]>', '<mov~~qword ptr [rsp + 0xa0], r10>', '<mov~~qword ptr [rsp + 0xa8], r9>', '<mov~~qword ptr [rsp + 0xb0], rdi>', '<mov~~dword ptr [rsp + 0xb8], r8d>', '<mov~~esi, dword ptr [rsi + rdi*4]>', '<mov~~edx, dword ptr [rdx + rdi*4]>', '<mov~~dword ptr [rsp + 0xbc], edx>', '<mov~~eax, dword ptr [rax]>', '<add~~edx, esi>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~dword ptr [rsp + 0xc0], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0xc4], edx>', '<cmp~~eax, 0>', '<je~~0x402ce7>']}, {'block_Idx': 424, 'blockInsts': ['<jmp~~0x40240e>']}, {'block_Idx': 257, 'blockInsts': ['<jmp~~0x40252e>']}, {'block_Idx': 80, 'blockInsts': ['<mov~~rcx, qword ptr [rsp + 0x518]>', '<mov~~rdi, qword ptr [rsp + 0x648]>', '<mov~~rdx, qword ptr [rsp + 0x520]>', '<mov~~rsi, qword ptr [rsp + 0x628]>', '<mov~~eax, dword ptr [rsp + 0x514]>', '<add~~eax, -1>', '<mov~~r8, rdx>', '<shr~~r8, 3>', '<mov~~esi, dword ptr [rsi + r8]>', '<ror~~si, 8>', '<ror~~esi, 0x10>', '<ror~~si, 8>', '<shr~~esi, 0xf8>', '<add~~rdx, 8>', '<mov~~r8d, edx>', '<mov~~dword ptr [rdi], r8d>', '<add~~esi, -0x80>', '<shl~~rcx, 6>', '<movsxd~~rdi, esi>', '<add~~rcx, rdi>', '<cmp~~esi, 0x40>', '<mov~~qword ptr [rsp + 0x528], rdx>', '<mov~~qword ptr [rsp + 0x530], rcx>', '<mov~~dword ptr [rsp + 0x53c], eax>', '<jb~~0x401057>']}, {'block_Idx': 29, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<mov~~rcx, qword ptr [rsp + 0x6a0]>', '<mov~~rdx, qword ptr [rsp + 0x668]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x680]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~eax, dword ptr [rax]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x674], edx>', '<mov~~dword ptr [rsp + 0x678], ecx>', '<mov~~dword ptr [rsp + 0x67c], eax>', '<mov~~edi, dword ptr [rsp + 0x68c]>', '<mov~~esi, dword ptr [rsp + 0x674]>', '<mov~~ecx, dword ptr [rsp + 0x678]>', '<mov~~eax, dword ptr [rsp + 0x67c]>', '<mov~~dword ptr [rsp + 0x658], eax>', '<mov~~dword ptr [rsp + 0x65c], ecx>', '<mov~~edx, eax>', '<add~~edx, edi>', '<add~~edx, ecx>', '<cmp~~edx, esi>', '<mov~~dword ptr [rsp + 0x660], ecx>', '<mov~~dword ptr [rsp + 0x664], eax>', '<jbe~~0x40076a>']}, {'block_Idx': 133, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~edx, ecx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<and~~ecx, 7>', '<shl~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x500]>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014a6>']}, {'block_Idx': 136, 'blockInsts': ['<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 234, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x240]>', '<mov~~rdx, qword ptr [rsp + 0x4b8]>', '<mov~~rcx, qword ptr [rsp + 0x570]>', '<mov~~ecx, dword ptr [rcx]>', '<mov~~edx, dword ptr [rdx]>', '<mov~~dword ptr [rsp + 0x4a0], edx>', '<mov~~dword ptr [rsp + 0x4a4], ecx>', '<mov~~qword ptr [rsp + 0x4a8], rax>', '<jmp~~0x401607>']}, {'block_Idx': 17, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~rcx, qword ptr [rsp + 0x640]>', '<mov~~rdi, qword ptr [rsp + 0x638]>', '<mov~~r9, qword ptr [rsp + 0x630]>', '<mov~~r11d, dword ptr [rsp + 0x5f4]>', '<mov~~rdx, qword ptr [rsp + 0x5d0]>', '<mov~~esi, r11d>', '<add~~esi, 7>', '<sar~~esi, 3>', '<xor~~r8d, r8d>', '<cmp~~r11d, 0>', '<cmovl~~rdx, r8>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<mov~~r8d, r11d>', '<cmovl~~r8d, r10d>', '<xor~~r10d, r10d>', '<cmp~~r11d, 0>', '<cmovl~~esi, r10d>', '<mov~~qword ptr [r9], rdx>', '<mov~~dword ptr [rdi], r8d>', '<movsxd~~rsi, esi>', '<add~~rdx, rsi>', '<mov~~qword ptr [rcx], rdx>', '<mov~~dword ptr [rax], 0>', '<jmp~~0x402f9a>']}, {'block_Idx': 106, 'blockInsts': ['<mov~~rdx, qword ptr [rsp + 0x648]>', '<mov~~ecx, dword ptr [rsp + 0x510]>', '<mov~~rax, qword ptr [rsp + 0x628]>', '<mov~~rsi, qword ptr [rsp + 0x520]>', '<shr~~rsi, 3>', '<and~~rsi, 0x1fffffff>', '<mov~~eax, dword ptr [rax + rsi]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shr~~eax, 0xf0>', '<add~~ecx, 0x10>', '<mov~~dword ptr [rdx], ecx>', '<add~~eax, 1>', '<mov~~dword ptr [rsp + 0x508], ecx>', '<mov~~dword ptr [rsp + 0x50c], eax>', '<jmp~~0x401258>']}, {'block_Idx': 198, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x450]>', '<test~~eax, eax>', '<je~~0x401963>']}, {'block_Idx': 187, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6e0]>', '<mov~~rcx, qword ptr [rsp + 0x6e8]>', '<mov~~esi, dword ptr [rsp + 0x88]>', '<mov~~rdx, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rdx + 0x58]>', '<mov~~qword ptr [rsp + 0x58], rdi>', '<mov~~rdx, qword ptr [rdx + 0x60]>', '<mov~~qword ptr [rsp + 0x60], rdx>', '<xor~~edx, edx>', '<mov~~dword ptr [rsp + 0x6c], esi>', '<mov~~qword ptr [rsp + 0x70], rdx>', '<mov~~qword ptr [rsp + 0x78], rcx>', '<mov~~qword ptr [rsp + 0x80], rax>', '<jmp~~0x402e34>']}, {'block_Idx': 143, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x4d4]>', '<mov~~ecx, dword ptr [rsp + 0x580]>', '<mov~~rdx, qword ptr [rsp + 0x4f0]>', '<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<mov~~rdi, qword ptr [rsp + 0x570]>', '<mov~~r8d, dword ptr [rsp + 0x548]>', '<mov~~r9d, dword ptr [rsp + 0x4d0]>', '<mov~~r10d, dword ptr [rsp + 0x4fc]>', '<mov~~r11, rsi>', '<add~~r11, 0x40>', '<mov~~qword ptr [rsp + 0x4b0], r11>', '<mov~~dword ptr [rsi + 0x40], r10d>', '<mov~~dword ptr [rsi + 8], r9d>', '<mov~~dword ptr [rdi], r8d>', '<mov~~rdi, rsi>', '<add~~rdi, 0x50>', '<mov~~qword ptr [rsp + 0x4b8], rdi>', '<mov~~dword ptr [rsi + 0x50], ecx>', '<mov~~edx, dword ptr [rdx]>', '<cmp~~edx, 0>', '<mov~~dword ptr [rsp + 0x4c4], edx>', '<mov~~dword ptr [rsp + 0x4c8], ecx>', '<mov~~dword ptr [rsp + 0x4cc], eax>', '<jle~~0x402577>']}, {'block_Idx': 35, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x18]>', '<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, rcx>', '<add~~rdx, 0xa0>', '<mov~~qword ptr [rsp + 8], rdx>', '<mov~~ecx, dword ptr [rcx + 0xa0]>', '<mov~~dword ptr [rsp + 0x14], ecx>', '<cmp~~ecx, 0>', '<mov~~dword ptr [rsp + 0x694], eax>', '<je~~0x40307a>']}, {'block_Idx': 220, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x450]>', '<sub~~eax, 1>', '<jne~~0x401ccc>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~ecx, dword ptr [rsp + 0x704]>', '<mov~~dword ptr [rsp + 0x69c], ecx>', '<mov~~rcx, rax>', '<add~~rcx, 0xa0>', '<mov~~qword ptr [rsp + 0x6a0], rcx>', '<mov~~eax, dword ptr [rax + 0xa0]>', '<mov~~dword ptr [rsp + 0x6ac], eax>', '<cmp~~eax, 4>', '<jb~~0x40057b>']}, {'block_Idx': 41, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x648]>', '<mov~~ecx, dword ptr [rsp + 0x620]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x5cc], eax>', '<mov~~esi, 8>', '<cdq~~>', '<idiv~~esi>', '<add~~eax, 2>', '<cmp~~eax, ecx>', '<jge~~0x402f9a>']}, {'block_Idx': 113, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x500]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~eax, dword ptr [rax + 8]>', '<mov~~dword ptr [rsp + 0x4e8], ecx>', '<mov~~dword ptr [rsp + 0x4ec], eax>', '<jmp~~0x4014a6>']}, {'block_Idx': 85, 'blockInsts': ['<jmp~~0x40252e>']}, {'block_Idx': 79, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x518]>', '<mov~~rcx, qword ptr [rsp + 0x520]>', '<mov~~dword ptr [rsp + 0x510], ecx>', '<cmp~~rax, 0>', '<jge~~0x401140>']}, {'block_Idx': 52, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x5cc]>', '<mov~~rcx, qword ptr [rsp + 0x630]>', '<mov~~rcx, qword ptr [rcx]>', '<mov~~qword ptr [rsp + 0x5b8], rcx>', '<mov~~ecx, eax>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x5c4], ecx>', '<mov~~dword ptr [rsp + 0x5c8], eax>', '<mov~~ecx, dword ptr [rsp + 0x5c4]>', '<mov~~rax, qword ptr [rsp + 0x5b8]>', '<mov~~edx, dword ptr [rsp + 0x5c8]>', '<mov~~dword ptr [rsp + 0x5b4], edx>', '<sar~~edx, 3>', '<movsxd~~rdx, edx>', '<mov~~eax, dword ptr [rax + rdx]>', '<ror~~ax, 8>', '<ror~~eax, 0x10>', '<ror~~ax, 8>', '<shl~~eax, cl>', '<shr~~eax, 0xf0>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x402f9a>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x6d4]>', '<mov~~rcx, qword ptr [rsp + 0x6d8]>', '<mov~~rcx, qword ptr [rcx + 0x98]>', '<cmp~~dword ptr [rcx], 0x43614c66>', '<mov~~dword ptr [rsp + 0x698], eax>', '<je~~0x4005a3>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x650]>', '<and~~eax, 0xfffe>', '<cmp~~eax, 0xfff8>', '<je~~0x400cbd>']}, {'block_Idx': 239, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x42c]>', '<mov~~edx, dword ptr [rsp + 0x430]>', '<mov~~eax, dword ptr [rsp + 0x390]>', '<mov~~eax, eax>', '<mov~~qword ptr [rsp + 0x378], rax>', '<xor~~eax, eax>', '<mov~~dword ptr [rsp + 0x380], edx>', '<mov~~dword ptr [rsp + 0x384], ecx>', '<mov~~qword ptr [rsp + 0x388], rax>', '<mov~~rdx, qword ptr [rsp + 0x470]>', '<mov~~ecx, dword ptr [rsp + 0x380]>', '<mov~~eax, dword ptr [rsp + 0x384]>', '<mov~~rsi, qword ptr [rsp + 0x388]>', '<mov~~qword ptr [rsp + 0x360], rsi>', '<mov~~dword ptr [rsp + 0x368], eax>', '<mov~~dword ptr [rsp + 0x36c], ecx>', '<mov~~esi, ecx>', '<sar~~esi, 3>', '<movsxd~~rsi, esi>', '<mov~~edx, dword ptr [rdx + rsi]>', '<ror~~dx, 8>', '<ror~~edx, 0x10>', '<ror~~dx, 8>', '<and~~ecx, 7>', '<mov~~dword ptr [rsp + 0x370], ecx>', '<shl~~edx, cl>', '<mov~~dword ptr [rsp + 0x374], edx>', '<cmp~~eax, 0x12>', '<jge~~0x401df7>']}, {'block_Idx': 356, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x394]>', '<cmp~~eax, 3>', '<jle~~0x40240e>']}, {'block_Idx': 50, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x588]>', '<and~~eax, 0xfffffffb>', '<cmp~~eax, 3>', '<je~~0x400e6a>']}, {'block_Idx': 218, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x430]>', '<mov~~edx, dword ptr [rsp + 0x42c]>', '<mov~~eax, dword ptr [rsp + 0x40c]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x648]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x404], eax>', '<jmp~~0x401a6a>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x690]>', '<mov~~rax, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, rax>', '<add~~rdx, 0xa4>', '<mov~~qword ptr [rsp + 0x680], rdx>', '<mov~~edx, dword ptr [rax + 0xa4]>', '<mov~~dword ptr [rsp + 0x688], edx>', '<xor~~edx, 0xffffffff>', '<mov~~eax, 0xffffffff>', '<cmp~~ecx, edx>', '<mov~~dword ptr [rsp + 0x694], eax>', '<ja~~0x40307a>']}, {'block_Idx': 310, 'blockInsts': ['<jmp~~0x401f5d>']}, {'block_Idx': 423, 'blockInsts': ['<cmp~~eax, 0>', '<jl~~0x40252e>']}, {'block_Idx': 176, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x4b0]>', '<mov~~eax, dword ptr [rax]>', '<mov~~dword ptr [rsp + 0x88], eax>', '<cmp~~eax, 0>', '<mov~~dword ptr [rsp + 0x230], eax>', '<jle~~0x402f63>']}, {'block_Idx': 223, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x428]>', '<cmp~~eax, 0>', '<je~~0x402498>']}, {'block_Idx': 23, 'blockInsts': ['<mov~~ecx, dword ptr [rsp + 0x5e4]>', '<mov~~eax, 0x80>', '<shr~~eax, cl>', '<mov~~ecx, dword ptr [rsp + 0x5dc]>', '<and~~eax, ecx>', '<cmp~~eax, 0>', '<jne~~0x402f9a>']}, {'block_Idx': 201, 'blockInsts': ['<jmp~~0x40252e>']}, {'block_Idx': 68, 'blockInsts': ['<jmp~~0x402f9a>']}, {'block_Idx': 250, 'blockInsts': ['<mov~~esi, dword ptr [rsp + 0x3cc]>', '<mov~~edx, dword ptr [rsp + 0x3c8]>', '<mov~~eax, dword ptr [rsp + 0x3d4]>', '<mov~~dil, dl>', '<xor~~ecx, ecx>', '<sub~~cl, dil>', '<shr~~eax, cl>', '<mov~~rcx, qword ptr [rsp + 0x648]>', '<add~~edx, esi>', '<mov~~dword ptr [rcx], edx>', '<mov~~dword ptr [rsp + 0x3bc], eax>', '<jmp~~0x401c38>']}, {'block_Idx': 39, 'blockInsts': ['<jmp~~0x400db0>']}, {'block_Idx': 238, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x6d8]>', '<mov~~rax, qword ptr [rsp + 0x488]>', '<mov~~esi, eax>', '<xor~~edx, edx>', '<call~~0x4039df>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rsi, qword ptr [rsp + 0x6d8]>', '<mov~~rdx, qword ptr [rsp + 0x6f8]>', '<mov~~ecx, dword ptr [rsp + 0x6d4]>', '<mov~~rdi, rax>', '<mov~~rax, qword ptr [rsp + 0x6c8]>', '<mov~~qword ptr [rsi + 0x98], rdi>', '<mov~~esi, dword ptr [rdx]>', '<xor~~edx, edx>', '<cmp~~esi, 0>', '<mov~~dword ptr [rsp + 0x704], esi>', '<mov~~dword ptr [rsp + 0x6b0], edx>', '<mov~~dword ptr [rsp + 0x6b4], ecx>', '<mov~~qword ptr [rsp + 0x6b8], rax>', '<je~~0x400817>']}], 'cfg_edge_info': [(247, 255), (226, 232), (242, 158), (250, 260), (18, 26), (180, 201), (11, 14), (251, 261), (257, 75), (192, 202), (232, 238), (181, 192), (145, 117), (193, 166), (74, 75), (85, 75), (354, 367), (317, 327), (118, 117), (228, 236), (218, 222), (210, 218), (111, 105), (115, 75), (104, 75), (224, 229), (173, 183), (143, 151), (174, 166), (66, 75), (155, 162), (242, 157), (29, 22), (238, 281), (166, 36), (339, 354), (423, 424), (215, 166), (221, 75), (302, 310), (114, 119), (17, 25), (317, 326), (357, 371), (50, 58), (399, 391), (10, 12), (87, 79), (254, 256), (158, 168), (214, 192), (106, 101), (143, 150), (88, 71), (179, 189), (57, 74), (198, 211), (6, 10), (251, 223), (29, 21), (168, 179), (209, 217), (220, 226), (243, 227), (89, 7), (202, 213), (64, 81), (67, 25), (216, 215), (187, 197), (128, 138), (50, 57), (368, 223), (217, 197), (32, 44), (72, 80), (194, 204), (38, 51), (356, 369), (390, 380), (58, 56), (98, 101), (260, 261), (220, 225), (261, 244), (113, 117), (23, 25), (39, 51), (216, 196), (197, 209), (19, 41), (219, 224), (341, 357), (205, 204), (355, 368), (170, 75), (159, 75), (72, 79), (347, 302), (27, 40), (119, 123), (163, 166), (101, 105), (134, 139), (222, 224), (52, 60), (35, 7), (75, 89), (426, 423), (164, 175), (340, 355), (197, 208), (219, 223), (60, 68), (156, 166), (26, 38), (260, 223), (42, 10), (27, 39), (189, 199), (213, 166), (222, 223), (204, 193), (236, 243), (196, 207), (424, 223), (367, 354), (97, 75), (237, 244), (230, 223), (111, 104), (151, 158), (238, 312), (203, 214), (60, 67), (339, 223), (244, 251), (46, 25), (68, 25), (206, 215), (107, 111), (26, 37), (8, 7), (290, 223), (207, 216), (178, 180), (166, 35), (199, 221), (92, 95), (310, 317), (33, 45), (144, 159), (114, 118), (155, 165), (357, 370), (36, 55), (229, 230), (99, 102), (8, 11), (369, 380), (80, 88), (200, 199), (151, 157), (25, 36), (162, 172), (34, 23), (254, 255), (165, 177), (51, 66), (302, 75), (233, 241), (208, 166), (206, 196), (266, 247), (195, 205), (198, 210), (0, 2), (239, 247), (129, 134), (44, 17), (380, 390), (391, 399), (81, 75), (102, 107), (184, 195), (204, 173), (176, 187), (155, 164), (214, 213), (158, 169), (45, 112), (247, 256), (117, 128), (241, 423), (136, 141), (147, 141), (139, 146), (80, 87), (52, 25), (41, 25), (133, 117), (232, 239), (391, 223), (380, 223), (25, 35), (162, 171), (165, 176), (236, 227), (95, 99), (266, 246), (157, 168), (327, 341), (368, 379), (40, 37), (239, 246), (150, 156), (129, 133), (21, 42), (169, 178), (44, 16), (153, 170), (91, 97), (102, 106), (224, 230), (24, 34), (255, 312), (246, 254), (109, 114), (392, 75), (139, 145), (341, 356), (2, 5), (194, 184), (146, 153), (43, 42), (55, 7), (35, 47), (95, 98), (227, 235), (157, 167), (327, 340), (326, 223), (228, 227), (79, 86), (371, 392), (101, 104), (150, 155), (190, 200), (356, 223), (10, 13), (23, 32), (201, 75), (202, 192), (231, 237), (24, 33), (255, 302), (87, 80), (124, 129), (164, 174), (9, 8), (256, 266), (179, 190), (109, 113), (6, 2), (168, 180), (205, 184), (381, 391), (281, 75), (2, 4), (231, 223), (13, 19), (112, 141), (326, 339), (223, 228), (16, 24), (227, 234), (138, 144), (379, 368), (189, 198), (367, 223), (281, 290), (190, 190), (163, 173), (234, 242), (340, 223), (34, 46), (196, 206), (56, 64), (105, 115), (176, 166), (185, 196), (5, 9), (9, 7), (86, 92), (141, 46), (79, 71), (63, 72), (241, 249), (71, 85), (370, 381), (171, 181), (12, 17), (217, 166), (104, 109), (183, 173), (13, 18), (244, 250), (223, 227), (347, 281), (16, 23), (5, 4), (141, 23), (49, 56), (178, 179), (138, 143), (240, 257), (4, 8), (123, 117), (370, 223), (22, 43), (45, 54), (37, 50), (56, 63), (15, 22), (67, 60), (208, 197), (226, 233), (229, 229), (18, 27), (86, 91), (11, 15), (200, 198), (63, 71), (119, 124), (192, 203), (41, 52), (12, 16), (1, 6), (233, 240), (444, 423), (46, 32), (42, 7), (0, 1), (167, 178), (210, 219), (171, 166), (33, 34), (184, 194), (243, 243), (4, 7), (211, 220), (235, 150), (173, 184), (225, 231), (14, 29), (155, 163), (37, 49), (174, 185), (423, 75)], 'cdg_edge_info': [(226, 232), (18, 26), (242, 158), (129, 128), (11, 14), (251, 261), (166, 55), (192, 202), (232, 238), (104, 89), (227, 150), (423, 223), (26, 7), (317, 327), (266, 254), (114, 138), (228, 236), (210, 218), (239, 254), (111, 105), (281, 89), (104, 75), (224, 229), (56, 7), (327, 223), (254, 266), (95, 102), (143, 151), (155, 162), (242, 157), (29, 22), (220, 227), (139, 153), (357, 223), (80, 85), (166, 36), (423, 424), (327, 227), (302, 310), (114, 119), (155, 166), (317, 326), (357, 371), (281, 223), (50, 58), (80, 71), (220, 231), (357, 227), (80, 89), (10, 12), (86, 7), (87, 79), (13, 41), (254, 256), (214, 192), (95, 101), (179, 189), (198, 211), (6, 10), (281, 227), (168, 179), (220, 226), (129, 117), (80, 75), (50, 89), (176, 197), (227, 242), (139, 138), (50, 57), (50, 75), (217, 197), (231, 244), (189, 89), (72, 80), (178, 89), (341, 223), (56, 81), (356, 369), (178, 201), (157, 178), (260, 261), (63, 89), (302, 7), (101, 115), (23, 25), (150, 166), (12, 25), (178, 75), (189, 75), (232, 302), (216, 196), (341, 227), (86, 95), (197, 209), (26, 89), (50, 56), (119, 128), (219, 224), (341, 357), (138, 7), (111, 7), (56, 89), (26, 66), (26, 75), (27, 40), (119, 123), (63, 79), (101, 105), (222, 224), (52, 60), (35, 7), (233, 257), (200, 89), (164, 166), (56, 75), (138, 150), (340, 355), (197, 208), (171, 192), (423, 227), (200, 75), (46, 44), (26, 38), (86, 89), (42, 10), (210, 222), (27, 39), (189, 199), (317, 223), (232, 255), (196, 207), (236, 243), (114, 128), (196, 216), (86, 75), (27, 7), (26, 51), (111, 104), (119, 117), (357, 7), (151, 158), (339, 367), (317, 227), (192, 214), (60, 67), (25, 55), (244, 251), (244, 260), (46, 25), (37, 56), (233, 89), (198, 220), (26, 37), (281, 7), (8, 7), (178, 180), (139, 170), (166, 35), (391, 391), (33, 45), (184, 205), (168, 89), (114, 118), (173, 204), (302, 89), (155, 165), (233, 75), (357, 370), (247, 266), (8, 11), (29, 43), (168, 201), (80, 88), (129, 139), (200, 199), (151, 157), (25, 36), (34, 23), (168, 75), (302, 75), (233, 241), (206, 196), (138, 89), (266, 247), (198, 210), (357, 392), (166, 7), (109, 138), (0, 2), (111, 89), (239, 247), (129, 134), (44, 17), (139, 7), (102, 107), (184, 195), (204, 173), (138, 75), (302, 317), (114, 117), (176, 187), (155, 164), (79, 7), (101, 7), (158, 169), (247, 256), (139, 128), (198, 223), (139, 146), (111, 75), (251, 244), (50, 74), (80, 87), (129, 138), (232, 239), (102, 111), (25, 35), (162, 171), (165, 176), (95, 99), (266, 246), (157, 168), (327, 341), (109, 128), (239, 246), (150, 156), (129, 133), (380, 380), (178, 7), (189, 7), (44, 16), (44, 25), (102, 106), (162, 166), (13, 25), (24, 34), (109, 114), (63, 7), (179, 200), (138, 159), (139, 145), (197, 217), (341, 356), (25, 7), (27, 89), (2, 5), (102, 101), (423, 7), (194, 184), (165, 166), (357, 89), (35, 47), (95, 98), (227, 235), (157, 167), (327, 340), (79, 86), (340, 368), (220, 223), (27, 66), (101, 104), (150, 155), (27, 75), (10, 13), (23, 32), (202, 192), (357, 75), (231, 237), (24, 33), (87, 80), (164, 174), (9, 8), (179, 190), (139, 117), (109, 113), (6, 2), (104, 7), (356, 380), (168, 180), (189, 221), (205, 184), (370, 391), (281, 75), (2, 4), (200, 7), (13, 19), (326, 339), (223, 228), (16, 24), (367, 367), (86, 97), (227, 234), (138, 144), (368, 368), (109, 117), (189, 198), (79, 85), (281, 290), (190, 190), (163, 173), (232, 281), (34, 46), (196, 206), (56, 64), (174, 196), (139, 89), (5, 9), (423, 75), (9, 7), (86, 92), (141, 46), (79, 71), (260, 244), (79, 89), (101, 89), (63, 72), (27, 51), (370, 381), (171, 181), (12, 17), (219, 230), (104, 109), (23, 44), (13, 18), (244, 250), (16, 23), (139, 75), (5, 4), (80, 7), (141, 23), (178, 179), (138, 143), (79, 75), (101, 75), (27, 37), (11, 29), (8, 42), (119, 129), (119, 138), (63, 85), (200, 221), (4, 8), (222, 230), (233, 7), (37, 50), (56, 63), (67, 60), (226, 233), (158, 178), (208, 197), (229, 229), (18, 27), (50, 7), (86, 91), (0, 6), (200, 198), (119, 124), (63, 71), (192, 203), (168, 7), (41, 52), (12, 16), (233, 240), (46, 32), (423, 89), (198, 227), (42, 7), (0, 1), (210, 219), (111, 115), (63, 75), (33, 34), (184, 194), (243, 243), (4, 7), (173, 184), (155, 163), (37, 49), (174, 185), (158, 168)], 'ddg_edge_info': [(367, 171), (250, 260), (1, 113), (232, 391), (0, 5), (11, 14), (317, 206), (223, 162), (128, 190), (18, 138), (44, 47), (243, 256), (42, 123), (317, 327), (43, 87), (143, 174), (153, 75), (232, 368), (367, 184), (118, 117), (190, 371), (44, 24), (190, 227), (133, 138), (380, 244), (43, 64), (29, 22), (128, 144), (0, 224), (228, 231), (368, 391), (227, 266), (179, 226), (232, 381), (317, 196), (243, 210), (18, 128), (368, 247), (178, 266), (56, 240), (10, 44), (190, 240), (202, 214), (128, 36), (254, 261), (391, 266), (229, 204), (1, 80), (227, 243), (367, 174), (243, 367), (317, 173), (128, 157), (0, 237), (228, 244), (236, 184), (368, 260), (380, 234), (391, 243), (223, 250), (229, 181), (1, 57), (151, 261), (317, 150), (227, 256), (98, 111), (242, 241), (18, 118), (12, 44), (128, 255), (254, 251), (380, 247), (9, 11), (187, 197), (6, 5), (317, 163), (9, 47), (42, 44), (228, 234), (260, 266), (380, 368), (19, 60), (18, 95), (79, 111), (56, 207), (42, 80), (391, 197), (128, 232), (254, 228), (380, 224), (217, 197), (43, 44), (223, 240), (229, 171), (1, 47), (227, 210), (237, 260), (368, 371), (260, 243), (178, 210), (243, 190), (190, 184), (261, 244), (113, 117), (368, 227), (236, 187), (317, 261), (391, 210), (223, 217), (227, 367), (1, 24), (0, 181), (143, 229), (1, 145), (260, 256), (368, 204), (111, 133), (56, 197), (91, 75), (190, 197), (317, 238), (391, 187), (222, 229), (128, 222), (80, 145), (1, 37), (43, 119), (9, 14), (178, 200), (243, 180), (190, 174), (42, 47), (128, 199), (179, 281), (46, 166), (63, 106), (317, 251), (223, 207), (128, 235), (1, 14), (104, 143), (340, 355), (0, 27), (111, 123), (190, 187), (317, 228), (223, 184), (200, 237), (229, 380), (223, 220), (42, 145), (260, 367), (227, 190), (156, 166), (43, 109), (229, 236), (0, 4), (368, 171), (178, 190), (251, 260), (143, 232), (317, 205), (254, 185), (380, 181), (44, 46), (317, 241), (391, 190), (223, 197), (1, 4), (196, 216), (43, 86), (143, 209), (128, 166), (367, 219), (368, 184), (111, 113), (317, 218), (223, 174), (128, 202), (75, 47), (60, 67), (98, 179), (105, 75), (227, 180), (104, 195), (317, 339), (1, 102), (232, 380), (367, 196), (317, 195), (128, 179), (228, 266), (223, 187), (128, 35), (380, 256), (143, 163), (0, 151), (1, 79), (260, 190), (232, 357), (128, 156), (0, 236), (8, 11), (228, 243), (368, 174), (317, 208), (243, 222), (223, 164), (10, 56), (206, 196), (266, 247), (143, 176), (236, 75), (232, 370), (56, 144), (317, 185), (228, 256), (243, 235), (2, 29), (18, 153), (236, 232), (176, 187), (260, 180), (210, 179), (317, 162), (242, 168), (254, 371), (327, 355), (380, 367), (98, 123), (133, 117), (232, 239), (2, 42), (391, 232), (43, 79), (228, 210), (367, 261), (44, 16), (190, 219), (128, 244), (254, 240), (380, 236), (43, 56), (228, 367), (227, 222), (203, 166), (190, 196), (190, 232), (391, 222), (43, 33), (223, 229), (1, 36), (236, 55), (227, 235), (5, 42), (317, 165), (243, 179), (0, 49), (367, 251), (111, 145), (380, 190), (56, 209), (10, 13), (317, 250), (391, 199), (43, 10), (2, 9), (242, 256), (128, 234), (391, 235), (10, 98), (223, 242), (43, 46), (1, 49), (232, 327), (145, 179), (367, 228), (243, 192), (381, 391), (223, 219), (128, 247), (1, 26), (206, 166), (228, 190), (18, 51), (143, 231), (8, 43), (254, 184), (19, 52), (380, 180), (56, 199), (190, 199), (317, 240), (128, 224), (234, 242), (223, 232), (174, 196), (232, 317), (5, 9), (260, 235), (63, 72), (190, 176), (391, 166), (254, 197), (368, 219), (217, 166), (43, 13), (223, 209), (1, 16), (227, 179), (228, 180), (141, 32), (178, 179), (229, 261), (242, 200), (128, 178), (0, 29), (367, 231), (368, 196), (254, 174), (391, 179), (128, 214), (200, 239), (236, 241), (227, 192), (67, 60), (158, 178), (43, 111), (1, 114), (0, 6), (56, 166), (190, 166), (317, 207), (391, 156), (0, 42), (26, 143), (254, 187), (223, 199), (1, 6), (128, 47), (141, 166), (0, 163), (207, 196), (367, 185), (56, 143), (229, 251), (128, 168), (0, 19), (171, 166), (317, 220), (223, 176), (235, 150), (260, 179), (317, 341), (229, 228), (1, 104), (243, 391), (37, 143), (190, 156), (317, 197), (128, 181), (18, 129), (192, 202), (243, 247), (181, 192), (260, 192), (243, 368), (10, 166), (317, 174), (128, 158), (242, 180), (0, 238), (0, 9), (239, 254), (111, 105), (243, 224), (317, 210), (223, 166), (368, 261), (380, 235), (243, 260), (391, 244), (87, 98), (174, 166), (106, 111), (43, 91), (242, 157), (228, 222), (10, 179), (317, 187), (128, 171), (18, 119), (204, 166), (190, 231), (128, 256), (223, 35), (1, 71), (317, 164), (228, 235), (327, 357), (6, 42), (244, 179), (10, 12), (223, 156), (242, 255), (368, 251), (190, 244), (391, 234), (43, 45), (227, 391), (214, 192), (232, 326), (10, 133), (227, 247), (43, 166), (0, 241), (18, 109), (368, 228), (178, 247), (98, 138), (243, 227), (128, 246), (227, 368), (391, 247), (43, 58), (223, 254), (229, 185), (227, 224), (232, 339), (207, 166), (128, 138), (367, 240), (18, 86), (391, 368), (243, 204), (150, 162), (128, 223), (254, 219), (56, 234), (391, 224), (43, 35), (223, 231), (194, 204), (151, 242), (10, 123), (58, 56), (157, 178), (243, 181), (143, 243), (0, 51), (380, 192), (2, 11), (43, 12), (128, 236), (254, 232), (380, 228), (223, 244), (260, 391), (1, 51), (228, 179), (43, 133), (229, 260), (260, 247), (19, 41), (341, 357), (368, 231), (205, 204), (260, 368), (236, 47), (0, 185), (228, 192), (260, 224), (141, 44), (243, 171), (367, 243), (317, 242), (223, 198), (128, 226), (1, 5), (27, 143), (254, 222), (223, 234), (227, 204), (43, 123), (106, 179), (368, 185), (190, 178), (317, 219), (128, 203), (254, 199), (317, 255), (229, 371), (10, 67), (1, 18), (227, 181), (37, 57), (317, 340), (229, 227), (367, 197), (1, 139), (128, 180), (254, 176), (317, 232), (391, 181), (128, 216), (10, 80), (250, 178), (236, 243), (196, 207), (60, 166), (106, 133), (237, 244), (43, 113), (229, 240), (242, 179), (260, 227), (0, 8), (18, 56), (367, 210), (111, 104), (317, 209), (223, 165), (200, 218), (133, 128), (192, 214), (227, 171), (145, 138), (244, 260), (260, 204), (26, 37), (141, 24), (232, 371), (367, 187), (243, 380), (10, 178), (1, 129), (254, 166), (239, 266), (380, 391), (317, 222), (243, 236), (223, 178), (190, 266), (391, 256), (260, 181), (106, 123), (236, 89), (1, 106), (317, 199), (223, 155), (80, 106), (10, 47), (190, 243), (2, 43), (380, 260), (43, 80), (89, 47), (223, 47), (228, 391), (317, 176), (228, 247), (327, 369), (254, 156), (44, 17), (223, 168), (190, 256), (43, 57), (229, 184), (228, 368), (260, 171), (10, 145), (117, 128), (228, 224), (251, 244), (391, 367), (228, 260), (368, 240), (10, 37), (42, 106), (227, 380), (104, 166), (123, 179), (223, 266), (229, 197), (195, 204), (260, 184), (227, 236), (5, 43), (317, 166), (128, 150), (40, 37), (380, 371), (391, 380), (190, 210), (254, 231), (380, 227), (391, 236), (43, 47), (223, 243), (229, 174), (1, 50), (5, 56), (190, 367), (18, 111), (10, 256), (380, 204), (43, 24), (317, 35), (1, 27), (254, 244), (380, 240), (72, 87), (223, 256), (229, 187), (1, 63), (0, 184), (232, 341), (44, 141), (43, 145), (317, 156), (228, 227), (190, 200), (150, 164), (341, 369), (368, 243), (43, 37), (223, 233), (128, 261), (260, 380), (87, 80), (1, 40), (5, 10), (256, 266), (228, 204), (260, 236), (242, 224), (10, 246), (317, 254), (223, 210), (128, 238), (254, 234), (1, 17), (326, 339), (223, 246), (236, 36), (228, 181), (141, 33), (138, 144), (143, 222), (367, 232), (368, 197), (380, 171), (243, 196), (163, 173), (391, 180), (317, 231), (242, 237), (43, 27), (196, 206), (185, 196), (251, 178), (0, 187), (141, 46), (143, 235), (128, 192), (8, 47), (0, 43), (368, 210), (56, 203), (380, 184), (317, 244), (223, 200), (128, 228), (236, 255), (228, 171), (106, 145), (49, 56), (367, 222), (368, 187), (11, 29), (56, 180), (190, 180), (242, 227), (128, 205), (56, 36), (22, 43), (43, 102), (1, 105), (141, 36), (367, 199), (10, 190), (317, 198), (1, 141), (5, 111), (192, 203), (380, 174), (317, 234), (10, 46), (223, 190), (367, 176), (317, 355), (1, 118), (0, 10), (179, 241), (128, 195), (199, 75), (243, 261), (14, 29), (229, 219), (1, 95), (242, 158), (327, 381), (10, 36), (223, 180), (180, 75), (145, 117), (229, 196), (143, 156), (223, 36), (228, 380), (1, 72), (367, 166), (357, 381), (229, 232), (228, 236), (6, 43), (218, 222), (210, 218), (184, 166), (223, 157), (243, 251), (254, 266), (260, 196), (106, 138), (367, 179), (317, 178), (128, 162), (243, 228), (203, 192), (190, 222), (254, 243), (223, 255), (232, 340), (367, 156), (317, 155), (227, 261), (150, 163), (80, 98), (0, 75), (190, 235), (2, 35), (43, 36), (317, 47), (128, 260), (194, 205), (0, 111), (87, 79), (254, 256), (43, 72), (56, 91), (229, 199), (1, 75), (228, 203), (179, 198), (6, 10), (117, 143), (317, 168), (0, 232), (128, 237), (341, 381), (43, 49), (229, 176), (236, 35), (151, 256), (5, 22), (56, 104), (9, 29), (227, 251), (242, 236), (368, 232), (254, 210), (178, 251), (317, 266), (43, 26), (223, 222), (128, 250), (1, 29), (227, 228), (141, 45), (37, 104), (317, 158), (143, 234), (168, 178), (254, 367), (260, 261), (367, 244), (79, 106), (10, 235), (63, 98), (317, 243), (391, 192), (128, 227), (380, 219), (391, 228), (223, 235), (229, 166), (216, 196), (1, 42), (243, 185), (190, 179), (128, 204), (0, 55), (368, 222), (380, 196), (317, 256), (43, 16), (128, 240), (355, 368), (1, 19), (64, 75), (37, 58), (56, 71), (179, 178), (141, 35), (260, 251), (367, 234), (368, 199), (56, 192), (190, 192), (317, 233), (128, 217), (202, 166), (234, 235), (151, 200), (123, 138), (1, 32), (227, 195), (19, 166), (43, 114), (228, 196), (1, 117), (260, 228), (368, 176), (197, 208), (1, 153), (128, 194), (254, 190), (200, 219), (171, 192), (317, 246), (223, 202), (1, 9), (0, 166), (317, 367), (0, 22), (367, 224), (19, 35), (111, 118), (317, 223), (223, 179), (128, 207), (227, 185), (0, 143), (43, 104), (229, 231), (26, 51), (368, 166), (317, 200), (128, 184), (0, 35), (179, 266), (254, 180), (339, 367), (219, 222), (380, 176), (317, 236), (203, 214), (223, 192), (235, 166), (380, 261), (244, 251), (228, 163), (243, 371), (317, 357), (43, 117), (143, 204), (229, 244), (0, 12), (368, 179), (128, 197), (232, 254), (236, 224), (216, 166), (173, 204), (36, 55), (227, 260), (179, 220), (18, 37), (368, 156), (5, 67), (369, 380), (317, 190), (128, 174), (228, 261), (243, 240), (190, 234), (380, 251), (51, 75), (236, 237), (391, 260), (43, 71), (195, 205), (260, 185), (128, 151), (179, 233), (0, 2), (190, 391), (98, 128), (317, 203), (190, 247), (143, 171), (1, 87), (179, 210), (367, 181), (6, 22), (190, 368), (317, 180), (29, 42), (128, 164), (228, 251), (80, 87), (367, 266), (190, 224), (317, 36), (227, 371), (5, 178), (236, 227), (1, 64), (218, 178), (317, 157), (391, 371), (150, 165), (368, 244), (17, 166), (63, 133), (391, 227), (0, 113), (246, 254), (227, 240), (179, 200), (232, 355), (197, 217), (243, 184), (18, 102), (367, 256), (19, 67), (10, 247), (10, 18), (236, 181), (391, 204), (242, 261), (128, 239), (194, 184), (254, 235), (380, 231), (391, 240), (43, 51), (223, 247), (35, 47), (56, 371), (144, 75), (243, 197), (150, 155), (242, 238), (368, 234), (63, 123), (223, 224), (260, 371), (223, 260), (251, 179), (9, 8), (208, 217), (179, 190), (141, 47), (6, 2), (243, 174), (205, 184), (380, 185), (190, 204), (2, 4), (128, 229), (1, 8), (223, 237), (1, 44), (5, 14), (42, 18), (260, 240), (243, 187), (190, 181), (391, 171), (128, 206), (0, 57), (368, 224), (52, 67), (10, 250), (43, 18), (223, 214), (128, 242), (227, 184), (10, 106), (228, 185), (367, 380), (43, 139), (229, 266), (27, 51), (367, 236), (254, 179), (19, 47), (79, 98), (171, 181), (317, 235), (391, 184), (128, 219), (145, 128), (244, 250), (223, 227), (227, 197), (317, 356), (229, 243), (143, 203), (1, 119), (0, 11), (190, 171), (128, 196), (0, 47), (254, 192), (111, 143), (123, 117), (10, 60), (223, 204), (1, 11), (227, 174), (37, 50), (56, 63), (371, 75), (208, 197), (367, 190), (317, 369), (43, 129), (229, 256), (128, 173), (56, 184), (63, 80), (391, 174), (223, 181), (128, 209), (14, 43), (227, 187), (46, 32), (43, 106), (1, 109), (179, 232), (0, 1), (210, 219), (317, 202), (223, 158), (246, 178), (223, 194), (229, 210), (1, 86), (260, 197), (141, 17), (18, 26), (367, 180), (56, 138), (317, 179), (128, 163), (0, 14), (368, 181), (223, 171), (368, 266), (229, 367), (10, 63), (228, 371), (260, 174), (266, 254), (260, 210), (219, 178), (56, 151), (190, 380), (317, 192), (128, 176), (224, 229), (190, 236), (55, 47), (260, 187), (247, 254), (206, 216), (56, 128), (228, 240), (37, 151), (166, 36), (243, 219), (10, 17), (0, 89), (368, 256), (63, 145), (43, 50), (195, 184), (380, 266), (317, 326), (56, 105), (36, 47), (232, 367), (42, 63), (254, 391), (18, 114), (243, 232), (128, 251), (254, 247), (380, 243), (43, 63), (229, 190), (143, 150), (87, 106), (9, 43), (209, 217), (128, 143), (254, 368), (254, 224), (43, 40), (223, 236), (254, 260), (1, 43), (10, 128), (176, 197), (228, 207), (368, 367), (6, 14), (0, 56), (98, 133), (380, 197), (43, 17), (128, 241), (32, 44), (229, 180), (1, 56), (227, 219), (228, 184), (356, 369), (368, 380), (367, 235), (178, 219), (243, 199), (128, 218), (368, 236), (200, 243), (380, 210), (391, 219), (223, 226), (128, 254), (1, 33), (227, 196), (227, 232), (228, 197), (317, 391), (197, 209), (243, 176), (380, 187), (317, 247), (391, 196), (223, 203), (128, 231), (254, 227), (1, 10), (223, 239), (1, 46), (228, 174), (12, 141), (317, 368), (209, 197), (19, 36), (368, 190), (317, 224), (163, 166), (128, 208), (254, 204), (12, 33), (317, 260), (223, 216), (75, 89), (133, 179), (56, 75), (43, 105), (228, 187), (260, 219), (317, 381), (43, 141), (243, 166), (143, 228), (128, 185), (0, 36), (254, 181), (200, 210), (151, 168), (56, 196), (317, 237), (194, 166), (247, 178), (227, 199), (141, 16), (43, 118), (42, 10), (260, 232), (179, 244), (368, 180), (317, 214), (128, 198), (200, 223), (232, 255), (223, 206), (1, 13), (227, 176), (43, 95), (229, 222), (1, 98), (367, 192), (104, 227), (317, 371), (243, 156), (0, 255), (0, 26), (254, 171), (10, 219), (44, 32), (317, 227), (391, 176), (236, 238), (391, 261), (106, 128), (229, 235), (1, 111), (260, 222), (207, 216), (166, 35), (317, 204), (44, 45), (4, 9), (184, 205), (10, 52), (223, 196), (14, 22), (227, 166), (260, 199), (247, 266), (44, 166), (317, 181), (29, 43), (128, 165), (243, 231), (317, 217), (223, 173), (42, 98), (190, 261), (391, 251), (208, 166), (260, 176), (10, 150), (43, 98), (9, 42), (228, 229), (56, 153), (317, 194), (223, 150), (184, 195), (243, 244), (204, 173), (227, 156), (43, 75), (232, 356), (317, 171), (128, 155), (254, 380), (223, 163), (18, 139), (254, 236), (380, 232), (190, 251), (229, 179), (260, 166), (266, 246), (1, 91), (228, 219), (327, 341), (232, 369), (317, 184), (143, 260), (368, 235), (98, 145), (10, 261), (243, 234), (10, 32), (190, 228), (229, 156), (0, 104), (10, 117), (223, 261), (229, 192), (227, 231), (367, 391), (228, 232), (367, 247), (380, 222), (391, 231), (43, 42), (223, 238), (128, 266), (1, 45), (260, 156), (367, 368), (227, 244), (228, 209), (1, 166), (367, 260), (178, 244), (10, 251), (380, 199), (236, 185), (123, 128), (43, 19), (128, 243), (202, 192), (1, 22), (214, 166), (240, 75), (223, 251), (1, 58), (317, 380), (57, 75), (391, 185), (128, 220), (179, 302), (12, 45), (43, 32), (223, 228), (80, 179), (195, 166), (1, 35), (227, 234), (228, 199), (260, 231), (43, 153), (200, 222), (223, 205), (128, 233), (1, 12), (223, 241), (56, 64), (176, 166), (228, 176), (367, 371), (5, 18), (317, 370), (1, 133), (8, 29), (260, 244), (367, 227), (368, 192), (10, 218), (380, 166), (190, 185), (317, 226), (370, 381), (242, 232), (128, 210), (80, 133), (223, 218), (229, 234), (367, 204), (117, 178), (42, 35), (128, 187), (8, 42), (380, 179), (184, 204), (317, 239), (223, 195), (1, 2), (229, 391), (63, 179), (228, 166), (18, 27), (143, 207), (229, 247), (1, 123), (260, 234), (18, 63), (166, 47), (71, 75), (380, 156), (317, 216), (128, 200), (80, 123), (41, 52), (254, 196), (243, 266), (229, 368), (190, 260), (223, 208), (42, 133), (229, 224), (209, 166), (18, 40), (219, 179), (184, 194), (317, 229), (10, 41), (223, 185), (173, 184), (228, 156), (174, 185)]}]}
{'flac_decode_frame': [{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 190, 'instruction': 'movl\t%edx, %esi'}, {'instIndex': 191, 'instruction': 'shll\t$3, %esi'}, {'instIndex': 236, 'instruction': ''}, {'instIndex': 237, 'instruction': 'orl\t%ecx, %eax'}, {'instIndex': 279, 'instruction': 'shrl\t$0xf9, %esi'}, {'instIndex': 280, 'instruction': ''}, {'instIndex': 290, 'instruction': 'shll\t%cl, %esi'}, {'instIndex': 291, 'instruction': 'movl\t0x5e4(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 302, 'instruction': 'rorw\t$8, %ax'}, {'instIndex': 303, 'instruction': 'shll\t%cl, %eax'}, {'instIndex': 304, 'instruction': 'movq\t0x638(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 464, 'instruction': 'movq\t%rdx, 0x5a0(%rsp)                # 8-byte Spill'}, {'instIndex': 517, 'instruction': 'movq\t0x648(%rsp), %rcx                # 8-byte Reload'}, {'instIndex': 602, 'instruction': 'callq\tav_log@PLT'}, {'instIndex': 665, 'instruction': 'movq\t0x520(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 666, 'instruction': 'movq\t0x628(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 667, 'instruction': 'movl\t0x514(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 718, 'instruction': 'jmp\t.LBB4_130'}, {'instIndex': 719, 'instruction': 'movq\t0x648(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 735, 'instruction': 'movl\t%eax, 0x50c(%rsp)                # 4-byte Spill'}, {'instIndex': 736, 'instruction': 'jmp\t.LBB4_52'}, {'instIndex': 825, 'instruction': 'jmp\t.LBB4_63'}, {'instIndex': 843, 'instruction': 'movl\t%eax, 0x4ec(%rsp)                # 4-byte Spill'}, {'instIndex': 860, 'instruction': 'movl\t%ecx, 0x4e8(%rsp)                # 4-byte Spill'}, {'instIndex': 1014, 'instruction': 'jmp\t.LBB4_130'}, {'instIndex': 1015, 'instruction': 'movq\t0x648(%rsp), %rsi                # 8-byte Reload'}, {'instIndex': 1016, 'instruction': 'movl\t0x46c(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1134, 'instruction': 'movl\t0x430(%rsp), %ecx                # 4-byte Reload'}, {'instIndex': 1139, 'instruction': 'movl\t(%rdx,%rsi), %edx'}, {'instIndex': 1140, 'instruction': 'rorw\t$8, %dx'}, {'instIndex': 1141, 'instruction': 'rorl\t$0x10, %edx'}, {'instIndex': 1149, 'instruction': 'movl\t0x430(%rsp), %esi                # 4-byte Reload'}, {'instIndex': 1150, 'instruction': 'movl\t0x42c(%rsp), %edx                # 4-byte Reload'}, {'instIndex': 1165, 'instruction': 'movq\t0x470(%rsp), %rax                # 8-byte Reload'}, {'instIndex': 1170, 'instruction': 'addl\t$0x10, %r8d'}, {'instIndex': 1171, 'instruction': 'movl\t%esi, %ecx'}, {'instIndex': 1227, 'instruction': 'movl\t0x41c(%rsp), %eax                # 4-byte Reload'}, {'instIndex': 1232, 'instruction': 'movl\t%ecx, %esi'}, {'instIndex': 1233, 'instruction': 'sarl\t$3, %esi'}, {'instIndex': 1234, 'instruction': 'movslq\t%esi, %rsi'}, {'instIndex': 1242, 'instruction': 'movl\t%edx, 0x3d4(%rsp)                 # 4-byte Spill'}, {'instIndex': 1243, 'instruction': 'cmpl\t$0x12, %eax'}, {'instIndex': 1258, 'instruction': 'movq\t0x648(%rsp), %rdx                # 8-byte Reload'}, {'instIndex': 1263, 'instruction': 'shrl\t$0xf0, %r9d'}, {'instIndex': 1264, 'instruction': ''}, {'instIndex': 1342, 'instruction': 'movq\t%rax, 0x388(%rsp)                 # 8-byte Spill'}, {'instIndex': 1347, 'instruction': 'movq\t%rsi, 0x360(%rsp)                 # 8-byte Spill'}, {'instIndex': 1348, 'instruction': 'movl\t%eax, 0x368(%rsp)                 # 4-byte Spill'}, {'instIndex': 1349, 'instruction': 'movl\t%ecx, 0x36c(%rsp)                 # 4-byte Spill'}, {'instIndex': 1357, 'instruction': 'andl\t$7, %ecx'}, {'instIndex': 1358, 'instruction': 'movl\t%ecx, 0x370(%rsp)                 # 4-byte Spill'}, {'instIndex': 1373, 'instruction': 'movl\t%edx, (%rcx)'}, {'instIndex': 1378, 'instruction': 'movl\t0x368(%rsp), %esi                 # 4-byte Reload'}, {'instIndex': 1379, 'instruction': 'movq\t0x470(%rsp), %rax                # 8-byte Reload'}]}]}
The analysis of 26 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/patch_info.txt
{'1': {'before': 'a/libavcodec/bitstream.c', 'after': 'b/libavcodec/bitstream.c'}, '2': {'before': 'a/libavcodec/utils.c', 'after': 'b/libavcodec/utils.c'}}
{'1': [{'before': '-87,7', 'after': '+87,7', 'function': 'static int alloc_table'}], '2': [{'before': '-87,7', 'after': '+87,7', 'function': 'void *av_mallocz_static'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28---b/libavcodec/bitstream.c
The case of compiler gcc with optimization no.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_after/no/bitstream_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_after/no/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler gcc with optimization O0.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_after/O0/bitstream_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_after/O0/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler gcc with optimization O1.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_after/O1/bitstream_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_after/O1/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler gcc with optimization O2.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_after/O2/bitstream_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_after/O2/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler gcc with optimization O3.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_after/O3/bitstream_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_after/O3/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler gcc with optimization Os.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_after/Os/bitstream_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_after/Os/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler clang with optimization no.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_after/no/bitstream.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_after/no/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler clang with optimization O0.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_after/O0/bitstream.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_after/O0/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler clang with optimization O1.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_after/O1/bitstream.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_after/O1/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler clang with optimization O2.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_after/O2/bitstream.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_after/O2/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler clang with optimization O3.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_after/O3/bitstream.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_after/O3/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler clang with optimization Os.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_after/Os/bitstream.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_after/Os/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28---a/libavcodec/bitstream.c
The case of compiler gcc with optimization no.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_before/no/bitstream_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_before/no/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler gcc with optimization O0.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_before/O0/bitstream_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_before/O0/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler gcc with optimization O1.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_before/O1/bitstream_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_before/O1/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler gcc with optimization O2.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_before/O2/bitstream_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_before/O2/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler gcc with optimization O3.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_before/O3/bitstream_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_before/O3/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler gcc with optimization Os.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_before/Os/bitstream_gcc.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/gcc_before/Os/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler clang with optimization no.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_before/no/bitstream.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_before/no/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler clang with optimization O0.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_before/O0/bitstream.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_before/O0/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler clang with optimization O1.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_before/O1/bitstream.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_before/O1/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler clang with optimization O2.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_before/O2/bitstream.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_before/O2/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler clang with optimization O3.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_before/O3/bitstream.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_before/O3/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The case of compiler clang with optimization Os.
Patched source code file: bitstream.c
Patched function: 1---static int alloc_table 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_before/Os/bitstream.s
Assembly file does not exist.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28/clang_before/Os/bitstream.o
Binary file does not exist.
{'alloc_table': []}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28---b/libavcodec/utils.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/5dad0282b5a1576884fd86ec65b57de2f1b4df28---a/libavcodec/utils.c
The case of compiler gcc with optimization no.
This program has been analyzed.
The case of compiler gcc with optimization O0.
This program has been analyzed.
The case of compiler gcc with optimization O1.
This program has been analyzed.
The case of compiler gcc with optimization O2.
This program has been analyzed.
The case of compiler gcc with optimization O3.
This program has been analyzed.
The case of compiler gcc with optimization Os.
This program has been analyzed.
The case of compiler clang with optimization no.
This program has been analyzed.
The case of compiler clang with optimization O0.
This program has been analyzed.
The case of compiler clang with optimization O1.
This program has been analyzed.
The case of compiler clang with optimization O2.
This program has been analyzed.
The case of compiler clang with optimization O3.
This program has been analyzed.
The case of compiler clang with optimization Os.
This program has been analyzed.
The analysis of 27 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/patch_info.txt
{'1': {'before': 'a/avconv.c', 'after': 'b/avconv.c'}}
{'1': [{'before': '-1856,29', 'after': '+1856,27', 'function': 'static int output_packet'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007---b/avconv.c
The case of compiler gcc with optimization no.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/gcc_after/no: directory not exists.
The case of compiler gcc with optimization O0.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/gcc_after/O0: directory not exists.
The case of compiler gcc with optimization O1.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/gcc_after/O1: directory not exists.
The case of compiler gcc with optimization O2.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/gcc_after/O2: directory not exists.
The case of compiler gcc with optimization O3.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/gcc_after/O3: directory not exists.
The case of compiler gcc with optimization Os.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/gcc_after/Os: directory not exists.
The case of compiler clang with optimization no.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/clang_after/no: directory not exists.
The case of compiler clang with optimization O0.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/clang_after/O0: directory not exists.
The case of compiler clang with optimization O1.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/clang_after/O1: directory not exists.
The case of compiler clang with optimization O2.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/clang_after/O2: directory not exists.
The case of compiler clang with optimization O3.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/clang_after/O3: directory not exists.
The case of compiler clang with optimization Os.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/clang_after/Os: directory not exists.
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007---a/avconv.c
The case of compiler gcc with optimization no.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/gcc_before/no: directory not exists.
The case of compiler gcc with optimization O0.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/gcc_before/O0: directory not exists.
The case of compiler gcc with optimization O1.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/gcc_before/O1: directory not exists.
The case of compiler gcc with optimization O2.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/gcc_before/O2: directory not exists.
The case of compiler gcc with optimization O3.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/gcc_before/O3: directory not exists.
The case of compiler gcc with optimization Os.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/gcc_before/Os: directory not exists.
The case of compiler clang with optimization no.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/clang_before/no: directory not exists.
The case of compiler clang with optimization O0.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/clang_before/O0: directory not exists.
The case of compiler clang with optimization O1.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/clang_before/O1: directory not exists.
The case of compiler clang with optimization O2.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/clang_before/O2: directory not exists.
The case of compiler clang with optimization O3.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/clang_before/O3: directory not exists.
The case of compiler clang with optimization Os.
Patched source code file: avconv.c
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/51aeb6945251f91c8a9f79792706e77cf3742007/clang_before/Os: directory not exists.
The analysis of 28 vulnerability: libav.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/patch_info.txt
{'1': {'before': 'a/libavformat/movenc.c', 'after': 'b/libavformat/movenc.c'}}
{'1': [{'before': '-1858,7', 'after': '+1858,8', 'function': 'static int mov_write_ilst_tag'}]}
The patch information: after---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c---b/libavformat/movenc.c
The case of compiler gcc with optimization no.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/no/movenc_gcc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/no/movenc_gcc.s---mov_write_ilst_tag---after
function id: 157
function flag: True
There are 206 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 72, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 73, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 74, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 75, 'instruction': 'leaq\t.LC0x98(%rip), %rdx'}, {'instIndex': 76, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 77, 'instruction': 'leaq\t.LC0x99(%rip), %rdx'}, {'instIndex': 78, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 79, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 80, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 81, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 82, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 83, 'instruction': 'leaq\t.LC0x9a(%rip), %rdx'}, {'instIndex': 84, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 85, 'instruction': 'leaq\t.LC0x9b(%rip), %rdx'}, {'instIndex': 86, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 87, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 88, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 89, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 90, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 91, 'instruction': 'leaq\t.LC0x9c(%rip), %rdx'}, {'instIndex': 92, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 93, 'instruction': 'leaq\t.LC0x9d(%rip), %rdx'}, {'instIndex': 94, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 95, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 96, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 97, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 98, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 99, 'instruction': 'leaq\t.LC0x9e(%rip), %rdx'}, {'instIndex': 100, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 101, 'instruction': 'leaq\t.LC0x9f(%rip), %rdx'}, {'instIndex': 102, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 103, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 104, 'instruction': 'testl\t%eax, %eax'}, {'instIndex': 105, 'instruction': 'jne\t.L522'}, {'instIndex': 106, 'instruction': 'movq\t0x18(%rsp), %rax'}, {'instIndex': 107, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 108, 'instruction': 'movl\t$0, %ecx'}, {'instIndex': 109, 'instruction': 'leaq\t.LC0xa0(%rip), %rdx'}, {'instIndex': 110, 'instruction': 'leaq\t.LC0x9f(%rip), %rsi'}, {'instIndex': 111, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 112, 'instruction': 'call\tmov_write_string_tag'}, {'instIndex': 113, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 114, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 115, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 116, 'instruction': 'leaq\t.LC0xa1(%rip), %rdx'}, {'instIndex': 117, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 118, 'instruction': 'leaq\t.LC0xa2(%rip), %rdx'}, {'instIndex': 119, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 120, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 121, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 122, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 123, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 124, 'instruction': 'leaq\t.LC0xa3(%rip), %rdx'}, {'instIndex': 125, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 126, 'instruction': 'leaq\t.LC0xa4(%rip), %rdx'}, {'instIndex': 127, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 128, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 129, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 130, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 131, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 132, 'instruction': 'leaq\t.LC0xa5(%rip), %rdx'}, {'instIndex': 133, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 134, 'instruction': 'leaq\t.LC0xa6(%rip), %rdx'}, {'instIndex': 135, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 136, 'instruction': 'call\tmov_write_string_metadata'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/no/movenc.o
Binary file does not exist.
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 72, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 73, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 74, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 75, 'instruction': 'leaq\t.LC0x98(%rip), %rdx'}, {'instIndex': 76, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 77, 'instruction': 'leaq\t.LC0x99(%rip), %rdx'}, {'instIndex': 78, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 79, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 80, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 81, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 82, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 83, 'instruction': 'leaq\t.LC0x9a(%rip), %rdx'}, {'instIndex': 84, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 85, 'instruction': 'leaq\t.LC0x9b(%rip), %rdx'}, {'instIndex': 86, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 87, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 88, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 89, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 90, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 91, 'instruction': 'leaq\t.LC0x9c(%rip), %rdx'}, {'instIndex': 92, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 93, 'instruction': 'leaq\t.LC0x9d(%rip), %rdx'}, {'instIndex': 94, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 95, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 96, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 97, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 98, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 99, 'instruction': 'leaq\t.LC0x9e(%rip), %rdx'}, {'instIndex': 100, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 101, 'instruction': 'leaq\t.LC0x9f(%rip), %rdx'}, {'instIndex': 102, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 103, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 104, 'instruction': 'testl\t%eax, %eax'}, {'instIndex': 105, 'instruction': 'jne\t.L522'}, {'instIndex': 106, 'instruction': 'movq\t0x18(%rsp), %rax'}, {'instIndex': 107, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 108, 'instruction': 'movl\t$0, %ecx'}, {'instIndex': 109, 'instruction': 'leaq\t.LC0xa0(%rip), %rdx'}, {'instIndex': 110, 'instruction': 'leaq\t.LC0x9f(%rip), %rsi'}, {'instIndex': 111, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 112, 'instruction': 'call\tmov_write_string_tag'}, {'instIndex': 113, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 114, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 115, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 116, 'instruction': 'leaq\t.LC0xa1(%rip), %rdx'}, {'instIndex': 117, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 118, 'instruction': 'leaq\t.LC0xa2(%rip), %rdx'}, {'instIndex': 119, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 120, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 121, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 122, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 123, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 124, 'instruction': 'leaq\t.LC0xa3(%rip), %rdx'}, {'instIndex': 125, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 126, 'instruction': 'leaq\t.LC0xa4(%rip), %rdx'}, {'instIndex': 127, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 128, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 129, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 130, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 131, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 132, 'instruction': 'leaq\t.LC0xa5(%rip), %rdx'}, {'instIndex': 133, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 134, 'instruction': 'leaq\t.LC0xa6(%rip), %rdx'}, {'instIndex': 135, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 136, 'instruction': 'call\tmov_write_string_metadata'}]}]}
The case of compiler gcc with optimization O0.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/O0/movenc_gcc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/O0/movenc_gcc.s---mov_write_ilst_tag---after
function id: 157
function flag: True
There are 206 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 72, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 73, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 74, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 75, 'instruction': 'leaq\t.LC0x98(%rip), %rdx'}, {'instIndex': 76, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 77, 'instruction': 'leaq\t.LC0x99(%rip), %rdx'}, {'instIndex': 78, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 79, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 80, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 81, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 82, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 83, 'instruction': 'leaq\t.LC0x9a(%rip), %rdx'}, {'instIndex': 84, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 85, 'instruction': 'leaq\t.LC0x9b(%rip), %rdx'}, {'instIndex': 86, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 87, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 88, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 89, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 90, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 91, 'instruction': 'leaq\t.LC0x9c(%rip), %rdx'}, {'instIndex': 92, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 93, 'instruction': 'leaq\t.LC0x9d(%rip), %rdx'}, {'instIndex': 94, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 95, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 96, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 97, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 98, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 99, 'instruction': 'leaq\t.LC0x9e(%rip), %rdx'}, {'instIndex': 100, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 101, 'instruction': 'leaq\t.LC0x9f(%rip), %rdx'}, {'instIndex': 102, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 103, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 104, 'instruction': 'testl\t%eax, %eax'}, {'instIndex': 105, 'instruction': 'jne\t.L522'}, {'instIndex': 106, 'instruction': 'movq\t0x18(%rsp), %rax'}, {'instIndex': 107, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 108, 'instruction': 'movl\t$0, %ecx'}, {'instIndex': 109, 'instruction': 'leaq\t.LC0xa0(%rip), %rdx'}, {'instIndex': 110, 'instruction': 'leaq\t.LC0x9f(%rip), %rsi'}, {'instIndex': 111, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 112, 'instruction': 'call\tmov_write_string_tag'}, {'instIndex': 113, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 114, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 115, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 116, 'instruction': 'leaq\t.LC0xa1(%rip), %rdx'}, {'instIndex': 117, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 118, 'instruction': 'leaq\t.LC0xa2(%rip), %rdx'}, {'instIndex': 119, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 120, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 121, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 122, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 123, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 124, 'instruction': 'leaq\t.LC0xa3(%rip), %rdx'}, {'instIndex': 125, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 126, 'instruction': 'leaq\t.LC0xa4(%rip), %rdx'}, {'instIndex': 127, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 128, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 129, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 130, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 131, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 132, 'instruction': 'leaq\t.LC0xa5(%rip), %rdx'}, {'instIndex': 133, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 134, 'instruction': 'leaq\t.LC0xa6(%rip), %rdx'}, {'instIndex': 135, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 136, 'instruction': 'call\tmov_write_string_metadata'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/O0/movenc.o
Binary file does not exist.
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 72, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 73, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 74, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 75, 'instruction': 'leaq\t.LC0x98(%rip), %rdx'}, {'instIndex': 76, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 77, 'instruction': 'leaq\t.LC0x99(%rip), %rdx'}, {'instIndex': 78, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 79, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 80, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 81, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 82, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 83, 'instruction': 'leaq\t.LC0x9a(%rip), %rdx'}, {'instIndex': 84, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 85, 'instruction': 'leaq\t.LC0x9b(%rip), %rdx'}, {'instIndex': 86, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 87, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 88, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 89, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 90, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 91, 'instruction': 'leaq\t.LC0x9c(%rip), %rdx'}, {'instIndex': 92, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 93, 'instruction': 'leaq\t.LC0x9d(%rip), %rdx'}, {'instIndex': 94, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 95, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 96, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 97, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 98, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 99, 'instruction': 'leaq\t.LC0x9e(%rip), %rdx'}, {'instIndex': 100, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 101, 'instruction': 'leaq\t.LC0x9f(%rip), %rdx'}, {'instIndex': 102, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 103, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 104, 'instruction': 'testl\t%eax, %eax'}, {'instIndex': 105, 'instruction': 'jne\t.L522'}, {'instIndex': 106, 'instruction': 'movq\t0x18(%rsp), %rax'}, {'instIndex': 107, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 108, 'instruction': 'movl\t$0, %ecx'}, {'instIndex': 109, 'instruction': 'leaq\t.LC0xa0(%rip), %rdx'}, {'instIndex': 110, 'instruction': 'leaq\t.LC0x9f(%rip), %rsi'}, {'instIndex': 111, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 112, 'instruction': 'call\tmov_write_string_tag'}, {'instIndex': 113, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 114, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 115, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 116, 'instruction': 'leaq\t.LC0xa1(%rip), %rdx'}, {'instIndex': 117, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 118, 'instruction': 'leaq\t.LC0xa2(%rip), %rdx'}, {'instIndex': 119, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 120, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 121, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 122, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 123, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 124, 'instruction': 'leaq\t.LC0xa3(%rip), %rdx'}, {'instIndex': 125, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 126, 'instruction': 'leaq\t.LC0xa4(%rip), %rdx'}, {'instIndex': 127, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 128, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 129, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 130, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 131, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 132, 'instruction': 'leaq\t.LC0xa5(%rip), %rdx'}, {'instIndex': 133, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 134, 'instruction': 'leaq\t.LC0xa6(%rip), %rdx'}, {'instIndex': 135, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 136, 'instruction': 'call\tmov_write_string_metadata'}]}]}
The case of compiler gcc with optimization O1.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/O1/movenc_gcc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/O1/movenc_gcc.s---mov_write_ilst_tag---after
There are 0 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': []}]
Empty patched instructions for patched function: mov_write_ilst_tag from assembly files.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/O1/movenc.o
Binary file does not exist.
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': []}]}
The case of compiler gcc with optimization O2.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/O2/movenc_gcc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/O2/movenc_gcc.s---mov_write_ilst_tag---after
There are 0 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': []}]
Empty patched instructions for patched function: mov_write_ilst_tag from assembly files.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/O2/movenc.o
Binary file does not exist.
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': []}]}
The case of compiler gcc with optimization O3.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/O3/movenc_gcc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/O3/movenc_gcc.s---mov_write_ilst_tag---after
There are 0 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': []}]
Empty patched instructions for patched function: mov_write_ilst_tag from assembly files.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/O3/movenc.o
Binary file does not exist.
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': []}]}
The case of compiler gcc with optimization Os.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/Os/movenc_gcc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/Os/movenc_gcc.s---mov_write_ilst_tag---after
There are 0 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': []}]
Empty patched instructions for patched function: mov_write_ilst_tag from assembly files.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_after/Os/movenc.o
Binary file does not exist.
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': []}]}
The case of compiler clang with optimization no.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/no/movenc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/no/movenc.s---mov_write_ilst_tag---after
function id: 106
function flag: True
There are 154 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 53, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 54, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 55, 'instruction': 'leaq\t.L.str.0x111(%rip), %rdx'}, {'instIndex': 56, 'instruction': 'leaq\t.L.str.0x112(%rip), %rcx'}, {'instIndex': 57, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 58, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 59, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 60, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 61, 'instruction': 'leaq\t.L.str.0x101(%rip), %rdx'}, {'instIndex': 62, 'instruction': 'leaq\t.L.str.0xf9(%rip), %rcx'}, {'instIndex': 63, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 64, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 65, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 66, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 67, 'instruction': 'leaq\t.L.str.0x102(%rip), %rdx'}, {'instIndex': 68, 'instruction': 'leaq\t.L.str.0xfd(%rip), %rcx'}, {'instIndex': 69, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 70, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 71, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 72, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 73, 'instruction': 'leaq\t.L.str.0x113(%rip), %rdx'}, {'instIndex': 74, 'instruction': 'leaq\t.L.str.0x114(%rip), %rcx'}, {'instIndex': 75, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 76, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 77, 'instruction': 'cmpl\t$0, %eax'}, {'instIndex': 78, 'instruction': 'jne\t.LBB106_2'}, {'instIndex': 79, 'instruction': 'movq\t0x18(%rsp), %rdi'}, {'instIndex': 80, 'instruction': 'leaq\t.L.str.0x113(%rip), %rsi'}, {'instIndex': 81, 'instruction': 'leaq\t.L.str.0x7a(%rip), %rdx'}, {'instIndex': 82, 'instruction': 'xorl\t%ecx, %ecx'}, {'instIndex': 83, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 84, 'instruction': 'callq\tmov_write_string_tag'}, {'instIndex': 85, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 86, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 87, 'instruction': 'leaq\t.L.str.0x115(%rip), %rdx'}, {'instIndex': 88, 'instruction': 'leaq\t.L.str.0xf7(%rip), %rcx'}, {'instIndex': 89, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 90, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 91, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 92, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 93, 'instruction': 'leaq\t.L.str.0x106(%rip), %rdx'}, {'instIndex': 94, 'instruction': 'leaq\t.L.str.0xf5(%rip), %rcx'}, {'instIndex': 95, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 96, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 97, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 98, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 99, 'instruction': 'leaq\t.L.str.0x107(%rip), %rdx'}, {'instIndex': 100, 'instruction': 'leaq\t.L.str.0xfb(%rip), %rcx'}, {'instIndex': 101, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 102, 'instruction': 'callq\tmov_write_string_metadata'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/no/movenc.o
Patched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/no/movenc.o---after
The extraction of function: mov_write_ilst_tag
Analyzing the binaries to generate subCFGs from patched function ...
It has 2850 nodes and 5962 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 154 instructions in binary file.
[4244155, 4244190, 4244225, 4244260, 4244295, 4244300, 4244332, 4244367, 4244402]
The execution time of patched subCFG information extraction via angr: 0:00:04.283129
{'mov_write_ilst_tag': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c324>, <DisassemblerInsn "mov" for 0x40c329>, <DisassemblerInsn "lea" for 0x40c32e>, <DisassemblerInsn "lea" for 0x40c335>, <DisassemblerInsn "mov" for 0x40c33c>, <DisassemblerInsn "call" for 0x40c342>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c298>, <DisassemblerInsn "mov" for 0x40c29d>, <DisassemblerInsn "lea" for 0x40c2a2>, <DisassemblerInsn "lea" for 0x40c2a9>, <DisassemblerInsn "mov" for 0x40c2b0>, <DisassemblerInsn "call" for 0x40c2b6>]'}, {'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3d5>, <DisassemblerInsn "mov" for 0x40c3da>, <DisassemblerInsn "lea" for 0x40c3df>, <DisassemblerInsn "lea" for 0x40c3e6>, <DisassemblerInsn "mov" for 0x40c3ed>, <DisassemblerInsn "call" for 0x40c3f3>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c301>, <DisassemblerInsn "mov" for 0x40c306>, <DisassemblerInsn "lea" for 0x40c30b>, <DisassemblerInsn "lea" for 0x40c312>, <DisassemblerInsn "mov" for 0x40c319>, <DisassemblerInsn "call" for 0x40c31f>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2de>, <DisassemblerInsn "mov" for 0x40c2e3>, <DisassemblerInsn "lea" for 0x40c2e8>, <DisassemblerInsn "lea" for 0x40c2ef>, <DisassemblerInsn "mov" for 0x40c2f6>, <DisassemblerInsn "call" for 0x40c2fc>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x40c347>, <DisassemblerInsn "jne" for 0x40c34a>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c38f>, <DisassemblerInsn "mov" for 0x40c394>, <DisassemblerInsn "lea" for 0x40c399>, <DisassemblerInsn "lea" for 0x40c3a0>, <DisassemblerInsn "mov" for 0x40c3a7>, <DisassemblerInsn "call" for 0x40c3ad>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3b2>, <DisassemblerInsn "mov" for 0x40c3b7>, <DisassemblerInsn "lea" for 0x40c3bc>, <DisassemblerInsn "lea" for 0x40c3c3>, <DisassemblerInsn "mov" for 0x40c3ca>, <DisassemblerInsn "call" for 0x40c3d0>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c34c>, <DisassemblerInsn "lea" for 0x40c351>, <DisassemblerInsn "lea" for 0x40c358>, <DisassemblerInsn "xor" for 0x40c35f>, <DisassemblerInsn "mov" for 0x40c361>, <DisassemblerInsn "call" for 0x40c367>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c36c>, <DisassemblerInsn "mov" for 0x40c371>, <DisassemblerInsn "lea" for 0x40c376>, <DisassemblerInsn "lea" for 0x40c37d>, <DisassemblerInsn "mov" for 0x40c384>, <DisassemblerInsn "call" for 0x40c38a>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2bb>, <DisassemblerInsn "mov" for 0x40c2c0>, <DisassemblerInsn "lea" for 0x40c2c5>, <DisassemblerInsn "lea" for 0x40c2cc>, <DisassemblerInsn "mov" for 0x40c2d3>, <DisassemblerInsn "call" for 0x40c2d9>]'}], 'cfg_block_detailed_info': [{'block_Idx': 9, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x373a]>', '<lea~~rcx, [rip + 0x3738]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x37a6]>', '<lea~~rcx, [rip + 0x37a4]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 15, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36a1]>', '<lea~~rcx, [rip + 0x369f]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36f9]>', '<lea~~rcx, [rip + 0x36d9]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3717]>', '<lea~~rcx, [rip + 0x36e2]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 10, 'blockInsts': ['<cmp~~eax, 0>', '<jne~~0x40c36c>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3682]>', '<lea~~rcx, [rip + 0x3619]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3664]>', '<lea~~rcx, [rip + 0x3619]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<lea~~rsi, [rip + 0x3717]>', '<lea~~rdx, [rip + 0x31ba]>', '<xor~~ecx, ecx>', '<mov~~r8d, 1>', '<call~~0x40bdf0>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3705]>', '<lea~~rcx, [rip + 0x3647]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3795]>', '<lea~~rcx, [rip + 0x3793]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}], 'cfg_edge_info': [(9, 10), (13, 14), (10, 11), (12, 13), (14, 15), (11, 12), (6, 7), (8, 9), (5, 6), (10, 12), (7, 8)]}]}
{'mov_write_ilst_tag': [4244155, 4244190, 4244225, 4244260, 4244295, 4244300, 4244332, 4244367, 4244402]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/no/movenc.o---after
The extraction of function: mov_write_ilst_tag
[4244155, 4244190, 4244225, 4244260, 4244295, 4244300, 4244332, 4244367, 4244402]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 729 nodes and 1159 edges in CFGEmulated.
It has 720 nodes and 5744 edges in CDG.
It has 1607 nodes and 2861 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4244155, 4244190, 4244225, 4244260, 4244295, 4244300, 4244332, 4244367, 4244402]
{4243968, 4244225, 4244612, 4244367, 4244120, 4244507, 4244260, 4244647, 4244402, 4244155, 4244542, 4243904, 4244295, 4244682, 4244300, 4244050, 4244437, 4244190, 4244577, 4244332, 4243952, 4244085, 4244472}
[0, 395, 29, 515, 724, 520, 4, 14, 581, 98, 425, 59, 6, 223, 545, 185, 578, 335, 589, 540, 230, 306, 2, 143, 550, 365, 229, 583, 270, 485, 455]
The execution time of patched slicing information extraction via angr: 0:03:28.376045
{'mov_write_ilst_tag': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40c1c0>, <DisassemblerInsn "mov" for 0x40c1c4>, <DisassemblerInsn "mov" for 0x40c1c9>, <DisassemblerInsn "mov" for 0x40c1ce>, <DisassemblerInsn "mov" for 0x40c1d3>, <DisassemblerInsn "mov" for 0x40c1d8>, <DisassemblerInsn "mov" for 0x40c1dd>, <DisassemblerInsn "xor" for 0x40c1e2>, <DisassemblerInsn "mov" for 0x40c1e4>, <DisassemblerInsn "mov" for 0x40c1e6>, <DisassemblerInsn "call" for 0x40c1eb>]'}, {'block_Idx': 395, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c41b>, <DisassemblerInsn "mov" for 0x40c420>, <DisassemblerInsn "lea" for 0x40c425>, <DisassemblerInsn "lea" for 0x40c42c>, <DisassemblerInsn "mov" for 0x40c433>, <DisassemblerInsn "call" for 0x40c439>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c298>, <DisassemblerInsn "mov" for 0x40c29d>, <DisassemblerInsn "lea" for 0x40c2a2>, <DisassemblerInsn "lea" for 0x40c2a9>, <DisassemblerInsn "mov" for 0x40c2b0>, <DisassemblerInsn "call" for 0x40c2b6>]'}, {'block_Idx': 515, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c4a7>, <DisassemblerInsn "mov" for 0x40c4ac>, <DisassemblerInsn "lea" for 0x40c4b1>, <DisassemblerInsn "lea" for 0x40c4b8>, <DisassemblerInsn "mov" for 0x40c4bf>, <DisassemblerInsn "call" for 0x40c4c5>]'}, {'block_Idx': 724, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40bed3>, <DisassemblerInsn "mov" for 0x40bed7>, <DisassemblerInsn "add" for 0x40bedb>, <DisassemblerInsn "ret" for 0x40bedf>]'}, {'block_Idx': 520, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40b980>, <DisassemblerInsn "mov" for 0x40b984>, <DisassemblerInsn "mov" for 0x40b989>, <DisassemblerInsn "mov" for 0x40b98e>, <DisassemblerInsn "mov" for 0x40b993>, <DisassemblerInsn "mov" for 0x40b998>, <DisassemblerInsn "mov" for 0x40b99d>, <DisassemblerInsn "mov" for 0x40b9a5>, <DisassemblerInsn "mov" for 0x40b9ae>, <DisassemblerInsn "mov" for 0x40b9b3>, <DisassemblerInsn "mov" for 0x40b9ba>, <DisassemblerInsn "xor" for 0x40b9bf>, <DisassemblerInsn "mov" for 0x40b9c1>, <DisassemblerInsn "xor" for 0x40b9c3>, <DisassemblerInsn "call" for 0x40b9c5>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c200>, <DisassemblerInsn "mov" for 0x40c205>, <DisassemblerInsn "lea" for 0x40c20a>, <DisassemblerInsn "mov" for 0x40c211>, <DisassemblerInsn "mov" for 0x40c216>, <DisassemblerInsn "mov" for 0x40c21b>, <DisassemblerInsn "movzx" for 0x40c220>, <DisassemblerInsn "mov" for 0x40c223>, <DisassemblerInsn "movzx" for 0x40c228>, <DisassemblerInsn "shl" for 0x40c22c>, <DisassemblerInsn "or" for 0x40c22f>, <DisassemblerInsn "mov" for 0x40c231>, <DisassemblerInsn "movzx" for 0x40c236>, <DisassemblerInsn "shl" for 0x40c23a>, <DisassemblerInsn "or" for 0x40c23d>, <DisassemblerInsn "mov" for 0x40c23f>, <DisassemblerInsn "movzx" for 0x40c244>, <DisassemblerInsn "shl" for 0x40c248>, <DisassemblerInsn "or" for 0x40c24b>, <DisassemblerInsn "call" for 0x40c24d>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c275>, <DisassemblerInsn "mov" for 0x40c27a>, <DisassemblerInsn "lea" for 0x40c27f>, <DisassemblerInsn "lea" for 0x40c286>, <DisassemblerInsn "mov" for 0x40c28d>, <DisassemblerInsn "call" for 0x40c293>]'}, {'block_Idx': 581, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c4de>, <DisassemblerInsn "mov" for 0x40c4e3>, <DisassemblerInsn "call" for 0x40c4e7>]'}, {'block_Idx': 98, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2de>, <DisassemblerInsn "mov" for 0x40c2e3>, <DisassemblerInsn "lea" for 0x40c2e8>, <DisassemblerInsn "lea" for 0x40c2ef>, <DisassemblerInsn "mov" for 0x40c2f6>, <DisassemblerInsn "call" for 0x40c2fc>]'}, {'block_Idx': 425, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c43e>, <DisassemblerInsn "mov" for 0x40c443>, <DisassemblerInsn "lea" for 0x40c448>, <DisassemblerInsn "lea" for 0x40c44f>, <DisassemblerInsn "mov" for 0x40c456>, <DisassemblerInsn "call" for 0x40c45c>]'}, {'block_Idx': 59, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2bb>, <DisassemblerInsn "mov" for 0x40c2c0>, <DisassemblerInsn "lea" for 0x40c2c5>, <DisassemblerInsn "lea" for 0x40c2cc>, <DisassemblerInsn "mov" for 0x40c2d3>, <DisassemblerInsn "call" for 0x40c2d9>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c252>, <DisassemblerInsn "mov" for 0x40c257>, <DisassemblerInsn "lea" for 0x40c25c>, <DisassemblerInsn "lea" for 0x40c263>, <DisassemblerInsn "mov" for 0x40c26a>, <DisassemblerInsn "call" for 0x40c270>]'}, {'block_Idx': 223, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x40c347>, <DisassemblerInsn "jne" for 0x40c34a>]'}, {'block_Idx': 545, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c4ca>, <DisassemblerInsn "mov" for 0x40c4cf>, <DisassemblerInsn "mov" for 0x40c4d4>, <DisassemblerInsn "call" for 0x40c4d9>]'}, {'block_Idx': 185, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c324>, <DisassemblerInsn "mov" for 0x40c329>, <DisassemblerInsn "lea" for 0x40c32e>, <DisassemblerInsn "lea" for 0x40c335>, <DisassemblerInsn "mov" for 0x40c33c>, <DisassemblerInsn "call" for 0x40c342>]'}, {'block_Idx': 578, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40bdf0>, <DisassemblerInsn "mov" for 0x40bdf4>, <DisassemblerInsn "mov" for 0x40bdf9>, <DisassemblerInsn "mov" for 0x40bdfe>, <DisassemblerInsn "mov" for 0x40be03>, <DisassemblerInsn "mov" for 0x40be07>, <DisassemblerInsn "mov" for 0x40be0c>, <DisassemblerInsn "cmp" for 0x40be14>, <DisassemblerInsn "je" for 0x40be1a>]'}, {'block_Idx': 335, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3d5>, <DisassemblerInsn "mov" for 0x40c3da>, <DisassemblerInsn "lea" for 0x40c3df>, <DisassemblerInsn "lea" for 0x40c3e6>, <DisassemblerInsn "mov" for 0x40c3ed>, <DisassemblerInsn "call" for 0x40c3f3>]'}, {'block_Idx': 589, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40baca>, <DisassemblerInsn "mov" for 0x40bace>, <DisassemblerInsn "add" for 0x40bad2>, <DisassemblerInsn "ret" for 0x40bad6>]'}, {'block_Idx': 540, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40bace>, <DisassemblerInsn "add" for 0x40bad2>, <DisassemblerInsn "ret" for 0x40bad6>]'}, {'block_Idx': 230, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c36c>, <DisassemblerInsn "mov" for 0x40c371>, <DisassemblerInsn "lea" for 0x40c376>, <DisassemblerInsn "lea" for 0x40c37d>, <DisassemblerInsn "mov" for 0x40c384>, <DisassemblerInsn "call" for 0x40c38a>]'}, {'block_Idx': 306, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3b2>, <DisassemblerInsn "mov" for 0x40c3b7>, <DisassemblerInsn "lea" for 0x40c3bc>, <DisassemblerInsn "lea" for 0x40c3c3>, <DisassemblerInsn "mov" for 0x40c3ca>, <DisassemblerInsn "call" for 0x40c3d0>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c1f0>, <DisassemblerInsn "mov" for 0x40c1f4>, <DisassemblerInsn "xor" for 0x40c1f9>, <DisassemblerInsn "call" for 0x40c1fb>]'}, {'block_Idx': 143, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c301>, <DisassemblerInsn "mov" for 0x40c306>, <DisassemblerInsn "lea" for 0x40c30b>, <DisassemblerInsn "lea" for 0x40c312>, <DisassemblerInsn "mov" for 0x40c319>, <DisassemblerInsn "call" for 0x40c31f>]'}, {'block_Idx': 550, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40c500>, <DisassemblerInsn "mov" for 0x40c504>, <DisassemblerInsn "mov" for 0x40c509>, <DisassemblerInsn "mov" for 0x40c50e>, <DisassemblerInsn "mov" for 0x40c513>, <DisassemblerInsn "mov" for 0x40c518>, <DisassemblerInsn "lea" for 0x40c51f>, <DisassemblerInsn "xor" for 0x40c526>, <DisassemblerInsn "mov" for 0x40c528>, <DisassemblerInsn "xor" for 0x40c52a>, <DisassemblerInsn "call" for 0x40c52c>]'}, {'block_Idx': 365, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3f8>, <DisassemblerInsn "mov" for 0x40c3fd>, <DisassemblerInsn "lea" for 0x40c402>, <DisassemblerInsn "lea" for 0x40c409>, <DisassemblerInsn "mov" for 0x40c410>, <DisassemblerInsn "call" for 0x40c416>]'}, {'block_Idx': 229, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c34c>, <DisassemblerInsn "lea" for 0x40c351>, <DisassemblerInsn "lea" for 0x40c358>, <DisassemblerInsn "xor" for 0x40c35f>, <DisassemblerInsn "mov" for 0x40c361>, <DisassemblerInsn "call" for 0x40c367>]'}, {'block_Idx': 583, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40bed7>, <DisassemblerInsn "add" for 0x40bedb>, <DisassemblerInsn "ret" for 0x40bedf>]'}, {'block_Idx': 270, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c38f>, <DisassemblerInsn "mov" for 0x40c394>, <DisassemblerInsn "lea" for 0x40c399>, <DisassemblerInsn "lea" for 0x40c3a0>, <DisassemblerInsn "mov" for 0x40c3a7>, <DisassemblerInsn "call" for 0x40c3ad>]'}, {'block_Idx': 485, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c484>, <DisassemblerInsn "mov" for 0x40c489>, <DisassemblerInsn "lea" for 0x40c48e>, <DisassemblerInsn "lea" for 0x40c495>, <DisassemblerInsn "mov" for 0x40c49c>, <DisassemblerInsn "call" for 0x40c4a2>]'}, {'block_Idx': 455, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c461>, <DisassemblerInsn "mov" for 0x40c466>, <DisassemblerInsn "lea" for 0x40c46b>, <DisassemblerInsn "lea" for 0x40c472>, <DisassemblerInsn "mov" for 0x40c479>, <DisassemblerInsn "call" for 0x40c47f>]'}], 'cfg_block_detailed_info': [{'block_Idx': 0, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x18], rdi>', '<mov~~qword ptr [rsp + 0x10], rsi>', '<mov~~qword ptr [rsp + 8], rdx>', '<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~qword ptr [rsp + 0x20], rax>', '<mov~~rdi, qword ptr [rsp + 0x20]>', '<xor~~eax, eax>', '<mov~~esi, eax>', '<mov~~edx, 1>', '<call~~0x500040>']}, {'block_Idx': 395, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3675]>', '<lea~~rcx, [rip + 0x3673]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 29, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x37a6]>', '<lea~~rcx, [rip + 0x37a4]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 515, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3622]>', '<lea~~rcx, [rip + 0x3620]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 724, 'blockInsts': ['<mov~~dword ptr [rsp + 0xc], eax>', '<mov~~eax, dword ptr [rsp + 0xc]>', '<add~~rsp, 0x48>', '<ret~~>']}, {'block_Idx': 520, 'blockInsts': ['<sub~~rsp, 0x68>', '<mov~~qword ptr [rsp + 0x58], rdi>', '<mov~~qword ptr [rsp + 0x50], rsi>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~qword ptr [rsp + 0x40], rcx>', '<mov~~dword ptr [rsp + 0x3c], r8d>', '<mov~~dword ptr [rsp + 0x34], 0>', '<mov~~qword ptr [rsp + 0x18], 0>', '<mov~~rax, qword ptr [rsp + 0x58]>', '<mov~~rdi, qword ptr [rax + 0x498]>', '<mov~~rsi, qword ptr [rsp + 0x40]>', '<xor~~eax, eax>', '<mov~~edx, eax>', '<xor~~ecx, ecx>', '<call~~0x500068>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~qword ptr [rsp + 0x30], rax>', '<lea~~rax, [rip + 0x3839]>', '<mov~~qword ptr [rsp + 0x28], rax>', '<mov~~rdi, qword ptr [rsp + 0x30]>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~esi, byte ptr [rax]>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~eax, byte ptr [rax + 1]>', '<shl~~eax, 8>', '<or~~esi, eax>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~eax, byte ptr [rax + 2]>', '<shl~~eax, 0x10>', '<or~~esi, eax>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~eax, byte ptr [rax + 3]>', '<shl~~eax, 0x18>', '<or~~esi, eax>', '<call~~0x5000b0>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3771]>', '<lea~~rcx, [rip + 0x3716]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 581, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<mov~~rsi, qword ptr [rsp]>', '<call~~0x403f10>']}, {'block_Idx': 98, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3717]>', '<lea~~rcx, [rip + 0x36e2]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 425, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3663]>', '<lea~~rcx, [rip + 0x3661]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 59, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3795]>', '<lea~~rcx, [rip + 0x3793]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3799]>', '<lea~~rcx, [rip + 0x321c]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 223, 'blockInsts': ['<cmp~~eax, 0>', '<jne~~0x40c36c>']}, {'block_Idx': 545, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<mov~~rsi, qword ptr [rsp + 0x10]>', '<mov~~rdx, qword ptr [rsp + 8]>', '<call~~0x40c500>']}, {'block_Idx': 185, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x373a]>', '<lea~~rcx, [rip + 0x3738]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 578, 'blockInsts': ['<sub~~rsp, 0x48>', '<mov~~qword ptr [rsp + 0x28], rdi>', '<mov~~qword ptr [rsp + 0x20], rsi>', '<mov~~qword ptr [rsp + 0x18], rdx>', '<mov~~dword ptr [rsp + 0x14], ecx>', '<mov~~dword ptr [rsp + 0x10], r8d>', '<mov~~dword ptr [rsp + 0xc], 0>', '<cmp~~qword ptr [rsp + 0x18], 0>', '<je~~0x40bed7>']}, {'block_Idx': 335, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36a1]>', '<lea~~rcx, [rip + 0x369f]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 589, 'blockInsts': ['<mov~~dword ptr [rsp + 0x64], eax>', '<mov~~eax, dword ptr [rsp + 0x64]>', '<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 540, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x64]>', '<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 230, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3705]>', '<lea~~rcx, [rip + 0x3647]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 306, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3664]>', '<lea~~rcx, [rip + 0x3619]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~qword ptr [rsp], rax>', '<mov~~rdi, qword ptr [rsp + 0x18]>', '<xor~~esi, esi>', '<call~~0x5000a8>']}, {'block_Idx': 143, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36f9]>', '<lea~~rcx, [rip + 0x36d9]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 550, 'blockInsts': ['<sub~~rsp, 0x58>', '<mov~~qword ptr [rsp + 0x30], rdi>', '<mov~~qword ptr [rsp + 0x28], rsi>', '<mov~~qword ptr [rsp + 0x20], rdx>', '<mov~~rax, qword ptr [rsp + 0x20]>', '<mov~~rdi, qword ptr [rax + 0x498]>', '<lea~~rsi, [rip + 0x3506]>', '<xor~~eax, eax>', '<mov~~edx, eax>', '<xor~~ecx, ecx>', '<call~~0x500068>']}, {'block_Idx': 365, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x368c]>', '<lea~~rcx, [rip + 0x368a]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 229, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<lea~~rsi, [rip + 0x3717]>', '<lea~~rdx, [rip + 0x31ba]>', '<xor~~ecx, ecx>', '<mov~~r8d, 1>', '<call~~0x40bdf0>']}, {'block_Idx': 583, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0xc]>', '<add~~rsp, 0x48>', '<ret~~>']}, {'block_Idx': 270, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3682]>', '<lea~~rcx, [rip + 0x3619]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 485, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3635]>', '<lea~~rcx, [rip + 0x3633]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 455, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x364e]>', '<lea~~rcx, [rip + 0x364c]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}], 'cfg_edge_info': [(540, 59), (540, 306), (540, 425), (455, 485), (589, 455), (29, 59), (540, 98), (229, 230), (365, 520), (2, 4), (589, 185), (545, 581), (540, 365), (589, 395), (270, 306), (230, 270), (306, 335), (540, 29), (395, 520), (589, 59), (59, 98), (589, 306), (589, 425), (223, 230), (143, 185), (29, 520), (0, 2), (589, 98), (306, 520), (540, 223), (6, 520), (540, 143), (185, 223), (540, 335), (589, 365), (540, 545), (589, 29), (4, 6), (589, 223), (425, 520), (185, 520), (98, 143), (540, 485), (589, 143), (724, 230), (589, 335), (583, 230), (540, 515), (589, 545), (455, 520), (59, 520), (270, 520), (98, 520), (540, 14), (545, 550), (540, 270), (395, 425), (515, 545), (485, 520), (540, 455), (143, 520), (515, 520), (589, 485), (229, 578), (6, 14), (223, 229), (365, 395), (425, 455), (589, 515), (589, 14), (485, 515), (540, 185), (589, 270), (335, 365), (540, 395), (14, 29), (230, 520), (14, 520), (335, 520)], 'cdg_edge_info': [(223, 229)], 'ddg_edge_info': [(98, 229), (455, 485), (29, 395), (229, 365), (143, 270), (306, 395), (98, 485), (0, 14), (29, 59), (185, 59), (229, 29), (29, 306), (29, 425), (185, 306), (185, 425), (229, 395), (229, 230), (59, 185), (229, 59), (29, 98), (230, 515), (185, 98), (14, 143), (2, 4), (143, 455), (59, 395), (14, 335), (270, 395), (335, 515), (143, 229), (98, 270), (143, 485), (14, 545), (59, 306), (59, 425), (230, 270), (270, 425), (335, 545), (306, 335), (270, 306), (98, 306), (98, 425), (229, 143), (59, 98), (29, 365), (229, 335), (185, 365), (143, 185), (306, 365), (98, 455), (365, 515), (185, 29), (229, 545), (0, 2), (230, 455), (185, 395), (29, 230), (185, 230), (365, 545), (14, 229), (143, 306), (143, 425), (230, 485), (14, 485), (59, 365), (270, 365), (335, 485), (395, 515), (98, 185), (143, 98), (59, 29), (14, 515), (98, 29), (59, 230), (98, 395), (395, 545), (29, 143), (185, 143), (29, 335), (306, 515), (98, 59), (185, 335), (14, 270), (365, 485), (425, 545), (29, 545), (185, 545), (229, 515), (230, 306), (230, 425), (306, 545), (143, 365), (4, 6), (335, 425), (143, 29), (59, 143), (143, 395), (14, 455), (59, 335), (229, 270), (143, 230), (98, 143), (270, 335), (335, 455), (98, 335), (395, 485), (143, 59), (455, 545), (59, 545), (270, 545), (29, 229), (0, 4), (98, 365), (365, 425), (29, 485), (229, 455), (230, 365), (306, 485), (14, 185), (365, 455), (98, 230), (425, 515), (29, 515), (229, 485), (485, 545), (185, 515), (230, 395), (0, 6), (143, 335), (14, 395), (335, 395), (59, 229), (395, 425), (515, 545), (14, 59), (143, 545), (59, 485), (14, 306), (14, 425), (29, 270), (270, 485), (185, 270), (229, 185), (395, 455), (455, 515), (59, 515), (14, 98), (270, 515), (306, 425), (98, 515), (365, 395), (425, 455), (29, 455), (229, 306), (229, 425), (185, 455), (230, 335), (306, 455), (59, 270), (98, 545), (185, 229), (425, 485), (230, 545), (229, 98), (185, 485), (485, 515), (14, 365), (335, 365), (143, 515), (14, 29), (59, 455), (270, 455), (29, 185), (14, 230)]}]}
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 53, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 54, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 55, 'instruction': 'leaq\t.L.str.0x111(%rip), %rdx'}, {'instIndex': 56, 'instruction': 'leaq\t.L.str.0x112(%rip), %rcx'}, {'instIndex': 57, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 58, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 59, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 60, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 61, 'instruction': 'leaq\t.L.str.0x101(%rip), %rdx'}, {'instIndex': 62, 'instruction': 'leaq\t.L.str.0xf9(%rip), %rcx'}, {'instIndex': 63, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 64, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 65, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 66, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 67, 'instruction': 'leaq\t.L.str.0x102(%rip), %rdx'}, {'instIndex': 68, 'instruction': 'leaq\t.L.str.0xfd(%rip), %rcx'}, {'instIndex': 69, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 70, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 71, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 72, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 73, 'instruction': 'leaq\t.L.str.0x113(%rip), %rdx'}, {'instIndex': 74, 'instruction': 'leaq\t.L.str.0x114(%rip), %rcx'}, {'instIndex': 75, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 76, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 77, 'instruction': 'cmpl\t$0, %eax'}, {'instIndex': 78, 'instruction': 'jne\t.LBB106_2'}, {'instIndex': 79, 'instruction': 'movq\t0x18(%rsp), %rdi'}, {'instIndex': 80, 'instruction': 'leaq\t.L.str.0x113(%rip), %rsi'}, {'instIndex': 81, 'instruction': 'leaq\t.L.str.0x7a(%rip), %rdx'}, {'instIndex': 82, 'instruction': 'xorl\t%ecx, %ecx'}, {'instIndex': 83, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 84, 'instruction': 'callq\tmov_write_string_tag'}, {'instIndex': 85, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 86, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 87, 'instruction': 'leaq\t.L.str.0x115(%rip), %rdx'}, {'instIndex': 88, 'instruction': 'leaq\t.L.str.0xf7(%rip), %rcx'}, {'instIndex': 89, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 90, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 91, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 92, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 93, 'instruction': 'leaq\t.L.str.0x106(%rip), %rdx'}, {'instIndex': 94, 'instruction': 'leaq\t.L.str.0xf5(%rip), %rcx'}, {'instIndex': 95, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 96, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 97, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 98, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 99, 'instruction': 'leaq\t.L.str.0x107(%rip), %rdx'}, {'instIndex': 100, 'instruction': 'leaq\t.L.str.0xfb(%rip), %rcx'}, {'instIndex': 101, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 102, 'instruction': 'callq\tmov_write_string_metadata'}]}]}
The case of compiler clang with optimization O0.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O0/movenc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O0/movenc.s---mov_write_ilst_tag---after
function id: 106
function flag: True
There are 154 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 53, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 54, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 55, 'instruction': 'leaq\t.L.str.0x111(%rip), %rdx'}, {'instIndex': 56, 'instruction': 'leaq\t.L.str.0x112(%rip), %rcx'}, {'instIndex': 57, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 58, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 59, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 60, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 61, 'instruction': 'leaq\t.L.str.0x101(%rip), %rdx'}, {'instIndex': 62, 'instruction': 'leaq\t.L.str.0xf9(%rip), %rcx'}, {'instIndex': 63, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 64, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 65, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 66, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 67, 'instruction': 'leaq\t.L.str.0x102(%rip), %rdx'}, {'instIndex': 68, 'instruction': 'leaq\t.L.str.0xfd(%rip), %rcx'}, {'instIndex': 69, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 70, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 71, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 72, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 73, 'instruction': 'leaq\t.L.str.0x113(%rip), %rdx'}, {'instIndex': 74, 'instruction': 'leaq\t.L.str.0x114(%rip), %rcx'}, {'instIndex': 75, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 76, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 77, 'instruction': 'cmpl\t$0, %eax'}, {'instIndex': 78, 'instruction': 'jne\t.LBB106_2'}, {'instIndex': 79, 'instruction': 'movq\t0x18(%rsp), %rdi'}, {'instIndex': 80, 'instruction': 'leaq\t.L.str.0x113(%rip), %rsi'}, {'instIndex': 81, 'instruction': 'leaq\t.L.str.0x7a(%rip), %rdx'}, {'instIndex': 82, 'instruction': 'xorl\t%ecx, %ecx'}, {'instIndex': 83, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 84, 'instruction': 'callq\tmov_write_string_tag'}, {'instIndex': 85, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 86, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 87, 'instruction': 'leaq\t.L.str.0x115(%rip), %rdx'}, {'instIndex': 88, 'instruction': 'leaq\t.L.str.0xf7(%rip), %rcx'}, {'instIndex': 89, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 90, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 91, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 92, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 93, 'instruction': 'leaq\t.L.str.0x106(%rip), %rdx'}, {'instIndex': 94, 'instruction': 'leaq\t.L.str.0xf5(%rip), %rcx'}, {'instIndex': 95, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 96, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 97, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 98, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 99, 'instruction': 'leaq\t.L.str.0x107(%rip), %rdx'}, {'instIndex': 100, 'instruction': 'leaq\t.L.str.0xfb(%rip), %rcx'}, {'instIndex': 101, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 102, 'instruction': 'callq\tmov_write_string_metadata'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O0/movenc.o
Patched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O0/movenc.o---after
The extraction of function: mov_write_ilst_tag
Analyzing the binaries to generate subCFGs from patched function ...
It has 2850 nodes and 5962 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 154 instructions in binary file.
[4244155, 4244190, 4244225, 4244260, 4244295, 4244300, 4244332, 4244367, 4244402]
The execution time of patched subCFG information extraction via angr: 0:00:03.808123
{'mov_write_ilst_tag': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c324>, <DisassemblerInsn "mov" for 0x40c329>, <DisassemblerInsn "lea" for 0x40c32e>, <DisassemblerInsn "lea" for 0x40c335>, <DisassemblerInsn "mov" for 0x40c33c>, <DisassemblerInsn "call" for 0x40c342>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c298>, <DisassemblerInsn "mov" for 0x40c29d>, <DisassemblerInsn "lea" for 0x40c2a2>, <DisassemblerInsn "lea" for 0x40c2a9>, <DisassemblerInsn "mov" for 0x40c2b0>, <DisassemblerInsn "call" for 0x40c2b6>]'}, {'block_Idx': 15, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3d5>, <DisassemblerInsn "mov" for 0x40c3da>, <DisassemblerInsn "lea" for 0x40c3df>, <DisassemblerInsn "lea" for 0x40c3e6>, <DisassemblerInsn "mov" for 0x40c3ed>, <DisassemblerInsn "call" for 0x40c3f3>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c301>, <DisassemblerInsn "mov" for 0x40c306>, <DisassemblerInsn "lea" for 0x40c30b>, <DisassemblerInsn "lea" for 0x40c312>, <DisassemblerInsn "mov" for 0x40c319>, <DisassemblerInsn "call" for 0x40c31f>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2de>, <DisassemblerInsn "mov" for 0x40c2e3>, <DisassemblerInsn "lea" for 0x40c2e8>, <DisassemblerInsn "lea" for 0x40c2ef>, <DisassemblerInsn "mov" for 0x40c2f6>, <DisassemblerInsn "call" for 0x40c2fc>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x40c347>, <DisassemblerInsn "jne" for 0x40c34a>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c38f>, <DisassemblerInsn "mov" for 0x40c394>, <DisassemblerInsn "lea" for 0x40c399>, <DisassemblerInsn "lea" for 0x40c3a0>, <DisassemblerInsn "mov" for 0x40c3a7>, <DisassemblerInsn "call" for 0x40c3ad>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3b2>, <DisassemblerInsn "mov" for 0x40c3b7>, <DisassemblerInsn "lea" for 0x40c3bc>, <DisassemblerInsn "lea" for 0x40c3c3>, <DisassemblerInsn "mov" for 0x40c3ca>, <DisassemblerInsn "call" for 0x40c3d0>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c34c>, <DisassemblerInsn "lea" for 0x40c351>, <DisassemblerInsn "lea" for 0x40c358>, <DisassemblerInsn "xor" for 0x40c35f>, <DisassemblerInsn "mov" for 0x40c361>, <DisassemblerInsn "call" for 0x40c367>]'}, {'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c36c>, <DisassemblerInsn "mov" for 0x40c371>, <DisassemblerInsn "lea" for 0x40c376>, <DisassemblerInsn "lea" for 0x40c37d>, <DisassemblerInsn "mov" for 0x40c384>, <DisassemblerInsn "call" for 0x40c38a>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2bb>, <DisassemblerInsn "mov" for 0x40c2c0>, <DisassemblerInsn "lea" for 0x40c2c5>, <DisassemblerInsn "lea" for 0x40c2cc>, <DisassemblerInsn "mov" for 0x40c2d3>, <DisassemblerInsn "call" for 0x40c2d9>]'}], 'cfg_block_detailed_info': [{'block_Idx': 9, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x373a]>', '<lea~~rcx, [rip + 0x3738]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x37a6]>', '<lea~~rcx, [rip + 0x37a4]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 15, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36a1]>', '<lea~~rcx, [rip + 0x369f]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36f9]>', '<lea~~rcx, [rip + 0x36d9]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3717]>', '<lea~~rcx, [rip + 0x36e2]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 10, 'blockInsts': ['<cmp~~eax, 0>', '<jne~~0x40c36c>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3682]>', '<lea~~rcx, [rip + 0x3619]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3664]>', '<lea~~rcx, [rip + 0x3619]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<lea~~rsi, [rip + 0x3717]>', '<lea~~rdx, [rip + 0x31ba]>', '<xor~~ecx, ecx>', '<mov~~r8d, 1>', '<call~~0x40bdf0>']}, {'block_Idx': 12, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3705]>', '<lea~~rcx, [rip + 0x3647]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3795]>', '<lea~~rcx, [rip + 0x3793]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}], 'cfg_edge_info': [(9, 10), (13, 14), (10, 11), (12, 13), (14, 15), (11, 12), (6, 7), (8, 9), (5, 6), (10, 12), (7, 8)]}]}
{'mov_write_ilst_tag': [4244155, 4244190, 4244225, 4244260, 4244295, 4244300, 4244332, 4244367, 4244402]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O0/movenc.o---after
The extraction of function: mov_write_ilst_tag
[4244155, 4244190, 4244225, 4244260, 4244295, 4244300, 4244332, 4244367, 4244402]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 729 nodes and 1159 edges in CFGEmulated.
It has 720 nodes and 5744 edges in CDG.
It has 1607 nodes and 2861 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4244155, 4244190, 4244225, 4244260, 4244295, 4244300, 4244332, 4244367, 4244402]
{4243968, 4244225, 4244612, 4244367, 4244120, 4244507, 4244260, 4244647, 4244402, 4244155, 4244542, 4243904, 4244295, 4244682, 4244300, 4244050, 4244437, 4244190, 4244577, 4244332, 4243952, 4244085, 4244472}
[0, 395, 29, 515, 724, 520, 4, 14, 581, 98, 425, 59, 6, 223, 545, 185, 578, 335, 589, 540, 230, 306, 2, 143, 550, 365, 229, 583, 270, 485, 455]
The execution time of patched slicing information extraction via angr: 0:03:33.936528
{'mov_write_ilst_tag': [{'patched_tag': 'after', 'cfg_block_info': [{'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40c1c0>, <DisassemblerInsn "mov" for 0x40c1c4>, <DisassemblerInsn "mov" for 0x40c1c9>, <DisassemblerInsn "mov" for 0x40c1ce>, <DisassemblerInsn "mov" for 0x40c1d3>, <DisassemblerInsn "mov" for 0x40c1d8>, <DisassemblerInsn "mov" for 0x40c1dd>, <DisassemblerInsn "xor" for 0x40c1e2>, <DisassemblerInsn "mov" for 0x40c1e4>, <DisassemblerInsn "mov" for 0x40c1e6>, <DisassemblerInsn "call" for 0x40c1eb>]'}, {'block_Idx': 395, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c41b>, <DisassemblerInsn "mov" for 0x40c420>, <DisassemblerInsn "lea" for 0x40c425>, <DisassemblerInsn "lea" for 0x40c42c>, <DisassemblerInsn "mov" for 0x40c433>, <DisassemblerInsn "call" for 0x40c439>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c298>, <DisassemblerInsn "mov" for 0x40c29d>, <DisassemblerInsn "lea" for 0x40c2a2>, <DisassemblerInsn "lea" for 0x40c2a9>, <DisassemblerInsn "mov" for 0x40c2b0>, <DisassemblerInsn "call" for 0x40c2b6>]'}, {'block_Idx': 515, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c4a7>, <DisassemblerInsn "mov" for 0x40c4ac>, <DisassemblerInsn "lea" for 0x40c4b1>, <DisassemblerInsn "lea" for 0x40c4b8>, <DisassemblerInsn "mov" for 0x40c4bf>, <DisassemblerInsn "call" for 0x40c4c5>]'}, {'block_Idx': 724, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40bed3>, <DisassemblerInsn "mov" for 0x40bed7>, <DisassemblerInsn "add" for 0x40bedb>, <DisassemblerInsn "ret" for 0x40bedf>]'}, {'block_Idx': 520, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40b980>, <DisassemblerInsn "mov" for 0x40b984>, <DisassemblerInsn "mov" for 0x40b989>, <DisassemblerInsn "mov" for 0x40b98e>, <DisassemblerInsn "mov" for 0x40b993>, <DisassemblerInsn "mov" for 0x40b998>, <DisassemblerInsn "mov" for 0x40b99d>, <DisassemblerInsn "mov" for 0x40b9a5>, <DisassemblerInsn "mov" for 0x40b9ae>, <DisassemblerInsn "mov" for 0x40b9b3>, <DisassemblerInsn "mov" for 0x40b9ba>, <DisassemblerInsn "xor" for 0x40b9bf>, <DisassemblerInsn "mov" for 0x40b9c1>, <DisassemblerInsn "xor" for 0x40b9c3>, <DisassemblerInsn "call" for 0x40b9c5>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c200>, <DisassemblerInsn "mov" for 0x40c205>, <DisassemblerInsn "lea" for 0x40c20a>, <DisassemblerInsn "mov" for 0x40c211>, <DisassemblerInsn "mov" for 0x40c216>, <DisassemblerInsn "mov" for 0x40c21b>, <DisassemblerInsn "movzx" for 0x40c220>, <DisassemblerInsn "mov" for 0x40c223>, <DisassemblerInsn "movzx" for 0x40c228>, <DisassemblerInsn "shl" for 0x40c22c>, <DisassemblerInsn "or" for 0x40c22f>, <DisassemblerInsn "mov" for 0x40c231>, <DisassemblerInsn "movzx" for 0x40c236>, <DisassemblerInsn "shl" for 0x40c23a>, <DisassemblerInsn "or" for 0x40c23d>, <DisassemblerInsn "mov" for 0x40c23f>, <DisassemblerInsn "movzx" for 0x40c244>, <DisassemblerInsn "shl" for 0x40c248>, <DisassemblerInsn "or" for 0x40c24b>, <DisassemblerInsn "call" for 0x40c24d>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c275>, <DisassemblerInsn "mov" for 0x40c27a>, <DisassemblerInsn "lea" for 0x40c27f>, <DisassemblerInsn "lea" for 0x40c286>, <DisassemblerInsn "mov" for 0x40c28d>, <DisassemblerInsn "call" for 0x40c293>]'}, {'block_Idx': 581, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c4de>, <DisassemblerInsn "mov" for 0x40c4e3>, <DisassemblerInsn "call" for 0x40c4e7>]'}, {'block_Idx': 98, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2de>, <DisassemblerInsn "mov" for 0x40c2e3>, <DisassemblerInsn "lea" for 0x40c2e8>, <DisassemblerInsn "lea" for 0x40c2ef>, <DisassemblerInsn "mov" for 0x40c2f6>, <DisassemblerInsn "call" for 0x40c2fc>]'}, {'block_Idx': 425, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c43e>, <DisassemblerInsn "mov" for 0x40c443>, <DisassemblerInsn "lea" for 0x40c448>, <DisassemblerInsn "lea" for 0x40c44f>, <DisassemblerInsn "mov" for 0x40c456>, <DisassemblerInsn "call" for 0x40c45c>]'}, {'block_Idx': 59, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2bb>, <DisassemblerInsn "mov" for 0x40c2c0>, <DisassemblerInsn "lea" for 0x40c2c5>, <DisassemblerInsn "lea" for 0x40c2cc>, <DisassemblerInsn "mov" for 0x40c2d3>, <DisassemblerInsn "call" for 0x40c2d9>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c252>, <DisassemblerInsn "mov" for 0x40c257>, <DisassemblerInsn "lea" for 0x40c25c>, <DisassemblerInsn "lea" for 0x40c263>, <DisassemblerInsn "mov" for 0x40c26a>, <DisassemblerInsn "call" for 0x40c270>]'}, {'block_Idx': 223, 'blockInsts': '[<DisassemblerInsn "cmp" for 0x40c347>, <DisassemblerInsn "jne" for 0x40c34a>]'}, {'block_Idx': 545, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c4ca>, <DisassemblerInsn "mov" for 0x40c4cf>, <DisassemblerInsn "mov" for 0x40c4d4>, <DisassemblerInsn "call" for 0x40c4d9>]'}, {'block_Idx': 185, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c324>, <DisassemblerInsn "mov" for 0x40c329>, <DisassemblerInsn "lea" for 0x40c32e>, <DisassemblerInsn "lea" for 0x40c335>, <DisassemblerInsn "mov" for 0x40c33c>, <DisassemblerInsn "call" for 0x40c342>]'}, {'block_Idx': 578, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40bdf0>, <DisassemblerInsn "mov" for 0x40bdf4>, <DisassemblerInsn "mov" for 0x40bdf9>, <DisassemblerInsn "mov" for 0x40bdfe>, <DisassemblerInsn "mov" for 0x40be03>, <DisassemblerInsn "mov" for 0x40be07>, <DisassemblerInsn "mov" for 0x40be0c>, <DisassemblerInsn "cmp" for 0x40be14>, <DisassemblerInsn "je" for 0x40be1a>]'}, {'block_Idx': 335, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3d5>, <DisassemblerInsn "mov" for 0x40c3da>, <DisassemblerInsn "lea" for 0x40c3df>, <DisassemblerInsn "lea" for 0x40c3e6>, <DisassemblerInsn "mov" for 0x40c3ed>, <DisassemblerInsn "call" for 0x40c3f3>]'}, {'block_Idx': 589, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40baca>, <DisassemblerInsn "mov" for 0x40bace>, <DisassemblerInsn "add" for 0x40bad2>, <DisassemblerInsn "ret" for 0x40bad6>]'}, {'block_Idx': 540, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40bace>, <DisassemblerInsn "add" for 0x40bad2>, <DisassemblerInsn "ret" for 0x40bad6>]'}, {'block_Idx': 230, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c36c>, <DisassemblerInsn "mov" for 0x40c371>, <DisassemblerInsn "lea" for 0x40c376>, <DisassemblerInsn "lea" for 0x40c37d>, <DisassemblerInsn "mov" for 0x40c384>, <DisassemblerInsn "call" for 0x40c38a>]'}, {'block_Idx': 306, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3b2>, <DisassemblerInsn "mov" for 0x40c3b7>, <DisassemblerInsn "lea" for 0x40c3bc>, <DisassemblerInsn "lea" for 0x40c3c3>, <DisassemblerInsn "mov" for 0x40c3ca>, <DisassemblerInsn "call" for 0x40c3d0>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c1f0>, <DisassemblerInsn "mov" for 0x40c1f4>, <DisassemblerInsn "xor" for 0x40c1f9>, <DisassemblerInsn "call" for 0x40c1fb>]'}, {'block_Idx': 143, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c301>, <DisassemblerInsn "mov" for 0x40c306>, <DisassemblerInsn "lea" for 0x40c30b>, <DisassemblerInsn "lea" for 0x40c312>, <DisassemblerInsn "mov" for 0x40c319>, <DisassemblerInsn "call" for 0x40c31f>]'}, {'block_Idx': 550, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40c500>, <DisassemblerInsn "mov" for 0x40c504>, <DisassemblerInsn "mov" for 0x40c509>, <DisassemblerInsn "mov" for 0x40c50e>, <DisassemblerInsn "mov" for 0x40c513>, <DisassemblerInsn "mov" for 0x40c518>, <DisassemblerInsn "lea" for 0x40c51f>, <DisassemblerInsn "xor" for 0x40c526>, <DisassemblerInsn "mov" for 0x40c528>, <DisassemblerInsn "xor" for 0x40c52a>, <DisassemblerInsn "call" for 0x40c52c>]'}, {'block_Idx': 365, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3f8>, <DisassemblerInsn "mov" for 0x40c3fd>, <DisassemblerInsn "lea" for 0x40c402>, <DisassemblerInsn "lea" for 0x40c409>, <DisassemblerInsn "mov" for 0x40c410>, <DisassemblerInsn "call" for 0x40c416>]'}, {'block_Idx': 229, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c34c>, <DisassemblerInsn "lea" for 0x40c351>, <DisassemblerInsn "lea" for 0x40c358>, <DisassemblerInsn "xor" for 0x40c35f>, <DisassemblerInsn "mov" for 0x40c361>, <DisassemblerInsn "call" for 0x40c367>]'}, {'block_Idx': 583, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40bed7>, <DisassemblerInsn "add" for 0x40bedb>, <DisassemblerInsn "ret" for 0x40bedf>]'}, {'block_Idx': 270, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c38f>, <DisassemblerInsn "mov" for 0x40c394>, <DisassemblerInsn "lea" for 0x40c399>, <DisassemblerInsn "lea" for 0x40c3a0>, <DisassemblerInsn "mov" for 0x40c3a7>, <DisassemblerInsn "call" for 0x40c3ad>]'}, {'block_Idx': 485, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c484>, <DisassemblerInsn "mov" for 0x40c489>, <DisassemblerInsn "lea" for 0x40c48e>, <DisassemblerInsn "lea" for 0x40c495>, <DisassemblerInsn "mov" for 0x40c49c>, <DisassemblerInsn "call" for 0x40c4a2>]'}, {'block_Idx': 455, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c461>, <DisassemblerInsn "mov" for 0x40c466>, <DisassemblerInsn "lea" for 0x40c46b>, <DisassemblerInsn "lea" for 0x40c472>, <DisassemblerInsn "mov" for 0x40c479>, <DisassemblerInsn "call" for 0x40c47f>]'}], 'cfg_block_detailed_info': [{'block_Idx': 0, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x18], rdi>', '<mov~~qword ptr [rsp + 0x10], rsi>', '<mov~~qword ptr [rsp + 8], rdx>', '<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~qword ptr [rsp + 0x20], rax>', '<mov~~rdi, qword ptr [rsp + 0x20]>', '<xor~~eax, eax>', '<mov~~esi, eax>', '<mov~~edx, 1>', '<call~~0x500040>']}, {'block_Idx': 395, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3675]>', '<lea~~rcx, [rip + 0x3673]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 29, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x37a6]>', '<lea~~rcx, [rip + 0x37a4]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 515, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3622]>', '<lea~~rcx, [rip + 0x3620]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 724, 'blockInsts': ['<mov~~dword ptr [rsp + 0xc], eax>', '<mov~~eax, dword ptr [rsp + 0xc]>', '<add~~rsp, 0x48>', '<ret~~>']}, {'block_Idx': 520, 'blockInsts': ['<sub~~rsp, 0x68>', '<mov~~qword ptr [rsp + 0x58], rdi>', '<mov~~qword ptr [rsp + 0x50], rsi>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~qword ptr [rsp + 0x40], rcx>', '<mov~~dword ptr [rsp + 0x3c], r8d>', '<mov~~dword ptr [rsp + 0x34], 0>', '<mov~~qword ptr [rsp + 0x18], 0>', '<mov~~rax, qword ptr [rsp + 0x58]>', '<mov~~rdi, qword ptr [rax + 0x498]>', '<mov~~rsi, qword ptr [rsp + 0x40]>', '<xor~~eax, eax>', '<mov~~edx, eax>', '<xor~~ecx, ecx>', '<call~~0x500068>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~qword ptr [rsp + 0x30], rax>', '<lea~~rax, [rip + 0x3839]>', '<mov~~qword ptr [rsp + 0x28], rax>', '<mov~~rdi, qword ptr [rsp + 0x30]>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~esi, byte ptr [rax]>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~eax, byte ptr [rax + 1]>', '<shl~~eax, 8>', '<or~~esi, eax>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~eax, byte ptr [rax + 2]>', '<shl~~eax, 0x10>', '<or~~esi, eax>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~eax, byte ptr [rax + 3]>', '<shl~~eax, 0x18>', '<or~~esi, eax>', '<call~~0x5000b0>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3771]>', '<lea~~rcx, [rip + 0x3716]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 581, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<mov~~rsi, qword ptr [rsp]>', '<call~~0x403f10>']}, {'block_Idx': 98, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3717]>', '<lea~~rcx, [rip + 0x36e2]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 425, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3663]>', '<lea~~rcx, [rip + 0x3661]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 59, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3795]>', '<lea~~rcx, [rip + 0x3793]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3799]>', '<lea~~rcx, [rip + 0x321c]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 223, 'blockInsts': ['<cmp~~eax, 0>', '<jne~~0x40c36c>']}, {'block_Idx': 545, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<mov~~rsi, qword ptr [rsp + 0x10]>', '<mov~~rdx, qword ptr [rsp + 8]>', '<call~~0x40c500>']}, {'block_Idx': 185, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x373a]>', '<lea~~rcx, [rip + 0x3738]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 578, 'blockInsts': ['<sub~~rsp, 0x48>', '<mov~~qword ptr [rsp + 0x28], rdi>', '<mov~~qword ptr [rsp + 0x20], rsi>', '<mov~~qword ptr [rsp + 0x18], rdx>', '<mov~~dword ptr [rsp + 0x14], ecx>', '<mov~~dword ptr [rsp + 0x10], r8d>', '<mov~~dword ptr [rsp + 0xc], 0>', '<cmp~~qword ptr [rsp + 0x18], 0>', '<je~~0x40bed7>']}, {'block_Idx': 335, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36a1]>', '<lea~~rcx, [rip + 0x369f]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 589, 'blockInsts': ['<mov~~dword ptr [rsp + 0x64], eax>', '<mov~~eax, dword ptr [rsp + 0x64]>', '<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 540, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x64]>', '<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 230, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3705]>', '<lea~~rcx, [rip + 0x3647]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 306, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3664]>', '<lea~~rcx, [rip + 0x3619]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~qword ptr [rsp], rax>', '<mov~~rdi, qword ptr [rsp + 0x18]>', '<xor~~esi, esi>', '<call~~0x5000a8>']}, {'block_Idx': 143, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36f9]>', '<lea~~rcx, [rip + 0x36d9]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 550, 'blockInsts': ['<sub~~rsp, 0x58>', '<mov~~qword ptr [rsp + 0x30], rdi>', '<mov~~qword ptr [rsp + 0x28], rsi>', '<mov~~qword ptr [rsp + 0x20], rdx>', '<mov~~rax, qword ptr [rsp + 0x20]>', '<mov~~rdi, qword ptr [rax + 0x498]>', '<lea~~rsi, [rip + 0x3506]>', '<xor~~eax, eax>', '<mov~~edx, eax>', '<xor~~ecx, ecx>', '<call~~0x500068>']}, {'block_Idx': 365, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x368c]>', '<lea~~rcx, [rip + 0x368a]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 229, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<lea~~rsi, [rip + 0x3717]>', '<lea~~rdx, [rip + 0x31ba]>', '<xor~~ecx, ecx>', '<mov~~r8d, 1>', '<call~~0x40bdf0>']}, {'block_Idx': 583, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0xc]>', '<add~~rsp, 0x48>', '<ret~~>']}, {'block_Idx': 270, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3682]>', '<lea~~rcx, [rip + 0x3619]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 485, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3635]>', '<lea~~rcx, [rip + 0x3633]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 455, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x364e]>', '<lea~~rcx, [rip + 0x364c]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}], 'cfg_edge_info': [(540, 59), (540, 306), (540, 425), (455, 485), (589, 455), (29, 59), (540, 98), (229, 230), (365, 520), (2, 4), (589, 185), (545, 581), (540, 365), (589, 395), (270, 306), (230, 270), (306, 335), (540, 29), (395, 520), (589, 59), (59, 98), (589, 306), (589, 425), (223, 230), (143, 185), (29, 520), (0, 2), (589, 98), (306, 520), (540, 223), (6, 520), (540, 143), (185, 223), (540, 335), (589, 365), (540, 545), (589, 29), (4, 6), (589, 223), (425, 520), (185, 520), (98, 143), (540, 485), (589, 143), (724, 230), (589, 335), (583, 230), (540, 515), (589, 545), (455, 520), (59, 520), (270, 520), (98, 520), (540, 14), (545, 550), (540, 270), (395, 425), (515, 545), (485, 520), (540, 455), (143, 520), (515, 520), (589, 485), (229, 578), (6, 14), (223, 229), (365, 395), (425, 455), (589, 515), (589, 14), (485, 515), (540, 185), (589, 270), (335, 365), (540, 395), (14, 29), (230, 520), (14, 520), (335, 520)], 'cdg_edge_info': [(223, 229)], 'ddg_edge_info': [(98, 229), (455, 485), (29, 395), (229, 365), (143, 270), (306, 395), (98, 485), (0, 14), (29, 59), (185, 59), (229, 29), (29, 306), (29, 425), (185, 306), (185, 425), (229, 395), (229, 230), (59, 185), (229, 59), (29, 98), (230, 515), (185, 98), (14, 143), (2, 4), (143, 455), (59, 395), (14, 335), (270, 395), (335, 515), (143, 229), (98, 270), (143, 485), (14, 545), (59, 306), (59, 425), (230, 270), (270, 425), (335, 545), (306, 335), (270, 306), (98, 306), (98, 425), (229, 143), (59, 98), (29, 365), (229, 335), (185, 365), (143, 185), (306, 365), (98, 455), (365, 515), (185, 29), (229, 545), (0, 2), (230, 455), (185, 395), (29, 230), (185, 230), (365, 545), (14, 229), (143, 306), (143, 425), (230, 485), (14, 485), (59, 365), (270, 365), (335, 485), (395, 515), (98, 185), (143, 98), (59, 29), (14, 515), (98, 29), (59, 230), (98, 395), (395, 545), (29, 143), (185, 143), (29, 335), (306, 515), (98, 59), (185, 335), (14, 270), (365, 485), (425, 545), (29, 545), (185, 545), (229, 515), (230, 306), (230, 425), (306, 545), (143, 365), (4, 6), (335, 425), (143, 29), (59, 143), (143, 395), (14, 455), (59, 335), (229, 270), (143, 230), (98, 143), (270, 335), (335, 455), (98, 335), (395, 485), (143, 59), (455, 545), (59, 545), (270, 545), (29, 229), (0, 4), (98, 365), (365, 425), (29, 485), (229, 455), (230, 365), (306, 485), (14, 185), (365, 455), (98, 230), (425, 515), (29, 515), (229, 485), (485, 545), (185, 515), (230, 395), (0, 6), (143, 335), (14, 395), (335, 395), (59, 229), (395, 425), (515, 545), (14, 59), (143, 545), (59, 485), (14, 306), (14, 425), (29, 270), (270, 485), (185, 270), (229, 185), (395, 455), (455, 515), (59, 515), (14, 98), (270, 515), (306, 425), (98, 515), (365, 395), (425, 455), (29, 455), (229, 306), (229, 425), (185, 455), (230, 335), (306, 455), (59, 270), (98, 545), (185, 229), (425, 485), (230, 545), (229, 98), (185, 485), (485, 515), (14, 365), (335, 365), (143, 515), (14, 29), (59, 455), (270, 455), (29, 185), (14, 230)]}]}
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'after', 'insts_info': [{'instIndex': 53, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 54, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 55, 'instruction': 'leaq\t.L.str.0x111(%rip), %rdx'}, {'instIndex': 56, 'instruction': 'leaq\t.L.str.0x112(%rip), %rcx'}, {'instIndex': 57, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 58, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 59, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 60, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 61, 'instruction': 'leaq\t.L.str.0x101(%rip), %rdx'}, {'instIndex': 62, 'instruction': 'leaq\t.L.str.0xf9(%rip), %rcx'}, {'instIndex': 63, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 64, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 65, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 66, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 67, 'instruction': 'leaq\t.L.str.0x102(%rip), %rdx'}, {'instIndex': 68, 'instruction': 'leaq\t.L.str.0xfd(%rip), %rcx'}, {'instIndex': 69, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 70, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 71, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 72, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 73, 'instruction': 'leaq\t.L.str.0x113(%rip), %rdx'}, {'instIndex': 74, 'instruction': 'leaq\t.L.str.0x114(%rip), %rcx'}, {'instIndex': 75, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 76, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 77, 'instruction': 'cmpl\t$0, %eax'}, {'instIndex': 78, 'instruction': 'jne\t.LBB106_2'}, {'instIndex': 79, 'instruction': 'movq\t0x18(%rsp), %rdi'}, {'instIndex': 80, 'instruction': 'leaq\t.L.str.0x113(%rip), %rsi'}, {'instIndex': 81, 'instruction': 'leaq\t.L.str.0x7a(%rip), %rdx'}, {'instIndex': 82, 'instruction': 'xorl\t%ecx, %ecx'}, {'instIndex': 83, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 84, 'instruction': 'callq\tmov_write_string_tag'}, {'instIndex': 85, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 86, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 87, 'instruction': 'leaq\t.L.str.0x115(%rip), %rdx'}, {'instIndex': 88, 'instruction': 'leaq\t.L.str.0xf7(%rip), %rcx'}, {'instIndex': 89, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 90, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 91, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 92, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 93, 'instruction': 'leaq\t.L.str.0x106(%rip), %rdx'}, {'instIndex': 94, 'instruction': 'leaq\t.L.str.0xf5(%rip), %rcx'}, {'instIndex': 95, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 96, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 97, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 98, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 99, 'instruction': 'leaq\t.L.str.0x107(%rip), %rdx'}, {'instIndex': 100, 'instruction': 'leaq\t.L.str.0xfb(%rip), %rcx'}, {'instIndex': 101, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 102, 'instruction': 'callq\tmov_write_string_metadata'}]}]}
The case of compiler clang with optimization O1.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O1/movenc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O1/movenc.s---mov_write_ilst_tag---after
Assembly file error information: 'utf-8' codec can't decode byte 0xf0 in position 2211: invalid continuation byte
Traceback (most recent call last):
  File "extract_patched_slicing_info.py", line 807, in patched_commit_patched_tag_handle
    = extract_patched_assembly_code_from_debug_file(assembly_file, func_name,
  File "extract_patched_slicing_info.py", line 131, in extract_patched_assembly_code_from_debug_file
    lines = af.readlines()
  File "/home/xu/anaconda3/envs/bingo/lib/python3.8/codecs.py", line 322, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 2211: invalid continuation byte

/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O1/movenc.o
Patched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O1/movenc.o---after
The extraction of function: mov_write_ilst_tag
There is no function: mov_write_ilst_tag in binary /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O1/movenc.o
The execution time of patched subCFG information extraction via angr: 0:00:01.770267
Empty patched sub graph information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O1/movenc.o.
{}
{}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O1/movenc.o---after
The execution time of patched slicing information extraction via angr: 0:00:00.334270
{}
Empty patched slicing information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O1/movenc.o.
{'mov_write_ilst_tag': []}
The case of compiler clang with optimization O2.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O2/movenc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O2/movenc.s---mov_write_ilst_tag---after
Assembly file error information: 'utf-8' codec can't decode byte 0xf0 in position 5077: invalid continuation byte
Traceback (most recent call last):
  File "extract_patched_slicing_info.py", line 807, in patched_commit_patched_tag_handle
    = extract_patched_assembly_code_from_debug_file(assembly_file, func_name,
  File "extract_patched_slicing_info.py", line 131, in extract_patched_assembly_code_from_debug_file
    lines = af.readlines()
  File "/home/xu/anaconda3/envs/bingo/lib/python3.8/codecs.py", line 322, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 5077: invalid continuation byte

/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O2/movenc.o
Patched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O2/movenc.o---after
The extraction of function: mov_write_ilst_tag
There is no function: mov_write_ilst_tag in binary /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O2/movenc.o
The execution time of patched subCFG information extraction via angr: 0:00:00.339884
Empty patched sub graph information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O2/movenc.o.
{}
{}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O2/movenc.o---after
The execution time of patched slicing information extraction via angr: 0:00:00.339194
{}
Empty patched slicing information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O2/movenc.o.
{'mov_write_ilst_tag': []}
The case of compiler clang with optimization O3.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O3/movenc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O3/movenc.s---mov_write_ilst_tag---after
Assembly file error information: 'utf-8' codec can't decode byte 0xf0 in position 7059: invalid continuation byte
Traceback (most recent call last):
  File "extract_patched_slicing_info.py", line 807, in patched_commit_patched_tag_handle
    = extract_patched_assembly_code_from_debug_file(assembly_file, func_name,
  File "extract_patched_slicing_info.py", line 131, in extract_patched_assembly_code_from_debug_file
    lines = af.readlines()
  File "/home/xu/anaconda3/envs/bingo/lib/python3.8/codecs.py", line 322, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 7059: invalid continuation byte

/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O3/movenc.o
Patched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O3/movenc.o---after
The extraction of function: mov_write_ilst_tag
There is no function: mov_write_ilst_tag in binary /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O3/movenc.o
The execution time of patched subCFG information extraction via angr: 0:00:00.342454
Empty patched sub graph information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O3/movenc.o.
{}
{}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O3/movenc.o---after
The execution time of patched slicing information extraction via angr: 0:00:00.340209
{}
Empty patched slicing information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/O3/movenc.o.
{'mov_write_ilst_tag': []}
The case of compiler clang with optimization Os.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/Os/movenc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/Os/movenc.s---mov_write_ilst_tag---after
Assembly file error information: 'utf-8' codec can't decode byte 0xf0 in position 3990: invalid continuation byte
Traceback (most recent call last):
  File "extract_patched_slicing_info.py", line 807, in patched_commit_patched_tag_handle
    = extract_patched_assembly_code_from_debug_file(assembly_file, func_name,
  File "extract_patched_slicing_info.py", line 131, in extract_patched_assembly_code_from_debug_file
    lines = af.readlines()
  File "/home/xu/anaconda3/envs/bingo/lib/python3.8/codecs.py", line 322, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 3990: invalid continuation byte

/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/Os/movenc.o
Patched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/Os/movenc.o---after
The extraction of function: mov_write_ilst_tag
There is no function: mov_write_ilst_tag in binary /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/Os/movenc.o
The execution time of patched subCFG information extraction via angr: 0:00:00.318730
Empty patched sub graph information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/Os/movenc.o.
{}
{}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/Os/movenc.o---after
The execution time of patched slicing information extraction via angr: 0:00:00.318281
{}
Empty patched slicing information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_after/Os/movenc.o.
{'mov_write_ilst_tag': []}
The patch information: before---/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c---a/libavformat/movenc.c
The case of compiler gcc with optimization no.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/no/movenc_gcc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/no/movenc_gcc.s---mov_write_ilst_tag---before
function id: 157
function flag: True
There are 196 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 72, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 73, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 74, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 75, 'instruction': 'leaq\t.LC0x98(%rip), %rdx'}, {'instIndex': 76, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 77, 'instruction': 'leaq\t.LC0x99(%rip), %rdx'}, {'instIndex': 78, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 79, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 80, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 81, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 82, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 83, 'instruction': 'leaq\t.LC0x9a(%rip), %rdx'}, {'instIndex': 84, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 85, 'instruction': 'leaq\t.LC0x9b(%rip), %rdx'}, {'instIndex': 86, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 87, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 88, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 89, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 90, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 91, 'instruction': 'leaq\t.LC0x9c(%rip), %rdx'}, {'instIndex': 92, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 93, 'instruction': 'leaq\t.LC0x9d(%rip), %rdx'}, {'instIndex': 94, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 95, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 96, 'instruction': 'movq\t0x18(%rsp), %rax'}, {'instIndex': 97, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 98, 'instruction': 'movl\t$0, %ecx'}, {'instIndex': 99, 'instruction': 'leaq\t.LC0x9e(%rip), %rdx'}, {'instIndex': 100, 'instruction': 'leaq\t.LC0x9f(%rip), %rsi'}, {'instIndex': 101, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 102, 'instruction': 'call\tmov_write_string_tag'}, {'instIndex': 103, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 104, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 105, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 106, 'instruction': 'leaq\t.LC0xa0(%rip), %rdx'}, {'instIndex': 107, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 108, 'instruction': 'leaq\t.LC0xa1(%rip), %rdx'}, {'instIndex': 109, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 110, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 111, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 112, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 113, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 114, 'instruction': 'leaq\t.LC0xa2(%rip), %rdx'}, {'instIndex': 115, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 116, 'instruction': 'leaq\t.LC0xa3(%rip), %rdx'}, {'instIndex': 117, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 118, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 119, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 120, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 121, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 122, 'instruction': 'leaq\t.LC0xa4(%rip), %rdx'}, {'instIndex': 123, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 124, 'instruction': 'leaq\t.LC0xa5(%rip), %rdx'}, {'instIndex': 125, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 126, 'instruction': 'call\tmov_write_string_metadata'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/no/movenc.o
Binary file does not exist.
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 72, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 73, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 74, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 75, 'instruction': 'leaq\t.LC0x98(%rip), %rdx'}, {'instIndex': 76, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 77, 'instruction': 'leaq\t.LC0x99(%rip), %rdx'}, {'instIndex': 78, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 79, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 80, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 81, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 82, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 83, 'instruction': 'leaq\t.LC0x9a(%rip), %rdx'}, {'instIndex': 84, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 85, 'instruction': 'leaq\t.LC0x9b(%rip), %rdx'}, {'instIndex': 86, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 87, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 88, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 89, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 90, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 91, 'instruction': 'leaq\t.LC0x9c(%rip), %rdx'}, {'instIndex': 92, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 93, 'instruction': 'leaq\t.LC0x9d(%rip), %rdx'}, {'instIndex': 94, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 95, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 96, 'instruction': 'movq\t0x18(%rsp), %rax'}, {'instIndex': 97, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 98, 'instruction': 'movl\t$0, %ecx'}, {'instIndex': 99, 'instruction': 'leaq\t.LC0x9e(%rip), %rdx'}, {'instIndex': 100, 'instruction': 'leaq\t.LC0x9f(%rip), %rsi'}, {'instIndex': 101, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 102, 'instruction': 'call\tmov_write_string_tag'}, {'instIndex': 103, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 104, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 105, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 106, 'instruction': 'leaq\t.LC0xa0(%rip), %rdx'}, {'instIndex': 107, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 108, 'instruction': 'leaq\t.LC0xa1(%rip), %rdx'}, {'instIndex': 109, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 110, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 111, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 112, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 113, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 114, 'instruction': 'leaq\t.LC0xa2(%rip), %rdx'}, {'instIndex': 115, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 116, 'instruction': 'leaq\t.LC0xa3(%rip), %rdx'}, {'instIndex': 117, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 118, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 119, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 120, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 121, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 122, 'instruction': 'leaq\t.LC0xa4(%rip), %rdx'}, {'instIndex': 123, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 124, 'instruction': 'leaq\t.LC0xa5(%rip), %rdx'}, {'instIndex': 125, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 126, 'instruction': 'call\tmov_write_string_metadata'}]}]}
The case of compiler gcc with optimization O0.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/O0/movenc_gcc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/O0/movenc_gcc.s---mov_write_ilst_tag---before
function id: 157
function flag: True
There are 196 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 72, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 73, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 74, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 75, 'instruction': 'leaq\t.LC0x98(%rip), %rdx'}, {'instIndex': 76, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 77, 'instruction': 'leaq\t.LC0x99(%rip), %rdx'}, {'instIndex': 78, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 79, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 80, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 81, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 82, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 83, 'instruction': 'leaq\t.LC0x9a(%rip), %rdx'}, {'instIndex': 84, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 85, 'instruction': 'leaq\t.LC0x9b(%rip), %rdx'}, {'instIndex': 86, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 87, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 88, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 89, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 90, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 91, 'instruction': 'leaq\t.LC0x9c(%rip), %rdx'}, {'instIndex': 92, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 93, 'instruction': 'leaq\t.LC0x9d(%rip), %rdx'}, {'instIndex': 94, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 95, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 96, 'instruction': 'movq\t0x18(%rsp), %rax'}, {'instIndex': 97, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 98, 'instruction': 'movl\t$0, %ecx'}, {'instIndex': 99, 'instruction': 'leaq\t.LC0x9e(%rip), %rdx'}, {'instIndex': 100, 'instruction': 'leaq\t.LC0x9f(%rip), %rsi'}, {'instIndex': 101, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 102, 'instruction': 'call\tmov_write_string_tag'}, {'instIndex': 103, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 104, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 105, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 106, 'instruction': 'leaq\t.LC0xa0(%rip), %rdx'}, {'instIndex': 107, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 108, 'instruction': 'leaq\t.LC0xa1(%rip), %rdx'}, {'instIndex': 109, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 110, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 111, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 112, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 113, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 114, 'instruction': 'leaq\t.LC0xa2(%rip), %rdx'}, {'instIndex': 115, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 116, 'instruction': 'leaq\t.LC0xa3(%rip), %rdx'}, {'instIndex': 117, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 118, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 119, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 120, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 121, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 122, 'instruction': 'leaq\t.LC0xa4(%rip), %rdx'}, {'instIndex': 123, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 124, 'instruction': 'leaq\t.LC0xa5(%rip), %rdx'}, {'instIndex': 125, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 126, 'instruction': 'call\tmov_write_string_metadata'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/O0/movenc.o
Binary file does not exist.
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 72, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 73, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 74, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 75, 'instruction': 'leaq\t.LC0x98(%rip), %rdx'}, {'instIndex': 76, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 77, 'instruction': 'leaq\t.LC0x99(%rip), %rdx'}, {'instIndex': 78, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 79, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 80, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 81, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 82, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 83, 'instruction': 'leaq\t.LC0x9a(%rip), %rdx'}, {'instIndex': 84, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 85, 'instruction': 'leaq\t.LC0x9b(%rip), %rdx'}, {'instIndex': 86, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 87, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 88, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 89, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 90, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 91, 'instruction': 'leaq\t.LC0x9c(%rip), %rdx'}, {'instIndex': 92, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 93, 'instruction': 'leaq\t.LC0x9d(%rip), %rdx'}, {'instIndex': 94, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 95, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 96, 'instruction': 'movq\t0x18(%rsp), %rax'}, {'instIndex': 97, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 98, 'instruction': 'movl\t$0, %ecx'}, {'instIndex': 99, 'instruction': 'leaq\t.LC0x9e(%rip), %rdx'}, {'instIndex': 100, 'instruction': 'leaq\t.LC0x9f(%rip), %rsi'}, {'instIndex': 101, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 102, 'instruction': 'call\tmov_write_string_tag'}, {'instIndex': 103, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 104, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 105, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 106, 'instruction': 'leaq\t.LC0xa0(%rip), %rdx'}, {'instIndex': 107, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 108, 'instruction': 'leaq\t.LC0xa1(%rip), %rdx'}, {'instIndex': 109, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 110, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 111, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 112, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 113, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 114, 'instruction': 'leaq\t.LC0xa2(%rip), %rdx'}, {'instIndex': 115, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 116, 'instruction': 'leaq\t.LC0xa3(%rip), %rdx'}, {'instIndex': 117, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 118, 'instruction': 'call\tmov_write_string_metadata'}, {'instIndex': 119, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 120, 'instruction': 'movq\t8(%rsp), %rax'}, {'instIndex': 121, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 122, 'instruction': 'leaq\t.LC0xa4(%rip), %rdx'}, {'instIndex': 123, 'instruction': 'movq\t%rdx, %rcx'}, {'instIndex': 124, 'instruction': 'leaq\t.LC0xa5(%rip), %rdx'}, {'instIndex': 125, 'instruction': 'movq\t%rax, %rdi'}, {'instIndex': 126, 'instruction': 'call\tmov_write_string_metadata'}]}]}
The case of compiler gcc with optimization O1.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/O1/movenc_gcc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/O1/movenc_gcc.s---mov_write_ilst_tag---before
There are 0 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': []}]
Empty patched instructions for patched function: mov_write_ilst_tag from assembly files.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/O1/movenc.o
Binary file does not exist.
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': []}]}
The case of compiler gcc with optimization O2.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/O2/movenc_gcc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/O2/movenc_gcc.s---mov_write_ilst_tag---before
There are 0 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': []}]
Empty patched instructions for patched function: mov_write_ilst_tag from assembly files.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/O2/movenc.o
Binary file does not exist.
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': []}]}
The case of compiler gcc with optimization O3.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/O3/movenc_gcc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/O3/movenc_gcc.s---mov_write_ilst_tag---before
There are 0 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': []}]
Empty patched instructions for patched function: mov_write_ilst_tag from assembly files.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/O3/movenc.o
Binary file does not exist.
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': []}]}
The case of compiler gcc with optimization Os.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/Os/movenc_gcc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/Os/movenc_gcc.s---mov_write_ilst_tag---before
There are 0 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': []}]
Empty patched instructions for patched function: mov_write_ilst_tag from assembly files.
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/gcc_before/Os/movenc.o
Binary file does not exist.
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': []}]}
The case of compiler clang with optimization no.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/no/movenc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/no/movenc.s---mov_write_ilst_tag---before
function id: 106
function flag: True
There are 146 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 53, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 54, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 55, 'instruction': 'leaq\t.L.str.0x111(%rip), %rdx'}, {'instIndex': 56, 'instruction': 'leaq\t.L.str.0x112(%rip), %rcx'}, {'instIndex': 57, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 58, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 59, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 60, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 61, 'instruction': 'leaq\t.L.str.0x101(%rip), %rdx'}, {'instIndex': 62, 'instruction': 'leaq\t.L.str.0xf9(%rip), %rcx'}, {'instIndex': 63, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 64, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 65, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 66, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 67, 'instruction': 'leaq\t.L.str.0x102(%rip), %rdx'}, {'instIndex': 68, 'instruction': 'leaq\t.L.str.0xfd(%rip), %rcx'}, {'instIndex': 69, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 70, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 71, 'instruction': 'movq\t0x18(%rsp), %rdi'}, {'instIndex': 72, 'instruction': 'leaq\t.L.str.0x113(%rip), %rsi'}, {'instIndex': 73, 'instruction': 'leaq\t.L.str.0x7a(%rip), %rdx'}, {'instIndex': 74, 'instruction': 'xorl\t%ecx, %ecx'}, {'instIndex': 75, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 76, 'instruction': 'callq\tmov_write_string_tag'}, {'instIndex': 77, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 78, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 79, 'instruction': 'leaq\t.L.str.0x114(%rip), %rdx'}, {'instIndex': 80, 'instruction': 'leaq\t.L.str.0xf7(%rip), %rcx'}, {'instIndex': 81, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 82, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 83, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 84, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 85, 'instruction': 'leaq\t.L.str.0x106(%rip), %rdx'}, {'instIndex': 86, 'instruction': 'leaq\t.L.str.0xf5(%rip), %rcx'}, {'instIndex': 87, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 88, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 89, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 90, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 91, 'instruction': 'leaq\t.L.str.0x107(%rip), %rdx'}, {'instIndex': 92, 'instruction': 'leaq\t.L.str.0xfb(%rip), %rcx'}, {'instIndex': 93, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 94, 'instruction': 'callq\tmov_write_string_metadata'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/no/movenc.o
Unpatched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/no/movenc.o---before
The extraction of function: mov_write_ilst_tag
Analyzing the binaries to generate subCFGs from patched function ...
It has 2848 nodes and 5956 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 146 instructions in binary file.
[4244155, 4244190, 4244225, 4244260, 4244292, 4244327, 4244362]
The execution time of patched subCFG information extraction via angr: 0:00:02.563707
{'mov_write_ilst_tag': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c38a>, <DisassemblerInsn "mov" for 0x40c38f>, <DisassemblerInsn "lea" for 0x40c394>, <DisassemblerInsn "lea" for 0x40c39b>, <DisassemblerInsn "mov" for 0x40c3a2>, <DisassemblerInsn "call" for 0x40c3a8>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2bb>, <DisassemblerInsn "mov" for 0x40c2c0>, <DisassemblerInsn "lea" for 0x40c2c5>, <DisassemblerInsn "lea" for 0x40c2cc>, <DisassemblerInsn "mov" for 0x40c2d3>, <DisassemblerInsn "call" for 0x40c2d9>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c367>, <DisassemblerInsn "mov" for 0x40c36c>, <DisassemblerInsn "lea" for 0x40c371>, <DisassemblerInsn "lea" for 0x40c378>, <DisassemblerInsn "mov" for 0x40c37f>, <DisassemblerInsn "call" for 0x40c385>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3ad>, <DisassemblerInsn "mov" for 0x40c3b2>, <DisassemblerInsn "lea" for 0x40c3b7>, <DisassemblerInsn "lea" for 0x40c3be>, <DisassemblerInsn "mov" for 0x40c3c5>, <DisassemblerInsn "call" for 0x40c3cb>]'}, {'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c324>, <DisassemblerInsn "lea" for 0x40c329>, <DisassemblerInsn "lea" for 0x40c330>, <DisassemblerInsn "xor" for 0x40c337>, <DisassemblerInsn "mov" for 0x40c339>, <DisassemblerInsn "call" for 0x40c33f>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2de>, <DisassemblerInsn "mov" for 0x40c2e3>, <DisassemblerInsn "lea" for 0x40c2e8>, <DisassemblerInsn "lea" for 0x40c2ef>, <DisassemblerInsn "mov" for 0x40c2f6>, <DisassemblerInsn "call" for 0x40c2fc>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c344>, <DisassemblerInsn "mov" for 0x40c349>, <DisassemblerInsn "lea" for 0x40c34e>, <DisassemblerInsn "lea" for 0x40c355>, <DisassemblerInsn "mov" for 0x40c35c>, <DisassemblerInsn "call" for 0x40c362>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c301>, <DisassemblerInsn "mov" for 0x40c306>, <DisassemblerInsn "lea" for 0x40c30b>, <DisassemblerInsn "lea" for 0x40c312>, <DisassemblerInsn "mov" for 0x40c319>, <DisassemblerInsn "call" for 0x40c31f>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c298>, <DisassemblerInsn "mov" for 0x40c29d>, <DisassemblerInsn "lea" for 0x40c2a2>, <DisassemblerInsn "lea" for 0x40c2a9>, <DisassemblerInsn "mov" for 0x40c2b0>, <DisassemblerInsn "call" for 0x40c2b6>]'}], 'cfg_block_detailed_info': [{'block_Idx': 12, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x365c]>', '<lea~~rcx, [rip + 0x3611]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3765]>', '<lea~~rcx, [rip + 0x3763]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x367a]>', '<lea~~rcx, [rip + 0x3611]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x368b]>', '<lea~~rcx, [rip + 0x3689]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 9, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<lea~~rsi, [rip + 0x370f]>', '<lea~~rdx, [rip + 0x31b2]>', '<xor~~ecx, ecx>', '<mov~~r8d, 1>', '<call~~0x40bdf0>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36e7]>', '<lea~~rcx, [rip + 0x36b2]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36ef]>', '<lea~~rcx, [rip + 0x363f]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36c9]>', '<lea~~rcx, [rip + 0x36a9]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3776]>', '<lea~~rcx, [rip + 0x3774]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}], 'cfg_edge_info': [(9, 10), (10, 11), (12, 13), (11, 12), (6, 7), (8, 9), (5, 6), (7, 8)]}]}
{'mov_write_ilst_tag': [4244155, 4244190, 4244225, 4244260, 4244292, 4244327, 4244362]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/no/movenc.o---before
The extraction of function: mov_write_ilst_tag
[4244155, 4244190, 4244225, 4244260, 4244292, 4244327, 4244362]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 693 nodes and 1101 edges in CFGEmulated.
It has 684 nodes and 5292 edges in CDG.
It has 1579 nodes and 2751 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4244155, 4244190, 4244225, 4244260, 4244292, 4244327, 4244362]
{4243968, 4244225, 4244362, 4244502, 4244120, 4244642, 4244260, 4244397, 4244537, 4244155, 4243904, 4244292, 4244432, 4244050, 4244572, 4244190, 4244327, 4243952, 4244467, 4244085, 4244607}
[0, 29, 334, 304, 4, 14, 424, 489, 509, 98, 364, 6, 59, 210, 688, 185, 454, 550, 558, 277, 394, 249, 2, 143, 514, 519, 547, 484, 552]
The execution time of patched slicing information extraction via angr: 0:03:11.390095
{'mov_write_ilst_tag': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40c1c0>, <DisassemblerInsn "mov" for 0x40c1c4>, <DisassemblerInsn "mov" for 0x40c1c9>, <DisassemblerInsn "mov" for 0x40c1ce>, <DisassemblerInsn "mov" for 0x40c1d3>, <DisassemblerInsn "mov" for 0x40c1d8>, <DisassemblerInsn "mov" for 0x40c1dd>, <DisassemblerInsn "xor" for 0x40c1e2>, <DisassemblerInsn "mov" for 0x40c1e4>, <DisassemblerInsn "mov" for 0x40c1e6>, <DisassemblerInsn "call" for 0x40c1eb>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c298>, <DisassemblerInsn "mov" for 0x40c29d>, <DisassemblerInsn "lea" for 0x40c2a2>, <DisassemblerInsn "lea" for 0x40c2a9>, <DisassemblerInsn "mov" for 0x40c2b0>, <DisassemblerInsn "call" for 0x40c2b6>]'}, {'block_Idx': 334, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3d0>, <DisassemblerInsn "mov" for 0x40c3d5>, <DisassemblerInsn "lea" for 0x40c3da>, <DisassemblerInsn "lea" for 0x40c3e1>, <DisassemblerInsn "mov" for 0x40c3e8>, <DisassemblerInsn "call" for 0x40c3ee>]'}, {'block_Idx': 304, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3ad>, <DisassemblerInsn "mov" for 0x40c3b2>, <DisassemblerInsn "lea" for 0x40c3b7>, <DisassemblerInsn "lea" for 0x40c3be>, <DisassemblerInsn "mov" for 0x40c3c5>, <DisassemblerInsn "call" for 0x40c3cb>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c200>, <DisassemblerInsn "mov" for 0x40c205>, <DisassemblerInsn "lea" for 0x40c20a>, <DisassemblerInsn "mov" for 0x40c211>, <DisassemblerInsn "mov" for 0x40c216>, <DisassemblerInsn "mov" for 0x40c21b>, <DisassemblerInsn "movzx" for 0x40c220>, <DisassemblerInsn "mov" for 0x40c223>, <DisassemblerInsn "movzx" for 0x40c228>, <DisassemblerInsn "shl" for 0x40c22c>, <DisassemblerInsn "or" for 0x40c22f>, <DisassemblerInsn "mov" for 0x40c231>, <DisassemblerInsn "movzx" for 0x40c236>, <DisassemblerInsn "shl" for 0x40c23a>, <DisassemblerInsn "or" for 0x40c23d>, <DisassemblerInsn "mov" for 0x40c23f>, <DisassemblerInsn "movzx" for 0x40c244>, <DisassemblerInsn "shl" for 0x40c248>, <DisassemblerInsn "or" for 0x40c24b>, <DisassemblerInsn "call" for 0x40c24d>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c275>, <DisassemblerInsn "mov" for 0x40c27a>, <DisassemblerInsn "lea" for 0x40c27f>, <DisassemblerInsn "lea" for 0x40c286>, <DisassemblerInsn "mov" for 0x40c28d>, <DisassemblerInsn "call" for 0x40c293>]'}, {'block_Idx': 424, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c439>, <DisassemblerInsn "mov" for 0x40c43e>, <DisassemblerInsn "lea" for 0x40c443>, <DisassemblerInsn "lea" for 0x40c44a>, <DisassemblerInsn "mov" for 0x40c451>, <DisassemblerInsn "call" for 0x40c457>]'}, {'block_Idx': 489, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40b980>, <DisassemblerInsn "mov" for 0x40b984>, <DisassemblerInsn "mov" for 0x40b989>, <DisassemblerInsn "mov" for 0x40b98e>, <DisassemblerInsn "mov" for 0x40b993>, <DisassemblerInsn "mov" for 0x40b998>, <DisassemblerInsn "mov" for 0x40b99d>, <DisassemblerInsn "mov" for 0x40b9a5>, <DisassemblerInsn "mov" for 0x40b9ae>, <DisassemblerInsn "mov" for 0x40b9b3>, <DisassemblerInsn "mov" for 0x40b9ba>, <DisassemblerInsn "xor" for 0x40b9bf>, <DisassemblerInsn "mov" for 0x40b9c1>, <DisassemblerInsn "xor" for 0x40b9c3>, <DisassemblerInsn "call" for 0x40b9c5>]'}, {'block_Idx': 509, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40bace>, <DisassemblerInsn "add" for 0x40bad2>, <DisassemblerInsn "ret" for 0x40bad6>]'}, {'block_Idx': 98, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2de>, <DisassemblerInsn "mov" for 0x40c2e3>, <DisassemblerInsn "lea" for 0x40c2e8>, <DisassemblerInsn "lea" for 0x40c2ef>, <DisassemblerInsn "mov" for 0x40c2f6>, <DisassemblerInsn "call" for 0x40c2fc>]'}, {'block_Idx': 364, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3f3>, <DisassemblerInsn "mov" for 0x40c3f8>, <DisassemblerInsn "lea" for 0x40c3fd>, <DisassemblerInsn "lea" for 0x40c404>, <DisassemblerInsn "mov" for 0x40c40b>, <DisassemblerInsn "call" for 0x40c411>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c252>, <DisassemblerInsn "mov" for 0x40c257>, <DisassemblerInsn "lea" for 0x40c25c>, <DisassemblerInsn "lea" for 0x40c263>, <DisassemblerInsn "mov" for 0x40c26a>, <DisassemblerInsn "call" for 0x40c270>]'}, {'block_Idx': 59, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2bb>, <DisassemblerInsn "mov" for 0x40c2c0>, <DisassemblerInsn "lea" for 0x40c2c5>, <DisassemblerInsn "lea" for 0x40c2cc>, <DisassemblerInsn "mov" for 0x40c2d3>, <DisassemblerInsn "call" for 0x40c2d9>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c344>, <DisassemblerInsn "mov" for 0x40c349>, <DisassemblerInsn "lea" for 0x40c34e>, <DisassemblerInsn "lea" for 0x40c355>, <DisassemblerInsn "mov" for 0x40c35c>, <DisassemblerInsn "call" for 0x40c362>]'}, {'block_Idx': 688, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40bed3>, <DisassemblerInsn "mov" for 0x40bed7>, <DisassemblerInsn "add" for 0x40bedb>, <DisassemblerInsn "ret" for 0x40bedf>]'}, {'block_Idx': 185, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c324>, <DisassemblerInsn "lea" for 0x40c329>, <DisassemblerInsn "lea" for 0x40c330>, <DisassemblerInsn "xor" for 0x40c337>, <DisassemblerInsn "mov" for 0x40c339>, <DisassemblerInsn "call" for 0x40c33f>]'}, {'block_Idx': 454, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c45c>, <DisassemblerInsn "mov" for 0x40c461>, <DisassemblerInsn "lea" for 0x40c466>, <DisassemblerInsn "lea" for 0x40c46d>, <DisassemblerInsn "mov" for 0x40c474>, <DisassemblerInsn "call" for 0x40c47a>]'}, {'block_Idx': 550, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c4b6>, <DisassemblerInsn "mov" for 0x40c4bb>, <DisassemblerInsn "call" for 0x40c4bf>]'}, {'block_Idx': 558, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40baca>, <DisassemblerInsn "mov" for 0x40bace>, <DisassemblerInsn "add" for 0x40bad2>, <DisassemblerInsn "ret" for 0x40bad6>]'}, {'block_Idx': 277, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c38a>, <DisassemblerInsn "mov" for 0x40c38f>, <DisassemblerInsn "lea" for 0x40c394>, <DisassemblerInsn "lea" for 0x40c39b>, <DisassemblerInsn "mov" for 0x40c3a2>, <DisassemblerInsn "call" for 0x40c3a8>]'}, {'block_Idx': 394, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c416>, <DisassemblerInsn "mov" for 0x40c41b>, <DisassemblerInsn "lea" for 0x40c420>, <DisassemblerInsn "lea" for 0x40c427>, <DisassemblerInsn "mov" for 0x40c42e>, <DisassemblerInsn "call" for 0x40c434>]'}, {'block_Idx': 249, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c367>, <DisassemblerInsn "mov" for 0x40c36c>, <DisassemblerInsn "lea" for 0x40c371>, <DisassemblerInsn "lea" for 0x40c378>, <DisassemblerInsn "mov" for 0x40c37f>, <DisassemblerInsn "call" for 0x40c385>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c1f0>, <DisassemblerInsn "mov" for 0x40c1f4>, <DisassemblerInsn "xor" for 0x40c1f9>, <DisassemblerInsn "call" for 0x40c1fb>]'}, {'block_Idx': 143, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c301>, <DisassemblerInsn "mov" for 0x40c306>, <DisassemblerInsn "lea" for 0x40c30b>, <DisassemblerInsn "lea" for 0x40c312>, <DisassemblerInsn "mov" for 0x40c319>, <DisassemblerInsn "call" for 0x40c31f>]'}, {'block_Idx': 514, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c4a2>, <DisassemblerInsn "mov" for 0x40c4a7>, <DisassemblerInsn "mov" for 0x40c4ac>, <DisassemblerInsn "call" for 0x40c4b1>]'}, {'block_Idx': 519, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40c4d0>, <DisassemblerInsn "mov" for 0x40c4d4>, <DisassemblerInsn "mov" for 0x40c4d9>, <DisassemblerInsn "mov" for 0x40c4de>, <DisassemblerInsn "mov" for 0x40c4e3>, <DisassemblerInsn "mov" for 0x40c4e8>, <DisassemblerInsn "lea" for 0x40c4ef>, <DisassemblerInsn "xor" for 0x40c4f6>, <DisassemblerInsn "mov" for 0x40c4f8>, <DisassemblerInsn "xor" for 0x40c4fa>, <DisassemblerInsn "call" for 0x40c4fc>]'}, {'block_Idx': 547, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40bdf0>, <DisassemblerInsn "mov" for 0x40bdf4>, <DisassemblerInsn "mov" for 0x40bdf9>, <DisassemblerInsn "mov" for 0x40bdfe>, <DisassemblerInsn "mov" for 0x40be03>, <DisassemblerInsn "mov" for 0x40be07>, <DisassemblerInsn "mov" for 0x40be0c>, <DisassemblerInsn "cmp" for 0x40be14>, <DisassemblerInsn "je" for 0x40be1a>]'}, {'block_Idx': 484, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c47f>, <DisassemblerInsn "mov" for 0x40c484>, <DisassemblerInsn "lea" for 0x40c489>, <DisassemblerInsn "lea" for 0x40c490>, <DisassemblerInsn "mov" for 0x40c497>, <DisassemblerInsn "call" for 0x40c49d>]'}, {'block_Idx': 552, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40bed7>, <DisassemblerInsn "add" for 0x40bedb>, <DisassemblerInsn "ret" for 0x40bedf>]'}], 'cfg_block_detailed_info': [{'block_Idx': 0, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x18], rdi>', '<mov~~qword ptr [rsp + 0x10], rsi>', '<mov~~qword ptr [rsp + 8], rdx>', '<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~qword ptr [rsp + 0x20], rax>', '<mov~~rdi, qword ptr [rsp + 0x20]>', '<xor~~eax, eax>', '<mov~~esi, eax>', '<mov~~edx, 1>', '<call~~0x500040>']}, {'block_Idx': 29, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3776]>', '<lea~~rcx, [rip + 0x3774]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 334, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3676]>', '<lea~~rcx, [rip + 0x3674]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 304, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x368b]>', '<lea~~rcx, [rip + 0x3689]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~qword ptr [rsp + 0x30], rax>', '<lea~~rax, [rip + 0x3809]>', '<mov~~qword ptr [rsp + 0x28], rax>', '<mov~~rdi, qword ptr [rsp + 0x30]>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~esi, byte ptr [rax]>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~eax, byte ptr [rax + 1]>', '<shl~~eax, 8>', '<or~~esi, eax>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~eax, byte ptr [rax + 2]>', '<shl~~eax, 0x10>', '<or~~esi, eax>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~eax, byte ptr [rax + 3]>', '<shl~~eax, 0x18>', '<or~~esi, eax>', '<call~~0x5000b0>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3741]>', '<lea~~rcx, [rip + 0x36e6]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 424, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3638]>', '<lea~~rcx, [rip + 0x3636]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 489, 'blockInsts': ['<sub~~rsp, 0x68>', '<mov~~qword ptr [rsp + 0x58], rdi>', '<mov~~qword ptr [rsp + 0x50], rsi>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~qword ptr [rsp + 0x40], rcx>', '<mov~~dword ptr [rsp + 0x3c], r8d>', '<mov~~dword ptr [rsp + 0x34], 0>', '<mov~~qword ptr [rsp + 0x18], 0>', '<mov~~rax, qword ptr [rsp + 0x58]>', '<mov~~rdi, qword ptr [rax + 0x498]>', '<mov~~rsi, qword ptr [rsp + 0x40]>', '<xor~~eax, eax>', '<mov~~edx, eax>', '<xor~~ecx, ecx>', '<call~~0x500068>']}, {'block_Idx': 509, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x64]>', '<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 98, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36e7]>', '<lea~~rcx, [rip + 0x36b2]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 364, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x365f]>', '<lea~~rcx, [rip + 0x365d]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3769]>', '<lea~~rcx, [rip + 0x31ec]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 59, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3765]>', '<lea~~rcx, [rip + 0x3763]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 210, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36ef]>', '<lea~~rcx, [rip + 0x363f]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 688, 'blockInsts': ['<mov~~dword ptr [rsp + 0xc], eax>', '<mov~~eax, dword ptr [rsp + 0xc]>', '<add~~rsp, 0x48>', '<ret~~>']}, {'block_Idx': 185, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<lea~~rsi, [rip + 0x370f]>', '<lea~~rdx, [rip + 0x31b2]>', '<xor~~ecx, ecx>', '<mov~~r8d, 1>', '<call~~0x40bdf0>']}, {'block_Idx': 454, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x361f]>', '<lea~~rcx, [rip + 0x361d]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 550, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<mov~~rsi, qword ptr [rsp]>', '<call~~0x403f10>']}, {'block_Idx': 558, 'blockInsts': ['<mov~~dword ptr [rsp + 0x64], eax>', '<mov~~eax, dword ptr [rsp + 0x64]>', '<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 277, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x365c]>', '<lea~~rcx, [rip + 0x3611]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 394, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x364d]>', '<lea~~rcx, [rip + 0x364b]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 249, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x367a]>', '<lea~~rcx, [rip + 0x3611]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~qword ptr [rsp], rax>', '<mov~~rdi, qword ptr [rsp + 0x18]>', '<xor~~esi, esi>', '<call~~0x5000a8>']}, {'block_Idx': 143, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36c9]>', '<lea~~rcx, [rip + 0x36a9]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 514, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<mov~~rsi, qword ptr [rsp + 0x10]>', '<mov~~rdx, qword ptr [rsp + 8]>', '<call~~0x40c4d0>']}, {'block_Idx': 519, 'blockInsts': ['<sub~~rsp, 0x58>', '<mov~~qword ptr [rsp + 0x30], rdi>', '<mov~~qword ptr [rsp + 0x28], rsi>', '<mov~~qword ptr [rsp + 0x20], rdx>', '<mov~~rax, qword ptr [rsp + 0x20]>', '<mov~~rdi, qword ptr [rax + 0x498]>', '<lea~~rsi, [rip + 0x3506]>', '<xor~~eax, eax>', '<mov~~edx, eax>', '<xor~~ecx, ecx>', '<call~~0x500068>']}, {'block_Idx': 547, 'blockInsts': ['<sub~~rsp, 0x48>', '<mov~~qword ptr [rsp + 0x28], rdi>', '<mov~~qword ptr [rsp + 0x20], rsi>', '<mov~~qword ptr [rsp + 0x18], rdx>', '<mov~~dword ptr [rsp + 0x14], ecx>', '<mov~~dword ptr [rsp + 0x10], r8d>', '<mov~~dword ptr [rsp + 0xc], 0>', '<cmp~~qword ptr [rsp + 0x18], 0>', '<je~~0x40bed7>']}, {'block_Idx': 484, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x360c]>', '<lea~~rcx, [rip + 0x360a]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 552, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0xc]>', '<add~~rsp, 0x48>', '<ret~~>']}], 'cfg_edge_info': [(514, 550), (558, 364), (143, 185), (552, 210), (509, 29), (509, 514), (509, 334), (210, 489), (364, 489), (4, 6), (14, 489), (304, 334), (0, 2), (558, 394), (514, 519), (558, 98), (364, 394), (509, 59), (277, 304), (29, 59), (454, 489), (98, 143), (509, 364), (688, 210), (424, 454), (558, 424), (185, 547), (29, 489), (484, 514), (304, 489), (394, 489), (6, 14), (249, 489), (143, 489), (509, 394), (558, 143), (509, 98), (509, 14), (558, 277), (558, 454), (2, 4), (509, 424), (484, 489), (277, 489), (6, 489), (558, 185), (558, 304), (558, 484), (558, 249), (509, 143), (558, 14), (394, 424), (210, 249), (509, 277), (334, 364), (509, 454), (558, 29), (59, 489), (249, 277), (558, 514), (424, 489), (185, 210), (334, 489), (558, 334), (98, 489), (14, 29), (454, 484), (509, 185), (509, 304), (509, 484), (509, 249), (558, 59), (59, 98)], 'cdg_edge_info': [], 'ddg_edge_info': [(185, 249), (29, 514), (249, 334), (304, 334), (185, 514), (143, 334), (59, 210), (0, 14), (29, 59), (185, 59), (249, 364), (210, 424), (98, 277), (277, 334), (14, 424), (143, 364), (59, 185), (59, 304), (59, 249), (29, 98), (98, 304), (185, 98), (14, 143), (2, 4), (210, 454), (59, 514), (364, 484), (98, 334), (29, 454), (185, 210), (364, 514), (59, 98), (249, 304), (29, 484), (185, 484), (143, 185), (143, 304), (14, 364), (143, 249), (249, 514), (185, 29), (304, 514), (0, 2), (143, 514), (210, 394), (59, 454), (277, 304), (14, 394), (98, 210), (277, 514), (59, 484), (98, 484), (210, 277), (364, 454), (98, 185), (143, 98), (59, 29), (98, 249), (14, 277), (334, 514), (29, 424), (98, 29), (185, 424), (98, 514), (29, 143), (185, 143), (304, 454), (98, 59), (210, 334), (143, 210), (185, 454), (14, 334), (249, 484), (304, 484), (394, 484), (143, 484), (277, 454), (210, 364), (59, 424), (4, 6), (143, 29), (364, 394), (59, 143), (394, 514), (334, 454), (277, 484), (29, 364), (98, 143), (98, 454), (143, 59), (364, 424), (334, 484), (424, 484), (29, 394), (185, 394), (14, 210), (0, 4), (249, 424), (304, 424), (424, 514), (143, 424), (210, 304), (210, 249), (59, 364), (14, 185), (14, 304), (14, 249), (29, 277), (185, 277), (249, 454), (210, 514), (394, 454), (0, 6), (143, 454), (277, 424), (14, 514), (454, 484), (59, 394), (98, 394), (14, 59), (334, 424), (454, 514), (29, 334), (185, 334), (98, 424), (59, 277), (14, 98), (304, 364), (424, 454), (484, 514), (185, 364), (249, 394), (304, 394), (143, 394), (277, 364), (14, 454), (59, 334), (394, 424), (210, 484), (334, 364), (277, 394), (14, 484), (29, 210), (249, 277), (98, 364), (143, 277), (14, 29), (334, 394), (29, 185), (29, 304), (29, 249), (185, 304)]}]}
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 53, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 54, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 55, 'instruction': 'leaq\t.L.str.0x111(%rip), %rdx'}, {'instIndex': 56, 'instruction': 'leaq\t.L.str.0x112(%rip), %rcx'}, {'instIndex': 57, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 58, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 59, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 60, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 61, 'instruction': 'leaq\t.L.str.0x101(%rip), %rdx'}, {'instIndex': 62, 'instruction': 'leaq\t.L.str.0xf9(%rip), %rcx'}, {'instIndex': 63, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 64, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 65, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 66, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 67, 'instruction': 'leaq\t.L.str.0x102(%rip), %rdx'}, {'instIndex': 68, 'instruction': 'leaq\t.L.str.0xfd(%rip), %rcx'}, {'instIndex': 69, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 70, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 71, 'instruction': 'movq\t0x18(%rsp), %rdi'}, {'instIndex': 72, 'instruction': 'leaq\t.L.str.0x113(%rip), %rsi'}, {'instIndex': 73, 'instruction': 'leaq\t.L.str.0x7a(%rip), %rdx'}, {'instIndex': 74, 'instruction': 'xorl\t%ecx, %ecx'}, {'instIndex': 75, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 76, 'instruction': 'callq\tmov_write_string_tag'}, {'instIndex': 77, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 78, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 79, 'instruction': 'leaq\t.L.str.0x114(%rip), %rdx'}, {'instIndex': 80, 'instruction': 'leaq\t.L.str.0xf7(%rip), %rcx'}, {'instIndex': 81, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 82, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 83, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 84, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 85, 'instruction': 'leaq\t.L.str.0x106(%rip), %rdx'}, {'instIndex': 86, 'instruction': 'leaq\t.L.str.0xf5(%rip), %rcx'}, {'instIndex': 87, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 88, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 89, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 90, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 91, 'instruction': 'leaq\t.L.str.0x107(%rip), %rdx'}, {'instIndex': 92, 'instruction': 'leaq\t.L.str.0xfb(%rip), %rcx'}, {'instIndex': 93, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 94, 'instruction': 'callq\tmov_write_string_metadata'}]}]}
The case of compiler clang with optimization O0.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O0/movenc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O0/movenc.s---mov_write_ilst_tag---before
function id: 106
function flag: True
There are 146 instructions for function: mov_write_ilst_tag in intel assembly files.
[{'modifyIndex': 1, 'line': {'after': {'start': '1858', 'end': 1865}, 'before': {'start': '1858', 'end': 1864}}}]
[{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 53, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 54, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 55, 'instruction': 'leaq\t.L.str.0x111(%rip), %rdx'}, {'instIndex': 56, 'instruction': 'leaq\t.L.str.0x112(%rip), %rcx'}, {'instIndex': 57, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 58, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 59, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 60, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 61, 'instruction': 'leaq\t.L.str.0x101(%rip), %rdx'}, {'instIndex': 62, 'instruction': 'leaq\t.L.str.0xf9(%rip), %rcx'}, {'instIndex': 63, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 64, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 65, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 66, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 67, 'instruction': 'leaq\t.L.str.0x102(%rip), %rdx'}, {'instIndex': 68, 'instruction': 'leaq\t.L.str.0xfd(%rip), %rcx'}, {'instIndex': 69, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 70, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 71, 'instruction': 'movq\t0x18(%rsp), %rdi'}, {'instIndex': 72, 'instruction': 'leaq\t.L.str.0x113(%rip), %rsi'}, {'instIndex': 73, 'instruction': 'leaq\t.L.str.0x7a(%rip), %rdx'}, {'instIndex': 74, 'instruction': 'xorl\t%ecx, %ecx'}, {'instIndex': 75, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 76, 'instruction': 'callq\tmov_write_string_tag'}, {'instIndex': 77, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 78, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 79, 'instruction': 'leaq\t.L.str.0x114(%rip), %rdx'}, {'instIndex': 80, 'instruction': 'leaq\t.L.str.0xf7(%rip), %rcx'}, {'instIndex': 81, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 82, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 83, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 84, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 85, 'instruction': 'leaq\t.L.str.0x106(%rip), %rdx'}, {'instIndex': 86, 'instruction': 'leaq\t.L.str.0xf5(%rip), %rcx'}, {'instIndex': 87, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 88, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 89, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 90, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 91, 'instruction': 'leaq\t.L.str.0x107(%rip), %rdx'}, {'instIndex': 92, 'instruction': 'leaq\t.L.str.0xfb(%rip), %rcx'}, {'instIndex': 93, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 94, 'instruction': 'callq\tmov_write_string_metadata'}]}]
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O0/movenc.o
Unpatched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O0/movenc.o---before
The extraction of function: mov_write_ilst_tag
Analyzing the binaries to generate subCFGs from patched function ...
It has 2848 nodes and 5956 edges in CFGFast
The subCFGs and subCGs Analysis have been finished ...
There are 146 instructions in binary file.
[4244155, 4244190, 4244225, 4244260, 4244292, 4244327, 4244362]
The execution time of patched subCFG information extraction via angr: 0:00:03.727718
{'mov_write_ilst_tag': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 12, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c38a>, <DisassemblerInsn "mov" for 0x40c38f>, <DisassemblerInsn "lea" for 0x40c394>, <DisassemblerInsn "lea" for 0x40c39b>, <DisassemblerInsn "mov" for 0x40c3a2>, <DisassemblerInsn "call" for 0x40c3a8>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2bb>, <DisassemblerInsn "mov" for 0x40c2c0>, <DisassemblerInsn "lea" for 0x40c2c5>, <DisassemblerInsn "lea" for 0x40c2cc>, <DisassemblerInsn "mov" for 0x40c2d3>, <DisassemblerInsn "call" for 0x40c2d9>]'}, {'block_Idx': 11, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c367>, <DisassemblerInsn "mov" for 0x40c36c>, <DisassemblerInsn "lea" for 0x40c371>, <DisassemblerInsn "lea" for 0x40c378>, <DisassemblerInsn "mov" for 0x40c37f>, <DisassemblerInsn "call" for 0x40c385>]'}, {'block_Idx': 13, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3ad>, <DisassemblerInsn "mov" for 0x40c3b2>, <DisassemblerInsn "lea" for 0x40c3b7>, <DisassemblerInsn "lea" for 0x40c3be>, <DisassemblerInsn "mov" for 0x40c3c5>, <DisassemblerInsn "call" for 0x40c3cb>]'}, {'block_Idx': 9, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c324>, <DisassemblerInsn "lea" for 0x40c329>, <DisassemblerInsn "lea" for 0x40c330>, <DisassemblerInsn "xor" for 0x40c337>, <DisassemblerInsn "mov" for 0x40c339>, <DisassemblerInsn "call" for 0x40c33f>]'}, {'block_Idx': 7, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2de>, <DisassemblerInsn "mov" for 0x40c2e3>, <DisassemblerInsn "lea" for 0x40c2e8>, <DisassemblerInsn "lea" for 0x40c2ef>, <DisassemblerInsn "mov" for 0x40c2f6>, <DisassemblerInsn "call" for 0x40c2fc>]'}, {'block_Idx': 10, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c344>, <DisassemblerInsn "mov" for 0x40c349>, <DisassemblerInsn "lea" for 0x40c34e>, <DisassemblerInsn "lea" for 0x40c355>, <DisassemblerInsn "mov" for 0x40c35c>, <DisassemblerInsn "call" for 0x40c362>]'}, {'block_Idx': 8, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c301>, <DisassemblerInsn "mov" for 0x40c306>, <DisassemblerInsn "lea" for 0x40c30b>, <DisassemblerInsn "lea" for 0x40c312>, <DisassemblerInsn "mov" for 0x40c319>, <DisassemblerInsn "call" for 0x40c31f>]'}, {'block_Idx': 5, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c298>, <DisassemblerInsn "mov" for 0x40c29d>, <DisassemblerInsn "lea" for 0x40c2a2>, <DisassemblerInsn "lea" for 0x40c2a9>, <DisassemblerInsn "mov" for 0x40c2b0>, <DisassemblerInsn "call" for 0x40c2b6>]'}], 'cfg_block_detailed_info': [{'block_Idx': 12, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x365c]>', '<lea~~rcx, [rip + 0x3611]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3765]>', '<lea~~rcx, [rip + 0x3763]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 11, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x367a]>', '<lea~~rcx, [rip + 0x3611]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 13, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x368b]>', '<lea~~rcx, [rip + 0x3689]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 9, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<lea~~rsi, [rip + 0x370f]>', '<lea~~rdx, [rip + 0x31b2]>', '<xor~~ecx, ecx>', '<mov~~r8d, 1>', '<call~~0x40bdf0>']}, {'block_Idx': 7, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36e7]>', '<lea~~rcx, [rip + 0x36b2]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 10, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36ef]>', '<lea~~rcx, [rip + 0x363f]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 8, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36c9]>', '<lea~~rcx, [rip + 0x36a9]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 5, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3776]>', '<lea~~rcx, [rip + 0x3774]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}], 'cfg_edge_info': [(9, 10), (10, 11), (12, 13), (11, 12), (6, 7), (8, 9), (5, 6), (7, 8)]}]}
{'mov_write_ilst_tag': [4244155, 4244190, 4244225, 4244260, 4244292, 4244327, 4244362]}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O0/movenc.o---before
The extraction of function: mov_write_ilst_tag
[4244155, 4244190, 4244225, 4244260, 4244292, 4244327, 4244362]
Analyzing the binaries to generate subCFGs starting from patched function...
Analyzing the binaries to generate subCDGs starting from patched function...
Analyzing the binaries to generate subDDGs starting from patched function...
It has 693 nodes and 1101 edges in CFGEmulated.
It has 684 nodes and 5292 edges in CDG.
It has 1579 nodes and 2751 edges in DDG.
The subCFGs, subCDGs and subDDGs Analysis have been finished ...
[4244155, 4244190, 4244225, 4244260, 4244292, 4244327, 4244362]
{4243968, 4244225, 4244362, 4244502, 4244120, 4244642, 4244260, 4244397, 4244537, 4244155, 4243904, 4244292, 4244432, 4244050, 4244572, 4244190, 4244327, 4243952, 4244467, 4244085, 4244607}
[0, 29, 334, 304, 4, 14, 424, 489, 509, 98, 364, 6, 59, 210, 688, 185, 454, 550, 558, 277, 394, 249, 2, 143, 514, 519, 547, 484, 552]
The execution time of patched slicing information extraction via angr: 0:02:57.957555
{'mov_write_ilst_tag': [{'patched_tag': 'before', 'cfg_block_info': [{'block_Idx': 0, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40c1c0>, <DisassemblerInsn "mov" for 0x40c1c4>, <DisassemblerInsn "mov" for 0x40c1c9>, <DisassemblerInsn "mov" for 0x40c1ce>, <DisassemblerInsn "mov" for 0x40c1d3>, <DisassemblerInsn "mov" for 0x40c1d8>, <DisassemblerInsn "mov" for 0x40c1dd>, <DisassemblerInsn "xor" for 0x40c1e2>, <DisassemblerInsn "mov" for 0x40c1e4>, <DisassemblerInsn "mov" for 0x40c1e6>, <DisassemblerInsn "call" for 0x40c1eb>]'}, {'block_Idx': 29, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c298>, <DisassemblerInsn "mov" for 0x40c29d>, <DisassemblerInsn "lea" for 0x40c2a2>, <DisassemblerInsn "lea" for 0x40c2a9>, <DisassemblerInsn "mov" for 0x40c2b0>, <DisassemblerInsn "call" for 0x40c2b6>]'}, {'block_Idx': 334, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3d0>, <DisassemblerInsn "mov" for 0x40c3d5>, <DisassemblerInsn "lea" for 0x40c3da>, <DisassemblerInsn "lea" for 0x40c3e1>, <DisassemblerInsn "mov" for 0x40c3e8>, <DisassemblerInsn "call" for 0x40c3ee>]'}, {'block_Idx': 304, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3ad>, <DisassemblerInsn "mov" for 0x40c3b2>, <DisassemblerInsn "lea" for 0x40c3b7>, <DisassemblerInsn "lea" for 0x40c3be>, <DisassemblerInsn "mov" for 0x40c3c5>, <DisassemblerInsn "call" for 0x40c3cb>]'}, {'block_Idx': 4, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c200>, <DisassemblerInsn "mov" for 0x40c205>, <DisassemblerInsn "lea" for 0x40c20a>, <DisassemblerInsn "mov" for 0x40c211>, <DisassemblerInsn "mov" for 0x40c216>, <DisassemblerInsn "mov" for 0x40c21b>, <DisassemblerInsn "movzx" for 0x40c220>, <DisassemblerInsn "mov" for 0x40c223>, <DisassemblerInsn "movzx" for 0x40c228>, <DisassemblerInsn "shl" for 0x40c22c>, <DisassemblerInsn "or" for 0x40c22f>, <DisassemblerInsn "mov" for 0x40c231>, <DisassemblerInsn "movzx" for 0x40c236>, <DisassemblerInsn "shl" for 0x40c23a>, <DisassemblerInsn "or" for 0x40c23d>, <DisassemblerInsn "mov" for 0x40c23f>, <DisassemblerInsn "movzx" for 0x40c244>, <DisassemblerInsn "shl" for 0x40c248>, <DisassemblerInsn "or" for 0x40c24b>, <DisassemblerInsn "call" for 0x40c24d>]'}, {'block_Idx': 14, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c275>, <DisassemblerInsn "mov" for 0x40c27a>, <DisassemblerInsn "lea" for 0x40c27f>, <DisassemblerInsn "lea" for 0x40c286>, <DisassemblerInsn "mov" for 0x40c28d>, <DisassemblerInsn "call" for 0x40c293>]'}, {'block_Idx': 424, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c439>, <DisassemblerInsn "mov" for 0x40c43e>, <DisassemblerInsn "lea" for 0x40c443>, <DisassemblerInsn "lea" for 0x40c44a>, <DisassemblerInsn "mov" for 0x40c451>, <DisassemblerInsn "call" for 0x40c457>]'}, {'block_Idx': 489, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40b980>, <DisassemblerInsn "mov" for 0x40b984>, <DisassemblerInsn "mov" for 0x40b989>, <DisassemblerInsn "mov" for 0x40b98e>, <DisassemblerInsn "mov" for 0x40b993>, <DisassemblerInsn "mov" for 0x40b998>, <DisassemblerInsn "mov" for 0x40b99d>, <DisassemblerInsn "mov" for 0x40b9a5>, <DisassemblerInsn "mov" for 0x40b9ae>, <DisassemblerInsn "mov" for 0x40b9b3>, <DisassemblerInsn "mov" for 0x40b9ba>, <DisassemblerInsn "xor" for 0x40b9bf>, <DisassemblerInsn "mov" for 0x40b9c1>, <DisassemblerInsn "xor" for 0x40b9c3>, <DisassemblerInsn "call" for 0x40b9c5>]'}, {'block_Idx': 509, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40bace>, <DisassemblerInsn "add" for 0x40bad2>, <DisassemblerInsn "ret" for 0x40bad6>]'}, {'block_Idx': 98, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2de>, <DisassemblerInsn "mov" for 0x40c2e3>, <DisassemblerInsn "lea" for 0x40c2e8>, <DisassemblerInsn "lea" for 0x40c2ef>, <DisassemblerInsn "mov" for 0x40c2f6>, <DisassemblerInsn "call" for 0x40c2fc>]'}, {'block_Idx': 364, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c3f3>, <DisassemblerInsn "mov" for 0x40c3f8>, <DisassemblerInsn "lea" for 0x40c3fd>, <DisassemblerInsn "lea" for 0x40c404>, <DisassemblerInsn "mov" for 0x40c40b>, <DisassemblerInsn "call" for 0x40c411>]'}, {'block_Idx': 6, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c252>, <DisassemblerInsn "mov" for 0x40c257>, <DisassemblerInsn "lea" for 0x40c25c>, <DisassemblerInsn "lea" for 0x40c263>, <DisassemblerInsn "mov" for 0x40c26a>, <DisassemblerInsn "call" for 0x40c270>]'}, {'block_Idx': 59, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c2bb>, <DisassemblerInsn "mov" for 0x40c2c0>, <DisassemblerInsn "lea" for 0x40c2c5>, <DisassemblerInsn "lea" for 0x40c2cc>, <DisassemblerInsn "mov" for 0x40c2d3>, <DisassemblerInsn "call" for 0x40c2d9>]'}, {'block_Idx': 210, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c344>, <DisassemblerInsn "mov" for 0x40c349>, <DisassemblerInsn "lea" for 0x40c34e>, <DisassemblerInsn "lea" for 0x40c355>, <DisassemblerInsn "mov" for 0x40c35c>, <DisassemblerInsn "call" for 0x40c362>]'}, {'block_Idx': 688, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40bed3>, <DisassemblerInsn "mov" for 0x40bed7>, <DisassemblerInsn "add" for 0x40bedb>, <DisassemblerInsn "ret" for 0x40bedf>]'}, {'block_Idx': 185, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c324>, <DisassemblerInsn "lea" for 0x40c329>, <DisassemblerInsn "lea" for 0x40c330>, <DisassemblerInsn "xor" for 0x40c337>, <DisassemblerInsn "mov" for 0x40c339>, <DisassemblerInsn "call" for 0x40c33f>]'}, {'block_Idx': 454, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c45c>, <DisassemblerInsn "mov" for 0x40c461>, <DisassemblerInsn "lea" for 0x40c466>, <DisassemblerInsn "lea" for 0x40c46d>, <DisassemblerInsn "mov" for 0x40c474>, <DisassemblerInsn "call" for 0x40c47a>]'}, {'block_Idx': 550, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c4b6>, <DisassemblerInsn "mov" for 0x40c4bb>, <DisassemblerInsn "call" for 0x40c4bf>]'}, {'block_Idx': 558, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40baca>, <DisassemblerInsn "mov" for 0x40bace>, <DisassemblerInsn "add" for 0x40bad2>, <DisassemblerInsn "ret" for 0x40bad6>]'}, {'block_Idx': 277, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c38a>, <DisassemblerInsn "mov" for 0x40c38f>, <DisassemblerInsn "lea" for 0x40c394>, <DisassemblerInsn "lea" for 0x40c39b>, <DisassemblerInsn "mov" for 0x40c3a2>, <DisassemblerInsn "call" for 0x40c3a8>]'}, {'block_Idx': 394, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c416>, <DisassemblerInsn "mov" for 0x40c41b>, <DisassemblerInsn "lea" for 0x40c420>, <DisassemblerInsn "lea" for 0x40c427>, <DisassemblerInsn "mov" for 0x40c42e>, <DisassemblerInsn "call" for 0x40c434>]'}, {'block_Idx': 249, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c367>, <DisassemblerInsn "mov" for 0x40c36c>, <DisassemblerInsn "lea" for 0x40c371>, <DisassemblerInsn "lea" for 0x40c378>, <DisassemblerInsn "mov" for 0x40c37f>, <DisassemblerInsn "call" for 0x40c385>]'}, {'block_Idx': 2, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c1f0>, <DisassemblerInsn "mov" for 0x40c1f4>, <DisassemblerInsn "xor" for 0x40c1f9>, <DisassemblerInsn "call" for 0x40c1fb>]'}, {'block_Idx': 143, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c301>, <DisassemblerInsn "mov" for 0x40c306>, <DisassemblerInsn "lea" for 0x40c30b>, <DisassemblerInsn "lea" for 0x40c312>, <DisassemblerInsn "mov" for 0x40c319>, <DisassemblerInsn "call" for 0x40c31f>]'}, {'block_Idx': 514, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c4a2>, <DisassemblerInsn "mov" for 0x40c4a7>, <DisassemblerInsn "mov" for 0x40c4ac>, <DisassemblerInsn "call" for 0x40c4b1>]'}, {'block_Idx': 519, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40c4d0>, <DisassemblerInsn "mov" for 0x40c4d4>, <DisassemblerInsn "mov" for 0x40c4d9>, <DisassemblerInsn "mov" for 0x40c4de>, <DisassemblerInsn "mov" for 0x40c4e3>, <DisassemblerInsn "mov" for 0x40c4e8>, <DisassemblerInsn "lea" for 0x40c4ef>, <DisassemblerInsn "xor" for 0x40c4f6>, <DisassemblerInsn "mov" for 0x40c4f8>, <DisassemblerInsn "xor" for 0x40c4fa>, <DisassemblerInsn "call" for 0x40c4fc>]'}, {'block_Idx': 547, 'blockInsts': '[<DisassemblerInsn "sub" for 0x40bdf0>, <DisassemblerInsn "mov" for 0x40bdf4>, <DisassemblerInsn "mov" for 0x40bdf9>, <DisassemblerInsn "mov" for 0x40bdfe>, <DisassemblerInsn "mov" for 0x40be03>, <DisassemblerInsn "mov" for 0x40be07>, <DisassemblerInsn "mov" for 0x40be0c>, <DisassemblerInsn "cmp" for 0x40be14>, <DisassemblerInsn "je" for 0x40be1a>]'}, {'block_Idx': 484, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40c47f>, <DisassemblerInsn "mov" for 0x40c484>, <DisassemblerInsn "lea" for 0x40c489>, <DisassemblerInsn "lea" for 0x40c490>, <DisassemblerInsn "mov" for 0x40c497>, <DisassemblerInsn "call" for 0x40c49d>]'}, {'block_Idx': 552, 'blockInsts': '[<DisassemblerInsn "mov" for 0x40bed7>, <DisassemblerInsn "add" for 0x40bedb>, <DisassemblerInsn "ret" for 0x40bedf>]'}], 'cfg_block_detailed_info': [{'block_Idx': 0, 'blockInsts': ['<sub~~rsp, 0x38>', '<mov~~qword ptr [rsp + 0x18], rdi>', '<mov~~qword ptr [rsp + 0x10], rsi>', '<mov~~qword ptr [rsp + 8], rdx>', '<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~qword ptr [rsp + 0x20], rax>', '<mov~~rdi, qword ptr [rsp + 0x20]>', '<xor~~eax, eax>', '<mov~~esi, eax>', '<mov~~edx, 1>', '<call~~0x500040>']}, {'block_Idx': 29, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3776]>', '<lea~~rcx, [rip + 0x3774]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 334, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3676]>', '<lea~~rcx, [rip + 0x3674]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 304, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x368b]>', '<lea~~rcx, [rip + 0x3689]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 4, 'blockInsts': ['<mov~~rax, qword ptr [rsp + 0x18]>', '<mov~~qword ptr [rsp + 0x30], rax>', '<lea~~rax, [rip + 0x3809]>', '<mov~~qword ptr [rsp + 0x28], rax>', '<mov~~rdi, qword ptr [rsp + 0x30]>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~esi, byte ptr [rax]>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~eax, byte ptr [rax + 1]>', '<shl~~eax, 8>', '<or~~esi, eax>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~eax, byte ptr [rax + 2]>', '<shl~~eax, 0x10>', '<or~~esi, eax>', '<mov~~rax, qword ptr [rsp + 0x28]>', '<movzx~~eax, byte ptr [rax + 3]>', '<shl~~eax, 0x18>', '<or~~esi, eax>', '<call~~0x5000b0>']}, {'block_Idx': 14, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3741]>', '<lea~~rcx, [rip + 0x36e6]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 424, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3638]>', '<lea~~rcx, [rip + 0x3636]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 489, 'blockInsts': ['<sub~~rsp, 0x68>', '<mov~~qword ptr [rsp + 0x58], rdi>', '<mov~~qword ptr [rsp + 0x50], rsi>', '<mov~~qword ptr [rsp + 0x48], rdx>', '<mov~~qword ptr [rsp + 0x40], rcx>', '<mov~~dword ptr [rsp + 0x3c], r8d>', '<mov~~dword ptr [rsp + 0x34], 0>', '<mov~~qword ptr [rsp + 0x18], 0>', '<mov~~rax, qword ptr [rsp + 0x58]>', '<mov~~rdi, qword ptr [rax + 0x498]>', '<mov~~rsi, qword ptr [rsp + 0x40]>', '<xor~~eax, eax>', '<mov~~edx, eax>', '<xor~~ecx, ecx>', '<call~~0x500068>']}, {'block_Idx': 509, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0x64]>', '<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 98, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36e7]>', '<lea~~rcx, [rip + 0x36b2]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 364, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x365f]>', '<lea~~rcx, [rip + 0x365d]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 6, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3769]>', '<lea~~rcx, [rip + 0x31ec]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 59, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x3765]>', '<lea~~rcx, [rip + 0x3763]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 210, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36ef]>', '<lea~~rcx, [rip + 0x363f]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 688, 'blockInsts': ['<mov~~dword ptr [rsp + 0xc], eax>', '<mov~~eax, dword ptr [rsp + 0xc]>', '<add~~rsp, 0x48>', '<ret~~>']}, {'block_Idx': 185, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<lea~~rsi, [rip + 0x370f]>', '<lea~~rdx, [rip + 0x31b2]>', '<xor~~ecx, ecx>', '<mov~~r8d, 1>', '<call~~0x40bdf0>']}, {'block_Idx': 454, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x361f]>', '<lea~~rcx, [rip + 0x361d]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 550, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<mov~~rsi, qword ptr [rsp]>', '<call~~0x403f10>']}, {'block_Idx': 558, 'blockInsts': ['<mov~~dword ptr [rsp + 0x64], eax>', '<mov~~eax, dword ptr [rsp + 0x64]>', '<add~~rsp, 0x68>', '<ret~~>']}, {'block_Idx': 277, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x365c]>', '<lea~~rcx, [rip + 0x3611]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 394, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x364d]>', '<lea~~rcx, [rip + 0x364b]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 249, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x367a]>', '<lea~~rcx, [rip + 0x3611]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 2, 'blockInsts': ['<mov~~qword ptr [rsp], rax>', '<mov~~rdi, qword ptr [rsp + 0x18]>', '<xor~~esi, esi>', '<call~~0x5000a8>']}, {'block_Idx': 143, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x36c9]>', '<lea~~rcx, [rip + 0x36a9]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 514, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 0x18]>', '<mov~~rsi, qword ptr [rsp + 0x10]>', '<mov~~rdx, qword ptr [rsp + 8]>', '<call~~0x40c4d0>']}, {'block_Idx': 519, 'blockInsts': ['<sub~~rsp, 0x58>', '<mov~~qword ptr [rsp + 0x30], rdi>', '<mov~~qword ptr [rsp + 0x28], rsi>', '<mov~~qword ptr [rsp + 0x20], rdx>', '<mov~~rax, qword ptr [rsp + 0x20]>', '<mov~~rdi, qword ptr [rax + 0x498]>', '<lea~~rsi, [rip + 0x3506]>', '<xor~~eax, eax>', '<mov~~edx, eax>', '<xor~~ecx, ecx>', '<call~~0x500068>']}, {'block_Idx': 547, 'blockInsts': ['<sub~~rsp, 0x48>', '<mov~~qword ptr [rsp + 0x28], rdi>', '<mov~~qword ptr [rsp + 0x20], rsi>', '<mov~~qword ptr [rsp + 0x18], rdx>', '<mov~~dword ptr [rsp + 0x14], ecx>', '<mov~~dword ptr [rsp + 0x10], r8d>', '<mov~~dword ptr [rsp + 0xc], 0>', '<cmp~~qword ptr [rsp + 0x18], 0>', '<je~~0x40bed7>']}, {'block_Idx': 484, 'blockInsts': ['<mov~~rdi, qword ptr [rsp + 8]>', '<mov~~rsi, qword ptr [rsp + 0x18]>', '<lea~~rdx, [rip + 0x360c]>', '<lea~~rcx, [rip + 0x360a]>', '<mov~~r8d, 1>', '<call~~0x40b980>']}, {'block_Idx': 552, 'blockInsts': ['<mov~~eax, dword ptr [rsp + 0xc]>', '<add~~rsp, 0x48>', '<ret~~>']}], 'cfg_edge_info': [(514, 550), (558, 364), (143, 185), (552, 210), (509, 29), (509, 514), (509, 334), (210, 489), (364, 489), (4, 6), (14, 489), (304, 334), (0, 2), (558, 394), (514, 519), (558, 98), (364, 394), (509, 59), (277, 304), (29, 59), (454, 489), (98, 143), (509, 364), (688, 210), (424, 454), (558, 424), (185, 547), (29, 489), (484, 514), (304, 489), (394, 489), (6, 14), (249, 489), (143, 489), (509, 394), (558, 143), (509, 98), (509, 14), (558, 277), (558, 454), (2, 4), (509, 424), (484, 489), (277, 489), (6, 489), (558, 185), (558, 304), (558, 484), (558, 249), (509, 143), (558, 14), (394, 424), (210, 249), (509, 277), (334, 364), (509, 454), (558, 29), (59, 489), (249, 277), (558, 514), (424, 489), (185, 210), (334, 489), (558, 334), (98, 489), (14, 29), (454, 484), (509, 185), (509, 304), (509, 484), (509, 249), (558, 59), (59, 98)], 'cdg_edge_info': [], 'ddg_edge_info': [(185, 249), (29, 514), (249, 334), (304, 334), (185, 514), (143, 334), (59, 210), (0, 14), (29, 59), (185, 59), (249, 364), (210, 424), (98, 277), (277, 334), (14, 424), (143, 364), (59, 185), (59, 304), (59, 249), (29, 98), (98, 304), (185, 98), (14, 143), (2, 4), (210, 454), (59, 514), (364, 484), (98, 334), (29, 454), (185, 210), (364, 514), (59, 98), (249, 304), (29, 484), (185, 484), (143, 185), (143, 304), (14, 364), (143, 249), (249, 514), (185, 29), (304, 514), (0, 2), (143, 514), (210, 394), (59, 454), (277, 304), (14, 394), (98, 210), (277, 514), (59, 484), (98, 484), (210, 277), (364, 454), (98, 185), (143, 98), (59, 29), (98, 249), (14, 277), (334, 514), (29, 424), (98, 29), (185, 424), (98, 514), (29, 143), (185, 143), (304, 454), (98, 59), (210, 334), (143, 210), (185, 454), (14, 334), (249, 484), (304, 484), (394, 484), (143, 484), (277, 454), (210, 364), (59, 424), (4, 6), (143, 29), (364, 394), (59, 143), (394, 514), (334, 454), (277, 484), (29, 364), (98, 143), (98, 454), (143, 59), (364, 424), (334, 484), (424, 484), (29, 394), (185, 394), (14, 210), (0, 4), (249, 424), (304, 424), (424, 514), (143, 424), (210, 304), (210, 249), (59, 364), (14, 185), (14, 304), (14, 249), (29, 277), (185, 277), (249, 454), (210, 514), (394, 454), (0, 6), (143, 454), (277, 424), (14, 514), (454, 484), (59, 394), (98, 394), (14, 59), (334, 424), (454, 514), (29, 334), (185, 334), (98, 424), (59, 277), (14, 98), (304, 364), (424, 454), (484, 514), (185, 364), (249, 394), (304, 394), (143, 394), (277, 364), (14, 454), (59, 334), (394, 424), (210, 484), (334, 364), (277, 394), (14, 484), (29, 210), (249, 277), (98, 364), (143, 277), (14, 29), (334, 394), (29, 185), (29, 304), (29, 249), (185, 304)]}]}
{'mov_write_ilst_tag': [{'modifyIndex': 1, 'patched_tag': 'before', 'insts_info': [{'instIndex': 53, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 54, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 55, 'instruction': 'leaq\t.L.str.0x111(%rip), %rdx'}, {'instIndex': 56, 'instruction': 'leaq\t.L.str.0x112(%rip), %rcx'}, {'instIndex': 57, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 58, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 59, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 60, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 61, 'instruction': 'leaq\t.L.str.0x101(%rip), %rdx'}, {'instIndex': 62, 'instruction': 'leaq\t.L.str.0xf9(%rip), %rcx'}, {'instIndex': 63, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 64, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 65, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 66, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 67, 'instruction': 'leaq\t.L.str.0x102(%rip), %rdx'}, {'instIndex': 68, 'instruction': 'leaq\t.L.str.0xfd(%rip), %rcx'}, {'instIndex': 69, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 70, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 71, 'instruction': 'movq\t0x18(%rsp), %rdi'}, {'instIndex': 72, 'instruction': 'leaq\t.L.str.0x113(%rip), %rsi'}, {'instIndex': 73, 'instruction': 'leaq\t.L.str.0x7a(%rip), %rdx'}, {'instIndex': 74, 'instruction': 'xorl\t%ecx, %ecx'}, {'instIndex': 75, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 76, 'instruction': 'callq\tmov_write_string_tag'}, {'instIndex': 77, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 78, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 79, 'instruction': 'leaq\t.L.str.0x114(%rip), %rdx'}, {'instIndex': 80, 'instruction': 'leaq\t.L.str.0xf7(%rip), %rcx'}, {'instIndex': 81, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 82, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 83, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 84, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 85, 'instruction': 'leaq\t.L.str.0x106(%rip), %rdx'}, {'instIndex': 86, 'instruction': 'leaq\t.L.str.0xf5(%rip), %rcx'}, {'instIndex': 87, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 88, 'instruction': 'callq\tmov_write_string_metadata'}, {'instIndex': 89, 'instruction': 'movq\t8(%rsp), %rdi'}, {'instIndex': 90, 'instruction': 'movq\t0x18(%rsp), %rsi'}, {'instIndex': 91, 'instruction': 'leaq\t.L.str.0x107(%rip), %rdx'}, {'instIndex': 92, 'instruction': 'leaq\t.L.str.0xfb(%rip), %rcx'}, {'instIndex': 93, 'instruction': 'movl\t$1, %r8d'}, {'instIndex': 94, 'instruction': 'callq\tmov_write_string_metadata'}]}]}
The case of compiler clang with optimization O1.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O1/movenc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O1/movenc.s---mov_write_ilst_tag---before
Assembly file error information: 'utf-8' codec can't decode byte 0xf0 in position 7358: invalid continuation byte
Traceback (most recent call last):
  File "extract_patched_slicing_info.py", line 807, in patched_commit_patched_tag_handle
    = extract_patched_assembly_code_from_debug_file(assembly_file, func_name,
  File "extract_patched_slicing_info.py", line 131, in extract_patched_assembly_code_from_debug_file
    lines = af.readlines()
  File "/home/xu/anaconda3/envs/bingo/lib/python3.8/codecs.py", line 322, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 7358: invalid continuation byte

/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O1/movenc.o
Unpatched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O1/movenc.o---before
The extraction of function: mov_write_ilst_tag
There is no function: mov_write_ilst_tag in binary /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O1/movenc.o
The execution time of patched subCFG information extraction via angr: 0:00:01.697547
Empty patched sub graph information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O1/movenc.o.
{}
{}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O1/movenc.o---before
The execution time of patched slicing information extraction via angr: 0:00:00.332521
{}
Empty patched slicing information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O1/movenc.o.
{'mov_write_ilst_tag': []}
The case of compiler clang with optimization O2.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O2/movenc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O2/movenc.s---mov_write_ilst_tag---before
Assembly file error information: 'utf-8' codec can't decode byte 0xf0 in position 2032: invalid continuation byte
Traceback (most recent call last):
  File "extract_patched_slicing_info.py", line 807, in patched_commit_patched_tag_handle
    = extract_patched_assembly_code_from_debug_file(assembly_file, func_name,
  File "extract_patched_slicing_info.py", line 131, in extract_patched_assembly_code_from_debug_file
    lines = af.readlines()
  File "/home/xu/anaconda3/envs/bingo/lib/python3.8/codecs.py", line 322, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 2032: invalid continuation byte

/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O2/movenc.o
Unpatched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O2/movenc.o---before
The extraction of function: mov_write_ilst_tag
There is no function: mov_write_ilst_tag in binary /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O2/movenc.o
The execution time of patched subCFG information extraction via angr: 0:00:00.339023
Empty patched sub graph information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O2/movenc.o.
{}
{}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O2/movenc.o---before
The execution time of patched slicing information extraction via angr: 0:00:00.336924
{}
Empty patched slicing information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O2/movenc.o.
{'mov_write_ilst_tag': []}
The case of compiler clang with optimization O3.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O3/movenc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O3/movenc.s---mov_write_ilst_tag---before
Assembly file error information: 'utf-8' codec can't decode byte 0xf0 in position 4014: invalid continuation byte
Traceback (most recent call last):
  File "extract_patched_slicing_info.py", line 807, in patched_commit_patched_tag_handle
    = extract_patched_assembly_code_from_debug_file(assembly_file, func_name,
  File "extract_patched_slicing_info.py", line 131, in extract_patched_assembly_code_from_debug_file
    lines = af.readlines()
  File "/home/xu/anaconda3/envs/bingo/lib/python3.8/codecs.py", line 322, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 4014: invalid continuation byte

/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O3/movenc.o
Unpatched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O3/movenc.o---before
The extraction of function: mov_write_ilst_tag
There is no function: mov_write_ilst_tag in binary /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O3/movenc.o
The execution time of patched subCFG information extraction via angr: 0:00:00.340201
Empty patched sub graph information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O3/movenc.o.
{}
{}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O3/movenc.o---before
The execution time of patched slicing information extraction via angr: 0:00:00.338250
{}
Empty patched slicing information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/O3/movenc.o.
{'mov_write_ilst_tag': []}
The case of compiler clang with optimization Os.
Patched source code file: movenc.c
Patched function: 1---static int mov_write_ilst_tag 
/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/Os/movenc.s
The extraction of patched assembly codes from file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/Os/movenc.s---mov_write_ilst_tag---before
Assembly file error information: 'utf-8' codec can't decode byte 0xf0 in position 945: invalid continuation byte
Traceback (most recent call last):
  File "extract_patched_slicing_info.py", line 807, in patched_commit_patched_tag_handle
    = extract_patched_assembly_code_from_debug_file(assembly_file, func_name,
  File "extract_patched_slicing_info.py", line 131, in extract_patched_assembly_code_from_debug_file
    lines = af.readlines()
  File "/home/xu/anaconda3/envs/bingo/lib/python3.8/codecs.py", line 322, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 945: invalid continuation byte

/home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/Os/movenc.o
Unpatched information:
The extraction of assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/Os/movenc.o---before
The extraction of function: mov_write_ilst_tag
There is no function: mov_write_ilst_tag in binary /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/Os/movenc.o
The execution time of patched subCFG information extraction via angr: 0:00:00.316672
Empty patched sub graph information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/Os/movenc.o.
{}
{}
The extraction of slicing assembly code from binary: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/Os/movenc.o---before
The execution time of patched slicing information extraction via angr: 0:00:00.318102
{}
Empty patched slicing information from binary file: /home/xu/SoftwarePatch/judged/negatives/divided/5/libav.libav/565e0c6d866ce08d4b06427456d3d1f4fd856e9c/clang_before/Os/movenc.o.
{'mov_write_ilst_tag': []}
